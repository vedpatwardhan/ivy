Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Torch", "Pointwise ops", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 100, 120, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 244, 247, 278, 284, 303, 308, 322, 394, 396, 406, 421, 424, 446, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 446], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 244, 285, 414, 415, 417, 418, 446, 453, 454, 455, 456, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 489, 490], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "base": [0, 19, 27, 30, 32, 38, 54, 81, 91, 100, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 184, 206, 217, 218, 219, 220, 232, 244, 269, 292, 299, 308, 426, 427, 428, 430, 434, 435, 453, 454, 455, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "object": [0, 40, 43, 81, 87, 100, 117, 134, 179, 308, 394, 397, 399, 401, 402, 403, 408, 409, 410, 411, 414, 420, 458, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 100, 101, 102, 103, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 308, 309, 414, 415, 417, 418, 446, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 81, 82, 414, 418], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 67, 68, 70, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 112, 113, 114, 117, 120, 134, 143, 144, 152, 153, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 272, 275, 279, 285, 287, 290, 291, 292, 293, 298, 299, 305, 308, 311, 313, 315, 316, 317, 323, 324, 326, 329, 331, 332, 334, 336, 338, 340, 341, 342, 343, 344, 345, 354, 356, 359, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 426, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456, 457, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 134, 143, 158, 162, 166, 178, 244, 291, 456, 457, 479, 480], "kwarg": [0, 4, 38, 40, 42, 134, 143, 158, 162, 166, 244, 284, 456, 457, 479, 480], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 133, 134, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 456, 457, 467, 476, 477, 483, 487], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 100, 111, 118, 119, 121, 133, 134, 143, 167, 168, 172, 174, 244, 268, 275, 279, 286, 288, 394, 395, 404, 405, 446], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 78, 79, 81, 82, 100, 125, 134, 143, 144, 158, 162, 166, 184, 188, 189, 208, 241, 244, 246, 247, 251, 259, 266, 284, 291, 332, 335, 344, 374, 383, 394, 400, 412, 413, 434, 436, 441, 449, 451, 456, 457, 479, 480], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 80, 81, 92, 96, 97, 100, 118, 119, 134, 153, 177, 184, 233, 244, 249, 308, 311, 313, 315, 317, 345, 363, 364, 394, 400, 406, 434, 440, 442, 446, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 456, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 82, 83, 85, 87, 88, 89, 92, 93, 95, 99, 100, 109, 111, 125, 134, 143, 144, 153, 168, 172, 177, 178, 184, 210, 238, 244, 259, 266, 267, 302, 308, 311, 315, 324, 329, 332, 340, 343, 345, 349, 363, 367, 374, 379, 382, 385, 390, 391, 392, 393, 394, 396, 406, 407, 414, 415, 416, 417, 418, 421, 425, 426, 427, 429, 434, 439, 440, 441, 442, 443, 444, 445, 446, 452, 456, 457, 467, 475, 478, 483, 487], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 70, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 115, 117, 120, 121, 133, 134, 143, 144, 154, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 174, 176, 177, 178, 184, 233, 244, 246, 256, 257, 259, 266, 267, 268, 274, 278, 286, 287, 288, 290, 291, 306, 308, 311, 312, 313, 315, 316, 317, 319, 321, 322, 324, 326, 328, 332, 343, 345, 347, 349, 354, 362, 363, 367, 368, 370, 372, 373, 374, 376, 379, 381, 383, 384, 386, 394, 399, 400, 401, 402, 407, 408, 409, 410, 411, 414, 415, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 456, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 244, 305, 446], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 78, 79, 81, 82, 83, 85, 88, 89, 93, 95, 99, 184, 210, 244, 271, 296, 324, 329, 374, 382], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 100, 106, 134, 184, 188, 207, 232, 244, 251, 278, 299, 370, 371, 372, 373, 394, 405, 421, 422, 423, 425, 434, 436, 438, 440, 442, 446, 479, 480], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 100, 112, 113, 114, 134, 143, 144, 176, 177, 178, 244, 269, 270, 289, 292, 293, 294, 298, 299, 412, 413, 481, 482], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 134, 153, 163, 164, 175, 176, 177, 178, 184, 192, 244, 245, 292, 293, 294, 295, 308, 311, 313, 314, 315, 316, 317, 345, 347, 354, 356, 359, 362, 394, 395, 404, 405, 406, 410, 411, 414, 419, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434, 440, 442, 467, 476, 483, 484, 485, 486, 487, 488], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 143, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 404, 405, 406, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 456, 457, 483, 487], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 118, 119, 134, 153, 154, 156, 168, 169, 170, 171, 172, 177, 179, 181, 182, 184, 188, 189, 193, 194, 195, 198, 199, 200, 201, 202, 206, 208, 210, 211, 215, 226, 227, 229, 234, 241, 244, 248, 249, 255, 256, 263, 266, 270, 281, 296, 302, 303, 304, 324, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 356, 358, 363, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 440, 441, 443, 444, 446], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 108, 125, 134, 153, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 206, 207, 208, 217, 218, 220, 221, 223, 224, 228, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 278, 308, 311, 313, 315, 316, 317, 345, 346, 347, 354, 356, 359, 360, 362, 363, 367, 368, 370, 371, 372, 373, 374, 378, 379, 383, 384, 385, 386, 390, 391, 392, 394, 406, 407, 414, 417, 418, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 324, 330, 446, 452], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 244, 303, 434, 435, 446], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 244, 303, 446], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 98, 99, 100, 106, 108, 115, 134, 153, 154, 155, 156, 159, 160, 168, 172, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 223, 226, 227, 229, 231, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 287, 296, 300, 302, 303, 304, 306, 307, 308, 312, 314, 319, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 400, 404, 405, 406, 412, 413, 414, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 478], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 115, 117, 120, 122, 123, 125, 129, 134, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 174, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 252, 253, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 283, 286, 287, 288, 290, 291, 296, 300, 302, 303, 304, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 396, 406, 407, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 467, 475, 478], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 70, 72, 73, 74, 75, 77, 80, 81, 88, 89, 92, 94, 95, 99, 100, 106, 134, 153, 154, 156, 168, 170, 172, 179, 184, 188, 189, 191, 192, 194, 195, 198, 199, 201, 202, 206, 208, 210, 211, 215, 220, 226, 227, 229, 234, 241, 244, 248, 249, 252, 253, 256, 263, 266, 281, 296, 302, 324, 325, 327, 328, 330, 331, 332, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 353, 354, 356, 358, 359, 360, 363, 365, 366, 368, 370, 371, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 387, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 443, 444, 446], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 70, 72, 73, 74, 75, 76, 77, 81, 82, 86, 90, 91, 95, 96, 97, 98, 99, 100, 106, 117, 134, 136, 139, 143, 146, 150, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 177, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 206, 207, 208, 211, 217, 218, 220, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 248, 249, 252, 253, 255, 256, 257, 263, 266, 267, 272, 281, 287, 290, 291, 296, 302, 303, 304, 308, 310, 311, 315, 316, 324, 327, 328, 330, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 394, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 446, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 118, 119, 134, 154, 168, 169, 170, 171, 172, 174, 177, 181, 184, 188, 189, 193, 194, 195, 198, 199, 200, 201, 202, 206, 208, 210, 211, 215, 226, 227, 229, 234, 241, 244, 248, 249, 255, 256, 263, 266, 270, 288, 296, 302, 303, 304, 324, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 358, 363, 365, 366, 370, 371, 372, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 387, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 440, 441, 443, 444, 446], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 453, 454, 455, 483, 486, 488], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 414, 415, 417, 418], "noqa": [0, 4, 5, 81, 92, 184, 188, 194, 199, 202, 234, 241, 345, 348, 374, 378, 379, 383, 434, 436], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 70, 71, 72, 75, 77, 78, 79, 81, 82, 87, 91, 92, 96, 97, 100, 104, 105, 106, 110, 111, 116, 118, 119, 121, 124, 129, 133, 134, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 230, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 246, 248, 251, 252, 258, 259, 265, 267, 276, 277, 278, 280, 281, 282, 283, 285, 290, 291, 292, 293, 294, 297, 298, 299, 307, 308, 310, 311, 313, 315, 316, 317, 319, 322, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 456, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 100, 118, 119, 446], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 81, 92, 134, 153, 184, 185, 228, 232, 345, 353, 361, 362, 363, 366, 374, 378, 385, 426, 427, 428, 430, 434, 437, 439, 440, 441, 442], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 345, 354, 365, 367, 368, 412, 413, 414, 418, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 481, 482], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 78, 79, 81, 83, 93, 134, 179, 184, 188, 189, 204, 208, 211, 216, 241, 244, 245, 259, 260, 261, 262, 263, 266, 273, 280, 281, 282, 283, 298, 299, 308, 312, 332, 335, 344, 374, 383, 394, 400, 404, 412, 413, 414, 418, 434, 436, 443, 446], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 100, 110, 134, 143, 178, 184, 192, 244, 251, 278, 308, 322, 390, 391, 392, 456, 457, 479, 480, 483, 487, 489, 490], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 308, 314, 426, 427, 428, 430, 446], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 81, 82, 84, 88, 90, 91, 94, 96, 97, 98, 100, 106, 108, 111, 134, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 172, 174, 177, 178, 179, 184, 233, 244, 246, 256, 266, 267, 273, 306, 324, 330, 345, 349, 354, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 385, 386, 389, 394, 399, 401, 402, 408, 409, 410, 411, 421, 422, 423, 426, 427, 428, 430, 431, 432, 434, 435, 439, 441, 443, 444, 445], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 244, 249, 332, 341, 342], "associ": [0, 5, 19, 28, 30, 55, 184, 188, 228, 345, 356, 359, 369], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 70, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 110, 112, 113, 114, 121, 133, 134, 153, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 246, 253, 256, 257, 258, 264, 266, 267, 285, 287, 290, 291, 298, 299, 308, 319, 332, 335, 338, 339, 344, 345, 354, 356, 359, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 387, 394, 395, 400, 405, 406, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "str": [0, 5, 33, 34, 81, 92, 100, 104, 110, 111, 112, 113, 116, 117, 120, 121, 122, 123, 126, 127, 128, 133, 134, 150, 153, 154, 156, 159, 160, 161, 162, 178, 244, 246, 258, 260, 261, 262, 285, 290, 291, 332, 333, 335, 337, 338, 339, 345, 360, 394, 400, 434, 435], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 308, 312, 446, 452], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 244, 246], "i": [0, 5, 19, 21, 22, 38, 41, 43, 81, 82, 92, 184, 185, 192, 196, 198, 200, 208, 209, 212, 226, 227, 229, 232, 233, 244, 248, 249, 308, 311, 313, 315, 316, 317, 345, 347, 353, 356, 359, 362, 363, 366, 368, 374, 386, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 80, 81, 92, 100, 105, 125, 134, 150, 184, 185, 192, 196, 198, 200, 206, 208, 209, 212, 217, 219, 226, 227, 229, 232, 233, 308, 311, 313, 315, 316, 317, 345, 347, 353, 356, 359, 362, 363, 368, 374, 386, 414, 417, 418, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 81, 82, 92, 100, 107, 109, 111, 134, 163, 164, 165, 166, 178, 184, 188, 244, 284, 287, 290, 291, 345, 353, 354, 358, 360, 367, 368, 374, 378, 379, 383, 385, 421, 422, 424, 426, 427, 428, 429, 430, 434, 435, 446], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 112, 113, 114, 115, 134, 143, 144, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 252, 253, 256, 257, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 281, 283, 284, 285, 287, 289, 290, 291, 294, 296, 298, 299, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 354, 356, 359, 360, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 400, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 67, 68, 78, 79, 100, 118, 119, 446], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 446], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 446], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 81, 87, 184, 188, 192, 213, 217, 218, 220, 221, 228, 233, 235, 236, 241, 244, 259, 280, 284, 285, 345, 353, 390, 391, 392, 393, 434, 439, 441, 467, 478, 479, 480], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 134, 153, 244, 260, 261, 262, 414, 415], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 70, 72, 73, 74, 75, 76, 77, 80, 100, 116, 134, 143, 144, 169, 173, 176, 177, 178, 179, 181, 183, 184, 189, 194, 199, 202, 208, 211, 226, 227, 229, 234, 244, 266, 269, 270, 284, 290, 291, 292, 293, 298, 299, 308, 310, 311, 315, 316, 332, 338, 340, 341, 343, 344, 345, 348, 349, 354, 370, 371, 374, 375, 378, 379, 381, 383, 387, 390, 391, 392, 393, 394, 395, 397, 403, 404, 405, 407, 412, 413, 421, 422, 423, 424, 426, 427, 428, 434, 435, 443, 444, 446, 467, 475, 478, 479, 480, 481, 482, 483, 485, 486], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 134, 178, 244, 289, 294, 305, 308, 312, 394, 395, 400, 404, 405, 467, 478, 479, 480, 483, 487], "nativ": [0, 6, 33, 35, 40, 41, 81, 93, 100, 104, 105, 110, 134, 150, 151, 152, 153, 154, 173, 180, 183, 244, 278, 280, 283, 456, 457], "native_arrai": [0, 6, 12, 70, 72, 73, 74, 75, 76, 77, 81, 92, 134, 156, 172, 184, 189, 194, 199, 208, 211, 226, 227, 229, 244, 249, 255, 256, 263, 266, 302, 303, 304, 332, 335, 338, 339, 344, 345, 347, 348, 349, 365, 370, 371, 373, 374, 375, 378, 379, 384, 387, 412, 413, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 443, 444], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 70, 72, 73, 74, 75, 77, 81, 82, 89, 90, 91, 92, 94, 95, 99, 100, 106, 117, 134, 138, 141, 143, 148, 153, 154, 156, 158, 162, 166, 168, 171, 172, 177, 179, 184, 186, 187, 188, 189, 192, 194, 195, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 215, 217, 218, 219, 220, 226, 227, 229, 232, 234, 235, 236, 241, 244, 248, 249, 255, 256, 263, 266, 267, 281, 287, 290, 291, 296, 299, 302, 303, 304, 306, 324, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 352, 356, 358, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 394, 406, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 133, 134, 150, 151, 152, 153, 154, 156, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 278, 280, 281, 282, 283, 287, 290, 291, 292, 293, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 319, 321, 324, 328, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 396, 400, 404, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 81, 83, 93, 244, 303], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 100, 106, 109, 115, 134, 153, 154, 165, 169, 173, 178, 181, 183, 184, 194, 210, 211, 212, 213, 214, 215, 223, 224, 244, 245, 248, 249, 256, 259, 263, 265, 271, 278, 280, 281, 283, 284, 296, 306, 308, 311, 312, 313, 314, 315, 316, 317, 345, 346, 354, 363, 368, 374, 384, 390, 391, 392, 393, 394, 395, 396, 400, 404, 405, 406, 407, 414, 415, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456, 457, 479, 480, 483, 484, 485, 486, 487, 488], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 434, 440, 442], "dict": [0, 12, 32, 41, 42, 134, 143, 144, 153, 156, 159, 160, 161, 162, 244, 246, 260, 261, 262, 394, 396, 397, 400, 403, 406, 407], "previous": [0, 12, 18, 21, 27, 28, 38, 244, 251], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 81, 82, 100, 106, 109, 112, 113, 114, 134, 153, 184, 212, 213, 214, 244, 250, 305, 308, 314, 319, 345, 346, 348, 367, 368, 390, 391, 392, 394, 407, 421, 422, 423, 425, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 100, 106, 125, 134, 179, 184, 185, 186, 187, 189, 190, 191, 192, 201, 202, 206, 207, 217, 218, 219, 220, 228, 232, 233, 236, 237, 241, 345, 350, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 446], "wa": [0, 12, 15, 25, 38, 40, 244, 305, 394, 407, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "last": [0, 12, 16, 25, 29, 55, 70, 75, 134, 153, 324, 328, 332, 342, 345, 347, 349, 354, 366, 367, 370, 372, 373, 374, 379, 383, 384, 386, 431, 432, 433, 443, 444, 445, 467, 477], "henc": [0, 12, 426, 427, 428, 430], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 81, 90, 91, 100, 115, 184, 226, 227, 244, 287, 290, 291, 332, 340, 342, 345, 365, 374, 382, 384, 414, 415, 446, 467, 475, 477], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 134, 178, 184, 243, 332, 343, 344, 390, 391, 392, 394, 406, 426, 427, 428, 430, 434, 439, 441], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 374, 375], "swap": [0, 12, 374, 387], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 81, 82, 134, 173, 183, 184, 233, 446, 452], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 101, 102, 103, 135, 142, 145, 309, 446, 459, 462, 465], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 450, 451, 452, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 100, 111, 118, 119, 121, 133, 134, 169, 171, 181, 244, 275, 278, 279, 285, 308, 311, 313, 315, 316, 317, 322, 446, 452, 456, 457, 483, 484, 485, 486, 487, 488], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 446, 452], "explos": [13, 15, 446], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 81, 86, 93, 134, 143, 144, 178, 184, 231, 242, 244, 270, 302, 345, 358, 361, 362, 363, 374, 384, 386, 394, 395, 397, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 434, 435, 443, 444, 445, 446, 489, 490], "huge": [13, 15, 41, 446], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 100, 107, 116, 117, 120, 122, 123, 125, 134, 170, 171, 172, 184, 188, 192, 200, 208, 209, 226, 227, 228, 232, 233, 234, 235, 243, 244, 265, 270, 271, 286, 304, 307, 324, 328, 332, 343, 345, 350, 356, 361, 363, 367, 374, 375, 377, 380, 381, 383, 384, 386, 388, 389, 390, 391, 392, 393, 414, 415, 419, 421, 424, 426, 427, 428, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478], "tool": [13, 16, 39, 43, 54, 55, 446], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 70, 73, 81, 82, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 134, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 253, 260, 261, 262, 264, 308, 314, 322, 332, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 414, 416, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "explod": [13, 14, 446], "onto": [13, 14, 134, 163, 164, 394, 400, 406, 446], "scene": [13, 14, 22, 37, 39, 308, 311, 313, 315, 316, 317, 446], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 134, 156, 184, 188, 189, 194, 199, 202, 208, 211, 229, 234, 241, 244, 248, 249, 255, 256, 263, 266, 304, 332, 335, 338, 339, 344, 345, 346, 347, 348, 358, 362, 365, 369, 370, 371, 374, 378, 379, 381, 383, 386, 387, 412, 413, 414, 418, 421, 423, 424, 425, 431, 432, 434, 435, 436, 443, 444, 446, 452], "why": [13, 15, 19, 32, 35, 36, 40, 446], "unifi": [13, 15, 31, 38, 55, 134, 163, 164, 165, 166, 178, 446], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 78, 79, 81, 92, 96, 97, 100, 108, 134, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 228, 230, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 251, 278, 287, 308, 311, 313, 315, 316, 317, 332, 344, 345, 346, 347, 348, 349, 352, 353, 356, 358, 359, 360, 362, 363, 365, 366, 367, 368, 374, 382, 414, 420, 421, 422, 423, 426, 427, 428, 430, 434, 435, 436, 437, 439, 440, 441, 442, 446], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 446], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 244, 248, 249, 255, 304, 308, 310, 311, 313, 315, 316, 317, 332, 338, 374, 386, 421, 424, 434, 435, 440, 442, 446, 452], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 81, 92, 100, 117, 184, 188, 189, 194, 199, 202, 208, 234, 241, 345, 348, 374, 378, 379, 383, 412, 413, 414, 417, 426, 427, 428, 431, 432, 434, 436, 440, 442, 446, 452, 481, 482], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 134, 178, 244, 260, 324, 325, 328, 345, 365, 374, 383, 421, 425, 446], "collabor": [13, 14, 15, 446], "consortium": [13, 15, 446, 452], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 133, 134, 136, 137, 138, 139, 140, 141, 146, 147, 148, 150, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 230, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 248, 249, 280, 281, 283, 300, 308, 314, 322, 324, 328, 330, 332, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 374, 378, 379, 380, 382, 383, 385, 386, 414, 420, 421, 422, 423, 424, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 345, 348, 374, 378, 379, 383, 426, 427, 428, 431, 432, 434, 436, 446, 452], "open": [14, 15, 16, 17, 18, 21, 24, 54, 81, 82, 414, 416, 418, 446], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 414, 415, 417, 418], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 446], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 446], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 184, 210, 308, 311, 313, 315, 316, 317, 390, 391, 392, 393, 446, 483, 484, 485, 486, 487, 488], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 81, 83, 93, 100, 109, 134, 176, 177, 178, 324, 326, 345, 352, 374, 382, 414, 416, 446, 452], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 134, 158, 162, 166, 374, 377, 389, 394, 406], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 446, 452], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 70, 73, 74, 76, 81, 82, 85, 87, 94, 96, 97, 98, 134, 155, 156, 159, 168, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 249, 252, 253, 255, 256, 263, 266, 273, 282, 302, 303, 304, 324, 330, 332, 335, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 387, 394, 407, 412, 413, 414, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 487, 489, 490], "term": [14, 19, 332, 342, 467, 477], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 308, 311, 315, 332, 342, 374, 388, 390, 391, 392, 393, 421, 422, 423, 426, 427, 428, 467, 478, 479, 480], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 345, 350, 446, 452], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 81, 82, 134, 143, 144, 168, 172, 174, 178, 184, 201, 223, 224, 234, 236, 241, 244, 245, 248, 249, 250, 268, 274, 275, 279, 286, 288, 300, 332, 341, 345, 347, 353, 354, 356, 359, 363, 364, 367, 374, 375, 379, 383, 394, 396, 400, 406, 414, 417, 418, 421, 422, 423, 424, 426, 427, 446, 489, 490], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 374, 384], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 100, 117, 134, 155, 156, 159, 160, 184, 188, 228, 240, 332, 341, 374, 386, 434, 439, 441, 446], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 184, 223, 224, 426, 427, 434, 437], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 81, 82, 83, 92, 93, 134, 158, 162, 166, 173, 178, 183, 184, 185, 188, 189, 194, 198, 199, 202, 207, 208, 223, 224, 233, 234, 241, 244, 265, 266, 278, 289, 294, 308, 311, 313, 314, 315, 316, 317, 322, 332, 335, 341, 344, 345, 348, 354, 361, 374, 378, 379, 382, 383, 386, 394, 400, 406, 407, 412, 413, 421, 422, 426, 427, 428, 430, 431, 432, 434, 436, 437, 440, 442, 446, 452, 479, 480, 483, 484, 485, 486, 487, 488], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 446], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 244, 266, 278, 308, 311, 332, 335, 341, 344, 345, 348, 374, 378, 379, 383, 390, 391, 392, 393, 394, 395, 396, 404, 405, 406, 412, 413, 426, 427, 428, 431, 432, 434, 436, 467, 477], "consid": [14, 15, 23, 28, 39, 40, 41, 184, 223, 224, 426, 427, 428, 430], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 70, 72, 73, 74, 75, 76, 77, 134, 156, 179, 184, 199, 332, 338, 339, 426, 427, 428, 431, 432, 434, 435, 446, 452], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 134, 179, 184, 207, 223, 224, 345, 350, 426, 427, 428, 430, 434, 436, 437, 438, 446], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 431, 432, 433], "against": [14, 27, 55, 100, 107, 345, 353, 354, 356, 359, 421, 422], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 345, 350, 446], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 82, 92, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 206, 207, 208, 217, 218, 220, 221, 228, 232, 233, 234, 236, 237, 238, 241, 243, 308, 314, 322, 345, 363, 366, 374, 375, 386, 426, 427, 428, 430, 434, 436, 438, 441, 456, 457], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 81, 88, 89, 92, 184, 192, 206, 219, 228, 232, 244, 274, 278, 287, 345, 350, 356, 359, 360, 363, 364, 366, 367, 374, 375, 377, 378, 380, 386, 389, 394, 395, 405, 414, 415, 421, 424, 434, 440, 442, 443, 444, 445, 446], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 426, 427, 428, 430], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 81, 84, 87, 88, 89, 94, 95, 98, 99, 100, 129, 184, 193, 219, 231, 242, 244, 260, 261, 262, 265, 266, 267, 290, 291, 292, 293, 298, 299, 308, 311, 313, 315, 316, 317, 324, 326, 329, 331, 374, 378, 382, 386, 394, 399, 410, 411, 412, 413, 446, 456, 457, 467, 477, 481, 482, 483, 484, 485, 486, 487, 488], "futur": [14, 16, 18, 19, 40, 55, 345, 350], "avail": [14, 18, 19, 24, 34, 55, 134, 153, 169, 170, 171, 181, 244, 261], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 100, 125, 134, 176, 179, 184, 223, 224, 244, 260, 261, 262, 285, 345, 350, 365, 374, 386, 390, 391, 392, 393, 414, 415, 434, 436, 437, 438, 446, 449, 451, 452, 479, 480], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 467, 478, 479, 480], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 446], "desir": [14, 100, 106, 109, 134, 179, 244, 274, 324, 330, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 78, 79, 81, 92, 100, 112, 113, 114, 121, 125, 133, 134, 153, 244, 259, 287, 291, 308, 311, 313, 315, 316, 317, 345, 367, 374, 379, 386, 421, 422, 434, 440, 442, 443, 444, 445, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 483, 484, 485, 486, 487, 488], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 78, 79, 81, 82, 96, 97, 134, 143, 168, 174, 244, 245, 248, 249, 268, 288, 303, 332, 342, 345, 362, 365, 368, 374, 379, 383, 390, 391, 392, 393, 394, 395, 396, 405, 406, 407, 414, 415, 418, 443, 446, 449, 451], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 244, 263], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 394, 406], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 134, 163, 164, 165, 166, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 253, 264, 291, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 414, 416, 419, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 483, 487], "determin": [14, 24, 28, 32, 33, 34, 100, 109, 110, 116, 121, 122, 123, 133, 134, 169, 170, 171, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206, 207, 212, 213, 214, 217, 218, 220, 221, 225, 228, 232, 233, 236, 237, 238, 241, 244, 245, 248, 249, 273, 275, 279, 280, 281, 282, 283, 300, 307, 308, 314, 332, 343, 345, 346, 347, 348, 349, 352, 353, 356, 358, 359, 361, 362, 366, 367, 368, 390, 391, 392, 393, 426, 427, 428, 430, 443, 444, 445], "exactli": [14, 16, 25, 34, 446, 452], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 81, 82, 100, 117, 184, 192, 232, 370, 371, 372, 373, 374, 378, 386, 394, 400, 414, 416, 426, 427, 428, 430, 446, 483, 485], "find": [14, 18, 19, 38, 41, 426, 427, 428, 430, 446], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 244, 259, 483, 487], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 184, 192, 308, 311, 313, 315, 316, 317, 345, 350, 354, 363, 364, 368, 374, 379, 390, 391, 392, 421, 424, 426, 427, 428, 430, 431, 432, 433, 489, 490], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 134, 149, 483, 487], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 134, 173, 179, 180, 183, 184, 188, 228, 233, 244, 246, 278, 374, 382, 414, 418, 446], "search": [14, 18, 23, 25, 27, 422, 423, 424, 425], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 78, 79, 81, 90, 91, 100, 124, 129, 134, 153, 165, 184, 188, 194, 196, 197, 198, 199, 204, 209, 211, 215, 216, 221, 222, 224, 225, 228, 230, 232, 240, 244, 248, 308, 312, 345, 347, 349, 350, 353, 358, 360, 363, 365, 367, 374, 376, 383, 386, 387, 390, 391, 392, 393, 394, 395, 404, 405, 414, 420, 421, 422, 423, 426, 427, 428, 467, 478, 479, 480, 483, 487], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 81, 82, 87, 90, 91, 100, 108, 125, 184, 188, 194, 196, 197, 198, 199, 203, 207, 215, 221, 224, 225, 228, 230, 232, 233, 240, 345, 356, 359, 362, 367, 368, 421, 423, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 134, 152], "front": [14, 37, 38, 41, 446, 452], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 446], "littl": [14, 31, 40], "deeper": [14, 22, 37, 134, 158, 162, 166, 394, 405, 406], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 100, 120, 134, 178, 184, 233, 244, 276, 277, 278, 298, 299, 308, 311, 313, 315, 316, 317, 332, 343, 344, 345, 360, 368, 394, 400, 406, 426, 427, 428, 430, 446, 467, 477, 483, 487], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 81, 82, 85, 89, 92, 95, 96, 97, 99, 100, 106, 107, 108, 134, 143, 144, 178, 184, 185, 188, 195, 200, 208, 228, 233, 234, 235, 243, 244, 264, 266, 267, 287, 290, 291, 308, 314, 319, 332, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 359, 360, 362, 363, 366, 367, 374, 376, 379, 380, 383, 385, 386, 390, 391, 392, 394, 407, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 446, 467, 468, 469, 470, 471, 472, 473, 474], "core": [14, 18, 20, 34, 38, 43, 134, 170, 446], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 81, 90, 91, 100, 125, 184, 188, 198, 199, 211, 229, 233, 244, 250, 260, 261, 262, 300, 308, 311, 313, 315, 316, 317, 332, 333, 334, 335, 336, 337, 338, 339, 341], "expos": [14, 38, 42, 244, 254], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 134, 168, 394, 407, 446], "uniqu": [14, 28, 32, 55, 134, 143, 144, 390, 391, 392, 393, 394, 400, 426, 427, 428, 429, 430], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 134, 174, 184, 223, 224, 345, 353, 360, 374, 379, 394, 395, 396, 404, 405, 421, 422, 423, 434, 437, 446, 483, 484, 485, 486, 487, 488], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 394, 395, 405, 446], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 134, 166, 345, 350, 434, 435, 479, 480], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 70, 73, 74, 76, 81, 92, 100, 107, 134, 143, 144, 155, 156, 157, 158, 159, 160, 161, 165, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 308, 311, 313, 315, 316, 317, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 350, 353, 356, 357, 359, 362, 363, 374, 377, 381, 383, 384, 386, 388, 389, 394, 400, 407, 414, 415, 421, 424, 426, 427, 428, 434, 435, 446, 452, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 446], "similar": [14, 23, 32, 33, 34, 41, 55, 184, 233, 332, 343, 467, 478], "convent": [14, 54, 345, 353, 434, 435], "those": [14, 18, 19, 20, 32, 38, 43, 81, 82, 308, 322, 345, 360, 363, 374, 375], "introduc": [14, 32, 41, 374, 383, 426, 427], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 412, 413, 446, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 184, 188, 189, 208, 241, 244, 266, 332, 335, 344, 374, 383, 412, 413, 434, 436], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 244, 246, 394, 406], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 184, 233], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 184, 188, 200, 208, 209, 228, 238, 243, 446], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 446, 452, 467, 478, 479, 480], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 446], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 100, 110, 118, 119, 121, 133, 134, 173, 183, 244, 250, 263, 273, 280, 281, 282, 283, 300, 307, 308, 314, 345, 350, 394, 395, 404, 405, 406, 446], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 67, 68, 70, 72, 73, 81, 82, 134, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 252, 253, 255, 256, 257, 260, 261, 262, 264, 266, 324, 326, 329, 331, 332, 340, 341, 342, 343, 344, 345, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 412, 413, 414, 416, 421, 422, 423, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 475], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 446], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 134, 158, 162, 166, 394, 406], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 446], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 446, 452], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 446], "With": [15, 16, 18, 25, 27, 38, 70, 72, 73, 74, 75, 76, 77, 81, 92, 134, 156, 172, 184, 188, 189, 194, 199, 202, 208, 211, 226, 227, 229, 234, 241, 244, 249, 255, 256, 263, 266, 302, 303, 304, 332, 335, 338, 339, 344, 345, 346, 347, 348, 349, 354, 365, 370, 371, 373, 374, 375, 378, 379, 381, 383, 384, 387, 412, 413, 414, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 443, 444], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 81, 82, 244, 289, 294, 426, 429, 446], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 70, 75, 134, 179, 446], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 134, 178, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 476], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 100, 108, 184, 206, 232, 244, 250, 269, 278, 292, 299, 305, 345, 353, 355, 367, 374, 385, 386, 421, 424, 434, 436, 438, 443, 444, 445, 479, 480, 483, 487], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 70, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 122, 123, 125, 134, 156, 160, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 251, 252, 253, 255, 264, 265, 266, 274, 278, 280, 281, 282, 283, 303, 304, 305, 308, 314, 319, 321, 322, 324, 326, 330, 331, 332, 335, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 394, 400, 412, 413, 414, 416, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 456, 457, 479, 480, 483, 484, 485, 487], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 308, 311, 313, 315, 316, 317, 446, 483, 484, 485, 486, 487, 488], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 78, 79, 81, 82, 184, 207, 244, 245, 246, 308, 312, 414, 418, 426, 429, 434, 440, 442, 446], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 446, 452, 479, 480, 483, 487], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 244, 298, 299, 345, 350, 374, 378, 489, 490], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 434, 435, 467, 476], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 134], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 184, 232, 234], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 81, 82, 134, 178, 244, 280, 281, 283, 308, 314], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 81, 82, 90, 91, 244, 265], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 81, 92, 134, 173, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 202, 206, 207, 208, 217, 218, 220, 221, 228, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 278, 290, 291, 345, 354, 374, 382, 394, 397, 403, 434, 436, 437, 438, 440, 441, 442, 467, 478, 479, 480, 483, 487], "unlik": [15, 25, 32, 134], "charger": 15, "charact": 15, "encod": [15, 41, 244, 265, 324, 326], "instant": [15, 446], "messag": [15, 19, 38, 40, 492, 493], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 184, 199, 244, 278, 374, 384], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 184, 189, 199, 202, 208, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 244, 290, 291, 374, 375, 414, 415], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 446], "10": [15, 18, 21, 25, 32, 38, 40, 41, 81, 88, 91, 134, 184, 194, 195, 202, 211, 218, 244, 256, 266, 289, 294, 308, 315, 332, 338, 345, 348, 349, 358, 365, 374, 379, 381, 384, 412, 413, 414, 415, 416, 421, 424, 426, 427, 434, 435, 436, 483, 485], "100": [15, 16, 41, 42, 43, 55, 446], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 426, 427, 428, 430, 446], "still": [15, 24, 27, 33, 40, 42, 55, 446], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 100, 129], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 446], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 345, 350], "technolog": 15, "sector": [15, 184, 187, 190, 193], "full": [15, 16, 19, 24, 33, 36, 38, 55, 81, 100, 117, 184, 211, 332, 338, 345, 360, 362, 363, 412, 413], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 184, 233], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 426, 427, 428, 430, 446, 467, 478, 479, 480], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 134, 178, 184, 188, 194, 197, 199, 204, 205, 210, 211, 215, 216, 222, 223, 224, 225, 228, 229, 230, 244, 252, 253, 256, 257, 308, 310, 311, 312, 313, 315, 316, 317, 319, 321, 324, 327, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 350, 351, 352, 353, 354, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 394, 400, 426, 427, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 134, 332, 342, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 487], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 81, 83, 93, 96, 97, 244, 246, 308, 311, 313, 315, 316, 317, 332, 345, 346, 348, 349, 350, 351, 352, 356, 357, 359, 360, 362, 363, 364, 366, 394, 396, 406], "factor": [15, 134, 143, 176, 177, 178, 308, 310, 311, 315, 316, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 467, 468, 469, 470, 471, 472, 473, 474, 483, 484, 485, 486], "sata": 15, "connect": [15, 18, 42, 43, 467, 477, 478], "host": [15, 55], "bu": 15, "adapt": [15, 308, 316, 483, 486], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 244, 266, 267, 287, 290, 291, 414, 415, 416, 417, 418, 456, 457, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "html": [15, 21, 24, 184, 189, 199, 202, 208, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 394, 395, 404, 405], "commun": [15, 17, 19, 20, 55, 446, 452], "network": [15, 28, 32, 38, 42, 54, 332, 341, 446, 453, 467, 479, 480], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 244, 284, 302, 324, 330, 434, 436, 438], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 80, 100, 117, 184, 188, 207, 228, 233, 238], "754": [15, 80, 100, 117, 184, 188, 207, 228, 233, 238], "allow": [15, 38, 55, 81, 90, 91, 244, 284, 479, 480], "calcul": [15, 24, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 202, 203, 206, 207, 217, 218, 219, 220, 221, 228, 232, 236, 237, 238, 240, 241, 370, 371, 372, 373, 434, 436, 437, 438, 439, 440, 441, 442], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 100, 106, 184, 185, 186, 187, 189, 190, 191, 192, 201, 202, 206, 207, 217, 218, 219, 220, 232, 236, 237, 241, 345, 350, 360, 362, 363, 421, 425, 431, 432, 433], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 446], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 134, 178], "relev": [15, 18, 20, 25, 32, 33, 41, 483, 484, 485, 486, 487, 488], "area": [15, 35, 53, 184, 187, 190, 193, 446], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 426, 427, 428, 430], "easili": [15, 19, 41, 42, 43, 55, 446], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 134], "effect": [15, 24, 31, 32, 36, 55, 81, 92, 308, 317, 434, 440, 442], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 100, 117, 120, 184, 210, 345, 356, 359], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 81, 82, 84, 90, 91, 134, 167, 173, 175, 176, 177, 178, 180, 183, 244, 256, 257, 267, 290, 291, 306, 308, 310, 311, 313, 315, 316, 317, 332, 333, 334, 335, 336, 337, 338, 339, 345, 369, 370, 371, 372, 373, 374, 375, 378, 379, 381, 383, 384, 388, 394, 401, 402, 414, 416, 417, 418, 420, 431, 433, 456, 457], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 184, 186, 187, 189, 192, 200, 217, 218, 220, 232, 233, 235, 238, 345, 356, 359, 368, 414, 418, 434, 442], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 184, 228, 332, 342, 446, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 81, 82, 100, 117, 134, 178, 184, 186, 187, 189, 192, 196, 198, 200, 208, 209, 217, 218, 220, 226, 232, 233, 235, 238, 243, 244, 280, 281, 283, 308, 314, 345, 347, 353, 356, 359, 368, 374, 375, 379, 385, 414, 418, 426, 427, 428, 430, 434, 439, 440, 441, 442], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 345, 346, 358, 434, 435], "80": [15, 345, 358, 434, 435], "90": [15, 184, 199, 234, 345, 358, 434, 435], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 446], "complet": [15, 19, 20, 31, 32, 40, 41, 345, 360], "natur": [15, 25, 31, 32, 54, 184, 206, 217, 219, 345, 361], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 308, 314, 414, 418, 446], "certainli": 15, "mission": [15, 446], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 134, 143, 144, 244, 266, 267, 287, 290, 291, 302, 308, 321, 414, 415, 416, 418, 446, 452, 456, 457, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 134, 143, 144, 173, 183], "ourselv": 15, "lead": [15, 16, 55, 345, 360, 363], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 426, 427, 428, 430], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 184, 192], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 81, 82, 83, 93, 244, 273, 307, 345, 368, 394, 395, 414, 418, 421, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 467, 477, 478, 481, 482], "member": [15, 19], "googl": [15, 446], "octoml": 15, "einop": [15, 244, 260, 261, 262], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 446], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 244, 249, 255, 324, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 349, 358, 446, 452], "shaw": 15, "co": [15, 38, 54, 184, 244, 265, 446], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 489, 490], "major": [15, 33, 34, 55, 421, 424], "involv": [15, 17, 21, 22, 33, 43, 100, 125, 184, 188, 228, 446, 452], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 81, 87, 100, 107, 109, 111], "promis": 15, "sign": [15, 18, 39, 43, 81, 82, 184, 185, 188, 192, 198, 228, 233, 345, 361, 426, 427, 428, 430, 434, 439, 441], "pursuit": 15, "unif": [15, 17, 40, 446, 452], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 332, 343, 344, 467, 478], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 100, 108, 184, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 211, 215, 216, 221, 222, 224, 225, 228, 230, 232, 233, 240, 345, 356, 359, 362, 365, 367, 368, 374, 382, 421, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "excit": [15, 17, 22, 446], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 184, 228], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 184, 207, 308, 310, 311, 313, 315, 316, 317, 322, 332, 340, 446, 467, 475], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 446, 452], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 80, 81, 82, 84, 86, 88, 94, 98, 100, 106, 117, 122, 125, 184, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 206, 207, 208, 217, 218, 220, 221, 228, 232, 233, 234, 236, 237, 238, 241, 243, 345, 346, 348, 350, 351, 352, 356, 359, 360, 362, 363, 368, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442], "mai": [16, 18, 32, 40, 42, 81, 82, 87, 134, 179, 184, 204, 211, 216, 223, 224, 244, 259, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438], "ask": [16, 19, 38, 40, 55, 446], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 374, 382], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 81, 82, 86, 92, 96, 97, 100, 124, 129, 184, 198, 234, 244, 248, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 374, 387, 426, 427, 428, 429, 430, 446], "streamlin": 16, "workflow": [16, 41, 53, 446], "save": [16, 55, 244, 295, 324, 326, 479, 480], "week": [16, 20, 446], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 434, 437, 440, 441, 442, 446], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 446], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 434, 440, 442], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 184, 210, 244, 275, 279, 324, 329], "g": [16, 22, 32, 55, 100, 105, 125, 134, 150, 414, 417, 418, 426, 427, 428, 430, 434, 436, 438, 439, 441], "inevit": 16, "deviat": [16, 412, 413, 414, 417, 434, 440, 481, 482], "origin": [16, 29, 30, 33, 38, 40, 184, 192, 345, 354, 374, 382, 383], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 308, 310, 311, 315, 446], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 70, 75, 81, 90, 91, 134, 244, 256, 260, 261, 262, 276, 277, 278, 308, 311, 313, 315, 316, 317, 324, 325, 328, 332, 340, 342, 345, 363, 390, 391, 392, 393, 394, 401, 402, 443, 444, 445], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 81, 90, 91, 244, 266, 267, 287, 290, 291, 414, 415, 416, 418, 426, 427, 428, 430, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "publish": [16, 55], "manag": [16, 17, 35, 55, 134], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 100, 115, 116, 117, 120, 134, 143, 144, 153, 154, 167, 168, 173, 177, 180, 183, 244, 247, 268, 269, 270, 289, 446, 452, 467, 476], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 446, 452], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 184, 233, 244, 278, 308, 314, 322, 394, 395, 404, 405, 406], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 244, 247, 446], "codebas": [16, 17, 22, 23, 35, 37, 134, 176, 177, 446], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 134, 180, 421, 424, 434, 440, 442], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 345, 349, 366], "test": [16, 18, 20, 22, 25, 55, 100, 122, 123, 184, 212, 213, 214, 443, 444, 445], "error": [16, 18, 27, 31, 34, 36, 40, 55, 70, 71, 134, 184, 205, 434, 436, 438, 479, 480, 483, 487], "iter": [16, 32, 38, 41, 78, 79, 134, 156, 157, 159, 160, 161, 162, 165, 178, 244, 245, 291, 296, 374, 377, 381, 384, 388, 389, 394, 395, 396, 400, 404, 405, 406], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 134, 143, 144, 163, 164, 165, 166, 244, 304, 307, 414, 417, 418, 426, 427], "multipl": [16, 19, 25, 28, 32, 55, 184, 188, 228, 244, 284, 345, 352, 374, 383, 384, 412, 413, 421, 422, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 477], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 446, 452], "convert": [16, 31, 38, 55, 56, 64, 81, 83, 93, 100, 104, 105, 111, 134, 150, 151, 152, 153, 173, 180, 183, 244, 297, 303, 304, 324, 326, 331, 345, 369, 394, 396, 406, 407, 457], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 394, 406], "graph": [16, 28, 32, 39, 55, 308, 311, 313, 315, 316, 317, 426, 427, 428, 430, 479, 480], "guarante": [16, 31, 55, 426, 427], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 70, 72, 73, 75, 81, 89, 92, 95, 99, 134, 156, 172, 184, 188, 189, 192, 194, 199, 202, 208, 211, 226, 227, 229, 234, 241, 244, 249, 256, 265, 266, 302, 324, 326, 327, 328, 331, 332, 335, 336, 337, 339, 342, 344, 345, 347, 348, 349, 352, 356, 358, 365, 366, 370, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 387, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 443, 444, 446, 483, 484, 485, 486, 488], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 81, 82, 90, 91, 134, 308, 310, 311, 313, 315, 316, 317, 390, 391, 392, 393, 446, 483, 484, 485, 486, 487, 488], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 184, 199, 324, 328, 446, 452], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 446, 452], "second": [16, 18, 25, 35, 40, 100, 124, 129, 134, 165, 184, 188, 194, 196, 197, 198, 199, 204, 209, 211, 215, 216, 221, 222, 224, 225, 228, 230, 232, 240, 244, 248, 289, 294, 308, 310, 311, 315, 345, 347, 349, 350, 353, 358, 360, 363, 365, 367, 374, 386, 387, 390, 392, 426, 427, 428, 483, 484, 485], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 446], "convers": [16, 37, 39, 43, 54, 55, 446, 452], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 78, 79], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 70, 73, 134, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 253, 257, 264, 266, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 387, 412, 413, 414, 416, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 134, 178, 345, 352, 363, 414, 415], "know": [16, 426, 427, 428, 430], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 244, 260, 261, 262], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 134, 345, 347, 374, 382, 394, 396, 406, 446, 452], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 467, 478, 479, 480], "spend": 16, "torchvis": 16, "probabl": [16, 332, 340, 414, 415, 467, 475], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 100, 117, 120], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 100, 117, 446, 479, 480, 483, 484, 485, 486, 487, 488], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 70, 72, 73, 81, 84, 86, 92, 96, 97, 99, 100, 106, 184, 188, 189, 196, 202, 207, 208, 223, 224, 226, 227, 228, 229, 232, 233, 234, 241, 244, 256, 287, 290, 291, 308, 310, 311, 315, 316, 332, 340, 345, 348, 353, 356, 359, 367, 368, 374, 378, 379, 381, 383, 389, 412, 413, 414, 416, 421, 422, 423, 424, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 483, 484, 485, 486], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 244, 252, 253, 374, 375, 378], "said": 16, "high": [16, 20, 41, 414, 416, 418], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 134, 308, 311, 313, 315, 316, 317, 390, 391, 392, 393, 446, 484, 485, 486, 488], "trainer": [16, 53, 55, 446], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 467, 477, 478], "offer": [16, 42], "strongli": [17, 18, 446, 452], "welcom": [17, 18, 446, 452], "absolut": [17, 184, 185, 345, 361], "skill": 17, "whether": [17, 18, 33, 35, 36, 70, 71, 78, 79, 100, 106, 115, 121, 122, 123, 133, 134, 153, 154, 165, 169, 173, 174, 178, 181, 183, 184, 214, 244, 245, 248, 249, 256, 259, 263, 265, 271, 273, 275, 278, 279, 280, 281, 282, 283, 284, 296, 300, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 319, 332, 340, 345, 350, 390, 391, 392, 393, 394, 395, 396, 400, 404, 405, 406, 407, 414, 415, 443, 444, 445, 456, 457, 467, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 81, 82, 90, 91, 134, 149], "aspect": [17, 41, 324, 330, 446], "guid": [17, 18, 19, 27, 446], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 184, 192], "journei": [17, 446, 452], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 446], "split": [17, 19, 37, 38, 55, 134, 143, 159, 160, 161, 162, 176, 177, 178, 244, 284, 374, 446], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 426, 427, 428, 430], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 81, 92, 96, 97, 184, 194, 199, 202, 234, 345, 348, 349, 366, 374, 378, 379, 426, 427, 428, 431, 432, 446], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 244, 284], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 394, 405], "finish": [17, 18, 22, 446], "dive": [17, 19, 20, 37, 40, 41, 55, 446], "right": [17, 18, 19, 22, 25, 41, 184, 196, 198, 345, 363], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 244, 285], "doc": [17, 20, 24, 36, 38, 41, 42, 446], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 390, 391, 392, 393, 446], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 244, 246, 434, 441, 446], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 452], "toward": [18, 38, 374, 383, 446, 452], "page": [18, 19, 39, 43, 53, 446, 452], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 446, 452], "main": [18, 21, 30, 32, 81, 86, 96, 97, 345, 349, 366], "prefer": [18, 32], "mode": [18, 25, 32, 55, 78, 79, 134, 163, 164, 165, 166, 178, 184, 188, 228, 345, 360], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 394, 395, 396, 404, 405, 406], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 446, 481, 482, 489, 490], "com": 18, "unifyai": [18, 21], "http": [18, 24, 184, 189, 199, 202, 208, 308, 310, 311, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 134, 153, 479, 480], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 100, 106], "familiar": [18, 20], "decid": [18, 394, 405], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 446], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 483, 487], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 184, 412, 413, 446, 452, 481, 482], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 244, 265, 324, 326, 327, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 134, 143, 244, 278, 290, 291, 308, 310, 311, 313, 315, 316, 317, 332, 342, 390, 391, 392, 394, 401, 402, 410, 411, 456, 457, 483, 484, 485, 486, 487, 488], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 184, 189, 199, 202, 208, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436, 467, 476], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 244, 278], "align": [18, 38, 40, 446, 452], "accord": [18, 21, 28, 33, 100, 109, 117, 184, 188, 198, 228, 244, 266, 290, 291, 345, 367, 374, 377, 389, 434, 440, 442], "stabl": [18, 38, 55, 244, 269, 270, 292, 293, 298, 299, 431, 432, 433], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 134, 184, 207], "pip": [18, 54, 446], "instal": [18, 21, 54, 446], "abil": [18, 39, 55], "certain": [18, 55, 81, 82, 90, 91], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 244, 306], "track": [18, 19, 134, 394, 406, 479, 480], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 134, 143, 308, 310, 311, 315, 390, 391, 392, 393, 467, 478, 479, 480], "command": [18, 21, 446], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 78, 79, 244, 246, 345, 350, 360, 363, 426, 427, 428], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 70, 72, 73, 74, 75, 80, 81, 89, 92, 95, 98, 99, 134, 153, 156, 172, 179, 184, 188, 189, 194, 198, 199, 202, 206, 208, 210, 211, 215, 226, 227, 229, 234, 241, 244, 248, 249, 256, 263, 266, 296, 302, 304, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 352, 356, 358, 363, 365, 366, 369, 370, 371, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 387, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 441, 443, 444, 446], "8": [18, 21, 25, 32, 37, 41, 70, 74, 134, 156, 184, 188, 194, 202, 211, 226, 227, 234, 244, 249, 266, 324, 327, 332, 339, 345, 347, 348, 349, 358, 365, 370, 371, 374, 375, 379, 381, 384, 414, 415, 416, 421, 425, 426, 427, 434, 435, 446, 467, 478], "activ": [18, 21, 23, 42, 71, 72, 73, 74, 75, 76, 77, 446, 454, 455], "setup": 18, "click": [18, 24, 446], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 134, 179, 184, 223, 224, 421, 425, 426, 427, 428, 430, 434, 436, 437, 438], "left": [18, 25, 33, 184, 196, 345, 350, 354, 363, 421, 422, 446], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 394, 395, 404, 405], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 78, 79, 184, 238, 345, 350, 374, 386, 456, 457], "cmd": [18, 21], "directori": [18, 21, 244, 295], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 244, 295, 479, 480], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 81, 92, 96, 97, 184, 188, 189, 194, 199, 202, 208, 228, 234, 241, 244, 266, 332, 335, 344, 345, 348, 349, 350, 366, 374, 378, 379, 383, 412, 413, 414, 416, 426, 427, 428, 431, 432, 434, 436, 439, 440, 441], "m": [18, 21, 22, 38, 81, 92, 96, 97, 244, 249, 345, 346, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 366, 414, 417, 418], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 184, 197, 224, 443, 445], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 134, 168], "os": 18, "note": [18, 19, 23, 24, 25, 32, 184, 233, 345, 350, 363, 374, 386, 426, 428, 434, 437], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 446], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 244, 249, 306, 345, 360, 369], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 184, 207], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 134, 179, 184, 188, 244, 260, 261, 262, 412, 413, 467, 477], "yet": [18, 20, 32], "particular": [18, 23, 35, 184, 185], "system": [18, 55, 345, 362], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 446], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 244, 305], "deploy": 18, "top": [18, 27, 41, 42, 446], "press": [18, 41, 446], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 345, 354, 421, 422], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 244, 259], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 81, 87, 426, 427, 428, 430], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 81, 92, 244, 252, 253, 332, 340, 345, 354, 368, 467, 475], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 244, 249], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 81, 82, 83, 84, 92, 93, 94, 98, 100, 107, 134, 143, 144, 153, 155, 156, 159, 160, 163, 164, 178, 244, 249, 297, 302, 306, 324, 330, 332, 333, 334, 335, 336, 337, 338, 339, 345, 365, 374, 376, 379, 384, 386, 394, 395, 396, 400, 405, 406, 412, 413, 421, 424, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 474], "dev": [18, 28, 34, 38, 40, 42, 134, 143, 168], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 134], "post": [18, 43, 412, 413, 446, 452], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 70, 73, 134, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 253, 264, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 387, 414, 416, 421, 422, 431, 432, 433, 443, 444, 445], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 446], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 134, 163, 164, 165, 166, 178, 244, 261, 390, 391, 392, 393, 394, 400, 414, 417, 426, 427, 434, 446, 458], "configur": [18, 21, 33, 134, 177, 394, 407], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 184, 228, 233, 244, 287, 345, 347, 350, 362, 414, 416, 434, 436, 437, 438], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 446], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 345, 348, 374, 378, 379, 383, 426, 427, 428, 431, 432, 434, 436], "theme": 18, "too": [18, 19, 55, 184, 188, 228], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 100, 118, 119], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 332, 342], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 332, 343, 446, 467, 478], "pane": 18, "readi": [18, 20], "begin": [18, 394, 395, 405], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 492, 493], "dropdown": 18, "tab": [18, 41, 446], "master": [18, 19, 32], "vs": 18, "view": [18, 81, 87, 332, 335, 339], "log": [18, 28, 32, 35, 38, 41, 81, 91, 184, 219, 221, 345, 361, 446], "built": [18, 39, 81, 82, 134, 467, 478, 479, 480], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 184, 194, 234, 332, 335, 345, 349, 358, 365, 374, 381, 383, 414, 416, 421, 424, 426, 427, 434, 435], "minut": 18, "launch": 18, "12": [18, 25, 32, 184, 194, 199, 202, 234, 244, 256, 270, 345, 349, 358, 365, 374, 379, 381, 383, 412, 413, 414, 416, 421, 425, 426, 427, 434, 435], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99, 134, 143, 144, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 251, 253, 257, 264, 266, 308, 312, 332, 334, 336, 338, 340, 342, 343, 344, 345, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 387, 388, 394, 407, 412, 413, 414, 416, 417, 418, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478], "That": [18, 19, 40, 41, 42, 184, 233], "alreadi": [18, 19, 29, 32, 36, 40, 55, 134, 184, 200, 208, 228, 234, 243, 345, 358, 446], "refer": [18, 19, 27, 28, 33, 36, 55, 81, 86, 184, 207, 219, 308, 310, 311, 345, 367, 369, 434, 440, 442, 443, 444, 445, 467, 477], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 332, 343, 344, 394, 400, 406], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 446], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 332, 338, 339, 345, 358, 434, 435, 446, 467, 478], "bit": [18, 25, 28, 31, 32, 40, 100, 116, 117, 120, 184, 195, 196, 198, 324, 326, 331, 434, 439, 441], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 81, 82, 100, 107, 184, 207, 345, 353, 374, 379, 426, 427, 428, 430, 446], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 81, 92, 184, 188, 189, 194, 199, 202, 208, 223, 224, 233, 234, 241, 244, 266, 332, 335, 344, 345, 348, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436, 437, 446], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 70, 71, 72, 73, 74, 75, 76, 77, 100, 125, 244, 260, 261, 262, 308, 315, 316, 332, 341, 343, 344, 345, 356, 359, 370, 371, 372, 373, 374, 386, 390, 391, 392, 394, 400, 403, 406, 407, 412, 413, 446, 453, 454, 455, 481, 482], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 134], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 446], "server": [19, 446], "appropri": [19, 30, 184, 188, 228, 421, 422], "context": [19, 25, 32, 33, 34, 134, 244, 285, 332, 343, 467, 478], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 100, 106, 184, 188, 228, 244, 278, 308, 314, 319], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 100, 129, 374, 375, 434, 440, 442, 446], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 78, 81, 82, 90, 91, 184, 189, 199, 202, 208, 233, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 374, 378, 383, 414, 415, 416, 418, 419, 426, 427, 428, 431, 432, 434, 436, 446, 483, 487], "land": 19, "end": [19, 32, 35, 37, 54, 55, 81, 82, 184, 192, 446, 452], "world": 19, "come": [19, 20, 42, 53, 446, 452], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 134, 143, 144, 244, 247, 284, 467, 477], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 370, 371, 372, 373], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 345, 349, 353, 366, 374, 385, 390, 391, 392], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 244, 250, 259, 263, 394, 404], "strive": [19, 55], "repli": 19, "newli": [19, 35, 78, 79, 100, 106, 244, 251], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 134, 179, 184, 188, 189, 194, 199, 202, 208, 234, 241, 244, 266, 276, 277, 278, 332, 335, 344, 345, 348, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436, 483, 484, 485, 486, 487, 488], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 446], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 394, 406], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 134, 159, 160, 163, 164, 165, 166, 345, 349, 374, 384, 390, 391, 392, 393, 446], "mark": [19, 27], "ii": [19, 434, 435], "iii": 19, "titl": [19, 446], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 446, 452], "partial": [19, 479, 480], "solut": [19, 27, 32, 345, 362], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 81, 88, 89, 244, 245], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 70, 73, 81, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 134, 146, 174, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 253, 264, 267, 271, 287, 290, 291, 297, 324, 327, 329, 330, 332, 334, 335, 336, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 414, 416, 417, 418, 421, 422, 424, 431, 432, 433, 434, 435, 443, 444, 445, 446, 467, 469, 470, 471, 472, 473, 474, 481, 482], "move": [19, 23, 134, 179], "within": [19, 27, 42, 55, 81, 82, 414, 418], "7": [19, 21, 25, 28, 32, 35, 70, 72, 73, 134, 156, 184, 188, 194, 195, 199, 202, 206, 208, 211, 226, 227, 234, 241, 244, 249, 256, 266, 308, 310, 311, 315, 324, 327, 331, 332, 338, 339, 344, 345, 347, 348, 349, 358, 365, 370, 371, 372, 373, 374, 375, 378, 379, 381, 384, 387, 412, 413, 414, 415, 416, 418, 421, 425, 426, 427, 434, 435, 436], "dai": 19, "close": [19, 24, 184, 207, 234, 324, 330, 345, 363], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 134, 153, 308, 314], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 184, 207, 446], "remain": [19, 25, 55, 184, 188, 228, 233, 374, 382, 394, 400], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 332, 342], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 81, 96, 97, 100, 106, 134], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 308, 310, 311, 315, 434, 441, 483, 484, 485], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 100, 117, 120, 244, 252, 253, 374, 375], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 345, 346, 347], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 78, 79, 184, 192], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 184, 207], "role": [19, 39], "kept": [19, 35, 390, 391, 392], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 184, 238, 414, 415, 417, 418], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 434, 439, 441], "clone": [19, 21, 134, 155, 156, 157, 158], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 100, 124, 184, 188, 189, 208, 232, 241, 244, 266, 332, 335, 344, 345, 347, 353, 367, 374, 383, 412, 413, 434, 436], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 244, 262, 374, 388], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 345, 353], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 81, 90, 91, 244, 265, 467, 478], "tickbox": 19, "lower": [19, 25, 38, 55, 81, 86, 96, 184, 226, 345, 346, 414, 418], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 244, 289, 294, 374, 382, 394, 396, 426, 427, 428, 430], "span": 19, "intent": [19, 35], "larg": [19, 41, 184, 188, 228], "discourag": 19, "philosophi": 19, "increment": [19, 244, 277], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 446], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 134, 332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "style": [19, 421, 424], "ve": [19, 37, 40, 414, 415, 446], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 81, 96, 97, 308, 311, 313, 315, 316, 317, 479, 480], "subsect": 19, "filepath": 19, "interact": [19, 446], "session": [19, 446], "block": [19, 28, 37, 39, 43, 55, 134, 446], "smaller": [19, 38, 43, 374, 375, 383, 434, 439, 441], "edit": 19, "exact": [19, 38, 426, 427], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 426, 427, 428, 430], "undo": 19, "stress": 19, "frequenc": [19, 244, 265], "wherebi": [20, 32, 394, 406], "broad": 20, "distribut": [20, 34, 55, 134, 155, 159, 160, 161, 162, 332, 340, 370, 371, 372, 373, 414, 415, 416, 417, 418, 467, 475, 479, 480], "across": [20, 25, 27, 28, 32, 33, 36, 134, 143, 144, 155, 156, 158, 159, 160, 161, 162, 166, 176, 177, 244, 248, 249, 394, 400, 421, 423], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 184, 223], "static": [20, 24, 25, 28, 55, 78, 79], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 70, 72, 73, 74, 75, 76, 77, 81, 87, 92, 184, 189, 194, 199, 202, 208, 211, 226, 227, 229, 234, 244, 254, 255, 266, 290, 291, 302, 304, 308, 315, 316, 332, 338, 344, 345, 347, 348, 370, 371, 373, 374, 375, 378, 379, 381, 384, 387, 394, 395, 405, 406, 407, 412, 413, 414, 418, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 443, 444, 446, 467, 478, 479, 480], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 70, 72, 73, 74, 75, 76, 77, 81, 92, 134, 143, 175, 184, 188, 189, 194, 199, 202, 208, 211, 226, 227, 229, 234, 241, 244, 255, 266, 278, 302, 304, 332, 335, 338, 344, 345, 347, 348, 370, 371, 373, 374, 375, 378, 379, 381, 383, 384, 387, 412, 413, 414, 418, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 443, 444, 456, 457], "revers": [20, 24, 25, 43, 55, 244, 259, 374, 379], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 100, 124, 390, 391, 392, 414, 415, 446, 489, 490], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 483, 486, 488], "direct": [20, 42, 43, 54, 431, 433], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 202, 206, 207, 208, 217, 218, 220, 221, 228, 232, 233, 234, 235, 236, 237, 238, 241, 243, 434, 436, 437, 438, 440, 441, 442], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 446], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 244, 266, 332, 335, 344, 345, 348, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436], "its": [20, 21, 24, 100, 107, 134, 178, 345, 353, 374, 378, 382, 383, 387], "docstr": [20, 21, 22, 23, 28, 32, 36, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 345, 348, 374, 378, 379, 383, 426, 427, 428, 431, 432, 434, 436], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 446, 452], "builder": [21, 53, 55, 446], "window": [21, 324, 330, 332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 308, 311, 313, 315, 316, 317, 345, 349, 356, 359, 366, 374, 379, 383, 431, 432, 433, 446], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 184, 189, 199, 202, 208, 308, 310, 311, 345, 369, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "indic": [21, 39, 43, 70, 75, 184, 235, 244, 266, 267, 274, 287, 290, 291, 332, 333, 334, 335, 336, 337, 338, 339, 345, 368, 374, 383, 394, 395, 397, 399, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 421, 422, 423, 424, 426, 427, 429, 431, 432, 433, 446, 449, 451, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480], "privat": [21, 483, 487], "fulfil": [21, 37, 446], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 100, 111, 115, 134, 154, 434, 435, 446], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 244, 254, 394, 407], "rst": 21, "skip": [21, 27, 394, 407], "read": [21, 446], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 81, 83, 87, 100, 106, 134, 179, 244, 255, 303, 304, 374, 382, 394, 396, 431, 433], "5": [21, 25, 29, 36, 40, 41, 42, 70, 72, 73, 75, 81, 89, 92, 95, 98, 99, 134, 156, 172, 177, 184, 188, 189, 193, 194, 198, 199, 202, 208, 211, 226, 227, 229, 234, 241, 244, 249, 256, 266, 302, 324, 327, 328, 332, 335, 337, 338, 344, 345, 346, 347, 348, 349, 352, 358, 365, 366, 370, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 387, 412, 413, 414, 415, 416, 420, 421, 423, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 443, 444, 467, 478], "create_rst_fil": 21, "filter": [21, 332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "repres": [21, 40, 81, 92, 100, 111, 116, 184, 187, 188, 190, 193, 202, 228, 237, 332, 341, 345, 361, 362], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 70, 72, 73, 75, 81, 89, 134, 156, 172, 184, 188, 189, 194, 195, 199, 202, 208, 211, 226, 227, 229, 234, 241, 244, 249, 256, 266, 302, 324, 327, 332, 335, 338, 339, 344, 345, 347, 348, 349, 358, 363, 365, 370, 371, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 387, 412, 413, 414, 415, 416, 421, 422, 425, 426, 427, 428, 434, 435, 436], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 184, 196, 345, 349, 353], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 184, 188, 194, 195, 226, 227, 234, 244, 266, 308, 310, 311, 315, 332, 335, 338, 339, 345, 347, 348, 349, 358, 363, 365, 374, 375, 379, 383, 384, 414, 415, 416, 421, 425, 426, 427, 434, 435, 483, 484, 485], "index": [21, 28, 32, 40, 80, 81, 86, 92, 244, 246, 266, 267, 374, 386, 394, 397, 398, 401, 402, 403, 408, 410, 421, 422, 423, 424, 426, 427, 428, 431, 432, 449, 451], "create_index_rst": 21, "14": [21, 25, 32, 184, 199, 332, 344, 345, 349, 358, 374, 381, 426, 427, 434, 435], "\u03c0": [21, 184, 186, 189, 191, 192], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 134, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 446], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 308, 311, 313, 315, 316, 317], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 100, 125, 134, 172, 184, 194, 199, 211, 226, 227, 244, 255, 263, 266, 302, 303, 304, 332, 335, 338, 339, 344, 345, 365, 370, 371, 373, 412, 413, 421, 425, 434, 435, 437], "nestabl": [22, 24, 25, 27, 35, 184, 188, 189, 208, 241, 244, 266, 332, 335, 344, 374, 383, 412, 413, 434, 436], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 244, 251, 308, 322], "dynam": [22, 33, 34, 35, 38, 78, 79], "runtim": [22, 27, 134], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 78, 79, 134, 150, 151, 152, 153, 154, 168, 172, 173, 180, 183, 308, 311, 313, 315, 316, 317, 483, 484, 485, 486, 487, 488], "h": [22, 32, 324, 325, 326, 327, 329, 331, 332, 335, 336, 337, 338, 339], "inplac": [22, 25, 30, 31, 36, 40, 42, 244, 250, 275, 278, 279, 300, 308, 311, 313, 315, 316, 317, 456, 457, 483, 484, 485, 486, 487, 488], "j": [22, 244, 248, 249, 345, 366, 434, 435], "k": [22, 38, 81, 86, 96, 97, 244, 248, 332, 344, 345, 353, 360, 362, 363, 364, 366, 414, 417, 418, 421, 424], "l": [22, 345, 346, 350, 353, 366], "borrow": 22, "n": [22, 81, 92, 96, 97, 244, 249, 332, 340, 345, 349, 353, 355, 356, 357, 358, 359, 360, 363, 364, 366, 367, 368, 369, 374, 377, 378, 380, 386, 389, 414, 417, 418, 421, 424, 434, 437, 440, 441, 442, 443, 444, 445], "taken": [23, 43, 345, 349], "constant": [23, 28, 42, 43, 55, 134, 143, 144, 374, 377, 394, 400, 412, 413, 458, 459, 463, 466, 479, 480, 481, 482], "creation": [23, 33, 34, 38, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "data_typ": [23, 33, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "elementwis": [23, 28, 38, 43, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "linear_algebra": [23, 40, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "sort": [23, 345, 350, 363, 364, 432], "statist": [23, 33, 435, 436, 437, 438, 439, 440, 441, 442], "util": [23, 34, 134, 167, 444, 445], "compil": [23, 32, 37, 39, 55, 446, 479, 480, 483, 484, 485, 486, 487, 488], "gradient": [23, 32, 41, 42, 54, 55, 134, 178, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 390, 391, 392, 393, 446, 483, 484, 485, 486, 487, 488], "loss": [23, 28, 41, 42, 43, 371, 372, 373, 446], "meta": [23, 391, 392, 393], "nest": [23, 28, 32, 40, 41, 42, 55, 134, 158, 162, 166, 244, 302, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 479, 480, 483, 484, 485, 486, 487, 488], "norm": [23, 244, 252, 253, 345, 354, 368, 413, 446, 482, 483, 485], "random": [23, 34, 43, 54, 415, 416, 417, 418, 419, 420, 446], "overlap": 23, "sever": [23, 55, 345, 352], "judgement": 23, "locat": [23, 27, 29, 34, 414, 415], "matmul": [23, 29, 38, 345, 363, 446], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 446], "anyth": [23, 446], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 394, 395, 404, 405], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 167, 173, 175, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 252, 253, 256, 257, 260, 261, 262, 264, 265, 266, 267, 271, 273, 274, 278, 287, 290, 291, 296, 297, 302, 303, 304, 306, 307, 308, 310, 311, 313, 315, 316, 317, 321, 324, 328, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 396, 405, 406, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 106, 107, 108, 115, 117, 120, 122, 123, 125, 129, 134, 153, 154, 156, 172, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 252, 253, 255, 256, 257, 260, 261, 262, 264, 265, 266, 267, 271, 273, 274, 278, 287, 290, 291, 296, 302, 303, 304, 306, 307, 308, 310, 311, 313, 315, 316, 317, 321, 324, 328, 330, 331, 332, 333, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 396, 406, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445], "ax": [23, 25, 33, 40, 134, 178, 244, 256, 345, 354, 362, 365, 368, 374, 377, 379, 380, 383, 385, 387, 389, 421, 422, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 70, 75, 78, 79, 81, 84, 86, 88, 89, 90, 91, 94, 96, 97, 98, 100, 108, 114, 116, 117, 120, 123, 134, 156, 159, 160, 161, 162, 170, 171, 172, 178, 179, 184, 194, 195, 196, 197, 198, 199, 244, 246, 256, 257, 260, 261, 262, 265, 266, 271, 287, 290, 291, 296, 297, 306, 308, 310, 311, 315, 324, 328, 330, 332, 333, 335, 337, 338, 339, 345, 347, 349, 365, 366, 367, 368, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 394, 406, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 78, 79, 81, 83, 84, 88, 93, 94, 98, 100, 108, 134, 153, 244, 265, 297, 324, 330, 332, 335, 338, 339, 345, 356, 359, 363, 365, 368, 374, 376, 377, 379, 380, 383, 385, 386, 389, 394, 396, 397, 399, 401, 402, 403, 405, 406, 408, 409, 410, 411, 414, 417, 418, 421, 424, 426, 427, 428, 429, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "dtype": [23, 25, 28, 33, 34, 40, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 98, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 168, 174, 184, 189, 198, 202, 229, 234, 244, 248, 249, 287, 324, 327, 332, 340, 374, 378, 412, 413, 414, 418, 421, 422, 423, 431, 433, 434, 439, 440, 441, 443, 444, 446, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 489, 490], "nativedtyp": [23, 33, 34, 36, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 100, 105, 106, 113, 114, 115, 118, 119, 124, 434, 441], "nativedevic": [23, 33, 34, 36, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 134, 151, 152, 153, 167, 173, 175, 177, 179, 180, 183, 244, 266, 267, 287, 290, 291, 414, 415, 416, 417, 418], "my": 23, "nan": [23, 24, 80, 100, 106, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 206, 207, 208, 212, 214, 217, 218, 220, 221, 228, 232, 233, 234, 236, 237, 238, 241, 243, 244, 273, 307, 426, 427, 428, 430, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445], "y": [23, 25, 29, 32, 38, 40, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 99, 100, 106, 134, 154, 168, 172, 177, 184, 188, 189, 192, 194, 195, 198, 199, 200, 201, 202, 206, 208, 211, 226, 227, 229, 234, 241, 244, 248, 249, 255, 256, 263, 264, 266, 302, 303, 304, 308, 312, 324, 328, 331, 332, 338, 339, 341, 345, 346, 347, 348, 352, 358, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 387, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 434, 435, 436, 440, 441, 443, 444], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 99, 100, 106, 107, 109, 110, 112, 113, 114, 115, 116, 122, 123, 124, 125, 129, 134, 143, 144, 153, 154, 155, 156, 158, 159, 162, 166, 172, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 296, 297, 300, 302, 303, 304, 306, 307, 308, 312, 314, 319, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482], "numer": [23, 42, 81, 92, 100, 106, 184, 185, 188, 200, 203, 207, 208, 209, 212, 213, 214, 215, 223, 224, 228, 229, 230, 232, 233, 235, 240, 243, 244, 269, 270, 292, 293, 298, 299, 345, 347, 353, 358, 363, 365, 366, 367, 414, 420, 421, 422, 423, 434, 436, 439, 441, 458], "along": [23, 35, 81, 90, 91, 134, 159, 160, 161, 162, 163, 164, 165, 166, 178, 244, 256, 257, 266, 306, 324, 328, 345, 354, 366, 367, 368, 370, 372, 373, 374, 376, 379, 381, 383, 384, 386, 388, 390, 391, 392, 393, 414, 420, 421, 422, 423, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 70, 73, 81, 82, 100, 125, 134, 143, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 253, 257, 264, 266, 290, 291, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 354, 363, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 387, 394, 407, 412, 413, 414, 416, 421, 422, 423, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "broadcast": [23, 24, 25, 32, 33, 70, 73, 100, 107, 108, 134, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 253, 264, 345, 353, 354, 356, 359, 362, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 387, 414, 416, 421, 422, 423, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 81, 92, 134, 143, 144, 158, 162, 166, 244, 247, 284, 394, 400, 434, 441, 479, 480], "produc": [23, 134, 143, 144, 332, 344], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 67, 184, 189, 426, 427, 428, 431, 432, 446], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 100, 107, 184, 192, 232, 345, 347, 350, 362, 374, 376, 383, 414, 415, 421, 422, 423, 426, 427, 428, 430, 434, 439, 440, 441, 442], "templat": [24, 446], "spec": [24, 25], "api_specif": [24, 184, 189, 199, 202, 208, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 446], "approxim": [24, 70, 71, 184, 186, 187, 189, 190, 191, 192, 201, 202, 206, 207, 217, 218, 219, 220, 232, 236, 237, 241, 345, 356, 359], "tangent": [24, 70, 77, 184, 191, 192, 193, 241, 242], "domain": [24, 184, 186, 187, 189, 190, 191, 192, 201, 202, 206, 207, 217, 218, 220, 236, 237, 238, 241], "infin": [24, 80, 100, 106, 184, 185, 187, 188, 190, 191, 192, 200, 201, 202, 206, 207, 208, 209, 212, 213, 217, 218, 220, 221, 228, 232, 233, 234, 236, 237, 238, 241, 243, 345, 368, 434, 436, 438, 443, 444, 445], "codomain": [24, 184, 186, 187, 189, 190, 191, 192, 201, 202, 206, 207, 217, 218, 220, 236, 237, 238, 241], "element": [24, 38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 88, 89, 96, 97, 134, 157, 161, 165, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 252, 253, 256, 257, 264, 274, 303, 304, 332, 340, 345, 347, 350, 353, 360, 363, 374, 375, 379, 381, 383, 384, 385, 414, 415, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 475], "x_i": [24, 184, 185, 186, 187, 189, 190, 191, 195, 200, 201, 202, 206, 207, 208, 212, 213, 214, 217, 218, 220, 223, 229, 234, 235, 236, 237, 238, 239, 241, 243, 426, 427, 428, 430, 434, 436, 437, 438, 440, 441, 442], "assum": [24, 29, 33, 40, 41, 55, 81, 92, 184, 188, 189, 194, 199, 201, 202, 208, 234, 236, 241, 244, 266, 332, 335, 344, 345, 348, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436], "express": [24, 38, 43, 184, 186, 189, 191, 192, 201, 236, 241], "radian": [24, 184, 186, 189, 191, 192, 201, 236, 241], "float": [24, 28, 32, 33, 35, 36, 40, 42, 70, 72, 80, 81, 82, 84, 86, 88, 89, 90, 91, 94, 98, 100, 106, 113, 117, 122, 125, 134, 167, 173, 177, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 220, 221, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 252, 253, 265, 269, 270, 292, 293, 298, 299, 308, 310, 311, 313, 315, 316, 317, 324, 326, 331, 332, 335, 339, 344, 345, 346, 348, 350, 351, 352, 356, 359, 360, 362, 363, 368, 370, 371, 372, 373, 412, 413, 414, 417, 418, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442], "operand": [24, 184, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 202, 206, 207, 208, 217, 218, 220, 221, 228, 232, 233, 234, 236, 237, 238, 241, 243, 434, 435, 436, 438, 441], "whose": [24, 81, 96, 97, 184, 187, 190, 193, 201, 202, 232, 236, 237, 241, 244, 251, 345, 346, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 362, 363, 364, 366, 374, 379, 383, 426, 427, 428, 434, 435], "ref": [24, 184, 198, 215, 228, 230, 233, 240, 374, 386], "promot": [24, 28, 33, 100, 106, 109, 124, 125, 129, 184, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206, 207, 217, 218, 220, 221, 225, 228, 232, 233, 236, 237, 238, 241, 345, 346, 347, 352, 353, 356, 358, 359, 362, 367, 368, 374, 386, 434, 437], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 446], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 81, 92, 184, 188, 189, 194, 199, 202, 207, 208, 234, 241, 345, 348, 374, 378, 379, 383, 426, 427, 428, 431, 432, 434, 436], "org": [24, 184, 189, 199, 202, 208, 308, 310, 311, 374, 378, 383, 426, 427, 428, 431, 432, 434, 436], "elementwise_funct": [24, 184, 189, 199, 202, 208, 374, 383, 426, 427, 428, 431, 432, 434, 436], "explan": [24, 32, 36, 40], "descript": [24, 32, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 244, 266, 332, 335, 344, 345, 348, 368, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436], "simplic": [24, 42, 54, 81, 92, 184, 188, 189, 194, 199, 202, 208, 234, 241, 244, 266, 332, 335, 344, 345, 348, 374, 378, 379, 383, 412, 413, 426, 427, 428, 431, 432, 434, 436], "judgment": 24, "beyond": [24, 374, 383], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 100, 108, 244, 250, 259, 278, 305, 345, 359, 374, 376, 386, 421, 424, 443, 444, 445], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 394, 395], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 374, 386, 394, 395, 396, 404, 405, 406], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 70, 71, 72, 73, 244, 265, 324, 328, 332, 340, 362, 446, 467, 468, 469, 470, 471, 472, 473, 474], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 244, 250, 276, 277, 278, 279, 280, 281, 283, 300, 308, 311, 312, 313, 314, 315, 316, 317, 319, 322, 332, 343, 345, 362, 390, 391, 392, 393, 412, 413, 446, 456, 457, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "store": [24, 29, 31, 32, 38, 40, 41, 42, 244, 265, 308, 322, 345, 366, 374, 384, 479, 480], "intern": [24, 31, 32, 34, 35, 134, 308, 322, 394, 395, 404, 405, 458, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 489, 490], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 479, 480, 483, 487], "_forward": [24, 38, 41, 42, 446], "former": 24, "trainabl": [24, 39, 41, 42, 308, 314, 456, 457, 479, 480, 489], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 345, 350, 467, 476, 478, 479, 480], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 100, 117, 118, 119, 120, 134, 174], "docst": 24, "after": [25, 32, 33, 37, 100, 129, 184, 238, 308, 311, 312, 313, 315, 316, 317, 324, 325, 328, 412, 413, 483, 484, 485, 486, 487, 488], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 184], "multipli": [25, 29, 31, 184, 244, 256], "divid": [25, 31, 184, 209, 244, 298, 374, 384], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 81, 92, 184, 185, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 210, 211, 215, 216, 221, 222, 224, 225, 228, 230, 233, 240, 308, 310, 311, 312, 313, 315, 316, 317, 345, 360, 390, 391, 392, 393], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 345, 347, 362, 414, 415], "combinatorili": 25, "equal": [25, 32, 33, 81, 86, 88, 89, 100, 106, 184, 196, 198, 212, 213, 232, 234, 244, 245, 248, 249, 345, 349, 356, 359, 374, 375, 377, 384, 389, 414, 418, 426, 427, 428, 430, 431, 432, 433, 434, 437, 440, 441, 442], "maximum": [25, 38, 41, 43, 134, 158, 162, 166, 178, 184, 244, 252, 253, 265, 308, 315, 374, 375, 394, 406, 421, 422, 434, 436, 438, 446], "variat": [25, 27], "grid": [25, 27, 54, 81, 92], "vari": [25, 27, 32, 40, 426, 427, 428, 430], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 81, 82, 86, 88, 89, 90, 91, 100, 106, 112, 113, 114, 134, 146, 177, 178, 184, 185, 186, 188, 189, 191, 200, 204, 205, 208, 209, 210, 211, 215, 216, 226, 227, 228, 230, 231, 232, 234, 243, 244, 252, 253, 254, 259, 265, 266, 267, 272, 275, 279, 289, 290, 291, 292, 293, 294, 307, 308, 310, 311, 312, 315, 319, 323, 324, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 356, 359, 360, 361, 362, 363, 364, 368, 374, 375, 377, 381, 382, 389, 390, 391, 392, 394, 398, 399, 400, 401, 402, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 487], "simplest": 25, "small": [25, 28, 38, 42, 55, 184, 228, 345, 356, 359, 412, 413, 481, 482], "dimens": [25, 38, 41, 70, 75, 81, 96, 97, 134, 165, 244, 260, 261, 262, 265, 271, 287, 306, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 362, 363, 364, 366, 367, 368, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 393, 414, 420, 421, 422, 423, 424, 426, 427, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478], "unus": [25, 35, 78, 79], "highlight": 25, "extra": [25, 30, 31, 38, 308, 312], "18": [25, 32, 184, 199, 345, 349, 358, 434, 435], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 134, 146, 479, 480, 483, 484, 485, 486, 488], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 414, 417, 426, 427, 434], "prod": [25, 33, 244, 261, 434], "var": [25, 38, 390, 391, 392, 434], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 78, 79, 81, 88, 100, 106, 109, 112, 113, 114, 115, 118, 121, 122, 123, 133, 134, 153, 154, 169, 178, 181, 184, 194, 195, 197, 199, 204, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 230, 244, 245, 248, 249, 256, 259, 263, 265, 271, 273, 278, 280, 281, 282, 283, 296, 306, 307, 308, 319, 345, 346, 354, 363, 368, 374, 384, 394, 395, 396, 400, 404, 405, 406, 414, 415, 421, 422, 423, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 70, 71, 78, 79, 81, 90, 100, 106, 109, 134, 153, 174, 184, 194, 210, 211, 212, 213, 214, 215, 223, 224, 244, 245, 248, 249, 250, 251, 256, 263, 265, 273, 274, 281, 296, 302, 304, 307, 308, 311, 313, 314, 315, 316, 317, 319, 332, 340, 345, 346, 354, 363, 368, 370, 371, 372, 373, 374, 384, 390, 391, 392, 393, 394, 395, 404, 405, 407, 414, 415, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 70, 75, 81, 90, 91, 134, 136, 139, 146, 159, 160, 161, 162, 163, 164, 165, 166, 178, 244, 256, 257, 266, 306, 324, 328, 345, 347, 349, 367, 368, 370, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 414, 420, 421, 422, 423, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "54": [25, 184, 201, 332, 344, 345, 358, 434, 435], "jointli": 25, "three": [25, 32, 37, 81, 92, 446], "x0": [25, 244, 248], "x1": [25, 36, 100, 129, 134, 172, 184, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 210, 211, 215, 216, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 240, 244, 248, 332, 337, 345, 347, 353, 358, 362, 365, 367, 421, 425], "x2": [25, 36, 100, 129, 134, 172, 184, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 210, 211, 215, 216, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 240, 332, 337, 345, 347, 353, 358, 362, 365, 367, 421, 425], "combin": [25, 27, 28, 31, 32, 43, 324, 330, 345, 347], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 332, 343, 345, 347, 446, 452, 467, 478], "seper": [25, 244, 265], "pars": [25, 55], "satisfi": [25, 345, 369], "ignor": [25, 55, 81, 92, 394, 405, 483, 487], "far": [25, 34, 39, 40, 394, 395, 405], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 345, 350, 363], "shown": [25, 36, 38, 40, 55, 81, 92, 184, 194, 199, 202, 234, 345, 348, 374, 378, 379, 426, 427, 428, 431, 432], "rule": [25, 27, 28, 31, 32, 33, 100, 106, 109, 125, 184, 193, 198, 203, 228, 233, 345, 346, 347, 358, 362], "count": [25, 41, 134, 172, 345, 367, 374, 379, 426, 427, 428, 443, 444, 445], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 184, 241, 345, 358, 434, 435], "19": [25, 184, 199, 241, 345, 349, 374, 381], "143": [25, 184, 241], "16": [25, 41, 184, 241, 332, 338, 345, 349, 358, 412, 413, 421, 425, 434, 435], "38": [25, 184, 241], "11": [25, 32, 184, 188, 194, 234, 244, 256, 266, 345, 349, 358, 374, 379, 381, 414, 416, 421, 425, 426, 427, 434, 435], "13": [25, 32, 184, 194, 199, 202, 244, 256, 332, 339, 344, 345, 349, 358, 374, 381, 412, 413, 421, 425, 426, 427, 434, 435], "17": [25, 32, 70, 72, 345, 349], "shift": [25, 36, 184, 196, 198, 374, 383], "sequenc": [25, 33, 54, 134, 143, 144, 244, 249, 284, 324, 330, 374, 384, 386, 414, 416, 434, 436, 467, 476, 481, 482, 489, 490], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 244, 256, 257, 345, 367, 374, 381, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "non": [25, 32, 33, 38, 78, 79, 100, 106, 121, 184, 223, 224, 332, 335, 345, 348, 356, 363, 365, 367, 368, 421, 422, 423, 424, 434, 436, 437, 438, 439, 442, 443, 444, 445, 479, 480, 483, 487], "static_rol": [25, 32], "float32": [25, 33, 100, 104, 105, 118, 184, 189, 202, 229, 234, 324, 327, 374, 378, 412, 413], "z": [25, 29, 32, 38, 40, 134, 168, 184, 188, 194, 199, 211, 226, 227, 244, 248, 249, 266, 345, 347, 370, 371, 372, 421, 422, 434, 435, 436], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 70, 71, 72, 73, 134], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 134, 143, 394, 401, 402, 406, 407, 467, 478], "collect": [27, 54, 70, 78, 134, 244, 308, 324, 332, 370, 394, 407, 412, 414, 453, 467, 481, 483], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 81, 86, 95, 244, 287, 324, 330, 446], "consum": [27, 32, 36, 134], "300": [27, 184, 234], "ab": [27, 30, 184, 232, 345, 368, 446], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 324, 325, 328, 332, 340, 414, 415, 417, 418, 434, 440, 442, 467, 475], "rang": [27, 41, 42, 43, 81, 82, 90, 91, 426, 427, 434, 439, 441, 446], "previou": [27, 36, 43, 55, 308, 311, 315], "cach": [27, 28, 134, 152, 244, 251], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 394, 403], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 81, 92, 100, 107, 125, 134, 163, 164, 166], "verifi": [27, 33, 34, 40, 446, 452], "truth": [27, 184, 204, 210, 211, 215, 216, 230], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 244, 273, 345, 362], "suffic": [27, 30], "catch": [27, 244, 259], "systemat": 27, "compar": [27, 41, 244, 245, 248, 249, 426, 427, 428, 430, 431, 432, 433], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 134], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 81, 82, 244, 256, 280, 281, 283, 308, 314, 414, 416], "constitut": [28, 38, 434, 440, 442], "venn": 28, "diagram": 28, "lowest": [28, 55, 394, 406, 414, 416], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 370, 373], "pred": [28, 32, 35, 370, 371, 372, 373], "epsilon": [28, 32, 35, 42, 308, 310, 311, 315, 345, 356, 359, 370, 371, 372, 373, 412, 413, 481, 482, 483, 484, 485], "1e": [28, 32, 35, 42, 43, 244, 270, 308, 310, 311, 315, 345, 363, 370, 371, 372, 373, 412, 413, 446, 483, 484, 485, 486, 488], "clip": [28, 32, 35, 38, 41, 43, 184, 226, 227, 244, 252, 253, 374, 446], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 70, 72, 81, 82, 86, 184, 212, 213, 228, 232, 233, 345, 363, 367, 368, 374, 379, 383, 443, 444, 445], "sum": [28, 32, 33, 35, 38, 134, 163, 164, 165, 166, 178, 184, 188, 221, 244, 257, 261, 290, 291, 332, 344, 345, 363, 366, 368, 434, 435, 440], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 434, 440, 442], "outsid": [28, 34, 38, 40, 43, 374, 375, 386], "cache_fn": [28, 244], "stable_divid": [28, 244], "denomin": [28, 55, 244, 264, 270, 293, 298, 299, 412, 413, 481, 482], "divis": [28, 184, 198, 203, 209, 233, 244, 264, 270, 293, 298, 299, 308, 310, 311, 315, 483, 484, 485], "leaf": [28, 32, 41, 394, 395, 404, 405], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 134, 176, 177, 244, 265, 324, 329, 332, 341, 345, 368, 390, 391, 392, 393, 412, 413, 481, 482], "concurr": [28, 32], "weight": [28, 32, 42, 43, 308, 310, 311, 313, 315, 316, 317, 332, 341, 342, 344, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 483, 485, 486], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 78, 79, 134, 179, 244, 305, 308, 310, 311, 315, 345, 353, 390, 391, 392, 393, 434, 440, 442, 479, 480, 483, 484, 485, 487], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 324, 330], "briefli": [28, 41], "can_cast": [28, 33, 100], "cast": [28, 33, 100, 106, 109, 324, 326, 331, 374, 376, 434, 439, 441, 446], "set_default_dtyp": [28, 33, 100], "default_dtyp": [28, 33, 100], "get_all_arrays_on_dev": 28, "nested_map": [28, 394], "index_nest": [28, 394], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 184, 228, 244, 287], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 100, 104, 105, 115, 121, 133, 134, 150, 151, 152, 153, 167, 173, 179, 180, 183, 244, 258], "unmodifi": [29, 33], "loop": [29, 55, 390, 391, 392, 393], "moment": [29, 55, 308, 310, 311, 315, 483, 484, 485], "fallback": 29, "freedom": [29, 434, 440, 442], "recommend": [29, 184, 223, 224, 233, 434, 437], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 184, 222, 223, 224, 443, 444, 445, 446], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 446], "empti": [31, 33, 34, 81, 82, 434, 440, 441, 443, 444, 445], "self": [31, 38, 40, 41, 42, 43, 134, 446, 483, 487], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 184, 244, 265, 446], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 390, 391, 392, 394, 407, 489, 490], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 184, 206, 207, 217, 218, 219, 220, 229, 235, 239, 394, 395, 404, 405, 443, 444, 445], "boolean": [32, 81, 88, 100, 106, 121, 133, 134, 169, 181, 184, 194, 195, 197, 199, 222, 223, 224, 225, 244, 245, 248, 249, 273, 274, 275, 279, 280, 281, 282, 283, 300, 307, 308, 314, 390, 391, 392, 394, 404, 434, 438], "to_iter": 32, "travers": [32, 38, 40, 394, 406], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 374], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 134, 146, 244, 246, 254, 332, 343, 344, 390, 391, 392, 394, 397, 403, 407, 456, 457, 467, 478, 483, 487], "underli": [32, 184, 194, 197, 199, 225], "queri": [32, 33, 40, 134, 167, 177, 332, 343, 344, 467, 478], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 244, 265, 374, 378], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 184, 199], "integ": [32, 33, 40, 81, 82, 88, 100, 120, 123, 125, 184, 185, 194, 195, 196, 197, 198, 199, 200, 208, 209, 225, 232, 233, 234, 243, 345, 355, 367, 368, 374, 384, 414, 416, 419, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "22": [32, 184, 199, 345, 349, 358, 421, 425, 434, 435], "25": [32, 345, 349, 352, 370, 372, 412, 413, 434, 435], "execute_with_gradi": [32, 41, 42, 43, 55, 308, 446], "multi_head_attent": [32, 35, 332], "func": [32, 78, 79, 134, 178, 244, 251, 308, 312, 394, 407], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 78, 79, 100, 118, 119, 134, 178, 244, 246, 251, 259, 261, 390, 391, 392, 393, 394, 400, 404, 405, 406], "xs": [32, 134, 157, 161, 163, 164, 165, 244, 245, 249, 308, 312, 374, 376], "retain_grad": [32, 308, 312], "dy": [32, 308, 312, 324, 327], "dx": [32, 308, 312, 324, 327], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 446, 483, 487], "redund": 32, "scale": [32, 134, 176, 177, 308, 316, 332, 340, 343, 344, 412, 413, 467, 475, 478, 483, 486], "num_head": [32, 332, 343, 467, 478], "mask": [32, 332, 343, 344], "to_q_fn": [32, 332, 343], "to_kv_fn": [32, 332, 343], "to_out_fn": [32, 35, 332, 343], "to_q_v": [32, 332, 343], "to_kv_v": [32, 332, 343], "to_out_v": [32, 332, 343], "measur": [32, 332, 343, 467, 478], "dot": [32, 332, 343, 344, 345, 365, 367, 467, 478], "product": [32, 184, 228, 244, 256, 332, 343, 344, 345, 347, 353, 358, 365, 367, 434, 435, 439, 467, 478], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": [33, 100, 118], "int16": [33, 100, 118, 434, 439, 441], "int32": [33, 100, 118, 134, 168, 434, 439, 441], "int64": [33, 100, 118, 184, 198, 421, 422, 423, 434, 439, 441], "uint8": [33, 100, 118, 324, 326, 331], "uint16": [33, 100, 119, 434, 439, 441], "uint32": [33, 100, 119, 434, 439, 441], "uint64": [33, 100, 119, 434, 439, 441], "bfloat16": [33, 100, 118], "float16": [33, 100, 118, 119], "float64": [33, 100, 106, 118], "deriv": [33, 34, 40, 42, 81, 85, 89, 95, 99, 308, 310, 311, 313, 315, 316, 317, 394, 396, 406, 479, 483, 487, 489], "constructor": [33, 34, 40, 244, 247, 489, 490], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 446, 479, 480, 483, 487], "valid": [33, 38, 100, 110, 332, 333, 334, 335, 336, 337, 338, 339, 374, 386, 443, 444, 445, 467, 468, 469, 470, 471, 472, 473, 474], "invalid": [33, 345, 367, 443, 444, 445], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 100], "broadcast_to": [33, 100], "result_typ": [33, 100], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 244, 261, 290, 291, 443, 444, 445, 446], "overflow": [33, 184, 188, 434, 441], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 412, 413], "scalar": [33, 38, 43, 55, 81, 89, 244, 287, 304, 307, 345, 368], "default_int_dtyp": [33, 100], "default_float_dtyp": [33, 100], "settabl": [33, 34], "set_default_int_dtyp": [33, 100], "set_default_float_dtyp": [33, 100], "arang": [33, 81, 90, 91, 324, 327, 331, 434, 435, 446], "dim": [33, 244, 287, 324, 325, 330, 467, 478], "bear": 33, "popul": [33, 34, 38, 414, 415, 434, 440, 442], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 446], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 446], "nd": [33, 34, 35, 38, 43, 446], "One": [33, 38, 40, 41, 244, 261, 374, 382, 414, 416], "deleg": 33, "fill_valu": [33, 81, 88, 89, 184, 211], "shape_to_tupl": [33, 244], "item": [33, 38, 40, 41, 43, 100, 112, 134, 143, 144, 146, 153, 155, 157, 159, 161, 165, 244, 254, 272, 298, 299, 394, 399, 400, 401, 402, 406, 410, 411, 446, 479, 480], "as_n": [33, 100, 112, 113, 114, 115, 134, 153, 154], "cpu": [34, 55, 81, 90, 91, 134, 153, 154, 156, 170, 173, 179, 180, 182, 183, 244, 266, 267, 287, 290, 291, 414, 415, 416, 418, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "gpu": [34, 40, 55, 134, 153, 156, 169, 171, 177, 182, 414, 416], "idx": [34, 40, 244, 246], "tpu": [34, 134, 156, 181], "get_all_ivy_arrays_on_dev": [34, 134], "aliv": [34, 134, 168, 172, 174, 244, 268, 286, 288], "total_mem_on_dev": [34, 134], "amount": [34, 134, 180, 370, 371, 372, 373], "memori": [34, 35, 53, 55, 134, 152, 173, 178, 180, 183, 332, 342, 446], "dev_util": [34, 134], "num_cpu_cor": [34, 134], "default_devic": [34, 38, 134, 172, 182], "random_uniform": [34, 42, 414, 446], "dual": 34, "thrown": [34, 55, 244, 278], "rare": [34, 55], "set_default_devic": [34, 134, 182], "overwrit": [35, 38, 134, 178], "program": 35, "strictli": 35, "inplace_upd": [35, 244, 456, 457], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 244, 278], "val": [35, 40, 244, 276, 277, 278, 292, 293], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 244], "is_vari": [35, 308], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 100, 106], "inclus": [35, 81, 82, 414, 416], "omit": [35, 36, 426, 427, 428, 430], "unspecifi": [35, 184, 232, 233, 345, 350, 374, 386], "predominantli": [35, 54], "math": [35, 43, 446], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 345, 350, 353, 390, 391, 392, 393], "third": [35, 55, 345, 363, 426, 427], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 324, 327, 331, 374, 446], "asarrai": [35, 81, 332, 333, 426, 428], "equival": [35, 41, 43, 81, 82, 184, 198, 223, 224, 233, 345, 356, 359, 362, 368], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 308, 322, 456, 457], "posit": [36, 41, 54, 80, 81, 86, 100, 117, 134, 158, 162, 166, 184, 185, 212, 213, 228, 233, 244, 265, 345, 346, 374, 378, 383, 414, 419, 421, 424, 443, 444, 445, 456, 457], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 394, 395, 405], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 434, 441], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 458], "sound": 37, "higher": [37, 38, 43, 55, 308, 311, 313, 315, 316, 317], "overview": [37, 54], "handler": [37, 39, 43, 446], "fledg": [38, 39], "cuda": [38, 41, 55, 81, 90, 91, 134, 143, 150, 244, 266, 267, 287, 290, 291, 414, 415, 416, 418, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490], "syntact": [38, 43], "x_min": [38, 43, 374, 375], "x_max": [38, 43, 374, 375], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 184, 232, 233, 426, 427, 428, 430], "fit": [38, 324, 330, 374, 381], "logspac": [38, 81], "construct": [38, 39, 42, 43, 374, 388, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "stop": [38, 55, 81, 82, 90, 91, 134, 149, 178, 308, 311, 313, 315, 316, 317, 319, 390, 391, 392, 393, 483, 484, 485, 486, 487, 488], "num": [38, 81, 90, 91, 324, 330], "power_seq": 38, "linspac": [38, 81, 82, 446], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 81, 82, 90, 91, 345, 367, 374, 375, 386, 414, 416, 418, 443, 444, 445], "edg": [38, 43, 374, 375, 377, 389, 446], "wise": [38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 184, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 209, 210, 211, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 240, 244, 264, 374, 375], "larger": [38, 43, 100, 117, 374, 375, 383, 434, 440, 442], "param": [38, 43, 244, 246, 266, 267], "minimum": [38, 43, 134, 184, 185, 244, 269, 270, 292, 293, 298, 299, 374, 375, 421, 423, 434, 436, 438, 446], "ml_framework": [38, 43, 81, 82], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 134, 163, 244, 265, 374, 376, 446], "framework_handl": 38, "face": 38, "verbos": [38, 446, 493], "cprint": [38, 492], "framework_stack": 38, "stack": [38, 81, 96, 97, 324, 330, 345, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 360, 363, 364, 366, 374, 394, 395, 404, 405, 446, 467, 476], "_determine_framework_from_arg": 38, "valueerror": [38, 374, 385], "get_framework": 38, "neither": [38, 184, 188, 228], "illustr": [38, 54], "un": [38, 100, 121], "v": [38, 41, 42, 43, 332, 344, 446, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 487, 489, 490], "lstm_updat": [38, 332], "nn": [38, 43, 81, 92, 446], "init_h": [38, 332, 342], "init_c": [38, 332, 342], "kernel": [38, 55, 332, 342], "recurrent_kernel": [38, 332, 342], "bia": [38, 42, 332, 341, 342, 467, 468, 469, 470, 471, 472, 473, 474, 477], "recurrent_bia": [38, 332, 342], "x_shape": 38, "batch_shap": [38, 40, 43, 244, 287, 324, 325, 326, 327, 329, 330, 331, 332, 342, 343, 344, 345, 369, 414, 415, 467, 476], "timestep": [38, 332, 342, 467, 476], "input_channel": [38, 42, 467, 468, 469, 470, 471, 472, 473, 476, 477], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 332, 342], "wh": 38, "lstm": [38, 332, 342, 467], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 332, 342], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 244, 446], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 374, 384], "sigmoid": [38, 41, 42, 70, 446], "ft": 38, "gt": 38, "tanh": [38, 70, 184, 446], "ot": 38, "expand_dim": [38, 41, 374, 446], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 446], "reduce_sum": [38, 446], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 244, 249, 308, 310, 311, 313, 315, 316, 317, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 244, 280, 281, 283, 345], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100, 118, 119, 134, 143, 144, 244, 246, 305, 394, 395, 400, 401, 402, 404, 405, 406, 449, 451], "example_input": [38, 78, 79], "static_argnum": [38, 78, 79], "static_argnam": [38, 78, 79], "jit": [38, 55], "low": [38, 414, 416, 418], "frontend": [39, 67, 68], "treat": [39, 43, 78, 79], "primit": [39, 55], "describ": [39, 43, 434, 435, 439, 440, 441], "hierarch": [39, 41, 42], "solv": [39, 54, 345], "straight": [40, 446], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 244, 250], "is_native_arrai": [40, 244], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 134, 178, 244, 261, 345, 360, 421, 422, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "mul": 40, "len": [40, 43, 81, 92], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 134], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 345, 360, 363], "size": [40, 41, 81, 90, 91, 134, 176, 177, 178, 244, 290, 324, 329, 332, 344, 345, 349, 354, 358, 360, 363, 367, 374, 378, 383, 384, 385, 414, 415, 417, 418, 421, 422, 424, 443, 444, 445, 467, 468, 469], "matrix_transpos": [40, 345], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 244, 446], "genuin": 40, "some_method": 40, "similarli": [40, 81, 92], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 184, 198, 206, 232, 244, 269, 292, 299, 345, 355, 458], "enforc": 40, "notic": 40, "appear": [40, 374, 378], "inv": [40, 345, 446], "invers": [40, 54, 184, 186, 187, 189, 190, 191, 192, 193, 345, 352, 359], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 394, 407], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 244, 254], "abc": [40, 134, 143, 149, 244, 263, 479, 480, 483, 487], "newshap": [40, 374, 382], "new_shap": 40, "transpos": [40, 43, 134, 165, 332, 334, 336, 338, 345, 357, 359, 446, 467, 469, 471, 473], "flip": [40, 41, 43, 184, 195, 374, 446], "tidi": 40, "20": [40, 184, 199, 206, 234, 345, 349, 358, 365, 414, 416, 421, 424, 425, 434, 435], "shorter": 40, "crystal": 40, "41": [40, 184, 199, 345, 346, 434, 441], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 134, 177], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 446, 452], "hold": [41, 244, 290, 291], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 308, 311, 313, 315, 316, 317, 483, 484, 485, 486, 487, 488], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 324, 326], "hdf5": [41, 479, 480], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 394, 407], "batch_siz": [41, 324, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 414, 415], "dir": 41, "dataset": [41, 53, 446], "dropout": [41, 332, 467, 478], "adam": [41, 42, 43, 308, 310, 311, 315, 446, 483, 485], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 80], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 345, 368], "depth": [41, 42, 43, 54, 134, 158, 162, 166, 244, 272, 287, 394, 406, 479, 480], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 479, 480], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 324, 330], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 81, 82, 92, 345, 363, 364, 374, 382], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 446], "img_min": 41, "reduce_min": [41, 446], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 374, 386, 412, 413, 414, 417, 481, 482], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 134, 143, 244], "queue": [41, 134, 143, 144, 244, 289, 294], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 446], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 70, 72, 184, 199, 324, 331, 332, 335, 338, 345, 358, 421, 425, 434, 435], "batch_slic": 41, "model": [41, 42, 446], "mymodel": [41, 446], "linear0": [41, 42, 446], "linear1": [41, 42, 446], "relu": [41, 42, 70, 71, 72, 446], "x_in": [41, 42, 43, 446], "001": [41, 42, 412, 413], "loss_fn": [41, 42, 43, 446], "to_numpi": [41, 244, 446], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 467, 468, 469, 470, 471, 472, 473, 476, 477], "with_bia": [42, 467, 477], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 332, 342, 467, 476], "fed": [42, 134, 178], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "glorotuniform": [42, 458, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "bias_initi": [42, 467, 468, 469, 470, 471, 472, 473, 474, 477], "_w_init": 42, "_b_init": 42, "create_vari": [42, 458], "var_shap": [42, 458], "fan_out": [42, 458], "fan_in": [42, 458], "uniform": [42, 414, 415, 416, 418, 458, 460, 461, 464, 465], "fan_mod": [42, 458], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 390, 392], "descent": [42, 308, 313, 483, 488], "lar": [42, 308, 315, 316, 483], "lamb": [42, 308, 315, 483], "beta1": [42, 308, 310, 311, 315, 483, 484, 485], "beta2": [42, 308, 310, 311, 315, 483, 484, 485], "999": [42, 308, 310, 311, 315, 483, 484, 485], "07": [42, 308, 310, 311, 315, 370, 371, 372, 373, 483, 484, 485], "stop_gradi": [42, 134, 178, 308, 311, 313, 315, 316, 317, 390, 391, 392, 393, 446, 483, 484, 485, 486, 487, 488], "compile_on_next_step": [42, 479, 480, 483, 484, 485, 486, 487, 488], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 483, 487], "new_v": 42, "adam_upd": [42, 308], "_lr": 42, "isinst": [42, 43, 244, 302], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 483, 484, 485, 486, 487, 488], "mw": [42, 308, 310, 311], "vw": [42, 308, 310, 311], "pre": [43, 55, 134], "captur": 43, "one_hot": [43, 244, 446], "sparse_funct": 43, "num_class": [43, 414, 415], "ey": [43, 81, 332, 335, 339], "cumprod": [43, 244], "ones_lik": [43, 81, 446], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 412, 413, 481, 482], "to_ivy_modul": [43, 456], "thinli": 43, "whilst": 43, "preserv": [43, 55, 308, 319, 374, 379], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 332, 340, 341], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 345, 358, 414, 419, 434, 435], "init": 43, "update_rul": 43, "01": [43, 184, 234], "tree_multimap": 43, "mechan": [53, 55, 446], "vision": [53, 446], "robot": [53, 446], "focus": 54, "field": [54, 345, 350, 360, 363, 426, 427, 428], "perfect": 54, "3d": [54, 467, 472, 473], "differenti": 54, "demo": [54, 446], "orient": 54, "pose": 54, "represent": [54, 80, 100, 104, 105, 111, 117, 120, 134, 150, 151, 184, 185, 188, 194, 197, 199, 225, 228, 244, 246, 297, 302], "largest": [54, 100, 117, 120, 345, 363], "euler": [54, 80], "quaternion": 54, "rotat": 54, "matric": [54, 81, 92, 96, 97, 332, 341, 345, 346, 348, 349, 350, 351, 352, 355, 356, 357, 359, 360, 362, 363, 364, 366], "vector": [54, 81, 92, 244, 253, 332, 341, 345, 347, 350, 353, 358, 363, 364, 367, 368, 369, 467, 477], "angl": [54, 184, 192, 202, 237], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 345, 362], "warp": [54, 324, 325], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 332, 446, 453, 467], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 446], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 244, 256, 257], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 78, 79, 394, 404, 405, 421, 425], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 332, 344, 345, 350, 360], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 184, 233, 345, 367, 443, 444, 445], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 100, 117, 120, 184, 232, 434, 439, 441], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 134, 143, 144], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 394, 396], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "pointwise_op": [67, 68], "gelu": [70, 453], "gaussian": [70, 71], "leaki": [70, 71, 72], "leaky_relu": [70, 446], "alpha": [70, 72], "rectifi": [70, 72, 73], "slope": [70, 72], "39": [70, 72, 345, 358, 412, 413, 434, 435], "85": [70, 72, 184, 199], "48": [70, 72, 345, 358, 434, 435], "88": [70, 72, 184, 199, 345, 358, 434, 435], "269": [70, 74], "731": [70, 74], "881": [70, 74], "214": [70, 74], "978": [70, 74], "891": [70, 74], "softmax": [70, 332, 343, 344, 446], "422": [70, 75], "155": [70, 75], "0768": [70, 75], "231": [70, 75], "693": [70, 75, 370, 373], "49": [70, 75, 434, 435], "147": [70, 75], "363": [70, 75], "softplu": [70, 446], "3461": [70, 76], "6491": [70, 76], "5349962": [70, 76], "4203641": [70, 76], "hyperbol": [70, 77, 184, 187, 190, 193, 202, 237, 242], "55": [70, 77, 332, 338, 345, 358, 434, 435], "501": [70, 77], "762": [70, 77], "964": [70, 77], "faster": [78, 79], "invoc": [78, 79], "718281828459045": 80, "inf": [80, 244, 273, 307, 345, 368], "newaxi": 80, "alia": 80, "pi": 80, "141592653589793": 80, "mathemat": [80, 184, 188, 192, 207, 228, 345, 368], "evenli": [81, 82, 90, 91, 374, 384], "half": [81, 82, 414, 416, 418], "word": [81, 82, 414, 418, 456, 457], "chosen": [81, 82, 184, 192, 421, 425], "distanc": [81, 82], "adjac": [81, 82], "dimension": [81, 82, 86, 92, 345, 347, 348, 353, 356, 358, 359, 367, 368, 374, 384, 421, 422, 423, 424, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "ceil": [81, 82, 184, 446], "datatyp": [81, 83, 93, 100, 110, 122, 123, 124], "interpret": [81, 83, 93], "fill": [81, 84, 88, 89, 94, 95, 98, 99, 414, 416], "uniniti": [81, 84, 85], "empty_lik": 81, "n_row": [81, 86], "n_col": [81, 86], "diagon": [81, 86, 96, 97, 345, 366], "elsewher": [81, 86, 421, 425], "row": [81, 86, 345, 362, 363, 414, 415, 421, 424], "column": [81, 86, 345, 350, 360, 362, 363], "upper": [81, 86, 97, 345, 346, 360, 414, 418], "from_dlpack": 81, "__dlpack__": [81, 87, 134, 179], "interchang": [81, 87, 374, 387], "full_lik": 81, "endpoint": [81, 90], "entri": [81, 90, 91, 374, 384, 394, 407], "meshgrid": 81, "xy": [81, 92], "coordin": [81, 92, 184, 192], "cartesian": [81, 92], "matrix": [81, 92, 96, 97, 244, 245, 252, 332, 341, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 366, 369, 467, 477], "ij": [81, 92, 434, 435], "rank": [81, 92, 244, 306, 345, 347, 356, 360, 362, 366, 367, 368, 374, 377, 378, 386, 389, 421, 424, 443, 444, 445], "ni": [81, 92], "xi": [81, 92], "n1": [81, 92], "n2": [81, 92], "n3": [81, 92], "accordingli": [81, 92, 184, 207, 345, 368, 421, 423, 426, 427, 428, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "xv": [81, 92], "yv": [81, 92], "tril": 81, "triangular": [81, 96, 97, 345, 346, 360], "innermost": [81, 96, 97, 345, 346, 348, 349, 350, 351, 352, 356, 357, 359, 360, 362, 363, 364, 366], "mxn": [81, 96, 97, 345, 349, 356, 357, 359, 360, 364, 366], "triu": 81, "zeros_lik": [81, 374, 375, 446], "defaultdtyp": [100, 101], "defaultfloatdtyp": [100, 102], "float_dtyp": [100, 113, 127], "defaultintdtyp": [100, 103], "as_ivy_dtyp": 100, "dtype_in": [100, 104, 105, 111, 116, 121, 122, 123, 133], "as_native_dtyp": 100, "match": [100, 106, 184, 233, 244, 284], "broadcast_arrai": 100, "incompat": [100, 108], "from_": [100, 109], "occur": [100, 109, 421, 422, 423, 426, 427, 428, 430], "closest_valid_dtyp": 100, "closest": [100, 110, 184, 200, 208, 209, 234, 243], "convert_dtyp": 100, "summari": [100, 112, 113, 114, 126, 127, 128, 134, 147, 148, 244, 254, 258, 272, 308, 318, 323], "floatdtyp": [100, 113], "int_dtyp": [100, 114, 128], "intdtyp": [100, 114], "dtype_bit": 100, "finfo": 100, "inform": [100, 117, 120, 244, 246, 308, 319], "followng": [100, 117], "occupi": [100, 117, 120, 244, 290, 291], "ep": [100, 117, 345, 356, 359], "smallest": [100, 117, 120, 184, 200], "max": [100, 117, 120, 184, 226, 244, 252, 253, 261, 290, 291, 345, 356, 359, 434, 483, 485], "min": [100, 117, 120, 184, 227, 244, 261, 290, 291, 298, 345, 360, 363, 364, 368, 434], "smallest_norm": [100, 117], "precis": [100, 117, 184, 228, 238], "function_supported_dtyp": 100, "acosh": [100, 118, 119, 184, 446], "getattr": [100, 118, 119], "function_unsupported_dtyp": 100, "iinfo": 100, "encapsul": [100, 120], "invalid_dtyp": 100, "is_float_dtyp": 100, "is_int_dtyp": [100, 244, 304], "promote_typ": 100, "type1": [100, 124], "type2": [100, 124], "arrays_and_dtyp": [100, 125], "type_promote_arrai": 100, "ret1": [100, 129], "ret2": [100, 129], "unset_default_dtyp": 100, "unset_default_float_dtyp": 100, "unset_default_int_dtyp": 100, "valid_dtyp": 100, "noinspect": [101, 102, 103, 135, 309], "pyshadowingnam": [101, 102, 103, 135, 309], "defaultdevic": [134, 135], "__enter__": 134, "_dev": 134, "initialis": 134, "devcloneditem": [134, 156], "multidevitem": [134, 136, 139], "devclonedit": 134, "multidevit": [134, 137, 140, 143, 144, 148], "devclonednest": 134, "max_depth": [134, 138, 141, 148, 158, 162, 166, 244, 272, 394, 406], "multidevnest": [134, 138, 141], "devdistitem": 134, "devdistit": 134, "devdistnest": 134, "devmanag": [134, 142], "dev_mapp": 134, "da_dim_s": 134, "safety_factor": 134, "min_dev_dim_s": 134, "max_dev_dim_step_ratio": 134, "min_unit_dev_tune_step": 134, "min_sf_tune_step": 134, "starting_split_factor": 134, "max_split_factor_step_s": 134, "05": [134, 412, 413], "tune_dev_alloc": 134, "tune_dev_split": 134, "mapper": [134, 143, 144], "receivess": 134, "ratio": [134, 308, 315, 324, 330, 483, 485], "safe": [134, 143], "oom": 134, "tune": 134, "da_tune_step": 134, "dim_siz": 134, "ds_tune_step": 134, "to_clon": 134, "to_distribut": 134, "multidevic": [134, 143], "parallel": [134, 143, 144], "mutlidevic": [134, 143], "repeated_config_check": 134, "tune_step": 134, "devmapp": [134, 144], "ret_fn": [134, 143, 144], "queue_class": [134, 143, 144], "worker_class": [134, 143, 144], "timeout": [134, 143, 144, 244, 289, 294], "worker": [134, 143, 144], "used_dev": [134, 143], "split_factor": [134, 143], "sf": [134, 143], "devmappermultiproc": 134, "multidev": [134, 145, 146, 147, 166], "at_dev": [134, 147, 148], "profil": 134, "save_dir": [134, 149], "as_native_dev": 134, "clear_mem_on_dev": 134, "to_devic": [134, 153], "dev_clon": 134, "deviceic": [134, 155], "dev_clone_arrai": 134, "dev_clone_it": 134, "dev_clone_nest": 134, "dev_dist": 134, "dev_dist_arrai": 134, "dev_dist_it": 134, "dev_dist_nest": 134, "dev_unifi": 134, "concat": [134, 163, 164, 165, 166, 178, 244, 265, 374, 446], "concatten": [134, 163, 164, 165, 166, 178], "dev_unify_arrai": 134, "dev_unify_it": 134, "dev_unify_nest": 134, "spread": [134, 166], "140462020989616": [134, 168], "gpu_is_avail": 134, "num_ivy_arrays_on_dev": 134, "x3": [134, 172], "x4": [134, 172], "percent_used_mem_on_dev": 134, "process_specif": [134, 173, 183], "percentag": [134, 173], "ram": [134, 173, 180, 183], "alon": [134, 173, 183], "print_all_ivy_arrays_on_dev": 134, "attr_onli": [134, 174], "set_split_factor": 134, "chunk": [134, 176, 177, 178], "split_func_cal": 134, "max_chunk_s": [134, 178], "chunk_siz": [134, 178], "input_ax": [134, 178], "output_ax": [134, 178], "feed": [134, 178], "fist": [134, 178], "stream": [134, 179], "caveat": [134, 179], "portabl": [134, 179, 446], "gb": [134, 180, 183], "tpu_is_avail": 134, "unset_default_devic": 134, "reset": [134, 182], "used_mem_on_dev": 134, "magnitud": [184, 185, 188, 228, 345, 363, 364], "aco": [184, 446], "princip": [184, 186, 189, 191], "cosin": [184, 186, 187, 201, 202], "greater": [184, 186, 189, 192, 196, 198, 208, 209, 232, 233, 235, 243, 345, 347, 374, 385, 414, 418], "x1_i": [184, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 210, 211, 215, 216, 221, 222, 224, 225, 228, 230, 232, 233, 240], "x2_i": [184, 188, 192, 194, 196, 197, 198, 199, 203, 204, 209, 210, 211, 215, 216, 221, 222, 224, 225, 228, 230, 232, 233, 240], "finit": [184, 188, 192, 212, 228, 232, 233], "nonzero": [184, 188, 228, 421], "nor": [184, 188, 228], "nearest": [184, 188, 228, 234], "2019": [184, 188, 207, 228], "commut": [184, 188], "asin": [184, 446], "sine": [184, 189, 190, 236, 237], "5707964": [184, 189], "5235988": [184, 189], "64350116": [184, 189], "10016742": [184, 189], "20135793": [184, 189], "30469266": [184, 189], "41151685": [184, 189], "asinh": [184, 446], "atan": [184, 446], "atan2": [184, 446], "quotient": [184, 192], "notat": [184, 192, 434, 435], "denot": [184, 192], "pair": [184, 192, 332, 344, 345, 347], "quadrant": [184, 192], "3\u03c0": [184, 192], "atanh": [184, 446], "549": [184, 193], "bitwise_and": 184, "bitwis": [184, 194, 197, 199, 225], "AND": [184, 194, 222, 443, 444], "binari": [184, 194, 197, 199, 225, 370, 371], "bitwise_invert": 184, "invert": [184, 195], "bitwise_left_shift": 184, "bitwise_or": 184, "bitwise_right_shift": 184, "arithmet": [184, 198, 434, 437], "propag": [184, 198, 434, 436, 437, 438, 440, 441, 442], "thu": [184, 198, 232, 233, 345, 350], "floor": [184, 198, 244, 264, 446], "lh": [184, 198], "rh": [184, 198], "bitwise_xor": 184, "xor": [184, 199, 225], "78": [184, 199, 345, 358, 434, 435], "91": [184, 199, 345, 358, 434, 435], "23": [184, 199, 332, 338, 344, 345, 349, 421, 425], "66": [184, 199, 345, 358, 412, 413, 434, 435], "77": [184, 199, 345, 358, 434, 435], "79": [184, 199], "89": [184, 199, 345, 365, 434, 441], "98": [184, 199, 345, 358, 421, 425, 434, 435], "26": [184, 199, 345, 349, 358, 365, 434, 435], "57": [184, 199, 345, 346], "21": [184, 199, 244, 256, 345, 349, 358, 434, 435], "34": [184, 199, 324, 331], "24": [184, 199, 244, 256, 345, 349, 358, 434, 435], "74": [184, 199], "51": [184, 199], "27": [184, 199, 202, 332, 344, 345, 358, 434, 435], "59": [184, 199], "416": [184, 201], "cosh": [184, 446], "5430806": [184, 202], "7621958": [184, 202], "067662": [184, 202], "308231": [184, 202], "0200667": [184, 202], "8283155": [184, 202], "110": [184, 202], "705475": [184, 202], "6685185": [184, 202], "567909": [184, 202], "57476": [184, 202], "286647": [184, 202], "40": [184, 202, 345, 358, 434, 435], "731575": [184, 202], "122": [184, 202], "34801": [184, 202], "367": [184, 202], "54822": [184, 202], "669": [184, 202], "71564": [184, 202], "201": [184, 202, 234], "548": [184, 202], "317": [184, 202], "1490": [184, 202], "4791": [184, 202], "dividend": [184, 203, 233], "divisor": [184, 203, 233, 308, 310, 311, 315, 434, 440, 442, 483, 484, 485], "erf": 184, "gauss": [184, 205], "exponenti": [184, 205, 206, 221, 232], "exp": [184, 207, 221, 446], "logarithm": [184, 206, 217, 218, 219, 220, 221, 345, 361], "7182817": [184, 206], "389056": [184, 206], "085537": [184, 206], "expm1": 184, "accur": [184, 207], "fdlibm": [184, 207], "compliant": [184, 207, 223, 224, 434, 436, 437, 438], "greatest": [184, 208, 209], "floor_divid": 184, "greater_equ": 184, "isfinit": 184, "out_i": [184, 212, 213, 214], "isinf": 184, "isnan": 184, "less_equ": 184, "log10": 184, "log1p": 184, "log2": 184, "logaddexp": 184, "logical_and": [184, 446], "logical_not": [184, 446], "logical_or": [184, 446], "logical_xor": 184, "threshold": [184, 226, 227], "exce": [184, 227], "y_i": [184, 229], "not_equ": 184, "pow": 184, "expon": [184, 232, 244, 299], "versu": [184, 232], "odd": [184, 232], "remaind": [184, 244, 264, 374, 384], "modulu": [184, 233], "primarili": [184, 233], "5654": [184, 234], "034": [184, 234], "433": [184, 234], "343": [184, 234], "44": [184, 234, 345, 358, 421, 425, 434, 435], "30": [184, 234, 324, 331, 345, 358, 434, 435, 458, 464], "81": [184, 234, 434, 435], "527": [184, 234], "301": [184, 234], "202": [184, 234], "sinh": [184, 446], "sqrt": [184, 345, 368], "squar": [184, 238, 332, 335, 345, 346, 348, 350, 351, 352, 355, 361, 362, 363], "indistinguish": [184, 238], "infinit": [184, 238], "546": [184, 241], "842": [184, 241], "916": [184, 241], "96": [184, 241, 345, 358, 434, 435], "37": [184, 241, 324, 331, 412, 413], "996": [184, 241], "328": [184, 241], "trunc": 184, "decim": [184, 243], "all_equ": 244, "equality_matrix": [244, 245], "arg_info": 244, "inspect": [244, 246, 450, 451], "arg_nam": 244, "array_equ": 244, "arrays_equ": 244, "assert_supports_inplac": 244, "later": [244, 251], "clip_matrix_norm": 244, "max_norm": [244, 252, 253], "downscal": [244, 252, 253], "clip_vector_norm": 244, "container_typ": 244, "copy_arrai": 244, "60": [244, 256, 345, 358, 434, 435], "cumsum": [244, 446], "current_backend_str": 244, "default_v": [244, 259], "catch_except": [244, 259], "rev": [244, 259], "with_cal": [244, 259], "einops_rearrang": 244, "axes_length": [244, 260, 261, 262], "rearrang": [244, 260, 262], "arrang": [244, 260], "einops_reduc": 244, "einops_repeat": 244, "123": [244, 263], "floormod": [244, 446], "mod": [244, 264], "fourier_encod": 244, "max_freq": [244, 265], "num_band": [244, 265], "flatten": [244, 265, 345, 358, 368, 374, 381, 383, 421, 422, 423, 426, 427, 428, 430], "pad": [244, 265, 332, 333, 334, 335, 336, 337, 338, 339, 374, 377, 389, 467, 468, 469, 470, 471, 472, 473, 474], "fourier": [244, 265], "band": [244, 265], "linearli": [244, 265, 345, 362], "oppos": [244, 265], "geometr": [244, 265], "gather": [244, 267], "slice": [244, 266, 267, 394, 403], "gather_nd": [244, 446], "get_all_arrays_in_memori": 244, "get_min_bas": 244, "get_min_denomin": 244, "get_num_dim": [244, 446], "as_arrai": [244, 271, 296], "get_referrers_recurs": 244, "seen_set": [244, 272], "local_set": [244, 272], "has_nan": 244, "include_inf": [244, 273, 307], "indices_wher": [244, 446], "inplace_arrays_support": 244, "inplace_decr": 244, "decrement": [244, 276], "inplace_incr": 244, "inplace_variables_support": 244, "is_arrai": 244, "is_ivy_contain": 244, "match_kwarg": 244, "allow_dupl": [244, 284], "forkserv": [244, 285], "spawn": [244, 285], "num_arrays_in_memori": 244, "hot": [244, 287], "scatter": [244, 287, 290, 291], "overrid": [244, 287], "print_all_arrays_in_memori": 244, "queue_timeout": 244, "scatter_flat": 244, "flat": [244, 290, 374, 381], "set_min_bas": 244, "set_min_denomin": 244, "set_queue_timeout": 244, "set_tmp_dir": 244, "tmp_dr": [244, 295], "temporari": [244, 295], "y_tupl": [244, 296], "y_tensor": [244, 296], "as_tensor": [244, 296], "min_denomin": [244, 298], "stabil": [244, 298, 299, 431, 432, 433], "_min_denomin": [244, 298], "stable_pow": 244, "min_bas": [244, 299], "_min_bas": [244, 299, 412, 413, 481, 482], "supports_inplac": 244, "tmp_dir": 244, "to_list": [244, 446], "to_scalar": 244, "try_else_non": 244, "keepdim": [244, 306, 345, 354, 368, 421, 422, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "unpack": [244, 306], "value_is_nan": 244, "gradienttrack": [308, 309], "with_grad": [308, 318], "adam_step": 308, "dcdw": [308, 310, 311, 313, 315, 316], "delta": [308, 310], "cost": [308, 310, 311, 313, 315, 316, 317, 390, 391, 392, 393], "ws": [308, 310, 311, 313, 315, 316, 317], "en": [308, 310, 311], "wikipedia": [308, 310, 311], "wiki": [308, 310, 311], "stochastic_gradient_desc": [308, 310, 311], "dc": [308, 310, 311, 313, 315, 316, 317], "dw": [308, 310, 311, 313, 315, 316, 317], "averag": [308, 310, 311, 315, 390, 391, 392], "forget": [308, 310, 311, 315, 483, 484, 485], "mw_tm1": [308, 311, 315], "vw_tm1": [308, 311, 315], "rate": [308, 311, 313, 315, 316, 317, 390, 391, 392, 393, 467, 478, 483, 484, 485, 486, 487, 488], "ws_new": [308, 311, 313, 315, 316, 317], "retain": [308, 312], "gradient_descent_upd": [308, 390, 391, 392, 393, 446], "lamb_upd": 308, "max_trust_ratio": [308, 315, 483, 485], "decay_lambda": [308, 315, 316, 483, 485, 486], "trust": [308, 315, 483, 485], "decai": [308, 315, 316, 483, 485, 486], "lars_upd": 308, "layerwis": [308, 316, 483, 486], "optimizer_upd": 308, "effective_grad": [308, 317], "set_with_grad": 308, "preserve_typ": [308, 319], "unset_with_grad": 308, "variable_data": 308, "bilinear_resampl": [324, 446], "bilinearli": [324, 325], "num_sampl": [324, 325, 328, 414, 415], "bilinear": [324, 325], "float_img_to_uint8_img": 324, "gradient_imag": [324, 446], "linear_resampl": 324, "interpol": [324, 328], "resampl": [324, 328], "random_crop": 324, "crop_siz": [324, 329], "image_dim": [324, 329], "seed": [324, 329, 414, 446], "randomli": [324, 329, 332, 340, 467, 475], "crop": [324, 329], "2d": [324, 329, 345, 361, 467, 470, 471, 474], "nh": [324, 329], "nw": [324, 329], "stack_imag": [324, 446], "desired_aspect_ratio": [324, 330], "width": [324, 330], "uint8_img_to_float_img": 324, "820471434542632e": [324, 331], "0082513512365273e": [324, 331], "658462758989161e": [324, 331], "003653270560797e": [324, 331], "conv1d": [332, 467], "stride": [332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "data_format": [332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "nwc": [332, 333, 334, 467, 468, 469], "dilat": [332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "convolut": [332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "d_in": [332, 333, 334, 335, 336, 337, 338], "fw": [332, 333, 334, 335, 336, 337, 338, 339], "d_out": [332, 333, 334, 335, 336, 337, 338], "slide": [332, 333, 334, 335, 336, 337, 338, 339, 467, 468, 469, 470, 471, 472, 473, 474], "ncw": [332, 333, 334, 467, 468, 469], "wio": [332, 333], "conv1d_transpos": 332, "output_shap": [332, 334, 336, 338, 467, 469, 471, 473], "conv2d": [332, 446, 467], "nhwc": [332, 335, 336, 339, 467, 470, 471, 474], "fh": [332, 335, 336, 337, 338, 339], "nchw": [332, 335, 336, 339, 467, 470, 471, 474], "hwio": [332, 335], "random_norm": [332, 335, 338, 339, 345, 363, 414, 426, 427], "unequ": [332, 335], "28": [332, 335, 338, 339, 345, 358, 434, 435], "unsqueez": [332, 335, 339], "conv2d_transpos": 332, "conv3d": [332, 467], "ndhwc": [332, 337, 338, 467, 472, 473], "volum": [332, 337], "fd": [332, 337, 338], "ncdhw": [332, 337, 338, 467, 472, 473], "dhwio": [332, 337], "conv3d_transpos": 332, "256": [332, 338], "258": [332, 338], "128": [332, 338, 345, 358], "depthwise_conv2d": [332, 446], "depthwis": [332, 339, 467, 474], "333": [332, 339], "inp": [332, 339], "prob": [332, 340, 414, 415, 467, 475], "bernoulli": [332, 340], "out_featur": [332, 340, 341], "incom": [332, 341], "outer_batch_shap": [332, 341], "inner_batch_shap": [332, 341], "in_featur": [332, 341], "cell": [332, 342, 467, 476], "num_queri": [332, 343, 344], "x_feat_dim": [332, 343], "num_kei": [332, 343, 344], "cont_feat_dim": [332, 343], "numhead": [332, 343], "feat_dim": [332, 343, 344], "out_feat_dim": [332, 343], "scaled_dot_product_attent": 332, "score": [332, 344], "04": [332, 344], "03": [332, 344, 412, 413], "35": [332, 344, 345, 347, 421, 425, 434, 435], "09": [332, 344], "08": [332, 344], "choleski": 345, "decomposit": [345, 346, 360, 363], "symmetr": [345, 346, 350, 351, 369], "u": [345, 346, 363], "73": [345, 346, 412, 413], "63": [345, 346, 358, 434, 435], "cross": [345, 370, 371, 372, 373, 446], "vif": [345, 347], "det": 345, "92": [345, 348], "293": [345, 348], "47": [345, 348], "offset": [345, 349, 366, 412, 413], "axis1": [345, 349, 374, 387], "axis2": [345, 349], "eigh": 345, "eigendecomposit": [345, 350], "qlq\u1d40": [345, 350], "orthogon": [345, 350], "eig": [345, 350], "namedtupl": [345, 350, 360, 363, 426, 427, 428], "eigenvalu": [345, 350, 351], "eigenvector": [345, 350], "eigvalsh": 345, "75": [345, 352, 358], "prepend": [345, 353], "matrix_norm": 345, "ord": [345, 354, 368], "fro": [345, 354], "matrix_pow": 345, "matrix_rank": 345, "rtol": [345, 356, 359], "singular": [345, 356, 359, 363, 364], "toler": [345, 356, 359], "largest_singular_valu": [345, 356, 359], "outer": [345, 390, 391, 392, 393], "array_lik": [345, 358], "33": [345, 358, 412, 413, 434, 435], "36": [345, 358, 434, 435], "45": [345, 358, 374, 384, 412, 413, 434, 435], "52": [345, 358, 434, 435], "50": [345, 358, 421, 424, 434, 435], "65": [345, 358, 434, 435], "72": [345, 358, 434, 435], "84": [345, 358, 434, 435], "105": [345, 358], "112": [345, 358, 434, 435], "104": [345, 358, 434, 435], "120": [345, 358], "pinv": [345, 446], "moor": [345, 359], "penros": [345, 359], "pseudo": [345, 359], "qr": 345, "orthonorm": [345, 360, 363], "slogdet": 345, "logdet": [345, 361], "equat": [345, 362, 434, 435], "coeffici": [345, 362], "svd": [345, 446], "full_matric": [345, 363], "usvh": [345, 363], "vh": [345, 363], "hermitian": [345, 363], "descend": [345, 363, 364, 431, 432, 433], "et": [345, 363], "cetera": [345, 363], "adjoint": [345, 363], "reconstruct": [345, 363, 426, 427, 429], "reconstructed_x": [345, 363], "svdval": 345, "tensordot": 345, "contract": [345, 365, 434, 435], "doubl": [345, 365], "76": [345, 365, 434, 435], "vecdot": 345, "vector_norm": 345, "singleton": [345, 368, 374, 385, 421, 423, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "liter": [345, 368], "manhattan": [345, 368], "l2": [345, 368], "euclidean": [345, 368], "vector_to_skew_symmetric_matrix": [345, 446], "mathbf": [345, 369], "mathbb": [345, 369], "skew": [345, 369], "binary_cross_entropi": 370, "entropi": [370, 371, 372, 373], "predict": [370, 371, 372, 373], "smooth": [370, 371, 372, 373], "2231": [370, 371], "3567": [370, 371], "6094": [370, 371], "9163": [370, 371], "2040": [370, 371], "5108": [370, 371], "1054": [370, 371], "discret": [370, 372], "3862944": [370, 372], "35667497": [370, 372, 373], "sparse_cross_entropi": 370, "spars": [370, 373], "logit": [370, 373], "3025851": [370, 373], "357": [370, 373], "join": [374, 376, 386, 446], "constant_pad": 374, "pad_width": [374, 377, 389], "before_1": [374, 377, 389], "after_1": [374, 377, 389], "before_n": [374, 377, 389], "after_n": [374, 377, 389], "insert": [374, 378, 394, 399, 421, 422], "manipulation_funct": [374, 378], "reorder": [374, 379], "permute_dim": 374, "permut": [374, 380, 387], "repetit": [374, 381, 388], "restor": [374, 383], "with_remaind": [374, 384], "squeez": [374, 446], "famili": [374, 386], "intxx": [374, 386], "floatxx": [374, 386], "swapax": 374, "axis0": [374, 387], "tile": [374, 446], "rep": [374, 388], "zero_pad": [374, 446], "fomaml_step": 390, "inner_cost_fn": [390, 391, 392], "outer_cost_fn": [390, 391, 392], "inner_grad_step": [390, 391, 392, 393], "inner_learning_r": [390, 391, 392, 393], "inner_optimization_step": [390, 391, 392, 393], "inner_batch_fn": [390, 391, 392], "outer_batch_fn": [390, 391, 392], "average_across_step": [390, 391, 392], "inner_v": [390, 391, 392], "keep_inner_v": [390, 391, 392], "outer_v": [390, 391, 392], "keep_outer_v": [390, 391, 392], "return_inner_v": [390, 391, 392, 393], "num_task": [390, 391, 392, 393], "maml": [390, 391, 392], "recev": [390, 391, 392], "maml_step": 390, "rece": [390, 392], "reptile_step": 390, "cost_fn": [390, 393], "reptil": [390, 393], "receivng": [390, 393], "all_nested_indic": 394, "include_nest": [394, 395], "_index": [394, 395, 405], "_base": [394, 395, 404, 405], "copy_nest": 394, "include_deriv": [394, 396, 406], "to_mut": [394, 396, 406], "mutabl": [394, 396, 406], "insert_into_nest_at_index": 394, "insert_into_nest_at_indic": 394, "map_nest_at_index": 394, "map_nest_at_indic": 394, "multi_index_nest": 394, "nested_ani": 394, "check_nest": [394, 404, 405], "conditon": [394, 404, 405], "nested_indices_wher": 394, "to_ignor": [394, 405], "stop_after_n_found": [394, 405], "_depth": [394, 406], "_tuple_check_fn": [394, 406], "_list_check_fn": [394, 406], "_dict_check_fn": [394, 406], "nested_multi_map": 394, "key_chain": [394, 407], "to_appli": [394, 407], "prune_unappli": [394, 407], "prune": [394, 407, 408, 409], "leftmost": [394, 407], "nest0": [394, 407], "ivy_arrai": [394, 407], "funciton": [394, 407], "prune_nest_at_index": 394, "prune_nest_at_indic": 394, "set_nest_at_index": 394, "set_nest_at_indic": 394, "layer_norm": 412, "normalized_idx": [412, 413], "new_std": [412, 413, 481, 482], "mini": [412, 413, 481, 482], "gamma": [412, 413], "beta": [412, 413], "0976": [412, 413], "3452": [412, 413], "2740": [412, 413], "1047": [412, 413], "5886": [412, 413], "2732": [412, 413], "7696": [412, 413], "7024": [412, 413], "2518": [412, 413], "58": [412, 413], "283": [412, 413], "585": [412, 413], "909": [412, 413], "628": [412, 413], "997": [412, 413], "0707": [412, 413], "109": [412, 413], "877": [412, 413], "norm_idx": [412, 413], "228": [412, 413], "0285": [412, 413], "199": [412, 413], "204": [412, 413], "335": [412, 413, 426, 427], "multinomi": 414, "population_s": [414, 415], "draw": [414, 415, 417, 418], "unnorm": [414, 415], "drawn": [414, 415, 416, 417, 418], "home": [414, 415, 417, 418], "randint": [414, 446], "uniformli": [414, 416, 418], "highest": [414, 416], "parameter": [414, 417, 418], "6444774682897879": [414, 417], "boundari": [414, 418], "26431865": [414, 418], "475": [414, 418], "878": [414, 418], "861": [414, 418], "89150229": [414, 418], "89629126": [414, 418], "94198485": [414, 418], "91405606": [414, 418], "72848724": [414, 418], "7550739": [414, 418], "624": [414, 418], "00109": [414, 418], "seed_valu": [414, 419], "shuffl": [414, 446], "argmax": [421, 446], "occurr": [421, 422, 423, 426, 427], "argmin": [421, 446], "yield": [421, 425], "43": [421, 425], "unique_al": 426, "x_j": [426, 427, 428, 430], "impli": [426, 427, 428, 430], "inverse_indic": [426, 427, 429], "aggreg": [426, 427], "fourth": [426, 427], "1141": [426, 427], "8101": [426, 427], "2119": [426, 427], "3519": [426, 427], "40501155": [426, 427], "77361575": [426, 427], "97776199": [426, 427], "36831157": [426, 427], "89148434": [426, 427], "9512272": [426, 427], "67542176": [426, 427], "41985657": [426, 427], "23478023": [426, 427], "9298": [426, 427], "8460": [426, 427], "6252": [426, 427], "4033": [426, 427], "7443": [426, 427], "2577": [426, 427], "3707": [426, 427], "0545": [426, 427], "3238": [426, 427], "5944": [426, 427], "0775": [426, 427], "4327": [426, 427], "176": [426, 427], "889": [426, 427], "175": [426, 427], "763": [426, 427], "071": [426, 427], "262": [426, 427], "456": [426, 427], "114": [426, 427], "349": [426, 427], "615": [426, 427], "594": [426, 427], "212": [426, 427], "457": [426, 427], "827": [426, 427], "209": [426, 427], "unique_count": 426, "unique_invers": 426, "unique_valu": 426, "argsort": 431, "ascend": [431, 432], "einsum": 434, "einstein": [434, 435], "summat": [434, 435], "seq": [434, 435], "jk": [434, 435], "ik": [434, 435], "126": [434, 435], "510": [434, 435], "99": [434, 435], "108": [434, 435], "117": [434, 435], "sentinel": [434, 436, 438], "unsign": [434, 439, 441], "degre": [434, 440, 442], "bessel": [434, 440, 442], "8164966": [434, 440], "varianc": [434, 442], "unbias": [434, 442], "autom": 446, "grow": 446, "ai": 446, "got": 446, "colab": 446, "sharp": 446, "weekli": 446, "event": 446, "immedi": 446, "favorit": 446, "jax_concat": 446, "tf_concat": 446, "np_concat": 446, "mx_concat": 446, "torch_concat": 446, "prompt": 446, "get_devic": 446, "reduce_prod": 446, "linalg": 446, "neural_net": 446, "ecosystem": [446, 452], "popular": [446, 452], "acceler": 446, "articl": 446, "lenton2021ivi": 446, "inter": 446, "author": 446, "lenton": 446, "daniel": 446, "pardo": 446, "fabio": 446, "falck": 446, "fabian": 446, "jame": 446, "stephen": 446, "clark": 446, "ronald": 446, "journal": 446, "arxiv": 446, "preprint": 446, "2102": 446, "02886": 446, "2021": 446, "add_array_spec": 449, "fn_array_spec": 449, "geglu": 453, "native_modul": [456, 457], "native_module_class": [456, 457], "firstlayersiren": 458, "kaimingnorm": [458, 462], "negative_slop": 458, "Ones": 458, "siren": 458, "w0": [458, 464], "filter_s": [467, 468, 469], "1d": [467, 468, 469], "conv1dtranspos": 467, "filter_shap": [467, 470, 471, 472, 473, 474], "conv2dtranspos": 467, "conv3dtranspos": 467, "depthwiseconv2d": 467, "num_channel": [467, 474], "bernoul": [467, 475], "num_lay": [467, 476], "return_sequ": [467, 476], "return_st": [467, 476], "get_initial_st": [467, 476], "dens": [467, 477], "multiheadattent": 467, "query_dim": [467, 478], "head_dim": [467, 478], "dropout_r": [467, 478], "context_dim": [467, 478], "with_to_q_fn": [467, 478], "with_to_kv_fn": [467, 478], "with_to_out_fn": [467, 478], "build_mod": [467, 478, 479, 480], "on_init": [467, 478, 479, 480], "__call__": [467, 478, 479, 480], "store_var": [479, 480], "arg_stateful_idx": [479, 480], "kwarg_stateful_idx": [479, 480], "fallback_to_non_compil": [479, 480, 483, 487], "with_partial_v": [479, 480], "initialz": [479, 480], "from_cal": [479, 480], "check_submod_ret": [479, 480], "get_mod_kei": [479, 480], "top_mod": [479, 480], "mod_depth": [479, 480], "mod_height": [479, 480], "mod_with_top_mod_key_chain": [479, 480], "save_weight": [479, 480], "weights_path": [479, 480], "show_mod_in_top_mod": [479, 480], "upper_depth": [479, 480], "lower_depth": [479, 480], "show_structur": [479, 480], "show_v_in_top_v": [479, 480], "sub_mod": [479, 480], "show_v": [479, 480], "track_submod_call_ord": [479, 480], "track_submod_ret": [479, 480], "v_with_top_v_key_chain": [479, 480], "layernorm": 481, "normalized_shap": [481, 482], "elementwise_affin": [481, 482], "trail": [481, 482], "affin": [481, 482], "0001": [483, 484, 485], "init_on_first_step": [483, 487], "ignore_miss": [483, 487], "overriden": [483, 487], "sgd": 483, "stochast": [483, 488], "sub_modul": [489, 490], "color": [492, 493]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [449, 0, 0, "-", "inspection"], [492, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "torch"]], "ivy.functional.frontends.torch": [[67, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[68, 3, 1, "", "tan"]], "ivy.functional.ivy": [[70, 0, 0, "-", "activations"], [78, 0, 0, "-", "compilation"], [80, 0, 0, "-", "constants"], [81, 0, 0, "-", "creation"], [100, 0, 0, "-", "data_type"], [134, 0, 0, "-", "device"], [184, 0, 0, "-", "elementwise"], [244, 0, 0, "-", "general"], [308, 0, 0, "-", "gradients"], [324, 0, 0, "-", "image"], [332, 0, 0, "-", "layers"], [345, 0, 0, "-", "linear_algebra"], [370, 0, 0, "-", "losses"], [374, 0, 0, "-", "manipulation"], [390, 0, 0, "-", "meta"], [394, 0, 0, "-", "nest"], [412, 0, 0, "-", "norms"], [414, 0, 0, "-", "random"], [421, 0, 0, "-", "searching"], [426, 0, 0, "-", "set"], [431, 0, 0, "-", "sorting"], [434, 0, 0, "-", "statistical"], [443, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[71, 3, 1, "", "gelu"], [72, 3, 1, "", "leaky_relu"], [73, 3, 1, "", "relu"], [74, 3, 1, "", "sigmoid"], [75, 3, 1, "", "softmax"], [76, 3, 1, "", "softplus"], [77, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[79, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[80, 4, 1, "", "e"], [80, 4, 1, "", "inf"], [80, 4, 1, "", "nan"], [80, 4, 1, "", "newaxis"], [80, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[82, 3, 1, "", "arange"], [81, 3, 1, "", "array"], [83, 3, 1, "", "asarray"], [84, 3, 1, "", "empty"], [85, 3, 1, "", "empty_like"], [86, 3, 1, "", "eye"], [87, 3, 1, "", "from_dlpack"], [88, 3, 1, "", "full"], [89, 3, 1, "", "full_like"], [90, 3, 1, "", "linspace"], [91, 3, 1, "", "logspace"], [92, 3, 1, "", "meshgrid"], [93, 3, 1, "", "native_array"], [94, 3, 1, "", "ones"], [95, 3, 1, "", "ones_like"], [96, 3, 1, "", "tril"], [97, 3, 1, "", "triu"], [98, 3, 1, "", "zeros"], [99, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[100, 1, 1, "", "DefaultDtype"], [100, 1, 1, "", "DefaultFloatDtype"], [100, 1, 1, "", "DefaultIntDtype"], [104, 3, 1, "", "as_ivy_dtype"], [105, 3, 1, "", "as_native_dtype"], [106, 3, 1, "", "astype"], [107, 3, 1, "", "broadcast_arrays"], [108, 3, 1, "", "broadcast_to"], [109, 3, 1, "", "can_cast"], [110, 3, 1, "", "closest_valid_dtype"], [111, 3, 1, "", "convert_dtype"], [112, 3, 1, "", "default_dtype"], [113, 3, 1, "", "default_float_dtype"], [114, 3, 1, "", "default_int_dtype"], [115, 3, 1, "", "dtype"], [116, 3, 1, "", "dtype_bits"], [117, 3, 1, "", "finfo"], [118, 3, 1, "", "function_supported_dtypes"], [119, 3, 1, "", "function_unsupported_dtypes"], [120, 3, 1, "", "iinfo"], [121, 3, 1, "", "invalid_dtype"], [122, 3, 1, "", "is_float_dtype"], [123, 3, 1, "", "is_int_dtype"], [124, 3, 1, "", "promote_types"], [125, 3, 1, "", "result_type"], [126, 3, 1, "", "set_default_dtype"], [127, 3, 1, "", "set_default_float_dtype"], [128, 3, 1, "", "set_default_int_dtype"], [129, 3, 1, "", "type_promote_arrays"], [130, 3, 1, "", "unset_default_dtype"], [131, 3, 1, "", "unset_default_float_dtype"], [132, 3, 1, "", "unset_default_int_dtype"], [133, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[134, 1, 1, "", "DefaultDevice"], [136, 1, 1, "", "DevClonedItem"], [137, 1, 1, "", "DevClonedIter"], [138, 1, 1, "", "DevClonedNest"], [139, 1, 1, "", "DevDistItem"], [140, 1, 1, "", "DevDistIter"], [141, 1, 1, "", "DevDistNest"], [134, 1, 1, "", "DevManager"], [143, 1, 1, "", "DevMapper"], [144, 1, 1, "", "DevMapperMultiProc"], [134, 1, 1, "", "MultiDev"], [146, 1, 1, "", "MultiDevItem"], [147, 1, 1, "", "MultiDevIter"], [148, 1, 1, "", "MultiDevNest"], [149, 1, 1, "", "Profiler"], [150, 3, 1, "", "as_ivy_dev"], [151, 3, 1, "", "as_native_dev"], [152, 3, 1, "", "clear_mem_on_dev"], [153, 3, 1, "", "default_device"], [154, 3, 1, "", "dev"], [155, 3, 1, "", "dev_clone"], [156, 3, 1, "", "dev_clone_array"], [157, 3, 1, "", "dev_clone_iter"], [158, 3, 1, "", "dev_clone_nest"], [159, 3, 1, "", "dev_dist"], [160, 3, 1, "", "dev_dist_array"], [161, 3, 1, "", "dev_dist_iter"], [162, 3, 1, "", "dev_dist_nest"], [163, 3, 1, "", "dev_unify"], [164, 3, 1, "", "dev_unify_array"], [165, 3, 1, "", "dev_unify_iter"], [166, 3, 1, "", "dev_unify_nest"], [167, 3, 1, "", "dev_util"], [168, 3, 1, "", "get_all_ivy_arrays_on_dev"], [169, 3, 1, "", "gpu_is_available"], [170, 3, 1, "", "num_cpu_cores"], [171, 3, 1, "", "num_gpus"], [172, 3, 1, "", "num_ivy_arrays_on_dev"], [173, 3, 1, "", "percent_used_mem_on_dev"], [174, 3, 1, "", "print_all_ivy_arrays_on_dev"], [175, 3, 1, "", "set_default_device"], [176, 3, 1, "", "set_split_factor"], [177, 3, 1, "", "split_factor"], [178, 3, 1, "", "split_func_call"], [179, 3, 1, "", "to_device"], [180, 3, 1, "", "total_mem_on_dev"], [181, 3, 1, "", "tpu_is_available"], [182, 3, 1, "", "unset_default_device"], [183, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[134, 2, 1, "", "__enter__"], [134, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "da_tune_step"], [134, 5, 1, "", "dim_size"], [134, 2, 1, "", "ds_tune_step"], [134, 2, 1, "", "map"], [134, 2, 1, "", "repeated_config_check"], [134, 5, 1, "", "tune_step"], [134, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[144, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[134, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "items"], [146, 2, 1, "", "keys"], [146, 5, 1, "", "shape"], [146, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "at_dev"], [147, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "start"], [149, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[185, 3, 1, "", "abs"], [186, 3, 1, "", "acos"], [187, 3, 1, "", "acosh"], [188, 3, 1, "", "add"], [189, 3, 1, "", "asin"], [190, 3, 1, "", "asinh"], [191, 3, 1, "", "atan"], [192, 3, 1, "", "atan2"], [193, 3, 1, "", "atanh"], [194, 3, 1, "", "bitwise_and"], [195, 3, 1, "", "bitwise_invert"], [196, 3, 1, "", "bitwise_left_shift"], [197, 3, 1, "", "bitwise_or"], [198, 3, 1, "", "bitwise_right_shift"], [199, 3, 1, "", "bitwise_xor"], [200, 3, 1, "", "ceil"], [201, 3, 1, "", "cos"], [202, 3, 1, "", "cosh"], [203, 3, 1, "", "divide"], [204, 3, 1, "", "equal"], [205, 3, 1, "", "erf"], [206, 3, 1, "", "exp"], [207, 3, 1, "", "expm1"], [208, 3, 1, "", "floor"], [209, 3, 1, "", "floor_divide"], [210, 3, 1, "", "greater"], [211, 3, 1, "", "greater_equal"], [212, 3, 1, "", "isfinite"], [213, 3, 1, "", "isinf"], [214, 3, 1, "", "isnan"], [215, 3, 1, "", "less"], [216, 3, 1, "", "less_equal"], [217, 3, 1, "", "log"], [218, 3, 1, "", "log10"], [219, 3, 1, "", "log1p"], [220, 3, 1, "", "log2"], [221, 3, 1, "", "logaddexp"], [222, 3, 1, "", "logical_and"], [223, 3, 1, "", "logical_not"], [224, 3, 1, "", "logical_or"], [225, 3, 1, "", "logical_xor"], [226, 3, 1, "", "maximum"], [227, 3, 1, "", "minimum"], [228, 3, 1, "", "multiply"], [229, 3, 1, "", "negative"], [230, 3, 1, "", "not_equal"], [231, 3, 1, "", "positive"], [232, 3, 1, "", "pow"], [233, 3, 1, "", "remainder"], [234, 3, 1, "", "round"], [235, 3, 1, "", "sign"], [236, 3, 1, "", "sin"], [237, 3, 1, "", "sinh"], [238, 3, 1, "", "sqrt"], [239, 3, 1, "", "square"], [240, 3, 1, "", "subtract"], [241, 3, 1, "", "tan"], [242, 3, 1, "", "tanh"], [243, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[245, 3, 1, "", "all_equal"], [246, 3, 1, "", "arg_info"], [247, 3, 1, "", "arg_names"], [248, 3, 1, "", "array_equal"], [249, 3, 1, "", "arrays_equal"], [250, 3, 1, "", "assert_supports_inplace"], [251, 3, 1, "", "cache_fn"], [252, 3, 1, "", "clip_matrix_norm"], [253, 3, 1, "", "clip_vector_norm"], [254, 3, 1, "", "container_types"], [255, 3, 1, "", "copy_array"], [256, 3, 1, "", "cumprod"], [257, 3, 1, "", "cumsum"], [258, 3, 1, "", "current_backend_str"], [259, 3, 1, "", "default"], [260, 3, 1, "", "einops_rearrange"], [261, 3, 1, "", "einops_reduce"], [262, 3, 1, "", "einops_repeat"], [263, 3, 1, "", "exists"], [264, 3, 1, "", "floormod"], [265, 3, 1, "", "fourier_encode"], [266, 3, 1, "", "gather"], [267, 3, 1, "", "gather_nd"], [268, 3, 1, "", "get_all_arrays_in_memory"], [269, 3, 1, "", "get_min_base"], [270, 3, 1, "", "get_min_denominator"], [271, 3, 1, "", "get_num_dims"], [272, 3, 1, "", "get_referrers_recursive"], [273, 3, 1, "", "has_nans"], [274, 3, 1, "", "indices_where"], [275, 3, 1, "", "inplace_arrays_supported"], [276, 3, 1, "", "inplace_decrement"], [277, 3, 1, "", "inplace_increment"], [278, 3, 1, "", "inplace_update"], [279, 3, 1, "", "inplace_variables_supported"], [280, 3, 1, "", "is_array"], [281, 3, 1, "", "is_ivy_array"], [282, 3, 1, "", "is_ivy_container"], [283, 3, 1, "", "is_native_array"], [284, 3, 1, "", "match_kwargs"], [285, 3, 1, "", "multiprocessing"], [286, 3, 1, "", "num_arrays_in_memory"], [287, 3, 1, "", "one_hot"], [288, 3, 1, "", "print_all_arrays_in_memory"], [289, 3, 1, "", "queue_timeout"], [290, 3, 1, "", "scatter_flat"], [291, 3, 1, "", "scatter_nd"], [292, 3, 1, "", "set_min_base"], [293, 3, 1, "", "set_min_denominator"], [294, 3, 1, "", "set_queue_timeout"], [295, 3, 1, "", "set_tmp_dir"], [296, 3, 1, "", "shape"], [297, 3, 1, "", "shape_to_tuple"], [298, 3, 1, "", "stable_divide"], [299, 3, 1, "", "stable_pow"], [300, 3, 1, "", "supports_inplace"], [301, 3, 1, "", "tmp_dir"], [302, 3, 1, "", "to_list"], [303, 3, 1, "", "to_numpy"], [304, 3, 1, "", "to_scalar"], [305, 3, 1, "", "try_else_none"], [306, 3, 1, "", "unstack"], [307, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[308, 1, 1, "", "GradientTracking"], [310, 3, 1, "", "adam_step"], [311, 3, 1, "", "adam_update"], [312, 3, 1, "", "execute_with_gradients"], [313, 3, 1, "", "gradient_descent_update"], [314, 3, 1, "", "is_variable"], [315, 3, 1, "", "lamb_update"], [316, 3, 1, "", "lars_update"], [317, 3, 1, "", "optimizer_update"], [318, 3, 1, "", "set_with_grads"], [319, 3, 1, "", "stop_gradient"], [320, 3, 1, "", "unset_with_grads"], [321, 3, 1, "", "variable"], [322, 3, 1, "", "variable_data"], [323, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[308, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[325, 3, 1, "", "bilinear_resample"], [326, 3, 1, "", "float_img_to_uint8_img"], [327, 3, 1, "", "gradient_image"], [328, 3, 1, "", "linear_resample"], [329, 3, 1, "", "random_crop"], [330, 3, 1, "", "stack_images"], [331, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[333, 3, 1, "", "conv1d"], [334, 3, 1, "", "conv1d_transpose"], [335, 3, 1, "", "conv2d"], [336, 3, 1, "", "conv2d_transpose"], [337, 3, 1, "", "conv3d"], [338, 3, 1, "", "conv3d_transpose"], [339, 3, 1, "", "depthwise_conv2d"], [340, 3, 1, "", "dropout"], [341, 3, 1, "", "linear"], [342, 3, 1, "", "lstm_update"], [343, 3, 1, "", "multi_head_attention"], [344, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[346, 3, 1, "", "cholesky"], [347, 3, 1, "", "cross"], [348, 3, 1, "", "det"], [349, 3, 1, "", "diagonal"], [350, 3, 1, "", "eigh"], [351, 3, 1, "", "eigvalsh"], [352, 3, 1, "", "inv"], [353, 3, 1, "", "matmul"], [354, 3, 1, "", "matrix_norm"], [355, 3, 1, "", "matrix_power"], [356, 3, 1, "", "matrix_rank"], [357, 3, 1, "", "matrix_transpose"], [358, 3, 1, "", "outer"], [359, 3, 1, "", "pinv"], [360, 3, 1, "", "qr"], [361, 3, 1, "", "slogdet"], [362, 3, 1, "", "solve"], [363, 3, 1, "", "svd"], [364, 3, 1, "", "svdvals"], [365, 3, 1, "", "tensordot"], [366, 3, 1, "", "trace"], [367, 3, 1, "", "vecdot"], [368, 3, 1, "", "vector_norm"], [369, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[371, 3, 1, "", "binary_cross_entropy"], [372, 3, 1, "", "cross_entropy"], [373, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[375, 3, 1, "", "clip"], [376, 3, 1, "", "concat"], [377, 3, 1, "", "constant_pad"], [378, 3, 1, "", "expand_dims"], [379, 3, 1, "", "flip"], [380, 3, 1, "", "permute_dims"], [381, 3, 1, "", "repeat"], [382, 3, 1, "", "reshape"], [383, 3, 1, "", "roll"], [384, 3, 1, "", "split"], [385, 3, 1, "", "squeeze"], [386, 3, 1, "", "stack"], [387, 3, 1, "", "swapaxes"], [388, 3, 1, "", "tile"], [389, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[391, 3, 1, "", "fomaml_step"], [392, 3, 1, "", "maml_step"], [393, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[395, 3, 1, "", "all_nested_indices"], [396, 3, 1, "", "copy_nest"], [397, 3, 1, "", "index_nest"], [398, 3, 1, "", "insert_into_nest_at_index"], [399, 3, 1, "", "insert_into_nest_at_indices"], [400, 3, 1, "", "map"], [401, 3, 1, "", "map_nest_at_index"], [402, 3, 1, "", "map_nest_at_indices"], [403, 3, 1, "", "multi_index_nest"], [404, 3, 1, "", "nested_any"], [405, 3, 1, "", "nested_indices_where"], [406, 3, 1, "", "nested_map"], [407, 3, 1, "", "nested_multi_map"], [408, 3, 1, "", "prune_nest_at_index"], [409, 3, 1, "", "prune_nest_at_indices"], [410, 3, 1, "", "set_nest_at_index"], [411, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[413, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[415, 3, 1, "", "multinomial"], [416, 3, 1, "", "randint"], [417, 3, 1, "", "random_normal"], [418, 3, 1, "", "random_uniform"], [419, 3, 1, "", "seed"], [420, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[422, 3, 1, "", "argmax"], [423, 3, 1, "", "argmin"], [424, 3, 1, "", "nonzero"], [425, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[427, 3, 1, "", "unique_all"], [428, 3, 1, "", "unique_counts"], [429, 3, 1, "", "unique_inverse"], [430, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[432, 3, 1, "", "argsort"], [433, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[435, 3, 1, "", "einsum"], [436, 3, 1, "", "max"], [437, 3, 1, "", "mean"], [438, 3, 1, "", "min"], [439, 3, 1, "", "prod"], [440, 3, 1, "", "std"], [441, 3, 1, "", "sum"], [442, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[444, 3, 1, "", "all"], [445, 3, 1, "", "any"]], "ivy.inspection": [[450, 3, 1, "", "add_array_specs"], [451, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[453, 0, 0, "-", "activations"], [456, 0, 0, "-", "converters"], [458, 0, 0, "-", "initializers"], [467, 0, 0, "-", "layers"], [479, 0, 0, "-", "module"], [481, 0, 0, "-", "norms"], [483, 0, 0, "-", "optimizers"], [489, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[454, 1, 1, "", "GEGLU"], [455, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[454, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[455, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[457, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[458, 1, 1, "", "Constant"], [460, 1, 1, "", "FirstLayerSiren"], [461, 1, 1, "", "GlorotUniform"], [458, 1, 1, "", "KaimingNormal"], [463, 1, 1, "", "Ones"], [464, 1, 1, "", "Siren"], [458, 1, 1, "", "Uniform"], [466, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[458, 2, 1, "", "__init__"], [458, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[460, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[461, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[458, 2, 1, "", "__init__"], [458, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[463, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[464, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[458, 2, 1, "", "__init__"], [458, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[468, 1, 1, "", "Conv1D"], [469, 1, 1, "", "Conv1DTranspose"], [470, 1, 1, "", "Conv2D"], [471, 1, 1, "", "Conv2DTranspose"], [472, 1, 1, "", "Conv3D"], [473, 1, 1, "", "Conv3DTranspose"], [474, 1, 1, "", "DepthwiseConv2D"], [475, 1, 1, "", "Dropout"], [476, 1, 1, "", "LSTM"], [477, 1, 1, "", "Linear"], [478, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[477, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[478, 2, 1, "", "__init__"]], "ivy.stateful.module": [[480, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[480, 2, 1, "", "__init__"], [480, 2, 1, "", "build"], [480, 5, 1, "", "build_mode"], [480, 5, 1, "", "built"], [480, 2, 1, "", "check_submod_rets"], [480, 2, 1, "", "get_mod_key"], [480, 2, 1, "", "mod_depth"], [480, 2, 1, "", "mod_height"], [480, 2, 1, "", "mod_with_top_mod_key_chain"], [480, 2, 1, "", "save_weights"], [480, 2, 1, "", "show_mod_in_top_mod"], [480, 2, 1, "", "show_structure"], [480, 2, 1, "", "show_v_in_top_v"], [480, 2, 1, "", "sub_mods"], [480, 2, 1, "", "track_submod_call_order"], [480, 2, 1, "", "track_submod_rets"], [480, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[482, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[482, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[484, 1, 1, "", "Adam"], [485, 1, 1, "", "LAMB"], [486, 1, 1, "", "LARS"], [487, 1, 1, "", "Optimizer"], [488, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "set_state"], [484, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "set_state"], [485, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "set_state"], [486, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "set_state"], [487, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[488, 2, 1, "", "__init__"], [488, 2, 1, "", "set_state"], [488, 5, 1, "", "state"]], "ivy.stateful.sequential": [[490, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[490, 2, 1, "", "__init__"]], "ivy.verbosity": [[493, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 446], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 446], "set": [18, 29, 426], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 446], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 68, 241], "roll": [25, 383], "add": [25, 188], "hypothesi": 27, "data": [27, 33, 41, 55, 100, 426, 427, 428, 430], "gener": [27, 244], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 100], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 479, 480], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 134], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 115], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 78, 79], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 458], "optim": [42, 483, 487], "transpil": 43, "role": 43, "convert": [43, 456], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 446], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 296, 426, 427, 428, 430], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "torch": 66, "pointwis": 67, "op": 67, "activ": [70, 453], "gelu": [71, 455], "leaky_relu": 72, "relu": 73, "sigmoid": 74, "softmax": 75, "softplu": 76, "tanh": [77, 242], "constant": 80, "creation": 81, "note": [81, 87], "arang": 82, "asarrai": 83, "empti": 84, "empty_lik": 85, "ey": 86, "from_dlpack": 87, "full": 88, "full_lik": 89, "linspac": 90, "logspac": 91, "meshgrid": 92, "native_arrai": 93, "ones": 94, "ones_lik": 95, "tril": 96, "triu": 97, "zero": [98, 466], "zeros_lik": 99, "as_ivy_dtyp": 104, "as_native_dtyp": 105, "astyp": 106, "broadcast_arrai": 107, "broadcast_to": 108, "can_cast": 109, "closest_valid_dtyp": 110, "convert_dtyp": 111, "default_dtyp": 112, "default_float_dtyp": 113, "default_int_dtyp": 114, "dtype_bit": 116, "finfo": 117, "function_supported_dtyp": 118, "function_unsupported_dtyp": 119, "iinfo": 120, "invalid_dtyp": 121, "is_float_dtyp": 122, "is_int_dtyp": 123, "promote_typ": 124, "result_typ": 125, "set_default_dtyp": 126, "set_default_float_dtyp": 127, "set_default_int_dtyp": 128, "type_promote_arrai": 129, "unset_default_dtyp": 130, "unset_default_float_dtyp": 131, "unset_default_int_dtyp": 132, "valid_dtyp": 133, "devcloneditem": 136, "devclonedit": 137, "devclonednest": 138, "devdistitem": 139, "devdistit": 140, "devdistnest": 141, "devmapp": 143, "devmappermultiproc": 144, "multidevitem": 146, "multidevit": 147, "multidevnest": 148, "profil": 149, "as_ivy_dev": 150, "as_native_dev": 151, "clear_mem_on_dev": 152, "default_devic": 153, "dev": 154, "dev_clon": 155, "dev_clone_arrai": 156, "dev_clone_it": 157, "dev_clone_nest": 158, "dev_dist": 159, "dev_dist_arrai": 160, "dev_dist_it": 161, "dev_dist_nest": 162, "dev_unifi": 163, "dev_unify_arrai": 164, "dev_unify_it": 165, "dev_unify_nest": 166, "dev_util": 167, "get_all_ivy_arrays_on_dev": 168, "gpu_is_avail": 169, "num_cpu_cor": 170, "num_gpu": 171, "num_ivy_arrays_on_dev": 172, "percent_used_mem_on_dev": 173, "print_all_ivy_arrays_on_dev": 174, "set_default_devic": 175, "set_split_factor": 176, "split_factor": 177, "split_func_cal": 178, "to_devic": 179, "total_mem_on_dev": 180, "tpu_is_avail": 181, "unset_default_devic": 182, "used_mem_on_dev": 183, "elementwis": 184, "ab": 185, "aco": 186, "acosh": 187, "asin": 189, "asinh": 190, "atan": 191, "atan2": 192, "atanh": 193, "bitwise_and": 194, "bitwise_invert": 195, "bitwise_left_shift": 196, "bitwise_or": 197, "bitwise_right_shift": 198, "bitwise_xor": 199, "ceil": 200, "co": 201, "cosh": 202, "divid": 203, "equal": 204, "erf": 205, "exp": 206, "expm1": 207, "floor": 208, "floor_divid": 209, "greater": 210, "greater_equ": 211, "isfinit": 212, "isinf": 213, "isnan": 214, "less": 215, "less_equ": 216, "log": 217, "log10": 218, "log1p": 219, "log2": 220, "logaddexp": 221, "logical_and": 222, "logical_not": 223, "logical_or": 224, "logical_xor": 225, "maximum": 226, "minimum": 227, "multipli": 228, "neg": 229, "not_equ": 230, "posit": 231, "pow": 232, "remaind": 233, "round": 234, "sign": 235, "sin": 236, "sinh": 237, "sqrt": 238, "squar": 239, "subtract": 240, "trunc": 243, "all_equ": 245, "arg_info": 246, "arg_nam": 247, "array_equ": 248, "arrays_equ": 249, "assert_supports_inplac": 250, "cache_fn": 251, "clip_matrix_norm": 252, "clip_vector_norm": 253, "container_typ": 254, "copy_arrai": 255, "cumprod": 256, "cumsum": 257, "current_backend_str": 258, "default": 259, "einops_rearrang": 260, "einops_reduc": 261, "einops_repeat": 262, "exist": 263, "floormod": 264, "fourier_encod": 265, "gather": 266, "gather_nd": 267, "get_all_arrays_in_memori": 268, "get_min_bas": 269, "get_min_denomin": 270, "get_num_dim": 271, "get_referrers_recurs": 272, "has_nan": 273, "indices_wher": 274, "inplace_arrays_support": 275, "inplace_decr": 276, "inplace_incr": 277, "inplace_upd": 278, "inplace_variables_support": 279, "is_arrai": 280, "is_ivy_arrai": 281, "is_ivy_contain": 282, "is_native_arrai": 283, "match_kwarg": 284, "multiprocess": 285, "num_arrays_in_memori": 286, "one_hot": 287, "print_all_arrays_in_memori": 288, "queue_timeout": 289, "scatter_flat": 290, "scatter_nd": 291, "set_min_bas": 292, "set_min_denomin": 293, "set_queue_timeout": 294, "set_tmp_dir": 295, "shape_to_tupl": 297, "stable_divid": 298, "stable_pow": 299, "supports_inplac": 300, "tmp_dir": 301, "to_list": 302, "to_numpi": 303, "to_scalar": 304, "try_else_non": 305, "unstack": 306, "value_is_nan": 307, "gradient": 308, "adam_step": 310, "adam_upd": 311, "execute_with_gradi": 312, "gradient_descent_upd": 313, "is_vari": 314, "lamb_upd": 315, "lars_upd": 316, "optimizer_upd": 317, "set_with_grad": 318, "stop_gradi": 319, "unset_with_grad": 320, "variabl": 321, "variable_data": 322, "with_grad": 323, "imag": 324, "bilinear_resampl": 325, "float_img_to_uint8_img": 326, "gradient_imag": 327, "linear_resampl": 328, "random_crop": 329, "stack_imag": 330, "uint8_img_to_float_img": 331, "layer": [332, 467], "conv1d": [333, 468], "conv1d_transpos": 334, "conv2d": [335, 470], "conv2d_transpos": 336, "conv3d": [337, 472], "conv3d_transpos": 338, "depthwise_conv2d": 339, "dropout": [340, 475], "linear": [341, 345, 477], "lstm_updat": 342, "multi_head_attent": 343, "scaled_dot_product_attent": 344, "algebra": 345, "choleski": 346, "cross": 347, "det": 348, "diagon": 349, "eigh": 350, "eigvalsh": 351, "inv": 352, "matmul": 353, "matrix_norm": 354, "matrix_pow": 355, "matrix_rank": 356, "matrix_transpos": 357, "outer": 358, "pinv": 359, "qr": 360, "slogdet": 361, "solv": 362, "svd": 363, "svdval": 364, "tensordot": 365, "trace": 366, "vecdot": 367, "vector_norm": 368, "vector_to_skew_symmetric_matrix": 369, "loss": 370, "binary_cross_entropi": 371, "cross_entropi": 372, "sparse_cross_entropi": 373, "manipul": 374, "clip": 375, "concat": 376, "constant_pad": 377, "expand_dim": 378, "flip": 379, "permute_dim": 380, "repeat": 381, "reshap": 382, "split": 384, "squeez": 385, "stack": 386, "swapax": 387, "tile": 388, "zero_pad": 389, "meta": 390, "fomaml_step": 391, "maml_step": 392, "reptile_step": 393, "nest": 394, "all_nested_indic": 395, "copy_nest": 396, "index_nest": 397, "insert_into_nest_at_index": 398, "insert_into_nest_at_indic": 399, "map": 400, "map_nest_at_index": 401, "map_nest_at_indic": 402, "multi_index_nest": 403, "nested_ani": 404, "nested_indices_wher": 405, "nested_map": 406, "nested_multi_map": 407, "prune_nest_at_index": 408, "prune_nest_at_indic": 409, "set_nest_at_index": 410, "set_nest_at_indic": 411, "norm": [412, 481], "layer_norm": 413, "random": 414, "multinomi": 415, "randint": 416, "random_norm": 417, "random_uniform": 418, "seed": 419, "shuffl": 420, "search": 421, "argmax": 422, "argmin": 423, "nonzero": 424, "where": 425, "depend": [426, 427, 428, 430], "output": [426, 427, 428, 430], "unique_al": 427, "unique_count": 428, "unique_invers": 429, "unique_valu": 430, "sort": [431, 433], "argsort": 432, "statist": 434, "einsum": 435, "max": 436, "mean": 437, "min": 438, "prod": 439, "std": 440, "sum": 441, "var": 442, "util": 443, "all": 444, "ani": 445, "content": 446, "overview": 446, "quick": 446, "start": 446, "roadmap": [446, 452], "citat": 446, "inspect": 449, "add_array_spec": 450, "fn_array_spec": 451, "geglu": 454, "to_ivy_modul": 457, "firstlayersiren": 460, "glorotuniform": 461, "Ones": 463, "siren": 464, "conv1dtranspos": 469, "conv2dtranspos": 471, "conv3dtranspos": 473, "depthwiseconv2d": 474, "lstm": 476, "multiheadattent": 478, "layernorm": 482, "adam": 484, "lamb": 485, "lar": 486, "sgd": 488, "sequenti": [489, 490], "verbos": 492, "cprint": 493}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})