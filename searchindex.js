Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argsort", "array/array_methods/asarray", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/det", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einsum", "array/array_methods/empty_like", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/from_dlpack", "array/array_methods/full_like", "array/array_methods/gather_nd", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/inv", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/layer_norm", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/meshgrid", "array/array_methods/min", "array/array_methods/multiply", "array/array_methods/native_array", "array/array_methods/negative", "array/array_methods/not_equal", "array/array_methods/ones_like", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/softplus", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/trace", "array/array_methods/tril", "array/array_methods/triu", "array/array_methods/trunc", "array/array_methods/unique_counts", "array/array_methods/var", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/zero_pad", "array/array_methods/zeros_like", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container/MultiDevContainer", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/at_dev", "container/container_methods/at_devs", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/clip", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross_entropy", "container/container_methods/divide", "container/container_methods/einsum", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/gather_nd", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/matmul", "container/container_methods/max", "container/container_methods/mean", "container/container_methods/min", "container/container_methods/multiply", "container/container_methods/negative", "container/container_methods/not_equal", "container/container_methods/optimizer_update", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/random_uniform", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/softplus", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_adam_step", "container/container_methods/static_adam_update", "container/container_methods/static_add", "container/container_methods/static_all_equal", "container/container_methods/static_argsort", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_can_cast", "container/container_methods/static_clip", "container/container_methods/static_cross_entropy", "container/container_methods/static_divide", "container/container_methods/static_gather_nd", "container/container_methods/static_gradient_descent_update", "container/container_methods/static_is_variable", "container/container_methods/static_lamb_update", "container/container_methods/static_lars_update", "container/container_methods/static_multiply", "container/container_methods/static_optimizer_update", "container/container_methods/static_randint", "container/container_methods/static_random_uniform", "container/container_methods/static_roll", "container/container_methods/static_softplus", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_subtract", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_unique_counts", "container/container_methods/std", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tile", "container/container_methods/trunc", "container/container_methods/unique_counts", "container/container_methods/var", "container/container_methods/zero_pad", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/tril", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argsort.rst", "array/array_methods/asarray.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/det.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einsum.rst", "array/array_methods/empty_like.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/from_dlpack.rst", "array/array_methods/full_like.rst", "array/array_methods/gather_nd.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/inv.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/layer_norm.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/meshgrid.rst", "array/array_methods/min.rst", "array/array_methods/multiply.rst", "array/array_methods/native_array.rst", "array/array_methods/negative.rst", "array/array_methods/not_equal.rst", "array/array_methods/ones_like.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/softplus.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/trace.rst", "array/array_methods/tril.rst", "array/array_methods/triu.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_counts.rst", "array/array_methods/var.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/zero_pad.rst", "array/array_methods/zeros_like.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container/MultiDevContainer.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/at_dev.rst", "container/container_methods/at_devs.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/clip.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/divide.rst", "container/container_methods/einsum.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/matmul.rst", "container/container_methods/max.rst", "container/container_methods/mean.rst", "container/container_methods/min.rst", "container/container_methods/multiply.rst", "container/container_methods/negative.rst", "container/container_methods/not_equal.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/random_uniform.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/softplus.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_adam_step.rst", "container/container_methods/static_adam_update.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gradient_descent_update.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_lamb_update.rst", "container/container_methods/static_lars_update.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_optimizer_update.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_softplus.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/std.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tile.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_counts.rst", "container/container_methods/var.rst", "container/container_methods/zero_pad.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argsort array", "asarray array", "asin array", "asinh array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "can_cast array", "ceil array", "cholesky array", "clip array", "concat array", "constant_pad array", "cos array", "cosh array", "cross array", "cross_entropy array", "det array", "diagonal array", "divide array", "eigh array", "eigvalsh array", "einsum array", "empty_like array", "equal array", "erf array", "exp array", "expand_dims array", "expm1 array", "flip array", "floor array", "floor_divide array", "from_dlpack array", "full_like array", "gather_nd array", "greater array", "greater_equal array", "inv array", "isfinite array", "isinf array", "isnan array", "layer_norm array", "less array", "less_equal array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "meshgrid array", "min array", "multiply array", "native_array array", "negative array", "not_equal array", "ones_like array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "remainder array", "repeat array", "reshape array", "roll array", "round array", "sign array", "sin array", "sinh array", "softplus array", "solve array", "sort array", "sparse_cross_entropy array", "sqrt array", "square array", "squeeze array", "stack array", "std array", "subtract array", "sum array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "trace array", "tril array", "triu array", "trunc array", "unique_counts array", "var array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "zero_pad array", "zeros_like array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argsort container", "asin container", "asinh container", "at_dev container", "at_devs container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "can_cast container", "ceil container", "clip container", "clip_vector_norm container", "concat container", "constant_pad container", "cos container", "cosh container", "cross_entropy container", "divide container", "einsum container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "flip container", "floor container", "floor_divide container", "gather_nd container", "gradient_descent_update container", "greater container", "greater_equal container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "less container", "less_equal container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "matmul container", "max container", "mean container", "min container", "multiply container", "negative container", "not_equal container", "optimizer_update container", "permute_dims container", "positive container", "pow container", "prod container", "random_uniform container", "remainder container", "repeat container", "reshape container", "roll container", "round container", "sign container", "sin container", "sinh container", "softplus container", "sort container", "sparse_cross_entropy container", "sqrt container", "square container", "squeeze container", "stack container", "static_abs container", "static_adam_step container", "static_adam_update container", "static_add container", "static_all_equal container", "static_argsort container", "static_binary_cross_entropy container", "static_can_cast container", "static_clip container", "static_cross_entropy container", "static_divide container", "static_gather_nd container", "static_gradient_descent_update container", "static_is_variable container", "static_lamb_update container", "static_lars_update container", "static_multiply container", "static_optimizer_update container", "static_randint container", "static_random_uniform container", "static_roll container", "static_softplus container", "static_sort container", "static_sparse_cross_entropy container", "static_subtract container", "static_tan container", "static_tanh container", "static_unique_counts container", "std container", "subtract container", "sum container", "swapaxes container", "tan container", "tanh container", "tile container", "trunc container", "unique_counts container", "var container", "zero_pad container", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.empty_like", "eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.full_like", "linspace", "logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.meshgrid", "native_array", "ivy.Array.native_array", "ivy.native_array", "ones", "ones_like", "ivy.Array.ones_like", "ivy.ones_like", "tril", "ivy.Array.tril", "ivy.tril", "triu", "ivy.Array.triu", "ivy.triu", "zeros", "zeros_like", "ivy.Array.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 8, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 189, 190, 191, 192, 193, 194, 195, 196, 200, 203, 292, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 376, 378, 382, 383, 384, 385, 387, 389, 390, 392, 393, 394, 404, 405, 406, 471, 494, 508, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 796, 803, 840, 846, 865, 870, 872, 874, 876, 906, 1071, 1073, 1083, 1106, 1109, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 437, 438, 441, 442, 445, 446, 449, 450, 451, 454, 457, 458, 461, 464, 467, 468, 471, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 564, 568, 572, 577, 581, 585, 589, 593, 597, 601, 605, 609, 613, 617, 621, 625, 629, 633, 638, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 690, 694, 698, 702, 706, 710, 714, 718, 722, 726, 727, 728, 733, 737, 741, 745, 749, 753, 757, 761, 765, 769, 773, 777, 782, 787, 792, 796, 797, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 877, 881, 882, 886, 890, 894, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 925, 928, 931, 934, 937, 940, 943, 947, 950, 951, 954, 957, 960, 963, 966, 967, 970, 973, 976, 979, 982, 985, 988, 991, 992, 997, 1002, 1007, 1008, 1013, 1017, 1021, 1025, 1029, 1033, 1037, 1041, 1046, 1047, 1051, 1055, 1059, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1094, 1095, 1096, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1120, 1121, 1126, 1131, 1132, 1136, 1140, 1144, 1148, 1152, 1156, 1160, 1164, 1165, 1169, 1173, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220], "arrai": [0, 1, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 295, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 406, 407, 415, 417, 418, 419, 420, 421, 422, 423, 426, 428, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 480, 482, 483, 484, 489, 491, 494, 496, 497, 499, 503, 508, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 542, 546, 548, 552, 553, 558, 559, 561, 562, 563, 564, 567, 568, 571, 572, 574, 575, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 623, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 656, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 795, 796, 797, 799, 800, 801, 804, 805, 806, 808, 809, 811, 813, 814, 815, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 833, 835, 836, 837, 838, 839, 840, 842, 843, 845, 848, 849, 850, 852, 853, 858, 859, 862, 864, 865, 866, 868, 869, 870, 872, 874, 875, 876, 877, 879, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1083, 1084, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1176, 1178, 1194, 1202, 1205], "arraywithactiv": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 382, 383, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1219, 1220], "base": [0, 1, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 189, 190, 192, 193, 194, 195, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 378, 381, 383, 389, 405, 432, 450, 471, 508, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 558, 646, 690, 693, 694, 697, 698, 701, 702, 705, 745, 748, 796, 831, 854, 861, 870, 1111, 1112, 1113, 1117, 1119, 1131, 1132, 1135, 1159, 1180, 1181, 1182, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "abc": [0, 1, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 191, 192, 391, 508, 517, 523, 796, 821, 1206, 1207, 1210, 1214], "softplu": [0, 1, 2, 189, 190, 196, 312, 417, 427, 1173], "out": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 134, 135, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 299, 300, 301, 302, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 336, 337, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 392, 393, 394, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 477, 479, 508, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 808, 809, 810, 811, 813, 814, 815, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1194, 1202], "none": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 172, 174, 177, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 374, 376, 379, 383, 384, 385, 386, 387, 389, 391, 393, 394, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 477, 479, 480, 482, 484, 486, 487, 488, 491, 494, 508, 517, 518, 526, 527, 550, 551, 552, 553, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 808, 809, 810, 811, 813, 814, 815, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 834, 836, 837, 841, 847, 849, 852, 853, 854, 855, 860, 861, 867, 870, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1113, 1114, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1183, 1184, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "instanc": [0, 1, 2, 3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 170, 171, 189, 190, 191, 192, 193, 194, 196, 197, 200, 202, 203, 205, 222, 223, 224, 239, 241, 279, 284, 292, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 358, 359, 366, 367, 371, 375, 376, 378, 379, 382, 384, 386, 387, 392, 393, 394, 407, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 481, 482, 483, 508, 517, 549, 558, 559, 560, 561, 562, 572, 573, 574, 577, 580, 588, 593, 597, 600, 617, 620, 621, 622, 623, 624, 629, 641, 654, 655, 656, 658, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 784, 785, 787, 789, 790, 791, 796, 797, 798, 799, 813, 824, 825, 826, 827, 840, 864, 866, 872, 873, 874, 876, 908, 911, 914, 920, 921, 922, 924, 925, 927, 928, 931, 933, 991, 992, 995, 1007, 1008, 1009, 1010, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1042, 1043, 1044, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1183, 1184], "method": [0, 1, 3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 170, 171, 189, 190, 191, 192, 193, 194, 195, 197, 200, 202, 203, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 366, 367, 371, 374, 375, 376, 378, 379, 382, 387, 389, 390, 393, 394, 406, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 434, 435, 438, 439, 442, 443, 444, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 558, 559, 560, 561, 563, 573, 574, 576, 577, 580, 588, 593, 597, 600, 617, 620, 621, 622, 623, 624, 629, 641, 654, 655, 656, 658, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 801, 812, 813, 824, 825, 826, 827, 829, 852, 853, 864, 866, 870, 872, 873, 874, 876, 890, 892, 894, 896, 908, 914, 920, 921, 922, 924, 925, 927, 928, 991, 992, 995, 1007, 1008, 1009, 1010, 1012, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1042, 1043, 1045, 1046, 1055, 1058, 1071, 1072, 1082, 1083, 1084, 1089, 1090, 1093, 1094, 1096, 1098, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1173, 1194, 1205, 1206, 1207], "variant": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 375, 376, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1096, 1098, 1113, 1114, 1115, 1116], "thi": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 405, 406, 423, 424, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 481, 482, 483, 484, 508, 532, 536, 540, 547, 552, 557, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 597, 600, 613, 616, 617, 620, 621, 622, 623, 624, 629, 650, 653, 654, 655, 656, 658, 686, 689, 706, 714, 717, 718, 721, 737, 740, 749, 752, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 801, 823, 824, 825, 826, 827, 829, 840, 851, 856, 870, 872, 873, 874, 876, 877, 879, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 906, 908, 911, 917, 920, 921, 928, 930, 931, 933, 947, 949, 966, 1007, 1008, 1009, 1010, 1012, 1021, 1024, 1025, 1028, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1051, 1054, 1071, 1077, 1083, 1084, 1089, 1090, 1093, 1096, 1098, 1106, 1107, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1124, 1131, 1136, 1139, 1140, 1143, 1152, 1155, 1160, 1163, 1164, 1165, 1168, 1173, 1179, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "simpli": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 370, 375, 376, 378, 379, 382, 383, 385, 386, 387, 389, 393, 394, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 558, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 650, 653, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1096, 1098, 1113, 1114, 1115, 1116], "wrap": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 367, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 394, 406, 407, 415, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 796, 797, 798, 799, 801, 807, 825, 826, 827, 829, 870, 872, 873, 874, 876, 906, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1096, 1098, 1113, 1114, 1115, 1116], "function": [0, 1, 2, 3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 186, 189, 190, 191, 192, 196, 197, 200, 202, 203, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 380, 382, 386, 388, 390, 391, 392, 393, 404, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 571, 572, 573, 574, 575, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 622, 623, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 655, 656, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1176, 1178, 1180, 1181, 1182, 1210, 1213, 1215], "so": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 186, 187, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 370, 374, 375, 376, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 406, 407, 415, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1071, 1072, 1082, 1096, 1098, 1113, 1114, 1115, 1116, 1173], "docstr": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 371, 372, 373, 374, 379, 383, 387, 423, 424, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 481, 482, 483, 484, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 597, 600, 617, 620, 621, 622, 623, 624, 629, 654, 655, 656, 658, 686, 689, 706, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 921, 928, 931, 933, 1007, 1008, 1009, 1010, 1012, 1021, 1024, 1025, 1028, 1041, 1042, 1043, 1044, 1045, 1096, 1098, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "also": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 186, 187, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 368, 369, 370, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 423, 424, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 481, 482, 483, 484, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 597, 600, 617, 620, 621, 622, 623, 624, 629, 654, 655, 656, 658, 706, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 801, 824, 825, 826, 827, 829, 840, 870, 872, 873, 874, 876, 877, 879, 908, 911, 917, 920, 921, 928, 931, 933, 1007, 1008, 1009, 1010, 1012, 1021, 1024, 1025, 1028, 1041, 1042, 1043, 1044, 1045, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1081, 1082, 1083, 1089, 1090, 1093, 1096, 1098, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168, 1194, 1204], "appli": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 189, 190, 191, 192, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 370, 371, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 404, 406, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 471, 480, 481, 482, 484, 499, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 796, 797, 798, 799, 801, 818, 819, 820, 825, 826, 827, 829, 870, 872, 873, 874, 876, 890, 892, 894, 896, 908, 917, 919, 920, 921, 942, 951, 953, 960, 962, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1051, 1054, 1067, 1068, 1069, 1071, 1077, 1080, 1083, 1084, 1089, 1090, 1093, 1096, 1098, 1113, 1114, 1115, 1116, 1173, 1180, 1181, 1182, 1208, 1209], "minim": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 375, 386, 389, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 1008, 1009, 1010, 1012, 1041, 1042, 1043, 1045, 1096, 1098, 1113, 1114, 1115, 1116], "chang": [0, 1, 2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 100, 114, 115, 119, 120, 122, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 188, 189, 190, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 284, 291, 292, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 370, 371, 372, 375, 377, 378, 383, 389, 393, 406, 423, 424, 425, 427, 434, 435, 438, 439, 442, 443, 446, 447, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 484, 508, 559, 560, 561, 563, 573, 574, 576, 588, 593, 621, 622, 623, 655, 656, 658, 706, 783, 784, 785, 788, 789, 790, 791, 797, 798, 799, 801, 825, 826, 827, 829, 872, 873, 874, 876, 921, 925, 927, 1007, 1008, 1009, 1010, 1012, 1037, 1040, 1041, 1042, 1043, 1045, 1071, 1073, 1083, 1096, 1098, 1113, 1114, 1115, 1116, 1173, 1179], "return": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 172, 176, 177, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 503, 507, 508, 517, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 852, 853, 854, 855, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1183, 1184, 1194, 1203, 1204, 1210, 1214], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 381, 382, 383, 385, 386, 387, 389, 391, 392, 394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 503, 507, 508, 524, 525, 526, 527, 528, 530, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 807, 808, 809, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 835, 836, 838, 839, 840, 842, 843, 844, 845, 849, 852, 853, 854, 855, 858, 860, 861, 862, 864, 865, 866, 868, 869, 870, 872, 873, 874, 875, 876, 877, 879, 880, 882, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "activ": [1, 2, 8, 170, 171, 190, 196, 203, 366, 367, 369, 370, 372, 374, 393, 418, 419, 420, 421, 422, 423, 426, 428, 1173, 1181, 1182], "support": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1181, 1182, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1220], "framework": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 373, 377, 379, 380, 381, 382, 385, 387, 388, 391, 394, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1218, 1220], "array_method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 423, 424, 434, 435, 438, 439, 442, 443, 446, 447, 451, 452, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 559, 560, 565, 568, 569, 573, 577, 578, 581, 582, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 626, 630, 634, 639, 642, 643, 647, 650, 651, 655, 658, 659, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 722, 723, 728, 729, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 773, 774, 777, 779, 784, 789, 792, 793, 797, 798, 825, 826, 872, 873, 922, 923, 925, 926, 929, 931, 932, 934, 935, 937, 938, 941, 942, 943, 944, 947, 948, 951, 952, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 968, 971, 972, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 992, 993, 997, 998, 1002, 1003, 1008, 1009, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1038, 1041, 1042, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1063, 1064, 1090, 1091, 1113, 1115, 1121, 1122, 1126, 1127, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1157, 1160, 1161, 1165, 1166, 1169, 1170], "ab": [2, 140, 141, 196, 291, 336, 337, 378, 381, 558, 563, 745, 748, 921, 985, 987, 1173], "self": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 191, 192, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 382, 383, 389, 391, 392, 393, 394, 423, 424, 425, 434, 435, 438, 439, 442, 443, 446, 447, 451, 452, 454, 455, 458, 459, 461, 462, 464, 465, 468, 469, 480, 481, 482, 508, 559, 560, 561, 565, 566, 567, 568, 569, 570, 573, 574, 575, 577, 578, 579, 581, 582, 583, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 601, 602, 603, 605, 606, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 621, 622, 623, 626, 627, 628, 630, 631, 632, 634, 635, 636, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 663, 664, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 714, 715, 716, 718, 719, 720, 722, 723, 724, 728, 729, 730, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 749, 750, 751, 753, 754, 755, 757, 758, 759, 761, 762, 763, 765, 766, 767, 769, 770, 771, 773, 774, 775, 777, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 797, 798, 799, 809, 810, 825, 826, 827, 872, 873, 874, 877, 878, 882, 883, 886, 887, 890, 891, 894, 895, 898, 899, 922, 923, 925, 926, 929, 931, 932, 934, 935, 937, 938, 941, 942, 943, 944, 945, 947, 948, 951, 952, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 968, 971, 972, 973, 974, 976, 977, 979, 980, 982, 983, 985, 986, 988, 989, 992, 993, 994, 997, 998, 999, 1002, 1003, 1004, 1008, 1009, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1047, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1090, 1091, 1092, 1100, 1101, 1113, 1115, 1116, 1121, 1122, 1123, 1126, 1127, 1128, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1210, 1214], "exampl": [2, 3, 6, 7, 8, 10, 26, 27, 29, 49, 53, 95, 114, 115, 122, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 184, 188, 193, 194, 196, 197, 200, 202, 203, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 295, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 366, 367, 369, 370, 371, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 392, 393, 394, 405, 406, 417, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 445, 446, 448, 451, 453, 457, 458, 460, 467, 468, 470, 471, 477, 480, 481, 482, 483, 484, 492, 493, 508, 527, 528, 530, 542, 543, 544, 545, 546, 549, 551, 553, 555, 556, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 596, 597, 600, 601, 604, 613, 616, 617, 620, 621, 622, 623, 624, 625, 629, 641, 646, 654, 655, 656, 658, 662, 665, 666, 669, 682, 685, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 804, 805, 813, 814, 821, 824, 825, 826, 827, 828, 829, 832, 843, 858, 859, 864, 865, 866, 870, 872, 873, 874, 875, 876, 908, 909, 911, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 940, 951, 953, 957, 959, 970, 976, 978, 979, 981, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1152, 1155, 1156, 1159, 1164, 1165, 1168, 1173], "us": [2, 3, 8, 140, 141, 170, 171, 172, 177, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 203, 336, 337, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 405, 406, 417, 419, 420, 421, 422, 423, 426, 428, 431, 471, 490, 508, 517, 518, 543, 547, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 577, 580, 597, 600, 617, 620, 629, 641, 665, 666, 669, 686, 689, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 796, 824, 831, 832, 846, 852, 853, 854, 855, 860, 861, 870, 872, 875, 877, 879, 890, 892, 894, 896, 908, 914, 916, 917, 919, 920, 921, 928, 931, 933, 947, 949, 991, 992, 995, 1007, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1044, 1055, 1058, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1080, 1081, 1082, 1084, 1089, 1090, 1093, 1106, 1107, 1108, 1109, 1111, 1112, 1131, 1132, 1135, 1159, 1164, 1165, 1168, 1173, 1194, 1202, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213], "x": [2, 3, 7, 26, 27, 29, 49, 53, 95, 107, 114, 115, 122, 129, 132, 133, 136, 137, 140, 141, 142, 143, 154, 155, 162, 163, 172, 176, 184, 189, 190, 191, 192, 193, 194, 196, 197, 202, 222, 223, 224, 239, 241, 279, 290, 291, 294, 296, 298, 299, 302, 304, 309, 311, 312, 313, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 360, 361, 372, 374, 375, 376, 379, 380, 383, 386, 387, 389, 391, 392, 393, 394, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 432, 434, 436, 438, 440, 442, 444, 446, 448, 451, 453, 454, 456, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 480, 481, 482, 483, 484, 489, 508, 527, 528, 529, 530, 533, 534, 542, 546, 551, 553, 558, 559, 560, 561, 562, 563, 564, 567, 568, 571, 572, 573, 574, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 617, 620, 621, 622, 623, 624, 625, 628, 629, 632, 641, 642, 645, 646, 650, 653, 654, 655, 656, 658, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 714, 717, 726, 727, 733, 736, 741, 744, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 804, 805, 806, 808, 809, 811, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 835, 836, 838, 839, 840, 842, 843, 844, 845, 849, 858, 859, 862, 864, 865, 866, 868, 869, 870, 881, 886, 888, 889, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 947, 949, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 970, 972, 973, 975, 976, 978, 979, 981, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1071, 1072, 1077, 1081, 1082, 1083, 1089, 1090, 1093, 1094, 1096, 1097, 1098, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1205], "2": [2, 3, 6, 7, 10, 26, 27, 29, 37, 49, 53, 95, 114, 115, 116, 122, 125, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 162, 163, 172, 176, 191, 192, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 370, 372, 376, 380, 383, 387, 388, 389, 391, 392, 393, 394, 406, 417, 419, 420, 421, 422, 428, 431, 432, 445, 446, 448, 451, 453, 457, 458, 460, 468, 470, 471, 477, 480, 481, 482, 483, 484, 508, 527, 528, 530, 542, 544, 546, 553, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 585, 588, 589, 592, 593, 597, 600, 601, 604, 613, 616, 617, 620, 621, 622, 623, 624, 625, 629, 641, 646, 654, 655, 656, 658, 662, 665, 666, 669, 682, 685, 686, 689, 702, 705, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 804, 805, 808, 809, 811, 814, 821, 824, 825, 826, 827, 828, 829, 843, 858, 859, 864, 870, 872, 873, 874, 875, 876, 908, 911, 912, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 932, 933, 940, 942, 943, 946, 947, 949, 951, 953, 957, 959, 960, 962, 963, 965, 970, 976, 977, 978, 979, 981, 985, 986, 987, 991, 992, 995, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1173], "6": [2, 3, 6, 7, 27, 29, 140, 141, 144, 145, 154, 155, 193, 194, 196, 197, 202, 223, 291, 294, 302, 309, 336, 337, 338, 339, 354, 355, 372, 376, 380, 383, 391, 392, 393, 417, 419, 420, 422, 432, 446, 448, 508, 530, 546, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 597, 600, 601, 604, 617, 620, 621, 622, 623, 624, 629, 641, 654, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 753, 756, 769, 772, 773, 776, 782, 787, 796, 805, 814, 824, 825, 828, 829, 859, 864, 870, 872, 873, 875, 908, 911, 914, 915, 920, 921, 925, 927, 928, 931, 933, 957, 959, 970, 976, 978, 991, 992, 995, 1002, 1005, 1007, 1008, 1009, 1011, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1106, 1107, 1110, 1111, 1112, 1113, 1117, 1131, 1132, 1135, 1136, 1139, 1159], "1": [2, 3, 6, 7, 10, 12, 26, 27, 29, 34, 35, 37, 49, 53, 60, 95, 102, 103, 114, 115, 122, 124, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 172, 178, 184, 187, 188, 191, 192, 193, 194, 196, 197, 200, 202, 205, 207, 222, 223, 224, 230, 239, 241, 251, 275, 279, 285, 286, 292, 294, 295, 296, 298, 299, 300, 302, 309, 310, 311, 313, 314, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 372, 376, 379, 383, 386, 387, 388, 389, 391, 392, 393, 394, 406, 417, 419, 420, 421, 422, 428, 432, 433, 446, 448, 449, 450, 451, 453, 457, 458, 460, 468, 470, 471, 477, 480, 481, 482, 483, 484, 491, 508, 512, 515, 517, 522, 527, 528, 530, 532, 536, 540, 542, 545, 546, 553, 558, 559, 560, 561, 562, 564, 567, 568, 571, 572, 573, 574, 576, 577, 580, 588, 589, 592, 593, 597, 600, 601, 604, 613, 616, 617, 620, 621, 622, 623, 624, 625, 628, 629, 632, 641, 646, 650, 653, 654, 655, 656, 658, 662, 665, 666, 669, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 726, 727, 733, 736, 737, 740, 745, 748, 753, 756, 757, 760, 761, 764, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 804, 805, 813, 814, 821, 824, 825, 826, 827, 828, 829, 843, 849, 852, 853, 858, 859, 861, 864, 865, 866, 868, 870, 872, 873, 874, 875, 876, 908, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 922, 924, 925, 926, 927, 928, 931, 932, 933, 940, 951, 953, 957, 959, 967, 969, 970, 976, 978, 979, 981, 982, 983, 984, 985, 987, 991, 992, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1071, 1083, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "0": [2, 3, 6, 10, 27, 29, 30, 31, 37, 46, 49, 60, 95, 107, 108, 114, 115, 118, 119, 120, 122, 123, 134, 135, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 156, 157, 162, 163, 166, 167, 172, 176, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 205, 222, 223, 224, 226, 227, 236, 239, 249, 250, 251, 275, 279, 290, 291, 292, 293, 294, 295, 298, 299, 302, 305, 306, 309, 310, 311, 316, 317, 318, 319, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 374, 375, 376, 389, 391, 392, 393, 394, 417, 419, 420, 421, 422, 423, 426, 428, 432, 433, 441, 449, 450, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 477, 480, 482, 483, 484, 491, 508, 510, 513, 517, 520, 524, 527, 528, 530, 533, 534, 535, 536, 537, 538, 539, 540, 542, 546, 549, 551, 552, 556, 558, 559, 560, 562, 563, 564, 567, 568, 571, 572, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 605, 608, 613, 616, 617, 620, 621, 622, 623, 624, 625, 628, 629, 632, 641, 646, 650, 653, 654, 655, 656, 658, 665, 666, 669, 686, 689, 690, 693, 694, 697, 702, 705, 706, 726, 727, 728, 731, 733, 736, 737, 740, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 804, 805, 808, 809, 811, 813, 814, 815, 821, 824, 825, 828, 829, 834, 843, 849, 852, 853, 858, 864, 865, 866, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 894, 895, 896, 897, 908, 909, 911, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 932, 933, 940, 970, 976, 978, 979, 980, 981, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1063, 1065, 1071, 1083, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1168, 1173, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217], "y": [2, 3, 7, 10, 27, 29, 49, 53, 95, 114, 115, 122, 140, 141, 142, 143, 154, 155, 162, 163, 193, 194, 196, 197, 202, 205, 223, 224, 239, 241, 279, 291, 294, 295, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 336, 337, 338, 339, 350, 351, 354, 355, 358, 359, 374, 376, 380, 383, 389, 391, 417, 419, 420, 421, 422, 423, 426, 428, 432, 445, 446, 448, 451, 453, 457, 458, 460, 468, 470, 471, 477, 508, 528, 542, 546, 551, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 589, 592, 593, 597, 600, 601, 604, 613, 616, 617, 620, 621, 622, 623, 624, 625, 629, 641, 646, 654, 655, 656, 658, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 804, 805, 813, 814, 821, 822, 824, 825, 826, 827, 828, 829, 858, 864, 865, 866, 870, 881, 908, 914, 915, 917, 921, 922, 924, 925, 927, 928, 940, 957, 959, 976, 978, 979, 981, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1055, 1058, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1164, 1165, 1168], "print": [2, 3, 6, 7, 8, 10, 26, 27, 29, 49, 53, 95, 114, 115, 122, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 162, 163, 170, 171, 172, 176, 177, 178, 184, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 295, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 366, 367, 369, 376, 383, 389, 391, 392, 393, 417, 419, 420, 421, 422, 423, 426, 428, 432, 445, 446, 448, 451, 453, 457, 458, 460, 467, 468, 470, 471, 477, 480, 481, 482, 483, 484, 492, 493, 508, 528, 542, 543, 544, 545, 546, 548, 551, 555, 558, 559, 560, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 596, 597, 600, 601, 604, 613, 616, 617, 620, 621, 622, 623, 624, 625, 629, 641, 646, 654, 655, 656, 658, 662, 665, 666, 669, 682, 685, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 804, 805, 813, 814, 821, 824, 825, 826, 827, 828, 829, 832, 850, 858, 859, 864, 865, 866, 870, 872, 873, 875, 876, 908, 909, 911, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 940, 957, 959, 970, 976, 978, 979, 981, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1152, 1155, 1156, 1159, 1164, 1165, 1168, 1173], "aco": [2, 140, 141, 196, 336, 337, 558, 568, 1173], "acosh": [2, 140, 141, 196, 336, 337, 471, 492, 493, 558, 567, 628, 632, 1173], "adam_step": [2, 144, 145, 196, 292, 340, 341, 870, 876], "mw": [2, 6, 144, 145, 196, 200, 292, 340, 341, 393, 870, 872, 873, 874, 875, 876, 877, 879], "vw": [2, 6, 144, 145, 196, 200, 292, 340, 341, 393, 870, 872, 873, 874, 875, 876, 877, 879], "step": [2, 6, 144, 145, 188, 191, 192, 196, 200, 201, 249, 292, 293, 305, 340, 341, 369, 370, 372, 376, 380, 382, 383, 384, 385, 389, 392, 393, 394, 405, 432, 433, 449, 450, 508, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 884, 890, 891, 892, 893, 894, 896, 898, 900, 1067, 1068, 1069, 1070, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "beta1": [2, 6, 144, 145, 196, 200, 201, 249, 292, 293, 305, 340, 341, 393, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 1210, 1211, 1212], "9": [2, 6, 7, 29, 140, 141, 144, 145, 154, 155, 193, 194, 196, 200, 201, 202, 249, 292, 293, 294, 305, 309, 336, 337, 340, 341, 354, 355, 372, 376, 392, 393, 558, 572, 573, 574, 576, 597, 600, 601, 604, 706, 726, 727, 753, 756, 769, 772, 773, 776, 796, 824, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 908, 911, 914, 915, 921, 925, 927, 928, 931, 933, 957, 959, 970, 976, 978, 1007, 1008, 1009, 1011, 1025, 1028, 1033, 1036, 1041, 1044, 1046, 1094, 1095, 1096, 1097, 1098, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159, 1210, 1211, 1212], "beta2": [2, 6, 144, 145, 196, 200, 201, 249, 292, 293, 305, 340, 341, 393, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 1210, 1211, 1212], "999": [2, 6, 144, 145, 196, 200, 201, 249, 292, 293, 305, 317, 324, 336, 337, 340, 341, 393, 558, 588, 593, 787, 788, 790, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 1210, 1211, 1212], "epsilon": [2, 6, 19, 35, 60, 103, 144, 145, 152, 153, 156, 157, 196, 200, 201, 215, 230, 249, 251, 286, 292, 293, 297, 300, 305, 314, 340, 341, 348, 349, 352, 353, 379, 383, 386, 393, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 921, 942, 951, 953, 960, 962, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1089, 1090, 1091, 1092, 1093, 1208, 1209, 1210, 1211, 1212], "1e": [2, 6, 19, 35, 60, 103, 144, 145, 152, 153, 156, 157, 196, 200, 201, 215, 230, 249, 251, 286, 292, 293, 297, 300, 305, 314, 340, 341, 348, 349, 352, 353, 379, 383, 386, 393, 394, 796, 832, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 921, 970, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1089, 1090, 1091, 1092, 1093, 1173, 1210, 1211, 1212, 1213, 1215], "07": [2, 6, 19, 35, 103, 144, 145, 152, 153, 196, 200, 201, 215, 230, 249, 286, 292, 293, 297, 300, 305, 314, 340, 341, 348, 349, 393, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 890, 891, 892, 893, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1210, 1211, 1212], "With": [2, 6, 10, 122, 142, 143, 144, 145, 162, 163, 187, 188, 191, 192, 193, 194, 196, 205, 291, 294, 295, 299, 302, 309, 311, 316, 317, 318, 327, 336, 337, 338, 339, 350, 351, 354, 355, 358, 359, 369, 376, 378, 389, 417, 419, 420, 421, 422, 423, 426, 428, 432, 451, 453, 471, 480, 483, 508, 530, 546, 558, 559, 562, 563, 572, 576, 577, 580, 588, 593, 597, 600, 617, 620, 621, 624, 629, 641, 654, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 787, 788, 791, 796, 797, 798, 799, 800, 801, 805, 813, 814, 821, 824, 825, 828, 829, 859, 864, 865, 866, 870, 872, 873, 875, 908, 911, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 947, 949, 976, 978, 991, 992, 995, 1002, 1005, 1007, 1008, 1011, 1012, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1044, 1045, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1159, 1164, 1165, 1168], "input": [2, 6, 129, 132, 133, 144, 145, 191, 192, 193, 194, 195, 196, 200, 291, 292, 294, 295, 299, 302, 309, 311, 316, 317, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 407, 415, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 480, 483, 485, 486, 487, 488, 489, 490, 496, 497, 498, 499, 503, 508, 517, 518, 527, 528, 529, 530, 532, 533, 536, 540, 546, 552, 553, 558, 559, 562, 563, 564, 567, 568, 571, 572, 575, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 783, 786, 787, 788, 791, 792, 795, 796, 797, 800, 801, 802, 804, 805, 806, 808, 809, 811, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 833, 835, 836, 838, 839, 840, 842, 843, 844, 845, 849, 852, 853, 858, 859, 862, 864, 865, 866, 868, 869, 870, 872, 873, 874, 875, 876, 881, 886, 888, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1209], "dcdw": [2, 6, 144, 145, 196, 200, 201, 242, 249, 250, 292, 293, 303, 305, 306, 340, 341, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 893, 894, 895, 896, 897], "3": [2, 6, 7, 10, 26, 29, 49, 53, 136, 137, 140, 141, 142, 143, 144, 145, 154, 155, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 369, 372, 376, 380, 383, 389, 391, 392, 393, 394, 417, 419, 420, 421, 422, 431, 432, 446, 448, 451, 453, 458, 460, 467, 468, 470, 471, 480, 481, 482, 483, 484, 508, 527, 530, 546, 553, 558, 559, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 597, 600, 613, 616, 617, 620, 621, 623, 624, 629, 641, 646, 654, 655, 656, 658, 662, 665, 666, 669, 682, 685, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 785, 787, 788, 790, 791, 796, 797, 798, 799, 804, 805, 814, 821, 824, 825, 826, 827, 828, 829, 858, 859, 864, 866, 870, 872, 873, 874, 875, 876, 908, 909, 910, 911, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 940, 951, 953, 957, 959, 970, 976, 978, 979, 981, 988, 990, 991, 992, 995, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1050, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1156, 1159, 1164, 1165, 1168, 1173], "adam_step_delta": [2, 6, 144, 145, 196, 200, 292, 340, 341, 870, 872, 873, 874, 875, 876], "639": [2, 6, 144, 145, 870, 872, 873, 875], "11": [2, 6, 144, 145, 193, 194, 196, 202, 294, 309, 336, 337, 354, 355, 376, 383, 558, 572, 574, 576, 597, 600, 706, 753, 756, 796, 814, 824, 872, 873, 921, 931, 933, 957, 959, 991, 1002, 1005, 1007, 1025, 1028, 1033, 1036, 1094, 1096, 1097, 1098, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159], "32": [2, 6, 144, 145, 392, 417, 419, 558, 617, 620, 872, 873, 908, 911, 914, 921, 957, 959, 1106, 1110, 1131, 1132, 1135, 1159], "63": [2, 6, 144, 145, 558, 769, 772, 872, 873, 921, 922, 924, 957, 959, 1131, 1132, 1135, 1159], "00121": [2, 6, 144, 145, 872, 873], "0102": [2, 6, 144, 145, 872, 873], "0397": [2, 6, 144, 145, 872, 873], "add": [2, 8, 140, 141, 170, 171, 191, 192, 193, 194, 196, 203, 294, 295, 336, 337, 338, 339, 366, 367, 369, 370, 371, 373, 374, 375, 379, 380, 382, 383, 387, 389, 391, 406, 558, 559, 562, 576, 706, 797, 801, 1089, 1090, 1093, 1173, 1179, 1208, 1209], "x2": [2, 7, 10, 17, 20, 22, 23, 24, 25, 34, 38, 43, 50, 54, 55, 61, 62, 67, 68, 70, 71, 72, 80, 83, 85, 89, 92, 101, 109, 116, 124, 140, 141, 142, 143, 150, 151, 191, 192, 196, 202, 205, 213, 216, 218, 219, 220, 221, 231, 233, 240, 243, 244, 252, 253, 258, 259, 261, 262, 263, 267, 269, 273, 276, 294, 295, 301, 307, 315, 320, 336, 337, 338, 339, 346, 347, 376, 387, 471, 503, 508, 546, 558, 572, 573, 574, 575, 576, 589, 590, 591, 592, 597, 598, 599, 600, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 633, 634, 635, 636, 637, 638, 639, 640, 641, 649, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 682, 683, 684, 685, 686, 687, 688, 689, 706, 707, 708, 709, 710, 711, 712, 713, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 777, 778, 779, 780, 781, 796, 797, 798, 799, 800, 801, 908, 913, 921, 925, 926, 927, 943, 944, 945, 946, 957, 958, 959, 967, 968, 969, 976, 977, 978, 982, 983, 984, 1106, 1110], "4": [2, 7, 29, 140, 141, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 222, 223, 224, 239, 241, 279, 291, 292, 294, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 372, 376, 380, 383, 389, 391, 392, 393, 394, 417, 419, 420, 422, 432, 446, 448, 451, 453, 458, 460, 468, 470, 471, 480, 482, 483, 484, 508, 530, 546, 558, 559, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 589, 592, 593, 597, 600, 617, 620, 621, 623, 624, 629, 641, 654, 656, 658, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 785, 787, 788, 790, 791, 796, 805, 814, 823, 824, 825, 827, 828, 829, 859, 864, 870, 872, 874, 875, 876, 908, 911, 912, 913, 915, 918, 920, 921, 925, 927, 928, 931, 933, 940, 951, 953, 957, 959, 976, 978, 979, 981, 991, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1043, 1044, 1045, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1098, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1173, 1210, 1211, 1212, 1213, 1215], "5": [2, 7, 10, 27, 29, 49, 140, 141, 142, 143, 154, 155, 193, 194, 196, 197, 200, 202, 222, 223, 224, 239, 279, 291, 292, 294, 298, 299, 302, 309, 311, 316, 317, 323, 324, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 370, 372, 376, 380, 387, 391, 392, 393, 417, 419, 420, 422, 432, 446, 448, 451, 453, 458, 460, 467, 468, 470, 471, 480, 482, 483, 484, 508, 530, 546, 558, 559, 561, 562, 563, 572, 573, 574, 576, 577, 580, 588, 593, 596, 597, 600, 613, 616, 617, 620, 621, 622, 623, 624, 629, 641, 654, 655, 656, 658, 665, 666, 669, 686, 689, 706, 726, 727, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 785, 786, 787, 788, 790, 791, 796, 797, 798, 805, 814, 824, 825, 828, 829, 859, 864, 870, 872, 874, 875, 876, 908, 911, 913, 914, 920, 921, 922, 924, 925, 927, 928, 931, 933, 940, 957, 959, 976, 978, 979, 981, 991, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1033, 1036, 1037, 1040, 1041, 1043, 1044, 1045, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1194, 1205], "z": [2, 7, 53, 140, 141, 142, 143, 193, 194, 196, 202, 241, 294, 302, 336, 337, 338, 339, 376, 380, 383, 389, 391, 508, 542, 558, 572, 573, 574, 576, 597, 600, 617, 620, 641, 665, 666, 669, 686, 689, 706, 726, 727, 796, 804, 805, 824, 825, 826, 827, 829, 858, 921, 925, 927, 991, 992, 995, 997, 1000, 1007, 1008, 1011, 1106, 1107, 1131, 1132, 1135, 1136, 1139, 1159], "7": [2, 7, 29, 140, 141, 154, 155, 193, 194, 196, 202, 294, 309, 336, 337, 354, 355, 370, 372, 376, 379, 383, 386, 417, 419, 420, 508, 530, 558, 559, 562, 572, 573, 574, 576, 597, 600, 601, 604, 617, 620, 621, 624, 629, 641, 646, 654, 665, 666, 669, 686, 689, 706, 726, 727, 753, 756, 769, 772, 782, 787, 796, 805, 814, 824, 870, 872, 875, 877, 879, 890, 892, 908, 914, 915, 920, 921, 925, 927, 928, 931, 933, 957, 959, 976, 978, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1009, 1011, 1021, 1024, 1025, 1028, 1033, 1036, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159], "add_ivy_array_instance_method": [2, 170], "cl": [2, 8, 170, 171, 196, 203, 366, 367], "modul": [2, 8, 170, 171, 172, 176, 177, 188, 191, 192, 193, 194, 195, 196, 203, 366, 367, 369, 372, 378, 379, 380, 382, 386, 389, 390, 392, 394, 405, 406, 796, 847, 1094, 1095, 1099, 1173, 1180, 1181, 1182, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1209, 1216, 1217], "to_ignor": [2, 8, 170, 171, 196, 203, 366, 367, 1071, 1082], "loop": [2, 8, 170, 171, 196, 203, 366, 367, 380, 406, 1067, 1068, 1069, 1070], "over": [2, 8, 170, 171, 172, 176, 186, 188, 191, 192, 196, 203, 366, 367, 369, 375, 376, 380, 386, 391, 406, 921, 947, 949, 976, 978, 982, 984, 985, 987, 1089, 1090, 1093, 1094, 1100, 1102, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1208, 1209], "all": [2, 8, 129, 130, 131, 132, 133, 168, 169, 170, 171, 186, 187, 188, 191, 192, 196, 203, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 405, 406, 407, 415, 429, 430, 432, 433, 461, 463, 464, 466, 508, 517, 542, 548, 796, 797, 800, 804, 805, 830, 850, 865, 908, 918, 921, 967, 969, 976, 978, 985, 987, 1007, 1025, 1028, 1041, 1044, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1082, 1083, 1084, 1094, 1095, 1100, 1102, 1164, 1173, 1176, 1178], "gener": [2, 8, 143, 170, 171, 191, 192, 196, 203, 339, 366, 367, 370, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 405, 406, 429, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 749, 752, 769, 772, 773, 776, 797, 800, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 886, 888, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1094, 1095, 1096, 1097, 1100, 1102, 1104, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1173, 1210, 1214], "etc": [2, 8, 170, 171, 188, 191, 192, 196, 203, 366, 367, 369, 370, 371, 374, 376, 378, 382, 383, 384, 387, 389, 391, 392, 406, 432, 449, 450, 796, 824, 825, 828, 849, 852, 853, 1094, 1095, 1096, 1097, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "_wrap_funct": [2, 8, 170, 171, 196, 203, 366, 367, 379, 381], "paramet": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 176, 177, 191, 192, 193, 194, 195, 196, 203, 366, 367, 374, 375, 378, 391, 392, 405, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 507, 508, 517, 518, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 800, 802, 803, 804, 805, 806, 807, 808, 809, 811, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 875, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1176, 1178, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "we": [2, 8, 170, 171, 172, 177, 178, 184, 185, 186, 187, 188, 196, 203, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 405, 406, 870, 881, 1173, 1179], "want": [2, 8, 170, 171, 172, 177, 187, 196, 203, 366, 367, 368, 369, 370, 378, 392, 393, 394, 406], "list": [2, 8, 78, 129, 130, 131, 132, 133, 134, 135, 170, 171, 191, 192, 196, 200, 203, 292, 318, 327, 340, 341, 358, 359, 366, 367, 369, 371, 372, 374, 376, 384, 385, 387, 389, 392, 393, 394, 406, 432, 433, 434, 436, 437, 451, 452, 453, 454, 456, 457, 467, 471, 478, 508, 517, 518, 527, 529, 530, 533, 534, 537, 538, 552, 796, 805, 859, 864, 868, 872, 874, 876, 908, 909, 910, 911, 912, 913, 914, 915, 921, 976, 978, 1007, 1013, 1016, 1025, 1028, 1046, 1051, 1054, 1071, 1072, 1073, 1077, 1082, 1083, 1089, 1090, 1093, 1106, 1109, 1111, 1113, 1114, 1116, 1117, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "option": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 177, 191, 192, 193, 194, 196, 203, 366, 367, 369, 370, 374, 375, 376, 379, 383, 384, 385, 386, 387, 389, 394, 406, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 485, 486, 487, 488, 495, 507, 508, 527, 551, 552, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 802, 808, 809, 811, 814, 815, 816, 818, 819, 820, 822, 824, 825, 828, 836, 847, 849, 852, 853, 860, 861, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1082, 1083, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1110, 1111, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "iter": [2, 8, 129, 130, 131, 132, 133, 170, 171, 188, 191, 192, 193, 194, 195, 196, 203, 366, 367, 383, 389, 392, 429, 430, 508, 530, 531, 533, 534, 535, 536, 539, 552, 796, 797, 800, 853, 858, 1007, 1017, 1020, 1033, 1036, 1046, 1059, 1062, 1063, 1066, 1071, 1072, 1073, 1077, 1081, 1082, 1083], "ani": [2, 8, 129, 130, 131, 168, 169, 170, 171, 172, 176, 184, 186, 187, 188, 191, 192, 196, 203, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 508, 553, 558, 559, 562, 572, 577, 580, 621, 624, 638, 641, 654, 665, 666, 669, 686, 689, 737, 740, 769, 772, 773, 776, 782, 796, 797, 800, 817, 818, 819, 820, 821, 824, 835, 842, 843, 844, 845, 860, 861, 870, 881, 908, 911, 918, 920, 921, 931, 933, 1007, 1041, 1044, 1067, 1068, 1069, 1070, 1071, 1077, 1081, 1089, 1090, 1093, 1094, 1100, 1102, 1111, 1113, 1117, 1131, 1136, 1139, 1164, 1165, 1168, 1173], "item": [2, 8, 129, 133, 170, 171, 191, 192, 384, 389, 391, 392, 394, 471, 486, 508, 517, 518, 520, 527, 529, 531, 533, 535, 539, 796, 812, 834, 860, 861, 1071, 1076, 1077, 1078, 1079, 1083, 1087, 1088, 1173, 1206, 1207], "don": [2, 8, 170, 171, 188, 196, 203, 366, 367, 369, 370, 371, 384, 393, 406], "t": [2, 8, 170, 171, 172, 177, 187, 188, 196, 203, 366, 367, 369, 370, 371, 372, 376, 384, 389, 391, 392, 393, 394, 406, 796, 805, 908, 917, 918], "an": [2, 8, 129, 132, 133, 170, 171, 187, 188, 191, 192, 196, 203, 366, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 417, 420, 421, 423, 426, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 480, 483, 491, 496, 497, 499, 508, 530, 534, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 807, 808, 809, 811, 813, 822, 823, 824, 836, 840, 842, 843, 844, 845, 865, 866, 867, 870, 886, 888, 903, 905, 906, 908, 911, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 950, 951, 953, 954, 956, 960, 962, 963, 965, 966, 967, 969, 970, 979, 981, 982, 984, 985, 987, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1071, 1077, 1089, 1090, 1093, 1094, 1096, 1097, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1183, 1184, 1206, 1207, 1210, 1211, 1212, 1214], "default": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 177, 191, 192, 193, 194, 195, 196, 203, 366, 367, 370, 375, 376, 379, 380, 383, 384, 385, 387, 393, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 486, 487, 488, 489, 508, 517, 518, 527, 528, 532, 533, 534, 535, 536, 537, 538, 539, 540, 547, 549, 550, 551, 552, 553, 556, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 800, 802, 808, 809, 811, 814, 815, 818, 819, 820, 822, 823, 824, 825, 828, 833, 834, 835, 836, 837, 840, 841, 842, 843, 845, 846, 847, 849, 851, 852, 853, 856, 858, 860, 861, 868, 869, 870, 872, 875, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 903, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1084, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "As": [2, 8, 170, 171, 186, 196, 203, 366, 367, 370, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 406, 1111, 1112, 1113, 1117, 1119], "shown": [2, 8, 170, 171, 191, 192, 196, 203, 366, 367, 370, 376, 387, 389, 391, 406, 558, 597, 600, 617, 620, 629, 753, 756, 787, 921, 928, 1007, 1021, 1024, 1025, 1028, 1111, 1112, 1120, 1121, 1124], "appropri": [2, 8, 170, 171, 196, 203, 366, 367, 370, 381, 558, 572, 728, 731, 1106, 1107], "from": [2, 8, 129, 130, 131, 132, 133, 170, 171, 172, 176, 177, 178, 186, 187, 188, 191, 192, 193, 194, 195, 196, 203, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 432, 433, 434, 436, 438, 440, 442, 444, 445, 446, 448, 451, 453, 454, 456, 458, 460, 468, 470, 471, 480, 483, 499, 508, 517, 518, 527, 542, 546, 551, 552, 558, 662, 769, 772, 796, 817, 824, 825, 828, 864, 870, 877, 879, 890, 892, 908, 916, 919, 921, 931, 933, 970, 982, 984, 1007, 1025, 1028, 1037, 1040, 1047, 1050, 1067, 1068, 1069, 1070, 1071, 1073, 1083, 1084, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1106, 1110, 1111, 1112, 1118, 1131, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1179, 1183, 1184, 1194, 1202, 1205, 1210, 1214], "our": [2, 8, 170, 171, 186, 187, 196, 203, 366, 367, 368, 369, 370, 376, 383, 388, 391, 392, 393, 394, 406, 1173], "toi": [2, 8, 170, 171, 196, 203, 366, 367], "arrayexampl": [2, 8, 170, 171], "import": [2, 8, 170, 171, 172, 176, 187, 196, 203, 366, 367, 371, 374, 375, 376, 380, 382, 383, 384, 385, 386, 389, 391, 392, 394, 406, 508, 549, 1173, 1179], "pass": [2, 8, 170, 171, 172, 176, 191, 192, 193, 194, 195, 196, 203, 366, 367, 371, 375, 376, 377, 378, 379, 380, 382, 383, 386, 387, 391, 406, 471, 485, 508, 517, 552, 558, 589, 592, 796, 807, 840, 870, 906, 1067, 1068, 1069, 1183, 1184, 1206, 1207, 1210, 1214, 1216, 1217], "hasattr": [2, 8, 170, 171, 196, 203, 366, 367, 391], "relu": [2, 8, 170, 171, 193, 194, 392, 393, 417, 418, 419, 1173], "softmax": [2, 8, 170, 171, 193, 194, 417, 908, 919, 920, 1173], "true": [2, 8, 10, 12, 26, 102, 111, 136, 137, 142, 143, 150, 151, 164, 165, 170, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 376, 378, 379, 383, 384, 386, 389, 391, 392, 393, 394, 417, 418, 423, 425, 427, 429, 430, 432, 449, 471, 477, 480, 481, 482, 483, 484, 508, 527, 544, 548, 549, 558, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 600, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 620, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 717, 718, 720, 721, 722, 724, 728, 730, 732, 733, 735, 737, 739, 740, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 809, 810, 814, 821, 823, 825, 827, 829, 835, 836, 843, 858, 864, 866, 869, 870, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 908, 916, 921, 922, 924, 943, 945, 947, 949, 970, 971, 973, 985, 987, 991, 992, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1081, 1082, 1084, 1090, 1092, 1094, 1095, 1100, 1101, 1103, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1171, 1172, 1194, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215], "axi": [2, 9, 11, 12, 30, 34, 35, 46, 48, 76, 77, 79, 90, 93, 95, 102, 103, 106, 107, 108, 110, 123, 124, 125, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 191, 192, 196, 204, 206, 207, 226, 230, 236, 238, 264, 265, 266, 274, 277, 279, 285, 286, 289, 290, 296, 300, 311, 313, 314, 319, 321, 328, 348, 349, 350, 351, 360, 361, 362, 363, 364, 365, 376, 379, 383, 384, 386, 387, 389, 391, 394, 405, 417, 422, 432, 449, 450, 508, 510, 513, 520, 533, 534, 535, 536, 537, 538, 539, 540, 552, 796, 814, 815, 824, 868, 921, 925, 926, 927, 931, 933, 982, 983, 984, 985, 986, 987, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1033, 1034, 1035, 1036, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1094, 1105, 1106, 1107, 1108, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172], "keepdim": [2, 9, 11, 73, 76, 77, 79, 90, 108, 110, 123, 125, 150, 151, 166, 167, 168, 169, 191, 192, 196, 204, 206, 264, 265, 266, 274, 319, 321, 328, 362, 363, 364, 365, 796, 868, 921, 947, 948, 949, 985, 986, 987, 1106, 1107, 1108, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172], "fals": [2, 9, 10, 11, 12, 28, 73, 76, 77, 79, 90, 102, 108, 110, 123, 125, 129, 130, 131, 132, 133, 142, 143, 150, 151, 164, 165, 166, 167, 168, 169, 172, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 376, 383, 386, 392, 393, 394, 423, 425, 427, 471, 477, 480, 482, 483, 484, 489, 508, 527, 528, 539, 543, 544, 547, 552, 555, 557, 558, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 600, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 717, 718, 720, 721, 722, 724, 728, 730, 732, 733, 735, 737, 739, 740, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 796, 797, 798, 799, 800, 801, 804, 805, 809, 810, 814, 817, 821, 823, 825, 827, 829, 833, 840, 842, 843, 845, 846, 858, 868, 870, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 921, 922, 923, 924, 943, 945, 947, 948, 949, 970, 985, 986, 987, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1007, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1084, 1090, 1092, 1094, 1095, 1100, 1101, 1103, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1183, 1184, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "all_equ": [2, 142, 143, 196, 295, 338, 339, 796, 801], "equality_matrix": [2, 10, 142, 143, 196, 205, 295, 338, 339, 796, 797, 798, 799, 800, 801], "contain": [2, 10, 129, 132, 133, 142, 143, 186, 189, 190, 191, 192, 195, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 378, 379, 384, 386, 387, 388, 389, 390, 393, 394, 406, 417, 420, 421, 423, 426, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 508, 529, 530, 533, 542, 546, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 798, 800, 802, 805, 808, 809, 811, 813, 814, 821, 824, 825, 828, 835, 844, 864, 865, 866, 870, 872, 875, 877, 882, 886, 890, 894, 898, 908, 911, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1017, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1041, 1044, 1046, 1047, 1051, 1055, 1058, 1059, 1063, 1067, 1068, 1069, 1070, 1071, 1084, 1089, 1090, 1093, 1094, 1095, 1096, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1210, 1214, 1216, 1217], "x1": [2, 10, 142, 143, 196, 205, 294, 295, 301, 307, 315, 336, 337, 338, 339, 376, 387, 471, 503, 508, 546, 558, 572, 575, 576, 589, 592, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 637, 638, 641, 649, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 726, 727, 728, 731, 732, 737, 740, 745, 748, 749, 752, 777, 778, 781, 796, 797, 798, 799, 800, 801, 804, 908, 913, 921, 925, 927, 943, 946, 957, 959, 967, 969, 976, 978, 982, 984, 1106, 1110], "mix": [2, 10, 142, 143, 193, 194, 196, 373, 376, 378, 389, 471, 499, 508, 546, 558, 572, 597, 600, 617, 620, 641, 665, 666, 669, 686, 689, 726, 727, 737, 740, 796, 797, 798, 813, 821, 824, 825, 828, 864, 865, 866, 908, 911, 914, 915, 920, 921, 976, 978, 991, 992, 995, 1002, 1005, 1007, 1008, 1011, 1089, 1090, 1093, 1106, 1110, 1131, 1132, 1135, 1140, 1143, 1159], "nativearrai": [2, 10, 53, 81, 129, 132, 133, 134, 135, 142, 143, 374, 376, 379, 382, 383, 386, 387, 389, 391, 394, 407, 415, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 438, 440, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 460, 461, 463, 464, 466, 468, 470, 471, 477, 478, 479, 480, 483, 489, 491, 494, 496, 497, 499, 503, 508, 527, 528, 530, 546, 552, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 798, 800, 804, 805, 808, 809, 811, 813, 814, 815, 818, 819, 820, 822, 823, 824, 825, 826, 828, 833, 835, 836, 838, 839, 840, 849, 852, 853, 858, 859, 864, 865, 866, 868, 869, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1071, 1073, 1083, 1089, 1090, 1093, 1094, 1095, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "native_arrai": [2, 10, 134, 135, 142, 143, 172, 178, 184, 193, 194, 196, 205, 295, 338, 339, 417, 419, 420, 421, 422, 423, 426, 428, 432, 451, 453, 471, 480, 483, 508, 530, 546, 558, 559, 562, 577, 580, 597, 600, 617, 620, 621, 624, 641, 654, 665, 666, 669, 686, 689, 726, 727, 733, 736, 737, 740, 769, 772, 773, 776, 787, 796, 797, 798, 799, 800, 801, 805, 813, 814, 821, 824, 825, 828, 859, 864, 865, 866, 870, 872, 875, 908, 911, 914, 915, 920, 921, 925, 927, 928, 931, 933, 976, 978, 991, 992, 995, 1002, 1005, 1007, 1008, 1011, 1021, 1024, 1025, 1028, 1033, 1036, 1046, 1055, 1058, 1089, 1090, 1093, 1094, 1095, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168], "argsort": [2, 164, 165, 196, 360, 361, 1120], "descend": [2, 12, 102, 164, 165, 196, 207, 285, 296, 313, 360, 361, 921, 970, 972, 973, 975, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "stabl": [2, 12, 102, 164, 165, 196, 207, 285, 296, 313, 360, 361, 369, 389, 406, 796, 831, 832, 854, 855, 860, 861, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "asarrai": [2, 134, 135, 193, 194, 386, 432, 908, 909, 1111, 1113, 1117], "copi": [2, 13, 134, 135, 191, 192, 372, 375, 380, 384, 389, 391, 392, 405, 406, 432, 434, 435, 436, 442, 444, 471, 477, 508, 553, 796, 813, 865, 866, 1007, 1037, 1040, 1071, 1073, 1120, 1126, 1129], "dtype": [2, 13, 26, 42, 52, 81, 84, 90, 110, 128, 134, 135, 136, 137, 166, 167, 191, 192, 196, 222, 274, 298, 321, 332, 333, 362, 363, 374, 376, 379, 384, 385, 391, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 454, 455, 456, 457, 458, 459, 460, 467, 468, 469, 470, 471, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 507, 508, 548, 558, 613, 616, 796, 804, 805, 849, 865, 908, 916, 1007, 1021, 1024, 1089, 1090, 1093, 1094, 1100, 1102, 1106, 1107, 1108, 1120, 1126, 1129, 1131, 1132, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1164, 1165, 1168, 1173, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1216, 1217], "devic": [2, 13, 42, 52, 81, 84, 128, 134, 135, 139, 187, 191, 192, 196, 275, 309, 310, 335, 354, 355, 370, 373, 374, 379, 381, 384, 391, 392, 406, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 796, 824, 825, 828, 849, 852, 853, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1183, 1184, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "asin": [2, 140, 141, 196, 336, 337, 558, 1173], "asinh": [2, 140, 141, 196, 336, 337, 558, 1173], "atan": [2, 140, 141, 196, 336, 337, 558, 593, 1173], "atan2": [2, 140, 141, 196, 336, 337, 558, 1173], "atanh": [2, 140, 141, 196, 336, 337, 558, 588, 786, 791, 1173], "binary_cross_entropi": [2, 152, 153, 196, 348, 349, 991], "pred": [2, 19, 35, 103, 152, 153, 196, 215, 230, 286, 297, 300, 314, 348, 349, 379, 383, 386, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006], "bitwise_and": [2, 140, 141, 196, 336, 337, 558], "bitwise_invert": [2, 140, 141, 196, 336, 337, 558], "bitwise_left_shift": [2, 140, 141, 196, 336, 337, 558], "bitwise_or": [2, 140, 141, 196, 336, 337, 558], "bitwise_right_shift": [2, 140, 141, 196, 336, 337, 558], "bitwise_xor": [2, 140, 141, 196, 336, 337, 558], "can_cast": [2, 136, 137, 196, 298, 332, 333, 379, 384, 471, 484], "float32": [2, 26, 136, 137, 196, 222, 298, 332, 333, 376, 384, 471, 475, 476, 480, 481, 482, 483, 484, 492, 1089, 1090, 1093], "float64": [2, 26, 136, 137, 384, 471, 477, 480, 481, 483, 492], "bool": [2, 26, 129, 130, 131, 132, 133, 136, 137, 191, 192, 196, 203, 366, 367, 376, 383, 384, 386, 394, 429, 430, 432, 445, 471, 477, 480, 481, 483, 486, 487, 488, 489, 492, 495, 496, 497, 507, 508, 527, 528, 543, 552, 555, 558, 597, 600, 601, 604, 609, 612, 617, 620, 638, 641, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 710, 713, 714, 717, 718, 721, 737, 740, 796, 797, 800, 804, 805, 814, 817, 821, 823, 833, 835, 840, 842, 843, 844, 845, 858, 868, 869, 870, 903, 921, 922, 924, 947, 949, 970, 985, 987, 1007, 1046, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1094, 1095, 1106, 1107, 1108, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "ceil": [2, 140, 141, 196, 336, 337, 432, 433, 558, 1173], "choleski": [2, 150, 151, 193, 194, 921], "upper": [2, 28, 150, 151, 191, 192, 432, 441, 464, 466, 921, 922, 923, 924, 963, 965, 1094, 1100, 1102], "clip": [2, 154, 155, 191, 192, 196, 299, 350, 351, 379, 383, 386, 389, 392, 394, 558, 726, 727, 796, 808, 809, 811, 1007, 1012, 1173], "x_min": [2, 29, 154, 155, 191, 192, 196, 224, 299, 350, 351, 389, 394, 1007, 1008, 1009, 1010, 1011, 1012], "x_max": [2, 29, 154, 155, 191, 192, 196, 224, 299, 350, 351, 389, 394, 1007, 1008, 1009, 1010, 1011, 1012], "roll": [2, 29, 154, 155, 196, 311, 350, 351, 383, 387, 1007, 1008, 1009, 1045], "8": [2, 29, 154, 155, 193, 194, 196, 294, 309, 336, 337, 354, 355, 369, 372, 376, 383, 388, 392, 417, 421, 508, 530, 558, 572, 576, 597, 600, 621, 624, 629, 641, 665, 666, 669, 686, 689, 706, 726, 727, 753, 756, 769, 772, 773, 776, 787, 796, 805, 824, 870, 872, 875, 908, 915, 921, 925, 927, 928, 931, 933, 957, 959, 976, 978, 991, 992, 995, 1007, 1008, 1009, 1011, 1025, 1028, 1033, 1036, 1046, 1094, 1095, 1096, 1097, 1098, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159, 1173, 1194, 1205], "concat": [2, 154, 155, 191, 192, 196, 350, 351, 508, 537, 538, 539, 540, 552, 796, 823, 1007, 1173], "xs": [2, 30, 154, 155, 196, 226, 350, 351, 383, 508, 531, 535, 537, 538, 539, 796, 797, 800, 805, 870, 881, 1007, 1013, 1014, 1015, 1016], "constant_pad": [2, 154, 155, 196, 350, 351, 1007], "pad_width": [2, 31, 127, 154, 155, 196, 227, 329, 350, 351, 1007, 1017, 1018, 1019, 1020, 1063, 1064, 1065, 1066], "valu": [2, 31, 122, 154, 155, 162, 163, 191, 192, 193, 194, 195, 196, 227, 329, 350, 351, 370, 376, 378, 379, 383, 384, 385, 386, 387, 389, 391, 394, 406, 432, 433, 441, 445, 446, 448, 449, 450, 471, 477, 486, 487, 488, 508, 520, 551, 552, 558, 559, 562, 564, 572, 577, 580, 585, 621, 624, 636, 638, 641, 642, 645, 654, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 726, 727, 728, 731, 737, 740, 741, 744, 745, 748, 753, 756, 787, 792, 795, 796, 808, 809, 811, 812, 817, 823, 824, 825, 828, 834, 837, 841, 851, 852, 853, 854, 855, 856, 869, 870, 872, 875, 877, 879, 881, 890, 892, 903, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 919, 920, 921, 930, 942, 951, 953, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 985, 987, 1007, 1008, 1011, 1017, 1018, 1019, 1020, 1033, 1036, 1037, 1040, 1063, 1065, 1066, 1067, 1068, 1069, 1071, 1075, 1076, 1077, 1078, 1079, 1084, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214], "co": [2, 140, 141, 187, 196, 336, 337, 389, 405, 558, 567, 568, 632, 796, 823, 1173], "cosh": [2, 140, 141, 196, 336, 337, 558, 567, 568, 1173], "cross": [2, 150, 151, 193, 194, 921, 991, 992, 995, 997, 1000, 1002, 1005, 1173], "cross_entropi": [2, 152, 153, 196, 348, 349, 379, 383, 386, 991, 1002, 1005], "det": [2, 150, 151, 193, 194, 921, 966], "diagon": [2, 150, 151, 193, 194, 432, 441, 461, 463, 464, 466, 921, 979, 981], "offset": [2, 37, 60, 118, 150, 151, 156, 157, 196, 251, 352, 353, 921, 931, 932, 933, 979, 980, 981, 1089, 1090, 1091, 1092, 1093], "axis1": [2, 37, 113, 150, 151, 154, 155, 196, 322, 350, 351, 921, 931, 932, 933, 1007, 1055, 1056, 1057, 1058], "axis2": [2, 37, 150, 151, 921, 931, 932, 933], "divid": [2, 140, 141, 191, 192, 196, 336, 337, 376, 382, 558, 657, 658, 661, 796, 860, 1007, 1046], "eigh": [2, 150, 151, 193, 194, 921], "namedtupl": [2, 39, 91, 150, 151, 921, 934, 935, 936, 963, 964, 965, 970, 1111, 1112, 1113, 1117], "eigvalsh": [2, 150, 151, 193, 194, 921], "einsum": [2, 166, 167, 196, 362, 363, 1131, 1159], "equat": [2, 41, 166, 167, 196, 232, 362, 363, 921, 967, 969, 1131, 1132, 1133, 1134, 1135, 1159], "empty_lik": [2, 134, 135, 193, 194, 432], "equal": [2, 140, 141, 191, 192, 196, 336, 337, 376, 383, 384, 432, 441, 445, 446, 448, 471, 477, 558, 605, 608, 613, 616, 666, 670, 673, 674, 677, 745, 748, 753, 756, 796, 797, 800, 804, 805, 921, 931, 933, 942, 951, 953, 960, 962, 1007, 1008, 1011, 1017, 1020, 1046, 1063, 1066, 1094, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1140, 1143, 1152, 1155, 1156, 1160, 1163], "erf": [2, 140, 141, 196, 336, 337, 558], "exp": [2, 140, 141, 196, 336, 337, 558, 575, 650, 653, 706, 709, 1173], "expand_dim": [2, 154, 155, 196, 350, 351, 389, 392, 1007, 1173], "expm1": [2, 140, 141, 196, 336, 337, 558], "flip": [2, 154, 155, 196, 350, 351, 391, 392, 394, 558, 601, 604, 1007, 1033, 1036, 1173], "floor": [2, 140, 141, 196, 336, 337, 558, 613, 616, 658, 796, 822, 1173], "floor_divid": [2, 140, 141, 196, 336, 337, 558, 636, 657], "from_dlpack": [2, 134, 135, 193, 194, 432], "full_lik": [2, 134, 135, 193, 194, 432], "fill_valu": [2, 52, 134, 135, 384, 432, 445, 446, 447, 448, 558, 641, 665, 666, 669, 686, 689], "gather_nd": [2, 142, 143, 191, 192, 196, 302, 338, 339, 796, 829, 1173], "indic": [2, 53, 142, 143, 191, 192, 196, 241, 302, 338, 339, 372, 390, 394, 417, 422, 558, 757, 760, 796, 824, 825, 826, 827, 828, 829, 836, 849, 852, 853, 908, 909, 910, 911, 912, 913, 914, 915, 921, 985, 987, 1007, 1041, 1044, 1071, 1072, 1074, 1076, 1078, 1079, 1080, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1106, 1107, 1108, 1109, 1111, 1112, 1118, 1120, 1121, 1124, 1126, 1129, 1173, 1176, 1178, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1206, 1207], "union": [2, 53, 111, 129, 132, 133, 142, 143, 150, 151, 191, 192, 374, 376, 379, 382, 383, 384, 385, 386, 387, 389, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 475, 476, 477, 478, 479, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 507, 508, 524, 525, 526, 527, 528, 530, 533, 534, 535, 536, 541, 547, 549, 551, 552, 553, 554, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 800, 804, 805, 808, 809, 811, 814, 815, 818, 819, 820, 822, 823, 824, 825, 826, 828, 833, 835, 836, 838, 839, 840, 849, 852, 853, 858, 859, 864, 865, 866, 868, 869, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 971, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1082, 1083, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "greater": [2, 140, 141, 191, 192, 196, 336, 337, 558, 564, 577, 580, 589, 592, 605, 608, 613, 616, 636, 641, 654, 657, 658, 661, 666, 745, 748, 749, 752, 757, 760, 792, 795, 921, 925, 927, 1007, 1047, 1050, 1094, 1100, 1102], "greater_equ": [2, 140, 141, 196, 336, 337, 558, 641, 665], "inv": [2, 150, 151, 193, 194, 391, 921, 960, 1173], "isfinit": [2, 140, 141, 196, 336, 337, 558], "isinf": [2, 140, 141, 196, 336, 337, 558], "isnan": [2, 140, 141, 196, 336, 337, 558], "layer_norm": [2, 156, 157, 196, 352, 353, 1089], "normalized_idx": [2, 60, 156, 157, 196, 251, 352, 353, 1089, 1090, 1091, 1092, 1093], "05": [2, 60, 156, 157, 196, 251, 352, 353, 508, 870, 872, 875, 1089, 1090, 1091, 1092, 1093], "scale": [2, 60, 156, 157, 196, 251, 352, 353, 383, 508, 550, 551, 870, 894, 896, 908, 916, 919, 920, 1089, 1090, 1091, 1092, 1093, 1194, 1202, 1205, 1210, 1213], "new_std": [2, 60, 156, 157, 196, 251, 352, 353, 1089, 1090, 1091, 1092, 1093, 1208, 1209], "less": [2, 140, 141, 187, 191, 192, 196, 336, 337, 370, 376, 383, 387, 388, 389, 558, 564, 567, 568, 571, 577, 580, 589, 592, 621, 624, 628, 632, 690, 693, 694, 697, 702, 705, 745, 748, 749, 752, 757, 760, 769, 772, 921, 942, 951, 953, 960, 962, 985, 987, 1094, 1100, 1102, 1131, 1160, 1163], "less_equ": [2, 140, 141, 196, 336, 337, 558], "log": [2, 140, 141, 196, 336, 337, 369, 370, 379, 383, 386, 389, 392, 432, 450, 558, 575, 649, 698, 701, 706, 709, 921, 930, 966, 1173], "log10": [2, 140, 141, 196, 336, 337, 558], "log1p": [2, 140, 141, 196, 336, 337, 558], "log2": [2, 140, 141, 196, 336, 337, 558], "logaddexp": [2, 140, 141, 196, 336, 337, 558, 575, 649], "logical_and": [2, 140, 141, 196, 336, 337, 558, 1173], "logical_not": [2, 140, 141, 196, 336, 337, 558, 1173], "logical_or": [2, 140, 141, 196, 336, 337, 558, 1173], "logical_xor": [2, 140, 141, 196, 336, 337, 558], "matmul": [2, 150, 151, 196, 346, 347, 374, 380, 389, 921, 970, 1173], "matrix_norm": [2, 150, 151, 191, 192, 921], "ord": [2, 73, 125, 150, 151, 191, 192, 921, 947, 948, 949, 985, 986, 987], "fro": [2, 73, 150, 151, 921, 947, 948, 949], "matrix_rank": [2, 150, 151, 193, 194, 921], "rtol": [2, 74, 87, 150, 151, 921, 942, 951, 952, 953, 960, 961, 962], "matrix_transpos": [2, 150, 151, 193, 194, 391, 921], "max": [2, 166, 167, 191, 192, 196, 362, 363, 471, 491, 494, 558, 726, 796, 808, 809, 811, 819, 852, 853, 921, 942, 951, 953, 960, 962, 1131, 1210, 1212], "mean": [2, 166, 167, 191, 192, 196, 203, 362, 363, 366, 367, 369, 370, 373, 376, 379, 383, 384, 385, 386, 389, 391, 392, 393, 394, 405, 406, 508, 537, 538, 539, 540, 552, 796, 819, 1067, 1068, 1069, 1070, 1071, 1077, 1094, 1099, 1111, 1112, 1131, 1173, 1185], "meshgrid": [2, 134, 135, 193, 194, 432], "index": [2, 78, 134, 135, 191, 192, 372, 379, 383, 391, 431, 432, 441, 451, 452, 453, 508, 549, 796, 802, 824, 825, 828, 1007, 1051, 1054, 1071, 1074, 1075, 1078, 1079, 1080, 1085, 1087, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1176, 1178], "xy": [2, 78, 134, 135, 432, 451, 452, 453], "min": [2, 166, 167, 191, 192, 196, 362, 363, 471, 491, 494, 558, 727, 796, 819, 852, 853, 860, 921, 963, 965, 970, 972, 973, 975, 985, 987, 1131], "multipli": [2, 140, 141, 196, 336, 337, 376, 380, 382, 558, 796, 814], "neg": [2, 140, 141, 196, 336, 337, 379, 383, 386, 417, 419, 432, 433, 441, 558, 670, 673, 674, 677, 728, 731, 745, 748, 749, 752, 921, 970, 982, 984, 985, 987, 1007, 1025, 1028, 1041, 1044, 1164, 1165, 1168, 1169, 1172], "not_equ": [2, 140, 141, 196, 336, 337, 558], "ones_lik": [2, 134, 135, 193, 194, 394, 432, 1173], "outer": [2, 150, 151, 193, 194, 921, 1067, 1068, 1069, 1070], "permute_dim": [2, 154, 155, 196, 350, 351, 1007], "ax": [2, 86, 116, 150, 151, 154, 155, 191, 192, 196, 271, 350, 351, 374, 376, 384, 391, 508, 552, 796, 814, 921, 947, 949, 967, 969, 976, 977, 978, 985, 987, 1007, 1017, 1020, 1025, 1028, 1029, 1030, 1031, 1032, 1041, 1044, 1047, 1050, 1055, 1058, 1063, 1066, 1106, 1107, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "pinv": [2, 150, 151, 193, 194, 921, 942, 1173], "posit": [2, 129, 130, 131, 140, 141, 196, 336, 337, 387, 392, 405, 431, 432, 441, 471, 491, 508, 532, 536, 540, 558, 559, 562, 670, 673, 674, 677, 728, 731, 749, 752, 796, 823, 921, 922, 924, 1007, 1021, 1024, 1041, 1044, 1094, 1104, 1106, 1109, 1164, 1165, 1168, 1169, 1172, 1183, 1184], "pow": [2, 140, 141, 196, 336, 337, 558], "prod": [2, 166, 167, 191, 192, 196, 362, 363, 376, 384, 796, 819, 1131], "qr": [2, 150, 151, 193, 194, 921], "mode": [2, 91, 150, 151, 191, 192, 369, 376, 383, 406, 429, 430, 508, 537, 538, 539, 540, 552, 558, 572, 728, 731, 921, 963, 964, 965], "reduc": [2, 91, 150, 151, 191, 192, 391, 508, 552, 796, 819, 921, 963, 964, 965, 1106, 1107, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "remaind": [2, 140, 141, 191, 192, 196, 336, 337, 558, 796, 822, 1007, 1046], "repeat": [2, 154, 155, 191, 192, 196, 350, 351, 370, 375, 376, 380, 382, 383, 796, 820, 1007, 1059, 1062], "reshap": [2, 154, 155, 191, 192, 196, 350, 351, 386, 389, 391, 394, 1007, 1173], "shape": [2, 94, 154, 155, 191, 192, 196, 200, 278, 292, 309, 310, 318, 327, 340, 341, 350, 351, 354, 355, 358, 359, 370, 374, 375, 376, 384, 385, 386, 387, 389, 391, 392, 393, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 508, 520, 548, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 818, 819, 820, 822, 825, 828, 833, 836, 849, 852, 853, 859, 870, 872, 874, 876, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1106, 1107, 1109, 1110, 1114, 1116, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1159, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1208, 1209], "shift": [2, 95, 154, 155, 196, 279, 311, 350, 351, 376, 387, 558, 605, 608, 613, 616, 1007, 1041, 1042, 1043, 1044, 1045], "round": [2, 140, 141, 186, 187, 188, 196, 336, 337, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 558, 572, 621, 624, 636, 654, 657, 658, 661, 728, 731, 769, 772, 792, 795, 1173], "sign": [2, 140, 141, 187, 196, 336, 337, 369, 390, 394, 432, 433, 558, 559, 562, 572, 589, 592, 613, 616, 728, 731, 749, 752, 921, 930, 966, 1111, 1112, 1113, 1117, 1119, 1131, 1148, 1151, 1156], "sin": [2, 140, 141, 196, 336, 337, 382, 389, 558, 796, 823, 1173], "sinh": [2, 140, 141, 196, 336, 337, 558, 1173], "solv": [2, 150, 151, 193, 194, 390, 405, 921], "sort": [2, 165, 191, 192, 193, 194, 195, 196, 361, 374, 921, 934, 936, 970, 972, 973, 975, 1121, 1124], "sparse_cross_entropi": [2, 152, 153, 196, 348, 349, 991], "sqrt": [2, 140, 141, 196, 336, 337, 558, 921, 985, 987], "squar": [2, 140, 141, 196, 336, 337, 558, 769, 772, 908, 911, 921, 922, 924, 928, 930, 934, 936, 937, 939, 940, 950, 966, 967, 969, 970], "squeez": [2, 154, 155, 196, 350, 351, 1007, 1173], "stack": [2, 154, 155, 191, 192, 196, 350, 351, 389, 432, 461, 463, 464, 466, 921, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 950, 951, 953, 954, 956, 960, 962, 963, 965, 970, 972, 973, 975, 979, 981, 1007, 1071, 1072, 1081, 1082, 1173, 1194, 1203], "std": [2, 166, 167, 196, 362, 363, 376, 1094, 1099, 1111, 1112, 1131], "correct": [2, 108, 123, 166, 167, 196, 319, 328, 362, 363, 370, 371, 373, 379, 383, 384, 385, 387, 471, 503, 1007, 1008, 1011, 1131, 1152, 1153, 1154, 1155, 1160, 1161, 1162, 1163, 1173], "subtract": [2, 140, 141, 196, 336, 337, 376, 382, 558], "sum": [2, 166, 167, 191, 192, 196, 362, 363, 379, 383, 384, 386, 389, 508, 537, 538, 539, 540, 552, 558, 572, 575, 649, 706, 709, 796, 815, 819, 852, 853, 908, 920, 921, 970, 979, 981, 985, 987, 1131, 1132, 1135, 1152, 1155], "svd": [2, 150, 151, 193, 194, 921, 973, 1173], "full_matric": [2, 111, 150, 151, 921, 970, 971, 973], "tupl": [2, 111, 122, 129, 130, 131, 132, 133, 150, 151, 162, 163, 191, 192, 374, 383, 384, 385, 387, 391, 392, 393, 406, 432, 434, 436, 437, 445, 454, 456, 457, 467, 471, 479, 493, 508, 527, 796, 823, 859, 908, 911, 914, 915, 918, 921, 942, 951, 953, 960, 962, 970, 971, 973, 976, 978, 985, 987, 1007, 1013, 1016, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1076, 1078, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1088, 1094, 1099, 1100, 1102, 1106, 1109, 1111, 1112, 1113, 1115, 1117, 1118, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "svdval": [2, 150, 151, 193, 194, 921, 972], "swapax": [2, 154, 155, 196, 350, 351, 1007], "axis0": [2, 113, 154, 155, 196, 322, 350, 351, 1007, 1055, 1056, 1057, 1058], "tan": [2, 140, 141, 196, 316, 336, 337, 375, 379, 383, 386, 387, 389, 558, 577, 580, 588, 593, 783, 791, 921, 931, 933, 1111, 1112, 1120, 1121, 1124, 1173], "56": [2, 114, 140, 141, 196, 316, 323, 336, 337, 376, 558, 588, 593, 769, 772, 782, 783, 784, 785, 791, 870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "19": [2, 114, 140, 141, 196, 316, 323, 336, 337, 376, 558, 588, 593, 617, 620, 782, 783, 784, 785, 791, 921, 931, 933], "tanh": [2, 140, 141, 196, 317, 336, 337, 389, 417, 558, 588, 593, 788, 1173], "762": [2, 115, 140, 141, 196, 324, 336, 337, 417, 428, 558, 588, 593, 787, 789, 790], "964": [2, 115, 140, 141, 196, 324, 336, 337, 417, 428, 558, 588, 593, 787, 789, 790], "tensordot": [2, 150, 151, 193, 194, 921], "tile": [2, 154, 155, 196, 350, 351, 1007, 1173], "rep": [2, 117, 154, 155, 196, 325, 350, 351, 1007, 1059, 1060, 1061, 1062], "trace": [2, 150, 151, 191, 192, 193, 194, 389, 406, 796, 842, 843, 845, 921], "tril": [2, 134, 135, 193, 194, 432], "k": [2, 119, 120, 134, 135, 373, 389, 432, 441, 461, 462, 463, 464, 465, 466, 796, 804, 908, 920, 921, 943, 946, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 1094, 1099, 1100, 1102, 1106, 1109], "triu": [2, 134, 135, 193, 194, 432], "trunc": [2, 140, 141, 196, 336, 337, 558], "unique_count": [2, 162, 163, 196, 318, 358, 359, 1111, 1114], "uc": [2, 122, 162, 163, 1113, 1115], "count": [2, 122, 162, 163, 376, 392, 508, 546, 921, 982, 984, 1007, 1025, 1028, 1111, 1112, 1113, 1115, 1117, 1164, 1165, 1168, 1169, 1172], "var": [2, 166, 167, 196, 203, 362, 363, 366, 367, 376, 389, 1067, 1068, 1069, 1131], "vecdot": [2, 150, 151, 193, 194, 921], "vector_norm": [2, 150, 151, 191, 192, 921], "vector_to_skew_symmetric_matrix": [2, 150, 151, 193, 194, 921, 1173], "zero_pad": [2, 154, 155, 196, 350, 351, 1007, 1173], "zeros_lik": [2, 134, 135, 193, 194, 432, 1007, 1008, 1011, 1173], "collect": [129, 191, 192, 378, 405, 417, 429, 508, 796, 870, 908, 991, 1071, 1084, 1089, 1094, 1180, 1194, 1208, 1210], "accept": [129, 369, 370, 375, 376, 378, 379, 382, 383, 385, 386, 387, 391, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 714, 717, 718, 721, 737, 740, 749, 752, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1140, 1143, 1164, 1165, 1168, 1173], "args_to_ivi": 129, "arg": [129, 130, 131, 172, 176, 191, 192, 372, 389, 391, 393, 508, 517, 532, 536, 540, 552, 796, 853, 1183, 1184, 1206, 1207], "include_deriv": [129, 130, 131, 132, 133, 1071, 1073, 1083], "kwarg": [129, 130, 131, 172, 176, 189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 389, 391, 393, 508, 517, 532, 536, 540, 796, 846, 1183, 1184, 1206, 1207], "keyword": [129, 130, 131, 191, 192, 193, 194, 195, 374, 384, 385, 386, 387, 392, 432, 451, 453, 508, 517, 518, 532, 536, 540, 796, 803, 846, 1071, 1077, 1131, 1156, 1206, 1207], "variabl": [129, 130, 131, 132, 133, 191, 192, 193, 194, 375, 380, 383, 384, 386, 387, 392, 393, 394, 406, 796, 806, 838, 839, 840, 841, 842, 843, 845, 862, 870, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 903, 906, 908, 919, 921, 967, 969, 1067, 1068, 1069, 1070, 1089, 1090, 1093, 1173, 1183, 1184, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "form": [129, 130, 131, 132, 133, 187, 191, 192, 368, 379, 393, 394, 432, 434, 436, 454, 456, 461, 463, 464, 466, 796, 802, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 951, 953, 954, 956, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 1071, 1073, 1083], "nest": [129, 130, 131, 132, 133, 191, 192, 193, 194, 195, 374, 379, 382, 383, 391, 392, 393, 406, 508, 532, 536, 540, 796, 864, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "otherwis": [129, 130, 131, 132, 133, 172, 184, 191, 192, 382, 384, 385, 387, 389, 391, 432, 433, 471, 477, 480, 483, 486, 487, 488, 508, 527, 558, 670, 673, 674, 677, 678, 681, 796, 806, 867, 870, 886, 888, 903, 921, 922, 924, 928, 982, 984, 985, 987, 1067, 1068, 1069, 1071, 1084, 1106, 1107, 1108, 1110, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "argument": [129, 130, 131, 132, 133, 172, 176, 177, 186, 191, 192, 193, 194, 195, 371, 373, 374, 375, 376, 378, 379, 380, 382, 383, 389, 391, 392, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 499, 508, 517, 518, 532, 536, 540, 558, 559, 562, 572, 577, 580, 621, 624, 654, 737, 740, 769, 772, 773, 776, 782, 796, 802, 803, 807, 817, 824, 846, 853, 908, 911, 920, 921, 931, 933, 1007, 1041, 1044, 1071, 1077, 1089, 1090, 1093, 1111, 1113, 1117, 1131, 1136, 1139, 1156, 1164, 1165, 1168, 1176, 1178, 1183, 1184, 1206, 1207], "ar": [129, 130, 131, 186, 187, 188, 191, 192, 193, 194, 195, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 405, 406, 407, 415, 432, 433, 508, 517, 518, 542, 546, 548, 552, 558, 625, 714, 717, 718, 721, 753, 756, 761, 764, 782, 796, 797, 800, 804, 805, 806, 830, 836, 837, 841, 848, 850, 862, 908, 917, 921, 925, 927, 942, 943, 946, 947, 949, 951, 953, 960, 962, 970, 972, 973, 975, 982, 984, 1007, 1008, 1011, 1025, 1028, 1041, 1044, 1071, 1073, 1077, 1083, 1094, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1111, 1112, 1173, 1216, 1217], "unchang": [129, 130, 131, 132, 133], "The": [129, 130, 131, 132, 133, 172, 176, 177, 185, 186, 188, 191, 192, 193, 194, 195, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 405, 417, 418, 419, 422, 428, 429, 430, 432, 433, 442, 444, 450, 461, 463, 464, 466, 471, 475, 476, 477, 485, 490, 492, 493, 495, 498, 503, 507, 508, 517, 518, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 547, 548, 549, 550, 551, 552, 554, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 782, 786, 787, 791, 792, 795, 796, 802, 804, 807, 808, 816, 817, 823, 825, 828, 838, 839, 840, 842, 843, 844, 845, 847, 852, 853, 854, 855, 856, 859, 860, 861, 869, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 903, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1046, 1059, 1062, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1099, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214], "check": [129, 130, 131, 132, 133, 186, 187, 188, 191, 192, 369, 370, 383, 388, 389, 391, 392, 393, 394, 405, 471, 485, 492, 493, 495, 507, 508, 547, 557, 796, 806, 821, 835, 842, 843, 844, 845, 862, 869, 870, 886, 888, 921, 934, 936, 1071, 1072, 1081, 1082, 1083, 1173], "dict": [129, 130, 131, 132, 133, 172, 184, 191, 192, 193, 194, 195, 383, 392, 393, 508, 517, 518, 527, 530, 533, 534, 535, 536, 796, 802, 818, 819, 820, 1071, 1073, 1074, 1077, 1080, 1083, 1084], "whether": [129, 130, 131, 132, 133, 191, 192, 193, 194, 195, 196, 203, 366, 367, 368, 369, 384, 386, 387, 417, 418, 429, 430, 471, 477, 489, 495, 496, 497, 507, 508, 527, 528, 539, 543, 544, 547, 548, 552, 555, 557, 558, 678, 681, 796, 797, 800, 804, 805, 814, 817, 821, 823, 833, 835, 837, 840, 841, 842, 843, 844, 845, 846, 858, 862, 868, 869, 870, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 903, 908, 916, 921, 934, 936, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1084, 1094, 1095, 1164, 1165, 1168, 1169, 1172, 1183, 1184, 1194, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215], "recurs": [129, 130, 131, 132, 133, 191, 192, 369, 372, 379, 383, 393, 406, 1071, 1072, 1073, 1081, 1082, 1083], "deriv": [129, 130, 131, 132, 133, 384, 385, 391, 393, 432, 438, 440, 446, 448, 458, 460, 468, 470, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1071, 1073, 1083, 1206, 1210, 1214, 1216], "str": [129, 130, 131, 172, 177, 191, 192, 384, 385, 429, 430, 432, 451, 453, 471, 475, 485, 486, 487, 490, 491, 494, 495, 496, 497, 500, 501, 502, 507, 508, 524, 527, 528, 530, 533, 534, 535, 536, 552, 796, 802, 816, 818, 819, 820, 847, 852, 853, 908, 909, 911, 913, 914, 915, 921, 963, 965, 1067, 1068, 1069, 1070, 1071, 1077, 1131, 1132, 1135, 1159], "kei": [129, 130, 131, 191, 192, 193, 194, 195, 383, 392, 508, 520, 796, 802, 812, 908, 919, 920, 1067, 1068, 1069, 1071, 1074, 1080, 1084, 1183, 1184, 1194, 1205, 1210, 1214], "word": [129, 130, 131, 432, 433, 1094, 1100, 1102, 1183, 1184], "ret": [129, 130, 131, 132, 133, 172, 176, 177, 184, 191, 192, 374, 375, 389, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 483, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 507, 508, 517, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 551, 552, 553, 554, 555, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 800, 802, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 852, 853, 858, 860, 861, 862, 864, 865, 866, 868, 869, 870, 872, 875, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1082, 1083, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1176, 1178, 1183, 1184, 1210, 1214], "same": [129, 130, 131, 186, 188, 191, 192, 369, 370, 372, 374, 376, 378, 379, 382, 383, 385, 386, 387, 389, 391, 393, 394, 432, 433, 438, 440, 446, 448, 451, 453, 458, 460, 461, 463, 464, 466, 468, 470, 471, 477, 478, 479, 508, 517, 518, 552, 558, 559, 562, 572, 601, 604, 621, 624, 654, 728, 731, 749, 752, 753, 756, 757, 760, 792, 795, 796, 822, 824, 825, 828, 849, 852, 853, 870, 886, 888, 903, 908, 909, 910, 911, 912, 913, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 934, 936, 937, 939, 940, 942, 954, 956, 960, 962, 963, 965, 967, 969, 970, 979, 981, 982, 984, 1007, 1013, 1016, 1025, 1028, 1029, 1032, 1041, 1044, 1047, 1050, 1051, 1054, 1067, 1068, 1069, 1071, 1084, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1156, 1159, 1160, 1163, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "convert": [129, 130, 131, 132, 133, 188, 191, 192, 382, 389, 406, 407, 415, 432, 434, 436, 454, 456, 471, 475, 476, 508, 524, 525, 526, 527, 547, 554, 557, 796, 859, 865, 866, 921, 988, 990, 1071, 1073, 1083, 1084, 1184], "args_to_n": [129, 386, 391], "nativ": [129, 131, 132, 133, 172, 178, 191, 192, 384, 386, 391, 392, 432, 454, 456, 471, 475, 476, 485, 508, 524, 525, 526, 527, 528, 547, 554, 557, 796, 840, 842, 845, 1183, 1184], "backend": [129, 131, 133, 176, 177, 178, 184, 186, 191, 192, 370, 371, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 394, 471, 492, 493, 495, 507, 508, 543, 545, 555, 796, 837, 840, 841, 847, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 906, 1173, 1179, 1183, 1184, 1210, 1211, 1212, 1213, 1214, 1215], "to_ivi": [129, 191, 192, 391, 1071, 1084], "If": [129, 132, 133, 172, 176, 177, 178, 186, 191, 192, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 406, 432, 433, 437, 438, 440, 441, 445, 446, 448, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 499, 508, 527, 551, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 714, 717, 718, 721, 728, 731, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 796, 840, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 922, 924, 925, 927, 942, 947, 949, 951, 953, 960, 962, 963, 965, 967, 969, 970, 982, 984, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1067, 1068, 1069, 1071, 1083, 1084, 1094, 1099, 1100, 1102, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "set": [129, 132, 133, 163, 172, 176, 177, 178, 184, 186, 191, 192, 359, 368, 370, 373, 374, 379, 381, 382, 383, 384, 385, 386, 389, 391, 392, 508, 527, 537, 538, 549, 550, 551, 552, 558, 589, 592, 796, 797, 800, 854, 855, 856, 857, 870, 877, 879, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 921, 925, 927, 942, 947, 949, 951, 953, 960, 962, 967, 969, 1071, 1072, 1081, 1082, 1083, 1087, 1088, 1094, 1104, 1106, 1107, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1152, 1155, 1160, 1163, 1194, 1203, 1210, 1211, 1212, 1213, 1214, 1215], "leaf": [129, 132, 133, 191, 192, 379, 383, 392, 1071, 1072, 1081, 1082], "within": [129, 132, 133, 370, 378, 393, 406, 432, 433, 1094, 1100, 1102], "mayb": [129, 132, 133, 369, 389, 391], "manner": [129, 132, 133, 186, 191, 192, 374, 375, 385, 392, 405, 406, 1071, 1083], "travers": [129, 132, 133, 191, 192, 383, 389, 391, 1071, 1083], "lowest": [129, 132, 133, 191, 192, 379, 406, 1071, 1083, 1094, 1096, 1097], "leav": [129, 132, 133, 191, 192, 193, 194, 196, 375, 376, 378, 379, 383, 384, 386, 387, 392, 393, 1007, 1051, 1054, 1071, 1072, 1073, 1081, 1082, 1083], "search": [129, 132, 133, 161, 186, 191, 192, 357, 369, 374, 376, 378, 1107, 1108, 1109, 1110], "s": [129, 132, 133, 172, 176, 177, 178, 184, 187, 188, 191, 192, 368, 369, 370, 372, 373, 375, 376, 378, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 431, 432, 451, 453, 461, 463, 464, 466, 471, 492, 493, 508, 527, 551, 558, 749, 752, 796, 805, 870, 877, 879, 882, 884, 890, 892, 898, 900, 921, 970, 972, 973, 975, 1071, 1077, 1083, 1131, 1152, 1155, 1160, 1163, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "case": [129, 132, 133, 187, 191, 192, 193, 194, 195, 369, 370, 371, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 406, 432, 451, 453, 508, 547, 554, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 617, 620, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 796, 840, 852, 853, 921, 947, 949, 1007, 1037, 1040, 1071, 1074, 1080, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163, 1194, 1205, 1206, 1207, 1210, 1214], "to_n": [129, 191, 192], "convers": [130, 131, 132, 133, 188, 191, 192, 388, 390, 394, 405, 406, 1173, 1179], "arraywithcr": 134, "creation": [135, 191, 192, 193, 194, 195, 331, 374, 384, 385, 389, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470], "data_typ": [136, 137, 332, 333, 374, 384, 471, 475, 476, 477, 478, 479, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507], "arraywithdatatyp": 136, "arraywithdevic": [138, 391], "arraywithelementwis": [140, 371, 382], "elementwis": [141, 191, 192, 337, 374, 379, 389, 394, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795], "arraywithgener": [142, 391], "arraywithgradi": [144, 391], "gradient": [145, 191, 192, 341, 374, 383, 392, 393, 405, 406, 508, 552, 872, 875, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 903, 904, 905, 906, 907, 1067, 1068, 1069, 1070, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "arraywithimag": [146, 391], "imag": [147, 343, 369, 372, 374, 389, 390, 392, 394, 405, 908, 909, 910, 911, 912, 914, 915, 1173], "arraywithlay": 148, "layer": [149, 186, 345, 374, 375, 389, 390, 393, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 1089, 1090, 1093, 1173, 1185, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "linear_algebra": [150, 151, 346, 347, 374, 391, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990], "arraywithlinearalgebra": 150, "arraywithloss": 152, "loss": [153, 349, 374, 379, 392, 393, 394, 992, 995, 997, 1000, 1002, 1005, 1173], "arraywithmanipul": 154, "manipul": [155, 186, 351, 374, 394, 405, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066], "arraywithnorm": 156, "norm": [157, 191, 192, 353, 374, 796, 808, 809, 811, 921, 947, 949, 985, 987, 1090, 1093, 1173, 1209, 1210, 1212], "arraywithrandom": [158, 391], "random": [159, 191, 192, 355, 374, 385, 394, 405, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1173], "arraywithsearch": 160, "arraywithset": 162, "arraywithsort": 164, "arraywithstatist": 166, "statist": [167, 196, 203, 363, 366, 367, 374, 384, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163], "arraywithutil": 168, "util": [169, 365, 374, 385, 508, 541, 1165, 1168, 1169, 1172], "backend_handl": [172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 1173], "contextmanag": [172, 173], "object": [172, 191, 192, 193, 194, 195, 391, 394, 432, 442, 444, 471, 491, 508, 553, 870, 1071, 1074, 1076, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1094, 1105, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1206, 1207], "__init__": [172, 173, 176, 177, 191, 192, 193, 194, 195, 196, 374, 380, 384, 389, 391, 392, 393, 394, 471, 472, 473, 474, 508, 509, 516, 517, 518, 519, 520, 521, 522, 523, 870, 871, 1094, 1095, 1099, 1173, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "choose_random_backend": 172, "exclud": [172, 174, 376, 389, 432, 433, 1094, 1100, 1102], "clear_backend_stack": 172, "current_backend": [172, 193, 194, 374, 379], "current": [172, 176, 177, 184, 188, 191, 192, 193, 194, 195, 369, 370, 371, 372, 379, 385, 389, 394, 405, 406, 471, 492, 493, 495, 507, 508, 517, 541, 542, 546, 548, 796, 830, 837, 841, 848, 850, 1071, 1072, 1081, 1082, 1173], "prioriti": [172, 176, 191, 192, 370, 386], "global_backend": [172, 176], "which": [172, 176, 177, 186, 187, 188, 191, 192, 193, 194, 195, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 405, 406, 417, 422, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 445, 446, 448, 449, 450, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 485, 489, 491, 494, 495, 507, 508, 517, 518, 528, 533, 534, 535, 536, 537, 538, 539, 540, 542, 546, 548, 550, 551, 552, 558, 749, 752, 796, 802, 814, 815, 817, 824, 825, 828, 830, 836, 840, 848, 849, 850, 852, 853, 868, 870, 877, 879, 881, 882, 884, 890, 892, 894, 896, 898, 900, 903, 905, 906, 908, 919, 921, 925, 927, 931, 933, 947, 949, 967, 969, 970, 982, 984, 985, 987, 991, 997, 1000, 1002, 1005, 1007, 1013, 1016, 1025, 1028, 1033, 1036, 1041, 1044, 1046, 1051, 1054, 1071, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1094, 1095, 1096, 1097, 1100, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1176, 1178, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "try": [172, 176, 185, 187, 188, 191, 192, 369, 370, 371, 372, 382, 383, 391, 406, 796, 867, 1173], "infer": [172, 176, 373, 380, 384, 385, 389, 394, 429, 430, 432, 433, 434, 436, 438, 440, 445, 446, 448, 454, 456, 458, 460, 468, 470, 558, 662, 796, 833, 858, 1007, 1037, 1040], "when": [172, 176, 186, 187, 191, 192, 193, 194, 195, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 406, 471, 477, 508, 558, 572, 650, 653, 745, 748, 796, 807, 840, 861, 991, 992, 995, 997, 1000, 1002, 1005, 1071, 1082, 1106, 1107, 1108, 1110, 1131, 1136, 1139, 1144, 1147, 1152, 1155, 1160, 1163, 1173, 1206, 1207], "global": [172, 176, 177, 178, 184, 191, 192, 193, 194, 195, 379, 380, 384, 385, 389, 471, 486, 487, 488, 508, 517, 518, 550, 551, 552, 796, 831, 832, 851, 854, 855, 856, 860, 861, 1089, 1090, 1093, 1208, 1209], "numpi": [172, 176, 177, 178, 186, 187, 191, 192, 370, 371, 378, 380, 384, 385, 386, 387, 389, 391, 394, 796, 865, 1131, 1132, 1135, 1159, 1173], "np": [172, 176, 382, 384, 385, 386, 387, 391, 392, 394, 1173], "py": [172, 176, 177, 370, 374, 375, 379, 380, 384, 385, 387, 389, 391, 393, 394, 1094, 1095, 1099], "noqa": [172, 176, 177, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 597, 600, 617, 620, 621, 624, 629, 686, 689, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1131, 1136, 1139], "set_backend": [172, 176, 177, 184, 379, 380, 381, 384, 471, 492, 493, 508, 549, 796, 858, 1173], "ha": [172, 176, 177, 186, 187, 188, 191, 192, 370, 375, 376, 379, 380, 381, 384, 385, 389, 391, 393, 394, 405, 406, 432, 451, 453, 508, 527, 558, 559, 562, 728, 731, 745, 748, 921, 930, 943, 946, 966, 967, 969, 970, 979, 981, 1007, 1021, 1024, 1047, 1050, 1111, 1112, 1113, 1117, 1119, 1131, 1140, 1143, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "jax": [172, 176, 177, 178, 187, 188, 370, 371, 380, 384, 385, 386, 387, 389, 391, 394, 406, 870, 886, 888, 1111, 1112, 1113, 1117, 1119, 1173], "get_backend": [172, 379, 380], "specifi": [172, 177, 191, 192, 373, 378, 379, 384, 385, 386, 387, 389, 392, 393, 394, 432, 433, 437, 445, 449, 450, 457, 461, 463, 464, 466, 467, 471, 477, 479, 508, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 542, 546, 548, 551, 552, 553, 558, 749, 752, 796, 802, 814, 824, 825, 828, 835, 868, 921, 931, 933, 947, 949, 976, 978, 979, 981, 982, 984, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1025, 1028, 1041, 1044, 1047, 1050, 1051, 1054, 1063, 1066, 1071, 1076, 1078, 1079, 1085, 1086, 1087, 1088, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1131, 1132, 1135, 1148, 1151, 1156, 1159, 1164, 1165, 1168, 1169, 1172], "isn": [172, 177, 370, 392, 406], "associ": [172, 177, 370, 379, 381, 406, 558, 572, 728, 731, 921, 942, 951, 953, 960, 962, 988, 990], "retriev": [172, 177, 370, 796, 802], "i": [172, 177, 370, 372, 373, 389, 392, 394, 432, 433, 451, 453, 558, 559, 562, 589, 592, 605, 608, 613, 616, 621, 624, 636, 654, 657, 658, 661, 670, 673, 726, 727, 733, 736, 745, 748, 749, 752, 796, 804, 805, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 925, 927, 942, 943, 946, 951, 953, 960, 962, 967, 969, 970, 979, 981, 985, 987, 1007, 1051, 1054, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1159, 1160, 1163], "e": [172, 177, 187, 188, 368, 370, 372, 373, 383, 392, 406, 431, 432, 451, 453, 471, 476, 499, 508, 524, 558, 559, 562, 589, 592, 605, 608, 613, 616, 621, 624, 636, 646, 654, 657, 658, 661, 670, 673, 690, 693, 698, 701, 726, 727, 733, 736, 745, 748, 749, 752, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 925, 927, 942, 943, 946, 951, 953, 960, 962, 967, 969, 970, 985, 987, 1007, 1051, 1054, 1094, 1099, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "one": [172, 177, 187, 188, 191, 192, 196, 205, 291, 294, 295, 299, 302, 309, 311, 336, 337, 338, 339, 350, 351, 354, 355, 369, 370, 376, 379, 382, 383, 384, 386, 387, 388, 391, 392, 394, 406, 432, 433, 451, 453, 471, 478, 480, 483, 508, 537, 538, 539, 540, 552, 559, 563, 576, 706, 796, 797, 799, 800, 801, 825, 829, 846, 849, 852, 853, 921, 943, 946, 947, 949, 957, 959, 963, 965, 982, 984, 985, 987, 1007, 1008, 1012, 1021, 1024, 1025, 1028, 1041, 1044, 1045, 1047, 1050, 1096, 1098, 1106, 1107, 1109, 1111, 1112, 1113, 1117, 1118, 1119, 1131, 1132, 1135, 1159, 1173], "torch": [172, 177, 184, 370, 374, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 429, 430, 471, 492, 493, 508, 549, 796, 858, 1007, 1021, 1024, 1173], "tensorflow": [172, 177, 184, 187, 188, 370, 371, 384, 385, 386, 387, 389, 394, 406, 1173], "mxnet": [172, 177, 187, 371, 384, 385, 386, 389, 394, 1173], "either": [172, 177, 184, 191, 192, 369, 370, 372, 375, 376, 379, 380, 383, 384, 385, 389, 391, 392, 406, 432, 442, 444, 558, 572, 575, 589, 592, 649, 674, 677, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 749, 752, 757, 760, 761, 764, 782, 796, 817, 842, 846, 847, 921, 943, 946, 1067, 1068, 1069, 1070, 1131, 1148, 1151, 1156, 1194, 1205, 1206, 1207], "doesn": [172, 177, 369, 372, 376, 384, 389, 406], "matter": [172, 177, 186, 376], "been": [172, 177, 370, 375, 379, 380, 383, 384, 385, 387, 389, 405, 406, 508, 527, 796, 818, 819, 820, 1094, 1095], "ivy_np": [172, 177], "ivy_jax": [172, 177], "subsequ": [172, 178, 369, 376, 378, 379, 382, 386, 387, 393], "call": [172, 178, 184, 187, 193, 194, 196, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 508, 552, 796, 851, 856, 867, 870, 881, 1071, 1072, 1077, 1081, 1082, 1194, 1205, 1206, 1207, 1210, 1214], "ndarrai": [172, 178, 382, 384, 385, 386, 387, 391, 432, 434, 436, 454, 456, 796, 865], "Or": [172, 178, 392], "jaxlib": [172, 178, 369, 384, 385, 387, 391], "xla_extens": [172, 178, 384, 385, 387, 391], "devicearrai": [172, 178, 391], "try_import_ivy_jax": 172, "warn": [172, 179, 180, 181, 182, 183], "try_import_ivy_mxnet": 172, "try_import_ivy_numpi": 172, "try_import_ivy_tf": 172, "try_import_ivy_torch": 172, "unset_backend": [172, 380], "unset": [172, 184, 380, 389, 391], "adjust": [172, 184, 1131, 1152, 1155, 1160, 1163], "previous": [172, 184, 369, 372, 378, 379, 389, 796, 807], "implement": [172, 184, 371, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 471, 477, 499, 508, 553, 558, 559, 562, 564, 567, 568, 571, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 646, 650, 653, 690, 693, 694, 697, 698, 701, 702, 705, 728, 731, 745, 748, 749, 752, 761, 764, 765, 768, 782, 787, 921, 934, 936, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1173], "wa": [172, 184, 187, 191, 192, 376, 389, 391, 796, 867, 1071, 1084, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "last": [172, 184, 188, 191, 192, 370, 376, 380, 406, 417, 422, 508, 527, 908, 918, 921, 925, 927, 931, 933, 947, 949, 979, 981, 982, 984, 991, 997, 1000, 1002, 1005, 1007, 1025, 1028, 1041, 1044, 1046, 1051, 1054, 1120, 1121, 1124, 1126, 1129, 1164, 1165, 1168, 1169, 1172, 1194, 1204], "henc": [172, 184, 1111, 1112, 1113, 1117, 1119], "here": [172, 184, 369, 370, 371, 374, 376, 383, 387, 389, 390, 391, 392, 393, 394, 405, 406], "tensor": [172, 184, 186, 191, 192, 374, 379, 380, 382, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 432, 449, 450, 471, 489, 558, 597, 600, 726, 727, 796, 849, 852, 853, 908, 916, 918, 921, 976, 978, 1007, 1021, 1024, 1037, 1040, 1046, 1094, 1095, 1106, 1109, 1173, 1194, 1202, 1204], "howev": [172, 184, 187, 369, 371, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 406], "befor": [172, 184, 191, 192, 369, 370, 371, 375, 378, 382, 384, 385, 386, 389, 392, 406, 508, 552, 558, 792, 795, 908, 919, 920, 1067, 1068, 1069, 1071, 1083, 1111, 1112, 1113, 1117, 1119, 1131, 1148, 1151, 1156], "becom": [172, 184, 186, 188, 370, 376, 383, 389, 394, 406, 1007, 1008, 1011], "swap": [172, 184, 1007, 1055, 1058], "python": [172, 184, 185, 186, 187, 369, 370, 372, 389, 391, 392, 406, 432, 433, 508, 547, 557, 558, 749, 752, 1173, 1179], "op": [172, 184, 374, 389, 406], "eagertensor": [172, 184], "def": [173, 371, 374, 376, 379, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 472, 473, 474, 509, 516, 519, 871, 1173, 1186, 1189, 1192], "ml": [185, 187, 188, 368, 388, 389, 390, 392, 393, 394, 405, 1173, 1179], "explos": [185, 187, 1173], "A": [185, 186, 187, 188, 191, 192, 193, 194, 195, 372, 373, 378, 379, 383, 384, 385, 389, 392, 406, 432, 441, 454, 456, 508, 517, 518, 552, 558, 741, 744, 796, 832, 864, 921, 930, 957, 959, 966, 967, 969, 970, 1007, 1046, 1051, 1054, 1071, 1072, 1074, 1076, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1131, 1132, 1135, 1159, 1164, 1165, 1168, 1169, 1172, 1173, 1216, 1217], "huge": [185, 187, 392, 1173], "number": [185, 186, 191, 192, 193, 194, 195, 196, 369, 376, 383, 385, 386, 389, 392, 394, 429, 430, 431, 432, 433, 434, 436, 441, 449, 450, 451, 453, 454, 456, 471, 478, 490, 491, 494, 496, 497, 499, 508, 544, 545, 546, 558, 572, 589, 592, 621, 624, 636, 654, 657, 658, 661, 726, 727, 728, 731, 745, 748, 749, 752, 753, 756, 757, 760, 792, 795, 796, 797, 800, 823, 832, 833, 848, 866, 869, 908, 919, 921, 930, 931, 933, 934, 936, 951, 953, 966, 970, 982, 984, 1007, 1008, 1011, 1017, 1020, 1029, 1032, 1033, 1036, 1041, 1044, 1046, 1051, 1054, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1094, 1095, 1104, 1106, 1109, 1111, 1112, 1113, 1117, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205], "tool": [185, 188, 370, 390, 394, 405, 406, 1173], "have": [185, 186, 187, 188, 191, 192, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 405, 406, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 491, 508, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 818, 819, 820, 822, 825, 828, 836, 849, 852, 853, 870, 886, 888, 903, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "explod": [185, 186, 1173], "onto": [185, 186, 508, 537, 538, 1071, 1077, 1083, 1173], "scene": [185, 186, 373, 388, 390, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1173], "b": [185, 188, 193, 194, 196, 197, 200, 202, 205, 222, 223, 224, 239, 241, 279, 291, 292, 294, 295, 298, 299, 302, 309, 311, 316, 317, 318, 323, 324, 327, 332, 333, 336, 337, 338, 339, 340, 341, 350, 351, 354, 355, 358, 359, 368, 373, 376, 379, 380, 383, 388, 389, 390, 392, 393, 394, 404, 471, 480, 482, 483, 484, 508, 530, 558, 559, 561, 562, 563, 572, 574, 576, 577, 580, 588, 593, 597, 600, 617, 620, 621, 623, 624, 629, 641, 654, 656, 658, 665, 666, 669, 686, 689, 706, 733, 736, 737, 740, 753, 756, 769, 772, 773, 776, 782, 783, 785, 787, 788, 790, 791, 796, 797, 799, 800, 801, 804, 805, 813, 814, 821, 824, 825, 827, 828, 829, 866, 870, 872, 874, 875, 876, 908, 911, 914, 915, 920, 921, 922, 924, 925, 927, 928, 931, 933, 957, 959, 967, 969, 976, 978, 988, 990, 991, 992, 995, 1007, 1008, 1010, 1011, 1012, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1043, 1044, 1045, 1051, 1054, 1055, 1058, 1089, 1090, 1093, 1094, 1096, 1098, 1099, 1100, 1102, 1106, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1136, 1139, 1159, 1164, 1165, 1168, 1173, 1179], "why": [185, 187, 370, 383, 386, 387, 391, 1173], "unifi": [185, 187, 191, 192, 382, 389, 406, 508, 537, 538, 539, 540, 552, 1173], "should": [185, 187, 191, 192, 193, 194, 195, 196, 203, 366, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 429, 430, 432, 451, 453, 461, 463, 464, 466, 471, 479, 508, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 646, 649, 650, 653, 654, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 807, 840, 849, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 920, 921, 922, 924, 925, 927, 928, 931, 933, 940, 942, 943, 946, 951, 953, 957, 959, 960, 962, 963, 965, 967, 969, 970, 976, 978, 979, 981, 982, 984, 985, 987, 1007, 1037, 1040, 1094, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1173], "them": [185, 186, 187, 188, 378, 380, 382, 383, 389, 391, 392, 393, 406, 1173], "c": [185, 187, 188, 196, 309, 354, 355, 368, 373, 376, 379, 383, 388, 389, 390, 392, 406, 558, 737, 740, 796, 804, 805, 813, 866, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 914, 1007, 1051, 1054, 1096, 1098, 1106, 1109, 1131, 1132, 1135, 1152, 1155, 1159, 1160, 1163, 1173, 1179], "standard": [185, 373, 374, 375, 377, 378, 382, 386, 387, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 491, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 686, 689, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1094, 1099, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1152, 1155, 1160, 1163, 1164, 1165, 1168, 1173, 1179, 1208, 1209], "re": [185, 186, 187, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 394, 406, 508, 552, 796, 818, 921, 976, 978, 1007, 1041, 1044, 1106, 1110, 1173], "collabor": [185, 186, 187, 1173], "consortium": [185, 187, 1173, 1179], "data": [185, 187, 191, 192, 193, 194, 195, 373, 374, 375, 379, 381, 383, 385, 386, 387, 391, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 475, 476, 477, 479, 480, 483, 485, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 503, 507, 508, 510, 511, 512, 513, 514, 515, 520, 521, 522, 524, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 804, 805, 842, 843, 845, 862, 870, 886, 888, 906, 908, 917, 921, 922, 924, 925, 927, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 967, 969, 970, 976, 978, 979, 981, 982, 984, 985, 987, 1007, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1094, 1105, 1106, 1107, 1108, 1109, 1120, 1121, 1124, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1179, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "api": [185, 186, 369, 370, 373, 375, 376, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 392, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 686, 689, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168, 1173, 1179], "open": [186, 187, 188, 368, 369, 372, 375, 405, 432, 433, 1094, 1096, 1097, 1100, 1102, 1173], "project": [186, 187, 188, 369, 370, 372, 374, 380, 391, 393, 405, 406, 1094, 1095, 1099], "grown": 186, "consider": [186, 376, 387], "recent": [186, 187, 369, 370], "year": [186, 188, 406, 1173], "especi": [186, 369], "deep": [186, 191, 192, 368, 370, 371, 388, 392, 1173], "learn": [186, 187, 369, 371, 373, 379, 388, 394, 405, 558, 662, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1067, 1068, 1069, 1070, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "can": [186, 187, 188, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 405, 406, 432, 434, 436, 454, 456, 471, 480, 483, 508, 550, 551, 552, 921, 940, 1007, 1037, 1040, 1094, 1096, 1097, 1173, 1179], "seen": [186, 187, 376, 391, 392], "rapidli": 186, "increas": [186, 508, 532, 536, 540, 1007, 1017, 1020, 1063, 1066, 1071, 1083], "github": [186, 370, 371, 375, 378], "repo": [186, 187, 188, 369, 370, 377, 389, 391, 392, 393, 394, 405, 1173, 1179], "term": [186, 370, 383, 908, 918, 1194, 1204], "time": [186, 187, 188, 369, 370, 371, 378, 379, 383, 384, 387, 389, 392, 394, 406, 870, 877, 879, 890, 892, 908, 918, 1007, 1059, 1062, 1067, 1068, 1069, 1070, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1194, 1205, 1206, 1207], "These": [186, 187, 188, 370, 375, 376, 378, 379, 383, 384, 386, 387, 389, 390, 392, 393, 394, 406, 921, 934, 936, 1173, 1179], "written": [186, 369, 374, 375, 382, 386, 387, 389, 391, 394, 406], "mani": [186, 187, 188, 191, 192, 369, 370, 371, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 406, 1007, 1046], "differ": [186, 187, 188, 191, 192, 193, 194, 195, 369, 370, 373, 374, 375, 376, 378, 379, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 406, 471, 491, 508, 529, 530, 533, 534, 558, 572, 728, 731, 777, 781, 908, 917, 1007, 1051, 1054, 1131, 1148, 1151, 1156, 1173], "while": [186, 187, 191, 192, 193, 194, 195, 369, 370, 376, 380, 386, 393, 394, 406, 558, 714, 717, 718, 721, 1111, 1112, 1131, 1140, 1143], "wonder": [186, 188, 391], "thing": [186, 187, 188, 369, 370, 371, 380, 391, 392], "research": [186, 405], "develop": [186, 187, 188, 368, 369, 370, 371, 405, 406, 1173], "consid": [186, 187, 191, 192, 374, 379, 390, 391, 392, 558, 714, 717, 718, 721, 1111, 1112, 1113, 1117, 1119], "speed": 186, "evolv": 186, "sharabl": 186, "code": [186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 292, 340, 341, 369, 370, 371, 372, 373, 375, 376, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 404, 406, 417, 419, 420, 421, 422, 423, 426, 428, 508, 530, 553, 558, 617, 620, 773, 776, 870, 872, 874, 875, 876, 908, 914, 915, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1132, 1135, 1159, 1173, 1179], "significantli": 186, "hinder": [186, 387], "librari": [186, 187, 188, 389, 394, 404, 406, 508, 553, 558, 650, 653, 714, 717, 718, 721, 921, 934, 936, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1173], "outdat": 186, "month": 186, "rigor": 186, "maintain": [186, 370, 1120, 1121, 1124, 1126, 1129], "against": [186, 191, 192, 378, 406, 471, 478, 921, 942, 943, 946, 947, 949, 951, 953, 960, 962, 1106, 1107], "newest": 186, "version": [186, 187, 188, 369, 375, 389, 391, 921, 934, 936, 1173], "For": [186, 187, 188, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 432, 433, 451, 453, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 870, 886, 888, 906, 921, 970, 979, 981, 1007, 1008, 1011, 1051, 1054, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1144, 1147, 1156, 1183, 1184], "softwar": [186, 187, 369, 370], "pipelin": [186, 382, 394], "where": [186, 187, 188, 191, 192, 193, 194, 368, 369, 370, 371, 372, 375, 379, 380, 382, 383, 384, 385, 386, 389, 392, 393, 394, 406, 432, 445, 446, 448, 451, 453, 558, 589, 592, 646, 698, 701, 728, 731, 745, 748, 796, 836, 840, 849, 921, 934, 936, 942, 951, 953, 960, 962, 963, 965, 970, 972, 973, 975, 979, 981, 982, 984, 1007, 1008, 1011, 1017, 1020, 1021, 1024, 1029, 1032, 1051, 1054, 1063, 1066, 1071, 1072, 1082, 1094, 1095, 1106, 1109, 1131, 1152, 1155, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "rapid": [186, 187, 369], "prototyp": 186, "vital": [186, 394], "signific": [186, 187, 406], "bottleneck": 186, "new": [186, 187, 188, 191, 192, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 383, 384, 386, 388, 391, 394, 405, 432, 437, 442, 444, 445, 446, 448, 457, 458, 460, 467, 468, 470, 471, 503, 558, 588, 593, 596, 698, 701, 741, 744, 786, 791, 796, 818, 819, 820, 823, 824, 825, 828, 852, 853, 854, 855, 860, 861, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1007, 1021, 1024, 1037, 1040, 1051, 1054, 1071, 1076, 1087, 1088, 1089, 1090, 1093, 1173, 1183, 1184, 1194, 1204, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215], "futur": [186, 188, 369, 370, 391, 406, 921, 934, 936], "avail": [186, 191, 192, 369, 370, 375, 385, 406, 508, 527, 543, 544, 545, 555, 796, 819], "specif": [186, 191, 192, 371, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 405, 406, 471, 499, 508, 550, 553, 558, 714, 717, 718, 721, 796, 818, 819, 820, 847, 921, 934, 936, 976, 978, 1007, 1051, 1054, 1067, 1068, 1069, 1070, 1094, 1095, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1173, 1176, 1178, 1179, 1206, 1207], "quickli": [186, 188, 369, 370, 392, 393], "obsolet": [186, 188], "user": [186, 187, 369, 370, 372, 373, 378, 380, 383, 386, 388, 406, 1194, 1205, 1206, 1207], "constantli": 186, "invent": 186, "wheel": 186, "desir": [186, 191, 192, 471, 477, 480, 483, 508, 553, 796, 836, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "provid": [186, 191, 192, 369, 370, 375, 376, 379, 382, 383, 384, 385, 386, 387, 389, 393, 405, 406, 429, 430, 432, 451, 453, 471, 486, 487, 488, 495, 499, 507, 508, 527, 796, 817, 849, 853, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 982, 984, 1007, 1025, 1028, 1051, 1054, 1106, 1107, 1131, 1152, 1155, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1210, 1211, 1212, 1213, 1214, 1215], "simultan": [186, 188], "modern": [186, 187], "simpl": [186, 369, 370, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 389, 391, 393, 394, 406, 796, 821], "scalabl": [186, 389], "must": [186, 188, 191, 192, 193, 194, 195, 369, 370, 371, 374, 375, 376, 379, 382, 383, 384, 385, 387, 389, 393, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 508, 537, 538, 539, 540, 552, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 818, 819, 820, 822, 825, 828, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1210, 1214], "determin": [186, 191, 192, 375, 379, 383, 384, 385, 471, 480, 483, 485, 490, 495, 496, 497, 507, 508, 543, 544, 545, 555, 558, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 625, 628, 629, 632, 633, 646, 649, 650, 653, 670, 673, 674, 677, 678, 681, 690, 693, 694, 697, 702, 705, 706, 709, 722, 725, 728, 731, 745, 748, 749, 752, 761, 764, 765, 768, 769, 772, 782, 786, 787, 791, 796, 797, 800, 804, 805, 835, 837, 841, 842, 843, 844, 845, 862, 869, 870, 886, 888, 908, 919, 921, 922, 924, 925, 927, 928, 930, 931, 933, 940, 942, 943, 946, 951, 953, 957, 959, 960, 962, 966, 967, 969, 979, 981, 982, 984, 985, 987, 1067, 1068, 1069, 1070, 1111, 1112, 1113, 1117, 1119, 1164, 1165, 1168, 1169, 1172], "exactli": [186, 188, 376, 383, 385, 1173, 1179], "common": [186, 191, 192, 371, 376, 379, 381, 383, 385, 406], "ground": [186, 378], "li": 186, "between": [186, 191, 192, 193, 194, 195, 376, 378, 379, 382, 383, 387, 388, 390, 391, 392, 394, 405, 432, 433, 471, 491, 558, 589, 592, 745, 748, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1021, 1024, 1051, 1054, 1071, 1077, 1094, 1096, 1097, 1111, 1112, 1113, 1117, 1119, 1173, 1210, 1212], "find": [186, 191, 192, 369, 370, 389, 392, 1111, 1112, 1113, 1117, 1119, 1173], "exist": [186, 187, 191, 192, 193, 194, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 386, 389, 406, 796, 817, 1210, 1214], "essenti": [186, 187, 371, 376, 379, 385], "order": [186, 191, 192, 193, 194, 195, 369, 370, 372, 375, 376, 380, 382, 383, 384, 385, 387, 391, 392, 394, 406, 558, 589, 592, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 934, 936, 947, 949, 970, 972, 973, 975, 985, 987, 1007, 1025, 1028, 1067, 1068, 1069, 1106, 1109, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1216, 1217], "design": [186, 187, 373, 386, 389, 391, 406], "univers": 186, "abstract": [186, 383, 393, 406, 508, 523, 1210, 1214], "In": [186, 188, 369, 370, 374, 375, 376, 379, 380, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 508, 547, 553, 554, 557, 558, 572, 728, 731, 749, 752, 796, 802, 840, 1007, 1037, 1040, 1094, 1100, 1102, 1173], "languag": [186, 188, 389], "first": [186, 187, 369, 370, 372, 376, 379, 382, 383, 387, 389, 391, 392, 394, 429, 430, 432, 449, 450, 471, 498, 503, 508, 527, 539, 558, 572, 575, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 636, 638, 641, 649, 657, 658, 661, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 777, 781, 796, 804, 870, 881, 921, 925, 927, 931, 933, 934, 936, 943, 946, 957, 959, 963, 965, 970, 976, 978, 982, 984, 1007, 1013, 1016, 1041, 1044, 1051, 1054, 1055, 1058, 1067, 1068, 1069, 1070, 1071, 1072, 1081, 1082, 1094, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1194, 1205, 1206, 1207, 1210, 1214], "see": [186, 368, 369, 370, 371, 377, 379, 383, 385, 387, 391, 392, 405, 406, 432, 433, 442, 444, 449, 450, 471, 479, 499, 558, 572, 575, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 649, 650, 653, 682, 685, 706, 709, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 777, 781, 921, 942, 951, 953, 960, 962, 967, 969, 982, 984, 985, 987, 1106, 1108, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "clear": [186, 187, 188, 370, 371, 376, 378, 384, 385, 389, 391, 508, 526], "front": [186, 388, 389, 392, 1173, 1179], "runner": 186, "look": [186, 369, 370, 372, 374, 376, 379, 380, 383, 384, 385, 387, 389, 391, 393, 394, 1173], "littl": [186, 391], "deeper": [186, 370, 373, 388, 508, 532, 536, 540, 1071, 1082, 1083], "follow": [186, 187, 191, 192, 369, 370, 371, 372, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 406, 471, 494, 508, 552, 558, 749, 752, 796, 838, 839, 840, 860, 861, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 919, 920, 921, 963, 965, 985, 987, 1071, 1077, 1083, 1111, 1112, 1113, 1117, 1119, 1173, 1194, 1204, 1210, 1214], "core": [186, 369, 371, 385, 389, 394, 508, 544, 1173], "principl": 186, "oper": [186, 191, 192, 193, 194, 196, 369, 371, 375, 376, 379, 382, 383, 385, 386, 392, 393, 432, 449, 450, 471, 499, 558, 572, 613, 616, 617, 620, 641, 665, 666, 669, 733, 736, 737, 740, 749, 752, 773, 776, 796, 806, 818, 819, 820, 862, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 909, 910, 911, 912, 913, 914, 915, 917], "expos": [186, 389, 393, 796, 812], "almost": [186, 370, 383, 390, 392], "ident": [186, 188, 191, 192, 379, 381, 383, 391, 392, 406, 508, 542, 1071, 1084, 1173], "uniqu": [186, 379, 383, 406, 508, 517, 518, 1067, 1068, 1069, 1070, 1071, 1077, 1111, 1112, 1113, 1117, 1118, 1119], "syntax": [186, 187], "There": [186, 369, 370, 376, 379, 382, 383, 384, 389, 392, 406], "onli": [186, 191, 192, 368, 369, 370, 374, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 404, 406, 508, 548, 558, 714, 717, 718, 721, 921, 943, 946, 963, 965, 1007, 1025, 1028, 1071, 1072, 1073, 1081, 1082, 1106, 1107, 1108, 1131, 1140, 1143, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "wai": [186, 187, 369, 380, 386, 391, 392, 393, 394, 406], "unsurprisingli": [186, 376], "fundament": [186, 383, 389], "consist": [186, 191, 192, 382, 386, 508, 540, 921, 934, 936, 1131, 1132, 1135, 1159, 1206, 1207], "each": [186, 187, 188, 191, 192, 193, 194, 195, 196, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 394, 405, 406, 417, 420, 421, 423, 426, 432, 451, 453, 471, 478, 508, 517, 518, 529, 530, 531, 532, 533, 534, 535, 539, 552, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 797, 800, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 909, 910, 911, 912, 913, 914, 915, 916, 921, 922, 924, 925, 927, 928, 934, 936, 942, 943, 946, 951, 953, 954, 956, 960, 962, 967, 969, 970, 1007, 1017, 1020, 1033, 1036, 1041, 1044, 1046, 1051, 1054, 1059, 1062, 1063, 1066, 1071, 1077, 1084, 1094, 1095, 1106, 1109, 1111, 1112, 1113, 1117, 1131, 1132, 1135, 1159, 1173, 1179, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "veri": [186, 187, 369, 370, 374, 376, 378, 379, 383, 385, 386, 387, 390, 392, 393, 394, 406, 1173], "similar": [186, 374, 383, 384, 385, 392, 406, 558, 749, 752, 908, 919, 1194, 1205], "convent": [186, 405, 921, 943, 946, 1131, 1132, 1135, 1159], "those": [186, 191, 192, 369, 370, 371, 383, 389, 394, 432, 433, 870, 906, 921, 963, 965, 970, 1007, 1008, 1011], "introduc": [186, 383, 392, 1007, 1041, 1044, 1111, 1112], "2006": 186, "therefor": [186, 370, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 393, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 621, 624, 654, 737, 740, 769, 772, 773, 776, 782, 796, 824, 908, 911, 920, 921, 931, 933, 1007, 1041, 1044, 1089, 1090, 1093, 1111, 1113, 1117, 1131, 1136, 1139, 1164, 1165, 1168], "present": [186, 191, 192, 370, 377, 383, 384, 385, 386, 387, 389], "itself": [186, 369, 370, 383, 386, 387, 393, 405, 406, 796, 802, 1071, 1083], "cut": 186, "cloth": 186, "adher": [186, 187, 375, 377, 389, 394], "semant": [186, 389, 394, 558, 749, 752], "up": [186, 187, 188, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 405, 406], "hopefulli": [186, 187, 188, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405], "paint": [186, 389], "pictur": [186, 389], "how": [186, 188, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 405, 406, 1173, 1179, 1194, 1205, 1206, 1207], "pleas": [186, 187, 188, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 1173], "discuss": [186, 187, 188, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 1173], "faq": [186, 187, 188, 389, 391, 392, 393, 394, 405], "reach": [186, 187, 188, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 508, 532, 536, 540, 1071, 1083], "discord": [186, 187, 188, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 405, 1173], "you": [186, 187, 188, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 405, 406, 1173, 1179], "question": [186, 187, 188, 369, 370, 376, 378, 389, 391, 392, 393, 394, 405, 406, 1173], "central": 187, "goal": [187, 371], "being": [187, 188, 191, 192, 369, 370, 376, 378, 381, 382, 383, 384, 385, 386, 387, 389, 392, 405, 406, 432, 433, 796, 851, 856, 1111, 1118, 1173], "would": [187, 369, 370, 372, 373, 375, 376, 378, 380, 381, 382, 383, 386, 387, 388, 389, 391, 393, 394, 406, 417, 422, 508, 553, 1173], "entir": [187, 188, 191, 192, 370, 376, 377, 378, 382, 383, 386, 391, 392, 393, 394, 406, 508, 552, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1203], "forgiven": 187, "rais": [187, 191, 192, 370, 386, 389, 391, 471, 479, 558, 646, 745, 748, 796, 806, 831, 840, 854, 861, 867, 921, 943, 946, 950, 982, 984, 1007, 1047, 1050, 1051, 1054, 1106, 1109, 1131, 1136, 1139, 1144, 1147, 1164, 1165, 1168, 1169, 1172, 1206, 1207, 1210, 1214], "eyebrow": 187, "somehow": 187, "pytorch": [187, 188, 371, 379, 384, 385, 386, 387, 389, 391, 394, 406, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "other": [187, 191, 192, 193, 194, 196, 369, 370, 374, 375, 376, 378, 379, 382, 383, 386, 389, 391, 393, 394, 404, 405, 406, 429, 430, 432, 433, 558, 650, 653, 796, 797, 800, 802, 870, 881, 1094, 1100, 1102, 1111, 1118, 1131, 1152, 1155, 1160, 1163, 1173], "strong": [187, 406], "industri": 187, "back": [187, 382, 388, 389, 391, 406, 1173, 1179, 1206, 1207, 1210, 1214], "momentum": 187, "won": [187, 188, 370, 394], "ad": [187, 196, 203, 366, 367, 369, 370, 371, 374, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 389, 393, 406, 796, 860, 861, 921, 934, 936, 1007, 1021, 1024, 1216, 1217], "just": [187, 188, 369, 370, 375, 376, 378, 379, 386, 389, 391, 392, 406, 1131, 1132, 1135, 1159, 1194, 1203], "make": [187, 188, 369, 370, 371, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 508], "problem": [187, 370, 382, 391], "even": [187, 188, 369, 370, 375, 379, 384, 385, 387, 391, 392, 393, 394, 406, 558, 745, 748, 753, 756], "wors": 187, "rather": [187, 191, 192, 374, 375, 378, 383, 394, 406, 432, 433, 508, 552, 796, 842, 843, 845, 870, 886, 888], "funni": 187, "comic": 187, "strip": 187, "easi": [187, 369, 370, 379, 383], "feasibl": 187, "space": [187, 432, 433, 449, 450, 796, 823], "unlik": [187, 376, 383, 508], "charger": 187, "charact": 187, "encod": [187, 392, 796, 823], "instant": [187, 1173], "messag": [187, 370, 389, 391, 1219, 1220], "much": [187, 370, 374, 382, 383, 386, 389, 391, 392], "doe": [187, 191, 192, 370, 372, 373, 374, 375, 376, 378, 379, 380, 384, 386, 387, 389, 391, 392, 406, 558, 617, 620, 796, 840, 1007, 1046], "mandat": [187, 378, 386], "adopt": [187, 370, 382], "continu": [187, 188, 377, 378, 406], "own": [187, 188, 369, 375, 389, 406], "signatur": [187, 374, 375, 376, 383, 384, 385, 386, 387, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "replac": [187, 191, 192, 370, 372, 376, 378, 381, 383, 384, 385, 389, 391, 394, 406, 796, 852, 853, 1007, 1008, 1011, 1094, 1095], "your": [187, 188, 368, 369, 371, 372, 374, 375, 392, 393, 406, 1173], "10": [187, 189, 190, 191, 192, 193, 194, 195, 196, 249, 305, 309, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 372, 376, 383, 389, 391, 392, 432, 445, 450, 508, 558, 597, 600, 601, 604, 629, 641, 665, 666, 669, 686, 689, 694, 697, 769, 772, 796, 814, 824, 851, 856, 870, 890, 891, 892, 893, 908, 914, 921, 928, 931, 933, 957, 959, 976, 978, 1007, 1025, 1028, 1033, 1036, 1046, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1106, 1109, 1111, 1112, 1131, 1132, 1135, 1136, 1139, 1159, 1210, 1212], "100": [187, 188, 196, 309, 354, 355, 392, 393, 394, 406, 558, 769, 772, 1096, 1098, 1173], "despit": [187, 383, 385], "distinct": [187, 375, 383, 386, 388, 1111, 1112, 1113, 1117, 1119, 1173], "still": [187, 191, 192, 375, 378, 384, 391, 393, 406, 1173], "believ": [187, 370], "share": [187, 191, 192, 376, 378, 379, 380, 383, 389, 471, 503], "bring": [187, 389, 390], "benefit": [187, 188, 369, 370, 382, 383, 386, 391, 392, 406], "unrel": [187, 370], "what": [187, 188, 370, 373, 375, 376, 381, 383, 387, 388, 389, 391, 392, 393, 394, 405, 406, 1173], "again": [187, 188, 370, 374, 376, 383, 386, 392, 394, 406], "contrari": 187, "bumpi": 187, "road": 187, "allud": [187, 392], "most": [187, 191, 192, 369, 370, 374, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 406, 921, 934, 936], "technolog": 187, "sector": [187, 558, 567, 568, 571, 581, 584, 588, 593, 596, 628, 632, 786, 791], "full": [187, 188, 193, 194, 370, 375, 384, 387, 389, 406, 432, 471, 491, 558, 641, 665, 666, 669, 686, 689, 908, 914, 921, 963, 965, 967, 969, 970, 1089, 1090, 1093], "success": 187, "reason": [187, 370, 374, 376, 379, 382, 383, 384, 386, 389, 391, 558, 749, 752], "build": [187, 368, 369, 379, 388, 390, 393, 394, 406, 1111, 1112, 1113, 1117, 1119, 1173, 1194, 1205, 1206, 1207], "custom": [187, 393], "comput": [187, 188, 191, 192, 369, 379, 383, 389, 392, 406, 508, 552, 558, 572, 597, 600, 609, 612, 617, 620, 638, 641, 642, 645, 662, 665, 666, 669, 682, 685, 686, 689, 710, 713, 714, 717, 718, 721, 722, 725, 728, 731, 733, 736, 737, 740, 796, 808, 809, 811, 814, 815, 870, 872, 875, 877, 879, 881, 882, 884, 890, 892, 894, 896, 898, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 921, 922, 924, 925, 927, 930, 934, 936, 937, 939, 940, 943, 946, 947, 949, 963, 965, 966, 967, 969, 970, 982, 984, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1071, 1077, 1111, 1112, 1113, 1117, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163], "thank": [187, 392], "interoper": 187, "compon": [187, 389], "bio": [187, 369], "hardwar": [187, 369], "initi": [187, 191, 192, 193, 194, 195, 370, 380, 384, 385, 508, 908, 918, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1210, 1214], "pcie": 187, "interfac": [187, 394, 406], "motherboard": 187, "raid": 187, "storag": [187, 392], "virtual": [187, 370, 372], "bluetooth": 187, "wireless": 187, "exchang": 187, "btx": 187, "factor": [187, 508, 517, 550, 551, 552, 870, 872, 875, 877, 879, 890, 892, 894, 896, 908, 909, 910, 911, 912, 913, 914, 915, 921, 922, 924, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1210, 1211, 1212, 1213], "sata": 187, "connect": [187, 369, 393, 394, 1194, 1204, 1205], "host": [187, 406], "bu": 187, "adapt": [187, 870, 894, 896, 1210, 1213], "html": [187, 372, 375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "enabl": [187, 191, 192, 193, 194, 195, 369, 370, 378, 379, 382, 383, 386, 388, 389, 390, 392, 394, 406], "anyon": [187, 368, 406], "websit": 187, "tcp": 187, "ip": 187, "node": [187, 191, 192, 383, 1071, 1072, 1081, 1082], "commun": [187, 368, 370, 371, 406, 1173, 1179], "network": [187, 379, 383, 389, 393, 405, 908, 917, 1173, 1180, 1194, 1206, 1207], "smtp": 187, "possibl": [187, 368, 369, 370, 371, 375, 376, 378, 383, 384, 386, 389, 392, 405, 406, 796, 846, 864, 1131, 1136, 1139, 1144, 1147], "send": 187, "gmail": 187, "outlook": 187, "pop": 187, "email": 187, "ieee": [187, 431, 471, 491, 558, 572, 650, 653, 728, 731, 749, 752, 769, 772], "754": [187, 431, 471, 491, 558, 572, 650, 653, 728, 731, 749, 752, 769, 772], "allow": [187, 389, 406, 432, 449, 450, 796, 846, 1206, 1207], "calcul": [187, 191, 192, 193, 194, 195, 375, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 633, 646, 649, 650, 653, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 728, 731, 745, 748, 761, 764, 765, 768, 769, 772, 777, 781, 782, 787, 991, 992, 995, 997, 1000, 1002, 1005, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "live": [187, 188], "depend": [187, 369, 370, 375, 381, 383, 384, 389, 406, 471, 477, 558, 559, 562, 564, 567, 568, 571, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 646, 650, 653, 690, 693, 694, 697, 698, 701, 702, 705, 745, 748, 761, 764, 765, 768, 782, 787, 921, 934, 936, 963, 965, 967, 969, 970, 1106, 1110, 1120, 1121, 1124, 1126, 1129], "did": [187, 371, 394], "aris": [187, 406], "until": [187, 370, 406, 1173], "substanti": [187, 370, 378, 382], "innov": 187, "growth": 187, "usag": [187, 389, 508, 552], "relev": [187, 369, 371, 376, 383, 384, 392, 1210, 1211, 1212, 1213, 1214, 1215], "area": [187, 386, 404, 558, 567, 568, 571, 581, 584, 588, 593, 596, 628, 632, 786, 791, 1173], "necess": 187, "parti": [187, 406], "could": [187, 188, 369, 370, 376, 378, 383, 384, 386, 389, 391, 392, 393, 1111, 1112, 1113, 1117, 1119], "easili": [187, 370, 392, 393, 394, 406, 1173], "engag": [187, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "regard": [187, 383, 508], "effect": [187, 375, 382, 383, 387, 406, 432, 451, 453, 870, 898, 900, 1131, 1152, 1155, 1160, 1163], "2015": 187, "sinc": [187, 369, 370, 406], "alongsid": 187, "machin": [187, 369, 379, 405, 471, 491, 494, 558, 662, 921, 942, 951, 953, 960, 962], "given": [187, 188, 191, 192, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 391, 393, 394, 405, 432, 433, 437, 449, 450, 508, 541, 547, 549, 550, 551, 552, 554, 557, 796, 814, 815, 825, 828, 852, 853, 868, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 909, 910, 911, 912, 913, 914, 915, 921, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1044, 1046, 1059, 1062, 1071, 1078, 1079, 1094, 1096, 1097, 1099, 1100, 1102, 1105, 1120, 1126, 1129, 1183, 1184], "frame": [187, 405], "matur": [187, 406], "state": [187, 375, 387, 388, 389, 390, 392, 405, 558, 728, 731, 908, 918, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "than": [187, 191, 192, 370, 374, 376, 378, 383, 386, 389, 392, 393, 394, 406, 432, 433, 471, 491, 508, 552, 558, 564, 567, 568, 571, 577, 580, 589, 592, 605, 608, 613, 616, 621, 624, 628, 632, 636, 654, 657, 658, 661, 690, 693, 694, 697, 702, 705, 726, 745, 748, 749, 752, 757, 760, 769, 772, 792, 795, 796, 842, 843, 845, 870, 886, 888, 921, 925, 927, 942, 943, 946, 951, 953, 960, 962, 985, 987, 1007, 1008, 1011, 1025, 1028, 1047, 1050, 1094, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1131, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "preced": [187, 393], "mention": [187, 369, 370, 376, 379, 386, 387], "aros": 187, "70": [187, 921, 957, 959, 1131, 1132, 1135, 1159], "80": [187, 921, 957, 959, 1131, 1132, 1135, 1159], "90": [187, 196, 309, 354, 355, 558, 617, 620, 753, 756, 921, 957, 959, 1096, 1098, 1131, 1132, 1135, 1159], "effort": [187, 368, 406], "stage": [187, 368, 370, 372, 373, 1173], "complet": [187, 191, 192, 370, 371, 382, 383, 391, 392, 921, 963, 965], "natur": [187, 376, 382, 383, 405, 558, 646, 690, 693, 698, 701, 921, 930, 966], "like": [187, 369, 370, 372, 373, 374, 375, 376, 378, 385, 386, 387, 388, 389, 391, 392, 393, 394, 405, 406, 870, 886, 888, 1094, 1100, 1102, 1173], "certainli": 187, "mission": [187, 1173], "creat": [187, 191, 192, 368, 369, 370, 372, 384, 385, 386, 389, 390, 393, 404, 405, 432, 433, 434, 436, 437, 438, 440, 441, 445, 446, 448, 449, 450, 454, 456, 457, 458, 460, 467, 468, 470, 508, 517, 518, 796, 824, 825, 828, 849, 852, 853, 864, 870, 905, 1094, 1095, 1096, 1097, 1100, 1102, 1173, 1179, 1183, 1184, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "At": [187, 371], "process": [187, 188, 368, 369, 370, 372, 379, 383, 389, 394, 508, 517, 518, 547, 557], "ourselv": 187, "lead": [187, 188, 191, 192, 193, 194, 195, 406, 921, 963, 965, 970], "quansight": 187, "compani": 187, "made": [187, 370, 371, 383, 386, 389, 391], "organ": [187, 374, 379, 382, 383], "panda": 187, "scipi": 187, "conda": [187, 369, 372], "dask": [187, 1111, 1112, 1113, 1117, 1119], "apach": 187, "onnx": 187, "scikit": 187, "jupyt": 187, "aw": 187, "cupi": 187, "net": [187, 188, 389, 394], "sympi": 187, "rai": [187, 558, 589, 592], "modin": 187, "spyder": 187, "includ": [187, 191, 192, 370, 371, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 405, 406, 432, 433, 434, 436, 454, 456, 796, 835, 869, 921, 985, 987, 1071, 1072, 1094, 1100, 1102, 1106, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1176, 1178, 1194, 1204, 1205, 1208, 1209], "member": [187, 370], "googl": [187, 1173], "octoml": 187, "einop": [187, 191, 192, 796, 818, 819, 820], "further": [187, 188, 370, 372, 376, 382, 388, 392, 393, 1173], "sponsor": 187, "lg": 187, "electron": 187, "microsoft": 187, "d": [187, 188, 196, 309, 354, 355, 368, 369, 373, 383, 392, 796, 805, 813, 908, 909, 910, 911, 912, 913, 914, 915, 921, 931, 933, 957, 959, 1096, 1098, 1173, 1179], "shaw": 187, "intel": 187, "togeth": [187, 191, 192, 382, 383, 393, 394, 406, 1216, 1217], "major": [187, 384, 385, 406, 1106, 1109], "involv": [187, 368, 372, 373, 384, 394, 471, 499, 558, 572, 728, 731, 1173, 1179], "anoth": [187, 191, 192, 369, 370, 379, 383, 384, 391, 394, 432, 442, 444, 471, 478, 480, 483], "promis": 187, "pursuit": 187, "unif": [187, 368, 391, 1173, 1179], "clearli": [187, 371, 376], "lot": [187, 188, 381, 391, 406], "thought": [187, 369, 370, 387], "care": [187, 370, 394], "attent": [187, 370, 382, 383, 908, 919, 920, 1194, 1205], "gone": [187, 388], "simplifi": [187, 389, 390, 391, 393], "compat": [187, 387, 406, 471, 479, 558, 572, 575, 589, 592, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 638, 641, 649, 657, 658, 661, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 777, 781, 921, 942, 951, 953, 960, 962, 967, 969, 976, 978, 982, 984, 985, 987, 1007, 1037, 1040, 1106, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "excit": [187, 368, 373, 1173], "complianc": 187, "hope": [187, 406], "due": [187, 369, 383, 386, 558, 728, 731], "suit": [187, 369, 373, 377, 378, 392, 405], "some": [187, 188, 191, 192, 369, 370, 371, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 405, 406, 558, 650, 653, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 906, 908, 916, 1173, 1194, 1202], "motiv": [187, 391], "great": [187, 188, 378, 389, 391], "convinc": 187, "celebr": 187, "encourag": [187, 405, 406, 1173, 1179], "foundat": 187, "point": [188, 370, 375, 376, 382, 386, 387, 389, 391, 392, 405, 431, 432, 433, 437, 441, 445, 457, 467, 471, 477, 491, 496, 499, 558, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 617, 620, 621, 624, 625, 628, 629, 632, 633, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 782, 786, 787, 791, 792, 795, 921, 922, 924, 928, 934, 936, 937, 939, 940, 942, 951, 953, 960, 962, 963, 965, 967, 969, 970, 985, 987, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "mai": [188, 369, 370, 383, 391, 393, 432, 433, 442, 444, 508, 553, 558, 638, 641, 665, 666, 669, 686, 689, 714, 717, 718, 721, 796, 817, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "ask": [188, 389, 391, 406, 1173], "perfectli": 188, "happi": [188, 369, 406], "abund": 188, "better": [188, 373, 388, 391, 392, 393], "ll": [188, 368, 370, 376, 383, 386, 392], "give": [188, 369, 370, 373, 375, 376, 380, 387, 391, 1007, 1037, 1040], "two": [188, 193, 194, 196, 375, 376, 378, 382, 383, 388, 392, 394, 432, 433, 441, 451, 453, 461, 463, 464, 466, 471, 498, 503, 558, 613, 616, 753, 756, 796, 804, 921, 922, 924, 928, 930, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 967, 969, 970, 972, 973, 975, 979, 981, 982, 984, 1007, 1055, 1058, 1111, 1112, 1113, 1117, 1118, 1119, 1173], "streamlin": 188, "workflow": [188, 370, 392, 404, 1173], "save": [188, 191, 192, 406, 796, 857, 1206, 1207], "week": [188, 370, 371, 1173], "let": [188, 375, 376, 383, 384, 385, 389, 391, 392, 393, 394, 1131, 1140, 1143, 1152, 1155, 1156, 1160, 1163, 1173], "sai": [188, 369, 381, 391], "deepmind": 188, "releas": [188, 369, 371, 1173], "awesom": 188, "paper": 188, "love": 188, "choic": [188, 369, 386, 392, 1131, 1152, 1155, 1160, 1163], "perceiverio": 188, "happen": [188, 369, 370, 392], "slew": 188, "rush": 188, "f": [188, 372, 373, 383, 389, 392, 394, 558, 662, 796, 837, 841], "g": [188, 373, 383, 406, 471, 476, 499, 508, 524, 1094, 1099, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1144, 1147, 1148, 1151, 1156], "inevit": 188, "deviat": [188, 1089, 1090, 1093, 1094, 1099, 1131, 1152, 1155, 1208, 1209], "origin": [188, 191, 192, 193, 194, 195, 380, 381, 384, 389, 391, 558, 589, 592, 921, 947, 949, 1007, 1037, 1040, 1041, 1044], "often": [188, 379, 406], "erron": 188, "train": [188, 379, 383, 385, 392, 393, 394, 404, 405, 406, 870, 872, 875, 877, 879, 890, 892, 1173], "poor": 188, "converg": 188, "perform": [188, 191, 192, 374, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 392, 406, 417, 422, 432, 449, 450, 508, 796, 814, 818, 819, 820, 838, 839, 840, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 916, 918, 921, 970, 1067, 1068, 1069, 1070, 1071, 1078, 1079, 1164, 1165, 1168, 1169, 1172], "issu": [188, 368, 371, 389, 391, 393, 406], "publish": [188, 406], "manag": [188, 368, 386, 406, 508], "get": [188, 191, 192, 368, 369, 371, 373, 379, 384, 385, 386, 389, 390, 391, 392, 393, 471, 489, 490, 491, 494, 508, 517, 518, 527, 528, 541, 542, 547, 551, 554, 557, 796, 803, 830, 831, 832, 851, 1173, 1179, 1194, 1203], "work": [188, 369, 370, 371, 373, 378, 383, 384, 385, 388, 389, 390, 391, 393, 394, 1173, 1179], "repositori": [188, 369, 370, 372, 377], "pull": [188, 368, 369, 372, 374, 406], "request": [188, 368, 374, 508, 544], "confus": [188, 386], "do": [188, 191, 192, 369, 370, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 406, 558, 749, 752, 796, 840, 870, 886, 888, 906, 1071, 1072, 1081, 1082, 1083], "expect": [188, 406, 796, 803, 1173], "codebas": [188, 368, 373, 374, 386, 388, 508, 550, 551, 1173], "total": [188, 191, 192, 193, 194, 195, 368, 370, 376, 378, 385, 392, 393, 406, 508, 554, 1106, 1109, 1131, 1152, 1155, 1160, 1163], "hour": 188, "spent": 188, "spin": 188, "off": [188, 388, 921, 931, 933, 979, 981], "test": [188, 369, 371, 373, 376, 406, 471, 496, 497, 558, 670, 673, 674, 677, 678, 681, 1164, 1165, 1168, 1169, 1172], "error": [188, 191, 192, 369, 378, 382, 385, 387, 391, 406, 417, 418, 508, 558, 642, 645, 1131, 1136, 1139, 1144, 1147, 1206, 1207, 1210, 1214], "address": [188, 370, 371, 382, 389], "sake": 188, "singl": [188, 191, 192, 370, 374, 376, 378, 379, 381, 383, 386, 387, 389, 392, 393, 394, 406, 508, 517, 518, 537, 538, 539, 540, 796, 866, 869, 1094, 1099, 1100, 1102, 1111, 1112], "multipl": [188, 191, 192, 196, 205, 294, 295, 299, 302, 309, 311, 336, 337, 338, 339, 350, 351, 354, 355, 370, 376, 379, 383, 406, 558, 576, 706, 728, 731, 796, 797, 799, 800, 801, 825, 829, 846, 921, 940, 1007, 1008, 1011, 1012, 1041, 1044, 1045, 1046, 1089, 1090, 1093, 1096, 1098, 1106, 1107, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1204], "line": [188, 369, 376, 382, 390, 391, 392, 393, 404, 1173, 1179], "directli": [188, 370, 374, 375, 379, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 405, 406, 1071, 1083], "graph": [188, 379, 383, 390, 406, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1111, 1112, 1113, 1117, 1119, 1206, 1207], "guarante": [188, 382, 406, 1111, 1112], "turn": [188, 376, 383], "take": [188, 368, 369, 370, 375, 376, 378, 383, 384, 385, 389, 391, 393, 394, 406, 558, 617, 620, 1173, 1179], "few": [188, 370, 371, 379, 383, 384, 385, 386, 390, 391, 392, 393, 404, 1173, 1179], "second": [188, 369, 376, 386, 391, 471, 498, 503, 508, 539, 558, 572, 575, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 636, 638, 641, 649, 657, 658, 661, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 777, 781, 796, 804, 851, 856, 870, 872, 875, 877, 879, 890, 892, 921, 925, 927, 931, 933, 934, 936, 943, 946, 957, 959, 963, 965, 970, 976, 978, 982, 984, 1007, 1051, 1054, 1055, 1058, 1067, 1069, 1111, 1112, 1113, 1117, 1210, 1211, 1212], "automat": [188, 369, 370, 379, 383, 387, 388, 389, 390, 393, 394, 1173], "everyon": [188, 368, 370, 406], "regardless": [188, 191, 192, 368, 391, 394, 429, 430], "wouldn": 188, "nice": [188, 378], "write": [188, 191, 192, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 386, 389, 391, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 508, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 815, 818, 819, 820, 822, 824, 825, 828, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1110, 1111, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "onc": [188, 369, 370, 383, 384, 385, 389, 392, 406, 508, 552, 921, 940, 970, 1094, 1095], "know": [188, 370, 1111, 1112, 1113, 1117, 1119], "among": [188, 191, 192, 378], "frantic": 188, "port": 188, "lucid": 188, "honk": 188, "improv": [188, 370, 379, 389], "understand": [188, 369, 370, 371, 372, 373, 375, 376, 377, 387, 388], "pattern": [188, 191, 192, 375, 384, 796, 818, 819, 820], "hasn": 188, "now": [188, 191, 192, 369, 372, 374, 381, 383, 384, 387, 391, 392, 394, 405, 406, 1194, 1205, 1206, 1207], "spend": 188, "torchvis": 188, "probabl": [188, 908, 916, 1094, 1095, 1194, 1202], "sonnet": 188, "about": [188, 369, 370, 377, 388, 389, 393, 394, 406, 471, 491, 494], "next": [188, 369, 370, 371, 372, 375, 376, 380, 381, 391, 392, 471, 491, 1173, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "everyth": [188, 370, 371, 390, 406], "zero": [188, 191, 192, 193, 194, 376, 382, 383, 384, 385, 387, 389, 392, 393, 417, 419, 420, 432, 437, 441, 451, 453, 461, 463, 464, 466, 468, 470, 471, 477, 558, 572, 577, 580, 605, 608, 629, 650, 653, 654, 714, 717, 718, 721, 726, 727, 728, 731, 733, 736, 737, 740, 745, 748, 749, 752, 753, 756, 769, 772, 773, 776, 782, 787, 796, 814, 849, 852, 853, 870, 872, 875, 877, 879, 890, 892, 894, 896, 908, 916, 921, 928, 942, 943, 946, 951, 953, 960, 962, 982, 984, 985, 987, 1007, 1021, 1024, 1025, 1028, 1033, 1036, 1041, 1044, 1063, 1066, 1089, 1090, 1093, 1094, 1096, 1097, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1210, 1211, 1212, 1213], "need": [188, 369, 370, 371, 372, 374, 375, 376, 377, 379, 382, 383, 386, 389, 391, 392, 405, 406, 796, 808, 809, 811, 1007, 1008, 1011, 1021, 1024], "said": 188, "high": [188, 191, 192, 196, 275, 309, 310, 354, 355, 371, 392, 1094, 1096, 1097, 1098, 1100, 1101, 1102, 1103], "level": [188, 368, 371, 379, 388, 389, 392, 393, 394, 406], "optim": [188, 386, 390, 392, 394, 405, 508, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1067, 1068, 1069, 1070, 1173, 1211, 1212, 1213, 1215], "trainer": [188, 404, 406, 1173], "statu": 188, "quo": 188, "kera": 188, "dopamin": 188, "ignit": 188, "catalyst": 188, "lightn": 188, "fastai": 188, "haiku": [188, 394], "flax": [188, 394, 406], "trax": [188, 394], "objax": [188, 394], "idea": [188, 405], "fulli": [188, 382, 383, 387, 389, 390, 391, 392, 393, 394, 406, 1194, 1204, 1205], "offer": [188, 393], "containerwithactiv": [189, 193, 194], "dict_in": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "queue": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 392, 508, 517, 518, 796, 851, 856], "queue_load_s": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "container_combine_method": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "list_join": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "queue_timeout": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 796], "print_limit": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "key_length_limit": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "print_ind": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "print_line_spac": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "ivyh": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "default_key_color": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "green": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 370, 1219, 1220], "keyword_color_dict": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "rebuild_child_contain": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "types_to_iteratively_nest": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "alphabetical_kei": [189, 190, 191, 192, 193, 194, 195, 196, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "containerbas": [189, 190, 191, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 383], "key_chain": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 423, 425, 427, 480, 482, 484, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 664, 665, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 728, 730, 732, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 797, 799, 801, 809, 810, 825, 827, 829, 877, 878, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 943, 945, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1071, 1084, 1090, 1092, 1096, 1098, 1100, 1101, 1103, 1113, 1114, 1116, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1158, 1159, 1160, 1162, 1165, 1167, 1169, 1171], "to_appli": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 423, 425, 427, 480, 482, 484, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 664, 665, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 728, 730, 732, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 797, 799, 801, 809, 810, 825, 827, 829, 877, 878, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 943, 945, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1071, 1084, 1090, 1092, 1100, 1101, 1103, 1113, 1114, 1116, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1158, 1159, 1160, 1162, 1165, 1167, 1169, 1171], "prune_unappli": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 423, 425, 427, 480, 482, 484, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 664, 665, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 728, 730, 732, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 797, 799, 801, 809, 810, 825, 827, 829, 877, 878, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 943, 945, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1071, 1084, 1090, 1092, 1100, 1101, 1103, 1113, 1114, 1116, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1158, 1159, 1160, 1162, 1165, 1167, 1169, 1171], "map_sequ": [189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 260, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 423, 425, 427, 480, 482, 484, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 593, 595, 601, 603, 621, 623, 627, 628, 631, 632, 635, 637, 642, 644, 648, 650, 652, 656, 657, 658, 670, 672, 674, 676, 678, 680, 690, 692, 694, 696, 698, 700, 702, 704, 706, 714, 716, 728, 730, 732, 733, 735, 741, 743, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 797, 799, 801, 809, 810, 825, 827, 829, 877, 878, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1055, 1057, 1059, 1061, 1063, 1065, 1090, 1092, 1100, 1101, 1103, 1113, 1114, 1116, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1158, 1159, 1160, 1162, 1165, 1167, 1169, 1171], "static": [189, 190, 191, 192, 196, 203, 291, 294, 295, 298, 299, 302, 309, 311, 312, 316, 317, 318, 332, 333, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 354, 355, 358, 359, 360, 361, 366, 367, 371, 375, 376, 379, 406, 423, 427, 429, 430, 480, 484, 559, 563, 576, 588, 593, 706, 783, 788, 791, 797, 801, 825, 829, 1008, 1012, 1041, 1045, 1096, 1098, 1113, 1114], "static_softplu": [189, 190, 196, 423], "__getitem__": [191, 192, 383], "queri": [191, 192, 383, 384, 391, 508, 541, 551, 908, 919, 920, 1194, 1205], "slice": [191, 192, 796, 824, 825, 828, 1071, 1080], "chain": [191, 192, 382, 383, 393, 394, 406, 1067, 1068, 1069, 1071, 1084, 1216, 1217], "element": [191, 192, 375, 389, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 445, 446, 448, 461, 463, 464, 466, 508, 531, 535, 539, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 804, 805, 808, 809, 811, 814, 815, 822, 836, 865, 866, 908, 916, 921, 925, 927, 934, 936, 943, 946, 963, 965, 970, 1007, 1008, 1011, 1025, 1028, 1033, 1036, 1041, 1044, 1046, 1047, 1050, 1094, 1095, 1106, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1202], "represent": [191, 192, 193, 194, 195, 405, 431, 471, 475, 476, 491, 494, 508, 524, 525, 558, 559, 562, 572, 597, 600, 609, 612, 617, 620, 722, 725, 728, 731, 796, 802, 859, 864], "dictionari": [191, 192, 193, 194, 195, 392, 406, 508, 551], "around": [191, 192, 193, 194, 195, 370, 379, 382, 387, 391, 406], "sequenc": [191, 192, 193, 194, 195, 376, 384, 405, 429, 430, 508, 517, 518, 796, 805, 846, 1007, 1046, 1051, 1054, 1094, 1096, 1097, 1131, 1136, 1139, 1194, 1203, 1208, 1209, 1216, 1217], "multiprocess": [191, 192, 193, 194, 195, 392, 406, 508, 517, 796], "asynchron": [191, 192, 193, 194, 195], "wait": [191, 192, 193, 194, 195, 370], "size": [191, 192, 193, 194, 195, 391, 392, 432, 449, 450, 508, 550, 551, 552, 796, 852, 858, 908, 920, 921, 931, 933, 947, 949, 957, 959, 963, 965, 970, 982, 984, 1007, 1021, 1024, 1041, 1044, 1046, 1047, 1050, 1094, 1095, 1099, 1100, 1102, 1106, 1107, 1109, 1164, 1165, 1168, 1169, 1172, 1194, 1195, 1196], "dimens": [191, 192, 193, 194, 195, 376, 389, 392, 417, 422, 432, 461, 463, 464, 466, 508, 539, 796, 818, 819, 820, 823, 833, 849, 868, 908, 909, 910, 911, 912, 913, 914, 915, 918, 921, 922, 924, 925, 927, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 982, 984, 985, 987, 991, 997, 1000, 1002, 1005, 1007, 1013, 1016, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1067, 1068, 1069, 1070, 1094, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1117, 1119, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204, 1205], "combin": [191, 192, 193, 194, 195, 370, 376, 378, 379, 382, 383, 394, 921, 925, 927], "arriv": [191, 192, 193, 194, 195], "timeout": [191, 192, 193, 194, 195, 508, 517, 518, 796, 851, 856], "limit": [191, 192, 193, 194, 195, 370, 376, 378, 389, 392, 394, 406, 471, 491, 494, 796, 808, 809, 811, 1007, 1008, 1011], "maximum": [191, 192, 193, 194, 195, 376, 389, 392, 394, 508, 532, 536, 540, 552, 558, 796, 808, 809, 811, 823, 870, 890, 892, 1007, 1008, 1011, 1071, 1083, 1106, 1107, 1131, 1136, 1139, 1144, 1147, 1173], "length": [191, 192, 193, 194, 195, 392, 432, 433, 451, 453, 921, 970, 972, 973, 975, 1007, 1037, 1040], "whitespac": [191, 192, 193, 194, 195], "indent": [191, 192, 193, 194, 195, 392], "extra": [191, 192, 193, 194, 195, 376, 381, 382, 389, 870, 881], "newlin": [191, 192, 193, 194, 195, 375], "handl": [191, 192, 193, 194, 195, 373, 378, 379, 381, 383, 384, 385, 386, 387, 393, 406, 429, 430, 508, 524, 525, 526, 527, 528, 542, 546, 547, 554, 557, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1210, 1211, 1212, 1213, 1214, 1215], "result": [191, 192, 193, 194, 195, 374, 375, 376, 378, 382, 383, 384, 386, 387, 392, 406, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 499, 508, 517, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 815, 818, 819, 820, 822, 824, 825, 828, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1071, 1084, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1119, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173], "color": [191, 192, 193, 194, 195, 1219, 1220], "termin": [191, 192, 193, 194, 195, 369, 370, 372, 383, 389, 392], "map": [191, 192, 193, 194, 195, 378, 379, 383, 387, 392, 405, 406, 508, 517, 1071, 1078, 1079, 1083, 1084, 1194, 1205], "termcolor": [191, 192, 193, 194, 195], "rebuild": [191, 192, 193, 194, 195], "found": [191, 192, 193, 194, 195, 369, 370, 375, 382, 383, 508, 542], "constructor": [191, 192, 193, 194, 195, 384, 385, 391, 796, 803, 1216, 1217], "param": [191, 192, 193, 194, 195, 196, 302, 338, 339, 389, 394, 796, 802, 824, 825, 828, 829], "kept": [191, 192, 193, 194, 195, 370, 386, 1067, 1068, 1069], "structur": [191, 192, 193, 194, 195, 372, 374, 379, 382, 383, 392, 393, 796, 812, 1071, 1084], "alphabet": [191, 192, 193, 194, 195], "preserv": [191, 192, 193, 194, 195, 394, 406, 870, 903, 1007, 1025, 1028], "__setitem__": [191, 192, 382, 383, 391], "val": [191, 192, 386, 391, 796, 838, 839, 840, 854, 855], "after": [191, 192, 376, 383, 384, 388, 471, 503, 558, 769, 772, 870, 877, 879, 881, 882, 884, 890, 892, 894, 896, 898, 900, 1089, 1090, 1093, 1210, 1211, 1212, 1213, 1214, 1215], "updat": [191, 192, 369, 370, 371, 372, 373, 376, 377, 381, 382, 383, 384, 387, 389, 391, 392, 394, 406, 508, 517, 796, 840, 852, 853, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 918, 1067, 1068, 1069, 1071, 1078, 1079, 1087, 1088, 1183, 1184, 1210, 1211, 1212, 1213, 1214, 1215], "all_fals": [191, 192], "assert_is_bool": [191, 192], "entri": [191, 192, 432, 449, 450, 1007, 1046, 1071, 1084], "boolean": [191, 192, 383, 432, 445, 471, 477, 495, 507, 508, 543, 555, 558, 597, 600, 601, 604, 609, 612, 617, 620, 710, 713, 714, 717, 718, 721, 722, 725, 796, 797, 800, 804, 805, 835, 836, 837, 841, 842, 843, 844, 845, 862, 869, 870, 886, 888, 1067, 1068, 1069, 1071, 1081, 1131, 1144, 1147], "evalu": [191, 192, 383, 558, 646, 650, 653, 690, 693, 694, 697, 698, 701, 702, 705, 733, 736, 757, 760, 773, 776, 1071, 1072, 1081, 1082, 1164, 1165, 1168, 1169, 1172], "assert": [191, 192, 391, 392, 796, 806], "skip": [191, 192, 372, 378, 1071, 1084], "prune": [191, 192, 1071, 1084, 1085, 1086], "all_key_chain": [191, 192], "include_empti": [191, 192], "all_tru": [191, 192, 383, 392], "arrays_as_list": [191, 192], "intermedi": [191, 192], "as_arrai": [191, 192, 796, 833, 858], "as_bool": [191, 192], "as_on": [191, 192], "ones": [191, 192, 193, 194, 378, 389, 391, 392, 432, 441, 458, 460, 558, 621, 624, 796, 849, 1173], "sub": [191, 192, 370, 371, 373, 378, 383, 391, 392, 393, 508, 533, 534, 537, 538, 539, 540, 921, 931, 933, 1007, 1046, 1067, 1068, 1069, 1070, 1173], "fill": [191, 192, 432, 437, 445, 446, 448, 457, 458, 460, 467, 468, 470, 1094, 1096, 1097], "as_random_uniform": [191, 192], "low": [191, 192, 196, 275, 309, 310, 354, 355, 389, 1094, 1096, 1097, 1098, 1100, 1101, 1102, 1103], "uniform": [191, 192, 393, 1094, 1095, 1096, 1097, 1100, 1102, 1185, 1187, 1188, 1191, 1192], "lower": [191, 192, 370, 376, 389, 406, 432, 441, 461, 463, 558, 726, 921, 922, 924, 1094, 1100, 1102], "boundari": [191, 192, 1094, 1100, 1102], "output": [191, 192, 369, 373, 374, 375, 376, 378, 379, 382, 383, 385, 386, 387, 389, 391, 393, 394, 406, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 508, 517, 518, 552, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 807, 808, 809, 811, 814, 815, 818, 819, 820, 822, 824, 825, 828, 836, 849, 852, 853, 870, 881, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1071, 1084, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1110, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205], "interv": [191, 192, 389, 394, 432, 433, 449, 450, 921, 982, 984, 1007, 1008, 1011, 1051, 1054, 1094, 1096, 1097, 1100, 1102, 1164, 1165, 1168, 1169, 1172], "as_vari": [191, 192], "as_zero": [191, 192], "assert_contains_sub_contain": [191, 192], "sub_cont": [191, 192], "partial": [191, 192, 370, 1206, 1207], "except": [191, 192, 375, 382, 386, 391, 406, 471, 479, 796, 806, 817, 840, 867, 921, 942, 960, 962, 1007, 1013, 1016, 1051, 1054, 1106, 1109, 1164, 1165, 1168, 1169, 1172], "diff": [191, 192, 383, 392], "screen": [191, 192, 392], "assert_contains_sub_structur": [191, 192], "check_shap": [191, 192], "assert_ident": [191, 192], "check_typ": [191, 192], "same_arrai": [191, 192, 392], "arrays_equ": [191, 192, 193, 194, 796], "datatyp": [191, 192, 432, 434, 436, 454, 456, 471, 485, 496, 497, 498], "exact": [191, 192, 370, 389, 1111, 1112], "assert_identical_structur": [191, 192], "at_key_chain": [191, 192], "ignore_key_error": [191, 192], "ignore_non": [191, 192], "at_kei": [191, 192], "ignor": [191, 192, 376, 406, 432, 451, 453, 1071, 1082, 1210, 1214], "substr": [191, 192], "access": [191, 192, 370, 372, 384], "clip_min": [191, 192], "clip_max": [191, 192], "minimum": [191, 192, 389, 394, 508, 558, 559, 562, 796, 831, 832, 854, 855, 860, 861, 1007, 1008, 1011, 1106, 1108, 1131, 1136, 1139, 1144, 1147, 1173], "config": [191, 192, 392, 1071, 1084], "right": [191, 192, 368, 369, 370, 373, 376, 392, 558, 605, 608, 613, 616, 921, 970], "duplic": [191, 192, 375, 380, 381, 391, 393], "compar": [191, 192, 378, 392, 796, 797, 800, 804, 805, 1111, 1112, 1113, 1117, 1119, 1120, 1121, 1124, 1126, 1129], "configur": [191, 192, 369, 370, 372, 384, 508, 551, 1071, 1084], "container_rightmost": [191, 192], "common_key_chain": [191, 192, 383], "across": [191, 192, 371, 376, 378, 379, 383, 384, 387, 508, 517, 518, 529, 530, 532, 533, 534, 535, 536, 540, 550, 551, 796, 804, 805, 1071, 1077, 1106, 1108], "properti": [191, 192, 376, 378, 379, 383, 391, 392, 393, 508, 520, 1206, 1207, 1210, 1211, 1212, 1213, 1215], "contains_sub_contain": [191, 192], "match": [191, 192, 383, 471, 477, 558, 749, 752, 796, 846], "contains_sub_structur": [191, 192], "create_if_abs": [191, 192], "inplac": [191, 192, 196, 201, 242, 249, 250, 270, 293, 303, 305, 306, 308, 340, 341, 373, 376, 381, 382, 387, 391, 393, 796, 806, 837, 840, 841, 862, 870, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 1183, 1184, 1210, 1211, 1212, 1213, 1214, 1215], "correspond": [191, 192, 193, 194, 196, 370, 375, 376, 377, 379, 382, 383, 384, 387, 471, 478, 558, 589, 592, 745, 748, 921, 925, 927, 934, 936, 967, 969, 1007, 1013, 1016, 1041, 1044, 1094, 1095, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1119, 1131, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "alreadi": [191, 192, 369, 370, 380, 383, 387, 391, 406, 508, 558, 621, 624, 654, 728, 731, 753, 756, 792, 795, 921, 957, 959, 1173], "noth": [191, 192, 370], "cutoff_at_depth": [191, 192], "depth_cutoff": [191, 192], "summari": [191, 192, 370, 471, 486, 487, 488, 500, 501, 502, 508, 521, 522, 796, 812, 816, 834, 870, 902, 907], "cutoff_at_height": [191, 192], "height_cutoff": [191, 192], "deep_copi": [191, 192, 392], "intern": [191, 192, 375, 382, 383, 385, 386, 508, 870, 906, 1071, 1072, 1081, 1082, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1216, 1217], "dev": [191, 192, 193, 195, 196, 210, 369, 379, 385, 389, 391, 393, 508, 517, 542], "belong": [191, 192, 393], "dev_clon": [191, 192, 508], "clone": [191, 192, 370, 372, 508, 529, 530, 531, 532], "dev_dist": [191, 192, 508], "distribut": [191, 192, 371, 385, 406, 508, 529, 533, 534, 535, 536, 908, 916, 991, 992, 995, 997, 1000, 1002, 1005, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1194, 1202, 1206, 1207], "along": [191, 192, 374, 386, 432, 449, 450, 508, 533, 534, 535, 536, 537, 538, 539, 540, 552, 796, 814, 815, 824, 868, 921, 947, 949, 979, 981, 982, 984, 985, 987, 991, 997, 1000, 1002, 1005, 1007, 1013, 1016, 1025, 1028, 1033, 1036, 1041, 1044, 1046, 1051, 1054, 1059, 1062, 1067, 1068, 1069, 1070, 1094, 1105, 1106, 1107, 1108, 1120, 1121, 1124, 1126, 1129, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "split": [191, 192, 368, 370, 388, 389, 406, 508, 517, 533, 534, 535, 536, 550, 551, 552, 796, 846, 1007, 1173], "dev_str": [191, 192], "diff_kei": [191, 192], "detect_key_diff": [191, 192], "detect_value_diff": [191, 192], "detect_shape_diff": [191, 192], "thei": [191, 192, 371, 373, 374, 376, 379, 381, 383, 384, 385, 386, 391, 392, 393, 394, 406, 471, 498, 1067, 1068, 1069, 1094, 1095, 1173, 1216, 1217], "treat": [191, 192, 390, 394, 429, 430], "detect": [191, 192, 387, 392, 393, 1071, 1072, 1082], "without": [191, 192, 370, 374, 379, 382, 383, 385, 387, 389, 391, 392, 393, 405, 406, 796, 851, 856, 1007, 1037, 1040, 1071, 1073, 1111, 1112, 1113, 1117, 1119], "flag": [191, 192, 370, 386, 391, 508, 527, 870, 886, 888], "container0": [191, 192], "einops_rearrang": [191, 192, 796], "axes_length": [191, 192, 796, 818, 819, 820], "rearrang": [191, 192, 796, 818, 820], "addit": [191, 192, 369, 370, 374, 375, 378, 383, 384, 391, 392, 394, 508, 553, 558, 572, 796, 818, 819, 820, 1089, 1090, 1093, 1194, 1204], "einops_reduc": [191, 192, 796], "reduct": [191, 192, 384, 391, 796, 819, 852, 853, 1164, 1165, 1168, 1169, 1172, 1173], "One": [191, 192, 384, 389, 391, 392, 796, 819, 1007, 1037, 1040, 1094, 1096, 1097], "callabl": [191, 192, 383, 389, 407, 408, 409, 410, 411, 412, 413, 414, 415, 429, 430, 471, 492, 493, 508, 552, 796, 802, 807, 817, 819, 1067, 1068, 1069, 1070, 1071, 1077, 1081, 1082, 1083], "einops_repeat": [191, 192, 796], "find_sub_contain": [191, 192], "sub_cont_to_find": [191, 192], "exsit": [191, 192], "find_sub_structur": [191, 192], "sub_struc_to_find": [191, 192], "flatten_key_chain": [191, 192, 392, 1206, 1207], "__": [191, 192, 376, 392], "above_height": [191, 192, 392], "below_depth": [191, 192, 392], "format_key_chain": [191, 192], "format_fn": [191, 192], "format": [191, 192, 372, 375, 384, 385, 389, 391, 392, 471, 489, 508, 528, 1131, 1132, 1135, 1159, 1173], "string": [191, 192, 380, 384, 385, 389, 392, 471, 475, 476, 489, 495, 507, 508, 524, 525, 526, 527, 541, 547, 553, 554, 557, 796, 816], "from_disk_as_hdf5": [191, 192, 392], "h5_obj_or_filepath": [191, 192], "slice_obj": [191, 192], "load": [191, 192, 406], "disk": [191, 192, 392], "h5py": [191, 192], "file": [191, 192, 369, 370, 372, 374, 375, 379, 380, 382, 383, 389, 392, 796, 857, 1206, 1207], "hdf5": [191, 192, 392, 1206, 1207], "filepath": [191, 192, 370], "h5": [191, 192], "from_disk_as_json": [191, 192, 392], "json_filepath": [191, 192], "json": [191, 192, 392], "were": [191, 192, 370, 374, 378, 383], "abl": [191, 192, 369, 370, 379, 384, 386, 391, 394], "dure": [191, 192, 379, 383, 384, 385, 386, 406, 429, 430, 508, 553, 796, 867, 870, 872, 875, 877, 879, 890, 892, 921, 943, 946, 1067, 1068, 1069, 1070, 1131, 1152, 1155, 1160, 1163, 1206, 1207, 1210, 1211, 1212, 1214], "from_disk_as_pickl": [191, 192, 392], "pickle_filepath": [191, 192], "pickl": [191, 192, 383, 392], "from_flat_list": [191, 192], "flat_list": [191, 192], "hierarchi": [191, 192, 392], "flat": [191, 192, 796, 852, 1007, 1033, 1036], "popul": [191, 192, 384, 385, 389, 1094, 1095, 1131, 1152, 1155, 1160, 1163], "from_numpi": [191, 192, 392], "gather": [191, 192, 796, 825, 828], "accord": [191, 192, 369, 372, 379, 384, 471, 480, 483, 491, 558, 572, 613, 616, 728, 731, 796, 824, 852, 853, 921, 982, 984, 1007, 1017, 1020, 1063, 1066, 1131, 1152, 1155, 1160, 1163], "h5_file_s": [191, 192], "content": [191, 192, 371, 372, 386, 389, 392], "batch": [191, 192, 379, 383, 392, 508, 550, 551, 796, 823, 908, 917, 921, 985, 987, 1067, 1068, 1069, 1070, 1089, 1090, 1093, 1208, 1209], "handle_inplac": [191, 192], "prime": [191, 192], "overwritten": [191, 192, 380, 382], "has_kei": [191, 192], "query_kei": [191, 192], "somewher": [191, 192], "has_key_chain": [191, 192], "has_nan": [191, 192, 796], "include_inf": [191, 192, 796, 835, 869], "leafwis": [191, 192], "nan": [191, 192, 374, 375, 431, 471, 477, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 670, 673, 678, 681, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 796, 835, 869, 908, 920, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "well": [191, 192, 378, 386, 393, 394, 405, 796, 835, 921, 967, 969], "inf": [191, 192, 431, 796, 835, 869, 921, 985, 987], "wise": [191, 192, 389, 394, 417, 418, 419, 420, 421, 422, 423, 426, 428, 558, 559, 562, 564, 572, 575, 577, 580, 585, 589, 592, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 638, 641, 642, 645, 649, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 737, 740, 745, 748, 749, 752, 777, 781, 796, 822, 1007, 1008, 1011], "identical_array_shap": [191, 192], "exclus": [191, 192, 196, 245, 304, 340, 341, 379, 383, 394, 432, 433, 796, 814, 842, 843, 845, 870, 886, 887, 888, 889, 1094, 1096, 1097], "identical_config": [191, 192], "identical_structur": [191, 192], "if_exist": [191, 192], "inplace_upd": [191, 192, 386, 796, 1183, 1184], "key_chains_contain": [191, 192], "sub_str": [191, 192], "join": [191, 192, 1007, 1013, 1016, 1051, 1054, 1173], "list_stack": [191, 192, 392], "dim": [191, 192, 384, 796, 849, 1194, 1205], "func": [191, 192, 383, 429, 430, 508, 552, 796, 807, 870, 881, 1071, 1084], "map_cont": [191, 192], "include_self": [191, 192], "possibi": [191, 192], "place": [191, 192, 370, 373, 374, 375, 376, 378, 379, 383, 385, 387, 394, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 508, 553, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 838, 839, 840, 908, 911, 920, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168, 1210, 1211, 1212, 1213, 1214, 1215], "matrix": [191, 192, 432, 451, 453, 461, 463, 464, 466, 796, 797, 800, 808, 908, 917, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 947, 949, 950, 951, 953, 954, 956, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 988, 990, 1194, 1204], "p": [191, 192, 196, 225, 338, 339, 369, 370, 432, 451, 453, 796, 808, 809, 810, 811, 908, 916, 921, 947, 949, 985, 987, 1194, 1202], "integ": [191, 192, 383, 384, 391, 432, 433, 445, 471, 494, 497, 499, 558, 559, 562, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 636, 654, 657, 658, 661, 722, 725, 745, 748, 749, 752, 753, 756, 792, 795, 921, 950, 982, 984, 985, 987, 1007, 1046, 1094, 1096, 1097, 1104, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "flatten": [191, 192, 796, 823, 921, 957, 959, 985, 987, 1007, 1033, 1036, 1041, 1044, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1119], "left": [191, 192, 369, 370, 376, 384, 558, 605, 608, 921, 934, 936, 947, 949, 970, 1106, 1107, 1173], "broadcast": [191, 192, 374, 375, 376, 383, 384, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 478, 479, 508, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 818, 819, 820, 822, 825, 828, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1108, 1110, 1111, 1119, 1120, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "correctli": [191, 192, 369, 378, 383, 384, 387, 393, 406, 921, 947, 949, 1106, 1107], "max_depth": [191, 192, 508, 512, 515, 522, 532, 536, 540, 796, 834, 1071, 1083], "multi_map": [191, 192, 383], "map_nest": [191, 192, 196, 213, 216, 218, 219, 220, 221, 226, 233, 240, 243, 244, 252, 253, 258, 259, 261, 262, 263, 269, 273, 276, 290, 336, 337, 346, 347, 350, 351, 575, 589, 591, 597, 599, 605, 607, 609, 611, 613, 615, 617, 619, 636, 640, 641, 649, 657, 658, 660, 664, 665, 666, 668, 682, 684, 686, 688, 706, 708, 710, 712, 718, 720, 722, 724, 737, 739, 745, 747, 749, 751, 943, 945, 1013, 1015, 1051, 1053], "leftmost": [191, 192, 1071, 1084], "multi_map_in_static_method": [191, 192, 383], "fn_name": [191, 192], "num_arrai": [191, 192], "overwrite_at_key_chain": [191, 192], "overwrit": [191, 192, 386, 389, 508, 552], "target_dict": [191, 192], "return_dict": [191, 192], "prune_empti": [191, 192], "keep_non": [191, 192], "empti": [191, 192, 193, 194, 382, 384, 385, 432, 433, 1131, 1152, 1155, 1156, 1164, 1165, 1168, 1169, 1172], "prune_key_chain": [191, 192], "key1": [191, 192, 393], "key2": [191, 192], "key3": [191, 192], "prune_key_from_key_chain": [191, 192], "absolut": [191, 192, 368, 558, 559, 562, 921, 930, 966], "certain": [191, 192, 369, 406, 432, 433, 449, 450], "decid": [191, 192, 369, 1071, 1082], "remov": [191, 192, 370, 371, 372, 375, 378, 379, 384, 386, 394, 921, 931, 933, 943, 946, 979, 981, 1007, 1047, 1050, 1067, 1068, 1069], "prune_kei": [191, 192], "prune_keys_from_key_chain": [191, 192], "remove_key_length_limit": [191, 192], "remove_print_limit": [191, 192], "reshape_lik": [191, 192], "leading_shap": [191, 192], "return_cont": [191, 192], "restructur": [191, 192], "keep_orig": [191, 192], "transpos": [191, 192, 391, 394, 508, 539, 908, 910, 912, 914, 921, 942, 954, 956, 960, 962, 1173, 1194, 1196, 1198, 1200], "old": [191, 192, 369, 386], "keep": [191, 192, 369, 370, 377, 383, 390, 392, 394, 796, 868], "start": [191, 192, 368, 369, 370, 371, 372, 373, 375, 376, 384, 388, 389, 391, 392, 393, 405, 406, 432, 433, 449, 450, 508, 523], "restructure_key_chain": [191, 192], "keychain_map": [191, 192], "set_at_key_chain": [191, 192], "set_at_kei": [191, 192], "set_framework": [191, 192, 389, 391, 392, 394], "set_ivy_backend": [191, 192], "ivy_backend": [191, 192], "attribut": [191, 192, 375, 383, 384, 390, 391, 392, 393, 471, 491, 492, 493, 494, 508, 548], "show": [191, 192, 369, 370, 376, 386, 405, 406, 1173], "show_sub_contain": [191, 192], "sub_cont_or_keychain": [191, 192], "shuffl": [191, 192, 1094, 1173], "seed_valu": [191, 192, 1094, 1104], "align": [191, 192, 369, 389, 391, 1173, 1179], "seed": [191, 192, 193, 194, 1094, 1173], "shuffle_h5_fil": [191, 192], "dataset": [191, 192, 392, 404, 1173], "size_ordered_arrai": [191, 192], "keychain": [191, 192], "smallest": [191, 192, 471, 491, 494, 558, 621, 624], "largest": [191, 192, 405, 471, 491, 494, 921, 970], "slice_kei": [191, 192], "key_slic": [191, 192], "all_depth": [191, 192], "slice_via_kei": [191, 192], "sort_by_kei": [191, 192], "num_or_size_split": [191, 192, 389, 1007, 1046], "with_remaind": [191, 192, 1007, 1046], "constitu": [191, 192, 394], "dimension": [191, 192, 432, 433, 441, 451, 453, 921, 925, 927, 928, 942, 943, 946, 951, 953, 957, 959, 960, 962, 982, 984, 985, 987, 1007, 1046, 1106, 1107, 1108, 1109, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "evenli": [191, 192, 432, 433, 449, 450, 1007, 1046], "store": [191, 192, 375, 380, 382, 383, 389, 391, 392, 393, 796, 823, 870, 906, 921, 979, 981, 1007, 1046, 1206, 1207], "stop_gradi": [191, 192, 193, 194, 196, 201, 242, 249, 250, 270, 293, 303, 305, 306, 308, 340, 341, 393, 508, 552, 870, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 1067, 1068, 1069, 1070, 1173, 1210, 1211, 1212, 1213, 1214, 1215], "preserve_typ": [191, 192, 870, 903], "stop": [191, 192, 389, 406, 432, 433, 449, 450, 508, 523, 552, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 903, 1067, 1068, 1069, 1070, 1210, 1211, 1212, 1213, 1214, 1215], "alwai": [191, 192, 370, 371, 374, 375, 379, 380, 382, 383, 386, 387, 389, 391, 406, 471, 477, 558, 572, 728, 731, 796, 840, 870, 886, 888, 903], "structural_diff": [191, 192], "to_devic": [191, 192, 508, 527], "move": [191, 192, 370, 374, 508, 553], "cuda": [191, 192, 389, 392, 406, 432, 449, 450, 508, 517, 524, 549, 796, 824, 825, 828, 849, 852, 853, 1094, 1095, 1096, 1097, 1100, 1102, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "cpu": [191, 192, 370, 385, 406, 432, 449, 450, 508, 527, 528, 530, 544, 547, 549, 553, 554, 556, 557, 796, 824, 825, 828, 849, 852, 853, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217], "target": [191, 192, 373, 388, 392, 393, 394, 508, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 1173], "to_dict": [191, 192], "to_disk_as_hdf5": [191, 192, 392], "starting_index": [191, 192], "max_batch_s": [191, 192], "read": [191, 192, 372, 1173], "r": [191, 192, 369, 796, 805, 868, 921, 963, 965, 988, 990], "w": [191, 192, 196, 293, 303, 305, 306, 308, 340, 341, 389, 392, 393, 796, 805, 870, 872, 875, 877, 879, 880, 882, 884, 885, 890, 892, 893, 894, 896, 897, 898, 900, 901, 908, 909, 910, 911, 912, 913, 914, 915], "later": [191, 192, 796, 807], "append": [191, 192, 372, 378, 389, 392, 558, 605, 608, 921, 931, 933, 943, 946], "to_disk_as_json": [191, 192, 392], "to_disk_as_pickl": [191, 192, 392], "to_flat_list": [191, 192], "to_iter": [191, 192, 383], "leaf_keys_onli": [191, 192], "to_iterator_kei": [191, 192], "to_iterator_valu": [191, 192], "to_json": [191, 192], "to_list": [191, 192, 796, 1173], "to_multi_dev": [191, 192], "multidevcontain": [191, 192, 193], "distributedarrai": [191, 192], "to_numpi": [191, 192, 392, 796, 1173], "update_backend": [191, 192], "to_raw": [191, 192], "raw": [191, 192, 375], "trim_kei": [191, 192], "max_length": [191, 192], "try_kc": [191, 192], "tri": [191, 192], "arbitrari": [191, 192, 378, 379, 383, 386, 387, 393, 406, 432, 451, 453, 471, 478, 499, 508, 537, 538, 540], "concatten": [191, 192, 508, 537, 538, 539, 540, 552], "unstack": [191, 192, 389, 392, 796, 1173], "dim_siz": [191, 192, 508], "update_config": [191, 192], "global_norm": [191, 192, 196, 225, 338, 339, 809, 810], "vector": [191, 192, 405, 432, 451, 453, 796, 809, 811, 908, 917, 921, 925, 927, 934, 936, 943, 946, 957, 959, 970, 972, 973, 975, 982, 984, 985, 987, 988, 990, 1194, 1204], "with_default_key_color": [191, 192], "with_entries_as_list": [191, 192], "with_ivy_backend": [191, 192], "with_key_length_limit": [191, 192, 392], "with_print_ind": [191, 192, 392], "with_print_limit": [191, 192, 392], "with_print_line_spac": [191, 192], "containerwithcr": [193, 194, 330], "containerwithdatatyp": [193, 194, 332], "containerwithdevic": [193, 194, 334], "containerwithelementwis": [193, 194, 336, 383], "containerwithgener": [193, 194, 338], "containerwithgradi": [193, 194, 340], "containerwithimag": [193, 194, 342], "containerwithlay": [193, 194, 344], "containerwithlinearalgebra": [193, 194, 346], "containerwithloss": [193, 194, 348], "containerwithmanipul": [193, 194, 350, 371], "containerwithnorm": [193, 194, 352], "containerwithrandom": [193, 194, 354], "containerwithsearch": [193, 194, 356], "containerwithset": [193, 194, 358], "containerwithsort": [193, 194, 360], "containerwithstatist": [193, 194, 362], "containerwithutil": [193, 194, 364], "__add__": [193, 194, 196, 375, 376, 382, 383, 387, 391], "special": [193, 194, 196, 371, 374, 375, 376, 382, 387, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 617, 620, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163], "__radd__": [193, 194, 196, 375, 376], "revers": [193, 194, 196, 371, 375, 376, 394, 406, 796, 817, 1007, 1025, 1028], "arang": [193, 194, 384, 432, 449, 450, 1131, 1132, 1135, 1159, 1173], "arg_info": [193, 194, 796], "arg_nam": [193, 194, 796], "argmax": [193, 194, 1106, 1173], "argmin": [193, 194, 1106, 1173], "array_equ": [193, 194, 796], "as_ivy_dev": [193, 194, 391, 508], "as_ivy_dtyp": [193, 194, 471], "as_native_dev": [193, 194, 508], "as_native_dtyp": [193, 194, 471], "assert_supports_inplac": [193, 194, 796], "astyp": [193, 194, 384, 386, 471], "broadcast_arrai": [193, 194, 471], "broadcast_to": [193, 194, 384, 471], "cache_fn": [193, 194, 379, 796], "clear_mem_on_dev": [193, 194, 508], "clip_matrix_norm": [193, 194, 796], "closest_valid_dtyp": [193, 194, 471], "container_typ": [193, 194, 796], "conv1d": [193, 194, 908, 1194], "conv1d_transpos": [193, 194, 908], "conv2d": [193, 194, 908, 1173, 1194], "conv2d_transpos": [193, 194, 908], "conv3d": [193, 194, 908, 1194], "conv3d_transpos": [193, 194, 908], "copy_arrai": [193, 194, 796], "cumprod": [193, 194, 394, 796], "cumsum": [193, 194, 796, 1173], "current_backend_str": [193, 194, 796], "default_devic": [193, 194, 385, 389, 508, 546, 549, 556], "default_dtyp": [193, 194, 379, 384, 471], "default_float_dtyp": [193, 194, 384, 471], "default_int_dtyp": [193, 194, 384, 471], "depthwise_conv2d": [193, 194, 908, 1173], "dev_clone_arrai": [193, 194, 508], "dev_clone_it": [193, 194, 508], "dev_clone_nest": [193, 194, 508], "dev_dist_arrai": [193, 194, 508], "dev_dist_it": [193, 194, 508], "dev_dist_nest": [193, 194, 508], "dev_unifi": [193, 194, 508], "dev_unify_arrai": [193, 194, 508], "dev_unify_it": [193, 194, 508], "dev_unify_nest": [193, 194, 508], "dev_util": [193, 194, 385, 508], "dropout": [193, 194, 392, 908, 1194, 1205], "dtype_bit": [193, 194, 471], "execute_with_gradi": [193, 194, 383, 392, 393, 394, 406, 870, 1173], "ey": [193, 194, 394, 432, 908, 911, 915], "finfo": [193, 194, 471], "floormod": [193, 194, 796, 1173], "fourier_encod": [193, 194, 796], "function_supported_dtyp": [193, 194, 471], "function_unsupported_dtyp": [193, 194, 471], "gelu": [193, 194, 417, 1180], "get_all_arrays_in_memori": [193, 194, 796], "get_all_ivy_arrays_on_dev": [193, 194, 385, 508], "get_min_bas": [193, 194, 796], "get_min_denomin": [193, 194, 796], "get_num_dim": [193, 194, 796, 1173], "get_referrers_recurs": [193, 194, 796], "gpu_is_avail": [193, 194, 508], "handle_nest": [193, 194, 379, 383, 407], "handle_out_argu": [193, 194, 381, 384, 385, 386, 387, 407], "iinfo": [193, 194, 471], "indices_wher": [193, 194, 796, 1173], "infer_devic": [193, 194, 384, 385, 387, 407], "infer_dtyp": [193, 194, 384, 385, 387, 407], "inplace_arrays_support": [193, 194, 796], "inplace_decr": [193, 194, 796], "inplace_incr": [193, 194, 796], "inplace_variables_support": [193, 194, 796], "inputs_to_native_arrai": [193, 194, 382, 407], "invalid_dtyp": [193, 194, 471], "is_float_dtyp": [193, 194, 471], "is_int_dtyp": [193, 194, 471, 796, 866], "is_ivy_contain": [193, 194, 796], "leaky_relu": [193, 194, 417, 1173], "linear": [193, 194, 375, 389, 392, 393, 394, 417, 418, 419, 420, 796, 823, 908, 916, 967, 969, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "linspac": [193, 194, 389, 432, 433, 1173], "logspac": [193, 194, 389, 432], "lstm_updat": [193, 194, 389, 908], "match_kwarg": [193, 194, 796], "matrix_pow": [193, 194, 921], "multi_head_attent": [193, 194, 383, 386, 908], "multinomi": [193, 194, 1094], "nonzero": [193, 194, 558, 572, 728, 731, 1106], "num_arrays_in_memori": [193, 194, 796], "num_cpu_cor": [193, 194, 385, 508], "num_gpu": [193, 194, 378, 385, 508], "num_ivy_arrays_on_dev": [193, 194, 508], "one_hot": [193, 194, 394, 796, 1173], "outputs_to_ivy_arrai": [193, 194, 382, 384, 385, 387, 407], "percent_used_mem_on_dev": [193, 194, 508], "print_all_arrays_in_memori": [193, 194, 796], "print_all_ivy_arrays_on_dev": [193, 194, 508], "promote_typ": [193, 194, 471], "randint": [193, 194, 196, 309, 354, 355, 1094, 1098, 1173], "random_norm": [193, 194, 908, 911, 914, 915, 921, 970, 1094, 1111, 1112], "result_typ": [193, 194, 384, 471], "scaled_dot_product_attent": [193, 194, 908], "scatter_flat": [193, 194, 796], "scatter_nd": [193, 194, 391, 796, 1173], "set_default_devic": [193, 194, 385, 508, 556], "set_default_dtyp": [193, 194, 379, 384, 471], "set_default_float_dtyp": [193, 194, 384, 471], "set_default_int_dtyp": [193, 194, 384, 471], "set_min_bas": [193, 194, 796], "set_min_denomin": [193, 194, 796], "set_queue_timeout": [193, 194, 796], "set_split_factor": [193, 194, 508], "set_tmp_dir": [193, 194, 796], "set_with_grad": [193, 194, 870], "shape_to_tupl": [193, 194, 384, 796], "sigmoid": [193, 194, 389, 392, 393, 417, 1173], "slogdet": [193, 194, 921, 930], "split_factor": [193, 194, 508, 517], "split_func_cal": [193, 194, 508], "stable_divid": [193, 194, 379, 796], "stable_pow": [193, 194, 796], "static_aco": [193, 194], "static_acosh": [193, 194], "static_al": [193, 194], "static_ani": [193, 194], "static_arang": [193, 194], "static_arg_info": [193, 194], "static_arg_nam": [193, 194], "static_argmax": [193, 194], "static_argmin": [193, 194], "static_arrai": [193, 194], "static_array_equ": [193, 194], "static_arrays_equ": [193, 194], "static_as_ivy_dev": [193, 194], "static_as_ivy_dtyp": [193, 194], "static_as_native_dev": [193, 194], "static_as_native_dtyp": [193, 194], "static_asarrai": [193, 194], "static_asin": [193, 194], "static_asinh": [193, 194], "static_assert_supports_inplac": [193, 194], "static_astyp": [193, 194], "static_atan": [193, 194], "static_atan2": [193, 194], "static_atanh": [193, 194], "static_bitwise_and": [193, 194], "static_bitwise_invert": [193, 194], "static_bitwise_left_shift": [193, 194], "static_bitwise_or": [193, 194], "static_bitwise_right_shift": [193, 194], "static_bitwise_xor": [193, 194], "static_broadcast_arrai": [193, 194], "static_broadcast_to": [193, 194], "static_cache_fn": [193, 194], "static_ceil": [193, 194], "static_choleski": [193, 194], "static_clear_mem_on_dev": [193, 194], "static_clip_matrix_norm": [193, 194], "static_clip_vector_norm": [193, 194], "static_closest_valid_dtyp": [193, 194], "static_concat": [193, 194], "static_constant_pad": [193, 194], "static_container_typ": [193, 194], "static_conv1d": [193, 194], "static_conv1d_transpos": [193, 194], "static_conv2d": [193, 194], "static_conv2d_transpos": [193, 194], "static_conv3d": [193, 194], "static_conv3d_transpos": [193, 194], "static_copy_arrai": [193, 194], "static_co": [193, 194], "static_cosh": [193, 194], "static_cross": [193, 194], "static_cumprod": [193, 194], "static_cumsum": [193, 194], "static_current_backend": [193, 194], "static_current_backend_str": [193, 194], "static_default": [193, 194], "static_default_devic": [193, 194], "static_default_dtyp": [193, 194], "static_default_float_dtyp": [193, 194], "static_default_int_dtyp": [193, 194], "static_depthwise_conv2d": [193, 194], "static_det": [193, 194], "static_dev": [193, 194], "static_dev_clon": [193, 194], "static_dev_clone_arrai": [193, 194], "static_dev_clone_it": [193, 194], "static_dev_clone_nest": [193, 194], "static_dev_dist": [193, 194], "static_dev_dist_arrai": [193, 194], "static_dev_dist_it": [193, 194], "static_dev_dist_nest": [193, 194], "static_dev_unifi": [193, 194], "static_dev_unify_arrai": [193, 194], "static_dev_unify_it": [193, 194], "static_dev_unify_nest": [193, 194], "static_dev_util": [193, 194], "static_diagon": [193, 194], "static_dropout": [193, 194], "static_dtyp": [193, 194], "static_dtype_bit": [193, 194], "static_eigh": [193, 194], "static_eigvalsh": [193, 194], "static_einops_rearrang": [193, 194], "static_einops_reduc": [193, 194], "static_einops_repeat": [193, 194], "static_einsum": [193, 194], "static_empti": [193, 194], "static_empty_lik": [193, 194], "static_equ": [193, 194], "static_erf": [193, 194], "static_execute_with_gradi": [193, 194], "static_exist": [193, 194], "static_exp": [193, 194], "static_expand_dim": [193, 194], "static_expm1": [193, 194], "static_ey": [193, 194], "static_finfo": [193, 194], "static_flip": [193, 194], "static_floor": [193, 194], "static_floor_divid": [193, 194], "static_floormod": [193, 194], "static_fourier_encod": [193, 194], "static_from_dlpack": [193, 194], "static_ful": [193, 194], "static_full_lik": [193, 194], "static_function_supported_dtyp": [193, 194], "static_function_unsupported_dtyp": [193, 194], "static_gath": [193, 194], "static_gelu": [193, 194], "static_get_all_arrays_in_memori": [193, 194], "static_get_all_ivy_arrays_on_dev": [193, 194], "static_get_min_bas": [193, 194], "static_get_min_denomin": [193, 194], "static_get_num_dim": [193, 194], "static_get_referrers_recurs": [193, 194], "static_gpu_is_avail": [193, 194], "static_great": [193, 194], "static_greater_equ": [193, 194], "static_handle_nest": [193, 194], "static_handle_out_argu": [193, 194], "static_has_nan": [193, 194], "static_iinfo": [193, 194], "static_indices_wher": [193, 194], "static_infer_devic": [193, 194], "static_infer_dtyp": [193, 194], "static_inplace_arrays_support": [193, 194], "static_inplace_decr": [193, 194], "static_inplace_incr": [193, 194], "static_inplace_upd": [193, 194], "static_inplace_variables_support": [193, 194], "static_inputs_to_native_arrai": [193, 194], "static_inv": [193, 194], "static_invalid_dtyp": [193, 194], "static_is_arrai": [193, 194], "static_is_float_dtyp": [193, 194], "static_is_int_dtyp": [193, 194], "static_is_ivy_arrai": [193, 194], "static_is_ivy_contain": [193, 194], "static_is_native_arrai": [193, 194], "static_isfinit": [193, 194], "static_isinf": [193, 194], "static_isnan": [193, 194], "static_layer_norm": [193, 194], "static_leaky_relu": [193, 194], "static_less": [193, 194], "static_less_equ": [193, 194], "static_linear": [193, 194], "static_linspac": [193, 194], "static_log": [193, 194], "static_log10": [193, 194], "static_log1p": [193, 194], "static_log2": [193, 194], "static_logaddexp": [193, 194], "static_logical_and": [193, 194], "static_logical_not": [193, 194], "static_logical_or": [193, 194], "static_logical_xor": [193, 194], "static_logspac": [193, 194], "static_lstm_upd": [193, 194], "static_match_kwarg": [193, 194], "static_matmul": [193, 194], "static_matrix_norm": [193, 194], "static_matrix_pow": [193, 194], "static_matrix_rank": [193, 194], "static_matrix_transpos": [193, 194], "static_max": [193, 194], "static_maximum": [193, 194], "static_mean": [193, 194], "static_meshgrid": [193, 194], "static_min": [193, 194], "static_minimum": [193, 194], "static_multi_head_attent": [193, 194], "static_multinomi": [193, 194], "static_multiprocess": [193, 194], "static_native_arrai": [193, 194], "static_neg": [193, 194], "static_nonzero": [193, 194], "static_not_equ": [193, 194], "static_num_arrays_in_memori": [193, 194], "static_num_cpu_cor": [193, 194], "static_num_gpu": [193, 194], "static_num_ivy_arrays_on_dev": [193, 194], "static_one_hot": [193, 194], "static_on": [193, 194], "static_ones_lik": [193, 194], "static_out": [193, 194], "static_outputs_to_ivy_arrai": [193, 194], "static_percent_used_mem_on_dev": [193, 194], "static_permute_dim": [193, 194], "static_pinv": [193, 194], "static_posit": [193, 194], "static_pow": [193, 194], "static_print_all_arrays_in_memori": [193, 194], "static_print_all_ivy_arrays_on_dev": [193, 194], "static_prod": [193, 194], "static_promote_typ": [193, 194], "static_qr": [193, 194], "static_queue_timeout": [193, 194], "static_random_norm": [193, 194], "static_relu": [193, 194], "static_remaind": [193, 194], "static_repeat": [193, 194], "static_reshap": [193, 194], "static_result_typ": [193, 194], "static_round": [193, 194], "static_scaled_dot_product_attent": [193, 194], "static_scatter_flat": [193, 194], "static_scatter_nd": [193, 194], "static_se": [193, 194], "static_set_default_devic": [193, 194], "static_set_default_dtyp": [193, 194], "static_set_default_float_dtyp": [193, 194], "static_set_default_int_dtyp": [193, 194], "static_set_min_bas": [193, 194], "static_set_min_denomin": [193, 194], "static_set_queue_timeout": [193, 194], "static_set_split_factor": [193, 194], "static_set_tmp_dir": [193, 194], "static_set_with_grad": [193, 194], "static_shap": [193, 194], "static_shape_to_tupl": [193, 194], "static_shuffl": [193, 194], "static_sigmoid": [193, 194], "static_sign": [193, 194], "static_sin": [193, 194], "static_sinh": [193, 194], "static_slogdet": [193, 194], "static_softmax": [193, 194], "static_solv": [193, 194], "static_split": [193, 194], "static_split_factor": [193, 194], "static_split_func_cal": [193, 194], "static_sqrt": [193, 194], "static_squar": [193, 194], "static_squeez": [193, 194], "static_stable_divid": [193, 194], "static_stable_pow": [193, 194], "static_stack": [193, 194], "static_std": [193, 194], "static_stop_gradi": [193, 194], "static_sum": [193, 194], "static_supports_inplac": [193, 194], "static_svd": [193, 194], "static_svdv": [193, 194], "static_swapax": [193, 194], "static_tensordot": [193, 194], "static_til": [193, 194], "static_tmp_dir": [193, 194], "static_to_devic": [193, 194], "static_to_list": [193, 194], "static_to_native_arrays_and_back": [193, 194], "static_to_numpi": [193, 194], "static_to_scalar": [193, 194], "static_total_mem_on_dev": [193, 194], "static_tpu_is_avail": [193, 194], "static_trac": [193, 194], "static_tril": [193, 194], "static_triu": [193, 194], "static_trunc": [193, 194], "static_try_else_non": [193, 194], "static_type_promote_arrai": [193, 194], "static_unique_al": [193, 194], "static_unique_invers": [193, 194], "static_unique_valu": [193, 194], "static_unset_default_devic": [193, 194], "static_unset_default_dtyp": [193, 194], "static_unset_default_float_dtyp": [193, 194], "static_unset_default_int_dtyp": [193, 194], "static_unset_with_grad": [193, 194], "static_unstack": [193, 194], "static_used_mem_on_dev": [193, 194], "static_valid_dtyp": [193, 194], "static_value_is_nan": [193, 194], "static_var": [193, 194], "static_vari": [193, 194], "static_variable_data": [193, 194], "static_vecdot": [193, 194], "static_vector_norm": [193, 194], "static_vector_to_skew_symmetric_matrix": [193, 194], "static_wher": [193, 194], "static_with_grad": [193, 194], "static_zero_pad": [193, 194], "static_zero": [193, 194], "static_zeros_lik": [193, 194], "supports_inplac": [193, 194, 796], "tmp_dir": [193, 194, 796], "to_native_arrays_and_back": [193, 194, 381, 387, 407], "to_scalar": [193, 194, 796], "total_mem_on_dev": [193, 194, 385, 508], "tpu_is_avail": [193, 194, 508], "try_else_non": [193, 194, 796], "type_promote_arrai": [193, 194, 471], "unique_al": [193, 194, 1111], "unique_invers": [193, 194, 1111], "unique_valu": [193, 194, 1111], "unset_default_devic": [193, 194, 508], "unset_default_dtyp": [193, 194, 471], "unset_default_float_dtyp": [193, 194, 471], "unset_default_int_dtyp": [193, 194, 471], "unset_with_grad": [193, 194, 870], "used_mem_on_dev": [193, 194, 508], "valid_dtyp": [193, 194, 471], "value_is_nan": [193, 194, 796], "variable_data": [193, 194, 870], "with_grad": [193, 194, 870, 902], "at_dev": [193, 195, 196, 508, 521, 522], "container_method": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 423, 425, 427, 480, 482, 484, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 577, 579, 581, 583, 587, 588, 589, 591, 593, 595, 597, 599, 601, 603, 605, 607, 609, 611, 613, 615, 617, 619, 621, 623, 627, 628, 631, 632, 635, 636, 637, 640, 641, 642, 644, 648, 649, 650, 652, 656, 657, 658, 660, 664, 665, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 728, 730, 732, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 780, 783, 785, 786, 788, 790, 791, 792, 794, 797, 799, 801, 809, 810, 825, 827, 829, 872, 874, 876, 877, 878, 880, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 943, 945, 992, 994, 996, 997, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1090, 1092, 1096, 1098, 1100, 1101, 1103, 1113, 1114, 1116, 1121, 1123, 1125, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 1158, 1159, 1160, 1162, 1165, 1167, 1169, 1171], "adam_upd": [196, 340, 341, 393, 870], "lr": [196, 201, 242, 249, 250, 270, 293, 303, 305, 306, 308, 340, 341, 392, 393, 870, 877, 878, 879, 880, 882, 883, 884, 885, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 1210, 1211, 1212, 1213, 1214, 1215], "mw_tm1": [196, 201, 249, 293, 305, 340, 341, 870, 877, 878, 879, 880, 890, 891, 892, 893], "vw_tm1": [196, 201, 249, 293, 305, 340, 341, 870, 877, 878, 879, 880, 890, 891, 892, 893], "add_ivy_container_instance_method": [196, 366], "containerexampl": [196, 203, 366, 367], "static_all_equ": [196, 205, 338, 339, 797, 799], "int32": [196, 222, 298, 332, 333, 384, 471, 480, 482, 483, 484, 492, 796, 865, 1007, 1021, 1024, 1131, 1148, 1151, 1156], "int64": [196, 222, 298, 332, 333, 384, 471, 480, 482, 483, 484, 492, 558, 613, 616, 1106, 1107, 1108, 1131, 1148, 1151, 1156], "clip_vector_norm": [196, 338, 339, 796], "max_norm": [196, 225, 338, 339, 796, 808, 809, 810, 811], "gradient_descent_upd": [196, 340, 341, 870, 1067, 1068, 1069, 1070, 1173], "is_vari": [196, 340, 341, 386, 870], "lamb_upd": [196, 340, 341, 870], "max_trust_ratio": [196, 249, 305, 340, 341, 870, 890, 891, 892, 893, 1210, 1212], "decay_lambda": [196, 249, 250, 305, 306, 340, 341, 870, 890, 891, 892, 893, 894, 895, 896, 897, 1210, 1212, 1213], "lars_upd": [196, 340, 341, 870], "optimizer_upd": [196, 340, 341, 870], "effective_grad": [196, 270, 308, 340, 341, 870, 898, 899, 900, 901], "random_uniform": [196, 354, 355, 385, 393, 1094, 1173], "static_ab": [196, 336, 337, 559], "static_adam_step": [196, 340, 341, 872], "87": [196, 292, 309, 340, 341, 354, 355, 870, 872, 875, 876, 1096, 1098], "976": [196, 292, 340, 341, 558, 787, 870, 872, 875, 876], "static_adam_upd": [196, 340, 341, 877], "static_add": [196, 336, 337, 375, 376, 383, 706], "static_argsort": [196, 360, 361, 1121], "static_binary_cross_entropi": [196, 348, 349, 992], "static_can_cast": [196, 332, 333, 480], "from_": [196, 298, 332, 333, 471, 480, 483, 484], "static_clip": [196, 350, 351, 1008], "static_rol": [196, 299, 350, 351, 376, 383, 1008, 1012, 1041], "static_cross_entropi": [196, 348, 349, 997], "static_divid": [196, 336, 337, 383, 657, 658], "static_gather_nd": [196, 338, 339, 825], "static_gradient_descent_upd": [196, 340, 341, 882], "static_is_vari": [196, 340, 341, 886], "static_lamb_upd": [196, 340, 341, 890], "static_lars_upd": [196, 340, 341, 894], "static_multipli": [196, 336, 337, 383, 728], "static_optimizer_upd": [196, 340, 341, 898], "static_randint": [196, 354, 355, 1096], "20": [196, 309, 354, 355, 391, 558, 617, 620, 646, 753, 756, 769, 772, 921, 931, 933, 957, 959, 976, 978, 1094, 1096, 1097, 1098, 1106, 1109, 1110, 1131, 1132, 1135, 1159], "15": [196, 309, 354, 355, 369, 376, 558, 597, 600, 753, 756, 908, 911, 921, 931, 933, 957, 959, 976, 978, 1007, 1041, 1044, 1089, 1090, 1093, 1094, 1096, 1097, 1098, 1106, 1109, 1111, 1112, 1131, 1132, 1135, 1159], "16": [196, 309, 316, 323, 336, 337, 354, 355, 370, 376, 392, 558, 588, 593, 782, 783, 785, 791, 908, 914, 921, 931, 933, 957, 959, 1096, 1098, 1106, 1110, 1131, 1132, 1135, 1159], "12": [196, 309, 354, 355, 369, 376, 383, 558, 597, 600, 617, 620, 629, 753, 756, 796, 814, 832, 870, 872, 875, 921, 931, 933, 957, 959, 976, 978, 1007, 1025, 1028, 1033, 1036, 1041, 1044, 1089, 1090, 1093, 1094, 1096, 1097, 1098, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159], "40": [196, 309, 354, 355, 558, 629, 769, 772, 921, 957, 959, 1096, 1098, 1131, 1132, 1135, 1159], "gpu": [196, 309, 354, 355, 370, 385, 391, 406, 508, 527, 530, 543, 545, 549, 551, 556, 1096, 1098], "62": [196, 309, 354, 355, 1096, 1098], "52": [196, 309, 354, 355, 870, 872, 875, 921, 957, 959, 1096, 1098, 1111, 1112, 1131, 1132, 1135, 1159], "95": [196, 309, 354, 355, 870, 872, 875, 1096, 1098], "37": [196, 309, 354, 355, 558, 782, 1089, 1090, 1093, 1096, 1098], "42": [196, 309, 354, 355, 394, 417, 423, 426, 870, 872, 875, 921, 957, 959, 1094, 1096, 1098, 1104, 1131, 1132, 1135, 1159], "14": [196, 309, 354, 355, 372, 376, 383, 558, 617, 620, 870, 872, 875, 908, 920, 921, 931, 933, 957, 959, 1096, 1098, 1111, 1112, 1131, 1132, 1135, 1159], "13": [196, 309, 354, 355, 376, 383, 558, 597, 600, 617, 620, 629, 769, 772, 796, 814, 870, 872, 875, 908, 920, 921, 931, 933, 957, 959, 1089, 1090, 1093, 1096, 1098, 1106, 1110, 1111, 1112, 1131, 1132, 1135, 1159], "static_random_uniform": [196, 354, 355, 1100], "static_sort": [196, 360, 361, 1126], "static_sparse_cross_entropi": [196, 348, 349, 1002], "static_subtract": [196, 336, 337, 383, 777], "static_tan": [196, 336, 337, 376, 383, 588, 593, 791], "143": [196, 316, 323, 336, 337, 376, 558, 588, 593, 782, 783, 785, 791], "38": [196, 316, 323, 336, 337, 376, 558, 588, 593, 782, 783, 785, 791], "static_tanh": [196, 336, 337, 593], "76": [196, 317, 336, 337, 558, 593, 629, 788, 870, 872, 875, 921, 976, 978, 1131, 1132, 1135, 1159], "96": [196, 317, 336, 337, 558, 593, 782, 788, 870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "995": [196, 317, 324, 336, 337, 558, 588, 593, 787, 788, 790], "9999": [196, 317, 336, 337, 593, 788], "static_unique_count": [196, 358, 359, 1113], "classivi": [196, 318, 327, 358, 359, 1007, 1046, 1111, 1113, 1114, 1116, 1117], "strongli": [368, 369, 1173, 1179], "welcom": [368, 369, 370, 1173, 1179], "skill": 368, "vetern": 368, "beginn": 368, "aspect": [368, 392, 1173], "guid": [368, 369, 370, 378, 1173], "through": [368, 370, 371, 373, 376, 379, 380, 383, 388, 389, 391, 392, 393, 394, 405, 558, 589, 592], "journei": [368, 1173, 1179], "inclusvi": 368, "big": [368, 406], "team": [368, 369, 370], "board": 368, "contributor": [368, 369, 370, 388, 1173], "section": [368, 370, 371, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 1111, 1112, 1113, 1117, 1119], "below": [368, 369, 371, 372, 373, 374, 376, 379, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 405, 432, 461, 463, 464, 466, 558, 597, 600, 617, 620, 629, 753, 756, 787, 921, 928, 931, 933, 979, 981, 1007, 1021, 1024, 1025, 1028, 1111, 1112, 1120, 1121, 1124, 1173], "best": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 796, 846], "go": [368, 369, 370, 371, 373, 374, 376, 383, 388, 392, 406, 1071, 1082], "finish": [368, 369, 373, 1173], "dive": [368, 370, 371, 388, 391, 392, 406, 1173], "environ": [368, 370, 372, 405], "basic": [368, 371, 372], "fork": [368, 369, 796, 847], "doc": [368, 371, 375, 387, 389, 392, 393, 1173], "document": [368, 370, 390, 392, 394], "local": [368, 369, 372, 379], "task": [368, 370, 405, 1067, 1068, 1069, 1070, 1173], "help": [368, 369, 376, 380, 382, 383, 391, 392, 393, 404, 796, 802, 1131, 1156, 1173], "video": [368, 370, 375, 376, 387], "realli": [369, 383, 406], "contribut": [369, 370, 371, 389, 1179], "toward": [369, 389, 1007, 1041, 1044, 1173, 1179], "page": [369, 370, 390, 394, 404, 1173, 1179], "explain": [369, 370, 371, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 1173, 1179], "main": [369, 372, 381, 383, 432, 441, 461, 463, 464, 466, 921, 931, 933, 979, 981], "prefer": [369, 383], "git": [369, 370], "submodul": [369, 370, 371, 372, 377, 378, 379, 385, 388, 389, 393, 1173, 1208, 1209, 1216, 1217], "com": 369, "unifyai": [369, 372], "http": [369, 375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 870, 872, 875, 877, 879, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "gh": 369, "your_fold": 369, "id": [369, 382, 383, 508, 527, 1206, 1207], "cours": [369, 370, 376, 392, 406], "whatev": [369, 406], "integr": [369, 378, 471, 477], "familiar": [369, 371], "sure": [369, 371, 377], "elig": 369, "free": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 405, 1173], "student": 369, "licenc": 369, "peopl": [369, 370, 373], "seem": [369, 393, 406], "miss": [369, 376, 378, 382, 383, 1210, 1214], "explicit": [369, 372, 383, 384, 386, 389, 406], "remind": 369, "channel": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 796, 823, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204], "pace": 369, "suggest": [369, 370, 374], "latest": [369, 371, 372, 375, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1194, 1203], "packag": [369, 372, 406], "ensur": [369, 370, 378, 382, 384, 387, 796, 840], "pypi": [369, 371, 406], "person": [369, 370], "experi": [369, 390, 392, 406], "avoid": [369, 370, 378, 380, 381, 383, 391, 508, 558, 650, 653], "pip": [369, 405, 1173], "instal": [369, 372, 405, 1173], "abil": [369, 390, 406], "perhap": [369, 391, 392, 393, 406], "track": [369, 370, 508, 1071, 1083, 1206, 1207], "run": [369, 372, 377, 378, 380, 387, 389, 390, 391, 392, 393, 394, 405, 406, 508, 517, 870, 872, 875, 877, 879, 890, 892, 1067, 1068, 1069, 1070, 1194, 1205, 1206, 1207], "command": [369, 372, 1173], "ivy_dev": [369, 370, 372], "name": [369, 370, 372, 375, 378, 389, 391, 392, 394, 429, 430, 796, 802, 921, 934, 936, 963, 965, 970, 1111, 1112, 1113, 1117], "setup": 369, "click": [369, 370, 375, 1173], "icon": [369, 370], "side": [369, 370], "choos": [369, 370, 394, 508, 553, 558, 714, 717, 718, 721, 1106, 1110, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "panel": 369, "select": [369, 370, 378, 389, 391, 394, 406], "drop": [369, 406], "down": [369, 391], "path": [369, 372], "manual": [369, 370, 378, 393, 1071, 1072, 1081, 1082], "builtin": [369, 372, 391, 393], "requir": [369, 372, 374, 375, 376, 378, 381, 382, 384, 385, 387, 391, 406, 429, 430, 558, 769, 772, 921, 934, 936, 1007, 1051, 1054, 1183, 1184], "cmd": [369, 372], "directori": [369, 370, 372, 796, 857], "folder": [369, 370, 372, 374, 377, 378, 379], "abov": [369, 370, 372, 375, 376, 379, 380, 382, 383, 386, 387, 391, 392, 393, 394, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 728, 731, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 934, 936, 979, 981, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1094, 1096, 1097, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1148, 1151, 1152, 1155, 1156, 1164, 1165, 1168], "m": [369, 370, 372, 373, 389, 432, 451, 453, 461, 463, 464, 466, 796, 805, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 943, 946, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 1094, 1099, 1100, 1102], "python3": [369, 372], "script": [369, 370, 372, 376, 389, 406], "bat": [369, 370, 372], "OR": [369, 370, 372, 558, 609, 612, 718, 721, 1164, 1169, 1172], "bin": [369, 370, 372], "mac": [369, 370, 372], "linux": [369, 370, 372], "virtualenv": 369, "os": 369, "note": [369, 370, 374, 375, 376, 383, 558, 749, 752, 921, 934, 936, 970, 1007, 1051, 1054, 1111, 1113, 1117, 1131, 1140, 1143], "tick": [369, 370], "To": [369, 376, 379, 383, 392, 393, 394, 1173], "ivy_test": [369, 370], "test_array_api": [369, 370, 377, 378], "cd": [369, 370, 372], "txt": 369, "visual": [369, 406], "jetbrain": 369, "remot": 369, "mitig": 369, "potenti": [369, 388, 558, 650, 653], "conflict": [369, 370, 392], "yet": [369, 371, 383], "particular": [369, 370, 374, 386, 558, 559, 562], "system": [369, 406, 921, 967, 969], "instruct": [369, 371], "desktop": 369, "wsl": 369, "powershel": 369, "admin": 369, "visit": 369, "link": 369, "profession": 369, "execut": [369, 372, 383, 386, 389, 391, 394, 406, 796, 867], "deploy": 369, "top": [369, 370, 378, 392, 393, 1173], "press": [369, 392, 1173], "ok": 369, "caus": [369, 370, 376, 378, 383, 386, 406], "earlier": [369, 370], "might": [369, 370, 374, 378, 381, 389, 391, 392, 796, 817], "necessari": [369, 376, 380, 383, 386], "virtualis": 369, "detail": [369, 370, 371, 374, 377, 378, 379, 380, 381, 383, 387, 392, 393, 432, 442, 444, 1111, 1112, 1113, 1117, 1119], "sudo": 369, "apt": 369, "ca": 369, "certif": 369, "curl": 369, "gnupg": 369, "lsb": 369, "mkdir": 369, "keyr": 369, "fssl": 369, "download": [369, 378], "gpg": 369, "dearmor": 369, "o": [369, 389, 796, 805], "echo": 369, "deb": 369, "arch": 369, "dpkg": 369, "architectur": [369, 394, 406], "lsb_releas": 369, "cs": 369, "tee": 369, "null": 369, "ce": 369, "cli": 369, "containerd": 369, "io": 369, "compos": [369, 383, 406], "plugin": 369, "systemctl": 369, "permiss": 369, "relat": [369, 370, 405, 508], "post": [369, 394, 1089, 1090, 1093, 1173, 1179], "It": [369, 370, 372, 373, 374, 375, 376, 380, 382, 383, 386, 389, 391, 392, 393, 417, 418, 419, 420, 421, 422, 423, 426, 428, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 477, 479, 508, 553, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 718, 721, 722, 725, 726, 727, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 814, 818, 819, 820, 822, 825, 828, 836, 849, 852, 853, 870, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 928, 930, 931, 933, 937, 939, 940, 942, 943, 946, 947, 949, 951, 953, 954, 956, 957, 959, 960, 962, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 992, 995, 997, 1000, 1002, 1005, 1007, 1008, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1105, 1106, 1107, 1110, 1111, 1119, 1120, 1121, 1124, 1126, 1129, 1164, 1165, 1168, 1169, 1172], "headach": 369, "arm": [369, 370], "m1": 369, "instead": [369, 370, 371, 375, 376, 378, 379, 383, 386, 387, 389, 391, 392, 406], "featur": [369, 374, 387, 392, 1173], "vm": 369, "azur": 369, "cloud": [369, 405], "defin": [369, 371, 374, 375, 384, 387, 391, 393, 406, 558, 728, 731, 749, 752, 796, 849, 921, 925, 927, 934, 936, 967, 969, 1094, 1096, 1097, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "dockerfil": [369, 372], "longer": [369, 384, 386], "worri": 369, "platform": 369, "agnost": [369, 382, 387, 389, 391, 394, 406, 1173], "usual": 369, "studio": 369, "favourit": 369, "extens": [369, 370, 375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 686, 689, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "theme": 369, "too": [369, 370, 406, 558, 572, 728, 731], "done": [369, 370, 376, 378, 392], "unsupport": [369, 384, 471, 492, 493], "slow": 369, "ipad": 369, "long": [369, 370, 376, 908, 918], "browser": 369, "cool": [369, 374], "requisit": 369, "head": [369, 383, 908, 919, 1173, 1194, 1205], "pane": [369, 370], "readi": [369, 371], "begin": [369, 1071, 1072, 1082], "outlin": [369, 370, 371, 373, 375, 378, 379, 383, 386, 391], "dropdown": 369, "tab": [369, 392, 1173], "master": [369, 370, 383], "vs": 369, "view": [369, 370, 432, 442, 444, 908, 911, 915], "built": [369, 390, 432, 433, 508, 1194, 1205, 1206, 1207], "bottom": 369, "box": 369, "patient": 369, "upto": 369, "minut": 369, "launch": 369, "That": [369, 370, 391, 392, 393, 558, 749, 752], "refer": [369, 370, 378, 379, 384, 387, 406, 432, 441, 558, 650, 653, 698, 701, 870, 872, 875, 877, 879, 921, 982, 984, 988, 990, 1131, 1152, 1155, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1194, 1204], "approach": [369, 370, 378, 379, 383, 391, 392, 406], "colour": 369, "applic": [369, 384, 385, 393, 908, 919, 920, 1071, 1077, 1083], "good": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393], "chanc": 369, "vscode": 369, "explor": [369, 390, 394, 405], "troubleshoot": 369, "sometim": [369, 370], "ever": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "64": [369, 392, 393, 558, 769, 772, 773, 776, 908, 914, 915, 921, 957, 959, 1131, 1132, 1135, 1159, 1173, 1194, 1205], "bit": [369, 376, 379, 383, 391, 471, 490, 491, 494, 558, 601, 604, 605, 608, 613, 616, 1131, 1148, 1151, 1156], "usr": 369, "more": [369, 370, 371, 373, 374, 376, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 405, 406, 432, 433, 471, 478, 558, 650, 653, 921, 943, 946, 1007, 1025, 1028, 1111, 1112, 1113, 1117, 1119, 1173], "nutshel": [369, 387], "hook": 369, "lint": 369, "fix": [369, 370], "fail": [369, 371, 377, 378, 389, 391], "attempt": [369, 406], "succe": 369, "problemat": 369, "proce": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "modifi": [369, 370, 375, 379, 384, 385, 389], "properli": [369, 373], "enter": [369, 370, 382, 384, 385, 387, 508], "unsur": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "feel": [369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 1173], "server": [370, 1173], "context": [370, 376, 383, 384, 385, 508, 796, 847, 908, 919, 1194, 1205], "suitabl": [370, 374, 383], "quick": [370, 373, 393], "tendenc": 370, "land": 370, "end": [370, 383, 386, 388, 405, 406, 432, 433, 558, 589, 592, 1173, 1179], "world": 370, "come": [370, 371, 393, 404, 1173, 1179], "fly": 370, "hard": [370, 391], "receiv": [370, 378, 384, 385, 508, 517, 518, 796, 803, 846, 1194, 1204], "respons": [370, 372], "internship": 370, "comment": 370, "trigger": 370, "unansw": 370, "label": [370, 389, 390, 394, 991, 992, 995, 997, 1000, 1002, 1005], "respond": 370, "someon": [370, 406], "els": [370, 371, 374, 379, 380, 386, 389, 391, 393, 394, 406, 796, 806, 817, 821, 1071, 1081], "strive": [370, 406], "repli": 370, "newli": [370, 386, 429, 430, 471, 477, 796, 807], "bug": [370, 378], "serv": [370, 378, 379, 382, 383, 387, 388, 1173], "suspect": 370, "behaviour": [370, 375, 378, 382, 383, 386, 387, 391], "observ": 370, "confid": 370, "wrong": 370, "someth": [370, 374, 392, 393, 406], "bet": 370, "act": [370, 376, 406], "placehold": [370, 382, 387, 1071, 1083], "mark": [370, 378], "ii": [370, 1131, 1132, 1135, 1159], "iii": 370, "titl": [370, 1173], "issue_numb": 370, "delet": [370, 372], "No": [370, 389], "progress": [370, 383, 390, 394], "pr": 370, "soon": [370, 383, 404, 406, 1173, 1179], "solut": [370, 378, 383, 921, 967, 969], "review": [370, 374], "merg": 370, "everi": [370, 371, 372, 376, 377, 378, 379, 380, 381, 383, 386, 387, 389, 391, 393, 432, 445, 446, 448, 796, 797, 800], "dai": 370, "close": [370, 375, 558, 650, 653, 753, 756, 921, 970], "likewis": [370, 375, 379, 383, 384, 387, 392], "freed": 370, "purpos": [370, 372, 376, 378, 379, 381, 382, 383, 387, 388, 391, 558, 650, 653, 1173], "remain": [370, 376, 406, 558, 572, 728, 731, 749, 752, 1007, 1037, 1040, 1071, 1077], "short": [370, 393, 908, 918], "basi": [370, 377, 392], "situat": [370, 394], "alloc": [370, 406, 432, 461, 463, 464, 466, 471, 477, 508], "upon": [370, 376, 378, 386, 406], "period": 370, "prevent": [370, 386, 391, 870, 872, 875, 877, 879, 890, 892, 1131, 1156, 1210, 1211, 1212], "unabl": 370, "obvious": 370, "never": [370, 383], "reflect": [370, 382], "qualiti": 370, "hypothet": 370, "frustrat": 370, "delai": 370, "busi": 370, "fine": [370, 391, 394], "becaus": [370, 375, 378, 379, 380, 382, 384, 385, 386, 387, 389, 393, 394, 406], "inact": 370, "me": 370, "unfairli": 370, "definit": [370, 379, 384, 391, 921, 922, 924, 925, 927], "investig": 370, "Then": [370, 372, 391, 406], "practic": [370, 378], "separ": [370, 378, 382, 389, 391, 392], "branch": [370, 383, 406, 429, 430, 558, 589, 592], "role": [370, 390], "date": 370, "upstream": [370, 377], "complic": [370, 389], "root": [370, 372, 392, 558, 769, 772, 1094, 1095, 1099], "merge_with_upstream": 370, "sh": 370, "name_of_your_branch": 370, "resolv": [370, 1131, 1148, 1151, 1156], "push": [370, 377], "both": [370, 375, 376, 379, 383, 385, 386, 387, 389, 391, 392, 393, 394, 405, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 498, 558, 559, 562, 572, 577, 580, 621, 624, 654, 737, 740, 745, 748, 769, 772, 773, 776, 782, 796, 824, 870, 872, 875, 908, 911, 920, 921, 925, 927, 931, 933, 943, 946, 982, 984, 1007, 1041, 1044, 1089, 1090, 1093, 1111, 1113, 1117, 1131, 1136, 1139, 1164, 1165, 1168], "abort": 370, "tediou": 370, "resolut": 370, "stash": 370, "reinstat": 370, "fetch": 370, "uncommit": 370, "unstag": 370, "untrack": 370, "comprehens": 370, "explan": [370, 375, 383, 387, 391], "atlassian": 370, "tutori": 370, "wrote": 370, "piec": [370, 379, 381, 382, 389], "inform": [370, 471, 491, 494, 796, 802, 870, 903], "tag": 370, "usu": 370, "describ": [370, 390, 394, 1131, 1132, 1135, 1148, 1151, 1152, 1155, 1156, 1159], "navig": [370, 373], "blame": 370, "revis": 370, "author": [370, 1173], "eg": 370, "past": 370, "l": [370, 373, 921, 922, 924, 934, 936, 943, 946, 979, 981], "grep": 370, "v": [370, 389, 392, 393, 394, 908, 920, 1173, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1214, 1216, 1217], "commit_id": 370, "handi": 370, "histori": 370, "toggl": 370, "vertic": 370, "highlight": [370, 376], "previou": [370, 378, 387, 394, 406, 870, 877, 879, 890, 892], "whenev": [370, 391, 392], "think": [370, 376], "interact": [370, 1173], "gain": [370, 388, 393, 1185], "quit": [370, 371, 375, 379, 381, 382], "yourself": [370, 371, 405], "simpler": [370, 391], "cannot": [370, 380, 384, 394], "least": [370, 376, 379, 382, 921, 943, 946], "final": [370, 375, 376, 379, 382, 384, 386, 389, 391, 392, 432, 449, 450, 796, 823, 1194, 1205], "tickbox": 370, "corner": 370, "span": 370, "intent": [370, 386], "larg": [370, 392, 558, 572, 728, 731], "discourag": 370, "philosophi": 370, "increment": [370, 796, 839], "frequent": [370, 371], "valuabl": 370, "infrequ": 370, "earli": [370, 1173], "wast": 370, "spot": [370, 379], "mistak": 370, "propos": 370, "mountain": 370, "advoc": [370, 406], "individu": [370, 371, 379], "per": [370, 392, 508, 908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "style": [370, 1106, 1109], "ve": [370, 388, 391, 1094, 1095, 1173], "actual": [370, 373, 379, 386, 388, 391, 393, 406], "aim": [370, 388], "part": [370, 374, 377, 378, 379, 389, 390, 394, 405, 406, 432, 461, 463, 464, 466, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1206, 1207], "subsect": 370, "session": [370, 1173], "block": [370, 379, 388, 390, 394, 406, 508, 1173], "smaller": [370, 389, 394, 1007, 1008, 1011, 1041, 1044, 1131, 1148, 1151, 1156], "edit": 370, "beauti": 370, "particularli": [370, 392, 406], "concern": [370, 373, 376, 383, 386, 388], "effici": [370, 378, 379, 383, 386, 387, 389, 392, 406], "difficult": [370, 378, 406, 1111, 1112, 1113, 1117, 1119], "undo": 370, "stress": 370, "frequenc": [370, 796, 823], "pycharm": 370, "pytest": [370, 378], "button": 370, "declar": 370, "insid": [370, 372, 374, 384], "exec": 370, "rm": 370, "rf": 370, "cp": 370, "ivy_contain": 370, "bash": [370, 372], "test_ivi": [370, 378], "test_funct": 370, "test_cor": 370, "test_imag": 370, "test_random_crop": 370, "header": 370, "q": [370, 406, 908, 920, 921, 934, 936, 963, 965], "array_api_test": 370, "test_creation_funct": 370, "test_arang": 370, "window": [370, 372, 908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "variou": [370, 375, 381, 387, 405], "wherebi": [371, 383, 1071, 1083], "broad": 371, "todo": [371, 378], "commit": [371, 378], "NOT": [371, 558, 714, 717], "resourc": 371, "hypothesi": 371, "cover": [371, 375, 376, 379, 381, 388], "lambda": [371, 389, 392, 1210, 1213, 1215], "direct": [371, 393, 394, 405, 1120, 1126, 1129], "bind": [371, 383], "aforement": 371, "categori": [371, 374, 382, 383, 384, 388, 1173], "parent": [371, 391], "hint": [371, 374, 375, 379, 382, 386, 387, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "its": [371, 372, 375, 471, 478, 508, 552, 921, 943, 946, 1007, 1021, 1024, 1037, 1040, 1041, 1044, 1055, 1058], "thorough": [371, 375, 378, 387], "transpil": [371, 388, 390, 1173, 1179], "builder": [372, 404, 406, 1173], "maco": 372, "ubuntu": 372, "uid": 372, "make_docs_without_dock": 372, "rel": [372, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 921, 931, 933, 942, 951, 953, 960, 962, 979, 981, 1007, 1025, 1028, 1041, 1044, 1120, 1121, 1124, 1126, 1129, 1173], "synchron": 372, "rest": [372, 390, 394], "remove_doc": 372, "_": [372, 375, 383, 386, 391, 392, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 870, 872, 875, 877, 879, 921, 931, 933, 988, 990, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1120, 1121, 1124, 1131, 1136, 1139], "privat": [372, 1210, 1214], "fulfil": [372, 388, 1173], "autogenerated_sourc": 372, "png": [372, 392], "_imag": 372, "lastli": 372, "rst": 372, "partial_sourc": 372, "conf": 372, "create_rst_fil": 372, "filter": [372, 908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "repres": [372, 391, 432, 451, 453, 471, 490, 558, 567, 568, 571, 572, 581, 584, 588, 593, 596, 628, 629, 632, 728, 731, 765, 768, 786, 787, 791, 908, 917, 921, 930, 966, 967, 969], "overal": [372, 375, 383, 384, 385, 394], "markup": 372, "extract": [372, 374], "get_functions_and_class": 372, "doctr": 372, "readm": [372, 406], "module_nam": 372, "copy_readme_to_rst": 372, "tabl": 372, "toc": 372, "tree": 372, "append_toctree_to_rst": 372, "create_index_rst": 372, "\u03c0": [372, 558, 564, 577, 580, 585, 589, 592], "namespac": [372, 374, 384, 389, 394], "who": [373, 388, 406], "mainli": [373, 390, 392], "under": [373, 375, 376, 377, 378, 379, 383, 388, 389, 392, 394], "hood": [373, 376, 378, 379, 383, 388, 389, 392, 394], "weed": [373, 388], "behind": [373, 388, 390, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "tour": 373, "primari": [373, 378, 380, 386, 406], "composit": [373, 378, 380, 382, 383, 386, 389, 393, 394, 406], "nestabl": [373, 375, 376, 378, 386, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 621, 624, 654, 737, 740, 769, 772, 773, 776, 782, 796, 824, 908, 911, 920, 921, 931, 933, 1007, 1041, 1044, 1089, 1090, 1093, 1111, 1113, 1117, 1131, 1136, 1139, 1164, 1165, 1168], "dynam": [373, 384, 385, 386, 389, 429, 430], "runtim": [373, 378, 508], "h": [373, 383, 908, 911, 912, 913, 914, 915], "j": [373, 796, 804, 805, 921, 979, 981, 1131, 1132, 1135, 1159], "borrow": 373, "n": [373, 432, 451, 453, 461, 463, 464, 466, 796, 805, 908, 916, 921, 931, 933, 942, 943, 946, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 970, 972, 973, 975, 979, 981, 982, 984, 985, 987, 988, 990, 1007, 1017, 1020, 1021, 1024, 1029, 1032, 1051, 1054, 1063, 1066, 1094, 1099, 1100, 1102, 1106, 1109, 1131, 1140, 1143, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "taken": [374, 394, 921, 931, 933], "constant": [374, 379, 393, 394, 406, 508, 517, 518, 1007, 1017, 1020, 1071, 1077, 1089, 1090, 1093, 1185, 1186, 1190, 1193, 1206, 1207, 1208, 1209], "compil": [374, 383, 388, 390, 406, 1173, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "meta": [374, 382, 1068, 1069, 1070], "overlap": 374, "sever": [374, 406, 921, 940], "judgement": 374, "locat": [374, 378, 380, 385, 1094, 1095], "some_namespac": 374, "some_backend": 374, "another_backend": 374, "break": [374, 387, 391, 406, 1173], "anyth": [374, 1173], "refactor": 374, "ongo": 374, "subfold": [374, 378], "via": [374, 383, 384, 385, 386, 389, 391, 392, 405, 1071, 1072, 1081, 1082], "file_nam": 374, "my_func": [374, 376], "int": [374, 376, 379, 383, 384, 385, 386, 387, 394, 417, 422, 429, 430, 432, 437, 441, 445, 446, 448, 449, 450, 457, 461, 463, 464, 466, 467, 471, 479, 488, 490, 491, 494, 497, 508, 530, 533, 534, 535, 536, 544, 545, 546, 552, 553, 558, 597, 600, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 796, 802, 814, 815, 818, 819, 820, 823, 824, 833, 849, 852, 853, 858, 859, 868, 870, 872, 875, 877, 879, 890, 892, 908, 909, 911, 913, 914, 915, 921, 925, 927, 931, 933, 976, 978, 979, 981, 982, 984, 985, 987, 991, 997, 1000, 1002, 1005, 1007, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1046, 1047, 1050, 1051, 1054, 1055, 1058, 1059, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1083, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1106, 1107, 1108, 1120, 1121, 1124, 1126, 1129, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "nativedtyp": [374, 384, 385, 387, 432, 433, 434, 436, 437, 438, 440, 441, 445, 446, 448, 454, 456, 457, 458, 460, 467, 468, 470, 471, 476, 477, 487, 488, 489, 498, 1131, 1156], "nativedevic": [374, 384, 385, 387, 432, 433, 434, 436, 437, 438, 440, 441, 445, 446, 448, 449, 450, 454, 456, 457, 458, 460, 467, 468, 470, 508, 525, 526, 527, 541, 547, 549, 551, 553, 554, 557, 796, 849, 1094, 1095, 1096, 1097, 1099, 1100, 1102], "my": 374, "numer": [374, 393, 432, 451, 453, 471, 477, 558, 559, 562, 572, 621, 624, 633, 636, 650, 653, 654, 657, 658, 661, 670, 673, 674, 677, 678, 681, 682, 685, 714, 717, 718, 721, 728, 731, 733, 736, 737, 740, 745, 748, 749, 752, 757, 760, 773, 776, 777, 781, 792, 795, 796, 831, 832, 854, 855, 860, 861, 921, 925, 927, 943, 946, 957, 959, 970, 976, 978, 979, 981, 982, 984, 1094, 1105, 1106, 1107, 1108, 1131, 1136, 1139, 1148, 1151, 1156, 1185], "cooler": 374, "produc": [374, 508, 517, 518, 908, 920], "something_cool": 374, "category_nam": [375, 379, 384, 385, 387], "contrast": [375, 387], "backend_nam": [375, 379, 380, 381, 384, 385, 387], "account": 375, "instanti": 375, "firstli": [375, 376, 379, 382, 384, 386, 392], "templat": [375, 1173], "spec": [375, 376], "api_specif": [375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "array_api": 375, "preview": 375, "render": 375, "incorrectli": 375, "onlin": [375, 1173], "approxim": [375, 417, 418, 558, 564, 567, 568, 571, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 646, 650, 653, 690, 693, 694, 697, 698, 701, 702, 705, 745, 748, 761, 764, 765, 768, 782, 787, 921, 942, 951, 953, 960, 962], "tangent": [375, 417, 428, 558, 585, 588, 589, 592, 593, 596, 782, 786, 787, 791], "domain": [375, 558, 564, 567, 568, 571, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 646, 650, 653, 690, 693, 694, 697, 702, 705, 761, 764, 765, 768, 769, 772, 782, 787], "infin": [375, 431, 471, 477, 558, 559, 562, 567, 568, 571, 572, 575, 581, 584, 585, 589, 592, 621, 624, 625, 628, 629, 632, 636, 646, 649, 650, 653, 654, 657, 658, 661, 670, 673, 674, 677, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 921, 985, 987, 1131, 1136, 1139, 1144, 1147, 1164, 1165, 1168, 1169, 1172], "codomain": [375, 558, 564, 567, 568, 571, 577, 580, 581, 584, 585, 589, 592, 625, 628, 629, 632, 646, 650, 653, 690, 693, 694, 697, 702, 705, 761, 764, 765, 768, 769, 772, 782, 787], "x_i": [375, 558, 559, 562, 564, 567, 568, 571, 577, 580, 581, 584, 585, 601, 604, 621, 624, 625, 628, 629, 632, 646, 650, 653, 654, 670, 673, 674, 677, 678, 681, 690, 693, 694, 697, 702, 705, 714, 717, 733, 736, 753, 756, 757, 760, 761, 764, 765, 768, 769, 772, 773, 776, 782, 787, 792, 795, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163], "assum": [375, 380, 384, 391, 392, 406, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 625, 629, 654, 737, 740, 753, 756, 761, 764, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "express": [375, 389, 394, 558, 564, 577, 580, 585, 589, 592, 625, 761, 764, 782], "radian": [375, 558, 564, 577, 580, 585, 589, 592, 625, 761, 764, 782], "float": [375, 379, 383, 384, 386, 387, 391, 393, 417, 419, 431, 432, 433, 437, 441, 445, 446, 448, 449, 450, 457, 467, 471, 477, 487, 491, 496, 499, 508, 541, 547, 551, 554, 557, 558, 559, 562, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 638, 641, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 682, 685, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 777, 781, 782, 786, 787, 791, 792, 795, 796, 808, 809, 811, 823, 831, 832, 854, 855, 860, 861, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 911, 915, 920, 921, 922, 924, 928, 934, 936, 937, 939, 940, 942, 951, 953, 960, 962, 963, 965, 967, 969, 970, 985, 987, 991, 992, 995, 997, 1000, 1002, 1005, 1067, 1068, 1069, 1070, 1089, 1090, 1093, 1094, 1099, 1100, 1102, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163], "operand": [375, 558, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 589, 592, 617, 620, 621, 624, 625, 628, 629, 632, 646, 649, 650, 653, 654, 690, 693, 694, 697, 702, 705, 706, 709, 728, 731, 745, 748, 749, 752, 753, 756, 761, 764, 765, 768, 769, 772, 782, 787, 792, 795, 1131, 1132, 1135, 1136, 1139, 1144, 1147, 1156, 1159], "whose": [375, 432, 461, 463, 464, 466, 558, 567, 568, 571, 581, 584, 588, 593, 596, 625, 628, 629, 632, 745, 748, 761, 764, 765, 768, 782, 786, 787, 791, 796, 807, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981, 1007, 1025, 1028, 1041, 1044, 1111, 1112, 1113, 1117, 1131, 1132, 1135, 1159], "ref": [375, 558, 613, 616, 682, 685, 728, 731, 737, 740, 749, 752, 777, 781, 1007, 1051, 1054], "promot": [375, 379, 384, 471, 477, 480, 483, 498, 499, 503, 558, 564, 567, 568, 571, 572, 575, 577, 580, 581, 584, 585, 588, 593, 596, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 625, 628, 629, 632, 633, 646, 649, 650, 653, 690, 693, 694, 697, 702, 705, 706, 709, 722, 725, 728, 731, 745, 748, 749, 752, 761, 764, 765, 768, 769, 772, 782, 786, 787, 791, 921, 922, 924, 925, 927, 940, 942, 943, 946, 951, 953, 957, 959, 960, 962, 967, 969, 982, 984, 985, 987, 1007, 1051, 1054, 1131, 1140, 1143], "But": [375, 383, 394], "needless": 375, "info": [375, 1173], "subset": [375, 378, 387, 389], "extend": [375, 378, 380, 387], "renam": 375, "conform": [375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 650, 653, 654, 686, 689, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "org": [375, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 870, 872, 875, 877, 879, 921, 931, 933, 1007, 1021, 1024, 1041, 1044, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "elementwise_funct": [375, 558, 559, 562, 577, 580, 617, 620, 621, 624, 629, 654, 737, 740, 769, 772, 773, 776, 921, 931, 933, 1007, 1041, 1044, 1111, 1112, 1120, 1121, 1124, 1131, 1136, 1139], "descript": [375, 383, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 985, 987, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139, 1164, 1165, 1168], "simplic": [375, 393, 405, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 453, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470, 471, 480, 483, 558, 559, 562, 572, 577, 580, 597, 600, 617, 620, 621, 624, 629, 654, 737, 740, 753, 756, 769, 772, 773, 776, 782, 787, 796, 824, 908, 911, 920, 921, 928, 931, 933, 1007, 1021, 1024, 1025, 1028, 1041, 1044, 1089, 1090, 1093, 1111, 1112, 1113, 1117, 1120, 1121, 1124, 1131, 1136, 1139], "judgment": 375, "beyond": [375, 1007, 1041, 1044], "text": 375, "func_nam": [375, 376, 379], "pure": [375, 391, 394, 406], "themselv": [375, 379, 383, 384, 385, 393, 1071, 1072], "operator_nam": 375, "succinct": 375, "contstructor": 375, "though": [375, 379, 384, 392, 406], "forward": [375, 394, 405, 406, 1206, 1207, 1210, 1214], "_forward": [375, 389, 392, 393, 1173], "former": 375, "trainabl": [375, 390, 392, 393, 870, 886, 888, 1183, 1184, 1206, 1207, 1216], "explicitli": [375, 379, 380, 382, 383, 386, 389, 406, 921, 934, 936, 1194, 1203, 1205, 1206, 1207], "latter": [375, 380], "implicit": [375, 383, 389], "docst": 375, "eight": 376, "static_": 376, "op_nam": 376, "__r": 376, "four": [376, 379, 384, 387, 392], "__sub__": [376, 382, 383, 387, 391], "__mul__": [376, 382, 383, 387, 391], "__truediv__": [376, 382, 383], "respect": [376, 382, 383, 384, 387, 432, 451, 453, 558, 559, 562, 572, 575, 589, 592, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 638, 641, 649, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 749, 752, 777, 781, 870, 872, 875, 877, 879, 881, 882, 884, 890, 892, 894, 896, 898, 900, 921, 963, 965, 1067, 1068, 1069, 1070], "recap": [376, 383, 393], "independ": [376, 377, 381, 383, 389, 394, 921, 925, 927, 967, 969, 1094, 1095], "combinatorili": 376, "variat": [376, 378], "grid": [376, 378, 405, 432, 451, 453], "vari": [376, 378, 383, 391, 1111, 1112, 1113, 1117, 1119], "simplest": 376, "small": [376, 379, 389, 393, 406, 558, 728, 731, 921, 942, 951, 953, 960, 962, 1089, 1090, 1093, 1208, 1209], "unus": [376, 386, 429, 430], "18": [376, 383, 558, 617, 620, 921, 931, 933, 957, 959, 1131, 1132, 1135, 1159], "excess": [376, 380, 391], "showcas": [376, 405], "demonstr": [376, 391], "replic": [376, 384], "meant": 376, "imaginari": 376, "some_flag": 376, "another_flag": 376, "54": [376, 558, 625, 629, 769, 772, 908, 920, 921, 957, 959, 1094, 1099, 1131, 1132, 1135, 1159], "jointli": 376, "three": [376, 383, 388, 432, 451, 453, 1173], "x0": [376, 796, 804], "procedur": 376, "sens": [376, 383, 391], "5574077": 376, "1850398": 376, "5463025": 376, "8422884": 376, "91601413": 376, "9647598": 376, "3738229": 376, "1597457": 376, "0963247": 376, "9955841": 376, "3278579": 376, "multi": [376, 383, 388, 406, 908, 919, 921, 925, 927, 1173, 1179, 1194, 1205], "seper": [376, 796, 823], "pars": [376, 406], "satisfi": [376, 921, 988, 990], "far": [376, 385, 390, 391, 1071, 1072, 1082], "asid": [376, 405], "irrelev": [376, 384], "increasingli": 376, "complex": [376, 392, 393, 394, 406, 921, 934, 936, 970], "rule": [376, 378, 379, 382, 383, 384, 471, 477, 480, 483, 499, 558, 588, 593, 596, 613, 616, 633, 728, 731, 749, 752, 786, 791, 921, 922, 924, 925, 927, 957, 959, 967, 969], "14254655": 376, "1578213": 376, "380515": 376, "17": [376, 383, 417, 419, 921, 931, 933, 1094, 1099], "trivial": 376, "By": [376, 379, 383, 386, 393, 394, 796, 814, 815, 921, 982, 984, 1007, 1033, 1036, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "non": [376, 383, 384, 389, 429, 430, 471, 477, 495, 558, 714, 717, 718, 721, 908, 911, 921, 928, 951, 953, 970, 976, 978, 982, 984, 985, 987, 1106, 1107, 1108, 1109, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1206, 1207, 1210, 1214], "dictat": [376, 382, 386, 387], "exlud": 376, "unit": [377, 378, 406, 417, 418, 419, 420, 508], "thoroughli": [377, 378], "ci": [377, 378, 406], "failur": 377, "On": [378, 390, 394], "fixtur": 378, "consum": [378, 383, 387, 508], "300": [378, 558, 753, 756], "hit": [378, 389], "permit": [378, 382, 387], "action": 378, "eleg": 378, "intellig": 378, "sampl": [378, 908, 916, 1094, 1095, 1099, 1100, 1102, 1131, 1152, 1155, 1160, 1163, 1194, 1202], "rang": [378, 392, 393, 394, 432, 433, 449, 450, 1111, 1112, 1131, 1148, 1151, 1156, 1173], "cach": [378, 379, 508, 526, 796, 807], "unexplor": 378, "known": 378, "repeatedli": [378, 383, 1071, 1080], "upload": 378, "artifact": 378, "parametr": 378, "strategi": 378, "statement": [378, 406], "plai": [378, 394], "helper": [378, 392], "verifi": [378, 384, 385, 391, 1173, 1179], "truth": [378, 558, 638, 641, 662, 665, 666, 669, 682, 685, 686, 689, 737, 740], "opt": [378, 380, 386, 391], "defer": [378, 379, 382, 383, 384, 385, 386], "suffic": [378, 381], "catch": [378, 796, 817], "systemat": 378, "safeguard": 378, "inabl": 378, "fact": [378, 392], "categor": [379, 385], "mutual": [379, 383], "constitut": [379, 389, 1131, 1152, 1155, 1160, 1163], "venn": 379, "diagram": 379, "light": [379, 406], "wherea": [379, 382, 384, 385, 387, 394], "hand": [379, 406], "log_pr": [379, 383, 386], "array_arg": 379, "typic": 379, "whatsoev": [379, 383], "commonli": [379, 1131, 1152, 1155, 1160, 1163], "outsid": [379, 385, 389, 391, 394, 1007, 1008, 1011, 1051, 1054], "denomin": [379, 406, 796, 822, 832, 855, 860, 861, 1089, 1090, 1093, 1208, 1209], "divis": [379, 558, 613, 616, 633, 636, 657, 658, 661, 749, 752, 796, 822, 832, 855, 860, 861, 870, 872, 875, 877, 879, 890, 892, 1210, 1211, 1212], "deal": [379, 406], "concurr": [379, 383], "weight": [379, 383, 393, 394, 870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 908, 917, 918, 920, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1206, 1207, 1210, 1212, 1213], "modif": 379, "decor": [379, 381, 383, 384, 385, 386], "group": [379, 383], "briefli": [379, 392], "cast": [379, 384, 471, 477, 480, 483, 1007, 1013, 1016, 1131, 1148, 1151, 1156, 1173], "get_all_arrays_on_dev": 379, "nested_map": [379, 1071], "index_nest": [379, 1071], "implicit_backend": 380, "unless": [380, 385, 386, 406, 558, 728, 731, 796, 849], "__dict__": [380, 389, 391], "ivy_original_dict": [380, 389], "unmodifi": [380, 384], "moment": [380, 406, 870, 872, 875, 877, 879, 890, 892, 1210, 1211, 1212], "fallback": 380, "freedom": [380, 1131, 1152, 1155, 1160, 1163], "recommend": [380, 558, 714, 717, 718, 721, 749, 752, 1131, 1140, 1143], "achiev": [381, 392, 394], "wrapper": [381, 382, 383, 384, 386, 387, 391], "logic": [381, 382, 384, 385, 391, 508, 544, 558, 710, 713, 714, 717, 718, 721, 1164, 1165, 1168, 1169, 1172, 1173], "topic": [381, 391], "tf": [382, 384, 385, 386, 387, 389, 394, 406, 1173], "_data": [382, 391], "organiz": [382, 383], "inherit": [382, 383, 391], "bear": [382, 383, 384], "mind": [382, 383], "necessarili": [382, 383], "although": [382, 383], "underpin": [382, 383, 389], "programmat": [382, 383], "backup": [382, 383], "accident": [382, 383], "readabl": [382, 383, 387, 391, 392], "absent": [382, 383], "perk": [382, 383], "auto": [382, 383, 392], "throw": [382, 391], "imposs": 382, "coupl": [382, 383, 391, 393], "anywai": 382, "secondli": [382, 384], "easier": 382, "five": [383, 392], "decis": [383, 389, 391], "displai": [383, 392], "arbitrarili": [383, 392], "__repr__": 383, "control": [383, 384, 386, 391, 392, 405], "__getattr__": 383, "underli": [383, 558, 597, 600, 609, 612, 617, 620, 722, 725], "__setattr__": 383, "__contains__": 383, "__getstate__": 383, "__setstate__": 383, "unpickl": 383, "expand": [383, 796, 823, 1007, 1021, 1024], "children": 383, "shallowest": 383, "deepest": 383, "67": [383, 558, 617, 620, 629], "22": [383, 558, 617, 620, 921, 931, 933, 957, 959, 1106, 1110, 1131, 1132, 1135, 1159], "25": [383, 558, 769, 772, 773, 776, 921, 931, 933, 940, 991, 997, 1000, 1089, 1090, 1093, 1131, 1132, 1135, 1159], "retain_grad": [383, 870, 881], "dy": [383, 870, 881], "dx": [383, 870, 881], "technic": [383, 386, 387, 406], "autograd": [383, 406], "grad": [383, 392, 393, 394, 1173, 1210, 1214], "redund": 383, "num_head": [383, 908, 919, 1194, 1205], "mask": [383, 908, 919, 920], "to_q_fn": [383, 908, 919], "to_kv_fn": [383, 908, 919], "to_out_fn": [383, 386, 908, 919], "to_q_v": [383, 908, 919], "to_kv_v": [383, 908, 919], "to_out_v": [383, 908, 919], "measur": [383, 908, 919, 1194, 1205], "dot": [383, 908, 919, 920, 921, 976, 978, 982, 984, 1194, 1205], "product": [383, 558, 728, 731, 796, 814, 908, 919, 920, 921, 925, 927, 943, 946, 957, 959, 976, 978, 982, 984, 1131, 1132, 1135, 1148, 1151, 1159, 1194, 1205], "implicitli": 383, "intuit": [383, 392, 393], "debug": [383, 392], "chronolog": 383, "had": [383, 386], "sequenti": [383, 393], "flow": [383, 405], "implic": 383, "slightli": [383, 389, 393], "eager": [383, 406], "int8": [384, 471, 492], "int16": [384, 471, 480, 483, 492, 1131, 1148, 1151, 1156], "uint8": [384, 471, 480, 483, 492], "uint16": [384, 471, 493, 1131, 1148, 1151, 1156], "uint32": [384, 471, 493, 1131, 1148, 1151, 1156], "uint64": [384, 471, 493, 1131, 1148, 1151, 1156], "bfloat16": [384, 471, 492], "float16": [384, 471, 493], "all_dtyp": 384, "all_numeric_dtyp": 384, "all_int_dtyp": 384, "all_float_dtyp": 384, "fall": [384, 388, 1173, 1206, 1207, 1210, 1214], "valid": [384, 389, 471, 485, 908, 909, 910, 911, 912, 913, 914, 915, 1007, 1051, 1054, 1164, 1165, 1168, 1169, 1172, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "invalid": [384, 921, 982, 984, 1164, 1165, 1168, 1169, 1172], "thirdli": 384, "native_float32": 384, "importantli": [384, 391, 394, 405], "varieti": [384, 385], "conveni": [384, 385, 387, 390, 392, 393], "arguabl": [384, 385], "compound": 384, "overflow": [384, 558, 572, 1131, 1156], "arr": [384, 385, 1089, 1090, 1093], "scalar": [384, 389, 394, 406, 432, 446, 448, 796, 849, 866, 869, 921, 985, 987], "settabl": [384, 385], "jnp": [384, 385, 386, 387, 394, 1173], "jaxarrai": [384, 385, 386, 387], "mx": [384, 385, 386, 1173], "nd": [384, 385, 386, 389, 394, 1173], "deleg": 384, "as_n": [384, 471, 486, 487, 488, 489, 508, 527, 528, 549], "idx": [385, 391, 796, 802], "tpu": [385, 508, 530, 555], "aliv": [385, 508, 542, 546, 548, 796, 830, 848, 850], "amount": [385, 508, 554, 991, 992, 995, 997, 1000, 1002, 1005], "memori": [385, 386, 404, 406, 508, 526, 547, 552, 554, 557, 908, 918, 1173], "dual": 385, "thrown": [385, 406, 796, 840], "rare": [385, 406], "program": 386, "strictli": 386, "ration": 386, "speak": 386, "subtli": 386, "ensure_in_backend": [386, 796, 840], "x_nativ": 386, "val_n": 386, "is_ivy_arrai": [386, 391, 796], "assign": [386, 391], "elif": 386, "irrespect": [386, 391, 471, 477], "inclus": [386, 432, 433, 1094, 1096, 1097], "omit": [386, 387, 1111, 1112, 1113, 1117, 1119], "unspecifi": [386, 558, 745, 748, 749, 752, 921, 934, 936, 1007, 1051, 1054], "predominantli": [386, 405], "math": [386, 394, 1173], "presenc": 386, "altern": [386, 392], "_wrap_fn": 386, "maxim": [386, 389], "inner": [386, 391, 921, 934, 936, 943, 946, 1067, 1068, 1069, 1070], "third": [386, 406, 921, 970, 1111, 1112], "addition": [386, 387], "leverag": 386, "equival": [386, 392, 394, 432, 433, 558, 613, 616, 714, 717, 718, 721, 749, 752, 921, 942, 951, 953, 960, 962, 967, 969, 985, 987], "input_arrai": 386, "adress": 387, "revisit": [387, 394], "dedic": [387, 391, 393, 870, 906, 1183, 1184], "__div__": 387, "dicat": 387, "futher": 387, "absenc": 387, "pep": 387, "484": 387, "annot": 387, "brittl": 387, "intend": [387, 1131, 1156], "freeli": 387, "inde": [387, 406], "flexibl": 387, "original_typ": 387, "cumbersom": 387, "sound": 388, "higher": [388, 389, 394, 406, 870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "overview": [388, 405], "handler": [388, 390, 394, 1173], "fledg": [389, 390], "syntact": [389, 394], "clip_by_valu": [389, 394], "clamp": [389, 394], "behavior": [389, 406, 558, 745, 748, 749, 752, 1111, 1112, 1113, 1117, 1119], "fit": [389, 1007, 1033, 1036], "construct": [389, 390, 393, 394, 1007, 1059, 1062, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217], "num": [389, 432, 449, 450], "power_seq": 389, "okai": 389, "bound": 389, "resid": [389, 393], "edg": [389, 394, 1007, 1008, 1011, 1017, 1020, 1063, 1066, 1173], "larger": [389, 394, 471, 491, 1007, 1008, 1011, 1041, 1044, 1131, 1152, 1155, 1160, 1163], "ml_framework": [389, 394, 432, 433], "current_framework": [389, 394], "furthermor": 389, "concaten": [389, 392, 508, 537, 796, 823, 1007, 1013, 1016, 1173], "framework_handl": 389, "face": 389, "verbos": [389, 1173, 1220], "cprint": [389, 1219], "framework_stack": 389, "_determine_framework_from_arg": 389, "valueerror": [389, 1007, 1047, 1050], "get_framework": 389, "neither": [389, 558, 572, 728, 731], "illustr": [389, 405], "un": [389, 471, 495], "nn": [389, 394, 432, 451, 453, 1173], "init_h": [389, 908, 918], "init_c": [389, 908, 918], "kernel": [389, 406, 908, 918], "recurrent_kernel": [389, 908, 918], "bia": [389, 393, 908, 917, 918, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204], "recurrent_bia": [389, 908, 918], "x_shape": 389, "batch_shap": [389, 391, 394, 796, 849, 908, 918, 919, 920, 921, 988, 990, 1094, 1095, 1194, 1203], "timestep": [389, 908, 918, 1194, 1203], "input_channel": [389, 393, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1204], "x_flat": 389, "wi": 389, "wi_x": 389, "wii_x": 389, "wif_x": 389, "wig_x": 389, "wio_x": 389, "recurr": [389, 908, 918], "wh": 389, "lstm": [389, 908, 918, 1194], "ht": 389, "ct": 389, "hts_list": 389, "unrol": [389, 392, 908, 918], "wii_xt": 389, "wif_xt": 389, "wig_xt": 389, "wio_xt": 389, "zip": 389, "htm1": 389, "ctm1": 389, "wh_htm1": 389, "whi_htm1": 389, "whf_htm1": 389, "whg_htm1": 389, "who_htm1": 389, "ft": 389, "gt": 389, "ot": 389, "offici": 389, "reliabl": 389, "sacrific": 389, "hear": 389, "virtu": 389, "pure_ivi": 389, "reduce_mean": [389, 392, 393, 394, 1173], "reduce_sum": [389, 1173], "reduce_var": 389, "compile_graph": [389, 394], "pure_torch": 389, "cat": [389, 394], "backbon": [389, 392], "_layer": 389, "super": [389, 392, 393, 394], "clean": [389, 390, 392], "random_unifrom": 389, "unclean": 389, "wx": 389, "temp": 389, "torchscript": 389, "fn": [389, 391, 407, 408, 409, 410, 411, 412, 413, 414, 415, 471, 492, 493, 508, 517, 518, 796, 802, 867, 1071, 1072, 1077, 1078, 1079, 1081, 1082, 1083, 1176, 1178], "example_input": [389, 429, 430], "static_argnum": [389, 429, 430], "static_argnam": [389, 429, 430], "jit": [389, 406], "frontend": 390, "primit": [390, 406], "hierarch": [390, 392, 393], "straight": [391, 1173], "arraywithlinalg": 391, "arraywithlog": 391, "arraywithmath": 391, "arraywithmeta": 391, "arraywithreduct": 391, "is_native_arrai": [391, 796], "_shape": 391, "_size": 391, "functool": 391, "mul": 391, "len": [391, 394, 432, 451, 453], "_dtype": 391, "_devic": 391, "_dev_str": 391, "_pre_repr": 391, "_post_repr": 391, "ndim": [391, 921, 963, 965, 970], "mt": 391, "answer": [391, 406], "consol": 391, "typeerror": 391, "immut": 391, "behav": 391, "claim": 391, "truli": 391, "_native_wrapp": 391, "attributeerror": 391, "genuin": 391, "some_method": 391, "similarli": [391, 432, 451, 453], "rewritten": 391, "__pow__": 391, "strang": 391, "power": [391, 392, 393, 558, 613, 616, 646, 745, 748, 796, 831, 854, 861, 921, 950, 1185], "enforc": 391, "notic": 391, "appear": [391, 1007, 1021, 1024], "invers": [391, 405, 558, 564, 567, 568, 571, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 628, 632, 786, 791, 921, 940, 942, 960, 962], "_wrap_method": 391, "func_wrapp": [391, 407, 408, 409, 410, 411, 412, 413, 414, 415], "__name__": 391, "non_wrapped_method": 391, "_method_wrap": 391, "native_arg": 391, "native_kwarg": 391, "inner_fn": 391, "whist": 391, "unwrap": 391, "transit": 391, "needlessli": 391, "randn": 391, "_unwrap_method": 391, "method_wrap": 391, "compartment": 391, "public": [391, 796, 812], "newshap": 391, "new_shap": 391, "tidi": 391, "shorter": 391, "crystal": 391, "41": [391, 558, 617, 620, 769, 772, 921, 922, 924, 1131, 1156], "enough": [391, 392, 393], "ton": 392, "ado": [392, 393], "incred": [392, 406], "hash": 392, "soup": 392, "walk": [392, 393], "dct": 392, "cnt": 392, "combo": [392, 1173, 1179], "hold": [392, 796, 852, 853], "1000": [392, 558, 769, 772], "uda": 392, "3333": 392, "6667": 392, "178": 392, "new_weight": 392, "0600": 392, "3100": 392, "2400": 392, "6900": 392, "delimit": 392, "autocomplet": 392, "midwai": 392, "agent": 392, "total_spe": 392, "total_height": 392, "total_width": 392, "ag": 392, "tot": 392, "total_": 392, "total_h": 392, "batch_siz": [392, 908, 909, 910, 911, 912, 913, 914, 915, 1094, 1095], "dir": 392, "adam": [392, 393, 394, 870, 872, 875, 877, 879, 890, 892, 1173, 1210, 1212], "cnt0": 392, "cnt1": 392, "diff_0": 392, "diff_1": 392, "config0": 392, "config1": 392, "Not": [392, 393, 406, 431], "decod": 392, "l0": 392, "l1": [392, 921, 985, 987], "depth": [392, 393, 394, 405, 508, 532, 536, 540, 796, 834, 849, 1071, 1083, 1206, 1207], "clearer": 392, "truncat": 392, "decoder__l0": 392, "decoder__l1": 392, "encoder__l0": 392, "encoder__l1": 392, "height": 392, "l0__b": 392, "l0__w": 392, "l1__b": 392, "l1__w": 392, "printabl": 392, "obviou": 392, "foresight": 392, "untidili": 392, "update_ag": 392, "normalize_img": 392, "img": 392, "img_max": 392, "reduce_max": [392, 1173], "img_min": 392, "reduce_min": [392, 1173], "img_rang": 392, "agent_posit": 392, "agent_veloc": 392, "agent_cam_front_rgb": 392, "agent_cam_front_depth": 392, "agent_cam_rear_rgb": 392, "agent_cam_rear_depth": 392, "agent_cam_lidar": 392, "normal": [392, 1007, 1051, 1054, 1089, 1090, 1093, 1094, 1099, 1208, 1209], "cleaner": 392, "camera": 392, "front_rgb": 392, "front_depth": 392, "rear_rgb": 392, "rear_depth": 392, "lidar": 392, "rgb": 392, "rear": 392, "veloc": 392, "cam": 392, "cam_max": 392, "cam_min": 392, "cam_rang": 392, "Of": 392, "ideal": 392, "perman": 392, "afterward": 392, "thread": 392, "incorpor": 392, "pretti": 392, "straightforward": 392, "dataload": [392, 404, 1173], "_cnt": 392, "img_": 392, "_dataset_s": 392, "_batch_siz": 392, "_count": [392, 393], "__next__": 392, "filenam": 392, "img_fnam": 392, "fname": 392, "loaded_img": 392, "cv2": 392, "imread": 392, "loader": [392, 406], "batch_slic": 392, "model": [392, 393, 1173], "mymodel": [392, 1173], "linear0": [392, 393, 1173], "linear1": [392, 393, 1173], "x_in": [392, 393, 394, 1173], "001": [392, 393, 870, 872, 875, 1089, 1090, 1093], "loss_fn": [392, 393, 394, 1173], "0145": 392, "grad_fn": 392, "addbackward0": 392, "_create_vari": 393, "output_channel": [393, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1203, 1204], "with_bia": [393, 1194, 1204], "_input_channel": 393, "_output_channel": 393, "_w_shape": 393, "_b_shape": 393, "_with_bia": 393, "8979": 393, "3198": 393, "0196": 393, "3126": 393, "3717": 393, "9687": 393, "6958": 393, "5122": 393, "3902": 393, "8800": 393, "5613": 393, "1982": 393, "nightmar": 393, "overcom": 393, "fc": 393, "9563": 393, "impact": 393, "v0": 393, "v1": 393, "6440": 393, "key0": 393, "1823": 393, "8075": 393, "linear3": 393, "v2": 393, "2346": 393, "counter": 393, "hidden": [393, 908, 918, 1194, 1203], "fed": [393, 508, 552], "1300": 393, "decoupl": 393, "scheme": 393, "weight_initi": [393, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204], "glorotuniform": [393, 1185, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204], "bias_initi": [393, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204], "_w_init": 393, "_b_init": 393, "create_vari": [393, 1185], "var_shap": [393, 1185], "fan_out": [393, 1185], "fan_in": [393, 1185], "fan_mod": [393, 1185], "fan_sum": 393, "slight": 393, "misnom": 393, "saw": 393, "vanilla": [393, 1067, 1069], "descent": [393, 870, 882, 884, 1210, 1215], "lar": [393, 870, 890, 892, 894, 896, 1210], "lamb": [393, 870, 890, 892, 1210], "compile_on_next_step": [393, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1215], "_beta1": 393, "_beta2": 393, "_epsilon": 393, "_mw": 393, "_vw": 393, "_first_pass": 393, "_should_compil": 393, "_step": [393, 1210, 1214], "new_v": 393, "_lr": 393, "isinst": [393, 394, 796, 864], "_inplac": 393, "_stop_gradi": 393, "set_stat": [393, 1210, 1211, 1212, 1213, 1214, 1215], "pre": [394, 406, 508], "captur": 394, "sparse_funct": 394, "num_class": [394, 1094, 1095], "num_dim": 394, "new_axi": 394, "_linear": 394, "to_backend": 394, "jax_graph": 394, "learnabl": [394, 1089, 1090, 1093, 1208, 1209], "to_ivy_modul": [394, 1183], "thinli": 394, "whilst": 394, "to_haiku_modul": 394, "hk": 394, "loss_fn_t": 394, "transform": [394, 405, 908, 916, 917], "without_apply_rng": 394, "rng": 394, "prngkei": 394, "init": 394, "update_rul": 394, "01": [394, 558, 753, 756], "tree_multimap": 394, "mechan": [404, 406, 1173], "vision": [404, 1173], "robot": [404, 1173], "focus": 405, "field": [405, 921, 934, 936, 963, 965, 970, 1111, 1112, 1113, 1117], "perfect": 405, "3d": [405, 1194, 1199, 1200], "differenti": 405, "demo": [405, 1173], "orient": 405, "pose": 405, "euler": [405, 431], "quaternion": 405, "rotat": 405, "matric": [405, 432, 451, 453, 461, 463, 464, 466, 908, 917, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 950, 951, 953, 954, 956, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981], "angl": [405, 558, 589, 592, 629, 765, 768, 787], "ivy_mech": 405, "target_facing_rotation_matrix": 405, "polar_to_cartesian_coord": 405, "ordin": [405, 921, 967, 969], "warp": 405, "optic": 405, "voxel": 405, "ivy_vis": 405, "coords_to_voxel_grid": 405, "render_pixel_coord": 405, "neural": [405, 908, 1173, 1180, 1194], "radianc": 405, "nerf": 405, "trajectori": 405, "motion": 405, "plan": [405, 1173], "mobil": 405, "ivy_robot": 405, "sample_spline_path": 405, "rigidmobil": 405, "sample_bodi": 405, "drone": 405, "sample_link": 405, "openai": 405, "swimmer": 405, "cumul": [405, 796, 814, 815], "reward": 405, "supervis": 405, "reinforc": 405, "door": [405, 406], "intersect": 405, "cartpol": 405, "mountain_car": 405, "pendulum": 405, "reacher": 405, "polici": 405, "condit": [405, 429, 430, 1071, 1081, 1082, 1106, 1110], "learnt": 405, "ture": 405, "ntm": 405, "egospher": 405, "spatial": 405, "esm": 405, "ivy_memori": 405, "egocentr": 405, "room": 405, "inspir": 405, "doubt": 406, "grate": 406, "put": 406, "probe": 406, "undergo": 406, "remark": 406, "surpris": 406, "backward": [406, 558, 749, 752, 921, 982, 984, 1164, 1165, 1168, 1169, 1172], "lock": 406, "contunu": 406, "minor": 406, "xla": 406, "buffer": 406, "kind": [406, 471, 491, 494, 558, 745, 748, 1131, 1148, 1151, 1156], "gold": 406, "dex": 406, "phase": 406, "lax": 406, "scan": 406, "tricki": 406, "predictor": 406, "tight": 406, "driver": 406, "schedul": 406, "algorithm": [406, 908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "dispatch": 406, "Will": 406, "ast": 406, "dynamic": 406, "cond": 406, "jacobian": 406, "checkpoint": 406, "autodiff": 406, "shine": 406, "merci": 406, "superset": 406, "cluster": 406, "compet": 406, "paradigm": 406, "parallelis": [406, 508, 517, 518], "spmd": 406, "mixtur": [406, 870, 872, 875], "expert": 406, "sophist": 406, "depart": 406, "routin": 406, "hundr": 406, "thousand": 406, "deepli": [406, 1071, 1073], "broadli": 406, "heavili": 406, "supplementari": 406, "Is": 406, "reusabl": 406, "fanci": 406, "fusion": 406, "lose": 406, "vmap": 406, "pmap": 406, "overhead": 406, "ineffici": 406, "eventu": 406, "supplement": 406, "backdoor": 406, "callback": 406, "record": 406, "metric": 406, "somewhat": 406, "outsourc": 406, "inputs_to_ivy_arrai": 407, "gaussian": [417, 418], "leaki": [417, 418, 419], "alpha": [417, 419], "rectifi": [417, 419, 420], "slope": [417, 419], "39": [417, 419, 558, 646, 870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "85": [417, 419, 558, 617, 620], "48": [417, 419, 558, 769, 772, 870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "88": [417, 419, 558, 617, 620, 921, 957, 959, 1131, 1132, 1135, 1159], "269": [417, 421], "731": [417, 421], "881": [417, 421], "214": [417, 421], "978": [417, 421], "891": [417, 421], "422": [417, 422], "155": [417, 422], "0768": [417, 422], "231": [417, 422], "693": [417, 422, 991, 1002, 1005], "49": [417, 422, 558, 769, 772, 1131, 1132, 1135, 1159], "147": [417, 422], "363": [417, 422], "3461": [417, 423, 426], "6491": [417, 423, 426], "535": [417, 423, 426], "hyperbol": [417, 428, 558, 567, 568, 571, 581, 584, 588, 593, 596, 628, 629, 632, 765, 768, 786, 787, 791], "55": [417, 428, 908, 914, 921, 957, 959, 1131, 1132, 1135, 1159], "501": [417, 428], "faster": [429, 430], "invoc": [429, 430], "718281828459045": 431, "newaxi": 431, "alia": 431, "pi": 431, "141592653589793": 431, "mathemat": [431, 558, 572, 589, 592, 650, 653, 728, 731, 921, 985, 987], "half": [432, 433, 1094, 1096, 1097, 1100, 1102], "chosen": [432, 433, 558, 589, 592, 1106, 1110], "distanc": [432, 433], "adjac": [432, 433], "creation_funct": [432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 457, 458, 460, 461, 463, 464, 466, 467, 468, 470], "interpret": [432, 434, 436, 454, 456], "uniniti": [432, 437, 438, 440], "n_row": [432, 441], "n_col": [432, 441], "elsewher": [432, 441, 1106, 1110], "row": [432, 441, 921, 967, 969, 970, 1094, 1095, 1106, 1109], "column": [432, 441, 921, 934, 936, 963, 965, 967, 969, 970], "__dlpack__": [432, 442, 444, 508, 553], "interchang": [432, 442, 444, 1007, 1055, 1058], "endpoint": [432, 449], "coordin": [432, 451, 453, 558, 589, 592], "cartesian": [432, 451, 453], "ij": [432, 451, 453, 1131, 1132, 1135, 1159], "rank": [432, 451, 453, 796, 868, 921, 925, 927, 951, 953, 963, 965, 967, 969, 979, 981, 982, 984, 985, 987, 1007, 1017, 1020, 1021, 1024, 1051, 1054, 1063, 1066, 1106, 1109, 1164, 1165, 1168, 1169, 1172], "ni": [432, 451, 453], "xi": [432, 451, 453], "n1": [432, 451, 453], "n2": [432, 451, 453], "n3": [432, 451, 453], "accordingli": [432, 451, 453, 558, 650, 653, 921, 985, 987, 1106, 1108, 1111, 1112, 1113, 1117, 1119, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "xv": [432, 451, 453], "yv": [432, 451, 453], "triangular": [432, 461, 463, 464, 466, 921, 922, 924, 963, 965], "innermost": [432, 461, 463, 464, 466, 921, 922, 924, 928, 931, 933, 934, 936, 937, 939, 940, 942, 951, 953, 954, 956, 960, 962, 963, 965, 967, 969, 970, 972, 973, 975, 979, 981], "mxn": [432, 461, 463, 464, 466, 921, 931, 933, 942, 951, 953, 954, 956, 960, 962, 963, 965, 972, 973, 975, 979, 981], "defaultdtyp": [471, 472], "defaultfloatdtyp": [471, 473], "float_dtyp": [471, 487, 501], "defaultintdtyp": [471, 474], "dtype_in": [471, 475, 476, 490, 495, 496, 497, 507], "incompat": [471, 479], "occur": [471, 480, 483, 1106, 1107, 1108, 1111, 1112, 1113, 1117, 1119], "data_type_funct": [471, 480, 483], "closest": [471, 485, 558, 621, 624, 636, 654, 657, 658, 661, 753, 756, 792, 795], "floatdtyp": [471, 487], "int_dtyp": [471, 488, 502], "intdtyp": [471, 488], "followng": [471, 491], "occupi": [471, 491, 494, 796, 852, 853], "ep": [471, 491, 921, 942, 951, 953, 960, 962], "smallest_norm": [471, 491], "precis": [471, 491, 558, 728, 731, 769, 772], "encapsul": [471, 494], "type1": [471, 498], "type2": [471, 498], "arrays_and_dtyp": [471, 499], "ret1": [471, 503], "ret2": [471, 503], "noinspect": [472, 473, 474, 509, 871], "pyshadowingnam": [472, 473, 474, 509, 871], "defaultdevic": [508, 509], "__enter__": 508, "_dev": 508, "initialis": 508, "devcloneditem": [508, 530], "multidevitem": [508, 510, 513], "devclonedit": 508, "multidevit": [508, 511, 514, 517, 518, 522], "devclonednest": 508, "multidevnest": [508, 512, 515], "devdistitem": 508, "devdistit": 508, "devdistnest": 508, "devmanag": [508, 516], "dev_mapp": 508, "da_dim_s": 508, "safety_factor": 508, "min_dev_dim_s": 508, "max_dev_dim_step_ratio": 508, "min_unit_dev_tune_step": 508, "min_sf_tune_step": 508, "starting_split_factor": 508, "max_split_factor_step_s": 508, "tune_dev_alloc": 508, "tune_dev_split": 508, "mapper": [508, 517, 518], "receivess": 508, "ratio": [508, 870, 890, 892, 1210, 1212], "safe": [508, 517], "oom": 508, "tune": 508, "da_tune_step": 508, "ds_tune_step": 508, "to_clon": 508, "to_distribut": 508, "multidevic": [508, 517], "parallel": [508, 517, 518], "mutlidevic": [508, 517], "repeated_config_check": 508, "tune_step": 508, "devmapp": [508, 518], "ret_fn": [508, 517, 518], "queue_class": [508, 517, 518], "worker_class": [508, 517, 518], "worker": [508, 517, 518], "used_dev": [508, 517], "sf": [508, 517], "devmappermultiproc": 508, "multidev": [508, 519, 520, 521, 540], "profil": 508, "save_dir": [508, 523], "deviceic": [508, 529], "spread": [508, 540], "139740789224448": [508, 542], "physic": [508, 544], "x3": [508, 546], "x4": [508, 546], "process_specif": [508, 547, 557], "percentag": [508, 547], "ram": [508, 547, 554, 557], "alon": [508, 547, 557], "attr_onli": [508, 548], "chunk": [508, 550, 551, 552], "max_chunk_s": [508, 552], "chunk_siz": [508, 552], "input_ax": [508, 552], "output_ax": [508, 552], "feed": [508, 552], "fist": [508, 552], "stream": [508, 553], "caveat": [508, 553], "portabl": [508, 553, 1173], "gb": [508, 554, 557], "reset": [508, 556], "magnitud": [558, 559, 562, 572, 728, 731, 921, 970, 972, 973, 975], "princip": [558, 564, 577, 580, 585], "cosin": [558, 564, 567, 568, 571, 625, 628, 629, 632], "x1_i": [558, 572, 575, 589, 592, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 638, 641, 649, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 777, 781], "x2_i": [558, 572, 575, 589, 592, 597, 600, 605, 608, 609, 612, 613, 616, 617, 620, 633, 636, 638, 641, 649, 657, 658, 661, 662, 665, 666, 669, 682, 685, 686, 689, 706, 709, 710, 713, 718, 721, 722, 725, 728, 731, 737, 740, 745, 748, 749, 752, 777, 781], "finit": [558, 572, 589, 592, 670, 673, 728, 731, 745, 748, 749, 752], "nor": [558, 572, 728, 731], "nearest": [558, 572, 728, 731, 753, 756], "2019": [558, 572, 650, 653, 728, 731], "commut": [558, 572], "sine": [558, 577, 580, 581, 584, 761, 764, 765, 768], "57": [558, 577, 580, 617, 620, 629], "524": [558, 577, 580], "644": [558, 577, 580], "201": [558, 577, 580, 753, 756], "305": [558, 577, 580], "412": [558, 577, 580], "quotient": [558, 589, 592], "notat": [558, 589, 592, 1131, 1132, 1135, 1159], "denot": [558, 589, 592], "pair": [558, 589, 592, 908, 920, 921, 925, 927], "quadrant": [558, 589, 592], "3\u03c0": [558, 589, 592], "549": [558, 588, 593, 596, 786, 791], "bitwis": [558, 597, 600, 609, 612, 617, 620, 722, 725], "AND": [558, 597, 600, 710, 713, 1164, 1165, 1168], "binari": [558, 597, 600, 609, 612, 617, 620, 722, 725, 991, 992, 995], "invert": [558, 601, 604], "arithmet": [558, 613, 616, 1131, 1140, 1143], "propag": [558, 613, 616, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1152, 1155, 1156, 1160, 1163], "thu": [558, 613, 616, 745, 748, 749, 752, 921, 934, 936], "lh": [558, 613, 616], "rh": [558, 613, 616], "xor": [558, 617, 620, 722, 725], "78": [558, 617, 620, 921, 957, 959, 1131, 1132, 1135, 1159], "91": [558, 617, 620, 921, 957, 959, 1131, 1132, 1135, 1159], "23": [558, 617, 620, 908, 914, 921, 931, 933, 1106, 1110], "66": [558, 617, 620, 921, 957, 959, 1131, 1132, 1135, 1159], "77": [558, 617, 620, 921, 957, 959, 1131, 1132, 1135, 1159], "79": [558, 617, 620], "89": [558, 617, 620, 921, 976, 978, 1131, 1156], "98": [558, 617, 620, 921, 957, 959, 1106, 1110, 1131, 1132, 1135, 1159], "26": [558, 617, 620, 870, 872, 875, 908, 915, 921, 931, 933, 957, 959, 976, 978, 1131, 1132, 1135, 1159], "21": [558, 617, 620, 796, 814, 921, 931, 933, 957, 959, 991, 1002, 1005, 1131, 1132, 1135, 1159], "34": [558, 617, 620, 769, 772], "24": [558, 617, 620, 769, 772, 796, 814, 870, 872, 875, 921, 931, 933, 957, 959, 1131, 1132, 1135, 1159], "51": [558, 617, 620], "27": [558, 617, 620, 629, 769, 772, 908, 920, 921, 957, 959, 1131, 1132, 1135, 1159], "74": [558, 617, 620], "59": [558, 617, 620], "416": [558, 625], "122": [558, 629], "368": [558, 629], "670": [558, 629], "202": [558, 629, 753, 756], "548": [558, 629], "1490": [558, 629], "dividend": [558, 633, 749, 752], "divisor": [558, 633, 749, 752, 870, 872, 875, 877, 879, 890, 892, 1131, 1152, 1155, 1160, 1163, 1210, 1211, 1212], "gauss": [558, 642, 645], "exponenti": [558, 575, 642, 645, 646, 649, 706, 709, 745, 748], "logarithm": [558, 575, 646, 649, 690, 693, 694, 697, 698, 701, 702, 705, 706, 709, 921, 930, 966], "72": [558, 646, 870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "accur": [558, 650, 653], "fdlibm": [558, 650, 653], "compliant": [558, 650, 653, 714, 717, 718, 721, 1131, 1136, 1139, 1140, 1143, 1144, 1147], "greatest": [558, 636, 654, 657, 658, 661], "out_i": [558, 670, 673, 674, 677, 678, 681], "threshold": [558, 726, 727], "exce": [558, 727], "y_i": [558, 733, 736], "expon": [558, 745, 748, 796, 861], "versu": [558, 745, 748], "odd": [558, 745, 748], "modulu": [558, 749, 752], "primarili": [558, 749, 752], "5654": [558, 753, 756], "034": [558, 753, 756], "433": [558, 753, 756], "343": [558, 753, 756], "44": [558, 753, 756, 769, 772, 773, 776, 921, 957, 959, 1106, 1110, 1131, 1132, 1135, 1159], "30": [558, 753, 756, 921, 957, 959, 1131, 1132, 1135, 1159, 1185, 1191], "81": [558, 753, 756, 773, 776, 1131, 1132, 1135, 1159], "527": [558, 753, 756], "301": [558, 753, 756], "indistinguish": [558, 769, 772], "infinit": [558, 769, 772], "83": [558, 769, 772], "32455532": [558, 769, 772], "89897949": [558, 769, 772], "50": [558, 769, 772, 921, 957, 959, 1106, 1109, 1131, 1132, 1135, 1159], "31": [558, 769, 772], "169": [558, 769, 772], "47": [558, 769, 772], "73": [558, 769, 772, 921, 922, 924, 1089, 1090, 1093], "93": [558, 769, 772], "35": [558, 769, 772, 908, 920, 921, 925, 927, 1106, 1110, 1131, 1132, 1135, 1159], "09": [558, 773, 776, 908, 920], "61": [558, 773, 776, 991, 992, 995], "546": [558, 782], "842": [558, 782], "916": [558, 782, 991, 992, 995], "996": [558, 782], "328": [558, 782], "real": [558, 787], "462": [558, 787], "604": [558, 787], "984": [558, 787], "997": [558, 787, 1089, 1090, 1093], "decim": [558, 792, 795], "inspect": [796, 802, 1177, 1178], "downscal": [796, 808, 809, 811], "60": [796, 814, 921, 957, 959, 1131, 1132, 1135, 1159], "default_v": [796, 817], "catch_except": [796, 817], "rev": [796, 817], "with_cal": [796, 817], "arrang": [796, 818], "123": [796, 821], "mod": [796, 822], "max_freq": [796, 823], "num_band": [796, 823], "pad": [796, 823, 908, 909, 910, 911, 912, 913, 914, 915, 1007, 1017, 1020, 1063, 1066, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "fourier": [796, 823], "band": [796, 823], "linearli": [796, 823, 921, 967, 969], "oppos": [796, 823], "geometr": [796, 823], "seen_set": [796, 834], "local_set": [796, 834], "decrement": [796, 838], "is_arrai": 796, "allow_dupl": [796, 846], "forkserv": [796, 847], "spawn": [796, 847], "hot": [796, 849], "scatter": [796, 849, 852, 853], "overrid": [796, 849], "tmp_dr": [796, 857], "temporari": [796, 857], "min_denomin": [796, 860], "stabil": [796, 860, 861, 1120, 1121, 1124, 1126, 1129], "_min_denomin": [796, 860], "min_bas": [796, 861], "_min_bas": [796, 861, 1089, 1090, 1093, 1208, 1209], "100000023841858": [796, 864], "200000047683716": [796, 864], "299999952316284": [796, 864], "400000095367432": [796, 864], "599999904632568": [796, 864], "101": [796, 865], "unpack": [796, 868], "gradienttrack": [870, 871], "delta": [870, 872, 875], "cost": [870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1067, 1068, 1069, 1070], "ws": [870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "en": [870, 872, 875, 877, 879], "wikipedia": [870, 872, 875, 877, 879], "wiki": [870, 872, 875, 877, 879], "stochastic_gradient_desc": [870, 872, 875, 877, 879], "dc": [870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "dw": [870, 872, 875, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "averag": [870, 872, 875, 877, 879, 890, 892, 1067, 1068, 1069], "forget": [870, 872, 875, 877, 879, 890, 892, 1210, 1211, 1212], "004": [870, 872, 875], "009": [870, 872, 875], "86": [870, 872, 875], "28": [870, 872, 875, 908, 911, 914, 915, 921, 957, 959, 1131, 1132, 1135, 1159], "45": [870, 872, 875, 921, 957, 959, 1007, 1046, 1089, 1090, 1093, 1131, 1132, 1135, 1159], "0125": [870, 872, 875], "601": [870, 872, 875], "581": [870, 872, 875], "025": [870, 872, 875], "992": [870, 872, 875], "209": [870, 872, 875, 1111, 1112], "271": [870, 872, 875], "0717": [870, 872, 875], "142": [870, 872, 875], "182": [870, 872, 875], "624": [870, 872, 875, 1094, 1100, 1102], "06": [870, 872, 875], "02": [870, 872, 875], "744": [870, 872, 875], "626": [870, 872, 875], "65": [870, 872, 875, 921, 957, 959, 1131, 1132, 1135, 1159], "024": [870, 872, 875], "096": [870, 872, 875], "216": [870, 872, 875], "384": [870, 872, 875], "rate": [870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900, 1067, 1068, 1069, 1070, 1194, 1205, 1210, 1211, 1212, 1213, 1214, 1215], "ws_new": [870, 877, 879, 882, 884, 890, 892, 894, 896, 898, 900], "retain": [870, 881], "trust": [870, 890, 892, 1210, 1212], "decai": [870, 890, 892, 894, 896, 1210, 1212, 1213], "layerwis": [870, 894, 896, 1210, 1213], "stride": [908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "data_format": [908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "nwc": [908, 909, 910, 1194, 1195, 1196], "dilat": [908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "convolut": [908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "d_in": [908, 909, 910, 911, 912, 913, 914], "fw": [908, 909, 910, 911, 912, 913, 914, 915], "d_out": [908, 909, 910, 911, 912, 913, 914], "slide": [908, 909, 910, 911, 912, 913, 914, 915, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "ncw": [908, 909, 910, 1194, 1195, 1196], "wio": [908, 909], "output_shap": [908, 910, 912, 914, 1194, 1196, 1198, 1200], "nhwc": [908, 911, 912, 915, 1194, 1197, 1198, 1201], "fh": [908, 911, 912, 913, 914, 915], "nchw": [908, 911, 912, 915, 1194, 1197, 1198, 1201], "hwio": [908, 911], "unequ": [908, 911], "unsqueez": [908, 911, 915], "ndhwc": [908, 913, 914, 1194, 1199, 1200], "volum": [908, 913], "fd": [908, 913, 914], "ncdhw": [908, 913, 914, 1194, 1199, 1200], "dhwio": [908, 913], "256": [908, 914], "258": [908, 914], "128": [908, 914, 921, 957, 959], "depthwis": [908, 915, 1194, 1201], "333": [908, 915], "inp": [908, 915], "prob": [908, 916, 1094, 1095, 1194, 1202], "randomli": [908, 916, 1194, 1202], "bernoulli": [908, 916], "out_featur": [908, 916, 917], "incom": [908, 917], "outer_batch_shap": [908, 917], "inner_batch_shap": [908, 917], "in_featur": [908, 917], "cell": [908, 918, 1194, 1203], "num_queri": [908, 919, 920], "x_feat_dim": [908, 919], "num_kei": [908, 919, 920], "cont_feat_dim": [908, 919], "numhead": [908, 919], "feat_dim": [908, 919, 920], "out_feat_dim": [908, 919], "score": [908, 920], "04": [908, 920], "03": [908, 920, 1089, 1090, 1093], "08": [908, 920], "decomposit": [921, 922, 924, 963, 965, 970], "symmetr": [921, 922, 924, 934, 936, 937, 939, 988, 990], "u": [921, 922, 924, 970], "577": [921, 922, 924], "707": [921, 922, 924], "vif": [921, 925, 927], "92": [921, 928], "293": [921, 928], "46997": [921, 928], "eigendecomposit": [921, 934, 936], "qlq\u1d40": [921, 934, 936], "orthogon": [921, 934, 936], "eig": [921, 934, 936], "eigenvalu": [921, 934, 936, 937, 939], "eigenvector": [921, 934, 936], "75": [921, 940, 957, 959], "prepend": [921, 943, 946], "singular": [921, 942, 951, 953, 960, 962, 970, 972, 973, 975], "toler": [921, 942, 951, 953, 960, 962], "largest_singular_valu": [921, 942, 951, 953, 960, 962], "array_lik": [921, 957, 959], "33": [921, 957, 959, 1089, 1090, 1093, 1131, 1132, 1135, 1159], "36": [921, 957, 959, 1131, 1132, 1135, 1159], "84": [921, 957, 959, 1131, 1132, 1135, 1159], "105": [921, 957, 959, 991, 992, 995], "112": [921, 957, 959, 1131, 1132, 1135, 1159], "104": [921, 957, 959, 1131, 1132, 1135, 1159], "120": [921, 957, 959], "moor": [921, 942, 960, 962], "penros": [921, 942, 960, 962], "pseudo": [921, 942, 960, 962], "orthonorm": [921, 963, 965, 970], "2d": [921, 930, 966, 1194, 1197, 1198, 1201], "logdet": [921, 930, 966], "coeffici": [921, 967, 969], "usvh": [921, 970], "vh": [921, 970], "hermitian": [921, 970], "et": [921, 970], "cetera": [921, 970], "adjoint": [921, 970], "reconstruct": [921, 970, 1111, 1112, 1118], "reconstructed_x": [921, 970], "contract": [921, 976, 978, 1131, 1132, 1135, 1159], "doubl": [921, 976, 978], "singleton": [921, 985, 987, 1007, 1047, 1050, 1106, 1108, 1131, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1155, 1156, 1160, 1163, 1164, 1165, 1168, 1169, 1172], "liter": [921, 985, 987], "manhattan": [921, 985, 987], "l2": [921, 985, 987], "euclidean": [921, 985, 987], "mathbf": [921, 988, 990], "mathbb": [921, 988, 990], "skew": [921, 988, 990], "entropi": [991, 992, 995, 997, 1000, 1002, 1005], "predict": [991, 992, 995, 997, 1000, 1002, 1005], "smooth": [991, 992, 995, 997, 1000, 1002, 1005], "223": [991, 992, 995], "357": [991, 992, 995, 1002, 1005], "511": [991, 992, 995], "discret": [991, 997, 1000], "3862944": [991, 997, 1000], "35667497": [991, 997, 1000], "spars": [991, 1002, 1005], "logit": [991, 1002, 1005], "793291": [991, 1002, 1005], "512926": [991, 1002, 1005], "before_1": [1007, 1017, 1020, 1063, 1066], "after_1": [1007, 1017, 1020, 1063, 1066], "before_n": [1007, 1017, 1020, 1063, 1066], "after_n": [1007, 1017, 1020, 1063, 1066], "insert": [1007, 1021, 1024, 1071, 1076, 1106, 1107], "manipulation_funct": [1007, 1021, 1024], "reorder": [1007, 1025, 1028], "permut": [1007, 1029, 1032, 1055, 1058], "repetit": [1007, 1033, 1036, 1059, 1062], "restor": [1007, 1041, 1044], "famili": [1007, 1051, 1054], "intxx": [1007, 1051, 1054], "floatxx": [1007, 1051, 1054], "fomaml_step": 1067, "inner_cost_fn": [1067, 1068, 1069], "outer_cost_fn": [1067, 1068, 1069], "inner_grad_step": [1067, 1068, 1069, 1070], "inner_learning_r": [1067, 1068, 1069, 1070], "inner_optimization_step": [1067, 1068, 1069, 1070], "inner_batch_fn": [1067, 1068, 1069], "outer_batch_fn": [1067, 1068, 1069], "average_across_step": [1067, 1068, 1069], "inner_v": [1067, 1068, 1069], "keep_inner_v": [1067, 1068, 1069], "outer_v": [1067, 1068, 1069], "keep_outer_v": [1067, 1068, 1069], "return_inner_v": [1067, 1068, 1069, 1070], "num_task": [1067, 1068, 1069, 1070], "maml": [1067, 1068, 1069], "recev": [1067, 1068, 1069], "0x7ff75debf310": [1067, 1068, 1069, 1070], "maml_step": 1067, "rece": [1067, 1069], "reptile_step": 1067, "cost_fn": [1067, 1070], "reptil": [1067, 1070], "receivng": [1067, 1070], "all_nested_indic": 1071, "include_nest": [1071, 1072], "_index": [1071, 1072, 1082], "_base": [1071, 1072, 1081, 1082], "copy_nest": 1071, "to_mut": [1071, 1073, 1083], "mutabl": [1071, 1073, 1083], "insert_into_nest_at_index": 1071, "insert_into_nest_at_indic": 1071, "map_nest_at_index": 1071, "map_nest_at_indic": 1071, "multi_index_nest": 1071, "nested_ani": 1071, "check_nest": [1071, 1081, 1082], "conditon": [1071, 1081, 1082], "nested_indices_wher": 1071, "stop_after_n_found": [1071, 1082], "_depth": [1071, 1083], "_tuple_check_fn": [1071, 1083], "_list_check_fn": [1071, 1083], "_dict_check_fn": [1071, 1083], "nested_multi_map": 1071, "nest0": [1071, 1084], "ivy_arrai": [1071, 1084], "funciton": [1071, 1084], "prune_nest_at_index": 1071, "prune_nest_at_indic": 1071, "set_nest_at_index": 1071, "set_nest_at_indic": 1071, "mini": [1089, 1090, 1093, 1208, 1209], "gamma": [1089, 1090, 1093], "beta": [1089, 1090, 1093], "0976": [1089, 1090, 1093], "3452": [1089, 1090, 1093], "2740": [1089, 1090, 1093], "1047": [1089, 1090, 1093], "5886": [1089, 1090, 1093], "2732": [1089, 1090, 1093], "7696": [1089, 1090, 1093], "7024": [1089, 1090, 1093], "2518": [1089, 1090, 1093], "58": [1089, 1090, 1093, 1111, 1112], "283": [1089, 1090, 1093], "585": [1089, 1090, 1093], "909": [1089, 1090, 1093], "628": [1089, 1090, 1093], "225": [1089, 1090, 1093], "425": [1089, 1090, 1093], "norm_idx": [1089, 1090, 1093], "228": [1089, 1090, 1093], "0285": [1089, 1090, 1093], "199": [1089, 1090, 1093], "204": [1089, 1090, 1093], "population_s": [1094, 1095], "num_sampl": [1094, 1095], "draw": [1094, 1095, 1099, 1100, 1102], "unnorm": [1094, 1095], "drawn": [1094, 1095, 1096, 1097, 1099, 1100, 1102], "home": [1094, 1095, 1099], "uniformli": [1094, 1096, 1097, 1100, 1102], "highest": [1094, 1096, 1097], "parameter": [1094, 1099, 1100, 1102], "6444774682897879": [1094, 1099], "811": [1094, 1099], "508": [1094, 1099], "564": [1094, 1099], "7268672": [1094, 1099], "968": [1094, 1099], "175": [1094, 1099, 1111, 1112], "064": [1094, 1099], "40935726": [1094, 1099], "556": [1094, 1099], "26431865": [1094, 1100, 1102], "475": [1094, 1100, 1102], "878": [1094, 1100, 1102], "861": [1094, 1100, 1102], "89150229": [1094, 1100, 1102], "89629126": [1094, 1100, 1102], "94198485": [1094, 1100, 1102], "91405606": [1094, 1100, 1102], "72848724": [1094, 1100, 1102], "7550739": [1094, 1100, 1102], "00109": [1094, 1100, 1102], "occurr": [1106, 1107, 1108, 1111, 1112], "yield": [1106, 1110], "43": [1106, 1110], "x_j": [1111, 1112, 1113, 1117, 1119], "impli": [1111, 1112, 1113, 1117, 1119], "inverse_indic": [1111, 1112, 1118], "aggreg": [1111, 1112], "fourth": [1111, 1112], "607": [1111, 1112], "735": [1111, 1112], "667": [1111, 1112], "381": [1111, 1112], "857": [1111, 1112], "0396": [1111, 1112], "166": [1111, 1112], "828": [1111, 1112], "144": [1111, 1112], "40501155": [1111, 1112], "77361575": [1111, 1112], "97776199": [1111, 1112], "36831157": [1111, 1112], "89148434": [1111, 1112], "9512272": [1111, 1112], "67542176": [1111, 1112], "41985657": [1111, 1112], "23478023": [1111, 1112], "1141": [1111, 1112], "8101": [1111, 1112], "9298": [1111, 1112], "8460": [1111, 1112], "2119": [1111, 1112], "3519": [1111, 1112], "6252": [1111, 1112], "4033": [1111, 1112], "7443": [1111, 1112], "2577": [1111, 1112], "3707": [1111, 1112], "0545": [1111, 1112], "3238": [1111, 1112], "5944": [1111, 1112], "0775": [1111, 1112], "4327": [1111, 1112], "176": [1111, 1112], "889": [1111, 1112], "763": [1111, 1112], "071": [1111, 1112], "262": [1111, 1112], "456": [1111, 1112], "114": [1111, 1112], "349": [1111, 1112], "615": [1111, 1112], "594": [1111, 1112], "335": [1111, 1112], "212": [1111, 1112], "457": [1111, 1112], "827": [1111, 1112], "set_funct": [1111, 1113, 1117], "ascend": [1120, 1121, 1124], "einstein": [1131, 1132, 1135, 1159], "summat": [1131, 1132, 1135, 1159], "seq": [1131, 1132, 1135, 1159], "jk": [1131, 1132, 1135, 1159], "ik": [1131, 1132, 1135, 1159], "126": [1131, 1132, 1135, 1159], "510": [1131, 1132, 1135, 1159], "99": [1131, 1132, 1135, 1159], "108": [1131, 1132, 1135, 1159], "117": [1131, 1132, 1135, 1159], "sentinel": [1131, 1136, 1139, 1144, 1147], "unsign": [1131, 1148, 1151, 1156], "degre": [1131, 1152, 1155, 1160, 1163], "bessel": [1131, 1152, 1155, 1160, 1163], "8164966": [1131, 1152, 1155], "varianc": [1131, 1160, 1163], "unbias": [1131, 1160, 1163], "simplicit": [1164, 1165, 1168], "autom": 1173, "grow": 1173, "ai": 1173, "got": 1173, "colab": 1173, "sharp": 1173, "weekli": 1173, "event": 1173, "immedi": 1173, "favorit": 1173, "jax_concat": 1173, "tf_concat": 1173, "np_concat": 1173, "mx_concat": 1173, "torch_concat": 1173, "prompt": 1173, "get_devic": 1173, "reduce_prod": 1173, "gradient_imag": 1173, "linalg": 1173, "bilinear_resampl": 1173, "stack_imag": 1173, "neural_net": 1173, "ecosystem": [1173, 1179], "popular": [1173, 1179], "acceler": 1173, "articl": 1173, "lenton2021ivi": 1173, "inter": 1173, "lenton": 1173, "daniel": 1173, "pardo": 1173, "fabio": 1173, "falck": 1173, "fabian": 1173, "jame": 1173, "stephen": 1173, "clark": 1173, "ronald": 1173, "journal": 1173, "arxiv": 1173, "preprint": 1173, "2102": 1173, "02886": 1173, "2021": 1173, "add_array_spec": 1176, "fn_array_spec": 1176, "geglu": 1180, "native_modul": [1183, 1184], "native_module_class": [1183, 1184], "firstlayersiren": 1185, "kaimingnorm": [1185, 1189], "negative_slop": 1185, "Ones": 1185, "siren": 1185, "w0": [1185, 1191], "filter_s": [1194, 1195, 1196], "1d": [1194, 1195, 1196], "conv1dtranspos": 1194, "filter_shap": [1194, 1197, 1198, 1199, 1200, 1201], "conv2dtranspos": 1194, "conv3dtranspos": 1194, "depthwiseconv2d": 1194, "num_channel": [1194, 1201], "bernoul": [1194, 1202], "num_lay": [1194, 1203], "return_sequ": [1194, 1203], "return_st": [1194, 1203], "get_initial_st": [1194, 1203], "dens": [1194, 1204], "multiheadattent": 1194, "query_dim": [1194, 1205], "head_dim": [1194, 1205], "dropout_r": [1194, 1205], "context_dim": [1194, 1205], "with_to_q_fn": [1194, 1205], "with_to_kv_fn": [1194, 1205], "with_to_out_fn": [1194, 1205], "build_mod": [1194, 1205, 1206, 1207], "on_init": [1194, 1205, 1206, 1207], "__call__": [1194, 1205, 1206, 1207], "store_var": [1206, 1207], "arg_stateful_idx": [1206, 1207], "kwarg_stateful_idx": [1206, 1207], "fallback_to_non_compil": [1206, 1207, 1210, 1214], "with_partial_v": [1206, 1207], "initialz": [1206, 1207], "from_cal": [1206, 1207], "check_submod_ret": [1206, 1207], "get_mod_kei": [1206, 1207], "top_mod": [1206, 1207], "mod_depth": [1206, 1207], "mod_height": [1206, 1207], "mod_with_top_mod_key_chain": [1206, 1207], "save_weight": [1206, 1207], "weights_path": [1206, 1207], "show_mod_in_top_mod": [1206, 1207], "upper_depth": [1206, 1207], "lower_depth": [1206, 1207], "show_structur": [1206, 1207], "show_v_in_top_v": [1206, 1207], "sub_mod": [1206, 1207], "show_v": [1206, 1207], "track_submod_call_ord": [1206, 1207], "track_submod_ret": [1206, 1207], "v_with_top_v_key_chain": [1206, 1207], "layernorm": 1208, "normalized_shap": [1208, 1209], "elementwise_affin": [1208, 1209], "trail": [1208, 1209], "affin": [1208, 1209], "0001": [1210, 1211, 1212], "init_on_first_step": [1210, 1214], "ignore_miss": [1210, 1214], "overriden": [1210, 1214], "sgd": 1210, "stochast": [1210, 1215], "sub_modul": [1216, 1217]}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array_methods"], [129, 0, 0, "-", "conversions"], [134, 0, 0, "-", "creation"], [136, 0, 0, "-", "data_type"], [138, 0, 0, "-", "device"], [140, 0, 0, "-", "elementwise"], [142, 0, 0, "-", "general"], [144, 0, 0, "-", "gradients"], [146, 0, 0, "-", "image"], [148, 0, 0, "-", "layers"], [150, 0, 0, "-", "linear_algebra"], [152, 0, 0, "-", "losses"], [154, 0, 0, "-", "manipulation"], [156, 0, 0, "-", "norms"], [158, 0, 0, "-", "random"], [160, 0, 0, "-", "searching"], [162, 0, 0, "-", "set"], [164, 0, 0, "-", "sorting"], [166, 0, 0, "-", "statistical"], [168, 0, 0, "-", "utility"], [170, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[1, 2, 1, "", "softplus"]], "ivy.array.array_methods": [[560, 3, 1, "", "abs"], [568, 3, 1, "", "acos"], [569, 3, 1, "", "acosh"], [873, 3, 1, "", "adam_step"], [706, 3, 1, "", "add"], [8, 3, 1, "", "add_ivy_array_instance_methods"], [1166, 3, 1, "", "all"], [798, 3, 1, "", "all_equal"], [1170, 3, 1, "", "any"], [1122, 3, 1, "", "argsort"], [435, 3, 1, "", "asarray"], [578, 3, 1, "", "asin"], [582, 3, 1, "", "asinh"], [593, 3, 1, "", "atan"], [590, 3, 1, "", "atan2"], [594, 3, 1, "", "atanh"], [993, 3, 1, "", "binary_cross_entropy"], [598, 3, 1, "", "bitwise_and"], [602, 3, 1, "", "bitwise_invert"], [606, 3, 1, "", "bitwise_left_shift"], [610, 3, 1, "", "bitwise_or"], [614, 3, 1, "", "bitwise_right_shift"], [618, 3, 1, "", "bitwise_xor"], [481, 3, 1, "", "can_cast"], [622, 3, 1, "", "ceil"], [923, 3, 1, "", "cholesky"], [1009, 3, 1, "", "clip"], [1014, 3, 1, "", "concat"], [1018, 3, 1, "", "constant_pad"], [626, 3, 1, "", "cos"], [630, 3, 1, "", "cosh"], [926, 3, 1, "", "cross"], [998, 3, 1, "", "cross_entropy"], [966, 3, 1, "", "det"], [932, 3, 1, "", "diagonal"], [658, 3, 1, "", "divide"], [935, 3, 1, "", "eigh"], [938, 3, 1, "", "eigvalsh"], [1133, 3, 1, "", "einsum"], [439, 3, 1, "", "empty_like"], [666, 3, 1, "", "equal"], [643, 3, 1, "", "erf"], [706, 3, 1, "", "exp"], [1022, 3, 1, "", "expand_dims"], [651, 3, 1, "", "expm1"], [1026, 3, 1, "", "flip"], [658, 3, 1, "", "floor"], [659, 3, 1, "", "floor_divide"], [443, 3, 1, "", "from_dlpack"], [447, 3, 1, "", "full_like"], [826, 3, 1, "", "gather_nd"], [666, 3, 1, "", "greater"], [667, 3, 1, "", "greater_equal"], [960, 3, 1, "", "inv"], [671, 3, 1, "", "isfinite"], [675, 3, 1, "", "isinf"], [679, 3, 1, "", "isnan"], [1091, 3, 1, "", "layer_norm"], [683, 3, 1, "", "less"], [687, 3, 1, "", "less_equal"], [691, 3, 1, "", "log"], [695, 3, 1, "", "log10"], [699, 3, 1, "", "log1p"], [703, 3, 1, "", "log2"], [707, 3, 1, "", "logaddexp"], [711, 3, 1, "", "logical_and"], [715, 3, 1, "", "logical_not"], [719, 3, 1, "", "logical_or"], [723, 3, 1, "", "logical_xor"], [944, 3, 1, "", "matmul"], [948, 3, 1, "", "matrix_norm"], [952, 3, 1, "", "matrix_rank"], [955, 3, 1, "", "matrix_transpose"], [1137, 3, 1, "", "max"], [1141, 3, 1, "", "mean"], [452, 3, 1, "", "meshgrid"], [1145, 3, 1, "", "min"], [729, 3, 1, "", "multiply"], [455, 3, 1, "", "native_array"], [734, 3, 1, "", "negative"], [738, 3, 1, "", "not_equal"], [459, 3, 1, "", "ones_like"], [958, 3, 1, "", "outer"], [1030, 3, 1, "", "permute_dims"], [961, 3, 1, "", "pinv"], [742, 3, 1, "", "positive"], [746, 3, 1, "", "pow"], [1149, 3, 1, "", "prod"], [964, 3, 1, "", "qr"], [750, 3, 1, "", "remainder"], [1034, 3, 1, "", "repeat"], [1038, 3, 1, "", "reshape"], [1042, 3, 1, "", "roll"], [754, 3, 1, "", "round"], [758, 3, 1, "", "sign"], [762, 3, 1, "", "sin"], [766, 3, 1, "", "sinh"], [424, 3, 1, "", "softplus"], [968, 3, 1, "", "solve"], [1127, 3, 1, "", "sort"], [1003, 3, 1, "", "sparse_cross_entropy"], [770, 3, 1, "", "sqrt"], [774, 3, 1, "", "square"], [1048, 3, 1, "", "squeeze"], [1052, 3, 1, "", "stack"], [1153, 3, 1, "", "std"], [779, 3, 1, "", "subtract"], [1157, 3, 1, "", "sum"], [973, 3, 1, "", "svd"], [974, 3, 1, "", "svdvals"], [1056, 3, 1, "", "swapaxes"], [784, 3, 1, "", "tan"], [789, 3, 1, "", "tanh"], [977, 3, 1, "", "tensordot"], [1060, 3, 1, "", "tile"], [980, 3, 1, "", "trace"], [462, 3, 1, "", "tril"], [465, 3, 1, "", "triu"], [793, 3, 1, "", "trunc"], [1115, 3, 1, "", "unique_counts"], [1161, 3, 1, "", "var"], [983, 3, 1, "", "vecdot"], [986, 3, 1, "", "vector_norm"], [989, 3, 1, "", "vector_to_skew_symmetric_matrix"], [1064, 3, 1, "", "zero_pad"], [469, 3, 1, "", "zeros_like"]], "ivy.array.conversions": [[130, 3, 1, "", "args_to_ivy"], [131, 3, 1, "", "args_to_native"], [132, 3, 1, "", "to_ivy"], [133, 3, 1, "", "to_native"]], "ivy.array.creation": [[135, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[135, 2, 1, "", "asarray"], [135, 2, 1, "", "empty_like"], [135, 2, 1, "", "from_dlpack"], [135, 2, 1, "", "full_like"], [135, 2, 1, "", "meshgrid"], [135, 2, 1, "", "native_array"], [135, 2, 1, "", "ones_like"], [135, 2, 1, "", "tril"], [135, 2, 1, "", "triu"], [135, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[137, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[137, 2, 1, "", "can_cast"]], "ivy.array.device": [[139, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[141, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[141, 2, 1, "", "abs"], [141, 2, 1, "", "acos"], [141, 2, 1, "", "acosh"], [141, 2, 1, "", "add"], [141, 2, 1, "", "asin"], [141, 2, 1, "", "asinh"], [141, 2, 1, "", "atan"], [141, 2, 1, "", "atan2"], [141, 2, 1, "", "atanh"], [141, 2, 1, "", "bitwise_and"], [141, 2, 1, "", "bitwise_invert"], [141, 2, 1, "", "bitwise_left_shift"], [141, 2, 1, "", "bitwise_or"], [141, 2, 1, "", "bitwise_right_shift"], [141, 2, 1, "", "bitwise_xor"], [141, 2, 1, "", "ceil"], [141, 2, 1, "", "cos"], [141, 2, 1, "", "cosh"], [141, 2, 1, "", "divide"], [141, 2, 1, "", "equal"], [141, 2, 1, "", "erf"], [141, 2, 1, "", "exp"], [141, 2, 1, "", "expm1"], [141, 2, 1, "", "floor"], [141, 2, 1, "", "floor_divide"], [141, 2, 1, "", "greater"], [141, 2, 1, "", "greater_equal"], [141, 2, 1, "", "isfinite"], [141, 2, 1, "", "isinf"], [141, 2, 1, "", "isnan"], [141, 2, 1, "", "less"], [141, 2, 1, "", "less_equal"], [141, 2, 1, "", "log"], [141, 2, 1, "", "log10"], [141, 2, 1, "", "log1p"], [141, 2, 1, "", "log2"], [141, 2, 1, "", "logaddexp"], [141, 2, 1, "", "logical_and"], [141, 2, 1, "", "logical_not"], [141, 2, 1, "", "logical_or"], [141, 2, 1, "", "logical_xor"], [141, 2, 1, "", "multiply"], [141, 2, 1, "", "negative"], [141, 2, 1, "", "not_equal"], [141, 2, 1, "", "positive"], [141, 2, 1, "", "pow"], [141, 2, 1, "", "remainder"], [141, 2, 1, "", "round"], [141, 2, 1, "", "sign"], [141, 2, 1, "", "sin"], [141, 2, 1, "", "sinh"], [141, 2, 1, "", "sqrt"], [141, 2, 1, "", "square"], [141, 2, 1, "", "subtract"], [141, 2, 1, "", "tan"], [141, 2, 1, "", "tanh"], [141, 2, 1, "", "trunc"]], "ivy.array.general": [[143, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[143, 2, 1, "", "all_equal"], [143, 2, 1, "", "gather_nd"]], "ivy.array.gradients": [[145, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[145, 2, 1, "", "adam_step"]], "ivy.array.image": [[147, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[149, 1, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[151, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[151, 2, 1, "", "cholesky"], [151, 2, 1, "", "cross"], [151, 2, 1, "", "det"], [151, 2, 1, "", "diagonal"], [151, 2, 1, "", "eigh"], [151, 2, 1, "", "eigvalsh"], [151, 2, 1, "", "inv"], [151, 2, 1, "", "matmul"], [151, 2, 1, "", "matrix_norm"], [151, 2, 1, "", "matrix_rank"], [151, 2, 1, "", "matrix_transpose"], [151, 2, 1, "", "outer"], [151, 2, 1, "", "pinv"], [151, 2, 1, "", "qr"], [151, 2, 1, "", "solve"], [151, 2, 1, "", "svd"], [151, 2, 1, "", "svdvals"], [151, 2, 1, "", "tensordot"], [151, 2, 1, "", "trace"], [151, 2, 1, "", "vecdot"], [151, 2, 1, "", "vector_norm"], [151, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[153, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[153, 2, 1, "", "binary_cross_entropy"], [153, 2, 1, "", "cross_entropy"], [153, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[155, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[155, 2, 1, "", "clip"], [155, 2, 1, "", "concat"], [155, 2, 1, "", "constant_pad"], [155, 2, 1, "", "expand_dims"], [155, 2, 1, "", "flip"], [155, 2, 1, "", "permute_dims"], [155, 2, 1, "", "repeat"], [155, 2, 1, "", "reshape"], [155, 2, 1, "", "roll"], [155, 2, 1, "", "squeeze"], [155, 2, 1, "", "stack"], [155, 2, 1, "", "swapaxes"], [155, 2, 1, "", "tile"], [155, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[157, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[157, 2, 1, "", "layer_norm"]], "ivy.array.random": [[159, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[161, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[163, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[163, 2, 1, "", "unique_counts"]], "ivy.array.sorting": [[165, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[165, 2, 1, "", "argsort"], [165, 2, 1, "", "sort"]], "ivy.array.statistical": [[167, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[167, 2, 1, "", "einsum"], [167, 2, 1, "", "max"], [167, 2, 1, "", "mean"], [167, 2, 1, "", "min"], [167, 2, 1, "", "prod"], [167, 2, 1, "", "std"], [167, 2, 1, "", "sum"], [167, 2, 1, "", "var"]], "ivy.array.utility": [[169, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[169, 2, 1, "", "all"], [169, 2, 1, "", "any"]], "ivy.array.wrapping": [[171, 3, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[172, 0, 0, "-", "backend_handler"], [407, 0, 0, "-", "func_wrapper"], [1176, 0, 0, "-", "inspection"], [1219, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[172, 1, 1, "", "ContextManager"], [174, 3, 1, "", "choose_random_backend"], [175, 3, 1, "", "clear_backend_stack"], [176, 3, 1, "", "current_backend"], [177, 3, 1, "", "get_backend"], [178, 3, 1, "", "set_backend"], [179, 3, 1, "", "try_import_ivy_jax"], [180, 3, 1, "", "try_import_ivy_mxnet"], [181, 3, 1, "", "try_import_ivy_numpy"], [182, 3, 1, "", "try_import_ivy_tf"], [183, 3, 1, "", "try_import_ivy_torch"], [184, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[172, 2, 1, "", "__init__"]], "ivy.container": [[189, 0, 0, "-", "activations"], [191, 0, 0, "-", "base"], [193, 0, 0, "-", "container"], [196, 0, 0, "-", "container_methods"], [330, 0, 0, "-", "creation"], [332, 0, 0, "-", "data_type"], [334, 0, 0, "-", "device"], [336, 0, 0, "-", "elementwise"], [338, 0, 0, "-", "general"], [340, 0, 0, "-", "gradients"], [342, 0, 0, "-", "image"], [344, 0, 0, "-", "layers"], [346, 0, 0, "-", "linear_algebra"], [348, 0, 0, "-", "losses"], [350, 0, 0, "-", "manipulation"], [352, 0, 0, "-", "norms"], [354, 0, 0, "-", "random"], [356, 0, 0, "-", "searching"], [358, 0, 0, "-", "set"], [360, 0, 0, "-", "sorting"], [362, 0, 0, "-", "statistical"], [364, 0, 0, "-", "utility"], [366, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[190, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[190, 2, 1, "", "softplus"], [190, 2, 1, "", "static_softplus"]], "ivy.container.base": [[192, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__setitem__"], [192, 2, 1, "", "all_false"], [192, 2, 1, "", "all_key_chains"], [192, 2, 1, "", "all_true"], [192, 2, 1, "", "arrays_as_lists"], [192, 2, 1, "", "as_arrays"], [192, 2, 1, "", "as_bools"], [192, 2, 1, "", "as_ones"], [192, 2, 1, "", "as_random_uniform"], [192, 2, 1, "", "as_variables"], [192, 2, 1, "", "as_zeros"], [192, 2, 1, "", "assert_contains_sub_container"], [192, 2, 1, "", "assert_contains_sub_structure"], [192, 2, 1, "", "assert_identical"], [192, 2, 1, "", "assert_identical_structure"], [192, 2, 1, "", "at_key_chain"], [192, 2, 1, "", "at_key_chains"], [192, 2, 1, "", "at_keys"], [192, 2, 1, "", "clip"], [192, 2, 1, "", "combine"], [192, 2, 1, "", "common_key_chains"], [192, 4, 1, "", "config"], [192, 2, 1, "", "contains_sub_container"], [192, 2, 1, "", "contains_sub_structure"], [192, 2, 1, "", "copy"], [192, 2, 1, "", "create_if_absent"], [192, 2, 1, "", "cutoff_at_depth"], [192, 2, 1, "", "cutoff_at_height"], [192, 2, 1, "", "deep_copy"], [192, 4, 1, "", "dev"], [192, 2, 1, "", "dev_clone"], [192, 2, 1, "", "dev_dist"], [192, 4, 1, "", "dev_str"], [192, 2, 1, "", "diff"], [192, 2, 1, "", "dtype"], [192, 2, 1, "", "einops_rearrange"], [192, 2, 1, "", "einops_reduce"], [192, 2, 1, "", "einops_repeat"], [192, 2, 1, "", "find_sub_container"], [192, 2, 1, "", "find_sub_structure"], [192, 2, 1, "", "flatten_key_chain"], [192, 2, 1, "", "flatten_key_chains"], [192, 2, 1, "", "format_key_chains"], [192, 2, 1, "", "from_disk_as_hdf5"], [192, 2, 1, "", "from_disk_as_json"], [192, 2, 1, "", "from_disk_as_pickled"], [192, 2, 1, "", "from_flat_list"], [192, 2, 1, "", "from_numpy"], [192, 2, 1, "", "gather"], [192, 2, 1, "", "gather_nd"], [192, 2, 1, "", "h5_file_size"], [192, 2, 1, "", "handle_inplace"], [192, 2, 1, "", "has_key"], [192, 2, 1, "", "has_key_chain"], [192, 2, 1, "", "has_nans"], [192, 2, 1, "", "identical"], [192, 2, 1, "", "identical_array_shapes"], [192, 2, 1, "", "identical_configs"], [192, 2, 1, "", "identical_structure"], [192, 2, 1, "", "if_exists"], [192, 2, 1, "", "inplace_update"], [192, 4, 1, "", "ivy"], [192, 2, 1, "", "key_chains_containing"], [192, 2, 1, "", "list_join"], [192, 2, 1, "", "list_stack"], [192, 2, 1, "", "map"], [192, 2, 1, "", "map_conts"], [192, 2, 1, "", "matrix_norm"], [192, 4, 1, "", "max_depth"], [192, 2, 1, "", "maximum"], [192, 2, 1, "", "minimum"], [192, 2, 1, "", "multi_map"], [192, 2, 1, "", "multi_map_in_static_method"], [192, 2, 1, "", "num_arrays"], [192, 2, 1, "", "overwrite_at_key_chain"], [192, 2, 1, "", "overwrite_at_key_chains"], [192, 2, 1, "", "prune_empty"], [192, 2, 1, "", "prune_key_chain"], [192, 2, 1, "", "prune_key_chains"], [192, 2, 1, "", "prune_key_from_key_chains"], [192, 2, 1, "", "prune_keys"], [192, 2, 1, "", "prune_keys_from_key_chains"], [192, 2, 1, "", "reduce"], [192, 2, 1, "", "remove_key_length_limit"], [192, 2, 1, "", "remove_print_limit"], [192, 2, 1, "", "reshape_like"], [192, 2, 1, "", "restructure"], [192, 2, 1, "", "restructure_key_chains"], [192, 2, 1, "", "set_at_key_chain"], [192, 2, 1, "", "set_at_key_chains"], [192, 2, 1, "", "set_at_keys"], [192, 2, 1, "", "set_framework"], [192, 2, 1, "", "set_ivy_backend"], [192, 4, 1, "", "shape"], [192, 4, 1, "", "shapes"], [192, 2, 1, "", "show"], [192, 2, 1, "", "show_sub_container"], [192, 2, 1, "", "shuffle"], [192, 2, 1, "", "shuffle_h5_file"], [192, 2, 1, "", "size_ordered_arrays"], [192, 2, 1, "", "slice_keys"], [192, 2, 1, "", "slice_via_key"], [192, 2, 1, "", "sort_by_key"], [192, 2, 1, "", "split"], [192, 2, 1, "", "stop_gradients"], [192, 2, 1, "", "structural_diff"], [192, 2, 1, "", "to_device"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_disk_as_hdf5"], [192, 2, 1, "", "to_disk_as_json"], [192, 2, 1, "", "to_disk_as_pickled"], [192, 2, 1, "", "to_flat_list"], [192, 2, 1, "", "to_iterator"], [192, 2, 1, "", "to_iterator_keys"], [192, 2, 1, "", "to_iterator_values"], [192, 2, 1, "", "to_ivy"], [192, 2, 1, "", "to_jsonable"], [192, 2, 1, "", "to_list"], [192, 2, 1, "", "to_multi_dev"], [192, 2, 1, "", "to_native"], [192, 2, 1, "", "to_numpy"], [192, 2, 1, "", "to_raw"], [192, 2, 1, "", "trim_key"], [192, 2, 1, "", "try_kc"], [192, 2, 1, "", "unify"], [192, 2, 1, "", "unstack"], [192, 2, 1, "", "update_config"], [192, 2, 1, "", "vector_norm"], [192, 2, 1, "", "with_default_key_color"], [192, 2, 1, "", "with_entries_as_lists"], [192, 2, 1, "", "with_ivy_backend"], [192, 2, 1, "", "with_key_length_limit"], [192, 2, 1, "", "with_print_indent"], [192, 2, 1, "", "with_print_limit"], [192, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[194, 1, 1, "", "Container"], [195, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[194, 2, 1, "", "__add__"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "__radd__"], [194, 2, 1, "", "arange"], [194, 2, 1, "", "arg_info"], [194, 2, 1, "", "arg_names"], [194, 2, 1, "", "argmax"], [194, 2, 1, "", "argmin"], [194, 2, 1, "", "array"], [194, 2, 1, "", "array_equal"], [194, 2, 1, "", "arrays_equal"], [194, 2, 1, "", "as_ivy_dev"], [194, 2, 1, "", "as_ivy_dtype"], [194, 2, 1, "", "as_native_dev"], [194, 2, 1, "", "as_native_dtype"], [194, 2, 1, "", "asarray"], [194, 2, 1, "", "assert_supports_inplace"], [194, 2, 1, "", "astype"], [194, 2, 1, "", "broadcast_arrays"], [194, 2, 1, "", "broadcast_to"], [194, 2, 1, "", "cache_fn"], [194, 2, 1, "", "cholesky"], [194, 2, 1, "", "clear_mem_on_dev"], [194, 2, 1, "", "clip_matrix_norm"], [194, 2, 1, "", "closest_valid_dtype"], [194, 2, 1, "", "container_types"], [194, 2, 1, "", "conv1d"], [194, 2, 1, "", "conv1d_transpose"], [194, 2, 1, "", "conv2d"], [194, 2, 1, "", "conv2d_transpose"], [194, 2, 1, "", "conv3d"], [194, 2, 1, "", "conv3d_transpose"], [194, 2, 1, "", "copy_array"], [194, 2, 1, "", "cross"], [194, 2, 1, "", "cumprod"], [194, 2, 1, "", "cumsum"], [194, 2, 1, "", "current_backend"], [194, 2, 1, "", "current_backend_str"], [194, 2, 1, "", "default"], [194, 2, 1, "", "default_device"], [194, 2, 1, "", "default_dtype"], [194, 2, 1, "", "default_float_dtype"], [194, 2, 1, "", "default_int_dtype"], [194, 2, 1, "", "depthwise_conv2d"], [194, 2, 1, "", "det"], [194, 2, 1, "", "dev_clone_array"], [194, 2, 1, "", "dev_clone_iter"], [194, 2, 1, "", "dev_clone_nest"], [194, 2, 1, "", "dev_dist_array"], [194, 2, 1, "", "dev_dist_iter"], [194, 2, 1, "", "dev_dist_nest"], [194, 2, 1, "", "dev_unify"], [194, 2, 1, "", "dev_unify_array"], [194, 2, 1, "", "dev_unify_iter"], [194, 2, 1, "", "dev_unify_nest"], [194, 2, 1, "", "dev_util"], [194, 2, 1, "", "diagonal"], [194, 2, 1, "", "dropout"], [194, 2, 1, "", "dtype_bits"], [194, 2, 1, "", "eigh"], [194, 2, 1, "", "eigvalsh"], [194, 2, 1, "", "empty"], [194, 2, 1, "", "empty_like"], [194, 2, 1, "", "execute_with_gradients"], [194, 2, 1, "", "exists"], [194, 2, 1, "", "eye"], [194, 2, 1, "", "finfo"], [194, 2, 1, "", "floormod"], [194, 2, 1, "", "fourier_encode"], [194, 2, 1, "", "from_dlpack"], [194, 2, 1, "", "full"], [194, 2, 1, "", "full_like"], [194, 2, 1, "", "function_supported_dtypes"], [194, 2, 1, "", "function_unsupported_dtypes"], [194, 2, 1, "", "gelu"], [194, 2, 1, "", "get_all_arrays_in_memory"], [194, 2, 1, "", "get_all_ivy_arrays_on_dev"], [194, 2, 1, "", "get_min_base"], [194, 2, 1, "", "get_min_denominator"], [194, 2, 1, "", "get_num_dims"], [194, 2, 1, "", "get_referrers_recursive"], [194, 2, 1, "", "gpu_is_available"], [194, 2, 1, "", "handle_nestable"], [194, 2, 1, "", "handle_out_argument"], [194, 2, 1, "", "iinfo"], [194, 2, 1, "", "indices_where"], [194, 2, 1, "", "infer_device"], [194, 2, 1, "", "infer_dtype"], [194, 2, 1, "", "inplace_arrays_supported"], [194, 2, 1, "", "inplace_decrement"], [194, 2, 1, "", "inplace_increment"], [194, 2, 1, "", "inplace_variables_supported"], [194, 2, 1, "", "inputs_to_native_arrays"], [194, 2, 1, "", "inv"], [194, 2, 1, "", "invalid_dtype"], [194, 2, 1, "", "is_float_dtype"], [194, 2, 1, "", "is_int_dtype"], [194, 2, 1, "", "is_ivy_container"], [194, 2, 1, "", "leaky_relu"], [194, 2, 1, "", "linear"], [194, 2, 1, "", "linspace"], [194, 2, 1, "", "logspace"], [194, 2, 1, "", "lstm_update"], [194, 2, 1, "", "match_kwargs"], [194, 2, 1, "", "matrix_power"], [194, 2, 1, "", "matrix_rank"], [194, 2, 1, "", "matrix_transpose"], [194, 2, 1, "", "meshgrid"], [194, 2, 1, "", "multi_head_attention"], [194, 2, 1, "", "multinomial"], [194, 2, 1, "", "multiprocessing"], [194, 2, 1, "", "native_array"], [194, 2, 1, "", "nonzero"], [194, 2, 1, "", "num_arrays_in_memory"], [194, 2, 1, "", "num_cpu_cores"], [194, 2, 1, "", "num_gpus"], [194, 2, 1, "", "num_ivy_arrays_on_dev"], [194, 2, 1, "", "one_hot"], [194, 2, 1, "", "ones"], [194, 2, 1, "", "ones_like"], [194, 2, 1, "", "outer"], [194, 2, 1, "", "outputs_to_ivy_arrays"], [194, 2, 1, "", "percent_used_mem_on_dev"], [194, 2, 1, "", "pinv"], [194, 2, 1, "", "print_all_arrays_in_memory"], [194, 2, 1, "", "print_all_ivy_arrays_on_dev"], [194, 2, 1, "", "promote_types"], [194, 2, 1, "", "qr"], [194, 2, 1, "", "queue_timeout"], [194, 2, 1, "", "randint"], [194, 2, 1, "", "random_normal"], [194, 2, 1, "", "relu"], [194, 2, 1, "", "result_type"], [194, 2, 1, "", "scaled_dot_product_attention"], [194, 2, 1, "", "scatter_flat"], [194, 2, 1, "", "scatter_nd"], [194, 2, 1, "", "seed"], [194, 2, 1, "", "set_default_device"], [194, 2, 1, "", "set_default_dtype"], [194, 2, 1, "", "set_default_float_dtype"], [194, 2, 1, "", "set_default_int_dtype"], [194, 2, 1, "", "set_min_base"], [194, 2, 1, "", "set_min_denominator"], [194, 2, 1, "", "set_queue_timeout"], [194, 2, 1, "", "set_split_factor"], [194, 2, 1, "", "set_tmp_dir"], [194, 2, 1, "", "set_with_grads"], [194, 2, 1, "", "shape_to_tuple"], [194, 2, 1, "", "sigmoid"], [194, 2, 1, "", "slogdet"], [194, 2, 1, "", "softmax"], [194, 2, 1, "", "solve"], [194, 2, 1, "", "split_factor"], [194, 2, 1, "", "split_func_call"], [194, 2, 1, "", "stable_divide"], [194, 2, 1, "", "stable_pow"], [194, 2, 1, "", "static_acos"], [194, 2, 1, "", "static_acosh"], [194, 2, 1, "", "static_all"], [194, 2, 1, "", "static_any"], [194, 2, 1, "", "static_arange"], [194, 2, 1, "", "static_arg_info"], [194, 2, 1, "", "static_arg_names"], [194, 2, 1, "", "static_argmax"], [194, 2, 1, "", "static_argmin"], [194, 2, 1, "", "static_array"], [194, 2, 1, "", "static_array_equal"], [194, 2, 1, "", "static_arrays_equal"], [194, 2, 1, "", "static_as_ivy_dev"], [194, 2, 1, "", "static_as_ivy_dtype"], [194, 2, 1, "", "static_as_native_dev"], [194, 2, 1, "", "static_as_native_dtype"], [194, 2, 1, "", "static_asarray"], [194, 2, 1, "", "static_asin"], [194, 2, 1, "", "static_asinh"], [194, 2, 1, "", "static_assert_supports_inplace"], [194, 2, 1, "", "static_astype"], [194, 2, 1, "", "static_atan"], [194, 2, 1, "", "static_atan2"], [194, 2, 1, "", "static_atanh"], [194, 2, 1, "", "static_bitwise_and"], [194, 2, 1, "", "static_bitwise_invert"], [194, 2, 1, "", "static_bitwise_left_shift"], [194, 2, 1, "", "static_bitwise_or"], [194, 2, 1, "", "static_bitwise_right_shift"], [194, 2, 1, "", "static_bitwise_xor"], [194, 2, 1, "", "static_broadcast_arrays"], [194, 2, 1, "", "static_broadcast_to"], [194, 2, 1, "", "static_cache_fn"], [194, 2, 1, "", "static_ceil"], [194, 2, 1, "", "static_cholesky"], [194, 2, 1, "", "static_clear_mem_on_dev"], [194, 2, 1, "", "static_clip_matrix_norm"], [194, 2, 1, "", "static_clip_vector_norm"], [194, 2, 1, "", "static_closest_valid_dtype"], [194, 2, 1, "", "static_concat"], [194, 2, 1, "", "static_constant_pad"], [194, 2, 1, "", "static_container_types"], [194, 2, 1, "", "static_conv1d"], [194, 2, 1, "", "static_conv1d_transpose"], [194, 2, 1, "", "static_conv2d"], [194, 2, 1, "", "static_conv2d_transpose"], [194, 2, 1, "", "static_conv3d"], [194, 2, 1, "", "static_conv3d_transpose"], [194, 2, 1, "", "static_copy_array"], [194, 2, 1, "", "static_cos"], [194, 2, 1, "", "static_cosh"], [194, 2, 1, "", "static_cross"], [194, 2, 1, "", "static_cumprod"], [194, 2, 1, "", "static_cumsum"], [194, 2, 1, "", "static_current_backend"], [194, 2, 1, "", "static_current_backend_str"], [194, 2, 1, "", "static_default"], [194, 2, 1, "", "static_default_device"], [194, 2, 1, "", "static_default_dtype"], [194, 2, 1, "", "static_default_float_dtype"], [194, 2, 1, "", "static_default_int_dtype"], [194, 2, 1, "", "static_depthwise_conv2d"], [194, 2, 1, "", "static_det"], [194, 2, 1, "", "static_dev"], [194, 2, 1, "", "static_dev_clone"], [194, 2, 1, "", "static_dev_clone_array"], [194, 2, 1, "", "static_dev_clone_iter"], [194, 2, 1, "", "static_dev_clone_nest"], [194, 2, 1, "", "static_dev_dist"], [194, 2, 1, "", "static_dev_dist_array"], [194, 2, 1, "", "static_dev_dist_iter"], [194, 2, 1, "", "static_dev_dist_nest"], [194, 2, 1, "", "static_dev_unify"], [194, 2, 1, "", "static_dev_unify_array"], [194, 2, 1, "", "static_dev_unify_iter"], [194, 2, 1, "", "static_dev_unify_nest"], [194, 2, 1, "", "static_dev_util"], [194, 2, 1, "", "static_diagonal"], [194, 2, 1, "", "static_dropout"], [194, 2, 1, "", "static_dtype"], [194, 2, 1, "", "static_dtype_bits"], [194, 2, 1, "", "static_eigh"], [194, 2, 1, "", "static_eigvalsh"], [194, 2, 1, "", "static_einops_rearrange"], [194, 2, 1, "", "static_einops_reduce"], [194, 2, 1, "", "static_einops_repeat"], [194, 2, 1, "", "static_einsum"], [194, 2, 1, "", "static_empty"], [194, 2, 1, "", "static_empty_like"], [194, 2, 1, "", "static_equal"], [194, 2, 1, "", "static_erf"], [194, 2, 1, "", "static_execute_with_gradients"], [194, 2, 1, "", "static_exists"], [194, 2, 1, "", "static_exp"], [194, 2, 1, "", "static_expand_dims"], [194, 2, 1, "", "static_expm1"], [194, 2, 1, "", "static_eye"], [194, 2, 1, "", "static_finfo"], [194, 2, 1, "", "static_flip"], [194, 2, 1, "", "static_floor"], [194, 2, 1, "", "static_floor_divide"], [194, 2, 1, "", "static_floormod"], [194, 2, 1, "", "static_fourier_encode"], [194, 2, 1, "", "static_from_dlpack"], [194, 2, 1, "", "static_full"], [194, 2, 1, "", "static_full_like"], [194, 2, 1, "", "static_function_supported_dtypes"], [194, 2, 1, "", "static_function_unsupported_dtypes"], [194, 2, 1, "", "static_gather"], [194, 2, 1, "", "static_gelu"], [194, 2, 1, "", "static_get_all_arrays_in_memory"], [194, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [194, 2, 1, "", "static_get_min_base"], [194, 2, 1, "", "static_get_min_denominator"], [194, 2, 1, "", "static_get_num_dims"], [194, 2, 1, "", "static_get_referrers_recursive"], [194, 2, 1, "", "static_gpu_is_available"], [194, 2, 1, "", "static_greater"], [194, 2, 1, "", "static_greater_equal"], [194, 2, 1, "", "static_handle_nestable"], [194, 2, 1, "", "static_handle_out_argument"], [194, 2, 1, "", "static_has_nans"], [194, 2, 1, "", "static_iinfo"], [194, 2, 1, "", "static_indices_where"], [194, 2, 1, "", "static_infer_device"], [194, 2, 1, "", "static_infer_dtype"], [194, 2, 1, "", "static_inplace_arrays_supported"], [194, 2, 1, "", "static_inplace_decrement"], [194, 2, 1, "", "static_inplace_increment"], [194, 2, 1, "", "static_inplace_update"], [194, 2, 1, "", "static_inplace_variables_supported"], [194, 2, 1, "", "static_inputs_to_native_arrays"], [194, 2, 1, "", "static_inv"], [194, 2, 1, "", "static_invalid_dtype"], [194, 2, 1, "", "static_is_array"], [194, 2, 1, "", "static_is_float_dtype"], [194, 2, 1, "", "static_is_int_dtype"], [194, 2, 1, "", "static_is_ivy_array"], [194, 2, 1, "", "static_is_ivy_container"], [194, 2, 1, "", "static_is_native_array"], [194, 2, 1, "", "static_isfinite"], [194, 2, 1, "", "static_isinf"], [194, 2, 1, "", "static_isnan"], [194, 2, 1, "", "static_layer_norm"], [194, 2, 1, "", "static_leaky_relu"], [194, 2, 1, "", "static_less"], [194, 2, 1, "", "static_less_equal"], [194, 2, 1, "", "static_linear"], [194, 2, 1, "", "static_linspace"], [194, 2, 1, "", "static_log"], [194, 2, 1, "", "static_log10"], [194, 2, 1, "", "static_log1p"], [194, 2, 1, "", "static_log2"], [194, 2, 1, "", "static_logaddexp"], [194, 2, 1, "", "static_logical_and"], [194, 2, 1, "", "static_logical_not"], [194, 2, 1, "", "static_logical_or"], [194, 2, 1, "", "static_logical_xor"], [194, 2, 1, "", "static_logspace"], [194, 2, 1, "", "static_lstm_update"], [194, 2, 1, "", "static_match_kwargs"], [194, 2, 1, "", "static_matmul"], [194, 2, 1, "", "static_matrix_norm"], [194, 2, 1, "", "static_matrix_power"], [194, 2, 1, "", "static_matrix_rank"], [194, 2, 1, "", "static_matrix_transpose"], [194, 2, 1, "", "static_max"], [194, 2, 1, "", "static_maximum"], [194, 2, 1, "", "static_mean"], [194, 2, 1, "", "static_meshgrid"], [194, 2, 1, "", "static_min"], [194, 2, 1, "", "static_minimum"], [194, 2, 1, "", "static_multi_head_attention"], [194, 2, 1, "", "static_multinomial"], [194, 2, 1, "", "static_multiprocessing"], [194, 2, 1, "", "static_native_array"], [194, 2, 1, "", "static_negative"], [194, 2, 1, "", "static_nonzero"], [194, 2, 1, "", "static_not_equal"], [194, 2, 1, "", "static_num_arrays_in_memory"], [194, 2, 1, "", "static_num_cpu_cores"], [194, 2, 1, "", "static_num_gpus"], [194, 2, 1, "", "static_num_ivy_arrays_on_dev"], [194, 2, 1, "", "static_one_hot"], [194, 2, 1, "", "static_ones"], [194, 2, 1, "", "static_ones_like"], [194, 2, 1, "", "static_outer"], [194, 2, 1, "", "static_outputs_to_ivy_arrays"], [194, 2, 1, "", "static_percent_used_mem_on_dev"], [194, 2, 1, "", "static_permute_dims"], [194, 2, 1, "", "static_pinv"], [194, 2, 1, "", "static_positive"], [194, 2, 1, "", "static_pow"], [194, 2, 1, "", "static_print_all_arrays_in_memory"], [194, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [194, 2, 1, "", "static_prod"], [194, 2, 1, "", "static_promote_types"], [194, 2, 1, "", "static_qr"], [194, 2, 1, "", "static_queue_timeout"], [194, 2, 1, "", "static_random_normal"], [194, 2, 1, "", "static_relu"], [194, 2, 1, "", "static_remainder"], [194, 2, 1, "", "static_repeat"], [194, 2, 1, "", "static_reshape"], [194, 2, 1, "", "static_result_type"], [194, 2, 1, "", "static_round"], [194, 2, 1, "", "static_scaled_dot_product_attention"], [194, 2, 1, "", "static_scatter_flat"], [194, 2, 1, "", "static_scatter_nd"], [194, 2, 1, "", "static_seed"], [194, 2, 1, "", "static_set_default_device"], [194, 2, 1, "", "static_set_default_dtype"], [194, 2, 1, "", "static_set_default_float_dtype"], [194, 2, 1, "", "static_set_default_int_dtype"], [194, 2, 1, "", "static_set_min_base"], [194, 2, 1, "", "static_set_min_denominator"], [194, 2, 1, "", "static_set_queue_timeout"], [194, 2, 1, "", "static_set_split_factor"], [194, 2, 1, "", "static_set_tmp_dir"], [194, 2, 1, "", "static_set_with_grads"], [194, 2, 1, "", "static_shape"], [194, 2, 1, "", "static_shape_to_tuple"], [194, 2, 1, "", "static_shuffle"], [194, 2, 1, "", "static_sigmoid"], [194, 2, 1, "", "static_sign"], [194, 2, 1, "", "static_sin"], [194, 2, 1, "", "static_sinh"], [194, 2, 1, "", "static_slogdet"], [194, 2, 1, "", "static_softmax"], [194, 2, 1, "", "static_solve"], [194, 2, 1, "", "static_split"], [194, 2, 1, "", "static_split_factor"], [194, 2, 1, "", "static_split_func_call"], [194, 2, 1, "", "static_sqrt"], [194, 2, 1, "", "static_square"], [194, 2, 1, "", "static_squeeze"], [194, 2, 1, "", "static_stable_divide"], [194, 2, 1, "", "static_stable_pow"], [194, 2, 1, "", "static_stack"], [194, 2, 1, "", "static_std"], [194, 2, 1, "", "static_stop_gradient"], [194, 2, 1, "", "static_sum"], [194, 2, 1, "", "static_supports_inplace"], [194, 2, 1, "", "static_svd"], [194, 2, 1, "", "static_svdvals"], [194, 2, 1, "", "static_swapaxes"], [194, 2, 1, "", "static_tensordot"], [194, 2, 1, "", "static_tile"], [194, 2, 1, "", "static_tmp_dir"], [194, 2, 1, "", "static_to_device"], [194, 2, 1, "", "static_to_list"], [194, 2, 1, "", "static_to_native_arrays_and_back"], [194, 2, 1, "", "static_to_numpy"], [194, 2, 1, "", "static_to_scalar"], [194, 2, 1, "", "static_total_mem_on_dev"], [194, 2, 1, "", "static_tpu_is_available"], [194, 2, 1, "", "static_trace"], [194, 2, 1, "", "static_tril"], [194, 2, 1, "", "static_triu"], [194, 2, 1, "", "static_trunc"], [194, 2, 1, "", "static_try_else_none"], [194, 2, 1, "", "static_type_promote_arrays"], [194, 2, 1, "", "static_unique_all"], [194, 2, 1, "", "static_unique_inverse"], [194, 2, 1, "", "static_unique_values"], [194, 2, 1, "", "static_unset_default_device"], [194, 2, 1, "", "static_unset_default_dtype"], [194, 2, 1, "", "static_unset_default_float_dtype"], [194, 2, 1, "", "static_unset_default_int_dtype"], [194, 2, 1, "", "static_unset_with_grads"], [194, 2, 1, "", "static_unstack"], [194, 2, 1, "", "static_used_mem_on_dev"], [194, 2, 1, "", "static_valid_dtype"], [194, 2, 1, "", "static_value_is_nan"], [194, 2, 1, "", "static_var"], [194, 2, 1, "", "static_variable"], [194, 2, 1, "", "static_variable_data"], [194, 2, 1, "", "static_vecdot"], [194, 2, 1, "", "static_vector_norm"], [194, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [194, 2, 1, "", "static_where"], [194, 2, 1, "", "static_with_grads"], [194, 2, 1, "", "static_zero_pad"], [194, 2, 1, "", "static_zeros"], [194, 2, 1, "", "static_zeros_like"], [194, 2, 1, "", "stop_gradient"], [194, 2, 1, "", "supports_inplace"], [194, 2, 1, "", "svd"], [194, 2, 1, "", "svdvals"], [194, 2, 1, "", "tensordot"], [194, 2, 1, "", "tmp_dir"], [194, 2, 1, "", "to_native_arrays_and_back"], [194, 2, 1, "", "to_scalar"], [194, 2, 1, "", "total_mem_on_dev"], [194, 2, 1, "", "tpu_is_available"], [194, 2, 1, "", "trace"], [194, 2, 1, "", "tril"], [194, 2, 1, "", "triu"], [194, 2, 1, "", "try_else_none"], [194, 2, 1, "", "type_promote_arrays"], [194, 2, 1, "", "unique_all"], [194, 2, 1, "", "unique_inverse"], [194, 2, 1, "", "unique_values"], [194, 2, 1, "", "unset_default_device"], [194, 2, 1, "", "unset_default_dtype"], [194, 2, 1, "", "unset_default_float_dtype"], [194, 2, 1, "", "unset_default_int_dtype"], [194, 2, 1, "", "unset_with_grads"], [194, 2, 1, "", "used_mem_on_dev"], [194, 2, 1, "", "valid_dtype"], [194, 2, 1, "", "value_is_nan"], [194, 2, 1, "", "variable"], [194, 2, 1, "", "variable_data"], [194, 2, 1, "", "vecdot"], [194, 2, 1, "", "vector_to_skew_symmetric_matrix"], [194, 2, 1, "", "where"], [194, 2, 1, "", "with_grads"], [194, 2, 1, "", "zeros"], [194, 2, 1, "", "zeros_like"]], "ivy.container.container.MultiDevContainer": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "at_dev"], [195, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[196, 3, 1, "", "__add__"], [196, 3, 1, "", "__init__"], [196, 3, 1, "", "__radd__"], [561, 3, 1, "", "abs"], [568, 3, 1, "", "acos"], [632, 3, 1, "", "acosh"], [874, 3, 1, "", "adam_step"], [878, 3, 1, "", "adam_update"], [706, 3, 1, "", "add"], [203, 3, 1, "", "add_ivy_container_instance_methods"], [1167, 3, 1, "", "all"], [799, 3, 1, "", "all_equal"], [1171, 3, 1, "", "any"], [1123, 3, 1, "", "argsort"], [579, 3, 1, "", "asin"], [583, 3, 1, "", "asinh"], [210, 3, 1, "", "at_dev"], [211, 3, 1, "", "at_devs"], [593, 3, 1, "", "atan"], [591, 3, 1, "", "atan2"], [791, 3, 1, "", "atanh"], [994, 3, 1, "", "binary_cross_entropy"], [599, 3, 1, "", "bitwise_and"], [603, 3, 1, "", "bitwise_invert"], [607, 3, 1, "", "bitwise_left_shift"], [611, 3, 1, "", "bitwise_or"], [615, 3, 1, "", "bitwise_right_shift"], [619, 3, 1, "", "bitwise_xor"], [482, 3, 1, "", "can_cast"], [623, 3, 1, "", "ceil"], [1010, 3, 1, "", "clip"], [810, 3, 1, "", "clip_vector_norm"], [1015, 3, 1, "", "concat"], [1019, 3, 1, "", "constant_pad"], [632, 3, 1, "", "cos"], [631, 3, 1, "", "cosh"], [999, 3, 1, "", "cross_entropy"], [658, 3, 1, "", "divide"], [1159, 3, 1, "", "einsum"], [666, 3, 1, "", "equal"], [644, 3, 1, "", "erf"], [706, 3, 1, "", "exp"], [1023, 3, 1, "", "expand_dims"], [652, 3, 1, "", "expm1"], [1027, 3, 1, "", "flip"], [658, 3, 1, "", "floor"], [660, 3, 1, "", "floor_divide"], [827, 3, 1, "", "gather_nd"], [883, 3, 1, "", "gradient_descent_update"], [666, 3, 1, "", "greater"], [668, 3, 1, "", "greater_equal"], [887, 3, 1, "", "is_variable"], [672, 3, 1, "", "isfinite"], [676, 3, 1, "", "isinf"], [680, 3, 1, "", "isnan"], [891, 3, 1, "", "lamb_update"], [895, 3, 1, "", "lars_update"], [1092, 3, 1, "", "layer_norm"], [684, 3, 1, "", "less"], [688, 3, 1, "", "less_equal"], [692, 3, 1, "", "log"], [696, 3, 1, "", "log10"], [700, 3, 1, "", "log1p"], [704, 3, 1, "", "log2"], [708, 3, 1, "", "logaddexp"], [712, 3, 1, "", "logical_and"], [716, 3, 1, "", "logical_not"], [720, 3, 1, "", "logical_or"], [724, 3, 1, "", "logical_xor"], [945, 3, 1, "", "matmul"], [1138, 3, 1, "", "max"], [1142, 3, 1, "", "mean"], [1146, 3, 1, "", "min"], [730, 3, 1, "", "multiply"], [735, 3, 1, "", "negative"], [739, 3, 1, "", "not_equal"], [899, 3, 1, "", "optimizer_update"], [1031, 3, 1, "", "permute_dims"], [743, 3, 1, "", "positive"], [747, 3, 1, "", "pow"], [1150, 3, 1, "", "prod"], [1101, 3, 1, "", "random_uniform"], [751, 3, 1, "", "remainder"], [1035, 3, 1, "", "repeat"], [1039, 3, 1, "", "reshape"], [1043, 3, 1, "", "roll"], [755, 3, 1, "", "round"], [759, 3, 1, "", "sign"], [763, 3, 1, "", "sin"], [767, 3, 1, "", "sinh"], [425, 3, 1, "", "softplus"], [1128, 3, 1, "", "sort"], [1004, 3, 1, "", "sparse_cross_entropy"], [771, 3, 1, "", "sqrt"], [775, 3, 1, "", "square"], [1049, 3, 1, "", "squeeze"], [1053, 3, 1, "", "stack"], [563, 3, 1, "", "static_abs"], [876, 3, 1, "", "static_adam_step"], [880, 3, 1, "", "static_adam_update"], [706, 3, 1, "", "static_add"], [801, 3, 1, "", "static_all_equal"], [1125, 3, 1, "", "static_argsort"], [996, 3, 1, "", "static_binary_cross_entropy"], [484, 3, 1, "", "static_can_cast"], [1012, 3, 1, "", "static_clip"], [1001, 3, 1, "", "static_cross_entropy"], [658, 3, 1, "", "static_divide"], [829, 3, 1, "", "static_gather_nd"], [885, 3, 1, "", "static_gradient_descent_update"], [889, 3, 1, "", "static_is_variable"], [893, 3, 1, "", "static_lamb_update"], [897, 3, 1, "", "static_lars_update"], [732, 3, 1, "", "static_multiply"], [901, 3, 1, "", "static_optimizer_update"], [1098, 3, 1, "", "static_randint"], [1103, 3, 1, "", "static_random_uniform"], [1045, 3, 1, "", "static_roll"], [427, 3, 1, "", "static_softplus"], [1130, 3, 1, "", "static_sort"], [1006, 3, 1, "", "static_sparse_cross_entropy"], [778, 3, 1, "", "static_subtract"], [791, 3, 1, "", "static_tan"], [788, 3, 1, "", "static_tanh"], [1114, 3, 1, "", "static_unique_counts"], [1154, 3, 1, "", "std"], [780, 3, 1, "", "subtract"], [1158, 3, 1, "", "sum"], [1057, 3, 1, "", "swapaxes"], [791, 3, 1, "", "tan"], [790, 3, 1, "", "tanh"], [1061, 3, 1, "", "tile"], [794, 3, 1, "", "trunc"], [1116, 3, 1, "", "unique_counts"], [1162, 3, 1, "", "var"], [1065, 3, 1, "", "zero_pad"]], "ivy.container.creation": [[331, 1, 1, "", "ContainerWithCreation"]], "ivy.container.data_type": [[333, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[333, 2, 1, "", "can_cast"], [333, 2, 1, "", "static_can_cast"]], "ivy.container.device": [[335, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[337, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[337, 2, 1, "", "abs"], [337, 2, 1, "", "acos"], [337, 2, 1, "", "acosh"], [337, 2, 1, "", "add"], [337, 2, 1, "", "asin"], [337, 2, 1, "", "asinh"], [337, 2, 1, "", "atan"], [337, 2, 1, "", "atan2"], [337, 2, 1, "", "atanh"], [337, 2, 1, "", "bitwise_and"], [337, 2, 1, "", "bitwise_invert"], [337, 2, 1, "", "bitwise_left_shift"], [337, 2, 1, "", "bitwise_or"], [337, 2, 1, "", "bitwise_right_shift"], [337, 2, 1, "", "bitwise_xor"], [337, 2, 1, "", "ceil"], [337, 2, 1, "", "cos"], [337, 2, 1, "", "cosh"], [337, 2, 1, "", "divide"], [337, 2, 1, "", "equal"], [337, 2, 1, "", "erf"], [337, 2, 1, "", "exp"], [337, 2, 1, "", "expm1"], [337, 2, 1, "", "floor"], [337, 2, 1, "", "floor_divide"], [337, 2, 1, "", "greater"], [337, 2, 1, "", "greater_equal"], [337, 2, 1, "", "isfinite"], [337, 2, 1, "", "isinf"], [337, 2, 1, "", "isnan"], [337, 2, 1, "", "less"], [337, 2, 1, "", "less_equal"], [337, 2, 1, "", "log"], [337, 2, 1, "", "log10"], [337, 2, 1, "", "log1p"], [337, 2, 1, "", "log2"], [337, 2, 1, "", "logaddexp"], [337, 2, 1, "", "logical_and"], [337, 2, 1, "", "logical_not"], [337, 2, 1, "", "logical_or"], [337, 2, 1, "", "logical_xor"], [337, 2, 1, "", "multiply"], [337, 2, 1, "", "negative"], [337, 2, 1, "", "not_equal"], [337, 2, 1, "", "positive"], [337, 2, 1, "", "pow"], [337, 2, 1, "", "remainder"], [337, 2, 1, "", "round"], [337, 2, 1, "", "sign"], [337, 2, 1, "", "sin"], [337, 2, 1, "", "sinh"], [337, 2, 1, "", "sqrt"], [337, 2, 1, "", "square"], [337, 2, 1, "", "static_abs"], [337, 2, 1, "", "static_add"], [337, 2, 1, "", "static_divide"], [337, 2, 1, "", "static_multiply"], [337, 2, 1, "", "static_subtract"], [337, 2, 1, "", "static_tan"], [337, 2, 1, "", "static_tanh"], [337, 2, 1, "", "subtract"], [337, 2, 1, "", "tan"], [337, 2, 1, "", "tanh"], [337, 2, 1, "", "trunc"]], "ivy.container.general": [[339, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[339, 2, 1, "", "all_equal"], [339, 2, 1, "", "clip_vector_norm"], [339, 2, 1, "", "gather_nd"], [339, 2, 1, "", "static_all_equal"], [339, 2, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[341, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[341, 2, 1, "", "adam_step"], [341, 2, 1, "", "adam_update"], [341, 2, 1, "", "gradient_descent_update"], [341, 2, 1, "", "is_variable"], [341, 2, 1, "", "lamb_update"], [341, 2, 1, "", "lars_update"], [341, 2, 1, "", "optimizer_update"], [341, 2, 1, "", "static_adam_step"], [341, 2, 1, "", "static_adam_update"], [341, 2, 1, "", "static_gradient_descent_update"], [341, 2, 1, "", "static_is_variable"], [341, 2, 1, "", "static_lamb_update"], [341, 2, 1, "", "static_lars_update"], [341, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[343, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[345, 1, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[347, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[347, 2, 1, "", "matmul"]], "ivy.container.losses": [[349, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[349, 2, 1, "", "binary_cross_entropy"], [349, 2, 1, "", "cross_entropy"], [349, 2, 1, "", "sparse_cross_entropy"], [349, 2, 1, "", "static_binary_cross_entropy"], [349, 2, 1, "", "static_cross_entropy"], [349, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[351, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[351, 2, 1, "", "clip"], [351, 2, 1, "", "concat"], [351, 2, 1, "", "constant_pad"], [351, 2, 1, "", "expand_dims"], [351, 2, 1, "", "flip"], [351, 2, 1, "", "permute_dims"], [351, 2, 1, "", "repeat"], [351, 2, 1, "", "reshape"], [351, 2, 1, "", "roll"], [351, 2, 1, "", "squeeze"], [351, 2, 1, "", "stack"], [351, 2, 1, "", "static_clip"], [351, 2, 1, "", "static_roll"], [351, 2, 1, "", "swapaxes"], [351, 2, 1, "", "tile"], [351, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[353, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[353, 2, 1, "", "layer_norm"]], "ivy.container.random": [[355, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[355, 2, 1, "", "random_uniform"], [355, 2, 1, "", "static_randint"], [355, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[357, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[359, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[359, 2, 1, "", "static_unique_counts"], [359, 2, 1, "", "unique_counts"]], "ivy.container.sorting": [[361, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[361, 2, 1, "", "argsort"], [361, 2, 1, "", "sort"], [361, 2, 1, "", "static_argsort"], [361, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[363, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[363, 2, 1, "", "einsum"], [363, 2, 1, "", "max"], [363, 2, 1, "", "mean"], [363, 2, 1, "", "min"], [363, 2, 1, "", "prod"], [363, 2, 1, "", "std"], [363, 2, 1, "", "sum"], [363, 2, 1, "", "var"]], "ivy.container.utility": [[365, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[365, 2, 1, "", "all"], [365, 2, 1, "", "any"]], "ivy.container.wrapping": [[367, 3, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[408, 3, 1, "", "handle_nestable"], [409, 3, 1, "", "handle_out_argument"], [410, 3, 1, "", "infer_device"], [411, 3, 1, "", "infer_dtype"], [412, 3, 1, "", "inputs_to_ivy_arrays"], [413, 3, 1, "", "inputs_to_native_arrays"], [414, 3, 1, "", "outputs_to_ivy_arrays"], [415, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[417, 0, 0, "-", "activations"], [429, 0, 0, "-", "compilation"], [431, 0, 0, "-", "constants"], [432, 0, 0, "-", "creation"], [471, 0, 0, "-", "data_type"], [508, 0, 0, "-", "device"], [558, 0, 0, "-", "elementwise"], [796, 0, 0, "-", "general"], [870, 0, 0, "-", "gradients"], [908, 0, 0, "-", "layers"], [921, 0, 0, "-", "linear_algebra"], [991, 0, 0, "-", "losses"], [1007, 0, 0, "-", "manipulation"], [1067, 0, 0, "-", "meta"], [1071, 0, 0, "-", "nest"], [1089, 0, 0, "-", "norms"], [1094, 0, 0, "-", "random"], [1106, 0, 0, "-", "searching"], [1111, 0, 0, "-", "set"], [1120, 0, 0, "-", "sorting"], [1131, 0, 0, "-", "statistical"], [1164, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[418, 3, 1, "", "gelu"], [419, 3, 1, "", "leaky_relu"], [420, 3, 1, "", "relu"], [421, 3, 1, "", "sigmoid"], [422, 3, 1, "", "softmax"], [426, 3, 1, "", "softplus"], [428, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[430, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[431, 5, 1, "", "e"], [431, 5, 1, "", "inf"], [431, 5, 1, "", "nan"], [431, 5, 1, "", "newaxis"], [431, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[433, 3, 1, "", "arange"], [432, 3, 1, "", "array"], [436, 3, 1, "", "asarray"], [437, 3, 1, "", "empty"], [440, 3, 1, "", "empty_like"], [441, 3, 1, "", "eye"], [444, 3, 1, "", "from_dlpack"], [445, 3, 1, "", "full"], [448, 3, 1, "", "full_like"], [449, 3, 1, "", "linspace"], [450, 3, 1, "", "logspace"], [453, 3, 1, "", "meshgrid"], [456, 3, 1, "", "native_array"], [457, 3, 1, "", "ones"], [460, 3, 1, "", "ones_like"], [463, 3, 1, "", "tril"], [466, 3, 1, "", "triu"], [467, 3, 1, "", "zeros"], [470, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[471, 1, 1, "", "DefaultDtype"], [471, 1, 1, "", "DefaultFloatDtype"], [471, 1, 1, "", "DefaultIntDtype"], [475, 3, 1, "", "as_ivy_dtype"], [476, 3, 1, "", "as_native_dtype"], [477, 3, 1, "", "astype"], [478, 3, 1, "", "broadcast_arrays"], [479, 3, 1, "", "broadcast_to"], [483, 3, 1, "", "can_cast"], [485, 3, 1, "", "closest_valid_dtype"], [486, 3, 1, "", "default_dtype"], [487, 3, 1, "", "default_float_dtype"], [488, 3, 1, "", "default_int_dtype"], [489, 3, 1, "", "dtype"], [490, 3, 1, "", "dtype_bits"], [491, 3, 1, "", "finfo"], [492, 3, 1, "", "function_supported_dtypes"], [493, 3, 1, "", "function_unsupported_dtypes"], [494, 3, 1, "", "iinfo"], [495, 3, 1, "", "invalid_dtype"], [496, 3, 1, "", "is_float_dtype"], [497, 3, 1, "", "is_int_dtype"], [498, 3, 1, "", "promote_types"], [499, 3, 1, "", "result_type"], [500, 3, 1, "", "set_default_dtype"], [501, 3, 1, "", "set_default_float_dtype"], [502, 3, 1, "", "set_default_int_dtype"], [503, 3, 1, "", "type_promote_arrays"], [504, 3, 1, "", "unset_default_dtype"], [505, 3, 1, "", "unset_default_float_dtype"], [506, 3, 1, "", "unset_default_int_dtype"], [507, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[471, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[471, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[471, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[508, 1, 1, "", "DefaultDevice"], [510, 1, 1, "", "DevClonedItem"], [511, 1, 1, "", "DevClonedIter"], [512, 1, 1, "", "DevClonedNest"], [513, 1, 1, "", "DevDistItem"], [514, 1, 1, "", "DevDistIter"], [515, 1, 1, "", "DevDistNest"], [508, 1, 1, "", "DevManager"], [517, 1, 1, "", "DevMapper"], [518, 1, 1, "", "DevMapperMultiProc"], [508, 1, 1, "", "MultiDev"], [520, 1, 1, "", "MultiDevItem"], [521, 1, 1, "", "MultiDevIter"], [522, 1, 1, "", "MultiDevNest"], [523, 1, 1, "", "Profiler"], [524, 3, 1, "", "as_ivy_dev"], [525, 3, 1, "", "as_native_dev"], [526, 3, 1, "", "clear_mem_on_dev"], [527, 3, 1, "", "default_device"], [528, 3, 1, "", "dev"], [529, 3, 1, "", "dev_clone"], [530, 3, 1, "", "dev_clone_array"], [531, 3, 1, "", "dev_clone_iter"], [532, 3, 1, "", "dev_clone_nest"], [533, 3, 1, "", "dev_dist"], [534, 3, 1, "", "dev_dist_array"], [535, 3, 1, "", "dev_dist_iter"], [536, 3, 1, "", "dev_dist_nest"], [537, 3, 1, "", "dev_unify"], [538, 3, 1, "", "dev_unify_array"], [539, 3, 1, "", "dev_unify_iter"], [540, 3, 1, "", "dev_unify_nest"], [541, 3, 1, "", "dev_util"], [542, 3, 1, "", "get_all_ivy_arrays_on_dev"], [543, 3, 1, "", "gpu_is_available"], [544, 3, 1, "", "num_cpu_cores"], [545, 3, 1, "", "num_gpus"], [546, 3, 1, "", "num_ivy_arrays_on_dev"], [547, 3, 1, "", "percent_used_mem_on_dev"], [548, 3, 1, "", "print_all_ivy_arrays_on_dev"], [549, 3, 1, "", "set_default_device"], [550, 3, 1, "", "set_split_factor"], [551, 3, 1, "", "split_factor"], [552, 3, 1, "", "split_func_call"], [553, 3, 1, "", "to_device"], [554, 3, 1, "", "total_mem_on_dev"], [555, 3, 1, "", "tpu_is_available"], [556, 3, 1, "", "unset_default_device"], [557, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[508, 2, 1, "", "__enter__"], [508, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[508, 2, 1, "", "__init__"], [508, 2, 1, "", "da_tune_step"], [508, 4, 1, "", "dim_size"], [508, 2, 1, "", "ds_tune_step"], [508, 2, 1, "", "map"], [508, 2, 1, "", "repeated_config_check"], [508, 4, 1, "", "tune_step"], [508, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[517, 2, 1, "", "__init__"], [517, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[518, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[508, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[520, 2, 1, "", "__init__"], [520, 2, 1, "", "items"], [520, 2, 1, "", "keys"], [520, 4, 1, "", "shape"], [520, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[521, 2, 1, "", "__init__"], [521, 2, 1, "", "at_dev"], [521, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[522, 2, 1, "", "__init__"], [522, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[523, 2, 1, "", "__init__"], [523, 2, 1, "", "start"], [523, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[562, 3, 1, "", "abs"], [564, 3, 1, "", "acos"], [632, 3, 1, "", "acosh"], [572, 3, 1, "", "add"], [580, 3, 1, "", "asin"], [584, 3, 1, "", "asinh"], [585, 3, 1, "", "atan"], [592, 3, 1, "", "atan2"], [791, 3, 1, "", "atanh"], [600, 3, 1, "", "bitwise_and"], [604, 3, 1, "", "bitwise_invert"], [608, 3, 1, "", "bitwise_left_shift"], [612, 3, 1, "", "bitwise_or"], [616, 3, 1, "", "bitwise_right_shift"], [620, 3, 1, "", "bitwise_xor"], [624, 3, 1, "", "ceil"], [625, 3, 1, "", "cos"], [629, 3, 1, "", "cosh"], [633, 3, 1, "", "divide"], [638, 3, 1, "", "equal"], [645, 3, 1, "", "erf"], [646, 3, 1, "", "exp"], [653, 3, 1, "", "expm1"], [654, 3, 1, "", "floor"], [661, 3, 1, "", "floor_divide"], [662, 3, 1, "", "greater"], [669, 3, 1, "", "greater_equal"], [673, 3, 1, "", "isfinite"], [677, 3, 1, "", "isinf"], [681, 3, 1, "", "isnan"], [685, 3, 1, "", "less"], [689, 3, 1, "", "less_equal"], [693, 3, 1, "", "log"], [697, 3, 1, "", "log10"], [701, 3, 1, "", "log1p"], [705, 3, 1, "", "log2"], [709, 3, 1, "", "logaddexp"], [713, 3, 1, "", "logical_and"], [717, 3, 1, "", "logical_not"], [721, 3, 1, "", "logical_or"], [725, 3, 1, "", "logical_xor"], [726, 3, 1, "", "maximum"], [727, 3, 1, "", "minimum"], [731, 3, 1, "", "multiply"], [736, 3, 1, "", "negative"], [740, 3, 1, "", "not_equal"], [744, 3, 1, "", "positive"], [748, 3, 1, "", "pow"], [752, 3, 1, "", "remainder"], [756, 3, 1, "", "round"], [760, 3, 1, "", "sign"], [764, 3, 1, "", "sin"], [768, 3, 1, "", "sinh"], [772, 3, 1, "", "sqrt"], [776, 3, 1, "", "square"], [781, 3, 1, "", "subtract"], [782, 3, 1, "", "tan"], [787, 3, 1, "", "tanh"], [795, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[800, 3, 1, "", "all_equal"], [802, 3, 1, "", "arg_info"], [803, 3, 1, "", "arg_names"], [804, 3, 1, "", "array_equal"], [805, 3, 1, "", "arrays_equal"], [806, 3, 1, "", "assert_supports_inplace"], [807, 3, 1, "", "cache_fn"], [808, 3, 1, "", "clip_matrix_norm"], [811, 3, 1, "", "clip_vector_norm"], [812, 3, 1, "", "container_types"], [813, 3, 1, "", "copy_array"], [814, 3, 1, "", "cumprod"], [815, 3, 1, "", "cumsum"], [816, 3, 1, "", "current_backend_str"], [817, 3, 1, "", "default"], [818, 3, 1, "", "einops_rearrange"], [819, 3, 1, "", "einops_reduce"], [820, 3, 1, "", "einops_repeat"], [821, 3, 1, "", "exists"], [822, 3, 1, "", "floormod"], [823, 3, 1, "", "fourier_encode"], [824, 3, 1, "", "gather"], [828, 3, 1, "", "gather_nd"], [830, 3, 1, "", "get_all_arrays_in_memory"], [831, 3, 1, "", "get_min_base"], [832, 3, 1, "", "get_min_denominator"], [833, 3, 1, "", "get_num_dims"], [834, 3, 1, "", "get_referrers_recursive"], [835, 3, 1, "", "has_nans"], [836, 3, 1, "", "indices_where"], [837, 3, 1, "", "inplace_arrays_supported"], [838, 3, 1, "", "inplace_decrement"], [839, 3, 1, "", "inplace_increment"], [840, 3, 1, "", "inplace_update"], [841, 3, 1, "", "inplace_variables_supported"], [842, 3, 1, "", "is_array"], [843, 3, 1, "", "is_ivy_array"], [844, 3, 1, "", "is_ivy_container"], [845, 3, 1, "", "is_native_array"], [846, 3, 1, "", "match_kwargs"], [847, 3, 1, "", "multiprocessing"], [848, 3, 1, "", "num_arrays_in_memory"], [849, 3, 1, "", "one_hot"], [850, 3, 1, "", "print_all_arrays_in_memory"], [851, 3, 1, "", "queue_timeout"], [852, 3, 1, "", "scatter_flat"], [853, 3, 1, "", "scatter_nd"], [854, 3, 1, "", "set_min_base"], [855, 3, 1, "", "set_min_denominator"], [856, 3, 1, "", "set_queue_timeout"], [857, 3, 1, "", "set_tmp_dir"], [858, 3, 1, "", "shape"], [859, 3, 1, "", "shape_to_tuple"], [860, 3, 1, "", "stable_divide"], [861, 3, 1, "", "stable_pow"], [862, 3, 1, "", "supports_inplace"], [863, 3, 1, "", "tmp_dir"], [864, 3, 1, "", "to_list"], [865, 3, 1, "", "to_numpy"], [866, 3, 1, "", "to_scalar"], [867, 3, 1, "", "try_else_none"], [868, 3, 1, "", "unstack"], [869, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[870, 1, 1, "", "GradientTracking"], [875, 3, 1, "", "adam_step"], [879, 3, 1, "", "adam_update"], [881, 3, 1, "", "execute_with_gradients"], [884, 3, 1, "", "gradient_descent_update"], [888, 3, 1, "", "is_variable"], [892, 3, 1, "", "lamb_update"], [896, 3, 1, "", "lars_update"], [900, 3, 1, "", "optimizer_update"], [902, 3, 1, "", "set_with_grads"], [903, 3, 1, "", "stop_gradient"], [904, 3, 1, "", "unset_with_grads"], [905, 3, 1, "", "variable"], [906, 3, 1, "", "variable_data"], [907, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[870, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[909, 3, 1, "", "conv1d"], [910, 3, 1, "", "conv1d_transpose"], [911, 3, 1, "", "conv2d"], [912, 3, 1, "", "conv2d_transpose"], [913, 3, 1, "", "conv3d"], [914, 3, 1, "", "conv3d_transpose"], [915, 3, 1, "", "depthwise_conv2d"], [916, 3, 1, "", "dropout"], [917, 3, 1, "", "linear"], [918, 3, 1, "", "lstm_update"], [919, 3, 1, "", "multi_head_attention"], [920, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[924, 3, 1, "", "cholesky"], [927, 3, 1, "", "cross"], [928, 3, 1, "", "det"], [933, 3, 1, "", "diagonal"], [936, 3, 1, "", "eigh"], [939, 3, 1, "", "eigvalsh"], [940, 3, 1, "", "inv"], [946, 3, 1, "", "matmul"], [949, 3, 1, "", "matrix_norm"], [950, 3, 1, "", "matrix_power"], [953, 3, 1, "", "matrix_rank"], [956, 3, 1, "", "matrix_transpose"], [959, 3, 1, "", "outer"], [962, 3, 1, "", "pinv"], [965, 3, 1, "", "qr"], [966, 3, 1, "", "slogdet"], [969, 3, 1, "", "solve"], [970, 3, 1, "", "svd"], [975, 3, 1, "", "svdvals"], [978, 3, 1, "", "tensordot"], [981, 3, 1, "", "trace"], [984, 3, 1, "", "vecdot"], [987, 3, 1, "", "vector_norm"], [990, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[995, 3, 1, "", "binary_cross_entropy"], [1000, 3, 1, "", "cross_entropy"], [1005, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1011, 3, 1, "", "clip"], [1016, 3, 1, "", "concat"], [1020, 3, 1, "", "constant_pad"], [1024, 3, 1, "", "expand_dims"], [1028, 3, 1, "", "flip"], [1032, 3, 1, "", "permute_dims"], [1036, 3, 1, "", "repeat"], [1040, 3, 1, "", "reshape"], [1044, 3, 1, "", "roll"], [1046, 3, 1, "", "split"], [1050, 3, 1, "", "squeeze"], [1054, 3, 1, "", "stack"], [1058, 3, 1, "", "swapaxes"], [1062, 3, 1, "", "tile"], [1066, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1068, 3, 1, "", "fomaml_step"], [1069, 3, 1, "", "maml_step"], [1070, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1072, 3, 1, "", "all_nested_indices"], [1073, 3, 1, "", "copy_nest"], [1074, 3, 1, "", "index_nest"], [1075, 3, 1, "", "insert_into_nest_at_index"], [1076, 3, 1, "", "insert_into_nest_at_indices"], [1077, 3, 1, "", "map"], [1078, 3, 1, "", "map_nest_at_index"], [1079, 3, 1, "", "map_nest_at_indices"], [1080, 3, 1, "", "multi_index_nest"], [1081, 3, 1, "", "nested_any"], [1082, 3, 1, "", "nested_indices_where"], [1083, 3, 1, "", "nested_map"], [1084, 3, 1, "", "nested_multi_map"], [1085, 3, 1, "", "prune_nest_at_index"], [1086, 3, 1, "", "prune_nest_at_indices"], [1087, 3, 1, "", "set_nest_at_index"], [1088, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1093, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1095, 3, 1, "", "multinomial"], [1097, 3, 1, "", "randint"], [1099, 3, 1, "", "random_normal"], [1102, 3, 1, "", "random_uniform"], [1104, 3, 1, "", "seed"], [1105, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1107, 3, 1, "", "argmax"], [1108, 3, 1, "", "argmin"], [1109, 3, 1, "", "nonzero"], [1110, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[1112, 3, 1, "", "unique_all"], [1117, 3, 1, "", "unique_counts"], [1118, 3, 1, "", "unique_inverse"], [1119, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1124, 3, 1, "", "argsort"], [1129, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1159, 3, 1, "", "einsum"], [1139, 3, 1, "", "max"], [1143, 3, 1, "", "mean"], [1147, 3, 1, "", "min"], [1151, 3, 1, "", "prod"], [1155, 3, 1, "", "std"], [1156, 3, 1, "", "sum"], [1163, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[1168, 3, 1, "", "all"], [1172, 3, 1, "", "any"]], "ivy.inspection": [[1177, 3, 1, "", "add_array_specs"], [1178, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[1180, 0, 0, "-", "activations"], [1183, 0, 0, "-", "converters"], [1185, 0, 0, "-", "initializers"], [1194, 0, 0, "-", "layers"], [1206, 0, 0, "-", "module"], [1208, 0, 0, "-", "norms"], [1210, 0, 0, "-", "optimizers"], [1216, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1181, 1, 1, "", "GEGLU"], [1182, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1181, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1182, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1184, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1185, 1, 1, "", "Constant"], [1187, 1, 1, "", "FirstLayerSiren"], [1188, 1, 1, "", "GlorotUniform"], [1185, 1, 1, "", "KaimingNormal"], [1190, 1, 1, "", "Ones"], [1191, 1, 1, "", "Siren"], [1185, 1, 1, "", "Uniform"], [1193, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1185, 2, 1, "", "__init__"], [1185, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1187, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1188, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1185, 2, 1, "", "__init__"], [1185, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1190, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1191, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1185, 2, 1, "", "__init__"], [1185, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1193, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1195, 1, 1, "", "Conv1D"], [1196, 1, 1, "", "Conv1DTranspose"], [1197, 1, 1, "", "Conv2D"], [1198, 1, 1, "", "Conv2DTranspose"], [1199, 1, 1, "", "Conv3D"], [1200, 1, 1, "", "Conv3DTranspose"], [1201, 1, 1, "", "DepthwiseConv2D"], [1202, 1, 1, "", "Dropout"], [1203, 1, 1, "", "LSTM"], [1204, 1, 1, "", "Linear"], [1205, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1195, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1196, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1197, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1198, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1199, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1200, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1201, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1202, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1203, 2, 1, "", "__init__"], [1203, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1204, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1205, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1207, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1207, 2, 1, "", "__init__"], [1207, 2, 1, "", "build"], [1207, 4, 1, "", "build_mode"], [1207, 4, 1, "", "built"], [1207, 2, 1, "", "check_submod_rets"], [1207, 2, 1, "", "get_mod_key"], [1207, 2, 1, "", "mod_depth"], [1207, 2, 1, "", "mod_height"], [1207, 2, 1, "", "mod_with_top_mod_key_chain"], [1207, 2, 1, "", "save_weights"], [1207, 2, 1, "", "show_mod_in_top_mod"], [1207, 2, 1, "", "show_structure"], [1207, 2, 1, "", "show_v_in_top_v"], [1207, 2, 1, "", "sub_mods"], [1207, 2, 1, "", "track_submod_call_order"], [1207, 2, 1, "", "track_submod_rets"], [1207, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1209, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1209, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1211, 1, 1, "", "Adam"], [1212, 1, 1, "", "LAMB"], [1213, 1, 1, "", "LARS"], [1214, 1, 1, "", "Optimizer"], [1215, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1211, 2, 1, "", "__init__"], [1211, 2, 1, "", "set_state"], [1211, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1212, 2, 1, "", "__init__"], [1212, 2, 1, "", "set_state"], [1212, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1213, 2, 1, "", "__init__"], [1213, 2, 1, "", "set_state"], [1213, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1214, 2, 1, "", "__init__"], [1214, 2, 1, "", "set_state"], [1214, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1215, 2, 1, "", "__init__"], [1215, 2, 1, "", "set_state"], [1215, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1217, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1217, 2, 1, "", "__init__"]], "ivy.verbosity": [[1220, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"activ": [0, 189, 417, 1180], "arraywithactiv": 1, "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 187, 377, 382, 387, 391, 424, 435, 439, 443, 447, 452, 455, 459, 462, 465, 469, 481, 560, 565, 569, 573, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618, 622, 626, 630, 634, 639, 643, 647, 651, 655, 659, 663, 667, 671, 675, 679, 683, 687, 691, 695, 699, 703, 707, 711, 715, 719, 723, 729, 734, 738, 742, 746, 750, 754, 758, 762, 766, 770, 774, 779, 784, 789, 793, 798, 826, 873, 923, 926, 929, 932, 935, 938, 941, 944, 948, 952, 955, 958, 961, 964, 968, 971, 974, 977, 980, 983, 986, 989, 993, 998, 1003, 1009, 1014, 1018, 1022, 1026, 1030, 1034, 1038, 1042, 1048, 1052, 1056, 1060, 1064, 1091, 1115, 1122, 1127, 1133, 1137, 1141, 1145, 1149, 1153, 1157, 1161, 1166, 1170], "method": [2, 196, 383, 391, 392], "ab": [3, 197, 559, 560, 561, 562], "aco": [4, 198, 564, 565, 566, 567], "acosh": [5, 199, 568, 569, 570, 571], "adam_step": [6, 200, 872, 873, 874, 875], "add": [7, 202, 376, 572, 573, 574, 575], "add_ivy_array_instance_method": [8, 171], "all": [9, 204, 1165, 1166, 1167, 1168], "all_equ": [10, 205, 797, 798, 799, 800], "ani": [11, 206, 1169, 1170, 1171, 1172], "argsort": [12, 207, 1121, 1122, 1123, 1124], "asarrai": [13, 434, 435, 436], "asin": [14, 208, 577, 578, 579, 580], "asinh": [15, 209, 581, 582, 583, 584], "atan": [16, 212, 585, 586, 587, 588], "atan2": [17, 213, 589, 590, 591, 592], "atanh": [18, 214, 593, 594, 595, 596], "binary_cross_entropi": [19, 215, 992, 993, 994, 995], "bitwise_and": [20, 216, 597, 598, 599, 600], "bitwise_invert": [21, 217, 601, 602, 603, 604], "bitwise_left_shift": [22, 218, 605, 606, 607, 608], "bitwise_or": [23, 219, 609, 610, 611, 612], "bitwise_right_shift": [24, 220, 613, 614, 615, 616], "bitwise_xor": [25, 221, 617, 618, 619, 620], "can_cast": [26, 222, 480, 481, 482, 483], "ceil": [27, 223, 621, 622, 623, 624], "choleski": [28, 922, 923, 924], "clip": [29, 224, 1008, 1009, 1010, 1011], "concat": [30, 226, 1013, 1014, 1015, 1016], "constant_pad": [31, 227, 1017, 1018, 1019, 1020], "co": [32, 228, 625, 626, 627, 628], "cosh": [33, 229, 629, 630, 631, 632], "cross": [34, 925, 926, 927], "cross_entropi": [35, 230, 997, 998, 999, 1000], "det": [36, 928, 929, 930], "diagon": [37, 931, 932, 933], "divid": [38, 231, 633, 634, 635, 636], "eigh": [39, 934, 935, 936], "eigvalsh": [40, 937, 938, 939], "einsum": [41, 232, 1132, 1133, 1134, 1135], "empty_lik": [42, 438, 439, 440], "equal": [43, 233, 638, 639, 640, 641], "erf": [44, 234, 642, 643, 644, 645], "exp": [45, 235, 646, 647, 648, 649], "expand_dim": [46, 236, 1021, 1022, 1023, 1024], "expm1": [47, 237, 650, 651, 652, 653], "flip": [48, 238, 1025, 1026, 1027, 1028], "floor": [49, 239, 654, 655, 656, 657], "floor_divid": [50, 240, 658, 659, 660, 661], "from_dlpack": [51, 442, 443, 444], "full_lik": [52, 446, 447, 448], "gather_nd": [53, 241, 825, 826, 827, 828], "greater": [54, 243, 662, 663, 664, 665], "greater_equ": [55, 244, 666, 667, 668, 669], "inv": [56, 940, 941, 942], "isfinit": [57, 246, 670, 671, 672, 673], "isinf": [58, 247, 674, 675, 676, 677], "isnan": [59, 248, 678, 679, 680, 681], "layer_norm": [60, 251, 1090, 1091, 1092, 1093], "less": [61, 252, 682, 683, 684, 685], "less_equ": [62, 253, 686, 687, 688, 689], "log": [63, 254, 690, 691, 692, 693], "log10": [64, 255, 694, 695, 696, 697], "log1p": [65, 256, 698, 699, 700, 701], "log2": [66, 257, 702, 703, 704, 705], "logaddexp": [67, 258, 706, 707, 708, 709], "logical_and": [68, 259, 710, 711, 712, 713], "logical_not": [69, 260, 714, 715, 716, 717], "logical_or": [70, 261, 718, 719, 720, 721], "logical_xor": [71, 262, 722, 723, 724, 725], "matmul": [72, 263, 943, 944, 945, 946], "matrix_norm": [73, 947, 948, 949], "matrix_rank": [74, 951, 952, 953], "matrix_transpos": [75, 954, 955, 956], "max": [76, 264, 1136, 1137, 1138, 1139], "mean": [77, 265, 1140, 1141, 1142, 1143], "meshgrid": [78, 451, 452, 453], "min": [79, 266, 1144, 1145, 1146, 1147], "multipli": [80, 267, 728, 729, 730, 731], "native_arrai": [81, 454, 455, 456], "neg": [82, 268, 733, 734, 735, 736], "not_equ": [83, 269, 737, 738, 739, 740], "ones_lik": [84, 458, 459, 460], "outer": [85, 957, 958, 959], "permute_dim": [86, 271, 1029, 1030, 1031, 1032], "pinv": [87, 960, 961, 962], "posit": [88, 272, 741, 742, 743, 744], "pow": [89, 273, 745, 746, 747, 748], "prod": [90, 274, 1148, 1149, 1150, 1151], "qr": [91, 963, 964, 965], "remaind": [92, 276, 749, 750, 751, 752], "repeat": [93, 277, 1033, 1034, 1035, 1036], "reshap": [94, 278, 1037, 1038, 1039, 1040], "roll": [95, 279, 376, 1041, 1042, 1043, 1044], "round": [96, 280, 753, 754, 755, 756], "sign": [97, 281, 757, 758, 759, 760], "sin": [98, 282, 761, 762, 763, 764], "sinh": [99, 283, 765, 766, 767, 768], "softplu": [100, 284, 423, 424, 425, 426], "solv": [101, 967, 968, 969], "sort": [102, 164, 285, 360, 1120, 1126, 1127, 1128, 1129], "sparse_cross_entropi": [103, 286, 1002, 1003, 1004, 1005], "sqrt": [104, 287, 769, 770, 771, 772], "squar": [105, 288, 773, 774, 775, 776], "squeez": [106, 289, 1047, 1048, 1049, 1050], "stack": [107, 290, 1051, 1052, 1053, 1054], "std": [108, 319, 1152, 1153, 1154, 1155], "subtract": [109, 320, 777, 779, 780, 781], "sum": [110, 321, 1156, 1157, 1158, 1159], "svd": [111, 970, 971, 972], "svdval": [112, 973, 974, 975], "swapax": [113, 322, 1055, 1056, 1057, 1058], "tan": [114, 323, 376, 782, 784, 785, 786], "tanh": [115, 324, 428, 787, 789, 790, 791], "tensordot": [116, 976, 977, 978], "tile": [117, 325, 1059, 1060, 1061, 1062], "trace": [118, 979, 980, 981], "tril": [119, 461, 462, 463], "triu": [120, 464, 465, 466], "trunc": [121, 326, 792, 793, 794, 795], "unique_count": [122, 327, 1113, 1115, 1116, 1117], "var": [123, 328, 1160, 1161, 1162, 1163], "vecdot": [124, 982, 983, 984], "vector_norm": [125, 985, 986, 987], "vector_to_skew_symmetric_matrix": [126, 988, 989, 990], "zero_pad": [127, 329, 1063, 1064, 1065, 1066], "zeros_lik": [128, 468, 469, 470], "convers": 129, "args_to_ivi": 130, "args_to_n": 131, "to_ivi": 132, "to_n": 133, "creation": [134, 330, 432], "arraywithcr": 135, "data": [136, 332, 378, 384, 392, 406, 471, 1111, 1112, 1113, 1117, 1119], "type": [136, 332, 379, 384, 406, 471], "arraywithdatatyp": 137, "devic": [138, 334, 385, 387, 508], "arraywithdevic": 139, "elementwis": [140, 336, 558], "arraywithelementwis": 141, "gener": [142, 338, 378, 796], "arraywithgener": 143, "gradient": [144, 340, 870], "arraywithgradi": 145, "imag": [146, 342], "arraywithimag": 147, "layer": [148, 344, 908, 1194], "arraywithlay": 149, "linear": [150, 346, 917, 921, 1204], "algebra": [150, 346, 921], "arraywithlinearalgebra": 151, "loss": [152, 348, 991], "arraywithloss": 153, "manipul": [154, 350, 1007], "arraywithmanipul": 155, "norm": [156, 352, 1089, 1208], "arraywithnorm": 157, "random": [158, 354, 1094], "arraywithrandom": 159, "search": [160, 356, 1106], "arraywithsearch": 161, "set": [162, 358, 369, 380, 1111], "arraywithset": 163, "arraywithsort": 165, "statist": [166, 362, 1131], "arraywithstatist": 167, "util": [168, 364, 1164], "arraywithutil": 169, "wrap": [170, 366, 381], "backend": [172, 374, 380, 389, 406], "handler": [172, 389], "choose_random_backend": 174, "clear_backend_stack": 175, "current_backend": 176, "get_backend": 177, "set_backend": 178, "try_import_ivy_jax": 179, "try_import_ivy_mxnet": 180, "try_import_ivy_numpi": 181, "try_import_ivy_tf": 182, "try_import_ivy_torch": 183, "unset_backend": 184, "background": [185, 1173], "ml": 186, "explos": 186, "standard": 187, "skeptic": 187, "complimentari": 187, "vs": [187, 406], "competit": 187, "do": 187, "work": [187, 372], "The": [187, 370, 391, 406], "api": [187, 371, 374, 377, 383, 389, 391, 393, 394], "why": 188, "unifi": [188, 391], "No": [188, 369], "more": 188, "re": 188, "implement": 188, "infinit": 188, "shelf": 188, "life": 188, "containerwithactiv": 190, "base": 191, "containerbas": 192, "contain": [193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 383, 392, 425, 427, 482, 484, 561, 563, 566, 570, 574, 576, 579, 583, 587, 591, 595, 599, 603, 607, 611, 615, 619, 623, 627, 631, 635, 637, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 730, 732, 735, 739, 743, 747, 751, 755, 759, 763, 767, 771, 775, 778, 780, 783, 785, 788, 790, 794, 799, 801, 810, 827, 829, 874, 876, 878, 880, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 945, 994, 996, 999, 1001, 1004, 1006, 1010, 1012, 1015, 1019, 1023, 1027, 1031, 1035, 1039, 1043, 1045, 1049, 1053, 1057, 1061, 1065, 1092, 1098, 1101, 1103, 1114, 1116, 1123, 1125, 1128, 1130, 1134, 1138, 1142, 1146, 1150, 1154, 1158, 1162, 1167, 1171], "multidevcontain": 195, "adam_upd": [201, 877, 878, 879], "add_ivy_container_instance_method": [203, 367], "at_dev": [210, 211], "clip_vector_norm": [225, 809, 810, 811], "gradient_descent_upd": [242, 882, 883, 884], "is_vari": [245, 886, 887, 888], "lamb_upd": [249, 890, 891, 892], "lars_upd": [250, 894, 895, 896], "optimizer_upd": [270, 898, 899, 900], "random_uniform": [275, 1100, 1101, 1102], "static_ab": [291, 563], "static_adam_step": [292, 876], "static_adam_upd": [293, 880], "static_add": [294, 576], "static_all_equ": [295, 801], "static_argsort": [296, 1125], "static_binary_cross_entropi": [297, 996], "static_can_cast": [298, 484], "static_clip": [299, 1012], "static_cross_entropi": [300, 1001], "static_divid": [301, 637], "static_gather_nd": [302, 829], "static_gradient_descent_upd": [303, 885], "static_is_vari": [304, 889], "static_lamb_upd": [305, 893], "static_lars_upd": [306, 897], "static_multipli": [307, 732], "static_optimizer_upd": [308, 901], "static_randint": [309, 1098], "static_random_uniform": [310, 1103], "static_rol": [311, 1045], "static_softplu": [312, 427], "static_sort": [313, 1130], "static_sparse_cross_entropi": [314, 1006], "static_subtract": [315, 778], "static_tan": [316, 783], "static_tanh": [317, 788], "static_unique_count": [318, 1114], "containerwithcr": 331, "containerwithdatatyp": 333, "containerwithdevic": 335, "containerwithelementwis": 337, "containerwithgener": 339, "containerwithgradi": 341, "containerwithimag": 343, "containerwithlay": 345, "containerwithlinearalgebra": 347, "containerwithloss": 349, "containerwithmanipul": 351, "containerwithnorm": 353, "containerwithrandom": 355, "containerwithsearch": 357, "containerwithset": 359, "containerwithsort": 361, "containerwithstatist": 363, "containerwithutil": 365, "contribut": [368, 1173], "up": 369, "clone": 369, "ivi": [369, 374, 376, 378, 382, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 424, 425, 426, 427, 435, 436, 439, 440, 443, 444, 447, 448, 452, 453, 455, 456, 459, 460, 462, 463, 465, 466, 469, 470, 481, 482, 483, 484, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 586, 587, 588, 590, 591, 592, 594, 595, 596, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 652, 653, 655, 656, 657, 659, 660, 661, 663, 664, 665, 667, 668, 669, 671, 672, 673, 675, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 696, 697, 699, 700, 701, 703, 704, 705, 707, 708, 709, 711, 712, 713, 715, 716, 717, 719, 720, 721, 723, 724, 725, 729, 730, 731, 732, 734, 735, 736, 738, 739, 740, 742, 743, 744, 746, 747, 748, 750, 751, 752, 754, 755, 756, 758, 759, 760, 762, 763, 764, 766, 767, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 798, 799, 800, 801, 810, 811, 826, 827, 828, 829, 873, 874, 875, 876, 878, 879, 880, 883, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 946, 948, 949, 952, 953, 955, 956, 958, 959, 961, 962, 964, 965, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 986, 987, 989, 990, 993, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1091, 1092, 1093, 1097, 1098, 1101, 1102, 1103, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1161, 1162, 1163, 1166, 1167, 1168, 1170, 1171, 1172], "pycharm": 369, "virtual": 369, "environ": 369, "docker": [369, 370, 372], "us": [369, 372, 392], "miniconda": [369, 372], "venv": [369, 372], "interpret": 369, "window": 369, "maco": 369, "ubuntu": 369, "github": 369, "codespac": 369, "pre": 369, "commit": [369, 370], "basic": 370, "get": 370, "help": 370, "todo": 370, "list": 370, "issu": 370, "manag": 370, "your": 370, "fork": 370, "who": 370, "To": 370, "ask": 370, "With": 370, "command": 370, "line": 370, "browser": 370, "pull": 370, "request": 370, "small": 370, "often": 370, "run": 370, "test": [370, 377, 378], "local": 370, "open": 371, "task": 371, "function": [371, 379, 381, 383, 384, 385, 387, 389, 394, 406], "format": 371, "frontend": [371, 394], "build": [372, 389], "doc": 372, "dockerless": 372, "document": 372, "pipelin": [372, 406], "make_doc": 372, "sh": 372, "entrypoint": 372, "_make_doc": 372, "generate_src_rst_fil": 372, "py": 372, "sphinx": 372, "correct_built_html_fil": 372, "remove_fil": 372, "deep": 373, "dive": 373, "navig": 374, "code": 374, "categor": 374, "submodul": 374, "design": [374, 388, 1173], "docstr": [375, 376], "exampl": [376, 387], "hypothesi": 378, "self": 378, "consist": 378, "explicit": 378, "test_array_funct": 378, "primari": 379, "composit": 379, "mix": 379, "standalon": 379, "nestabl": [379, 383, 387], "conveni": 379, "nativ": 382, "handl": 382, "instanc": [383, 391], "static": 383, "special": 383, "modul": [384, 385, 393, 1206, 1207], "argument": [384, 385, 386, 387], "other": [384, 385], "inplac": 386, "updat": 386, "out": [386, 387], "copi": 386, "dtype": [387, 489], "number": 387, "oper": [387, 391, 406], "integ": 387, "sequenc": 387, "block": 389, "framework": [389, 390], "graph": [389, 394], "compil": [389, 394, 429, 430], "class": 391, "monkei": 391, "patch": 391, "construct": 392, "represent": 392, "recurs": 392, "built": 392, "ins": 392, "access": 392, "save": 392, "load": 392, "comparison": 392, "custom": [392, 406], "case": 392, "compartment": 392, "configur": 392, "network": [392, 394], "weight": 392, "state": [393, 406], "initi": [393, 1185], "optim": [393, 1210, 1214], "transpil": 394, "role": 394, "convert": [394, 1183], "model": [394, 401, 406], "builder": 396, "ecosystem": 397, "gym": [398, 405], "mech": 399, "memori": [400, 405], "robot": [402, 405], "vision": [403, 405], "extens": [404, 1173], "appli": 405, "librari": 405, "mechan": 405, "faq": 406, "maintain": 406, "version": 406, "dynam": 406, "size": 406, "shape": [406, 858, 1111, 1112, 1113, 1117, 1119], "check": 406, "control": 406, "flow": 406, "auto": 406, "differenti": 406, "replica": 406, "parallel": 406, "support": 406, "altern": 406, "structur": 406, "func": 407, "wrapper": 407, "handle_nest": 408, "handle_out_argu": 409, "infer_devic": 410, "infer_dtyp": 411, "inputs_to_ivy_arrai": 412, "inputs_to_native_arrai": 413, "outputs_to_ivy_arrai": 414, "to_native_arrays_and_back": 415, "gelu": [418, 1182], "leaky_relu": 419, "relu": 420, "sigmoid": 421, "softmax": 422, "constant": 431, "note": [432, 442, 444], "arang": 433, "empti": 437, "ey": 441, "full": 445, "linspac": 449, "logspac": 450, "ones": 457, "zero": [467, 1193], "as_ivy_dtyp": 475, "as_native_dtyp": 476, "astyp": 477, "broadcast_arrai": 478, "broadcast_to": 479, "closest_valid_dtyp": 485, "default_dtyp": 486, "default_float_dtyp": 487, "default_int_dtyp": 488, "dtype_bit": 490, "finfo": 491, "function_supported_dtyp": 492, "function_unsupported_dtyp": 493, "iinfo": 494, "invalid_dtyp": 495, "is_float_dtyp": 496, "is_int_dtyp": 497, "promote_typ": 498, "result_typ": 499, "set_default_dtyp": 500, "set_default_float_dtyp": 501, "set_default_int_dtyp": 502, "type_promote_arrai": 503, "unset_default_dtyp": 504, "unset_default_float_dtyp": 505, "unset_default_int_dtyp": 506, "valid_dtyp": 507, "devcloneditem": 510, "devclonedit": 511, "devclonednest": 512, "devdistitem": 513, "devdistit": 514, "devdistnest": 515, "devmapp": 517, "devmappermultiproc": 518, "multidevitem": 520, "multidevit": 521, "multidevnest": 522, "profil": 523, "as_ivy_dev": 524, "as_native_dev": 525, "clear_mem_on_dev": 526, "default_devic": 527, "dev": 528, "dev_clon": 529, "dev_clone_arrai": 530, "dev_clone_it": 531, "dev_clone_nest": 532, "dev_dist": 533, "dev_dist_arrai": 534, "dev_dist_it": 535, "dev_dist_nest": 536, "dev_unifi": 537, "dev_unify_arrai": 538, "dev_unify_it": 539, "dev_unify_nest": 540, "dev_util": 541, "get_all_ivy_arrays_on_dev": 542, "gpu_is_avail": 543, "num_cpu_cor": 544, "num_gpu": 545, "num_ivy_arrays_on_dev": 546, "percent_used_mem_on_dev": 547, "print_all_ivy_arrays_on_dev": 548, "set_default_devic": 549, "set_split_factor": 550, "split_factor": 551, "split_func_cal": 552, "to_devic": 553, "total_mem_on_dev": 554, "tpu_is_avail": 555, "unset_default_devic": 556, "used_mem_on_dev": 557, "maximum": 726, "minimum": 727, "arg_info": 802, "arg_nam": 803, "array_equ": 804, "arrays_equ": 805, "assert_supports_inplac": 806, "cache_fn": 807, "clip_matrix_norm": 808, "container_typ": 812, "copy_arrai": 813, "cumprod": 814, "cumsum": 815, "current_backend_str": 816, "default": 817, "einops_rearrang": 818, "einops_reduc": 819, "einops_repeat": 820, "exist": 821, "floormod": 822, "fourier_encod": 823, "gather": 824, "get_all_arrays_in_memori": 830, "get_min_bas": 831, "get_min_denomin": 832, "get_num_dim": 833, "get_referrers_recurs": 834, "has_nan": 835, "indices_wher": 836, "inplace_arrays_support": 837, "inplace_decr": 838, "inplace_incr": 839, "inplace_upd": 840, "inplace_variables_support": 841, "is_arrai": 842, "is_ivy_arrai": 843, "is_ivy_contain": 844, "is_native_arrai": 845, "match_kwarg": 846, "multiprocess": 847, "num_arrays_in_memori": 848, "one_hot": 849, "print_all_arrays_in_memori": 850, "queue_timeout": 851, "scatter_flat": 852, "scatter_nd": 853, "set_min_bas": 854, "set_min_denomin": 855, "set_queue_timeout": 856, "set_tmp_dir": 857, "shape_to_tupl": 859, "stable_divid": 860, "stable_pow": 861, "supports_inplac": 862, "tmp_dir": 863, "to_list": 864, "to_numpi": 865, "to_scalar": 866, "try_else_non": 867, "unstack": 868, "value_is_nan": 869, "execute_with_gradi": 881, "set_with_grad": 902, "stop_gradi": 903, "unset_with_grad": 904, "variabl": 905, "variable_data": 906, "with_grad": 907, "conv1d": [909, 1195], "conv1d_transpos": 910, "conv2d": [911, 1197], "conv2d_transpos": 912, "conv3d": [913, 1199], "conv3d_transpos": 914, "depthwise_conv2d": 915, "dropout": [916, 1202], "lstm_updat": 918, "multi_head_attent": 919, "scaled_dot_product_attent": 920, "matrix_pow": 950, "slogdet": 966, "split": 1046, "meta": 1067, "fomaml_step": 1068, "maml_step": 1069, "reptile_step": 1070, "nest": 1071, "all_nested_indic": 1072, "copy_nest": 1073, "index_nest": 1074, "insert_into_nest_at_index": 1075, "insert_into_nest_at_indic": 1076, "map": 1077, "map_nest_at_index": 1078, "map_nest_at_indic": 1079, "multi_index_nest": 1080, "nested_ani": 1081, "nested_indices_wher": 1082, "nested_map": 1083, "nested_multi_map": 1084, "prune_nest_at_index": 1085, "prune_nest_at_indic": 1086, "set_nest_at_index": 1087, "set_nest_at_indic": 1088, "multinomi": 1095, "randint": [1096, 1097], "random_norm": 1099, "seed": 1104, "shuffl": 1105, "argmax": 1107, "argmin": 1108, "nonzero": 1109, "where": 1110, "depend": [1111, 1112, 1113, 1117, 1119], "output": [1111, 1112, 1113, 1117, 1119], "unique_al": 1112, "unique_invers": 1118, "unique_valu": 1119, "content": 1173, "overview": 1173, "quick": 1173, "start": 1173, "roadmap": [1173, 1179], "citat": 1173, "inspect": 1176, "add_array_spec": 1177, "fn_array_spec": 1178, "geglu": 1181, "to_ivy_modul": 1184, "firstlayersiren": 1187, "glorotuniform": 1188, "Ones": 1190, "siren": 1191, "conv1dtranspos": 1196, "conv2dtranspos": 1198, "conv3dtranspos": 1200, "depthwiseconv2d": 1201, "lstm": 1203, "multiheadattent": 1205, "layernorm": 1209, "adam": 1211, "lamb": 1212, "lar": 1213, "sgd": 1215, "sequenti": [1216, 1217], "verbos": 1219, "cprint": 1220}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})