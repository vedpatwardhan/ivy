Search.setIndex({docnames:["array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/all","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/all","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/all","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/all","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/all","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/finfo","functional/ivy/core/dtype/iinfo","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isfinite","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/all","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/all.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/all.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/all.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/all.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/all.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/finfo.rst","functional/ivy/core/dtype/iinfo.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isfinite.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/all.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{conversions:[0,0,0,"-"],device:[5,0,0,"-"],general:[7,0,0,"-"],gradients:[9,0,0,"-"],image:[11,0,0,"-"],linalg:[13,0,0,"-"],logic:[15,0,0,"-"],math:[17,0,0,"-"],meta:[19,0,0,"-"],random:[21,0,0,"-"],reductions:[23,0,0,"-"]},"ivy.array.conversions":{args_to_ivy:[1,1,1,""],args_to_native:[2,1,1,""],to_ivy:[3,1,1,""],to_native:[4,1,1,""]},"ivy.array.device":{ArrayWithDevice:[6,2,1,""]},"ivy.array.general":{ArrayWithGeneral:[8,2,1,""]},"ivy.array.gradients":{ArrayWithGradients:[10,2,1,""]},"ivy.array.image":{ArrayWithImage:[12,2,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[14,2,1,""]},"ivy.array.logic":{ArrayWithLogic:[16,2,1,""]},"ivy.array.math":{ArrayWithMath:[18,2,1,""]},"ivy.array.meta":{ArrayWithMeta:[20,2,1,""]},"ivy.array.random":{ArrayWithRandom:[22,2,1,""]},"ivy.array.reductions":{ArrayWithReductions:[24,2,1,""]},"ivy.container":{Container:[26,2,1,""],MultiDevContainer:[27,2,1,""]},"ivy.container.Container":{__init__:[26,3,1,""],all_false:[26,3,1,""],all_key_chains:[26,3,1,""],all_true:[26,3,1,""],arrays_as_lists:[26,3,1,""],as_arrays:[26,3,1,""],as_bools:[26,3,1,""],as_ones:[26,3,1,""],as_random_uniform:[26,3,1,""],as_variables:[26,3,1,""],as_zeros:[26,3,1,""],assert_contains_sub_container:[26,3,1,""],assert_contains_sub_structure:[26,3,1,""],assert_identical:[26,3,1,""],assert_identical_structure:[26,3,1,""],at_key_chain:[26,3,1,""],at_key_chains:[26,3,1,""],at_keys:[26,3,1,""],clip:[26,3,1,""],clip_vector_norm:[26,3,1,""],combine:[26,3,1,""],common_key_chains:[26,3,1,""],concat:[26,3,1,""],config:[26,3,1,""],contains_sub_container:[26,3,1,""],contains_sub_structure:[26,3,1,""],copy:[26,3,1,""],create_if_absent:[26,3,1,""],cutoff_at_depth:[26,3,1,""],cutoff_at_height:[26,3,1,""],deep_copy:[26,3,1,""],dev:[26,3,1,""],dev_clone:[26,3,1,""],dev_dist:[26,3,1,""],dev_str:[26,3,1,""],diff:[26,3,1,""],dtype:[26,3,1,""],einops_rearrange:[26,3,1,""],einops_reduce:[26,3,1,""],einops_repeat:[26,3,1,""],einsum:[26,3,1,""],expand_dims:[26,3,1,""],find_sub_container:[26,3,1,""],find_sub_structure:[26,3,1,""],flatten_key_chain:[26,3,1,""],flatten_key_chains:[26,3,1,""],flip:[26,3,1,""],format_key_chains:[26,3,1,""],from_disk_as_hdf5:[26,3,1,""],from_disk_as_json:[26,3,1,""],from_disk_as_pickled:[26,3,1,""],from_flat_list:[26,3,1,""],from_numpy:[26,3,1,""],gather:[26,3,1,""],gather_nd:[26,3,1,""],h5_file_size:[26,3,1,""],has_key:[26,3,1,""],has_key_chain:[26,3,1,""],has_nans:[26,3,1,""],identical:[26,3,1,""],identical_array_shapes:[26,3,1,""],identical_configs:[26,3,1,""],identical_structure:[26,3,1,""],if_exists:[26,3,1,""],inplace_update:[26,3,1,""],ivy:[26,3,1,""],key_chains_containing:[26,3,1,""],list_join:[26,3,1,""],list_stack:[26,3,1,""],map:[26,3,1,""],map_conts:[26,3,1,""],matrix_norm:[26,3,1,""],max_depth:[26,3,1,""],maximum:[26,3,1,""],minimum:[26,3,1,""],multi_map:[26,3,1,""],num_arrays:[26,3,1,""],overwrite_at_key_chain:[26,3,1,""],overwrite_at_key_chains:[26,3,1,""],prune_empty:[26,3,1,""],prune_key_chain:[26,3,1,""],prune_key_chains:[26,3,1,""],prune_key_from_key_chains:[26,3,1,""],prune_keys:[26,3,1,""],prune_keys_from_key_chains:[26,3,1,""],reduce:[26,3,1,""],reduce_max:[26,3,1,""],reduce_mean:[26,3,1,""],reduce_min:[26,3,1,""],reduce_prod:[26,3,1,""],reduce_std:[26,3,1,""],reduce_sum:[26,3,1,""],reduce_var:[26,3,1,""],remove_key_length_limit:[26,3,1,""],remove_print_limit:[26,3,1,""],repeat:[26,3,1,""],reshape:[26,3,1,""],reshape_like:[26,3,1,""],restructure:[26,3,1,""],restructure_key_chains:[26,3,1,""],set_at_key_chain:[26,3,1,""],set_at_key_chains:[26,3,1,""],set_at_keys:[26,3,1,""],set_framework:[26,3,1,""],set_ivy_backend:[26,3,1,""],shape:[26,3,1,""],shapes:[26,3,1,""],show:[26,3,1,""],show_sub_container:[26,3,1,""],shuffle:[26,3,1,""],shuffle_h5_file:[26,3,1,""],size_ordered_arrays:[26,3,1,""],slice_keys:[26,3,1,""],slice_via_key:[26,3,1,""],sort_by_key:[26,3,1,""],split:[26,3,1,""],stack:[26,3,1,""],stop_gradients:[26,3,1,""],structural_diff:[26,3,1,""],swapaxes:[26,3,1,""],to_dev:[26,3,1,""],to_dict:[26,3,1,""],to_disk_as_hdf5:[26,3,1,""],to_disk_as_json:[26,3,1,""],to_disk_as_pickled:[26,3,1,""],to_flat_list:[26,3,1,""],to_iterator:[26,3,1,""],to_iterator_keys:[26,3,1,""],to_iterator_values:[26,3,1,""],to_ivy:[26,3,1,""],to_jsonable:[26,3,1,""],to_list:[26,3,1,""],to_multi_dev:[26,3,1,""],to_native:[26,3,1,""],to_numpy:[26,3,1,""],to_raw:[26,3,1,""],trim_key:[26,3,1,""],try_kc:[26,3,1,""],unify:[26,3,1,""],unstack:[26,3,1,""],update_config:[26,3,1,""],vector_norm:[26,3,1,""],with_default_key_color:[26,3,1,""],with_entries_as_lists:[26,3,1,""],with_ivy_backend:[26,3,1,""],with_key_length_limit:[26,3,1,""],with_print_indent:[26,3,1,""],with_print_limit:[26,3,1,""],with_print_line_spacing:[26,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[27,3,1,""],at_dev:[27,3,1,""],at_devs:[27,3,1,""]},"ivy.debugger":{debug_mode:[30,1,1,""],set_breakpoint_debug_mode:[31,1,1,""],set_debug_mode:[32,1,1,""],set_exception_debug_mode:[33,1,1,""],unset_debug_mode:[34,1,1,""]},"ivy.framework_handler":{ContextManager:[44,2,1,""],choose_random_framework:[46,1,1,""],clear_framework_stack:[47,1,1,""],current_framework:[48,1,1,""],get_framework:[49,1,1,""],set_framework:[50,1,1,""],try_import_ivy_jax:[51,1,1,""],try_import_ivy_mxnet:[52,1,1,""],try_import_ivy_numpy:[53,1,1,""],try_import_ivy_tf:[54,1,1,""],try_import_ivy_torch:[55,1,1,""],unset_framework:[56,1,1,""]},"ivy.framework_handler.ContextManager":{__init__:[44,3,1,""]},"ivy.functional":{backends:[58,0,0,"-"],ivy:[694,0,0,"-"]},"ivy.functional.backends.numpy":{array_api:[325,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[326,0,0,"-"],creation_functions:[327,0,0,"-"],data_type_functions:[328,0,0,"-"],data_types:[329,0,0,"-"],elementwise_functions:[330,0,0,"-"],function_and_method_signatures:[331,0,0,"-"],linear_algebra_extension:[332,0,0,"-"],linear_algebra_functions:[333,0,0,"-"],manipulation_functions:[334,0,0,"-"],searching_functions:[335,0,0,"-"],set_functions:[336,0,0,"-"],sorting_functions:[337,0,0,"-"],statistical_functions:[338,0,0,"-"],utility_functions:[339,0,0,"-"]},"ivy.functional.backends.numpy.core":{device:[341,0,0,"-"],general:[343,0,0,"-"],gradients:[381,0,0,"-"],image:[386,0,0,"-"],linalg:[390,0,0,"-"],logic:[393,0,0,"-"],math:[394,0,0,"-"],random:[396,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[342,2,1,""],clear_mem_on_dev:[341,1,1,""],dev:[341,1,1,""],dev_from_str:[341,1,1,""],dev_to_str:[341,1,1,""],gpu_is_available:[341,1,1,""],num_gpus:[341,1,1,""],to_dev:[341,1,1,""],tpu_is_available:[341,1,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[342,3,1,""],start:[342,3,1,""],stop:[342,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[343,1,1,""],arange:[344,1,1,""],argmax:[345,1,1,""],argmin:[346,1,1,""],argsort:[343,1,1,""],array:[347,1,1,""],asarray:[343,1,1,""],astype:[343,1,1,""],cast:[348,1,1,""],ceil:[343,1,1,""],clip:[343,1,1,""],compile:[349,1,1,""],concatenate:[350,1,1,""],constant_pad:[343,1,1,""],container_types:[343,1,1,""],copy_array:[343,1,1,""],cumprod:[351,1,1,""],current_framework_str:[343,1,1,""],dtype:[352,1,1,""],dtype_bits:[353,1,1,""],dtype_from_str:[354,1,1,""],dtype_to_str:[355,1,1,""],equal:[343,1,1,""],flip:[356,1,1,""],floor:[343,1,1,""],floormod:[343,1,1,""],full:[357,1,1,""],gather:[358,1,1,""],gather_nd:[359,1,1,""],get_num_dims:[343,1,1,""],identity:[360,1,1,""],indices_where:[361,1,1,""],inplace_arrays_supported:[343,1,1,""],inplace_decrement:[362,1,1,""],inplace_increment:[363,1,1,""],inplace_update:[364,1,1,""],inplace_variables_supported:[343,1,1,""],is_array:[365,1,1,""],isfinite:[366,1,1,""],linear_resample:[367,1,1,""],linspace:[368,1,1,""],logspace:[369,1,1,""],matmul:[343,1,1,""],meshgrid:[343,1,1,""],multiprocessing:[343,1,1,""],one_hot:[370,1,1,""],ones:[371,1,1,""],ones_like:[372,1,1,""],round:[343,1,1,""],scatter_flat:[373,1,1,""],scatter_nd:[374,1,1,""],shape:[343,1,1,""],split:[375,1,1,""],squeeze:[376,1,1,""],to_list:[343,1,1,""],to_numpy:[343,1,1,""],to_scalar:[343,1,1,""],transpose:[377,1,1,""],unstack:[378,1,1,""],where:[343,1,1,""],zero_pad:[343,1,1,""],zeros:[379,1,1,""],zeros_like:[380,1,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[382,1,1,""],is_variable:[383,1,1,""],stop_gradient:[384,1,1,""],variable:[385,1,1,""],variable_data:[381,1,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[387,1,1,""],gradient_image:[388,1,1,""],stack_images:[389,1,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[391,1,1,""],vector_to_skew_symmetric_matrix:[392,1,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[395,1,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[397,1,1,""],randint:[396,1,1,""],random_normal:[396,1,1,""],random_uniform:[396,1,1,""],seed:[396,1,1,""],shuffle:[396,1,1,""]},"ivy.functional.ivy":{array_api:[695,0,0,"-"],core:[710,0,0,"-"],nn:[1061,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[696,0,0,"-"],creation_functions:[697,0,0,"-"],data_type_functions:[698,0,0,"-"],data_types:[699,0,0,"-"],elementwise_functions:[700,0,0,"-"],function_and_method_signatures:[701,0,0,"-"],linear_algebra_extension:[702,0,0,"-"],linear_algebra_functions:[703,0,0,"-"],manipulation_functions:[704,0,0,"-"],searching_functions:[705,0,0,"-"],set_functions:[706,0,0,"-"],sorting_functions:[707,0,0,"-"],statistical_functions:[708,0,0,"-"],utility_functions:[709,0,0,"-"]},"ivy.functional.ivy.core":{array_builtins:[711,0,0,"-"],compilation:[750,0,0,"-"],device:[752,0,0,"-"],dtype:[802,0,0,"-"],general:[828,0,0,"-"],gradients:[931,0,0,"-"],image:[947,0,0,"-"],linalg:[954,0,0,"-"],logic:[962,0,0,"-"],math:[966,0,0,"-"],meta:[984,0,0,"-"],multi_node:[988,0,0,"-"],nest:[1032,0,0,"-"],random:[1044,0,0,"-"],reductions:[1051,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[712,1,1,""],builtin_add:[713,1,1,""],builtin_and:[714,1,1,""],builtin_bool:[715,1,1,""],builtin_contains:[716,1,1,""],builtin_deepcopy:[717,1,1,""],builtin_dir:[718,1,1,""],builtin_eq:[719,1,1,""],builtin_float:[720,1,1,""],builtin_floordiv:[721,1,1,""],builtin_ge:[722,1,1,""],builtin_getattr:[723,1,1,""],builtin_getattribute:[724,1,1,""],builtin_getitem:[725,1,1,""],builtin_gt:[726,1,1,""],builtin_int:[727,1,1,""],builtin_invert:[728,1,1,""],builtin_le:[729,1,1,""],builtin_lt:[730,1,1,""],builtin_mul:[731,1,1,""],builtin_ne:[732,1,1,""],builtin_neg:[733,1,1,""],builtin_or:[734,1,1,""],builtin_pos:[735,1,1,""],builtin_pow:[736,1,1,""],builtin_radd:[737,1,1,""],builtin_rand:[738,1,1,""],builtin_rfloordiv:[739,1,1,""],builtin_rmul:[740,1,1,""],builtin_ror:[741,1,1,""],builtin_rpow:[742,1,1,""],builtin_rsub:[743,1,1,""],builtin_rtruediv:[744,1,1,""],builtin_rxor:[745,1,1,""],builtin_setitem:[746,1,1,""],builtin_sub:[747,1,1,""],builtin_truediv:[748,1,1,""],builtin_xor:[749,1,1,""]},"ivy.functional.ivy.core.compilation":{compile:[751,1,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[752,2,1,""],DevClonedItem:[754,2,1,""],DevClonedIter:[755,2,1,""],DevClonedNest:[756,2,1,""],DevDistItem:[757,2,1,""],DevDistIter:[758,2,1,""],DevDistNest:[759,2,1,""],DevManager:[752,2,1,""],DevMapper:[761,2,1,""],DevMapperMultiProc:[762,2,1,""],MultiDev:[752,2,1,""],MultiDevItem:[764,2,1,""],MultiDevIter:[765,2,1,""],MultiDevNest:[766,2,1,""],Profiler:[767,2,1,""],clear_mem_on_dev:[768,1,1,""],default_device:[769,1,1,""],dev:[770,1,1,""],dev_clone:[771,1,1,""],dev_clone_array:[772,1,1,""],dev_clone_iter:[773,1,1,""],dev_clone_nest:[774,1,1,""],dev_dist:[775,1,1,""],dev_dist_array:[776,1,1,""],dev_dist_iter:[777,1,1,""],dev_dist_nest:[778,1,1,""],dev_from_str:[779,1,1,""],dev_to_str:[780,1,1,""],dev_unify:[781,1,1,""],dev_unify_array:[782,1,1,""],dev_unify_iter:[783,1,1,""],dev_unify_nest:[784,1,1,""],dev_util:[785,1,1,""],get_all_arrays_on_dev:[786,1,1,""],gpu_is_available:[787,1,1,""],num_arrays_on_dev:[788,1,1,""],num_cpu_cores:[789,1,1,""],num_gpus:[790,1,1,""],percent_used_mem_on_dev:[791,1,1,""],print_all_arrays_on_dev:[792,1,1,""],set_default_device:[793,1,1,""],set_split_factor:[794,1,1,""],split_factor:[795,1,1,""],split_func_call:[796,1,1,""],to_dev:[797,1,1,""],total_mem_on_dev:[798,1,1,""],tpu_is_available:[799,1,1,""],unset_default_device:[800,1,1,""],used_mem_on_dev:[801,1,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[752,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[752,3,1,""],da_tune_step:[752,3,1,""],dim_size:[752,3,1,""],ds_tune_step:[752,3,1,""],map:[752,3,1,""],repeated_config_check:[752,3,1,""],tune_step:[752,3,1,""],tuned:[752,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[761,3,1,""],map:[761,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[762,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[752,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[764,3,1,""],items:[764,3,1,""],keys:[764,3,1,""],shape:[764,3,1,""],values:[764,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[765,3,1,""],at_dev:[765,3,1,""],at_devs:[765,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[766,3,1,""],at_dev:[766,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[767,3,1,""],start:[767,3,1,""],stop:[767,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[802,2,1,""],DefaultFloatDtype:[802,2,1,""],DefaultIntDtype:[802,2,1,""],astype:[802,1,1,""],cast:[806,1,1,""],closest_valid_dtype:[807,1,1,""],convert_dtype:[808,1,1,""],default_dtype:[809,1,1,""],default_float_dtype:[810,1,1,""],default_int_dtype:[811,1,1,""],dtype:[812,1,1,""],dtype_bits:[813,1,1,""],dtype_from_str:[814,1,1,""],dtype_to_str:[815,1,1,""],finfo:[816,1,1,""],iinfo:[817,1,1,""],invalid_dtype:[818,1,1,""],is_float_dtype:[819,1,1,""],is_int_dtype:[820,1,1,""],set_default_dtype:[821,1,1,""],set_default_float_dtype:[822,1,1,""],set_default_int_dtype:[823,1,1,""],unset_default_dtype:[824,1,1,""],unset_default_float_dtype:[825,1,1,""],unset_default_int_dtype:[826,1,1,""],valid_dtype:[827,1,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[802,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[802,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[802,3,1,""]},"ivy.functional.ivy.core.general":{"default":[854,1,1,""],abs:[829,1,1,""],all_equal:[830,1,1,""],arange:[831,1,1,""],arg_names:[832,1,1,""],argmax:[833,1,1,""],argmin:[834,1,1,""],argsort:[835,1,1,""],array:[836,1,1,""],array_equal:[837,1,1,""],arrays_equal:[838,1,1,""],asarray:[828,1,1,""],assert_supports_inplace:[839,1,1,""],broadcast_to:[840,1,1,""],cache_fn:[841,1,1,""],ceil:[842,1,1,""],clip:[843,1,1,""],clip_matrix_norm:[844,1,1,""],clip_vector_norm:[845,1,1,""],concatenate:[846,1,1,""],constant_pad:[847,1,1,""],container_types:[848,1,1,""],copy_array:[849,1,1,""],cross:[850,1,1,""],cumprod:[851,1,1,""],cumsum:[852,1,1,""],current_framework_str:[853,1,1,""],einops_rearrange:[855,1,1,""],einops_reduce:[856,1,1,""],einops_repeat:[857,1,1,""],equal:[858,1,1,""],exists:[859,1,1,""],expand_dims:[860,1,1,""],flip:[861,1,1,""],floor:[862,1,1,""],floormod:[863,1,1,""],fourier_encode:[864,1,1,""],full:[865,1,1,""],gather:[866,1,1,""],gather_nd:[867,1,1,""],get_all_arrays_in_memory:[868,1,1,""],get_min_base:[869,1,1,""],get_min_denominator:[870,1,1,""],get_num_dims:[871,1,1,""],get_referrers_recursive:[872,1,1,""],has_nans:[873,1,1,""],identity:[874,1,1,""],indices_where:[875,1,1,""],inplace_arrays_supported:[876,1,1,""],inplace_decrement:[877,1,1,""],inplace_increment:[878,1,1,""],inplace_update:[879,1,1,""],inplace_variables_supported:[880,1,1,""],is_array:[881,1,1,""],isfinite:[882,1,1,""],isinf:[883,1,1,""],isnan:[884,1,1,""],linear_resample:[885,1,1,""],linspace:[886,1,1,""],logspace:[887,1,1,""],match_kwargs:[888,1,1,""],matmul:[889,1,1,""],maximum:[890,1,1,""],meshgrid:[891,1,1,""],minimum:[892,1,1,""],multiprocessing:[893,1,1,""],num_arrays_in_memory:[894,1,1,""],one_hot:[895,1,1,""],ones:[896,1,1,""],ones_like:[897,1,1,""],print_all_arrays_in_memory:[898,1,1,""],queue_timeout:[899,1,1,""],repeat:[900,1,1,""],reshape:[901,1,1,""],round:[902,1,1,""],scatter_flat:[903,1,1,""],scatter_nd:[904,1,1,""],set_min_base:[905,1,1,""],set_min_denominator:[906,1,1,""],set_queue_timeout:[907,1,1,""],set_tmp_dir:[908,1,1,""],shape:[909,1,1,""],shape_to_tuple:[910,1,1,""],split:[911,1,1,""],squeeze:[912,1,1,""],stable_divide:[913,1,1,""],stable_pow:[914,1,1,""],stack:[915,1,1,""],supports_inplace:[916,1,1,""],swapaxes:[917,1,1,""],tile:[918,1,1,""],tmp_dir:[919,1,1,""],to_list:[920,1,1,""],to_numpy:[921,1,1,""],to_scalar:[922,1,1,""],transpose:[923,1,1,""],try_else_none:[924,1,1,""],unstack:[925,1,1,""],value_is_nan:[926,1,1,""],where:[927,1,1,""],zero_pad:[928,1,1,""],zeros:[929,1,1,""],zeros_like:[930,1,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[931,2,1,""],adam_step:[933,1,1,""],adam_update:[934,1,1,""],execute_with_gradients:[935,1,1,""],gradient_descent_update:[936,1,1,""],is_variable:[937,1,1,""],lamb_update:[938,1,1,""],lars_update:[939,1,1,""],optimizer_update:[940,1,1,""],set_with_grads:[941,1,1,""],stop_gradient:[942,1,1,""],unset_with_grads:[943,1,1,""],variable:[944,1,1,""],variable_data:[945,1,1,""],with_grads:[946,1,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[948,1,1,""],float_img_to_uint8_img:[949,1,1,""],gradient_image:[950,1,1,""],random_crop:[951,1,1,""],stack_images:[952,1,1,""],uint8_img_to_float_img:[953,1,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[955,1,1,""],inv:[956,1,1,""],matrix_norm:[957,1,1,""],pinv:[958,1,1,""],svd:[959,1,1,""],vector_norm:[960,1,1,""],vector_to_skew_symmetric_matrix:[961,1,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[963,1,1,""],logical_not:[964,1,1,""],logical_or:[965,1,1,""]},"ivy.functional.ivy.core.math":{acos:[967,1,1,""],acosh:[968,1,1,""],asin:[969,1,1,""],asinh:[970,1,1,""],atan2:[972,1,1,""],atan:[971,1,1,""],atanh:[973,1,1,""],cos:[974,1,1,""],cosh:[975,1,1,""],divide:[976,1,1,""],erf:[977,1,1,""],exp:[978,1,1,""],log:[979,1,1,""],sin:[980,1,1,""],sinh:[981,1,1,""],tan:[982,1,1,""],tanh:[983,1,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[985,1,1,""],maml_step:[986,1,1,""],reptile_step:[987,1,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[988,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1033,1,1,""],copy_nest:[1034,1,1,""],index_nest:[1035,1,1,""],map:[1036,1,1,""],map_nest_at_index:[1037,1,1,""],map_nest_at_indices:[1038,1,1,""],multi_index_nest:[1039,1,1,""],nested_indices_where:[1040,1,1,""],nested_map:[1041,1,1,""],set_nest_at_index:[1042,1,1,""],set_nest_at_indices:[1043,1,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1045,1,1,""],randint:[1046,1,1,""],random_normal:[1047,1,1,""],random_uniform:[1048,1,1,""],seed:[1049,1,1,""],shuffle:[1050,1,1,""]},"ivy.functional.ivy.core.reductions":{all:[1052,1,1,""],einsum:[1053,1,1,""],reduce_max:[1054,1,1,""],reduce_mean:[1055,1,1,""],reduce_min:[1056,1,1,""],reduce_prod:[1057,1,1,""],reduce_std:[1058,1,1,""],reduce_sum:[1059,1,1,""],reduce_var:[1060,1,1,""]},"ivy.functional.ivy.nn":{activations:[1062,0,0,"-"],layers:[1070,0,0,"-"],losses:[1083,0,0,"-"],norms:[1087,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1063,1,1,""],leaky_relu:[1064,1,1,""],relu:[1065,1,1,""],sigmoid:[1066,1,1,""],softmax:[1067,1,1,""],softplus:[1068,1,1,""],tanh:[1069,1,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1071,1,1,""],conv1d_transpose:[1072,1,1,""],conv2d:[1073,1,1,""],conv2d_transpose:[1074,1,1,""],conv3d:[1075,1,1,""],conv3d_transpose:[1076,1,1,""],depthwise_conv2d:[1077,1,1,""],dropout:[1078,1,1,""],linear:[1079,1,1,""],lstm_update:[1080,1,1,""],multi_head_attention:[1081,1,1,""],scaled_dot_product_attention:[1082,1,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1084,1,1,""],cross_entropy:[1085,1,1,""],sparse_cross_entropy:[1086,1,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1088,1,1,""]},"ivy.graph_compiler":{compiler:[1089,0,0,"-"],globals:[1092,0,0,"-"],graph:[1095,0,0,"-"],helpers:[1097,0,0,"-"],op_logging:[1098,0,0,"-"],param:[1099,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1090,1,1,""],show_graph:[1091,1,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1093,1,1,""],log_global_inference_rel_times:[1094,1,1,""]},"ivy.graph_compiler.graph":{Graph:[1095,2,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1095,3,1,""],add_fn_to_dict:[1095,3,1,""],add_param:[1095,3,1,""],compiled:[1095,3,1,""],connect:[1095,3,1,""],debug_info:[1095,3,1,""],get_param:[1095,3,1,""],get_param_recursive:[1095,3,1,""],include_generators:[1095,3,1,""],increment_param_count:[1095,3,1,""],log_all_ops:[1095,3,1,""],params_all_empty:[1095,3,1,""],save_debug_info:[1095,3,1,""],set_param:[1095,3,1,""],show:[1095,3,1,""],show_debug_info:[1095,3,1,""],update_inference_times:[1095,3,1,""],with_array_caching:[1095,3,1,""]},"ivy.graph_compiler.param":{Param:[1099,2,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1099,3,1,""],count:[1099,3,1,""],depth:[1099,3,1,""],get:[1099,3,1,""],is_var:[1099,3,1,""],ptype:[1099,3,1,""],set:[1099,3,1,""],set_count:[1099,3,1,""],shape:[1099,3,1,""]},"ivy.stateful":{activations:[1104,0,0,"-"],converters:[1107,0,0,"-"],initializers:[1109,0,0,"-"],layers:[1118,0,0,"-"],module:[1130,0,0,"-"],norms:[1132,0,0,"-"],optimizers:[1134,0,0,"-"],sequential:[1140,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1105,2,1,""],GELU:[1106,2,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1105,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1106,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1108,1,1,""]},"ivy.stateful.initializers":{Constant:[1109,2,1,""],FirstLayerSiren:[1111,2,1,""],GlorotUniform:[1112,2,1,""],KaimingNormal:[1109,2,1,""],Ones:[1114,2,1,""],Siren:[1115,2,1,""],Uniform:[1109,2,1,""],Zeros:[1117,2,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1109,3,1,""],create_variables:[1109,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1111,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1112,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1109,3,1,""],create_variables:[1109,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1114,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1115,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1109,3,1,""],create_variables:[1109,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1117,3,1,""]},"ivy.stateful.layers":{Conv1D:[1119,2,1,""],Conv1DTranspose:[1120,2,1,""],Conv2D:[1121,2,1,""],Conv2DTranspose:[1122,2,1,""],Conv3D:[1123,2,1,""],Conv3DTranspose:[1124,2,1,""],DepthwiseConv2D:[1125,2,1,""],Dropout:[1126,2,1,""],LSTM:[1127,2,1,""],Linear:[1128,2,1,""],MultiHeadAttention:[1129,2,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1119,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1120,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1121,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1122,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1123,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1124,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1125,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1126,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1127,3,1,""],get_initial_state:[1127,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1128,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1129,3,1,""]},"ivy.stateful.module":{Module:[1131,2,1,""]},"ivy.stateful.module.Module":{__init__:[1131,3,1,""],build:[1131,3,1,""],build_mode:[1131,3,1,""],built:[1131,3,1,""],check_submod_rets:[1131,3,1,""],compile_graph:[1131,3,1,""],compile_on_next_step:[1131,3,1,""],get_mod_key:[1131,3,1,""],mod_depth:[1131,3,1,""],mod_height:[1131,3,1,""],mod_with_top_mod_key_chain:[1131,3,1,""],save_weights:[1131,3,1,""],show_graph:[1131,3,1,""],show_mod_in_top_mod:[1131,3,1,""],show_structure:[1131,3,1,""],show_v_in_top_v:[1131,3,1,""],sub_mods:[1131,3,1,""],track_submod_call_order:[1131,3,1,""],track_submod_rets:[1131,3,1,""],v_with_top_v_key_chains:[1131,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1133,2,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1133,3,1,""]},"ivy.stateful.optimizers":{Adam:[1135,2,1,""],LAMB:[1136,2,1,""],LARS:[1137,2,1,""],Optimizer:[1138,2,1,""],SGD:[1139,2,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1135,3,1,""],set_state:[1135,3,1,""],state:[1135,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1136,3,1,""],set_state:[1136,3,1,""],state:[1136,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1137,3,1,""],set_state:[1137,3,1,""],state:[1137,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1138,3,1,""],compile_graph:[1138,3,1,""],compile_on_next_step:[1138,3,1,""],set_state:[1138,3,1,""],show_graph:[1138,3,1,""],step:[1138,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1139,3,1,""],set_state:[1139,3,1,""],state:[1139,3,1,""]},"ivy.stateful.sequential":{Sequential:[1141,2,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1141,3,1,""]},"ivy.verbosity":{cprint:[1146,1,1,""]},ivy:{"debugger":[29,0,0,"-"],container:[25,0,0,"-"],framework_handler:[44,0,0,"-"],func_wrapper:[57,0,0,"-"],verbosity:[1145,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:method","4":"py:data"},terms:{"0001":[1134,1135,1136],"02886":1101,"100":[988,1101,1143],"2021":1101,"2102":1101,"360":[966,974,980,982],"999":[931,933,934,938,1134,1135,1136],"abstract":[752,767,1101,1134,1138],"boolean":[25,26,752,787,799,802,818,827,828,830,837,838,873,875,876,880,881,883,884,916,926,931,937,962,963,964,965,984,985,986,988],"case":[0,3,4,25,26,27,752,791,798,801,828,831,901,903,904,954,957,960,988,1032,1035,1039,1101,1118,1129,1130,1131,1134,1138,1147],"catch":[828,854],"class":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,44,341,342,752,754,755,756,757,758,759,761,762,764,765,766,767,779,780,802,828,832,888,896,931,945,988,1032,1034,1041,1083,1085,1086,1095,1099,1101,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1147],"default":[0,3,4,25,26,27,750,751,752,761,762,769,770,774,775,776,777,778,781,782,783,784,791,794,795,796,801,802,809,810,811,812,828,830,831,833,834,835,844,845,846,847,850,851,852,861,864,865,866,871,873,874,885,887,888,891,893,896,899,900,903,904,907,909,911,913,914,923,925,926,929,931,934,936,937,938,939,940,942,946,954,957,960,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1044,1045,1047,1048,1051,1052,1054,1055,1056,1057,1058,1059,1060,1062,1063,1067,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141],"final":[25,26,828,864,886,887,988,1118,1129,1144],"float":[25,26,27,752,761,762,785,791,794,798,801,802,810,816,819,828,831,844,845,847,864,865,869,870,887,905,906,907,913,914,931,933,934,936,938,939,940,947,949,953,966,976,984,985,986,987,988,1044,1047,1048,1062,1064,1070,1078,1081,1082,1083,1084,1085,1086,1087,1088,1118,1126,1129,1132,1133,1134,1135,1136,1137,1138,1139],"function":[0,25,26,28,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1101,1104,1105,1106,1134,1137,1138,1139,1143,1144,1147],"import":[1101,1144,1147],"int":[25,26,27,396,750,751,752,774,775,776,777,778,781,782,783,784,789,790,796,802,811,813,820,828,833,834,835,840,846,847,851,852,855,856,857,860,861,864,865,866,871,874,885,886,887,895,896,900,901,903,904,909,910,911,912,915,917,918,923,925,928,929,931,933,934,938,947,951,952,954,957,960,984,985,986,987,988,1032,1041,1044,1045,1046,1048,1049,1051,1054,1055,1056,1057,1058,1059,1060,1062,1067,1070,1071,1072,1073,1074,1075,1076,1077,1081,1083,1085,1086,1087,1088,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1132,1133],"long":[1070,1080],"new":[25,26,28,396,802,806,828,829,840,855,856,857,860,864,865,866,867,896,901,903,904,905,906,913,914,915,929,931,934,936,938,939,940,947,949,951,953,966,968,970,973,975,981,983,988,1032,1042,1043,1044,1045,1087,1088,1101,1107,1108,1118,1128,1132,1133,1134,1135,1136,1137,1138,1139,1144,1147],"public":[828,848],"return":[0,1,2,3,4,25,26,27,28,396,750,751,752,761,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,787,788,790,791,795,796,797,798,799,801,802,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,827,828,829,830,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,900,901,902,903,904,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,942,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1044,1045,1046,1047,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1101,1107,1108,1118,1127,1128,1134,1138,1143,1144,1147],"short":[1070,1080,1101,1147],"static":[25,26,750,751],"super":988,"true":[25,26,27,343,349,381,384,396,397,750,751,752,828,830,839,841,859,864,873,875,882,926,927,931,934,936,937,938,939,940,942,954,957,960,984,985,986,987,988,1032,1033,1040,1044,1045,1051,1052,1054,1055,1056,1057,1058,1059,1060,1062,1063,1070,1078,1083,1084,1085,1086,1089,1090,1091,1095,1118,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139],"try":[25,26,828,924,988],"var":[25,26,984,985,986,1147],"while":[25,26,27,988],AND:[962,963,1051,1052],But:1147,For:[828,831,843,915,931,937,945,966,967,1101,1107,1108,1144,1147],Its:[966,971],NOT:[962,964],One:[25,26,828,856,901,1044,1046,1147],Ones:[1101,1109],Such:[828,848],That:1144,The:[0,1,2,3,4,25,26,27,28,750,751,752,761,762,768,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,791,794,795,796,797,798,801,802,806,807,808,813,814,815,818,827,828,831,835,836,837,840,841,844,845,846,847,849,850,853,854,858,861,864,866,867,874,877,878,879,881,882,885,887,889,891,893,896,897,900,901,903,904,905,906,907,910,911,912,913,914,915,918,926,929,930,931,933,934,936,938,939,940,942,945,947,949,951,953,954,957,959,966,967,969,971,974,976,977,978,979,980,982,984,985,986,987,988,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1051,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1101,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1144,1147],There:[1101,1144],These:[28,1101],Used:[1032,1033,1040,1130,1131],Using:[1101,1102,1147],With:[25,26,954,957,960,1051,1054,1055,1056,1057,1058,1059,1060,1101,1143,1147],__array__:[828,836],__call__:[1118,1129,1130,1131],__del__:988,__dict__:[988,1144],__enter__:988,__exit__:988,__getitem__:988,__getstate__:988,__init__:[25,26,27,44,45,341,342,752,753,760,761,762,763,764,765,766,767,802,803,804,805,931,932,988,992,999,1095,1096,1099,1100,1101,1104,1105,1106,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1147],__iter__:988,__len__:988,__next__:988,__repr__:988,_assign_vari:1143,_axi:988,_base:[1032,1033,1040],_compute_node_da_ratio:988,_compute_node_strs_da:988,_concat_unify_arrai:988,_counter:988,_cur_framework:[28,988],_da_direct:988,_da_directions_flip:988,_da_step_tim:988,_da_tim:988,_da_tune_count:988,_data:988,_delta_da_dim_s:988,_delta_sf:988,_dict:988,_dim_siz:988,_first_da_tune_step:988,_first_ns_tune_step:988,_fn:988,_forward:[1101,1143],_get_kalman_param:1147,_get_prior:1147,_get_some_model:1147,_index:[1032,1033,1040],_input_queu:988,_length:988,_max_depth:988,_max_node_dim_step_ratio:988,_max_node_dim_step_s:988,_max_split_factor_step_s:988,_mean_unify_arrai:988,_min_bas:[828,914,1087,1088,1132,1133],_min_denomin:[828,913],_min_node_dim_s:988,_min_sf_tune_step:988,_min_unit_node_tune_step:988,_model:1147,_node_mapp:988,_node_percent_mem:988,_node_str:988,_node_str_da_ratio:988,_node_strs_da:988,_node_strs_kei:988,_node_strs_n:988,_node_util:988,_ns_step_tim:988,_ns_time:988,_ns_tune_count:988,_num_nod:988,_num_work:988,_observed_config:988,_output_queu:988,_paramet:1143,_percent_mem_inc_per_sf:988,_percent_mem_inc_per_unit_da_dim:988,_percent_util_inc_per_unit_da_dim:988,_ret_fn:988,_safety_factor:988,_save_dir:988,_shift_da_split:988,_shift_n:988,_slice:988,_step:[1134,1138],_sum_unify_arrai:988,_timeout:988,_tune:988,_tune_da:988,_tune_n:988,_tune_step:988,_unit_da_tune_count:988,_unroll_step:1147,_with_node_mappig:988,_worker:988,_worker_class:988,_worker_fn:988,abc:[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,752,761,767,988,1130,1131,1134,1138],abil:1101,abl:[25,26],about:[802,816,817],abov:[1044,1046],above_height:[25,26],abs:[224,343,443,546,828,988],absolut:[25,26,828,829],abstractmethod:988,accept:[0,1101],access:[25,26,1144],accord:[25,26,828,847,866,903,904,923,928],accordingli:[1051,1052],accur:[44,341,342,752,764,765,766,767,802,931,1095,1099,1109,1111,1112,1114,1115,1117],aco:[641,966],acosh:[641,966],across:[25,26,752,761,762,771,772,774,775,776,777,778,784,794,795,828,833,834,837,838,988,1032,1036],activ:[1063,1064,1065,1066,1067,1068,1069,1101,1105,1106],actual:1144,adam:[931,933,934,938,1101,1134,1136,1143],adam_step:931,adam_upd:931,adapt:[931,939,1134,1137],add:[25,26,28,988,1083,1084,1085,1086,1087,1088,1101,1132,1133,1144],add_fn_to_dict:1095,add_param:1095,added:[828,913,914,1140,1141],adding:[828,840],addit:[25,26,828,855,856,857,1087,1088,1118,1128],adher:28,adjac:[828,831],adopt:[828,848],affect:[828,831],affin:[1132,1133],after:[828,885,931,934,935,936,938,939,940,947,948,1087,1088,1134,1135,1136,1137,1138,1139,1147],after_1:[828,847,928],after_n:[828,847,928],against:[25,26,954,957,960,1051,1054,1055,1056,1057,1058,1059,1060],agnost:[1101,1143,1144],aim:1147,algebra:[390,954],algorithm:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125,1147],align:[25,26,28,828,840],aliv:[752,786,788,792,828,868,894,898],all:[0,1,2,3,4,25,26,28,139,303,398,506,665,750,751,752,761,786,792,828,829,830,837,838,848,861,868,874,898,912,984,985,986,987,988,1032,1033,1034,1040,1041,1044,1045,1048,1051,1054,1055,1056,1057,1058,1059,1060,1070,1080,1101,1144,1147],all_depth:[25,26],all_equ:828,all_fals:[25,26],all_key_chain:[25,26],all_nested_indic:1032,all_tru:[25,26],alloc:[752,988],allow:[828,886,887,888,1130,1131],allow_dupl:[828,888],alon:[752,791,801,988,1101],along:[25,26,396,752,775,776,777,778,781,782,783,784,796,828,835,846,851,852,861,866,885,886,887,900,911,915,918,925,954,957,960,984,985,986,987,988,1044,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060],alongsid:[1143,1144],alpha:[1062,1064],alphabet:[25,26,27],alphabetical_kei:[25,26,27],alreadi:[25,26,752,988],also:[25,26,28,828,831,931,934,984,985,986,987,1032,1033,1034,1040,1041,1070,1079,1118,1128,1143],altern:1143,alwai:[25,26,931,937,942],among:[25,26],amount:[752,798,988,1101],angl:[966,967,972],ani:[0,1,2,3,4,25,26,750,751,752,754,757,761,762,764,773,774,777,778,783,828,830,831,836,854,855,856,857,858,859,873,881,888,913,914,931,935,988,1032,1033,1036,1040,1041,1042,1043,1044,1048,1101,1107,1108,1130,1131,1143,1144,1147],anoth:[25,26,802,808,1101],anyth:1147,apart:28,api:[1101,1102],appear:[828,860],append:[25,26,988],appli:[0,3,4,25,26,828,855,856,857,931,938,939,954,959,962,963,964,965,984,985,986,1032,1036,1039,1041,1062,1063,1064,1065,1066,1067,1068,1069,1070,1079,1081,1082,1087,1088,1101,1104,1105,1106,1132,1133],applic:[1032,1036,1041,1070,1081,1082,1101,1147],approxim:[1062,1063],arang:[83,224,343,396,443,546,828,886,887],arbitrari:[25,26,752,781,782,784,988],arc:[966,972],arcco:[966,967],arctan:[966,971],area:1101,arg:[0,1,2,25,26,44,48,752,761,774,778,784,796,828,855,856,857,904,988,1089,1090,1091,1095,1107,1108,1130,1131],arg_nam:828,arg_stateful_idx:[1089,1090,1091,1095,1130,1131],argmax:[83,343,443,546,828],argmin:[83,343,443,546,828],args_clon:988,args_dist:988,args_to_ivi:[0,1101],args_to_n:[0,1101],args_uni:988,argsort:[343,546,828],argument:[0,1,2,3,4,25,26,27,28,44,48,750,751,752,761,762,774,778,784,828,831,832,841,854,888,904,966,967,988,1032,1036,1107,1108,1130,1131],aris:[1101,1147],arithmet:[1051,1055,1058,1060],around:[25,26,27],arr:396,arrai:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,83,224,343,396,443,546,752,770,771,772,775,776,777,778,781,782,783,784,786,788,792,796,797,802,806,812,816,817,819,820,828,829,830,831,833,834,835,837,838,839,840,842,843,844,845,846,847,849,850,851,852,855,856,857,858,860,861,862,863,864,865,866,867,868,871,873,874,875,876,877,878,879,881,882,883,884,885,886,887,889,890,891,892,894,895,896,897,898,900,901,902,903,904,909,911,912,915,916,917,918,920,921,922,923,925,926,927,928,929,930,931,933,934,937,938,942,944,945,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,988,1032,1034,1041,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1101,1118,1126,1127,1129,1134,1138,1143,1144],arrang:[828,855],array_api:28,array_builtin:[711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749],array_equ:[224,546,828],array_lik:[396,828,836],arrays_as_list:[25,26],arrays_equ:[25,26,828],arraywithdevic:[5,1101],arraywithgener:[7,1101],arraywithgradi:[9,1101],arraywithimag:[11,1101],arraywithlinalg:[13,1101],arraywithlog:[15,1101],arraywithmath:[17,1101],arraywithmeta:[19,1101],arraywithrandom:[21,1101],arraywithreduct:[23,1101],arriv:[25,26,27],articl:1101,arxiv:1101,as_arrai:[25,26,828,871,909],as_bool:[25,26],as_on:[25,26],as_random_uniform:[25,26],as_str:[341,343,352,752,770,802,809,810,811,812],as_tensor:343,as_vari:[25,26],as_zero:[25,26],asarrai:[343,828],asin:[641,966],asinh:[641,966],aspect:[947,952],assert:[25,26,828,839,988],assert_contains_sub_contain:[25,26],assert_contains_sub_structur:[25,26],assert_ident:[25,26],assert_identical_structur:[25,26],assert_is_bool:[25,26],assert_supports_inplac:828,associ:[954,961],assum:[1144,1147],astyp:[343,802],asynchron:[25,26,27],at_dev:[25,27,752,765,766],at_kei:[25,26],at_key_chain:[25,26],at_nod:988,atan2:[641,966],atan:[641,966],atanh:[641,966],attent:[1070,1081,1082,1118,1129],attribut:[25,26,828,897,930],audienc:[1101,1144],author:1101,avail:[25,26,752,787,789,790,799,828,856,988],averag:[931,933,934,938,984,985,986,1051,1055],average_across_step:[984,985,986],avoid:[752,988,1144],axes:[25,26,343,377,390,391,752,796,828,833,834,847,860,861,917,923,928,954,957,960,988,1051,1052,1054,1055,1056,1057,1058,1059,1060],axes_length:[25,26,828,855,856,857],axi:[25,26,343,345,346,350,351,356,358,367,368,369,375,376,378,752,754,757,764,775,776,777,778,781,782,783,784,796,828,833,834,835,846,847,850,851,852,860,861,866,885,886,887,900,911,912,915,917,918,925,928,954,960,988,1044,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1062,1067,1083,1085,1086],axis0:[25,26,828,917],axis1:[25,26,828,917],back:[1130,1131,1134,1138],backend:[0,2,4,25,26,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,752,787,790,799,802,808,818,827,828,876,880,931,934,936,938,939,940,945,988,1101,1102,1107,1108,1134,1135,1136,1137,1138,1139,1143,1144,1147],background:[1101,1144],backprop:1147,backward:[1051,1052,1143],band:[828,864],base:[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,44,341,342,343,369,752,754,755,756,757,758,759,761,762,764,765,766,767,802,828,869,887,905,914,931,988,1051,1053,1095,1099,1101,1104,1105,1106,1109,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1147],batch:[25,26,752,794,795,828,861,864,874,947,951,954,959,984,985,986,987,988,1070,1079,1087,1088,1132,1133],batch_shap:[343,356,360,828,861,874,895,947,948,949,950,951,952,953,954,961,1044,1045,1070,1080,1081,1082,1118,1127],batch_siz:[396,397,988,1044,1045,1070,1071,1072,1073,1074,1075,1076,1077],bayesian:1147,becaus:[828,831],becom:[828,843,966,972,1147],been:[828,855,856,857,1044,1045],befor:[25,26,752,796,984,985,986,988,1032,1041,1051,1054,1055,1056,1057,1058,1059,1060,1070,1081,1082,1147],before_1:[828,847,928],before_n:[828,847,928],begin:[1032,1033,1040,1144],behaviour:1147,behind:[931,934,936,938,939,940,1101],being:[25,26,828,831,899,907,988],belong:[25,26],below:[1101,1144,1147],below_depth:[25,26],benefit:1101,bernoul:[1070,1078,1118,1126],best:[828,888,1101],beta1:[931,933,934,938,1134,1135,1136],beta2:[931,933,934,938,1134,1135,1136],beta:[1087,1088],between:[25,26,27,828,831,1032,1036,1044,1046,1083,1085,1086,1134,1136],bia:[1070,1079,1080,1118,1119,1120,1121,1122,1123,1124,1125,1128],bias_initi:[1118,1119,1120,1121,1122,1123,1124,1125,1128],bilinear:[947,948],bilinear_resampl:[123,284,386,491,626,947],bilinearli:[947,948],binari:[1083,1084],binary_cross_entropi:1083,bit:[802,813,947,949,953,1101],block:[1101,1144],bool:[0,3,4,25,26,27,750,751,752,770,783,787,791,796,799,801,802,812,828,830,837,838,851,854,858,859,864,871,873,881,882,888,909,911,925,926,927,931,934,935,936,937,938,939,940,942,954,957,960,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1044,1045,1051,1054,1055,1056,1057,1058,1059,1060,1062,1063,1070,1078,1107,1108,1118,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139],both:[828,850],bottom:1101,boundari:[25,26,1044,1048],branch:[750,751],broadcast:[25,26,828,840,858,890,891,892,900,954,957,960,966,972,976,1051,1052,1054,1055,1056,1057,1058,1059,1060],broadcast_to:[224,546,828],build:[988,1101,1118,1129,1130,1131],build_mod:[1118,1129,1130,1131],builder:1101,built:[752,828,831,988,1118,1129,1130,1131],builtin_ab:[179,711],builtin_add:[179,711],builtin_and:[179,711],builtin_bool:[179,711],builtin_contain:[179,711],builtin_deepcopi:[179,711],builtin_dir:[179,711],builtin_eq:[179,711],builtin_float:[179,711],builtin_floordiv:[179,711],builtin_g:[179,711],builtin_getattr:[179,711],builtin_getattribut:[179,711],builtin_getitem:[179,711],builtin_gt:[179,711],builtin_int:[179,711],builtin_invert:[179,711],builtin_l:[179,711],builtin_lt:[179,711],builtin_mul:[179,711],builtin_n:[179,711],builtin_neg:[179,711],builtin_or:[179,711],builtin_po:[179,711],builtin_pow:[179,711],builtin_radd:[179,711],builtin_rand:[179,711],builtin_rfloordiv:[179,711],builtin_rmul:[179,711],builtin_ror:[179,711],builtin_rpow:[179,711],builtin_rsub:[179,711],builtin_rtruediv:[179,711],builtin_rxor:[179,711],builtin_setitem:[179,711],builtin_sub:[179,711],builtin_truediv:[179,711],builtin_xor:[179,711],bypass:1144,cach:[752,768,828,841],cache_fn:828,calcul:[25,26,27,966,976],call:[752,796,828,899,907,924,931,935,988,1032,1033,1036,1040,1118,1129,1130,1131,1134,1138,1144,1147],callabl:[25,26,750,751,752,761,762,796,828,841,854,856,888,924,984,985,986,987,988,1032,1036,1037,1038,1040,1041,1070,1081],can:[752,794,795,796,828,901,947,949,988,1101,1143,1144,1147],cancel_join_thread:988,captur:1101,cast:[25,26,83,224,343,443,546,802,828,846,947,949,953],catch_except:[828,854],categori:28,ceil:[224,343,546,828,831],cell:[1070,1080,1118,1127],certain:[25,26,828,831,886,887],chain:[25,26,984,985,986,1140,1141],chang:[752,828,901,988,1032,1034,1041,1101,1143],channel:[828,864,947,949,950,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128],check:[0,1,2,3,4,25,26,752,791,801,802,807,818,827,828,839,859,873,881,916,926,931,937,988,1032,1033,1040,1101,1144],check_nest:[1032,1040],check_shap:[25,26],check_submod_ret:[1130,1131],check_typ:[25,26],choic:[1101,1144],choleski:[630,954],choos:[828,927,966,972,1101],choose_random_framework:44,chosen:[25,26,828,831,927],chunk:[752,794,795,796,988],chunk_siz:[752,796,988],circl:[966,967,969],clark:1101,clear:[752,768,988],clear_framework_stack:44,clear_mem_on_dev:[341,538,752],click:1101,clip:[25,26,224,343,546,828,844,845,890,892,1101],clip_matrix_norm:828,clip_max:[25,26],clip_min:[25,26],clip_vector_norm:[25,26,828],clipped_delta:988,clone:[25,26,752,771,772,773,774,988],clone_arrai:988,clone_it:988,clone_nest:988,clonedit:988,cloneditem:988,clonednest:988,close:[947,952,966,969,988,1147],closest:[802,807],closest_valid_dtyp:802,code:[25,26,27,28,396,1101,1102,1143,1144],codebas:[752,794,795,988,1101,1144,1147],collect:[0,25,26,341,343,381,386,390,393,394,396,711,750,752,802,828,931,947,954,962,966,988,1032,1044,1051,1062,1070,1083,1087,1104,1118,1132,1134],color:[25,26,27,1145,1146],column:[828,874],combin:[25,26,27,947,952,1101,1147],combined_batch_s:988,come:1144,command:1101,commit:1147,common:[25,26,966,972],common_key_chain:[25,26],commun:[1101,1144],compar:[25,26,828,830,837,838],compat:[828,858,901,966,976,1051,1052,1101,1147],compil:[224,343,546,1090,1091,1095,1101,1130,1131,1134,1135,1136,1137,1138,1139],compile_graph:[1089,1101,1130,1131,1134,1138],compile_on_next_step:[1130,1131,1134,1135,1136,1137,1138,1139],complet:[25,26,988],complex:[1144,1147],compon:[828,850],comput:[25,26,752,796,828,844,845,851,852,858,889,931,933,934,935,936,938,939,940,942,944,947,950,954,955,956,957,958,960,962,963,964,965,966,967,969,971,972,974,977,978,979,980,982,1032,1036,1051,1053,1054,1055,1056,1057,1058,1059,1060,1070,1071,1072,1073,1074,1075,1076,1077,1079,1081,1083,1084,1085,1086],concat:[25,26,752,781,782,783,784,796,828,864,988],concaten:[25,26,83,224,343,443,546,828,864,988,1101],concatten:[25,26,752,781,782,783,784,796,988],condit:[343,750,751,828,927,1032,1040],conditon:[1032,1040],config:[25,26,988],config_list:988,configur:[25,26],conjunct:1144,connect:[1095,1118,1128,1129],consid:[25,26,954,960,1143,1147],consist:[25,26,752,784,988,1051,1053,1130,1131,1144],constant:[752,761,762,828,847,988,1032,1036,1083,1084,1085,1086,1087,1088,1109,1110,1114,1117,1130,1131,1132,1133,1144],constant_kwarg:988,constant_pad:[224,343,443,546,828],constitu:[25,26],construct:[828,918,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143],constructor:[25,26,27,828,832,1140,1141],consum:[752,988],cont_feat_dim:[1070,1081],contaienr:[25,26],contain:[0,3,4,27,752,771,775,796,802,806,828,829,833,834,835,843,844,845,848,858,873,882,890,892,902,913,914,931,933,934,936,938,939,940,966,976,984,985,986,987,988,1044,1045,1051,1054,1055,1056,1058,1060,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141],container0:[25,26],container_combine_method:[25,26,27],container_rightmost:[25,26],container_typ:[343,546,828],contains_sub_contain:[25,26],contains_sub_structur:[25,26],content:[25,26],context:[343,828,893,1070,1081,1118,1129],context_dim:[1118,1129],contextmanag:[44,45],continu:[988,1144],contract:[25,26,1051,1053],contribut:[1101,1102],contributor:1101,control:1101,conv1d:[154,316,411,686,1070,1101,1118],conv1d_transpos:[154,316,411,686,1070],conv1dtranspos:[1101,1118],conv2d:[154,316,411,517,686,1070,1101,1118],conv2d_transpos:[154,316,411,686,1070],conv2dtranspos:[1101,1118],conv3d:[154,316,411,517,686,1070,1101,1118],conv3d_transpos:[154,316,411,686,1070],conv3dtranspos:[1101,1118],convent:[25,26,1051,1053],conver:[752,768,779,791,798,801,988],convers:[1,2,3,4,25,26,988,1101],convert:[0,1,2,3,4,25,26,752,779,780,802,808,814,815,828,910,921,922,947,949,953,954,961,988,1032,1034,1041,1101,1108],convert_dtyp:802,convolut:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],cool:28,cooler:28,coordin:[828,891,966,967,969,972],copi:[25,26,396,828,849,988,1032,1034],copy_arrai:[343,546,828],copy_nest:1032,core:[341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1101],correct:[28,1101,1144],correctli:[25,26,954,957,960,966,972,1051,1054,1055,1056,1057,1058,1059,1060],correspond:[25,26,828,846,1044,1045],cos:[641,828,864,966,967,982,1144],cosh:[641,966],cosin:[966,967,968,974,975],cost:[931,933,934,936,938,939,940,984,985,986,987],cost_fn:[984,987],could:1147,count:[25,26,988,1051,1052,1057,1059,1099],cprint:1145,cpu:[25,26,752,789,791,797,798,801,828,831,836,866,867,874,886,887,895,896,897,903,904,929,930,988,1044,1045,1046,1047,1048,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141,1143,1144],creat:[25,26,752,761,762,828,831,836,865,866,867,874,886,887,895,896,897,903,904,920,929,930,931,944,988,1044,1045,1046,1047,1048,1101,1107,1108,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1147],create_if_abs:[25,26],create_vari:1109,creation:[25,26,27],crop:[947,951],crop_siz:[947,951],cross:[224,546,828,1083,1084,1085,1086],cross_entropi:1083,cuda:[25,26,752,761,780,797,828,831,836,866,867,874,886,887,895,896,897,903,904,929,930,988,1044,1045,1046,1047,1048,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141],cumprod:[83,224,343,546,828],cumsum:[546,828],cumul:[828,851,852],current:[25,26,27,752,761,785,786,788,792,802,808,818,827,828,853,868,876,880,894,898,988,1032,1033,1040,1101,1147],current_framework:44,current_framework_str:[343,546,828,988],cutoff_at_depth:[25,26],cutoff_at_height:[25,26],cv2_label:1095,d_in:[1070,1071,1072,1073,1074,1075,1076],d_out:[1070,1071,1072,1073,1074,1075,1076],da_can_termin:988,da_dim_s:[752,988],da_direct:988,da_tune_step:[752,988],dai:1147,daniel:1101,data:[25,26,27,28,752,754,755,756,757,758,759,764,765,766,780,802,806,807,808,812,813,814,815,816,817,818,819,820,827,828,831,836,858,865,874,881,882,896,897,901,912,916,929,930,931,937,945,966,976,988,1070,1079,1101],data_format:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],dataset:[25,26],datatyp:[25,26,802,807,819,820],dcdw:[931,933,934,936,938,939],debug_info:1095,debug_mod:29,debug_mode_in:[29,32],debugg:[30,31,32,33,34],decai:[931,938,939,1134,1136,1137],decay_lambda:[931,938,939,1134,1136,1137],decid:[25,26,1147],decompos:[954,955],decomposit:[954,955,959],decrement:[828,877],dedic:[931,945,1107,1108],deep:[25,26,1101],deep_copi:[25,26],deeper:[752,774,778,784,988,1032,1041,1101],deepli:[1032,1034],def:[28,45,753,760,763,803,804,805,932,988,992,999,1096,1100,1101,1110,1113,1116,1143,1144,1147],default_dev:28,default_devic:752,default_dtyp:[28,802],default_float_dtyp:802,default_int_dtyp:802,default_key_color:[25,26,27],default_nod:988,default_rng:396,default_v:[828,854],defaultdevic:[752,753],defaultdtyp:[802,803],defaultfloatdtyp:[802,804],defaultintdtyp:[802,805],defin:[28,828,850,895,897,930,1044,1046],degre:[966,974,980,982],del:988,delta:[931,933,988,1095],delta_dim_s:988,delta_percent_mem:988,delta_sf:988,delta_util:988,demo:1101,denomin:[828,863,870,906,913,914,1087,1088,1132,1133],dens:[1118,1128],depend:[828,927,954,959,1101],depth:[25,26,343,370,752,774,778,784,828,872,895,988,1032,1041,1095,1099,1130,1131],depth_cutoff:[25,26],depthwis:[1070,1077,1118,1125],depthwise_conv2d:[154,316,411,517,686,1070],depthwiseconv2d:[1101,1118],deriv:[931,933,934,936,938,939,940,1032,1034,1041,1101,1130,1134,1138,1140],descend:[954,959],descent:[931,936,1134,1139],describ:[25,26,1051,1053],desir:[25,26,752,797,802,806,828,831,836,874,875,896,897,929,930,947,952,988,1051,1054,1055,1056,1058,1060],desired_aspect_ratio:[386,389,947,952],desired_percent_increas:988,detail:1147,detect:[25,26,1032,1033,1040],detect_key_diff:[25,26],detect_shape_diff:[25,26],detect_value_diff:[25,26],determin:[25,26,752,787,789,790,799,802,806,807,813,818,819,820,827,828,830,831,836,837,838,873,876,880,881,882,916,926,931,937,966,976,984,985,986,987,988,1051,1052,1070,1081],dev:[25,26,27,28,76,218,341,343,344,347,358,359,360,368,369,370,371,372,373,374,379,380,396,397,436,538,752,755,756,758,759,761,762,765,766,768,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,788,791,792,793,794,795,796,797,798,801,828,831,836,866,867,874,886,887,895,896,897,903,904,929,930,931,946,1044,1045,1046,1047,1048,1107,1108,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141],dev_clon:[25,26,752],dev_clone_arrai:752,dev_clone_it:752,dev_clone_nest:752,dev_dist:[25,26,752],dev_dist_arrai:752,dev_dist_it:752,dev_dist_nest:752,dev_from_str:[28,76,218,341,436,538,752],dev_mapp:752,dev_str:[25,26],dev_to_str:[76,218,341,436,538,752],dev_unifi:752,dev_unify_arrai:752,dev_unify_it:752,dev_unify_nest:752,dev_util:752,devclonedit:752,devcloneditem:752,devclonednest:752,devdistit:752,devdistitem:752,devdistnest:752,develop:[1101,1144,1147],deviat:[25,26,1044,1047,1051,1058,1087,1088,1132,1133],devic:[6,25,26,28,342,343,357,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,828,831,836,865,866,867,874,886,887,895,896,897,903,904,929,930,931,946,1044,1045,1046,1047,1048,1101,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141],devmanag:[752,760],devmapp:[752,762],devmappermultiproc:752,diag:[954,959],diagon:[828,874],dict:[0,1,2,3,4,25,26,27,752,754,757,761,762,764,774,775,776,777,778,828,855,856,857,888,984,985,986,988,1032,1034,1035,1036,1039,1041,1107,1108],dict_in:[25,26,27],dictionari:[25,26,27],diff:[25,26],diff_kei:[25,26],differ:[25,26,27,752,771,772,775,776,988,1070,1079,1101,1144,1147],differenti:[1101,1144],dilat:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],dim:[25,26,828,895,947,948,952,954,959,988,1118,1129],dim_siz:[25,26,752,988],dimens:[25,26,27,752,783,828,840,846,850,855,856,857,860,864,871,885,895,900,901,911,912,915,923,925,947,951,954,957,959,960,984,985,986,987,988,1044,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1067,1070,1071,1072,1073,1074,1075,1076,1077,1080,1083,1085,1086,1118,1119,1120,1121,1122,1123,1124,1125,1128,1129],dimension:[25,26,396,828,911,912,954,959],direct:988,directli:[1032,1041,1144,1147],directori:[828,908,919],discret:[1083,1085],disk:[25,26,947,949],distanc:[828,831],distribut:[25,26,752,771,775,776,777,778,988,1044,1045,1046,1047,1048,1070,1078,1118,1126,1130,1131],distribute_nest:988,distributedarrai:[25,26],distrubt:[1083,1085],dive:[1101,1144],divid:[25,26,828,911,913,966],dividend:[966,976],divis:[828,863,870,906,913,914,931,933,934,938,966,976,1134,1135,1136],divisor:[931,933,934,938,966,976,1134,1135,1136],doc:1101,docstr:28,doe:[25,26,28,828,831,911,1143],doesn:1101,domain:[966,967],don:1101,door:1147,dot:[954,956,1070,1081,1082,1118,1129],down:1143,downscal:[828,844,845],drag:[1101,1147],draw:[1044,1045,1047,1048],drawn:[1044,1045,1046,1047,1048],drop:[1101,1147],dropout:[1070,1101,1118,1129],dropout_r:[1118,1129],ds_tune_step:752,dtype:[25,26,28,83,224,343,344,347,348,357,360,371,372,379,380,443,546,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,831,836,865,874,895,896,897,929,930],dtype_bit:[83,224,343,443,546,802],dtype_from_str:[28,83,224,343,443,546,802],dtype_in:[343,353,354,355,802,808,813,814,815,818,819,820,827],dtype_to_str:[83,224,343,443,546,802],duplic:[25,26],dure:[25,26,750,751,828,924,931,933,934,938,984,985,986,987,1130,1131,1134,1135,1136,1138],dynam:[343,349,750,751],each:[25,26,27,752,761,762,771,772,773,774,775,776,777,783,795,796,828,829,830,835,847,858,882,900,911,915,918,928,931,934,936,938,939,940,947,950,954,959,966,969,976,978,979,988,1032,1036,1044,1045,1051,1053,1070,1071,1072,1073,1074,1075,1076,1077,1078,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1144],eager:1144,easi:1147,easili:1101,econom:1147,ecosystem:1101,edg:[828,843,847,928],effect:[931,940],effective_grad:[931,940],effici:1147,einop:[25,26,828,855,856,857],einops_rearrang:[25,26,828],einops_reduc:[25,26,828],einops_repeat:[25,26,828],einstein:[25,26,1051,1053],einsum:[25,26,139,303,398,506,665,1051],either:[25,26,828,854,888,891,893,984,985,986,987,988,1118,1129,1130,1131,1144],eleg:988,element:[25,26,396,752,773,777,783,802,806,828,829,831,833,834,835,837,838,842,843,844,845,851,852,858,861,862,863,874,875,882,890,892,900,902,911,922,927,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,988,1051,1052,1053,1055,1057,1059,1062,1063,1064,1065,1066,1067,1068,1069,1070,1078,1118,1126],elementwis:[25,26],elementwise_affin:[1132,1133],elemtn:[1044,1045],elif:988,els:[828,839,854,859,988],elsewher:[828,927],emphas:1101,empti:[25,26,988],enabl:[25,26,27,1101],encod:[828,864,947,949],end:[828,831,1101,1144],entir:[25,26,752,796,988,1051,1052,1101,1118,1127],entri:[25,26,828,861,886,887,911,912],entropi:[1083,1084,1085,1086],enumer:988,environ:1101,epsilon:[931,933,934,938,1083,1084,1085,1086,1087,1088,1132,1133,1134,1135,1136],equal:[25,26,343,443,546,828,830,837,838,847,882,911,928,966,974,980,982,1044,1048],equality_matrix:[828,830],equat:[25,26,1051,1053],equival:[828,831,966,982],erf:[394,641,966],error:[25,26,752,828,912,966,977,988,1062,1063,1130,1131,1134,1138],etc:[25,26,752,797,828,831,836,866,867,874,886,887,895,896,897,903,904,929,930,988,1044,1045,1046,1047,1048,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141,1147],evalu:[25,26,828,891,1032,1033,1040,1051,1052],even:1147,evenli:[25,26,828,831,886,887,911],everi:[828,830,1147],exact:[25,26],exampl:[750,751,828,843,915,1101,1143,1144,1147],example_input:[343,349,750,751],exc_tb:988,exc_typ:988,exc_val:988,exce:[828,892],except:[25,26,29,32,828,831,839,846,854,924,988,1051,1052],excess_s:988,excit:[1101,1144],exclud:[44,46,828,831,1044,1048],exclus:[25,26,343,351,365,381,383,828,851,881,931,937,1044,1046],execut:[828,924,1144],execute_with_gradi:[120,279,381,486,620,931,1101,1143],exist:[25,26,828,854,988,1101,1134,1138,1147],exp:[641,966],expand:[25,26,828,860,864],expand_dim:[25,26,224,546,828,988],expect:[828,832],explain:1144,explicitli:[1118,1127,1129,1130,1131,1144],expon:[828,914],exponenti:[966,977,978],expos:[828,836,848],express:[828,891],exsit:[25,26],extra:[25,26,27,931,935],eye:[954,956],fabian:1101,fabio:1101,factor:[752,761,794,795,796,931,933,934,938,939,954,959,988,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125,1134,1135,1136,1137],falck:1101,fall:[1130,1131,1134,1138],fallback_to_non_compil:[1130,1131,1134,1138],fals:[0,3,4,25,26,27,44,51,52,53,54,55,341,343,351,352,365,375,378,381,382,383,390,391,752,770,783,791,796,801,802,809,810,811,812,828,830,851,854,859,864,871,881,882,888,909,911,925,927,931,934,935,936,937,938,939,940,954,957,960,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1051,1052,1054,1055,1056,1057,1058,1059,1060,1089,1090,1091,1095,1099,1107,1108,1130,1131,1134,1135,1136,1137,1138,1139],fan_in:1109,fan_mod:1109,fan_out:1109,far:[1032,1033,1040,1143],faster:[750,751],favourit:[1101,1143],feasibl:1147,feat_dim:[1070,1081,1082],fed:[752,796,988],feed:[752,796,988],field:1147,file:[25,26,28,828,908,919,1130,1131],filepath:[25,26],fill:[25,26,828,865,896,929,1044,1046],fill_valu:[343,357,828,865],filter:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125,1147],filter_s:[1118,1119,1120],filter_shap:[1118,1121,1122,1123,1124,1125],find:[25,26,1147],find_sub_contain:[25,26],find_sub_structur:[25,26],finfo:802,finish:[1101,1147],finit:[828,882],first:[25,26,396,750,751,752,783,828,837,846,850,858,886,887,915,917,931,935,954,959,984,985,986,987,988,1032,1033,1040,1044,1050,1051,1057,1059,1118,1129,1130,1131,1134,1138,1144,1147],firstlayersiren:[1101,1109],firstli:[1144,1147],fist:[752,796,988],fit:[25,26,341,343,381,386,390,393,394,396,828,900,947,952],fkt:1147,flag:[25,26,931,937],flat:[25,26,828,900,903],flat_list:[25,26],flatten:[25,26,828,864,900,954,960,1051,1054,1055,1056,1058,1060],flatten_key_chain:[25,26,1130,1131],flexibl:[1101,1144],flip:[25,26,83,224,343,443,546,828],float32:[343,360,802,806,814,815,828,831,836,874,896,897,929,930],float_dtyp:[802,810,822],float_img_to_uint8_img:947,floor:[224,343,546,828,863,988],floormod:[224,343,546,828],fluid:1147,fname:[1089,1091,1095,1130,1131],folder:1101,follow:[25,26,28,752,796,828,877,878,879,913,914,931,934,936,938,939,940,988,1032,1036,1041,1070,1081,1082,1101,1118,1128,1134,1138],fomaml_step:984,forget:[931,933,934,938,1134,1135,1136],fork:[828,893],forkserv:[828,893,988],form:[0,1,2,3,4,25,26,828,836,931,934,936,938,939,940,1032,1034,1041,1070],format:[25,26,28,752,770,802,806,808,812,828,831,836,874,896,897,929,930,988,1051,1053,1101,1143,1144],format_fn:[25,26],format_key_chain:[25,26],forward:[1130,1131,1134,1138,1143],found:[25,26,27],fourier:[828,864],fourier_encod:828,framework:[0,1,2,3,4,6,8,10,12,14,16,18,20,22,24,25,26,27,28,30,31,32,33,34,45,46,47,48,49,50,51,52,53,54,55,56,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,128,129,133,134,135,136,137,138,140,141,142,143,144,145,146,147,150,152,153,155,156,157,158,159,160,161,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,285,286,287,289,290,291,292,294,295,296,299,300,301,302,304,305,306,307,308,309,310,311,312,315,317,318,319,320,321,322,323,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,387,388,389,391,392,395,397,399,400,401,402,403,404,405,406,409,410,412,413,414,415,416,417,418,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,492,493,494,496,497,498,502,503,504,505,507,508,509,510,511,512,513,514,518,519,520,539,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,621,622,623,624,625,627,628,629,631,632,633,634,635,636,638,639,640,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,659,660,661,662,663,664,666,667,668,669,670,671,672,673,676,677,678,679,680,681,682,684,685,687,688,689,690,691,692,693,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,955,956,957,958,959,960,961,963,964,965,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1084,1085,1086,1088,1090,1091,1093,1094,1096,1100,1101,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1146,1147],framework_handl:[44,46,47,48,49,50,51,52,53,54,55,56],framework_str:988,framewrk:[828,893],frequenc:[828,864],from:[25,26,27,28,752,761,762,796,802,808,828,854,861,866,867,874,901,912,920,927,931,934,938,947,951,984,985,986,987,988,1032,1034,1041,1044,1045,1046,1047,1048,1051,1052,1057,1059,1070,1078,1081,1101,1107,1108,1118,1126,1129,1134,1138,1143,1144],from_cal:[1130,1131],from_disk_as_hdf5:[25,26],from_disk_as_json:[25,26],from_disk_as_pickl:[25,26],from_flat_list:[25,26],from_numpi:[25,26],full:[83,224,343,443,546,828,1101],full_matric:[954,959],fulli:[1101,1118,1128,1129,1143],func:[25,26,343,349,381,382,750,751,752,796,828,841,931,935,988],further:1147,furthermor:1147,futur:1147,gain:1109,gamma:[1087,1088],gather:[25,26,83,224,343,443,546,828,867],gather_nd:[25,26,83,224,343,443,546,828],gauss:[966,977],gaussian:[1062,1063],geglu:[1101,1104],gelu:[314,408,675,1062,1101,1104],gener:[8,25,26,341,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,396,750,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,937,1044,1046,1048,1049,1101,1134,1138],geometr:[828,864],get:[25,26,752,761,762,770,785,786,791,795,798,801,802,812,813,816,817,828,832,868,869,870,899,988,1099,1101,1118,1127,1147],get_all_arrays_in_memori:828,get_all_arrays_on_dev:752,get_framework:44,get_initial_st:[1118,1127],get_min_bas:828,get_min_denomin:828,get_mod_kei:[1130,1131],get_num_dim:[343,546,828],get_param:1095,get_param_recurs:1095,get_referrers_recurs:828,getfullargspec:988,gist:1101,give:[828,835,901,1144],given:[25,26,752,785,791,794,795,796,798,801,802,806,828,831,835,836,843,851,852,861,867,886,887,896,897,900,903,904,911,918,923,925,929,930,931,933,934,936,938,939,940,954,956,961,966,967,988,1032,1037,1038,1044,1047,1048,1050,1051,1055,1057,1058,1059,1060,1070,1071,1072,1073,1074,1075,1076,1077,1107,1108,1147],global:[25,26,27,752,761,762,769,794,795,796,802,809,810,811,828,853,869,870,899,905,906,907,913,914,931,946,988,1087,1088,1093,1094,1101,1132,1133],global_framework:[44,48],global_norm:[25,26],glorotuniform:[1101,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128],got:1101,gpu:[752,787,790,988],gpu_is_avail:[341,752,988],grad:[1101,1134,1138,1143],gradient:[10,25,26,382,383,384,385,752,796,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,950,984,985,986,987,1101,1134,1135,1136,1137,1138,1139,1143,1147],gradient_descent_upd:[931,984,985,986,987],gradient_imag:[123,284,386,491,626,947],gradienttrack:[931,932],graph:[931,934,936,938,939,940,1089,1090,1091,1096,1101,1130,1131],graph_compil:[1089,1090,1091,1092,1093,1094,1095,1099],greater:[25,26,828,831,862,912,1044,1048],green:[25,26,27,1145,1146],grid:[828,891],group:[947,952],guid:[1101,1102,1147],gym:1101,h5_file_s:[25,26],h5_obj_or_filepath:[25,26],h5py:[25,26],had:1147,half:[828,831,988,1044,1048],hand:1101,handl:[25,26,27,750,751,752,768,770,779,780,791,798,801,931,934,936,938,939,940,988,1134,1135,1136,1137,1138,1139],has:[25,26,828,915,966,971],has_kei:[25,26],has_key_chain:[25,26],has_nan:[25,26,828],hasattr:988,have:[25,26,828,846,850,855,856,857,858,865,882,915,931,937,945,954,959,966,976,988,1101,1143,1144],hdf5:[25,26,1130,1131],head:[1070,1081,1118,1129],head_dim:[1118,1129],height:[947,952],height_cutoff:[25,26],help:[44,341,342,752,764,765,766,767,802,931,1095,1099,1101,1109,1111,1112,1114,1115,1117],helper:1101,here:[28,1101],hidden:[1070,1080,1118,1127],hierarch:[828,848],hierarchi:[25,26],high:[25,26,396,1044,1046,1048],higher:[931,934,936,938,939,940,954,959],highest:[1044,1046],highest_util:988,highest_util_nod:988,highli:1101,highlight:1147,highlight_subgraph:[1089,1091,1095],hint:28,hkt:1147,hold:[802,806,828,831,836,903,904],host:1101,hot:[828,895],how:[1101,1118,1129,1130,1131,1144,1147],howev:1144,http:1147,hyperbol:[966,968,970,973,975,981,983,1062,1069],hypothet:1147,icon:1101,idea:1101,ident:[25,26,28,83,224,343,443,546,828],identical_array_shap:[25,26],identical_config:[25,26],identical_structur:[25,26],if_exist:[25,26],ignor:[25,26,1134,1138],ignore_key_error:[25,26],ignore_miss:[1134,1138],ignore_non:[25,26],iinfo:802,imag:[12,387,388,389,828,885,948,949,950,951,952,953,1070,1071,1072,1073,1074,1076,1077,1101,1147],image_dim:[947,951],imkkhk:1147,immedi:[1101,1144,1147],implement:[1101,1144,1147],in_featur:[1070,1079],includ:[25,26,828,831,873,913,914,926,1032,1033,1044,1048,1051,1052,1118,1128,1129,1132,1133,1143],include_deriv:[1032,1034,1041],include_empti:[25,26],include_gener:[1089,1090,1091,1095,1130,1131],include_inf:[25,26,828,873,926],include_nest:[1032,1033],include_self:[25,26],inclus:[1044,1046],incom:[1070,1079],increas:[752,774,778,784,828,847,860,928,988,1032,1041],increasingli:1147,increment:[828,878,988],increment_param_count:1095,inde:1101,indent:[25,26,27],independ:[1044,1045],index:[25,26,343,396,828,833,834,866,867,891,912,915,1032,1035,1037,1038,1039,1042],index_nest:1032,indic:[25,26,343,358,359,370,373,374,828,833,834,835,866,867,875,895,903,904,1032,1033,1035,1037,1038,1039,1040,1042,1043,1044,1045,1062,1067,1070,1071,1072,1073,1074,1075,1076,1077,1087,1088,1118,1119,1120,1121,1122,1123,1124,1125,1130,1131],indices_wher:[83,224,343,546,828],inevit:1147,inf:[25,26,828,873,883,926,966,971],infer:[750,751,828,861,871,874,901,909,947,951,1144,1147],infin:[828,882,883],inform:[802,816,817,931,942],init_c:[1070,1080],init_h:[1070,1080],init_on_first_step:[1134,1138],initi:[25,26,27,44,341,342,752,764,765,766,767,802,931,988,1070,1080,1095,1099,1101,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1134,1138],initialz:[1130,1131],inner:[984,985,986,987],inner_batch_fn:[984,985,986],inner_batch_shap:[1070,1079],inner_cost_fn:[984,985,986],inner_grad_step:[984,985,986,987],inner_learning_r:[984,985,986,987],inner_optimization_step:[984,985,986,987],inner_v:[984,985,986],inp:988,inplac:[25,26,828,839,876,880,916,931,934,936,938,939,940,1107,1108,1134,1135,1136,1137,1138,1139],inplace_arrays_support:[343,828],inplace_decr:[83,224,343,443,546,828],inplace_incr:[83,224,343,443,546,828],inplace_upd:[25,26,83,224,343,443,546,828,1107,1108],inplace_variables_support:[343,828],input:[0,3,4,25,26,27,28,750,751,752,761,762,769,770,771,774,775,778,784,796,797,802,806,807,809,810,811,812,813,819,820,828,829,830,833,834,835,837,838,839,840,842,843,844,845,846,847,849,851,852,854,855,856,857,858,859,860,861,862,863,864,871,873,874,875,877,878,879,881,882,883,884,885,889,890,891,892,900,902,909,910,912,915,916,917,918,920,921,922,923,925,926,928,931,935,937,942,946,947,948,949,950,951,953,954,957,959,960,962,963,964,965,966,968,970,971,973,974,975,976,980,981,982,983,984,985,986,987,988,1044,1045,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1087,1088,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1132,1133,1144],input_ax:[752,796,988],input_channel:[1118,1119,1120,1121,1122,1123,1124,1127,1128],input_queu:988,inputs_split:988,insert:[828,860],inspect:988,inspir:1147,instal:1101,instanc:[0,1,2,3,4,25,26,396,752,761,988,1107,1108,1140,1141],instead:[25,26,396,1051,1054,1055,1056,1057,1058,1059,1060,1147],int64:[802,806,828,831,836,874,896,897,929,930],int_dtyp:[802,811,823],integ:[25,26,396,802,817,820,828,831,842,862,902,911,954,960,1044,1046,1049,1051,1052],integr:1101,inter:1101,interchang:[25,26,828,917],interest:1101,interfac:[828,836,1144],intermedi:[25,26],intern:[25,26,752,931,945,988,1032,1033,1040,1041,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1140,1141],interpol:[828,885],intersect:[966,967],interv:[25,26,828,831,843,886,887,966,969,1044,1048,1051,1052],introduc:1147,inv:[630,954,1147],invalid:[1051,1052],invalid_dtyp:802,invers:[954,956,958,966,967,968,969,970,971,973,1147],invert:[954,956,958],invest:1147,invoc:[750,751],irrespect:1101,is_al:988,is_arrai:[83,224,343,443,546,828,988],is_float_dtyp:802,is_int_dtyp:802,is_mean:988,is_sum:988,is_var:[1095,1099],is_vari:[120,279,381,486,620,931],isfinit:[83,224,343,443,546,828],isinf:[224,443,546,828],isinst:988,isnan:[224,443,546,828],isnumer:988,item:[0,4,25,26,711,723,724,752,761,762,764,771,773,775,777,783,802,809,828,848,872,913,914,988,1032,1036,1037,1038,1041,1042,1043,1101,1130,1131,1143],iter:[0,1,2,3,4,25,26,27,750,751,752,755,756,758,759,761,762,765,766,773,775,776,777,778,783,796,828,830,840,846,847,861,874,891,896,900,901,904,909,911,915,918,923,928,929,988,1032,1033,1034,1036,1040,1041],iterbal:[752,773,777,783,988],its:[396,752,796,828,835,874,901,917,923,988,1101],itself:[1032,1041],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,44,46,47,48,49,50,51,52,53,54,55,56,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1099,1101,1102,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1145,1146],ivy_backend:[25,26],ivy_bay:1147,ivyfcmodel:1143,ivyh:[25,26,27],ivymodul:[151,683],jame:1101,jax:[931,937,1101,1147],jax_concat:1101,jnp:1101,join:[25,26,828,846,915,988],journal:1101,json:[25,26],json_filepath:[25,26],jsonabl:[25,26],just:[1101,1118,1127,1147],kaimingnorm:[1109,1113],kalman:1147,kalman_filt:1147,kalman_filter_step:1147,kalman_filter_upd:1147,keep:[25,26,752,797,828,925,988,1101,1147],keep_inner_v:[984,985,986],keep_non:[25,26],keep_orig:[25,26],keep_outer_v:[984,985,986],keepdim:[25,26,343,378,390,391,828,925,954,957,960,1051,1052,1054,1055,1056,1057,1058,1059,1060],kei:[0,1,2,25,26,27,711,716,752,764,828,848,984,985,986,988,1032,1035,1039,1070,1081,1082,1101,1107,1108,1118,1129,1134,1138],kept:[25,26,27,984,985,986],kera:1147,kernel:[1070,1080],key1:[25,26],key2:[25,26],key3:[25,26],key_chain:[25,26],key_chains_contain:[25,26],key_length_limit:[25,26,27],key_slic:[25,26],keychain:[25,26],keychain_map:[25,26],keyword:[0,1,2,25,26,27,752,761,762,774,778,784,828,832,855,856,857,888,988,1032,1036,1130,1131],keyword_color_dict:[25,26,27],kind:[802,816,817,1147],kwarg:[0,1,2,25,26,27,44,48,752,761,774,778,784,828,888,988,1089,1090,1091,1095,1107,1108,1130,1131],kwarg_stateful_idx:[1089,1090,1091,1095,1130,1131],kwargs_clon:988,kwargs_dist:988,kwargs_uni:988,label:[1083,1084,1085,1086],lamb:[931,938,1101,1134],lamb_upd:931,lambda:[988,1134,1137,1139,1143],lar:[931,938,939,1101,1134],larger:[828,843],largest:[25,26,828,833,862],lars_upd:931,last:[25,26,828,831,850,885,911,915,954,957,959,1051,1052,1057,1059,1062,1067,1070,1080,1118,1128],later:[25,26,828,841],latest:[1118,1127],layer:[931,934,936,938,940,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1087,1088,1101,1109,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141,1147],layer_norm:1087,layernorm:[1101,1132],layerwis:[931,939,1134,1137],lead:[25,26,27],leading_shap:[25,26],leaf:[0,3,4,25,26,1032,1033,1040],leaf_keys_onli:[25,26],leafwis:[25,26],leaki:[1062,1063,1064],leaky_relu:[675,1062],learn:[931,934,936,938,939,940,984,985,986,987,1044,1050,1101,1134,1135,1136,1137,1138,1139,1144,1147],learnabl:[1087,1088,1132,1133],leav:[0,3,4,25,26,1032,1033,1034,1040,1041],left:[25,26,954,957,960,1051,1054,1055,1056,1057,1058,1059,1060,1101],leftmost:[25,26],len:988,length:[25,26,27,828,831,901,912,923],lenton2021ivi:1101,lenton:1101,less:[25,26,828,842,988,1044,1048],less_util_node_str:988,let:[1144,1147],level:1101,librari:[1101,1143,1147],lightweight:1101,like:[28,931,937,1044,1048,1101,1143,1144,1147],limit:[25,26,27,802,816,817,828,843,844,845],linalg:[14,391,392,955,956,957,958,959,960,961,1101],linear0:[1101,1143],linear1:1101,linear2:1143,linear:[390,828,864,885,954,1062,1063,1064,1065,1070,1078,1101,1118,1119,1120,1121,1122,1123,1124,1125,1143],linear_resampl:[83,224,343,443,546,828],linearli:[828,864],link:1101,linspac:[83,224,343,443,546,828,831],list:[0,3,4,25,26,752,761,762,771,772,774,775,776,778,781,782,796,828,831,836,838,891,910,911,920,925,984,985,986,988,1032,1033,1034,1036,1040,1041,1070,1071,1072,1073,1074,1075,1076,1077,1101,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125],list_join:[25,26,27],list_stack:[25,26],littl:1144,load:[25,26],loaded_kwarg:988,loader:1101,local_set:[828,872],locat:[828,883,884,1044,1045],log:[641,828,887,966,988,1083,1084,1085,1086,1101],log_all_op:1095,log_global_inference_abs_tim:[1092,1101],log_global_inference_rel_tim:[1092,1101],logarithm:[966,979],logic:[16,963,964,965,1051,1052,1101],logical_and:[293,637,962],logical_not:[293,637,962],logical_or:[293,637,962],logit:[1083,1086],logspac:[83,224,343,443,546,828],look:[28,1144,1147],loop:[984,985,986,987],loss:[1084,1085,1086,1101,1143],loss_fn:[1101,1143],lot:1144,low:[25,26,396,1044,1046,1048],lower:[25,26,828,890,1044,1048],lower_depth:[1130,1131],lowest:[0,3,4,25,26,1032,1041,1044,1046],lstm:[1070,1080,1101,1118],lstm_updat:1070,machin:[802,816,817,1044,1050,1101,1144,1147],mai:[828,831,854,858,1101,1144,1147],main:[828,874,1101],mainli:1101,make:[396,752,988,1101,1144],maml:[984,985,986],maml_step:984,manag:[752,988],mani:[25,26,828,911,1101],manner:[0,3,4,25,26,1032,1041],manual:[1032,1033,1040,1147],map:[25,26,27,752,761,828,883,884,988,1032,1037,1038,1041,1118,1129,1143],map_cont:[25,26],map_nest_at_index:1032,map_nest_at_indic:1032,map_sequ:[25,26],mapper:[752,761,762,988],mask:[1070,1081,1082],match:[25,26,828,888],match_kwarg:828,math:[18,395,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,988,1101],mathbb:[954,961],mathbf:[954,961],matmul:[224,343,443,546,828,1147],matplotlib:1144,matric:[1070,1079],matrix:[25,26,828,830,844,889,954,955,956,957,958,961,1070,1079,1118,1128],matrix_norm:[25,26,127,288,390,495,630,954],matter:1101,max:[25,26,828,844,845,856,890,903,904,988,1051,1054,1134,1136],max_batch_s:[25,26],max_chunk_s:[752,796,988],max_depth:[25,26,752,756,759,766,774,778,784,828,872,988,1032,1041],max_dev_dim_step_ratio:752,max_freq:[828,864],max_length:[25,26],max_node_dim_step_ratio:988,max_norm:[25,26,828,844,845],max_split_factor_step_s:[752,988],max_trust_ratio:[931,938,1134,1136],maxim:[1101,1144,1147],maximis:1101,maximum:[25,26,27,546,752,774,778,784,796,828,833,843,844,845,864,931,938,988,1032,1041,1051,1054],mayb:[0,3,4],mdi:988,mean:[25,26,396,752,781,782,783,784,796,828,856,984,985,986,987,988,1032,1036,1044,1047,1051,1055,1058,1060,1109,1143,1147],measur:[1070,1081,1118,1129],mech:1101,mechan:[1101,1147],medic:1147,memori:[752,768,791,796,798,801,988,1070,1080,1101],meshgrid:[224,343,546,828],messag:[1145,1146],meta:[20,985,986,987,1101],method:[25,26,27,28,396,828,836,848,891,903,904,931,938,939,988,1032,1033,1040,1041,1101,1118,1129,1130,1131,1144],might:[828,854,1147],min:[25,26,828,856,892,903,904,913,988,1051,1056],min_bas:[828,914],min_denomin:[828,913],min_dev_dim_s:752,min_node_dim_s:988,min_sf_tune_step:[752,988],min_unit_dev_tune_step:752,min_unit_node_tune_step:988,mind:1101,mini:[1087,1088,1132,1133],minimum:[25,26,546,752,802,806,828,831,834,836,843,869,870,905,906,913,914,988,1051,1056],miss:[1134,1138],ml_framework:[828,831],mod:[828,863],mod_depth:[1130,1131],mod_height:[1130,1131],mod_with_top_mod_key_chain:[1130,1131],mode:[25,26,750,751,752,781,782,783,784,796,954,959,988,1144],model:[1101,1143],modul:[25,26,27,44,828,893,988,1101,1102,1104,1105,1106,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1132,1133,1140,1141,1147],moment:[931,933,934,938,1134,1135,1136],more:[828,915,988,1101,1144,1147],more_util_node_str:988,most:[25,26,1101,1147],move:[25,26,752,797,988],much:[1101,1147],multi:[396,828,893,1070,1081,1118,1129],multi_head_attent:1070,multi_index_nest:1032,multi_map:[25,26],multi_nod:988,multidev:[752,763,764,765,784],multidevcontain:[25,26],multidevic:[752,761],multidevit:[752,755,758,761,762,766],multidevitem:[752,754,757],multidevnest:[752,756,759],multiheadattent:[1101,1118],multinod:[988,992],multinodecontain:988,multinodeit:988,multinodeitem:988,multinodenest:988,multinomi:[132,298,396,501,658,1044],multipl:[25,26,828,888,911,954,956,1051,1052,1054,1055,1056,1057,1058,1060,1087,1088,1118,1128,1144],multipli:[25,26,828,851,1051,1057],multiprocess:[25,26,27,343,546,752,761,828,988],must:[25,26,27,752,781,782,783,784,796,828,831,846,848,850,858,882,890,892,904,915,966,972,976,988,1044,1049,1051,1052,1134,1138],mutabl:[1032,1034,1041],mutlidevic:[752,761],mutlinod:988,mw_tm1:[931,934,938],mx_concat:1101,mxnet:[1101,1147],my_func:28,mymodel:1101,name:[750,751,1089,1090,1091,1095,1143],namespac:1144,nan:[25,26,828,873,882,884,926],nativ:[0,2,3,4,25,26,752,768,770,779,780,791,798,801,802,807,814,815,988,1101,1102,1107,1108],native_modul:[1107,1108],native_module_class:[1107,1108],nativearrai:[0,3,4,752,770,796,797,802,806,812,816,817,819,820,828,829,830,831,833,834,835,836,837,838,840,842,843,844,845,846,847,849,850,851,852,855,856,857,858,860,861,862,863,864,866,867,871,873,874,875,882,883,884,885,886,887,889,890,891,892,895,896,897,900,901,902,903,904,909,911,912,915,917,918,920,921,922,923,925,926,927,928,929,930,988,1032,1034,1041],natur:[966,979,1147],ncdhw:[1070,1075,1076,1118,1123,1124],nchw:[1070,1073,1074,1077,1118,1121,1122,1125],ncw:[1070,1071,1072,1118,1119,1120],ndarrai:[396,828,921],ndhwc:[1070,1075,1076,1118,1123,1124],nearest:[828,902],need:[828,844,845,1070,1072,1074,1076,1101,1118,1120,1122,1124,1147],neg:[25,26,828,882,1051,1052,1057,1059,1062,1064],negative_slop:1109,neither:988,nest:[0,1,2,3,4,25,26,27,752,774,778,784,828,836,920,984,985,986,988,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1130,1131,1134,1135,1136,1137,1138,1139],nested_indices_wher:1032,nested_map:[988,1032],network:[1070,1079,1101,1102,1104,1118,1130,1131,1147],neural:[1070,1101,1104,1118,1143],new_node_percent_mem:988,new_node_util:988,new_node_utils_kei:988,new_std:[1087,1088,1132,1133],newli:[750,751,828,840,841],newlin:[25,26,27],newshap:[828,840,901],next:[988,1130,1131,1134,1135,1136,1137,1138,1139],nhwc:[1070,1073,1074,1077,1118,1121,1122,1125],node:[25,26,1032,1033,1040],node_clon:988,node_dist:988,node_dist_arrai:988,node_dist_it:988,node_in:988,node_mapp:988,node_str:988,node_to_str:988,node_util:988,nodedistit:988,nodedistitem:988,nodedistnest:988,nodemanag:[988,999],nodemapp:988,nodemappermultiproc:988,noinspect:[753,803,804,805,932,988,1096],non:[25,26,750,751,802,818,1130,1131,1134,1138,1144],none:[25,26,27,28,44,46,49,341,343,344,347,349,356,357,358,359,360,368,369,370,371,372,373,374,375,376,377,379,380,390,391,396,397,750,751,752,761,762,768,769,794,795,796,797,802,809,810,811,816,817,828,831,836,853,854,859,861,865,866,867,872,874,876,877,878,879,880,886,887,893,895,896,897,900,903,904,905,906,911,912,913,914,923,924,929,930,931,934,936,938,939,940,946,947,951,954,957,960,984,985,986,987,988,1032,1033,1036,1040,1041,1044,1045,1046,1047,1048,1051,1052,1054,1055,1056,1057,1058,1059,1060,1070,1072,1074,1076,1079,1080,1081,1082,1087,1088,1089,1090,1091,1095,1099,1107,1108,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141],norm:[25,26,828,844,845,954,957,960,1088,1101,1133,1134,1136],normal:[1044,1047,1087,1088,1132,1133],normalized_idx:[1087,1088],normalized_shap:[1132,1133],notat:[25,26,1051,1053],noth:[25,26,1144],notimplementederror:988,now:[25,26,752,797,828,829,988,1101,1118,1129,1130,1131,1143,1144,1147],np_concat:1101,ns_tune_step:988,num:[343,368,369,828,886,887],num_arrai:[25,26],num_arrays_in_memori:828,num_arrays_on_dev:752,num_band:[828,864],num_channel:[1118,1125],num_chunk:988,num_chunks_floor:988,num_class:[1044,1045],num_cpu_cor:752,num_gpu:[76,341,752,988],num_head:[1070,1081,1118,1129],num_kei:[1070,1081,1082],num_lay:[1118,1127],num_or_size_split:[25,26,343,375,828,911],num_output:988,num_queri:[1070,1081,1082],num_sampl:[343,367,396,397,828,885,947,948,1044,1045],num_task:[984,985,986,987],number:[25,26,27,750,751,752,788,789,790,802,813,819,820,828,831,843,847,860,864,871,874,884,885,886,887,890,894,900,911,918,922,926,928,954,959,984,985,986,987,988,1044,1045,1049,1051,1052,1054,1055,1056,1058,1060,1070,1081,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1144,1147],numer:[828,869,870,905,906,913,914,966,976,1109],numhead:[1070,1081],numpi:[25,26,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,828,921,954,959,1051,1053,1101,1143,1144,1147],nwc:[1070,1071,1072,1118,1119,1120],obj:[25,26],object:[25,26,27,44,752,802,806,816,817,828,831,836,931,1032,1035,1037,1038,1039,1042,1043,1044,1050,1095,1099,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1130,1131],object_in:[343,347,828,836],observ:988,occupi:[828,903,904],off:[828,831],offer:1101,offset:[1087,1088],often:1144,old:[25,26],on_init:[1118,1129,1130,1131],onc:[752,796,988,1044,1045,1101],one:[25,26,752,781,782,783,784,796,802,808,828,874,888,895,903,904,912,915,954,957,960,988,1051,1053,1054,1055,1056,1057,1058,1059,1060,1101,1144,1147],one_hot:[83,343,443,546,828],onearrai:[828,860],ones:[25,26,83,224,343,443,546,828,874,895,897,1101],ones_lik:[83,224,343,443,546,828],onli:[25,26,396,752,988,1032,1033,1034,1040,1134,1135,1136,1137,1138,1139,1143,1144],onlin:1101,onto:[752,781,782,797,988,1032,1036,1041],oom:[752,988],open:[828,831,1044,1048,1101,1147],opencv:1144,oper:[25,26,828,839,855,856,857,886,887,916,931,934,936,938,939,940,962,963,964,965,1070,1071,1072,1073,1074,1075,1076,1077,1079],operand:[25,26,1051,1053],oppos:[828,864],optim:[752,931,934,936,938,939,940,984,985,986,987,988,1101,1135,1136,1137,1139,1143,1147],optimizer_upd:931,option:[0,3,4,25,26,27,28,750,751,752,761,762,770,774,775,776,777,778,781,782,783,784,791,794,795,796,797,801,802,807,812,818,827,828,830,831,833,834,835,836,844,845,846,851,853,854,861,864,865,866,867,871,873,874,881,885,886,887,888,891,893,895,896,897,900,903,904,907,909,911,912,913,914,915,923,925,926,929,930,931,934,936,937,938,939,940,942,947,951,954,957,960,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1044,1045,1051,1054,1055,1056,1057,1058,1059,1060,1062,1063,1067,1070,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1144],ord:[828,861,954,959],order:[25,26,27,828,835,931,934,936,938,939,940,954,957,960,984,985,986,1140,1141],ordered_node_util_kei:988,org:1147,origin:[25,26,27,828,897,901,930,954,957,960],other:[25,26,711,713,714,719,721,722,726,728,729,730,731,732,734,737,738,739,740,741,743,744,745,747,748,749,750,751,828,830,831,874,931,935,1044,1048,1101,1143,1144,1147],otherwis:[0,1,2,3,4,25,26,752,769,802,809,810,811,828,839,882,923,924,927,931,937,942,946,984,985,986,988,1051,1052,1054,1055,1056,1058,1060],our:[1101,1147],out:[396,802,816,817,828,831,966,971,1070,1078,1080,1101,1118,1126],out_feat_dim:[1070,1081],out_featur:[1070,1078,1079],out_i:[828,882],outdat:1147,outer:[984,985,986,987],outer_batch_fn:[984,985,986],outer_batch_shap:[1070,1079],outer_cost_fn:[984,985,986],outer_v:[984,985,986],outlin:1144,output:[25,26,752,761,762,796,828,831,841,865,874,900,918,931,935,966,972,988,1044,1046,1047,1048,1070,1072,1074,1076,1078,1080,1081,1082,1101,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129],output_ax:[752,796,988],output_axi:988,output_channel:[1118,1119,1120,1121,1122,1123,1124,1127,1128],output_connected_onli:[1089,1091,1095,1130,1131],output_queu:988,output_shap:[1070,1072,1074,1076,1118,1120,1122,1124],outsid:[828,843],over:[25,26,828,861,954,957,960,1044,1048,1051,1052,1054,1055,1056,1058,1060,1087,1088,1132,1133],overal:1144,overflow:[828,831],overhead:1144,overrid:[828,895,897,930],overriden:[1134,1138],overwrit:[25,26,752,796,988],overwrite_at_key_chain:[25,26],own:[1101,1144,1147],packag:1144,pad:[828,847,864,928,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],pad_width:[343,828,847,928],page:1101,pair:[1070,1082],parallel:[752,761,762,988],parallelis:[752,761,762,988],param:[25,26,27,28,343,358,359,752,796,828,829,866,867,895,896,929,988,1100,1101,1130,1131,1143],paramet:[0,1,2,3,4,25,26,27,750,751,752,761,762,768,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,791,794,795,796,797,798,801,802,806,807,808,812,813,814,815,816,817,818,819,820,827,828,830,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,873,874,875,877,878,879,881,882,883,884,885,886,887,888,889,890,891,892,893,896,897,900,901,902,903,904,905,906,907,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,942,944,945,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143],parameter:[1044,1047,1048],params_all_empti:1095,pardo:1101,pars:[828,848],part:[931,934,936,938,939,940,966,971,1101,1130,1131,1144],partial:[25,26,1130,1131],particl:1147,particular:1147,pass:[25,26,27,752,761,796,802,807,828,841,931,945,984,985,986,988,1107,1108,1130,1131,1134,1138,1140,1141],pattern:[25,26,828,855,856,857],per:[752,988,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],percent_used_mem_on_dev:752,percent_used_mem_on_nod:988,percentag:[752,791,988],perf_count:988,perform:[25,26,752,828,833,834,835,851,855,856,857,877,878,879,885,886,887,931,934,936,938,939,940,947,948,984,985,986,987,988,1032,1037,1038,1051,1052,1054,1055,1056,1057,1058,1059,1060,1062,1067,1070,1078,1080],permissable_step:988,permut:[396,828,917,923],perpendicular:[828,850],person:1101,physci:1147,pickl:[25,26,988],pickle_filepath:[25,26],pid:1095,pinv:[288,630,954],pip:1101,pipelin:1143,pkk:1147,pkkm1:1147,pkm1km1:1147,place:[25,26,28,752,797,828,860,865,877,878,879,988,1134,1135,1136,1137,1138,1139],placehold:[1032,1041],pleas:396,point:[802,816,819,828,831,966,976],popul:[25,26,1044,1045],popular:1147,population_s:[396,397,1044,1045],portabl:[1101,1102],posit:[0,1,2,752,774,778,784,828,829,831,860,864,882,988,1044,1049,1107,1108],possibi:[25,26],possibl:[828,888,920,947,952,1147],post:[1087,1088],post_shap:[25,26],power:[711,736,742,828,869,905,914,1109],practic:1101,pre:[752,988,1101],pre_shap:[25,26],pred:[1083,1084,1085,1086],predict:[1083,1084,1085,1086,1147],preprint:1101,present:[25,26],preserv:[25,26,27,828,861,931,942],preserve_typ:[25,26,381,384,931,942],press:1101,prevent:[931,933,934,938,988,1134,1135,1136],previou:[931,934,938],previous:[828,841],prime:1101,print:[25,26,27,752,792,828,898,1101,1143],print_all_arrays_in_memori:828,print_all_arrays_on_dev:752,print_ind:[25,26,27],print_limit:[25,26,27],print_line_spac:[25,26,27],prioriti:[25,26,44,48],privat:[1134,1138],prob:[396,397,1044,1045,1070,1078,1118,1126],probabl:[1044,1045,1070,1078,1118,1126],problem:1147,process:[752,761,762,791,801,828,893,988],process_specif:[752,791,801,988],prod:[25,26,828,856],produc:[752,761,762,988],product:[25,26,828,850,851,889,1051,1053,1070,1081,1082,1118,1129],profil:[76,218,341,436,538,752,988],project:[1101,1143,1144,1147],promot:[966,976],prompt:1101,properti:[25,26,752,764,988,1095,1099,1130,1131,1134,1135,1136,1137,1139],provid:[25,26,28,750,751,752,769,802,809,810,811,818,827,828,854,895,897,904,930,931,934,936,938,939,940,946,988,1051,1052,1101,1118,1127,1134,1135,1136,1137,1138,1139,1144],prune:[25,26],prune_empti:[25,26],prune_kei:[25,26],prune_key_chain:[25,26],prune_key_from_key_chain:[25,26],prune_keys_from_key_chain:[25,26],prune_unappli:[25,26],pseudo:[954,958],ptype:[1095,1099],pure:[25,26,1101,1147],purpos:1147,put:988,pybroadexcept:988,pyprotectedmemb:[988,1096],pyshadowingnam:[753,803,804,805,932,988],python:[25,26,752,791,801,828,831,988,1101],pytorch:[931,934,936,938,939,940,1101,1134,1135,1136,1137,1138,1139,1143,1144,1147],pyunresolvedrefer:988,quadrant:[966,972],queri:[25,26,711,725,746,752,785,795,988,1070,1081,1082,1118,1129],query_dim:[1118,1129],query_kei:[25,26],queue:[25,26,27,752,761,762,828,899,907,988],queue_class:[752,761,762,988],queue_load_s:[25,26,27],queue_timeout:[25,26,27,828,988],quick:[396,1101],quickli:1143,radian:[966,967,969,972,974,980,982],rai:[966,967],rais:[25,26,828,839,869,905,912,914,924,988,1051,1052,1130,1131,1134,1138],ram:[752,791,798,801,988],randint:[132,298,396,501,658,1044],random:[22,25,26,397,1045,1046,1047,1048,1049,1050,1101],random_crop:947,random_norm:[132,298,396,501,658,1044],random_uniform:[132,298,396,501,658,1044],randomli:[396,947,951,1070,1078,1118,1126],randomness_factor:[1089,1091,1095,1130,1131],rang:[396,828,831,886,887,966,972,988,1101,1143,1147],rank:[828,847,925,928,1051,1052],rate:[931,934,936,938,939,940,984,985,986,987,1118,1129,1134,1135,1136,1137,1138,1139],rather:[25,26,752,796,828,831,881,931,937,988],ratio:[752,931,938,947,952,988,1134,1136],raw:[25,26],raw_delta:988,reach:[752,774,778,784,988,1032,1041],read:[25,26],readi:[988,1143],real:[966,967,971],realiti:1144,rearrang:[25,26,828,855,857],rebuild:[25,26,27],rebuild_child_contain:[25,26,27],rece:[984,986],receiv:[752,761,762,828,832,888,988,1118,1128],receivess:[752,988],receiving_fn:1095,receivng:[984,987],recev:[984,985,986],recognit:1147,recommend:1101,rectifi:[1062,1064,1065],recurr:[1070,1080],recurrent_bia:[1070,1080],recurrent_kernel:[1070,1080],recurs:[25,26,1032,1033,1034,1040,1041],reduc:[25,26,752,796,828,856,988,1051,1052,1054,1055,1056,1057,1058,1059,1060],reduce_max:[25,26,139,303,398,506,665,1051],reduce_mean:[25,26,139,303,398,506,665,1051,1101,1143],reduce_min:[25,26,139,303,398,506,665,1051],reduce_prod:[25,26,139,303,398,506,665,1051],reduce_std:[25,26,303,1051],reduce_sum:[25,26,139,303,398,506,665,988,1051],reduce_var:[25,26,139,303,398,506,665,1051],reduct:[24,25,26,343,373,374,828,856,903,904,1052,1053,1054,1055,1056,1057,1058,1059,1060,1101],refer:[931,933,934,954,961,1051,1052,1118,1128,1147],regard:[752,988],regardless:[25,26,750,751],register_paramet:1143,reimplement:1147,rel:[931,934,936,938,939,940],rel_slice_obj:988,relev:[1134,1135,1136,1137,1138,1139],relu:[675,1062,1063,1064,1101,1143],remain:[828,901,1032,1036],remaind:[25,26,828,863,911],remov:[25,26,828,912,984,985,986],remove_key_length_limit:[25,26],remove_print_limit:[25,26],reorder:[25,26,828,861],rep:[828,918],repeat:[25,26,224,546,828,857,918,988,1144],repeated_config_check:[752,988],repeatedli:[1032,1039],repetit:[25,26,828,900,918],replac:[25,26,28,396,397,828,843,903,904,1044,1045],repo:1101,repres:[802,808,813,1070,1079],represent:[25,26,27,752,779,780,802,808,814,815,828,910,920,988],reptil:[984,987],reptile_step:984,requir:[750,751,802,806,828,831,836,1107,1108],resampl:[828,885],reshap:[25,26,396,546,828],reshape_lik:[25,26],respect:[828,858,931,933,934,935,936,938,939,940,966,976,984,985,986,987],respons:988,restor:[25,26],restructur:[25,26],restructure_key_chain:[25,26],result:[25,26,27,752,761,828,831,858,882,903,904,915,954,957,960,962,963,964,965,966,976,988,1051,1052,1054,1055,1056,1057,1058,1059,1060,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1101],ret:988,ret_dict:988,ret_fn:[752,761,762,988],retain:[931,935],retain_grad:[381,382,931,935],retreiv:988,retrn:[828,910],return_cont:[25,26],return_dict:[25,26],return_graph:[1089,1090,1091],return_inner_v:[984,985,986,987],return_sequ:[1118,1127],return_st:[1118,1127],rev:[828,854],revers:[25,26,828,854,861,923],right:[25,26],rk_e:1147,robot:1101,ronald:1101,round:[224,343,546,828,831,988],row:[828,874,1044,1045],rule:[828,831,966,976],run:[752,761,931,933,934,938,984,985,986,987,988,1101,1102,1118,1129,1130,1131],safe:[752,761,988],safety_factor:[752,988],same:[0,1,2,25,26,752,761,762,796,797,802,806,828,829,842,846,862,863,866,867,895,897,902,903,904,915,930,931,937,942,954,959,966,971,984,985,986,988,1051,1053,1070,1071,1072,1073,1074,1075,1076,1077,1101,1118,1119,1120,1121,1122,1123,1124,1125,1143,1147],same_arrai:[25,26],sampl:[828,885,947,948,1044,1045,1047,1048,1070,1078,1101,1118,1126],satisfi:[828,836,954,956,961],save:[25,26,828,908,919,947,949,1130,1131],save_debug_info:1095,save_dir:[341,342,752,767,988],save_to_disk:[1089,1091,1095,1130,1131],save_weight:[1130,1131],scalar:[828,843,895,922,926],scale:[752,794,795,931,939,988,1070,1078,1081,1082,1087,1088,1118,1126,1129,1134,1137],scaled_dot_product_attent:1070,scatter:[828,895,903,904],scatter_flat:[83,224,343,443,546,828],scatter_nd:[83,224,343,443,546,828],scene:[931,934,936,938,939,940],schemat:1101,screen:[25,26],search:[0,3,4,25,26],second:[25,26,752,783,828,837,850,858,899,907,917,931,933,934,938,984,986,988,1134,1135,1136],secondli:1147,see:[44,341,342,396,752,764,765,766,767,802,828,831,886,887,931,966,976,1051,1052,1095,1099,1101,1109,1111,1112,1114,1115,1117],seed:[25,26,132,396,658,1044],seed_valu:[25,26,396,1044,1049],seem:1101,seen_set:[828,872],select:[828,836,912,1144,1147],self:[25,26,44,341,342,752,764,765,766,767,802,931,988,1095,1099,1101,1109,1111,1112,1114,1115,1117,1134,1138,1143,1147],sent:988,seper:[828,864],seq:[25,26,27,1051,1053,1130,1131],sequenc:[0,1,2,25,26,27,396,750,751,752,761,762,771,772,773,774,775,776,777,778,781,782,796,802,806,828,831,836,838,840,846,847,861,874,888,891,896,900,901,904,911,915,918,923,928,929,931,935,947,951,952,954,957,960,988,1032,1043,1044,1046,1048,1051,1054,1055,1056,1057,1058,1059,1060,1070,1071,1072,1073,1074,1075,1076,1077,1087,1088,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1127,1130,1131,1132,1133,1134,1138,1140,1141],sequenti:1101,set:[0,3,4,25,26,752,781,782,794,795,796,828,830,853,874,905,906,907,908,931,934,936,937,938,939,940,954,957,960,988,1032,1033,1040,1042,1043,1044,1045,1049,1051,1054,1055,1056,1057,1058,1059,1060,1099,1101,1118,1127,1134,1135,1136,1137,1138,1139,1144,1147],set_at_kei:[25,26],set_at_key_chain:[25,26],set_breakpoint_debug_mod:29,set_count:1099,set_debug_mod:29,set_default_devic:752,set_default_dtyp:802,set_default_float_dtyp:802,set_default_int_dtyp:802,set_default_nod:988,set_exception_debug_mod:29,set_framework:[25,26,44,988,1101,1143,1144,1147],set_ivy_backend:[25,26],set_min_bas:828,set_min_denomin:828,set_nest_at_index:1032,set_nest_at_indic:1032,set_param:1095,set_queue_timeout:828,set_split_factor:[752,988],set_stat:[1134,1135,1136,1137,1138,1139],set_tmp_dir:828,set_with_grad:931,setter:988,sever:1147,sgd:[1101,1134],shape0:988,shape:[25,26,343,357,371,374,379,396,546,752,764,802,806,828,829,840,842,846,847,860,861,862,863,865,867,871,874,895,896,897,900,901,902,903,904,910,912,915,928,929,930,947,951,954,956,966,971,972,988,1044,1046,1047,1048,1051,1053,1070,1072,1074,1076,1095,1099,1118,1120,1121,1122,1123,1124,1125,1132,1133],shape_slic:[25,26],shape_to_tupl:828,share:[25,26,1101,1144],shift:988,should:[25,26,27,28,396,750,751,752,828,840,841,848,895,901,931,934,936,938,939,940,966,976,988,1051,1053,1101],show:[25,26,1095,1101,1147],show_debug_info:1095,show_graph:[1089,1101,1130,1131,1134,1138],show_mod_in_top_mod:[1130,1131],show_structur:[1130,1131],show_sub_contain:[25,26],show_v:[1130,1131],show_v_in_top_v:[1130,1131],shown:[25,26],shp:988,shuffl:[25,26,132,396,658,1044],shuffle_h5_fil:[25,26],sigmoid:[675,1062,1101,1143],signatur:[28,44,341,342,343,381,386,390,393,394,396,752,764,765,766,767,802,931,1095,1099,1109,1111,1112,1114,1115,1117],signific:1147,similar:[1070,1081,1118,1129],simpl:[828,859,1101,1144,1147],simplest:1144,simpli:[25,26,1101,1144,1147],simultan:1101,sin:[641,828,864,966,982,1144],sinco:1144,sine:[966,969,970,980,981],singl:[25,26,750,751,752,761,762,781,782,783,784,828,912,922,926,947,952,988,1044,1047,1048,1051,1054,1055,1056,1057,1058,1059,1060,1101,1144,1147],singleton:[1051,1052],singular:[954,959],sinh:[641,966],siren:[1101,1109],size:[25,26,27,343,373,752,775,776,777,778,794,795,796,828,831,840,886,887,903,911,947,951,954,957,959,960,988,1044,1045,1047,1048,1051,1054,1055,1056,1057,1058,1059,1060,1118,1119,1120],size_ordered_arrai:[25,26],skew:[954,961],skinv:1147,skip:[25,26],slice:[25,26,828,835,866,867,988,1032,1039],slice_kei:[25,26],slice_obj:[25,26,988],slice_via_kei:[25,26],slide:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],slope:[1062,1064],small:[1083,1084,1085,1086,1087,1088,1101,1132,1133,1144],smaller:[828,843],smallest:[25,26,828,834,842],softmax:[149,408,675,1062,1070,1081,1082],softplu:[675,1062],solv:1147,some:[25,26,828,831,931,933,934,936,938,939,940,945,1070,1078,1101,1118,1126,1144,1147],someth:[28,1147],something_cool:28,somewher:[25,26],sort:[25,26,27,828,835,954,959,988],sort_by_kei:[25,26],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,44,46,47,48,49,50,51,52,53,54,55,56,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1099,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1145,1146,1147],space:[828,831,864,886,887],spars:[1083,1086],sparse_cross_entropi:1083,spawn:[828,893],specif:[25,26,28,752,794,828,848,855,856,857,893,984,985,986,987,988,1044,1050,1101,1130,1131,1143,1144],specifc:[1044,1045],specifi:[25,26,752,771,772,773,774,775,776,777,778,781,782,786,788,792,795,796,797,802,806,808,828,831,833,834,836,843,846,847,865,866,867,873,886,887,915,925,928,954,957,960,988,1032,1037,1038,1042,1043,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060],split:[25,26,83,224,343,443,546,752,761,775,776,777,778,794,795,796,828,888,988],split_arg:988,split_factor:[752,761,988],split_func_cal:[752,988],split_siz:988,spread:[752,784,988],squar:[828,874,954,956],squeez:[83,224,343,443,546,828],stabil:[828,913,914],stabl:[828,869,870,905,906,913,914],stable_divid:828,stable_pow:828,stack:[25,26,224,546,828,947,952,1032,1033,1040,1118,1127],stack_imag:[123,284,386,491,626,947],stacked_dim_s:988,standard:[25,26,28,1044,1047,1051,1058,1087,1088,1132,1133],start:[25,26,341,342,343,344,368,369,396,752,767,828,831,886,887,988,1101,1144],starting_index:[25,26],starting_split_factor:[752,988],state:[988,1070,1080,1089,1090,1091,1095,1101,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143],statement:1144,static_argnam:[343,349,750,751],static_argnum:[343,349,750,751],std:[396,1044,1047],step:[25,26,343,344,752,828,831,886,887,931,933,934,936,938,939,940,984,985,986,987,988,1101,1134,1135,1136,1137,1138,1139,1143,1147],stephen:1101,stick:1101,still:[25,26],stochast:[1134,1139],stop:[25,26,341,342,343,344,368,369,752,767,796,828,831,886,887,931,934,936,938,939,940,942,984,985,986,987,988,1134,1135,1136,1137,1138,1139],stop_gradi:[25,26,279,381,486,620,752,796,931,934,936,938,939,940,984,985,986,987,988,1134,1135,1136,1137,1138,1139],stopiter:988,store:[25,26,828,864,911,931,945,1130,1131],store_var:[1130,1131],str:[0,1,2,25,26,27,28,750,751,752,761,762,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,796,802,807,808,813,814,815,816,817,818,819,820,827,828,836,853,855,856,857,891,893,896,903,904,954,957,960,984,985,986,987,988,1032,1036,1051,1053,1107,1108,1118,1129,1130,1131],str_to_nod:988,straight:1144,strength:[1101,1147],stride:[1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],string:[25,26,752,768,770,779,780,785,791,797,798,801,802,806,812,814,815,818,827,828,831,836,853,874,896,897,929,930,988,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125,1130,1131],structur:[25,26,27,828,848],structural_diff:[25,26],sub:[25,26,752,775,776,781,782,783,784,828,911,984,985,986,987,988],sub_cont:[25,26],sub_cont_or_keychain:[25,26],sub_cont_to_find:[25,26],sub_item:988,sub_mod:[1130,1131],sub_modul:[1140,1141],sub_str:[25,26],sub_struc_to_find:[25,26],submodul:[28,1132,1133,1140,1141],substr:[25,26],suggest:1101,suitabl:[947,952],sum:[25,26,343,373,374,752,781,782,783,784,796,828,852,856,903,904,988,1051,1053,1059],summat:[25,26,1051,1053],support:[1,2,3,4,6,8,10,12,14,16,18,20,22,24,25,26,27,30,31,32,33,34,45,46,47,48,49,50,51,52,53,54,55,56,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,125,126,128,129,133,134,135,136,137,138,140,141,142,143,144,145,146,147,150,152,153,155,156,157,158,159,160,161,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,285,286,287,289,290,291,292,294,295,296,299,300,301,302,304,305,306,307,308,309,310,311,312,315,317,318,319,320,321,322,323,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,387,388,389,391,392,395,397,399,400,401,402,403,404,405,406,409,410,412,413,414,415,416,417,418,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,492,493,494,496,497,498,502,503,504,505,507,508,509,510,511,512,513,514,518,519,520,539,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,621,622,623,624,625,627,628,629,631,632,633,634,635,636,638,639,640,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,659,660,661,662,663,664,666,667,668,669,670,671,672,673,676,677,678,679,680,681,682,684,685,687,688,689,690,691,692,693,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,751,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,955,956,957,958,959,960,961,963,964,965,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,985,986,987,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1084,1085,1086,1088,1090,1091,1093,1094,1096,1100,1101,1105,1106,1108,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1146,1147],supports_inplac:828,suppos:1147,svd:[288,495,630,954],swap:[25,26,828,917],swapax:[25,26,443,546,828,1147],symmetr:[954,961],syntax:[341,343,381,386,390,393,394,396],tab:1101,take:[828,885],taken:[1051,1054,1055,1056,1058,1060],tan:[641,966,971],tangent:[966,971,972,973,982,983,1062,1069],tanh:[641,675,966,1062],target:[25,26,752,768,771,772,773,774,775,776,777,778,781,782,783,784,797,988,1101],target_dict:[25,26],task:[984,985,986,987],team:1147,templat:1101,temporari:[828,908,919],tensor:[25,26,28,343,373,374,752,770,802,812,828,831,833,834,835,840,886,887,890,892,895,896,897,901,903,904,911,929,930,988,1044,1045,1046,1070,1078,1080,1101,1118,1126,1128,1134,1135,1136,1137,1138,1139,1143,1144],tensorflow:[1070,1072,1074,1076,1101,1118,1120,1122,1124,1144,1147],term:[25,26,1070,1080,1101,1118,1128],termcolor:[25,26,27],termin:[25,26,27,988],test:[802,819,820,828,882,1051,1052],tf_concat:1101,than:[25,26,752,796,828,831,842,843,862,881,890,912,915,931,937,988,1044,1048,1101,1144],thei:[25,26,966,972,984,985,986,1044,1045,1101,1140,1141,1144],them:[1101,1147],themselv:[1032,1033],thi:[25,26,27,28,752,774,778,784,791,796,801,828,831,864,899,901,907,931,934,936,937,938,939,940,945,954,957,960,988,1032,1036,1041,1051,1054,1055,1056,1057,1058,1059,1060,1070,1079,1101,1130,1131,1134,1135,1136,1137,1138,1139,1143,1144,1147],thing:1101,those:[25,26,828,843,931,945,954,959,988],threshold:[828,890,892],through:[25,26],tile:[224,443,546,828],time:[828,918,931,934,938,984,985,986,987,988,1044,1045,1070,1080,1118,1129,1130,1131,1147],time_chronolog:[1089,1090,1095],time_infer:[1089,1090],timeout:[25,26,27,752,761,762,828,899,907,988],timestep:[1070,1080,1118,1127],timing_fnam:[1089,1090],titl:1101,tmp_dir:828,tmp_dr:[828,908],to_appli:[25,26],to_clon:[752,988],to_dev:[25,26,76,218,341,436,538,752],to_dict:[25,26],to_disk_as_hdf5:[25,26],to_disk_as_json:[25,26],to_disk_as_pickl:[25,26],to_distribut:[752,988],to_flat_list:[25,26],to_iter:[25,26],to_iterator_kei:[25,26],to_iterator_valu:[25,26],to_ivi:[0,25,26,1101],to_ivy_modul:[151,683,1101,1107],to_json:[25,26],to_kv_fn:[1070,1081],to_kv_v:[1070,1081],to_list:[25,26,343,546,828],to_multi_dev:[25,26],to_mut:[1032,1034,1041],to_n:[0,25,26,1101],to_nod:988,to_numpi:[25,26,343,546,828,1101,1143],to_out_fn:[1070,1081],to_out_v:[1070,1081],to_q_fn:[1070,1081],to_q_v:[1070,1081],to_raw:[25,26],to_scalar:[343,546,828],todo:988,togeth:[25,26,1140,1141],tool:[1101,1144],top_mod:[1130,1131],topic:1147,torch:[28,750,751,1101,1143,1144,1147],torch_concat:1101,torchfcmodel:1143,total:[25,26,27,752,798,988],total_mem_on_dev:752,total_mem_on_nod:988,tpu:[752,799,988],tpu_is_avail:[341,436,538,752,988],tpye:[802,813],trace:[25,26,828,881],track:[752,988,1032,1041,1130,1131],track_submod_call_ord:[1130,1131],track_submod_ret:[1130,1131],trail:[1132,1133],train:[931,933,934,938,1101,1102],trainabl:[931,937,1101,1102,1107,1108,1130,1131,1140],trainer:1101,tran:1147,transform:[1070,1078,1079],transpos:[25,26,83,224,343,546,752,783,828,988,1070,1072,1074,1076,1118,1120,1122,1124],travers:[0,3,4,25,26,1032,1041],treat:[25,26,750,751],tree_depth:1099,tree_height:1095,tri:[25,26],trigonometr:[966,967,971,974,980],trim_kei:[25,26],trust:[931,938,1134,1136],truth:[828,858,962,963,964,965],try_else_non:828,try_import_ivy_jax:44,try_import_ivy_mxnet:44,try_import_ivy_numpi:44,try_import_ivy_tf:44,try_import_ivy_torch:44,try_kc:[25,26],tune:[752,988],tune_dev_alloc:752,tune_dev_split:752,tune_node_alloc:988,tune_node_split:988,tune_step:[752,988],tupl:[0,1,2,3,4,25,26,750,751,828,847,864,865,910,928,988,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1046,1051,1052,1054,1055,1056,1057,1058,1059,1060],two:[25,26,828,831,837,850,889,917,954,957,959],type:[0,3,25,26,27,28,44,341,342,752,764,765,766,767,779,780,784,796,802,806,807,808,812,813,814,815,816,817,818,819,820,827,828,829,831,836,842,846,848,858,862,863,865,874,881,882,895,896,897,902,916,926,929,930,931,937,942,966,976,988,1095,1099,1101,1109,1111,1112,1114,1115,1117,1130,1131,1144],types_to_iteratively_nest:[25,26,27],uint8:[947,949,953],uint8_img_to_float_img:947,unchang:[0,1,2,3,4],unif:988,unifi:[25,26,752,781,782,783,784,796,988,1101],uniform:[25,26,1044,1045,1047,1048,1109,1111,1112,1115,1116],uniformli:[1044,1046,1048],unify_arrai:988,unify_it:988,unify_nest:988,union:[0,3,4,25,26,28,750,751,752,770,775,776,777,778,796,797,802,806,807,808,812,813,814,815,816,817,818,819,820,827,828,829,830,831,833,834,835,836,837,838,840,842,843,844,845,846,847,849,850,851,852,855,856,857,858,860,861,862,863,864,865,866,867,871,873,874,875,882,883,884,885,886,887,889,890,891,892,895,896,897,900,901,902,903,904,909,910,911,912,915,917,918,920,921,922,923,925,926,927,928,929,930,988,1032,1033,1034,1040,1041],uniqu:[752,761,762,984,985,986,987,988,1032,1036],unique_kwarg:988,unit:[752,966,967,969,988,1062,1063,1064,1065],unitari:[954,959],unless:[828,895,897,930],unlik:[752,988],unnorm:[1044,1045],unpack:[828,925],unrol:[1070,1080],unset:1144,unset_debug_mod:29,unset_default_devic:752,unset_default_dtyp:802,unset_default_float_dtyp:802,unset_default_int_dtyp:802,unset_framework:[44,1144],unset_with_grad:931,unstack:[25,26,83,224,343,443,546,828],unus:[750,751],updat:[25,26,343,373,374,752,761,828,879,903,904,931,933,934,936,938,939,940,984,985,986,988,1032,1037,1038,1042,1043,1070,1080,1107,1108,1134,1135,1136,1137,1138,1139,1144,1147],update_backend:[25,26],update_config:[25,26],update_inference_tim:1095,upper:[25,26,1044,1048],upper_depth:[1130,1131],usabl:[1101,1147],usag:[752,796,988],use:[25,26,27,28,396,752,761,762,787,799,828,900,913,914,988,1070,1081,1087,1088,1101,1132,1133,1144,1147],used:[25,26,28,396,752,761,791,794,795,801,802,813,828,869,870,888,897,903,904,905,906,930,931,938,939,954,957,984,985,986,987,988,1032,1041,1118,1129,1134,1136,1137,1143,1144],used_dev:[752,761],used_mem_on_dev:752,used_mem_on_nod:988,used_node_str:988,used_node_strs_dict:988,useful:[25,26,752,796,988,1070,1079,1101,1144],user:[1101,1118,1129,1130,1131,1144,1147],uses:1101,using:[25,26,931,933,934,1032,1035,1039,1051,1053,1070,1078,1082,1101,1118,1126,1143,1144,1147],util:[752,785,988],v_with_top_v_key_chain:[1130,1131],val:[25,26,343,362,363,364,711,746,828,877,878,879,905,906,1099],valid:[802,807,828,913,914,1051,1052,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],valid_dtyp:802,valu:[25,26,343,752,764,795,796,828,829,831,833,834,835,843,844,845,847,848,854,858,864,865,866,867,883,884,886,887,890,892,899,900,901,902,903,904,905,906,907,923,926,927,928,931,935,938,947,953,954,959,962,963,964,965,966,977,978,979,984,985,986,988,1032,1036,1037,1038,1042,1043,1044,1047,1048,1051,1054,1056,1070,1081,1082,1087,1088,1095,1118,1129,1132,1133,1134,1136],value_is_nan:828,vanilla:[984,986],var_shap:1109,variabl:[0,1,2,3,4,25,26,279,381,486,620,828,839,877,878,879,880,881,916,931,934,935,936,937,938,939,940,942,945,984,985,986,987,1070,1081,1087,1088,1107,1108,1109,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141],variable_data:[381,620,931],varianc:[25,26,1051,1060,1147],varieti:1144,variou:1101,vector:[25,26,390,392,828,845,850,954,959,960,961,1070,1079,1118,1128],vector_norm:[25,26,954],vector_to_skew_symmetric_matrix:[127,288,390,495,630,954],verbos:1146,veri:1101,via:[1032,1033,1040,1144],view:[947,952],vision:1101,visual:1144,volum:[1070,1075],vw_tm1:[931,934,938],wai:[1144,1147],wait:[25,26,27],want:[1101,1144,1147],warn:[44,51,52,53,54,55],warp:[386,387,947,948],watch:1143,weight:[931,933,934,936,938,939,940,1070,1079,1080,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1130,1131,1134,1136,1137],weight_initi:[1118,1119,1120,1121,1122,1123,1124,1125,1127,1128],weights_path:[1130,1131],well:[25,26,828,873],were:[25,26,988],what:1101,when:[25,26,27,752,828,841,914,927,954,959,988,1101,1130,1131,1144,1147],where:[25,26,224,343,546,828,831,840,843,847,860,875,883,884,895,928,954,959,1032,1033,1040,1044,1045,1051,1052],wherebi:[1032,1041],whether:[0,3,4,25,26,27,750,751,752,770,783,787,791,796,799,801,802,812,818,819,820,827,828,830,837,838,851,854,859,864,871,873,876,880,881,888,909,916,925,926,931,934,935,936,937,938,939,940,942,984,985,986,987,988,1032,1033,1034,1036,1040,1041,1044,1045,1051,1052,1062,1063,1070,1078,1101,1107,1108,1118,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139],which:[25,26,27,28,396,750,751,752,761,762,770,775,776,777,778,781,782,783,784,786,788,792,794,795,796,802,807,812,816,817,818,827,828,831,836,846,848,850,851,852,854,861,865,866,867,868,874,875,885,886,887,894,895,896,897,898,900,903,904,911,915,925,927,929,930,931,934,935,936,938,939,940,942,944,945,947,949,954,957,960,966,972,988,1032,1036,1037,1038,1042,1043,1044,1045,1046,1047,1048,1051,1052,1054,1055,1056,1057,1058,1059,1060,1062,1067,1070,1081,1082,1101,1107,1108,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1140,1141,1143,1144],whitespac:[25,26,27],whose:[828,836,841,1051,1053,1054,1055,1056,1058,1060],why:[1101,1102],width:[947,952],wiki:1147,wikipedia:1147,window:[947,952,1070,1071,1072,1073,1074,1075,1076,1077,1118,1119,1120,1121,1122,1123,1124,1125],wise:[25,26,828,842,843,858,862,863,890,892,902,931,934,936,938,940,962,963,964,965,966,967,969,971,972,974,976,977,978,979,980,982,1062,1063,1064,1065,1066,1067,1068,1069],wish:1144,with_arg_label:[1089,1091,1095,1130,1131],with_array_cach:[1089,1090,1091,1095],with_bia:[1118,1128],with_cal:[828,854],with_default_key_color:[25,26],with_edge_label:[1089,1091,1095,1130,1131],with_entries_as_list:[25,26],with_grad:[931,941,1130,1131],with_ivy_backend:[25,26],with_key_length_limit:[25,26],with_node_map:988,with_output_label:[1089,1091,1095,1130,1131],with_partial_v:[1130,1131],with_print_ind:[25,26],with_print_limit:[25,26],with_print_line_spac:[25,26],with_remaind:[25,26,343,375,828,911,988],with_to_kv_fn:[1118,1129],with_to_out_fn:[1118,1129],with_to_q_fn:[1118,1129],within:[0,3,4,828,831,954,959,1044,1048],without:[25,26,828,899,901,907,1032,1034,1144],wonder:1101,word:[0,1,2,828,831,1044,1048,1107,1108],work:1143,worker:[752,761,762,988],worker_class:[752,761,762,988],worker_kwarg:988,would:[28,828,835,1062,1067,1101,1144,1147],wrap:[0,25,26,27,341,343,381,386,390,393,394,396,828,841,931,945,1101],write:[25,26,1101,1102,1147],written:[28,1101,1147],ws_new:[931,934,936,938,939,940],x1_i:[828,858,966,976],x2_i:[828,858,966,976],x_feat_dim:[1070,1081],x_i:[828,882],x_in:[1101,1143],x_inv:[954,956],x_max:[343,828,843],x_min:[343,828,843],x_sub:988,xkk:1147,xkkm1:1147,xkm1km1:1147,xs0:988,xs_t:988,year:[1101,1147],yet:[1032,1041,1147],yield:[828,927],you:[1101,1143,1144,1147],your:[1101,1143,1144,1147],your_awesome_project:1144,yourself:1101,zero:[25,26,83,224,343,443,546,828,847,895,897,903,904,928,930,931,933,934,938,939,1070,1078,1101,1109,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1134,1135,1136,1137],zero_pad:[224,343,443,546,828],zeros_lik:[83,224,343,443,546,828],zip:988,zk_e:1147},titles:["Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":854,"function":[62,63,65,66,68,69,70,71,72,73,74,165,166,168,169,171,172,173,174,175,176,177,327,328,330,331,333,334,335,336,337,338,339,422,423,425,426,428,429,430,431,432,433,434,524,525,527,528,530,531,532,533,534,535,536,697,698,700,701,703,704,705,706,707,708,709],Ones:1114,Using:1144,abs:[225,444,547,829],aco:[642,967],acosh:[643,968],activ:[149,314,408,516,675,1062,1104],adam:1135,adam_step:933,adam_upd:934,algebra:[67,68,170,171,332,333,427,428,529,530,702,703],all:[140,304,399,507,666,1052],all_equ:830,all_nested_indic:1033,api:[28,60,163,325,420,522,695],arang:[84,226,344,445,548,831],arg_nam:832,argmax:[85,345,446,549,833],argmin:[86,346,447,550,834],args_to_ivi:1,args_to_n:2,argsort:[551,835],arrai:[60,87,163,179,227,325,347,420,448,522,552,695,711,836],array_equ:[228,553,837],arrays_equ:838,arraywithdevic:6,arraywithgener:8,arraywithgradi:10,arraywithimag:12,arraywithlinalg:14,arraywithlog:16,arraywithmath:18,arraywithmeta:20,arraywithrandom:22,arraywithreduct:24,asin:[644,969],asinh:[645,970],assert_supports_inplac:839,atan2:[647,972],atan:[646,971],atanh:[648,973],backend:[28,58],bilinear_resampl:[124,285,387,492,627,948],binary_cross_entropi:1084,broadcast_to:[229,554,840],builder:36,builtin:[179,711],builtin_ab:[180,712],builtin_add:[181,713],builtin_and:[182,714],builtin_bool:[183,715],builtin_contain:[184,716],builtin_deepcopi:[185,717],builtin_dir:[186,718],builtin_eq:[187,719],builtin_float:[188,720],builtin_floordiv:[189,721],builtin_g:[190,722],builtin_getattr:[191,723],builtin_getattribut:[192,724],builtin_getitem:[193,725],builtin_gt:[194,726],builtin_int:[195,727],builtin_invert:[196,728],builtin_l:[197,729],builtin_lt:[198,730],builtin_mul:[199,731],builtin_n:[200,732],builtin_neg:[201,733],builtin_or:[202,734],builtin_po:[203,735],builtin_pow:[204,736],builtin_radd:[205,737],builtin_rand:[206,738],builtin_rfloordiv:[207,739],builtin_rmul:[208,740],builtin_ror:[209,741],builtin_rpow:[210,742],builtin_rsub:[211,743],builtin_rtruediv:[212,744],builtin_rxor:[213,745],builtin_setitem:[214,746],builtin_sub:[215,747],builtin_truediv:[216,748],builtin_xor:[217,749],cache_fn:841,cast:[88,230,348,449,555,806],ceil:[231,556,842],choleski:[631,955],choose_random_framework:46,citat:1101,clear_framework_stack:47,clear_mem_on_dev:[540,768],clip:[232,557,843],clip_matrix_norm:844,clip_vector_norm:845,clone:1003,clone_arrai:1004,clone_it:1005,clone_nest:1006,clonedit:990,cloneditem:989,clonednest:991,closest_valid_dtyp:807,code:1147,compil:[233,349,558,750,751,1089],compile_graph:1090,concaten:[89,234,350,450,559,846],constant:[61,164,326,421,523,696],constant_pad:[235,451,560,847],contain:[25,26],container_typ:[561,848],content:1101,contribut:28,conv1d:[155,317,412,687,1071,1119],conv1d_transpos:[156,318,413,688,1072],conv1dtranspos:1120,conv2d:[157,319,414,518,689,1073,1121],conv2d_transpos:[158,320,415,690,1074],conv2dtranspos:1122,conv3d:[159,321,416,519,691,1075,1123],conv3d_transpos:[160,322,417,692,1076],conv3dtranspos:1124,convers:0,convert:[151,683,1107],convert_dtyp:808,copy_arrai:[562,849],copy_nest:1034,core:[75,178,340,435,537,710],cos:[649,974],cosh:[650,975],cprint:1146,creation:[62,165,327,422,524,697],cross:[236,563,850],cross_entropi:1085,cumprod:[90,237,351,564,851],cumsum:[565,852],current_framework:48,current_framework_str:[566,853],data:[63,64,166,167,328,329,423,424,525,526,698,699],debug_mod:30,debugg:29,default_devic:769,default_dtyp:809,default_float_dtyp:810,default_int_dtyp:811,default_nod:1007,depthwise_conv2d:[161,323,418,520,693,1077],depthwiseconv2d:1125,dev:[78,220,438,541,770],dev_clon:771,dev_clone_arrai:772,dev_clone_it:773,dev_clone_nest:774,dev_dist:775,dev_dist_arrai:776,dev_dist_it:777,dev_dist_nest:778,dev_from_str:[79,221,439,542,779],dev_to_str:[80,222,440,543,780],dev_unifi:781,dev_unify_arrai:782,dev_unify_it:783,dev_unify_nest:784,dev_util:785,devclonedit:755,devcloneditem:754,devclonednest:756,devdistit:758,devdistitem:757,devdistnest:759,devic:[5,76,218,341,436,538,752],devmapp:761,devmappermultiproc:762,distribute_nest:1008,divid:976,document:1101,dropout:[1078,1126],dtype:[91,238,352,452,567,802,812],dtype_bit:[92,239,353,453,568,813],dtype_from_str:[93,240,354,454,569,814],dtype_to_str:[94,241,355,455,570,815],ecosystem:37,einops_rearrang:855,einops_reduc:856,einops_repeat:857,einsum:[141,305,400,508,667,1053],elementwis:[65,168,330,425,527,700],equal:[456,571,858],erf:[395,651,977],execute_with_gradi:[121,280,382,487,621,935],exist:859,exp:[652,978],expand_dim:[242,572,860],extens:[67,170,332,427,529,702],finfo:816,firstlayersiren:1111,flip:[95,243,356,457,573,861],float_img_to_uint8_img:949,floor:[244,574,862],floormod:[245,575,863],fomaml_step:985,fourier_encod:864,framework:44,full:[96,246,357,458,576,865],func:57,gather:[97,247,358,459,577,866],gather_nd:[98,248,359,460,578,867],geglu:1105,gelu:[315,409,676,1063,1106],gener:[7,83,224,343,443,546,828],get_all_arrays_in_memori:868,get_all_arrays_on_dev:786,get_framework:49,get_min_bas:869,get_min_denomin:870,get_num_dim:[579,871],get_referrers_recurs:872,global:1092,glorotuniform:1112,gpu_is_avail:[787,1009],gradient:[9,120,279,381,486,620,931],gradient_descent_upd:936,gradient_imag:[125,286,388,493,628,950],graph:1095,gym:38,handler:44,has_nan:873,helper:1097,ident:[99,249,360,461,580,874],iinfo:817,imag:[11,123,284,386,491,626,947],index_nest:1035,indices_wher:[100,250,361,581,875],initi:1109,inplace_arrays_support:876,inplace_decr:[101,251,362,462,582,877],inplace_incr:[102,252,363,463,583,878],inplace_upd:[103,253,364,464,584,879],inplace_variables_support:880,inv:[632,956],invalid_dtyp:818,is_arrai:[104,254,365,465,585,881],is_float_dtyp:819,is_int_dtyp:820,is_vari:[122,281,383,488,622,937],isfinit:[105,255,366,466,586,882],isinf:[256,467,587,883],isnan:[257,468,588,884],ivi:[28,35,36,37,38,39,40,41,42,43,694,1143,1144,1147],ivymodul:[152,684],jax:59,lamb:1136,lamb_upd:938,lar:1137,lars_upd:939,layer:[154,316,411,517,686,1070,1118],layer_norm:1088,layernorm:1133,leaky_relu:[677,1064],linalg:[13,127,288,390,495,630,954],linear:[67,68,170,171,332,333,427,428,529,530,702,703,1079,1128],linear_resampl:[106,258,367,469,589,885],linspac:[107,259,368,470,590,886],log:[653,979,1098],log_global_inference_abs_tim:1093,log_global_inference_rel_tim:1094,logic:[15,130,293,393,499,637,962],logical_and:[294,638,963],logical_not:[295,639,964],logical_or:[296,640,965],logspac:[108,260,369,471,591,887],loss:1083,lstm:1127,lstm_updat:1080,maml_step:986,manipul:[69,172,334,429,531,704],map:1036,map_nest_at_index:1037,map_nest_at_indic:1038,match_kwarg:888,math:[17,131,297,394,500,641,966],matmul:[261,472,592,889],matrix_norm:[128,289,391,496,633,957],maximum:[593,890],mech:39,memori:40,meshgrid:[262,594,891],meta:[19,984],method:[66,169,331,426,528,701],minimum:[595,892],model:41,modul:[1130,1131,1143],multi:988,multi_head_attent:1081,multi_index_nest:1039,multidevcontain:27,multidevit:765,multidevitem:764,multidevnest:766,multiheadattent:1129,multinodeit:994,multinodeitem:993,multinodenest:995,multinomi:[133,299,397,502,659,1045],multiprocess:[596,893],mxnet:162,nativ:1143,nest:1032,nested_indices_wher:1040,nested_map:1041,network:1143,next:1101,node:[988,1010],node_dist:1011,node_dist_arrai:1012,node_dist_it:1013,node_str:1014,node_to_str:1015,node_util:1016,nodedistit:997,nodedistitem:996,nodedistnest:998,nodemapp:1000,nodemappermultiproc:1001,norm:[1087,1132],num_arrays_in_memori:894,num_arrays_on_dev:788,num_cpu_cor:789,num_gpu:[81,790,1017],numpi:324,nutshel:1101,one_hot:[109,370,473,597,895],ones:[110,263,371,474,598,896],ones_lik:[111,264,372,475,599,897],optim:[1134,1138],optimizer_upd:940,overview:1101,param:1099,percent_used_mem_on_dev:791,percent_used_mem_on_nod:1018,pinv:[290,634,958],portabl:1147,print_all_arrays_in_memori:898,print_all_arrays_on_dev:792,profil:[77,219,342,437,539,767,1002],queue_timeout:899,randint:[134,300,503,660,1046],random:[21,132,298,396,501,658,1044],random_crop:951,random_norm:[135,301,504,661,1047],random_uniform:[136,302,505,662,1048],reduce_max:[142,306,401,509,668,1054],reduce_mean:[143,307,402,510,669,1055],reduce_min:[144,308,403,511,670,1056],reduce_prod:[145,309,404,512,671,1057],reduce_std:[310,1058],reduce_sum:[146,311,405,513,672,1059],reduce_var:[147,312,406,514,673,1060],reduct:[23,139,303,398,506,665,1051],relu:[678,1065],repeat:[265,600,900],reptile_step:987,reshap:[601,901],robot:42,round:[266,602,902],run:1144,scaled_dot_product_attent:1082,scatter_flat:[112,267,373,476,603,903],scatter_nd:[113,268,374,477,604,904],search:[70,173,335,430,532,705],seed:[137,663,1049],sequenti:[1140,1141],set:[71,174,336,431,533,706],set_breakpoint_debug_mod:31,set_debug_mod:32,set_default_devic:793,set_default_dtyp:821,set_default_float_dtyp:822,set_default_int_dtyp:823,set_default_nod:1019,set_exception_debug_mod:33,set_framework:50,set_min_bas:905,set_min_denomin:906,set_nest_at_index:1042,set_nest_at_indic:1043,set_queue_timeout:907,set_split_factor:[794,1020],set_tmp_dir:908,set_with_grad:941,sgd:1139,shape:[605,909],shape_to_tupl:910,show_graph:1091,shuffl:[138,664,1050],sigmoid:[679,1066],signatur:[66,169,331,426,528,701],sin:[654,980],sinh:[655,981],siren:1115,softmax:[150,410,680,1067],softplu:[681,1068],sort:[72,175,337,432,534,707],sparse_cross_entropi:1086,split:[114,269,375,478,606,911],split_factor:[795,1021],split_func_cal:[796,1022],squeez:[115,270,376,479,607,912],stable_divid:913,stable_pow:914,stack:[271,608,915],stack_imag:[126,287,389,494,629,952],statist:[73,176,338,433,535,708],stop_gradi:[282,384,489,623,942],str_to_nod:1023,supports_inplac:916,svd:[291,497,635,959],swapax:[480,609,917],tan:[656,982],tanh:[657,682,983,1069],tensorflow:419,tile:[272,481,610,918],tmp_dir:919,to_dev:[82,223,441,544,797],to_ivi:3,to_ivy_modul:[153,685,1108],to_list:[611,920],to_n:4,to_nod:1024,to_numpi:[612,921],to_scalar:[613,922],torch:521,total_mem_on_dev:798,total_mem_on_nod:1025,tpu_is_avail:[442,545,799,1026],train:1143,trainabl:1143,transpos:[116,273,377,614,923],tree:1101,try_else_non:924,try_import_ivy_jax:51,try_import_ivy_mxnet:52,try_import_ivy_numpi:53,try_import_ivy_tf:54,try_import_ivy_torch:55,type:[63,64,166,167,328,329,423,424,525,526,698,699],uint8_img_to_float_img:953,unifi:1027,unify_arrai:1028,unify_it:1029,unify_nest:1030,unset_debug_mod:34,unset_default_devic:800,unset_default_dtyp:824,unset_default_float_dtyp:825,unset_default_int_dtyp:826,unset_framework:56,unset_with_grad:943,unstack:[117,274,378,482,615,925],used_mem_on_dev:801,used_mem_on_nod:1031,util:[74,177,339,434,536,709],valid_dtyp:827,value_is_nan:926,variabl:[283,385,490,624,944],variable_data:[625,945],vector_norm:960,vector_to_skew_symmetric_matrix:[129,292,392,498,636,961],verbos:1145,vision:43,where:[275,616,927,1101],why:1147,with_grad:946,wrapper:57,write:1144,zero:[118,277,379,484,618,929,1117],zero_pad:[276,483,617,928],zeros_lik:[119,278,380,485,619,930]}})