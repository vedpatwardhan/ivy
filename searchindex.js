Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/trace","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/trace","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/trace","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/trace","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/trace","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/trace","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/trace.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/trace.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/trace.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/trace.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/trace.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/trace.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[809,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[356,0,0,"-"],creation_functions:[357,0,0,"-"],data_type_functions:[363,0,0,"-"],data_types:[367,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[358,2,1,""],ones:[359,2,1,""],ones_like:[360,2,1,""],tril:[361,2,1,""],zeros:[362,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[363,1,1,""],finfo:[365,2,1,""],iinfo:[366,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[363,3,1,""],bits:[363,3,1,""],eps:[363,3,1,""],max:[363,3,1,""],min:[363,3,1,""],smallest_normal:[363,3,1,""]},"ivy.functional.backends.numpy.core":{device:[411,0,0,"-"],general:[413,0,0,"-"],gradients:[445,0,0,"-"],image:[450,0,0,"-"],linear_algebra:[454,0,0,"-"],logic:[458,0,0,"-"],math:[459,0,0,"-"],random:[461,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[412,1,1,""],clear_mem_on_dev:[411,2,1,""],dev:[411,2,1,""],dev_from_str:[411,2,1,""],dev_to_str:[411,2,1,""],gpu_is_available:[411,2,1,""],num_gpus:[411,2,1,""],to_dev:[411,2,1,""],tpu_is_available:[411,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[412,3,1,""],start:[412,3,1,""],stop:[412,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[413,2,1,""],arange:[414,2,1,""],argmin:[415,2,1,""],array:[416,2,1,""],asarray:[413,2,1,""],astype:[413,2,1,""],cast:[417,2,1,""],clip:[413,2,1,""],compile:[418,2,1,""],concatenate:[419,2,1,""],constant_pad:[413,2,1,""],container_types:[413,2,1,""],copy_array:[413,2,1,""],cumprod:[420,2,1,""],current_framework_str:[413,2,1,""],dtype:[421,2,1,""],dtype_bits:[422,2,1,""],dtype_from_str:[423,2,1,""],dtype_to_str:[424,2,1,""],floor:[413,2,1,""],floormod:[413,2,1,""],full:[425,2,1,""],gather:[426,2,1,""],gather_nd:[427,2,1,""],get_num_dims:[413,2,1,""],identity:[428,2,1,""],indices_where:[429,2,1,""],inplace_arrays_supported:[413,2,1,""],inplace_decrement:[430,2,1,""],inplace_increment:[431,2,1,""],inplace_update:[432,2,1,""],inplace_variables_supported:[413,2,1,""],is_array:[433,2,1,""],linear_resample:[434,2,1,""],linspace:[435,2,1,""],logspace:[436,2,1,""],meshgrid:[413,2,1,""],multiprocessing:[413,2,1,""],one_hot:[437,2,1,""],round:[413,2,1,""],scatter_flat:[438,2,1,""],scatter_nd:[439,2,1,""],shape:[413,2,1,""],split:[440,2,1,""],squeeze:[441,2,1,""],to_list:[413,2,1,""],to_numpy:[413,2,1,""],to_scalar:[413,2,1,""],transpose:[442,2,1,""],unstack:[443,2,1,""],where:[413,2,1,""],zero_pad:[413,2,1,""],zeros_like:[444,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[446,2,1,""],is_variable:[447,2,1,""],stop_gradient:[448,2,1,""],variable:[449,2,1,""],variable_data:[445,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[451,2,1,""],gradient_image:[452,2,1,""],stack_images:[453,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[455,2,1,""],qr:[456,2,1,""],vector_to_skew_symmetric_matrix:[457,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[460,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[462,2,1,""],randint:[461,2,1,""],random_normal:[461,2,1,""],random_uniform:[461,2,1,""],seed:[461,2,1,""],shuffle:[461,2,1,""]},"ivy.functional.ivy":{array_api:[810,0,0,"-"],core:[863,0,0,"-"],nn:[1157,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[811,0,0,"-"],creation_functions:[812,0,0,"-"],data_type_functions:[818,0,0,"-"],data_types:[821,0,0,"-"],elementwise_functions:[822,0,0,"-"],function_and_method_signatures:[843,0,0,"-"],linear_algebra:[844,0,0,"-"],manipulation_functions:[851,0,0,"-"],searching_functions:[853,0,0,"-"],set_functions:[855,0,0,"-"],sorting_functions:[856,0,0,"-"],statistical_functions:[858,0,0,"-"],utility_functions:[860,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[811,4,1,""],nan:[811,4,1,""],pi:[811,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[813,2,1,""],ones:[814,2,1,""],ones_like:[815,2,1,""],tril:[816,2,1,""],zeros:[817,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[819,2,1,""],iinfo:[820,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[823,2,1,""],asinh:[824,2,1,""],bitwise_and:[825,2,1,""],ceil:[826,2,1,""],cos:[827,2,1,""],cosh:[828,2,1,""],isfinite:[829,2,1,""],isnan:[830,2,1,""],less:[831,2,1,""],less_equal:[832,2,1,""],log10:[833,2,1,""],log1p:[834,2,1,""],log2:[835,2,1,""],logical_not:[836,2,1,""],logical_or:[837,2,1,""],negative:[838,2,1,""],sin:[839,2,1,""],sinh:[840,2,1,""],sqrt:[841,2,1,""],tanh:[842,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[845,2,1,""],matmul:[846,2,1,""],slodget:[847,2,1,""],svd:[848,2,1,""],trace:[849,2,1,""],vector_norm:[850,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[852,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[854,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[857,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[859,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[861,2,1,""],any:[862,2,1,""]},"ivy.functional.ivy.core":{compilation:[864,0,0,"-"],device:[866,0,0,"-"],dtype:[916,0,0,"-"],general:[940,0,0,"-"],gradients:[1035,0,0,"-"],image:[1051,0,0,"-"],linalg:[1058,0,0,"-"],logic:[1065,0,0,"-"],math:[1068,0,0,"-"],meta:[1081,0,0,"-"],multi_node:[1085,0,0,"-"],nest:[1129,0,0,"-"],random:[1141,0,0,"-"],reductions:[1148,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[865,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[866,1,1,""],DevClonedItem:[868,1,1,""],DevClonedIter:[869,1,1,""],DevClonedNest:[870,1,1,""],DevDistItem:[871,1,1,""],DevDistIter:[872,1,1,""],DevDistNest:[873,1,1,""],DevManager:[866,1,1,""],DevMapper:[875,1,1,""],DevMapperMultiProc:[876,1,1,""],MultiDev:[866,1,1,""],MultiDevItem:[878,1,1,""],MultiDevIter:[879,1,1,""],MultiDevNest:[880,1,1,""],Profiler:[881,1,1,""],clear_mem_on_dev:[882,2,1,""],default_device:[883,2,1,""],dev:[884,2,1,""],dev_clone:[885,2,1,""],dev_clone_array:[886,2,1,""],dev_clone_iter:[887,2,1,""],dev_clone_nest:[888,2,1,""],dev_dist:[889,2,1,""],dev_dist_array:[890,2,1,""],dev_dist_iter:[891,2,1,""],dev_dist_nest:[892,2,1,""],dev_from_str:[893,2,1,""],dev_to_str:[894,2,1,""],dev_unify:[895,2,1,""],dev_unify_array:[896,2,1,""],dev_unify_iter:[897,2,1,""],dev_unify_nest:[898,2,1,""],dev_util:[899,2,1,""],get_all_arrays_on_dev:[900,2,1,""],gpu_is_available:[901,2,1,""],num_arrays_on_dev:[902,2,1,""],num_cpu_cores:[903,2,1,""],num_gpus:[904,2,1,""],percent_used_mem_on_dev:[905,2,1,""],print_all_arrays_on_dev:[906,2,1,""],set_default_device:[907,2,1,""],set_split_factor:[908,2,1,""],split_factor:[909,2,1,""],split_func_call:[910,2,1,""],to_dev:[911,2,1,""],total_mem_on_dev:[912,2,1,""],tpu_is_available:[913,2,1,""],unset_default_device:[914,2,1,""],used_mem_on_dev:[915,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[866,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[866,3,1,""],da_tune_step:[866,3,1,""],dim_size:[866,3,1,""],ds_tune_step:[866,3,1,""],map:[866,3,1,""],repeated_config_check:[866,3,1,""],tune_step:[866,3,1,""],tuned:[866,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[875,3,1,""],map:[875,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[876,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[866,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[878,3,1,""],items:[878,3,1,""],keys:[878,3,1,""],shape:[878,3,1,""],values:[878,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[879,3,1,""],at_dev:[879,3,1,""],at_devs:[879,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[880,3,1,""],at_dev:[880,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[881,3,1,""],start:[881,3,1,""],stop:[881,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[916,1,1,""],DefaultFloatDtype:[916,1,1,""],DefaultIntDtype:[916,1,1,""],astype:[916,2,1,""],cast:[920,2,1,""],closest_valid_dtype:[921,2,1,""],convert_dtype:[922,2,1,""],default_dtype:[923,2,1,""],default_float_dtype:[924,2,1,""],default_int_dtype:[925,2,1,""],dtype:[926,2,1,""],dtype_bits:[927,2,1,""],dtype_from_str:[928,2,1,""],dtype_to_str:[929,2,1,""],invalid_dtype:[930,2,1,""],is_float_dtype:[931,2,1,""],is_int_dtype:[932,2,1,""],set_default_dtype:[933,2,1,""],set_default_float_dtype:[934,2,1,""],set_default_int_dtype:[935,2,1,""],unset_default_dtype:[936,2,1,""],unset_default_float_dtype:[937,2,1,""],unset_default_int_dtype:[938,2,1,""],valid_dtype:[939,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[916,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[916,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[916,3,1,""]},"ivy.functional.ivy.core.general":{"default":[963,2,1,""],abs:[941,2,1,""],all_equal:[942,2,1,""],arange:[943,2,1,""],arg_names:[944,2,1,""],argmin:[945,2,1,""],array:[946,2,1,""],array_equal:[947,2,1,""],arrays_equal:[948,2,1,""],asarray:[940,2,1,""],assert_supports_inplace:[949,2,1,""],broadcast_to:[950,2,1,""],cache_fn:[951,2,1,""],clip:[952,2,1,""],clip_matrix_norm:[953,2,1,""],clip_vector_norm:[954,2,1,""],concatenate:[955,2,1,""],constant_pad:[956,2,1,""],container_types:[957,2,1,""],copy_array:[958,2,1,""],cross:[959,2,1,""],cumprod:[960,2,1,""],cumsum:[961,2,1,""],current_framework_str:[962,2,1,""],einops_rearrange:[964,2,1,""],einops_reduce:[965,2,1,""],einops_repeat:[966,2,1,""],equal:[967,2,1,""],exists:[968,2,1,""],expand_dims:[969,2,1,""],floor:[970,2,1,""],floormod:[971,2,1,""],fourier_encode:[972,2,1,""],full:[973,2,1,""],gather:[974,2,1,""],gather_nd:[975,2,1,""],get_all_arrays_in_memory:[976,2,1,""],get_min_base:[977,2,1,""],get_min_denominator:[978,2,1,""],get_num_dims:[979,2,1,""],get_referrers_recursive:[980,2,1,""],has_nans:[981,2,1,""],identity:[982,2,1,""],indices_where:[983,2,1,""],inplace_arrays_supported:[984,2,1,""],inplace_decrement:[985,2,1,""],inplace_increment:[986,2,1,""],inplace_update:[987,2,1,""],inplace_variables_supported:[988,2,1,""],is_array:[989,2,1,""],isinf:[990,2,1,""],linear_resample:[991,2,1,""],linspace:[992,2,1,""],logspace:[993,2,1,""],match_kwargs:[994,2,1,""],matmul:[995,2,1,""],maximum:[996,2,1,""],meshgrid:[997,2,1,""],minimum:[998,2,1,""],multiprocessing:[999,2,1,""],num_arrays_in_memory:[1000,2,1,""],one_hot:[1001,2,1,""],ones:[1002,2,1,""],print_all_arrays_in_memory:[1003,2,1,""],queue_timeout:[1004,2,1,""],repeat:[1005,2,1,""],reshape:[1006,2,1,""],round:[1007,2,1,""],scatter_flat:[1008,2,1,""],scatter_nd:[1009,2,1,""],set_min_base:[1010,2,1,""],set_min_denominator:[1011,2,1,""],set_queue_timeout:[1012,2,1,""],set_tmp_dir:[1013,2,1,""],shape:[1014,2,1,""],shape_to_tuple:[1015,2,1,""],split:[1016,2,1,""],squeeze:[1017,2,1,""],stable_divide:[1018,2,1,""],stable_pow:[1019,2,1,""],stack:[1020,2,1,""],supports_inplace:[1021,2,1,""],swapaxes:[1022,2,1,""],tile:[1023,2,1,""],tmp_dir:[1024,2,1,""],to_list:[1025,2,1,""],to_numpy:[1026,2,1,""],to_scalar:[1027,2,1,""],transpose:[1028,2,1,""],try_else_none:[1029,2,1,""],unstack:[1030,2,1,""],value_is_nan:[1031,2,1,""],where:[1032,2,1,""],zero_pad:[1033,2,1,""],zeros_like:[1034,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1035,1,1,""],adam_step:[1037,2,1,""],adam_update:[1038,2,1,""],execute_with_gradients:[1039,2,1,""],gradient_descent_update:[1040,2,1,""],is_variable:[1041,2,1,""],lamb_update:[1042,2,1,""],lars_update:[1043,2,1,""],optimizer_update:[1044,2,1,""],set_with_grads:[1045,2,1,""],stop_gradient:[1046,2,1,""],unset_with_grads:[1047,2,1,""],variable:[1048,2,1,""],variable_data:[1049,2,1,""],with_grads:[1050,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1035,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1052,2,1,""],float_img_to_uint8_img:[1053,2,1,""],gradient_image:[1054,2,1,""],random_crop:[1055,2,1,""],stack_images:[1056,2,1,""],uint8_img_to_float_img:[1057,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1059,2,1,""],inv:[1060,2,1,""],matrix_norm:[1061,2,1,""],pinv:[1062,2,1,""],qr:[1063,2,1,""],vector_to_skew_symmetric_matrix:[1064,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1066,2,1,""],logical_or:[1067,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1069,2,1,""],asin:[1070,2,1,""],atan2:[1072,2,1,""],atan:[1071,2,1,""],atanh:[1073,2,1,""],cosh:[1074,2,1,""],divide:[1075,2,1,""],erf:[1076,2,1,""],exp:[1077,2,1,""],log:[1078,2,1,""],tan:[1079,2,1,""],tanh:[1080,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1082,2,1,""],maml_step:[1083,2,1,""],reptile_step:[1084,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1085,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1130,2,1,""],copy_nest:[1131,2,1,""],index_nest:[1132,2,1,""],map:[1133,2,1,""],map_nest_at_index:[1134,2,1,""],map_nest_at_indices:[1135,2,1,""],multi_index_nest:[1136,2,1,""],nested_indices_where:[1137,2,1,""],nested_map:[1138,2,1,""],set_nest_at_index:[1139,2,1,""],set_nest_at_indices:[1140,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1142,2,1,""],randint:[1143,2,1,""],random_normal:[1144,2,1,""],random_uniform:[1145,2,1,""],seed:[1146,2,1,""],shuffle:[1147,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1149,2,1,""],reduce_max:[1150,2,1,""],reduce_mean:[1151,2,1,""],reduce_min:[1152,2,1,""],reduce_prod:[1153,2,1,""],reduce_std:[1154,2,1,""],reduce_sum:[1155,2,1,""],reduce_var:[1156,2,1,""]},"ivy.functional.ivy.nn":{activations:[1158,0,0,"-"],layers:[1166,0,0,"-"],losses:[1179,0,0,"-"],norms:[1183,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1159,2,1,""],leaky_relu:[1160,2,1,""],relu:[1161,2,1,""],sigmoid:[1162,2,1,""],softmax:[1163,2,1,""],softplus:[1164,2,1,""],tanh:[1165,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1167,2,1,""],conv1d_transpose:[1168,2,1,""],conv2d:[1169,2,1,""],conv2d_transpose:[1170,2,1,""],conv3d:[1171,2,1,""],conv3d_transpose:[1172,2,1,""],depthwise_conv2d:[1173,2,1,""],dropout:[1174,2,1,""],linear:[1175,2,1,""],lstm_update:[1176,2,1,""],multi_head_attention:[1177,2,1,""],scaled_dot_product_attention:[1178,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1180,2,1,""],cross_entropy:[1181,2,1,""],sparse_cross_entropy:[1182,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1184,2,1,""]},"ivy.stateful":{activations:[1188,0,0,"-"],converters:[1191,0,0,"-"],initializers:[1193,0,0,"-"],layers:[1202,0,0,"-"],module:[1214,0,0,"-"],norms:[1216,0,0,"-"],optimizers:[1218,0,0,"-"],sequential:[1224,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1189,1,1,""],GELU:[1190,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1189,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1190,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1192,2,1,""]},"ivy.stateful.initializers":{Constant:[1193,1,1,""],FirstLayerSiren:[1195,1,1,""],GlorotUniform:[1196,1,1,""],KaimingNormal:[1193,1,1,""],Ones:[1198,1,1,""],Siren:[1199,1,1,""],Uniform:[1193,1,1,""],Zeros:[1201,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1198,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1199,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1201,3,1,""]},"ivy.stateful.layers":{Conv1D:[1203,1,1,""],Conv1DTranspose:[1204,1,1,""],Conv2D:[1205,1,1,""],Conv2DTranspose:[1206,1,1,""],Conv3D:[1207,1,1,""],Conv3DTranspose:[1208,1,1,""],DepthwiseConv2D:[1209,1,1,""],Dropout:[1210,1,1,""],LSTM:[1211,1,1,""],Linear:[1212,1,1,""],MultiHeadAttention:[1213,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1208,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1210,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1211,3,1,""],get_initial_state:[1211,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1212,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1213,3,1,""]},"ivy.stateful.module":{Module:[1215,1,1,""]},"ivy.stateful.module.Module":{__init__:[1215,3,1,""],build:[1215,3,1,""],build_mode:[1215,3,1,""],built:[1215,3,1,""],check_submod_rets:[1215,3,1,""],get_mod_key:[1215,3,1,""],mod_depth:[1215,3,1,""],mod_height:[1215,3,1,""],mod_with_top_mod_key_chain:[1215,3,1,""],save_weights:[1215,3,1,""],show_mod_in_top_mod:[1215,3,1,""],show_structure:[1215,3,1,""],show_v_in_top_v:[1215,3,1,""],sub_mods:[1215,3,1,""],track_submod_call_order:[1215,3,1,""],track_submod_rets:[1215,3,1,""],v_with_top_v_key_chains:[1215,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1217,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1217,3,1,""]},"ivy.stateful.optimizers":{Adam:[1219,1,1,""],LAMB:[1220,1,1,""],LARS:[1221,1,1,""],Optimizer:[1222,1,1,""],SGD:[1223,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],state:[1219,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1221,3,1,""],set_state:[1221,3,1,""],state:[1221,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1222,3,1,""],set_state:[1222,3,1,""],step:[1222,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1223,3,1,""],set_state:[1223,3,1,""],state:[1223,3,1,""]},"ivy.stateful.sequential":{Sequential:[1225,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1225,3,1,""]},"ivy.verbosity":{cprint:[1230,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1229,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1218,1219,1220],"02886":1185,"100":[1085,1185,1227],"141592653589793":811,"2021":1185,"2102":1185,"360":[1068,1079],"718281828459045":811,"754":[811,818,819,822,841],"999":[1035,1037,1038,1042,1218,1219,1220],"abstract":[866,881,1185,1218,1222],"boolean":[40,41,822,825,836,837,866,901,913,916,930,939,940,942,947,948,981,983,984,988,989,990,1021,1031,1035,1041,1065,1066,1067,1081,1082,1083,1085],"break":43,"case":[15,18,19,40,41,42,43,822,823,824,826,827,828,833,835,839,840,841,866,905,912,915,940,943,1006,1008,1009,1058,1061,1063,1085,1129,1132,1136,1185,1202,1213,1214,1215,1218,1222,1231],"catch":[940,963],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,363,411,412,818,820,866,868,869,870,871,872,873,875,876,878,879,880,881,893,894,916,940,944,994,1035,1049,1085,1129,1131,1138,1179,1181,1182,1185,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],"default":[15,18,19,40,41,42,43,812,813,814,815,816,817,844,845,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,875,876,883,884,888,889,890,891,892,895,896,897,898,905,908,909,910,915,916,923,924,925,926,940,942,943,945,953,954,955,956,959,960,961,972,973,974,979,981,982,991,993,994,997,999,1002,1004,1005,1008,1009,1012,1014,1016,1018,1019,1028,1030,1031,1035,1038,1040,1041,1042,1043,1044,1046,1050,1058,1061,1063,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1163,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],"final":[40,41,43,940,972,992,993,1085,1202,1213,1228],"float":[40,41,42,811,812,813,814,817,818,819,822,823,824,826,827,828,833,835,839,840,841,842,844,850,866,875,876,899,905,908,912,915,916,924,931,940,943,953,954,956,972,973,977,978,993,1010,1011,1012,1018,1019,1035,1037,1038,1040,1042,1043,1044,1051,1053,1057,1068,1075,1081,1082,1083,1084,1085,1141,1144,1145,1158,1160,1166,1174,1177,1178,1179,1180,1181,1182,1183,1184,1202,1210,1213,1216,1217,1218,1219,1220,1221,1222,1223],"function":[15,40,41,43,358,359,360,361,362,365,366,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,811,813,814,815,816,817,819,820,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,852,854,857,859,861,862,864,865,866,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189,1190,1218,1221,1222,1223,1227,1228,1231],"import":[43,1185,1228,1231],"int":[40,41,42,43,357,358,359,361,362,461,812,813,814,816,817,818,819,820,844,845,849,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,888,889,890,891,892,895,896,897,898,903,904,910,916,925,927,932,940,945,950,955,956,960,961,964,965,966,969,972,973,974,979,982,991,992,993,1001,1002,1005,1006,1008,1009,1014,1015,1016,1017,1020,1022,1023,1028,1030,1033,1035,1037,1038,1042,1051,1055,1056,1058,1061,1081,1082,1083,1084,1085,1129,1138,1141,1142,1143,1145,1146,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1177,1179,1181,1182,1183,1184,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1216,1217],"long":[43,1166,1176],"new":[40,41,43,461,812,813,814,815,817,822,834,916,920,940,941,950,964,965,966,969,972,973,974,975,1002,1006,1008,1009,1010,1011,1018,1019,1020,1035,1038,1040,1042,1043,1044,1051,1053,1055,1057,1068,1073,1074,1080,1085,1129,1139,1140,1141,1142,1183,1184,1185,1191,1192,1202,1212,1216,1217,1218,1219,1220,1221,1222,1223,1228,1231],"public":[940,957],"return":[15,16,17,18,19,40,41,42,43,461,812,813,814,815,816,817,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,844,845,847,848,849,850,853,854,856,857,858,859,860,861,862,864,865,866,875,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,901,902,904,905,909,910,911,912,913,915,916,920,921,922,923,924,925,926,927,928,929,930,931,932,939,940,941,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1005,1006,1007,1008,1009,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1191,1192,1202,1211,1212,1218,1222,1227,1228,1231],"short":[43,1166,1176,1185,1231],"static":[40,41,864,865],"super":1085,"true":[40,41,42,413,418,445,448,461,462,822,829,830,836,837,844,848,850,853,854,856,857,860,861,862,864,865,866,940,942,949,951,968,972,981,983,1031,1032,1035,1038,1040,1041,1042,1043,1044,1046,1058,1061,1081,1082,1083,1084,1085,1129,1130,1137,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1166,1174,1179,1180,1181,1182,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],"try":[40,41,940,1029,1085],"var":[40,41,1081,1082,1083,1231],"while":[40,41,42,822,836,837,1085],AND:[822,825,860,861,1065,1066],But:1231,For:[43,822,823,824,826,827,828,833,835,839,840,841,940,943,952,1020,1035,1041,1049,1058,1063,1068,1069,1185,1191,1192,1228,1231],Its:[1068,1071],NOT:[822,836],Not:811,One:[40,41,43,940,965,1006,1141,1143,1231],Ones:[1185,1193],PRs:43,Such:[940,957],That:1228,The:[15,16,17,18,19,40,41,42,43,812,816,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,839,840,841,842,844,845,847,848,849,850,851,852,856,857,860,861,862,864,865,866,875,876,882,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,905,908,909,910,911,912,915,916,920,921,922,927,928,929,930,939,940,943,946,947,950,951,953,954,955,956,958,959,962,963,967,972,974,975,982,985,986,987,989,991,993,995,997,999,1002,1005,1006,1008,1009,1010,1011,1012,1015,1016,1017,1018,1019,1020,1023,1031,1034,1035,1037,1038,1040,1042,1043,1044,1046,1049,1051,1053,1055,1057,1058,1061,1063,1068,1069,1070,1071,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1228,1231],There:[43,1185,1228],These:[43,1185],Use:43,Used:[1129,1130,1137,1214,1215],Using:[1185,1186,1231],With:[40,41,853,854,1058,1061,1148,1150,1151,1152,1153,1154,1155,1156,1185,1227,1231],__array__:[940,946],__call__:[1202,1213,1214,1215],__del__:1085,__dict__:[1085,1228],__enter__:1085,__exit__:1085,__getitem__:1085,__getstate__:1085,__init__:[40,41,42,43,59,60,84,221,363,364,411,412,493,625,866,867,874,875,876,877,878,879,880,881,916,917,918,919,1035,1036,1085,1089,1096,1185,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],__iter__:1085,__len__:1085,__next__:1085,__repr__:1085,_assign_vari:1227,_axi:1085,_base:[1129,1130,1137],_compute_node_da_ratio:1085,_compute_node_strs_da:1085,_concat_unify_arrai:1085,_counter:1085,_cur_framework:[43,1085],_da_direct:1085,_da_directions_flip:1085,_da_step_tim:1085,_da_tim:1085,_da_tune_count:1085,_data:1085,_delta_da_dim_s:1085,_delta_sf:1085,_dict:1085,_dim_siz:1085,_first_da_tune_step:1085,_first_ns_tune_step:1085,_fn:1085,_forward:[1185,1227],_get_kalman_param:1231,_get_prior:1231,_get_some_model:1231,_index:[1129,1130,1137],_input_queu:1085,_length:1085,_max_depth:1085,_max_node_dim_step_ratio:1085,_max_node_dim_step_s:1085,_max_split_factor_step_s:1085,_mean_unify_arrai:1085,_min_bas:[940,1019,1183,1184,1216,1217],_min_denomin:[940,1018],_min_node_dim_s:1085,_min_sf_tune_step:1085,_min_unit_node_tune_step:1085,_model:1231,_node_mapp:1085,_node_percent_mem:1085,_node_str:1085,_node_str_da_ratio:1085,_node_strs_da:1085,_node_strs_kei:1085,_node_strs_n:1085,_node_util:1085,_ns_step_tim:1085,_ns_time:1085,_ns_tune_count:1085,_num_nod:1085,_num_work:1085,_observed_config:1085,_output_queu:1085,_paramet:1227,_percent_mem_inc_per_sf:1085,_percent_mem_inc_per_unit_da_dim:1085,_percent_util_inc_per_unit_da_dim:1085,_ret_fn:1085,_safety_factor:1085,_save_dir:1085,_shift_da_split:1085,_shift_n:1085,_slice:1085,_step:[1218,1222],_sum_unify_arrai:1085,_timeout:1085,_tune:1085,_tune_da:1085,_tune_n:1085,_tune_step:1085,_unit_da_tune_count:1085,_unroll_step:1231,_with_node_mappig:1085,_worker:1085,_worker_class:1085,_worker_fn:1085,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,866,875,881,1085,1214,1215,1218,1222],abil:1185,abl:[40,41],about:[818,819,820],abov:[43,812,816,844,845,1141,1143],above_height:[40,41],abs:[263,413,547,680,844,850,940,1085],absolut:[40,41,844,847,940,941],abstractmethod:1085,accept:[15,43,822,836,837,1185],access:[40,41,43,1228],accord:[40,41,818,819,940,956,974,1008,1009,1028,1033],accordingli:[844,850,860,861,862],accur:[59,363,411,412,866,878,879,880,881,916,1035,1193,1195,1196,1198,1199,1201],aco:[763,1068],acosh:[88,225,368,497,629,822],across:[40,41,866,875,876,885,886,888,889,890,891,892,898,908,909,940,945,947,948,1085,1129,1133],act:43,activ:[1159,1160,1161,1162,1163,1164,1165,1185,1189,1190],actual:1228,adam:[1035,1037,1038,1042,1185,1218,1220,1227],adam_step:1035,adam_upd:1035,adapt:[1035,1043,1218,1221],add:[40,41,43,1085,1179,1180,1181,1182,1183,1184,1185,1216,1217,1228],added:[43,940,1018,1019,1224,1225],adding:[43,940,950],addit:[40,41,43,940,964,965,966,1183,1184,1202,1212],addition:43,address:43,adher:43,adjac:[940,943],adopt:[43,940,957],affect:[940,943],affin:[1216,1217],after:[822,841,940,991,1035,1038,1039,1040,1042,1043,1044,1051,1052,1183,1184,1218,1219,1220,1221,1222,1223,1231],after_1:[940,956,1033],after_n:[940,956,1033],again:43,against:[40,41,844,846,853,854,1058,1061,1148,1150,1151,1152,1153,1154,1155,1156],agnost:[43,1185,1227,1228],aim:1231,algebra:1058,algorithm:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209,1231],align:[40,41,43,940,950],aliv:[866,900,902,906,940,976,1000,1003],all:[15,16,17,18,19,40,41,43,127,253,407,536,668,812,816,844,850,851,852,860,864,865,866,875,900,906,940,941,942,947,948,957,976,982,1003,1017,1058,1063,1081,1082,1083,1084,1085,1129,1130,1131,1137,1138,1141,1142,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1176,1185,1228,1231],all_depth:[40,41],all_equ:940,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1129,all_tru:[40,41],alloc:[43,812,816,866,1085],allow:[940,992,993,994,1214,1215],allow_dupl:[940,994],alon:[866,905,915,1085,1185],along:[40,41,43,461,844,849,850,851,852,853,854,856,857,858,859,860,861,862,866,889,890,891,892,895,896,897,898,910,940,955,960,961,974,991,992,993,1005,1016,1020,1023,1030,1058,1061,1081,1082,1083,1084,1085,1141,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],alongsid:[1227,1228],alpha:[1158,1160],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,822,826,866,1085],also:[40,41,43,940,943,1035,1038,1081,1082,1083,1084,1129,1130,1131,1137,1138,1166,1175,1185,1202,1212,1227],altern:1227,alwai:[40,41,43,1035,1041,1046],among:[40,41],amount:[866,912,1085,1185],angl:[822,828,840,842,1068,1069,1072],ani:[15,16,17,18,19,40,41,43,127,253,407,536,668,822,832,860,864,865,866,868,871,875,876,878,887,888,891,892,897,940,942,943,946,963,964,965,966,967,968,981,989,994,1018,1019,1035,1039,1085,1129,1130,1133,1137,1138,1139,1140,1141,1145,1185,1191,1192,1214,1215,1227,1228,1231],anoth:[40,41,43,916,922,1185],another_backend:43,anyth:[43,1231],anywai:43,apart:43,api:[1185,1186],appear:[43,940,969],append:[40,41,844,845,846,1085],appli:[15,18,19,40,41,844,848,940,964,965,966,1035,1042,1043,1065,1066,1067,1081,1082,1083,1129,1133,1136,1138,1158,1159,1160,1161,1162,1163,1164,1165,1166,1175,1177,1178,1183,1184,1185,1188,1189,1190,1216,1217],applic:[1129,1133,1138,1166,1177,1178,1185,1231],appropri:[853,854],approxim:[822,823,824,827,828,833,834,835,839,840,842,1158,1159],arang:[138,263,413,461,547,680,940,992,993],arbitrari:[40,41,866,895,896,898,1085],arc:[1068,1072],arcco:[1068,1069],arctan:[1068,1071],area:[822,823,824,1185],arg:[15,16,17,40,41,43,59,63,866,875,888,892,898,910,940,964,965,966,1009,1085,1191,1192,1214,1215],arg_nam:940,arg_stateful_idx:[1214,1215],argmax:[120,247,400,529,661,853],argmin:[138,413,547,680,940],args_clon:1085,args_dist:1085,args_to_ivi:[15,1185],args_to_n:[15,1185],args_uni:1085,argsort:[123,250,403,532,664,856],argument:[15,16,17,18,19,40,41,42,43,59,63,864,865,866,875,876,888,892,898,940,943,944,951,963,994,1009,1068,1069,1085,1129,1133,1191,1192,1214,1215],aris:[1185,1231],arithmet:[1148,1151,1154,1156],arithmetic_oper:[0,1,2],around:[40,41,42],arr:461,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,263,413,461,547,680,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,851,852,853,854,856,857,858,859,860,861,862,866,884,885,886,889,890,891,892,895,896,897,898,900,902,906,910,911,916,920,926,931,932,940,941,942,943,945,947,948,949,950,952,953,954,955,956,958,959,960,961,964,965,966,967,969,970,971,972,973,974,975,976,979,981,982,983,984,985,986,987,989,990,991,992,993,995,996,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1014,1016,1017,1020,1021,1022,1023,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1037,1038,1041,1042,1046,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1129,1131,1138,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1202,1210,1211,1213,1218,1222,1227,1228],arrang:[940,964],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,357,358,359,360,361,362,363,365,366,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,851,852,853,854,856,857,858,859,860,861,862],array_api_methods_to_test:43,array_equ:[263,680,940],array_lik:[461,940,946],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,940],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1185],arraywithgener:[22,1185],arraywithgradi:[24,1185],arraywithimag:[26,1185],arraywithlinalg:[28,1185],arraywithlog:[30,1185],arraywithmath:[32,1185],arraywithmeta:[34,1185],arraywithrandom:[36,1185],arraywithreduct:[38,1185],arriv:[40,41,42],articl:1185,arxiv:1185,as_arrai:[40,41,940,979,1014],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[411,413,421,866,884,916,923,924,925,926],as_tensor:413,as_vari:[40,41],as_zero:[40,41],asarrai:[413,940],ascend:[856,857],asin:[763,1068],asinh:[88,368,497,629,822],aspect:[1051,1056],assert:[40,41,940,949,1085],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:940,associ:[43,1058,1064],assum:[822,827,839,1228,1231],astyp:[413,916],asynchron:[40,41,42],at_dev:[40,42,866,879,880],at_kei:[40,41],at_key_chain:[40,41],at_nod:1085,atan2:[763,1068],atan:[763,1068],atanh:[763,1068],attent:[43,1166,1177,1178,1202,1213],attribut:[0,6,40,41,818,819,820,940,1034],audienc:[1185,1228],author:1185,automat:43,avail:[40,41,43,866,901,903,904,913,940,965,1085],averag:[1035,1037,1038,1042,1081,1082,1083,1148,1151],average_across_step:[1081,1082,1083],avoid:[43,866,1085,1228],axes:[40,41,43,413,442,454,455,844,850,851,852,853,854,858,859,860,861,862,866,910,940,945,956,969,1022,1028,1033,1058,1061,1085,1148,1150,1151,1152,1153,1154,1155,1156],axes_length:[40,41,940,964,965,966],axi:[40,41,413,415,419,420,426,434,435,436,440,441,443,844,845,849,850,851,852,853,854,856,857,858,859,860,861,862,866,868,871,878,889,890,891,892,895,896,897,898,910,940,945,955,956,959,960,961,969,974,991,992,993,1005,1016,1017,1020,1022,1023,1030,1033,1085,1141,1147,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1179,1181,1182],axis0:[40,41,940,1022],axis1:[40,41,844,845,940,1022],axis2:[844,845],back:[43,1214,1215,1218,1222],backend:[15,17,19,40,41,357,358,359,360,361,362,363,365,366,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,459,460,461,462,866,901,904,913,916,922,930,939,940,984,988,1035,1038,1040,1042,1043,1044,1049,1085,1185,1186,1191,1192,1218,1219,1220,1221,1222,1223,1227,1228,1231],backend_nam:43,background:[1185,1228],backprop:1231,backward:[860,861,862,1227],band:[940,972],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,363,411,412,413,436,822,833,834,835,866,868,869,870,871,872,873,875,876,878,879,880,881,916,940,977,993,1010,1019,1035,1085,1148,1149,1185,1188,1189,1190,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1231],basi:43,batch:[40,41,844,848,850,866,908,909,940,972,982,1051,1055,1081,1082,1083,1084,1085,1166,1175,1183,1184,1216,1217],batch_shap:[413,428,940,982,1001,1051,1052,1053,1054,1055,1056,1057,1058,1064,1141,1142,1166,1176,1177,1178,1202,1211],batch_siz:[461,462,1085,1141,1142,1166,1167,1168,1169,1170,1171,1172,1173],bayesian:1231,becaus:[43,940,943],becom:[43,940,952,1068,1072,1231],been:[940,964,965,966,1141,1142],befor:[40,41,43,866,910,1081,1082,1083,1085,1129,1138,1148,1150,1151,1152,1153,1154,1155,1156,1166,1177,1178,1231],before_1:[940,956,1033],before_n:[940,956,1033],begin:[1129,1130,1137,1228],behaviour:[43,1231],behind:[1035,1038,1040,1042,1043,1044,1185],being:[40,41,43,940,943,1004,1012,1085],believ:43,belong:[40,41],below:[43,812,816,844,845,1185,1228,1231],below_depth:[40,41],benefit:1185,bernoul:[1166,1174,1202,1210],best:[43,940,994,1185],beta1:[1035,1037,1038,1042,1218,1219,1220],beta2:[1035,1037,1038,1042,1218,1219,1220],beta:[1183,1184],between:[40,41,42,818,819,940,943,1058,1063,1129,1133,1141,1143,1179,1181,1182,1218,1220],bia:[1166,1175,1176,1202,1203,1204,1205,1206,1207,1208,1209,1212],bias_initi:[1202,1203,1204,1205,1206,1207,1208,1209,1212],bilinear:[1051,1052],bilinear_resampl:[172,316,450,586,749,1051],bilinearli:[1051,1052],binari:[822,825,1179,1180],binary_cross_entropi:1179,bit:[363,818,819,820,916,927,1051,1053,1057,1185],bitwis:[822,825],bitwise_and:[88,225,368,497,629,822],bitwise_oper:[0,7,8],block:[1185,1228],bool:[15,18,19,40,41,42,43,822,829,830,831,832,836,837,844,848,850,853,854,856,857,858,859,860,861,862,864,865,866,884,897,901,905,910,913,915,916,926,940,942,947,948,960,963,967,968,972,979,981,989,994,1014,1016,1030,1031,1032,1035,1038,1039,1040,1041,1042,1043,1044,1046,1058,1061,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1166,1174,1191,1192,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],both:[43,844,846,940,959],bottom:1185,boundari:[40,41,1141,1145],branch:[43,864,865],brittl:43,broadcast:[40,41,822,825,831,832,837,844,846,850,853,854,860,861,862,940,950,967,996,997,998,1005,1058,1061,1068,1072,1075,1148,1150,1151,1152,1153,1154,1155,1156],broadcast_to:[263,680,940],build:[1085,1185,1202,1213,1214,1215],build_mod:[1202,1213,1214,1215],builder:[43,1185],built:[866,940,943,1085,1202,1213,1214,1215],busi:43,bypass:1228,cach:[866,882,940,951],cache_fn:940,calcul:[40,41,42,822,823,824,827,828,833,834,835,839,840,841,842,1068,1075],call:[43,866,910,940,1004,1012,1029,1035,1039,1085,1129,1130,1133,1137,1202,1213,1214,1215,1218,1222,1228,1231],callabl:[40,41,864,865,866,875,876,910,940,951,963,965,994,1029,1081,1082,1083,1084,1085,1129,1133,1134,1135,1137,1138,1166,1177],can:[43,866,908,909,910,940,1006,1051,1053,1085,1185,1227,1228,1231],cancel_join_thread:1085,cannot:43,captur:1185,cast:[40,41,138,263,413,547,680,916,940,955,1051,1053,1057],catch_except:[940,963],categori:43,caus:43,ceil:[88,225,368,497,629,822,940,943],cell:[1166,1176,1202,1211],certain:[40,41,940,943,992,993],chain:[40,41,1081,1082,1083,1224,1225],chang:[43,866,940,1006,1085,1129,1131,1138,1185,1227],channel:[940,972,1051,1053,1054,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],check:[15,16,17,18,19,40,41,43,866,905,915,916,921,930,939,940,949,968,981,989,1021,1031,1035,1041,1085,1129,1130,1137,1185,1228],check_nest:[1129,1137],check_shap:[40,41],check_submod_ret:[1214,1215],check_typ:[40,41],choic:[1185,1228],choleski:[753,1058],choos:[822,836,837,940,1032,1058,1063,1068,1072,1185],choose_random_framework:59,chosen:[40,41,940,943,1032],chunk:[866,908,909,910,1085],chunk_siz:[866,910,1085],circl:[1068,1069,1070],clark:1185,clear:[43,866,882,1085],clear_framework_stack:59,clear_mem_on_dev:[411,672,866],click:1185,clip:[40,41,263,413,680,940,953,954,996,998,1185],clip_matrix_norm:940,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,940],clipped_delta:1085,clone:[40,41,866,885,886,887,888,1085],clone_arrai:1085,clone_it:1085,clone_nest:1085,clonedit:1085,cloneditem:1085,clonednest:1085,close:[43,1051,1056,1068,1070,1085,1231],closest:[822,826,916,921],closest_valid_dtyp:916,code:[40,41,42,43,461,1185,1186,1227,1228],codebas:[866,908,909,1085,1185,1228,1231],codomain:[822,823,824,827,828,833,835,839,840,841,842],colab:1185,collect:[15,40,41,411,413,445,450,454,458,459,461,864,866,916,940,1035,1051,1058,1065,1068,1085,1129,1141,1148,1158,1166,1179,1183,1188,1202,1216,1218],color:[40,41,42,1229,1230],column:[940,982],combin:[40,41,42,1051,1056,1185,1231],combined_batch_s:1085,come:1228,command:1185,comment:43,commit:1231,common:[40,41,43,1068,1072],common_key_chain:[40,41],commun:[43,1185,1228],communuti:43,compar:[40,41,856,857,940,942,947,948],comparison_oper:[0,9,10],compat:[822,825,831,832,837,844,850,860,861,862,940,967,1006,1068,1075,1185,1231],compil:[263,413,680,1214,1215,1218,1219,1220,1221,1222,1223],compile_on_next_step:[1214,1215,1218,1219,1220,1221,1222,1223],complet:[40,41,43,1058,1063,1085],complex:[1228,1231],compliant:[822,836,837],compon:[940,959],composit:43,comput:[40,41,822,825,831,832,836,837,838,844,846,847,849,850,858,859,866,910,940,953,954,960,961,967,995,1035,1037,1038,1039,1040,1042,1043,1044,1046,1048,1051,1054,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1076,1077,1078,1079,1129,1133,1148,1149,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1175,1177,1179,1180,1181,1182],concat:[40,41,866,895,896,897,898,910,940,972,1085],concaten:[40,41,138,263,413,547,680,940,972,1085,1185],concatten:[40,41,866,895,896,897,898,910,1085],condit:[413,864,865,940,1032,1129,1137],conditon:[1129,1137],config:[40,41,1085],config_list:1085,configur:[40,41],conflict:43,conform:43,conjunct:1228,connect:[1202,1212,1213],consid:[40,41,822,836,837,1058,1063,1227,1231],consist:[40,41,866,898,1085,1148,1149,1214,1215,1228],constant:[866,875,876,940,956,1085,1129,1133,1179,1180,1181,1182,1183,1184,1193,1194,1198,1201,1214,1215,1216,1217,1228],constant_kwarg:1085,constant_pad:[263,413,547,680,940],constitu:[40,41],construct:[940,1023,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],constructor:[40,41,42,940,944,1224,1225],consum:[866,1085],cont_feat_dim:[1166,1177],contaienr:[40,41],contain:[15,18,19,42,812,814,816,817,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,850,858,859,860,861,862,866,885,889,910,916,920,940,941,945,952,953,954,957,967,981,996,998,1007,1018,1019,1035,1037,1038,1040,1042,1043,1044,1068,1075,1081,1082,1083,1084,1085,1141,1142,1148,1150,1151,1152,1154,1156,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[413,680,940],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[413,940,999,1166,1177,1202,1213],context_dim:[1202,1213],contextmanag:[59,60],continu:[43,1085,1228],contract:[40,41,1148,1149],contribut:[1185,1186],contributor:[43,1185],control:1185,conv1d:[203,346,475,801,1166,1185,1202],conv1d_transpos:[203,346,475,801,1166],conv1dtranspos:[1185,1202],conv2d:[203,346,475,611,801,1166,1185,1202],conv2d_transpos:[203,346,475,801,1166],conv2dtranspos:[1185,1202],conv3d:[203,346,475,611,801,1166,1185,1202],conv3d_transpos:[203,346,475,801,1166],conv3dtranspos:[1185,1202],convent:[40,41,844,846,1148,1149],conver:[866,882,893,905,912,915,1085],convers:[16,17,18,19,40,41,1085,1185],convert:[15,16,17,18,19,40,41,43,866,893,894,916,922,928,929,940,1015,1026,1027,1051,1053,1057,1058,1064,1085,1129,1131,1138,1185,1192],convert_dtyp:916,convolut:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],cool:43,cooler:43,coordin:[940,997,1068,1069,1070,1072],copi:[40,41,43,461,940,958,1085,1129,1131],copy_arrai:[413,680,940],copy_nest:1129,core:[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,459,460,461,462,864,865,866,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1185],corner:43,correct:[43,1185,1228],correctli:[40,41,43,853,854,1058,1061,1068,1072,1148,1150,1151,1152,1153,1154,1155,1156],correspond:[40,41,940,955,1141,1142],cos:[88,368,497,629,822,940,972,1068,1069,1079,1228],cosh:[88,368,497,629,763,822,1068],cosin:[822,823,827,828,1068,1069,1074],cost:[1035,1037,1038,1040,1042,1043,1044,1081,1082,1083,1084],cost_fn:[1081,1084],could:1231,count:[40,41,851,852,860,861,862,1085,1148,1153,1155],cours:43,cprint:1229,cpu:[40,41,43,866,903,905,911,912,915,940,943,946,974,975,982,992,993,1001,1002,1008,1009,1034,1085,1141,1142,1143,1144,1145,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1227,1228],creat:[40,41,812,813,814,815,817,866,875,876,940,943,946,973,974,975,982,992,993,1001,1002,1008,1009,1025,1034,1035,1048,1085,1141,1142,1143,1144,1145,1185,1186,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],create_if_abs:[40,41],create_vari:1193,creation:[40,41,42,43],creation_funct:[357,358,359,360,361,362,812,813,814,815,816,817],crop:[1051,1055],crop_siz:[1051,1055],cross:[263,680,940,1179,1180,1181,1182],cross_entropi:1179,cuda:[40,41,866,875,894,911,940,943,946,974,975,982,992,993,1001,1002,1008,1009,1034,1085,1141,1142,1143,1144,1145,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],cumprod:[138,263,413,680,940],cumsum:[680,940],cumul:[940,960,961],current:[40,41,42,43,866,875,899,900,902,906,916,922,930,939,940,962,976,984,988,1000,1003,1085,1129,1130,1137,1185,1231],current_framework:59,current_framework_str:[413,680,940,1085],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1166,1167,1168,1169,1170,1171,1172],d_out:[1166,1167,1168,1169,1170,1171,1172],da_can_termin:1085,da_dim_s:[866,1085],da_direct:1085,da_tune_step:[866,1085],dai:[43,1231],daniel:1185,data:[40,41,42,43,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,839,840,841,842,844,845,846,850,851,852,856,857,860,861,862,866,868,869,870,871,872,873,878,879,880,894,916,920,921,922,926,927,928,929,930,931,932,939,940,943,946,967,973,982,989,1002,1006,1017,1021,1034,1035,1041,1049,1068,1075,1085,1166,1175,1185],data_format:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],data_type_funct:[363,365,366,818,819,820],dataset:[40,41],datatyp:[40,41,916,921,931,932],dcdw:[1035,1037,1038,1040,1042,1043],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1035,1042,1043,1218,1220,1221],decay_lambda:[1035,1042,1043,1218,1220,1221],decid:[40,41,1231],decompos:[1058,1059,1063],decomposit:[844,848,1058,1059,1063],decrement:[940,985],dedic:[1035,1049,1191,1192],deep:[40,41,1185],deep_copi:[40,41],deeper:[866,888,892,898,1085,1129,1138,1185],deepli:[1129,1131],def:[43,60,84,221,364,493,625,867,874,877,917,918,919,1036,1085,1089,1096,1185,1194,1197,1200,1227,1228,1231],default_dev:43,default_devic:866,default_dtyp:[43,916],default_float_dtyp:916,default_int_dtyp:916,default_key_color:[40,41,42],default_nod:1085,default_rng:461,default_v:[940,963],defaultdevic:[866,867],defaultdtyp:[916,917],defaultfloatdtyp:[916,918],defaultintdtyp:[916,919],defin:[43,940,959,1001,1034,1141,1143],definit:43,degre:[1068,1079],del:1085,delai:43,delet:43,delta:[1035,1037,1085],delta_dim_s:1085,delta_percent_mem:1085,delta_sf:1085,delta_util:1085,demo:1185,denomin:[940,971,978,1011,1018,1019,1183,1184,1216,1217],denot:43,dens:[1202,1212],depend:[822,823,824,827,828,833,834,835,839,840,842,844,848,856,857,940,1032,1185],depth:[40,41,413,437,866,888,892,898,940,980,1001,1085,1129,1138,1214,1215],depth_cutoff:[40,41],depthwis:[1166,1173,1202,1209],depthwise_conv2d:[203,346,475,611,801,1166],depthwiseconv2d:[1185,1202],deriv:[812,815,1035,1037,1038,1040,1042,1043,1044,1129,1131,1138,1185,1214,1218,1222,1224],descend:[844,848,856,857],descent:[1035,1040,1218,1223],describ:[40,41,1148,1149],descript:[844,850],design:[1185,1186],desir:[40,41,866,911,916,920,940,943,946,982,983,1002,1034,1051,1056,1085,1148,1150,1151,1152,1154,1156],desired_aspect_ratio:[450,453,1051,1056],desired_percent_increas:1085,detail:1231,detect:[40,41,1129,1130,1137],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,822,823,824,825,827,828,829,830,833,835,839,840,841,844,845,846,847,850,860,861,862,866,901,903,904,913,916,920,921,927,930,931,932,939,940,942,943,946,947,948,981,984,988,989,1021,1031,1035,1041,1068,1075,1081,1082,1083,1084,1085,1166,1177],dev:[40,41,42,43,131,257,357,360,411,413,414,416,426,427,428,435,436,437,438,439,444,461,462,540,672,812,815,866,869,870,872,873,875,876,879,880,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,902,905,906,907,908,909,910,911,912,915,940,943,946,974,975,982,992,993,1001,1002,1008,1009,1034,1035,1050,1141,1142,1143,1144,1145,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],dev_clon:[40,41,866],dev_clone_arrai:866,dev_clone_it:866,dev_clone_nest:866,dev_dist:[40,41,866],dev_dist_arrai:866,dev_dist_it:866,dev_dist_nest:866,dev_from_str:[43,131,257,411,540,672,866],dev_mapp:866,dev_str:[40,41],dev_to_str:[131,257,411,540,672,866],dev_unifi:866,dev_unify_arrai:866,dev_unify_it:866,dev_unify_nest:866,dev_util:866,devclonedit:866,devcloneditem:866,devclonednest:866,devdistit:866,devdistitem:866,devdistnest:866,develop:[43,1185,1228,1231],deviat:[40,41,1141,1144,1148,1154,1183,1184,1216,1217],devic:[21,40,41,43,357,358,359,362,412,413,425,812,813,814,815,816,817,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,940,943,946,973,974,975,982,992,993,1001,1002,1008,1009,1034,1035,1050,1141,1142,1143,1144,1145,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],devmanag:[866,874],devmapp:[866,876],devmappermultiproc:866,diag:[844,848],diagon:[111,239,391,520,652,812,816,844,849,940,982],dict:[15,16,17,18,19,40,41,42,866,868,871,875,876,878,888,889,890,891,892,940,964,965,966,994,1081,1082,1083,1085,1129,1131,1132,1133,1136,1138,1191,1192],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,818,819,866,885,886,889,890,1058,1063,1085,1166,1175,1185,1228,1231],differenti:[1185,1228],dilat:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],dim:[40,41,844,848,940,1001,1051,1052,1056,1085,1202,1213],dim_siz:[40,41,866,1085],dimens:[40,41,42,812,816,844,845,846,848,850,851,852,853,854,860,861,862,866,897,940,950,955,959,964,965,966,969,972,979,991,1001,1005,1006,1016,1017,1020,1028,1030,1051,1055,1058,1061,1081,1082,1083,1084,1085,1141,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1176,1179,1181,1182,1202,1203,1204,1205,1206,1207,1208,1209,1212,1213],dimension:[40,41,461,844,846,848,850,860,861,862,940,1016,1017],direct:1085,directli:[43,1129,1138,1228,1231],directori:[940,1013,1024],discord:43,discret:[1179,1181],discuss:43,disk:[40,41,1051,1053],distanc:[940,943],distribut:[40,41,866,885,889,890,891,892,1085,1141,1142,1143,1144,1145,1166,1174,1202,1210,1214,1215],distribute_nest:1085,distributedarrai:[40,41],distrubt:[1179,1181],dive:[1185,1228],divid:[40,41,940,1016,1018,1068],dividend:[1068,1075],divis:[940,971,978,1011,1018,1019,1035,1037,1038,1042,1068,1075,1218,1219,1220],divisor:[1035,1037,1038,1042,1068,1075,1218,1219,1220],doc:1185,docstr:43,document:43,doe:[40,41,43,940,943,1016,1227],doesn:[1058,1063,1185],doing:43,domain:[822,823,824,827,828,833,835,839,840,841,842,1068,1069],don:[43,1185],done:43,door:1231,dot:[1058,1060,1166,1177,1178,1202,1213],down:1227,downscal:[940,953,954],drag:[1185,1231],draw:[1141,1142,1144,1145],drawn:[1141,1142,1143,1144,1145],drop:[1185,1231],dropout:[1166,1185,1202,1213],dropout_r:[1202,1213],ds_tune_step:866,dtype:[40,41,43,138,263,357,358,359,360,362,363,365,366,413,414,416,417,425,428,444,547,680,812,813,814,815,817,818,819,820,853,854,920,921,922,923,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,943,946,973,982,1001,1002,1034],dtype_bit:[138,263,413,547,680,916],dtype_from_str:[43,138,263,413,547,680,916],dtype_in:[413,422,423,424,916,922,927,928,929,930,931,932,939],dtype_to_str:[138,263,413,547,680,916],duplic:[40,41,43],dure:[40,41,43,844,846,864,865,940,1029,1035,1037,1038,1042,1081,1082,1083,1084,1214,1215,1218,1219,1220,1222],dynam:[43,413,418,864,865],each:[40,41,42,43,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,846,848,866,875,876,885,886,887,888,889,890,891,897,909,910,940,941,942,956,967,1005,1016,1020,1023,1033,1035,1038,1040,1042,1043,1044,1051,1054,1068,1070,1075,1077,1078,1085,1129,1133,1141,1142,1148,1149,1166,1167,1168,1169,1170,1171,1172,1173,1174,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228],eager:1228,easi:1231,easili:1185,econom:1231,ecosystem:1185,edg:[940,952,956,1033],effect:[1035,1044],effective_grad:[1035,1044],effici:1231,einop:[40,41,940,964,965,966],einops_rearrang:[40,41,940],einops_reduc:[40,41,940],einops_repeat:[40,41,940],einstein:[40,41,1148,1149],einsum:[40,41,189,334,463,601,781,1148],either:[40,41,43,822,833,835,839,844,846,940,963,994,997,999,1081,1082,1083,1084,1085,1202,1213,1214,1215,1228],eleg:1085,element:[40,41,461,812,816,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,846,851,852,858,859,860,861,862,866,887,891,897,916,920,940,941,943,945,947,948,952,953,954,960,961,967,970,971,982,983,996,998,1005,1007,1016,1027,1032,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1148,1149,1151,1153,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1174,1202,1210],elementwis:[40,41],elementwise_affin:[1216,1217],elementwise_funct:[822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842],elemtn:[1141,1142],elif:1085,els:[43,940,949,963,968,1085],elsewher:[940,1032],emphas:1185,empti:[40,41,77,214,357,486,618,812,860,861,862,1058,1063,1085],enabl:[40,41,42,43,1185],encapsul:[818,820],encod:[940,972,1051,1053],end:[940,943,1185,1228],engag:43,ensur:43,entir:[40,41,860,861,862,866,910,1085,1185,1202,1211],entri:[40,41,940,992,993,1016,1017],entropi:[1179,1180,1181,1182],enumer:1085,environ:1185,eps:[363,818,819],epsilon:[1035,1037,1038,1042,1179,1180,1181,1182,1183,1184,1216,1217,1218,1219,1220],equal:[40,41,88,368,497,629,822,829,844,845,856,857,940,942,947,948,956,1016,1033,1068,1079,1141,1145],equality_matrix:[940,942],equat:[40,41,1148,1149],equival:[822,836,837,844,850,940,943,1068,1079],erf:[459,763,1068],error:[40,41,43,866,940,1017,1068,1076,1085,1158,1159,1214,1215,1218,1222],etc:[40,41,43,866,911,940,943,946,974,975,982,992,993,1001,1002,1008,1009,1034,1085,1141,1142,1143,1144,1145,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1231],euclidean:[844,850],euler:811,evalu:[40,41,822,833,834,835,838,860,861,862,940,997,1129,1130,1137],even:[43,1231],evenli:[40,41,940,943,992,993,1016],everi:[43,940,942,1231],exact:[40,41],exampl:[43,864,865,940,952,1020,1058,1063,1185,1227,1228,1231],example_input:[413,418,864,865],exc_tb:1085,exc_typ:1085,exc_val:1085,exce:[940,998],except:[40,41,44,47,860,861,862,940,943,949,955,963,1029,1085],excess_s:1085,excit:[1185,1228],exclud:[59,61,940,943,1141,1145],exclus:[40,41,413,420,433,445,447,940,960,989,1035,1041,1141,1143],execut:[43,940,1029,1228],execute_with_gradi:[169,311,445,581,743,1035,1185,1227],exist:[40,41,940,963,1085,1185,1218,1222,1231],exp:[763,1068],expand:[40,41,940,969,972],expand_dim:[40,41,263,680,940,1085],expect:[940,944],explain:[43,1228],explicitli:[43,1202,1211,1213,1214,1215,1228],expon:[940,1019],exponenti:[1068,1076,1077],expos:[940,946,957],express:[822,827,839,940,997],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1035,1039],eye:[1058,1060],fabian:1185,fabio:1185,factor:[844,848,866,875,908,909,910,1035,1037,1038,1042,1043,1085,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209,1218,1219,1220,1221],fail:43,falck:1185,fall:[1214,1215,1218,1222],fallback_to_non_compil:[1214,1215,1218,1222],fals:[15,18,19,40,41,42,59,66,67,68,69,70,411,413,420,421,433,440,443,445,446,447,454,455,822,829,830,836,837,844,850,853,854,856,857,858,859,860,861,862,866,884,897,905,910,915,916,923,924,925,926,940,942,960,963,968,972,979,989,994,1014,1016,1030,1032,1035,1038,1039,1040,1041,1042,1043,1044,1058,1061,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1148,1150,1151,1152,1153,1154,1155,1156,1191,1192,1214,1215,1218,1219,1220,1221,1222,1223],fan_in:1193,fan_mod:1193,fan_out:1193,far:[1129,1130,1137,1227],faster:[864,865],favourit:[1185,1227],feasibl:1231,feat_dim:[1166,1177,1178],fed:[866,910,1085],feed:[866,910,1085],few:43,field:1231,file:[40,41,43,940,1013,1024,1214,1215],filepath:[40,41],fill:[40,41,812,813,814,815,817,940,973,1002,1141,1143],fill_valu:[413,425,940,973],filter:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209,1231],filter_s:[1202,1203,1204],filter_shap:[1202,1205,1206,1207,1208,1209],find:[40,41,43,1231],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,363,364,492,493,624,625,818],finish:[1185,1231],finit:[822,829],first:[40,41,43,461,822,825,831,832,837,844,845,846,848,864,865,866,897,940,947,955,959,967,992,993,1020,1022,1035,1039,1081,1082,1083,1084,1085,1129,1130,1137,1141,1147,1148,1153,1155,1202,1213,1214,1215,1218,1222,1228,1231],firstlayersiren:[1185,1193],firstli:[1228,1231],fist:[866,910,1085],fit:[40,41,411,413,445,450,454,458,459,461,940,1005,1051,1056],fix:43,fkt:1231,flag:[40,41,43,1035,1041],flat:[40,41,940,1005,1008],flat_list:[40,41],flatten:[40,41,844,850,853,854,940,972,1005,1148,1150,1151,1152,1154,1156],flatten_key_chain:[40,41,1214,1215],flexibl:[1185,1228],flip:[40,41,118,245,398,527,659,851],float32:[43,413,428,916,920,928,929,940,943,946,982,1002,1034],float_dtyp:[916,924,934],float_img_to_uint8_img:1051,floor:[263,413,680,940,971,1085],floormod:[263,413,680,940],fluid:1231,folder:[43,1185],follow:[40,41,43,818,820,844,850,866,910,940,985,986,987,1018,1019,1035,1038,1040,1042,1043,1044,1085,1129,1133,1138,1166,1177,1178,1185,1202,1212,1218,1222],followng:[818,819],fomaml_step:1081,forget:[1035,1037,1038,1042,1218,1219,1220],fork:[940,999,1185,1186],forkserv:[940,999,1085],form:[15,16,17,18,19,40,41,812,816,844,845,940,946,1035,1038,1040,1042,1043,1044,1129,1131,1138,1166],format:[40,41,43,866,884,916,920,922,926,940,943,946,982,1002,1034,1085,1148,1149,1185,1227,1228],format_fn:[40,41],format_key_chain:[40,41],forward:[1214,1215,1218,1222,1227],found:[40,41,42],fourier:[940,972],fourier_encod:940,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,244,246,248,251,254,255,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,317,318,319,321,322,323,324,326,327,330,331,332,333,335,336,337,338,339,340,341,342,345,347,348,349,350,351,352,353,358,359,360,361,362,364,365,366,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,392,393,394,395,396,397,399,401,404,406,408,409,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,451,452,453,455,456,457,460,462,464,465,466,467,468,469,470,473,474,476,477,478,479,480,481,482,487,488,489,490,491,493,494,495,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,521,522,523,524,525,526,528,530,533,535,537,538,541,542,543,544,545,546,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,582,583,584,585,587,588,589,591,592,593,597,598,599,600,602,603,604,605,606,607,608,612,613,614,619,620,621,622,623,625,626,627,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,653,654,655,656,657,658,660,662,665,667,669,670,673,674,675,676,677,678,679,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,744,745,746,747,748,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,775,776,777,778,779,780,782,783,784,785,786,787,788,791,792,793,794,795,796,797,799,800,802,803,804,805,806,807,808,813,814,815,816,817,819,820,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,845,846,847,848,849,850,852,854,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1185,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1230,1231],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1085,framewrk:[940,999],free:43,freed:43,freeli:43,frequenc:[940,972],from:[40,41,42,43,812,815,822,841,844,845,851,852,858,859,860,861,862,866,875,876,910,916,922,940,963,974,975,982,1006,1017,1025,1032,1035,1038,1042,1051,1055,1058,1063,1081,1082,1083,1084,1085,1129,1131,1138,1141,1142,1143,1144,1145,1148,1153,1155,1166,1174,1177,1185,1191,1192,1202,1210,1213,1218,1222,1227,1228],from_cal:[1214,1215],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,263,413,547,680,818,819,940,1058,1063,1185],full_matric:[844,848],fulli:[43,1185,1202,1212,1213,1227],func:[40,41,413,418,445,446,864,865,866,910,940,951,1035,1039,1085],further:[43,1231],furthermor:1231,futur:1231,gain:1193,gamma:[1183,1184],gather:[40,41,138,263,413,547,680,940,975],gather_nd:[40,41,138,263,413,547,680,940],gauss:[1068,1076],gaussian:[1158,1159],geglu:[1185,1188],gelu:[344,472,790,1158,1185,1188],gener:[23,40,41,43,411,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,461,864,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1041,1141,1143,1145,1146,1185,1218,1222],geometr:[940,972],get:[40,41,43,818,819,820,866,875,876,884,899,900,905,909,912,915,916,926,927,940,944,976,977,978,1004,1085,1185,1202,1211,1231],get_all_arrays_in_memori:940,get_all_arrays_on_dev:866,get_framework:59,get_initial_st:[1202,1211],get_min_bas:940,get_min_denomin:940,get_mod_kei:[1214,1215],get_num_dim:[413,680,940],get_referrers_recurs:940,getfullargspec:1085,gist:1185,give:[43,940,1006,1228],given:[40,41,43,812,813,851,852,866,899,905,908,909,910,912,915,916,920,940,943,946,952,960,961,975,992,993,1002,1005,1008,1009,1016,1023,1028,1030,1034,1035,1037,1038,1040,1042,1043,1044,1058,1060,1064,1068,1069,1085,1129,1134,1135,1141,1144,1145,1147,1148,1151,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1191,1192,1231],global:[40,41,42,866,875,876,883,908,909,910,916,923,924,925,940,962,977,978,1004,1010,1011,1012,1018,1019,1035,1050,1085,1183,1184,1216,1217],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1185,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],good:43,googl:1185,got:[43,1185],gpu0:43,gpu2:43,gpu:[866,901,904,1085],gpu_is_avail:[411,866,1085],grad:[1185,1218,1222,1227],gradient:[25,40,41,446,447,448,449,866,910,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1054,1081,1082,1083,1084,1185,1218,1219,1220,1221,1222,1223,1227,1231],gradient_descent_upd:[1035,1081,1082,1083,1084],gradient_imag:[172,316,450,586,749,1051],gradienttrack:[1035,1036],graph:[1035,1038,1040,1042,1043,1044,1214,1215],greater:[40,41,940,943,970,1017,1141,1145],green:[40,41,42,1229,1230],grid:[940,997],group:[1051,1056],guid:[43,1185,1186,1231],gym:1185,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1231,half:[940,943,1085,1141,1145],hand:1185,handl:[40,41,42,43,864,865,866,882,884,893,894,905,912,915,1035,1038,1040,1042,1043,1044,1085,1218,1219,1220,1221,1222,1223],happen:43,has:[40,41,43,844,846,847,853,854,940,1020,1058,1063,1068,1071],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,940],hasattr:1085,have:[40,41,43,812,813,814,815,816,817,818,819,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,839,840,841,842,844,845,846,848,850,851,852,853,854,856,857,860,861,862,940,955,959,964,965,966,967,973,1020,1035,1041,1049,1068,1075,1085,1185,1227,1228],haven:43,hdf5:[40,41,1214,1215],head:[1166,1177,1202,1213],head_dim:[1202,1213],height:[1051,1056],height_cutoff:[40,41],help:[43,59,363,411,412,866,878,879,880,881,916,1035,1185,1193,1195,1196,1198,1199,1201],here:[43,1185],hidden:[1166,1176,1202,1211],hierarch:[940,957],hierarchi:[40,41],high:[40,41,461,1141,1143,1145],higher:[844,848,1035,1038,1040,1042,1043,1044],highest:[1141,1143],highest_util:1085,highest_util_nod:1085,highli:1185,highlight:1231,hint:43,hkt:1231,hold:[916,920,940,943,946,1008,1009],host:1185,hot:[940,1001],how:[1185,1202,1213,1214,1215,1228,1231],howev:[43,1228],http:1231,hyperbol:[822,823,824,828,840,842,1068,1073,1074,1080,1158,1165],hypothet:[43,1231],icon:1185,idea:1185,ident:[40,41,43,138,263,413,547,680,940],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[811,818,819,822,841],if_exist:[40,41],ignor:[40,41,1218,1222],ignore_key_error:[40,41],ignore_miss:[1218,1222],ignore_non:[40,41],iii:43,iinfo:[83,220,363,492,624,818],imag:[27,451,452,453,940,991,1052,1053,1054,1055,1056,1057,1166,1167,1168,1169,1170,1172,1173,1185,1231],image_dim:[1051,1055],imkkhk:1231,immedi:[1185,1228,1231],implement:[43,822,823,824,827,828,833,834,835,839,840,842,856,857,1185,1228,1231],in_featur:[1166,1175],inadvert:43,includ:[40,41,43,844,850,860,861,862,940,943,981,1018,1019,1031,1129,1130,1141,1145,1202,1212,1213,1216,1217,1227],include_deriv:[1129,1131,1138],include_empti:[40,41],include_inf:[40,41,940,981,1031],include_nest:[1129,1130],include_self:[40,41],inclus:[43,1141,1143],incom:[1166,1175],increas:[866,888,892,898,940,956,969,1033,1085,1129,1138],increasingli:1231,increment:[940,986,1085],inde:1185,indent:[40,41,42],independ:[1141,1142],index:[40,41,413,461,853,854,856,857,940,945,974,975,997,1017,1020,1129,1132,1134,1135,1136,1139],index_nest:1129,indic:[40,41,413,426,427,437,438,439,844,850,853,854,856,857,940,945,974,975,983,1001,1008,1009,1129,1130,1132,1134,1135,1136,1137,1139,1140,1141,1142,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1183,1184,1202,1203,1204,1205,1206,1207,1208,1209,1214,1215],indices_wher:[138,263,413,680,940],indistinguish:[822,841],inevit:1231,inf:[40,41,844,850,940,981,990,1031,1068,1071],infer:[812,815,858,859,864,865,940,979,982,1006,1014,1051,1055,1058,1063,1228,1231],infin:[822,823,824,826,827,828,829,833,835,839,840,841,842,844,850,860,861,862,940,990],infinit:[822,841],inform:[818,819,820,1035,1046],init_c:[1166,1176],init_h:[1166,1176],init_on_first_step:[1218,1222],initi:[40,41,42,43,59,363,411,412,866,878,879,880,881,916,1035,1085,1166,1176,1185,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1218,1222],initialz:[1214,1215],inner:[844,846,1081,1082,1083,1084],inner_batch_fn:[1081,1082,1083],inner_batch_shap:[1166,1175],inner_cost_fn:[1081,1082,1083],inner_grad_step:[1081,1082,1083,1084],inner_learning_r:[1081,1082,1083,1084],inner_optimization_step:[1081,1082,1083,1084],inner_v:[1081,1082,1083],innermost:[812,816,844,845],inp:1085,inplac:[40,41,940,949,984,988,1021,1035,1038,1040,1042,1043,1044,1191,1192,1218,1219,1220,1221,1222,1223],inplace_arrays_support:[413,940],inplace_decr:[138,263,413,547,680,940],inplace_incr:[138,263,413,547,680,940],inplace_oper:[0,11,12],inplace_upd:[40,41,138,263,413,547,680,940,1191,1192],inplace_variables_support:[413,940],input:[15,18,19,40,41,42,43,812,815,816,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,848,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,875,876,883,884,885,888,889,892,898,910,911,916,920,921,923,924,925,926,927,931,932,940,941,942,945,947,948,949,950,952,953,954,955,956,958,960,961,963,964,965,966,967,968,969,970,971,972,979,981,982,983,985,986,987,989,990,991,995,996,997,998,1005,1007,1014,1015,1017,1020,1021,1022,1023,1025,1026,1027,1028,1030,1031,1033,1035,1039,1041,1046,1050,1051,1052,1053,1054,1055,1057,1058,1061,1063,1065,1066,1067,1068,1071,1073,1074,1075,1079,1080,1081,1082,1083,1084,1085,1141,1142,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1183,1184,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1228],input_ax:[866,910,1085],input_channel:[1202,1203,1204,1205,1206,1207,1208,1211,1212],input_queu:1085,inputs_split:1085,insert:[853,854,940,969],insid:43,inspect:1085,inspir:1231,instal:1185,instanc:[15,16,17,18,19,40,41,43,461,866,875,1085,1191,1192,1224,1225],instead:[40,41,43,461,1148,1150,1151,1152,1153,1154,1155,1156,1231],int32:43,int64:[916,920,940,943,946,982,1002,1034],int_dtyp:[916,925,935],integ:[40,41,461,818,820,822,825,826,844,850,860,861,862,916,932,940,943,970,1007,1016,1141,1143,1146],integr:1185,intend:43,inter:1185,interact:1185,interchang:[40,41,940,1022],interest:1185,interfac:[940,946,1228],intermedi:[40,41],intern:[40,41,866,1035,1049,1085,1129,1130,1137,1138,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1224,1225],interpol:[940,991],intersect:[1068,1069],interv:[40,41,860,861,862,940,943,952,992,993,1068,1070,1141,1145],introduc:1231,inv:[753,1058,1231],invalid:[860,861,862],invalid_dtyp:916,invers:[822,823,824,1058,1060,1062,1068,1069,1070,1071,1073,1231],invert:[1058,1060,1062],invest:1231,investig:43,invoc:[864,865],irrespect:1185,is_al:1085,is_arrai:[138,263,413,547,680,940,1085],is_float_dtyp:916,is_int_dtyp:916,is_mean:1085,is_sum:1085,is_vari:[169,311,445,581,743,1035],isfinit:[88,225,368,497,629,822],isinf:[263,547,680,940],isinst:1085,isnan:[88,225,368,497,629,822],isnumer:1085,issu:[1185,1186],issue_numb:43,item:[15,19,40,41,866,875,876,878,885,887,889,891,897,916,923,940,957,980,1018,1019,1085,1129,1133,1134,1135,1138,1139,1140,1185,1214,1215,1227],iter:[15,16,17,18,19,40,41,42,864,865,866,869,870,872,873,875,876,879,880,887,889,890,891,892,897,910,940,942,950,955,956,982,997,1002,1005,1006,1009,1014,1016,1020,1023,1028,1033,1085,1129,1130,1131,1133,1137,1138],iterbal:[866,887,891,897,1085],its:[461,844,846,866,910,940,982,1006,1022,1028,1085,1185],itself:[1129,1138],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,357,358,359,360,361,362,363,365,366,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1230],ivy_backend:[40,41],ivy_bay:1231,ivy_test:43,ivyfcmodel:1227,ivyh:[40,41,42],ivymodul:[200,798],jame:1185,jax:[43,1035,1041,1185,1231],jax_concat:1185,jnp:1185,join:[40,41,940,955,1020,1085],journal:1185,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1185,1202,1211,1231],kaimingnorm:[1193,1197],kalman:1231,kalman_filt:1231,kalman_filter_step:1231,kalman_filter_upd:1231,keep:[40,41,866,911,940,1030,1085,1185,1186,1231],keep_inner_v:[1081,1082,1083],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1081,1082,1083],keepdim:[40,41,413,443,454,455,844,850,853,854,858,859,860,861,862,940,1030,1058,1061,1148,1150,1151,1152,1153,1154,1155,1156],kei:[15,16,17,40,41,42,43,866,878,940,957,1081,1082,1083,1085,1129,1132,1136,1166,1177,1178,1185,1191,1192,1202,1213,1218,1222],kept:[40,41,42,1081,1082,1083],kera:1231,kernel:[1166,1176],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,866,875,876,888,892,898,940,944,964,965,966,994,1085,1129,1133,1214,1215],keyword_color_dict:[40,41,42],kind:[818,819,820,1231],kwarg:[15,16,17,40,41,42,59,63,866,875,888,892,898,940,994,1085,1191,1192,1214,1215],kwarg_stateful_idx:[1214,1215],kwargs_clon:1085,kwargs_dist:1085,kwargs_uni:1085,label:[43,1179,1180,1181,1182],lamb:[1035,1042,1185,1218],lamb_upd:1035,lambda:[1085,1218,1221,1223,1227],lar:[1035,1042,1043,1185,1218],larger:[818,819,940,952],largest:[40,41,818,819,820,940,970],lars_upd:1035,last:[40,41,844,845,848,851,852,856,857,860,861,862,940,943,959,991,1016,1020,1058,1061,1148,1153,1155,1158,1163,1166,1176,1202,1212],later:[40,41,940,951],latest:[1202,1211],layer:[1035,1038,1040,1042,1044,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1183,1184,1185,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1231],layer_norm:1183,layernorm:[1185,1216],layerwis:[1035,1043,1218,1221],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1129,1130,1137],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1158,1159,1160],leaky_relu:[790,1158],learn:[858,859,1035,1038,1040,1042,1043,1044,1058,1063,1081,1082,1083,1084,1141,1147,1185,1218,1219,1220,1221,1222,1223,1228,1231],learnabl:[1183,1184,1216,1217],least:[43,844,846],leav:[15,18,19,40,41,1129,1130,1131,1137,1138],left:[40,41,43,853,854,1058,1061,1148,1150,1151,1152,1153,1154,1155,1156,1185],leftmost:[40,41],len:1085,length:[40,41,42,940,943,1006,1017,1028],lenton2021ivi:1185,lenton:1185,less:[40,41,43,88,225,368,497,629,822,823,826,833,835,841,844,850,1085,1141,1145],less_equ:[88,368,497,629,822],less_util_node_str:1085,let:[1228,1231],level:1185,librari:[822,836,837,1185,1227,1231],lightweight:1185,like:[43,1035,1041,1141,1145,1185,1227,1228,1231],likewis:43,limit:[40,41,42,43,818,819,820,940,952,953,954],linalg:[29,1059,1060,1061,1062,1063,1064,1185],line:43,linear0:[1185,1227],linear1:1185,linear2:1227,linear:[940,972,991,1058,1158,1159,1160,1161,1166,1174,1185,1202,1203,1204,1205,1206,1207,1208,1209,1227],linear_algebra:[454,455,456,457,844,845,846,847,848,849,850],linear_resampl:[138,263,413,547,680,940],linearli:[940,972],link:[43,1185],linspac:[138,263,413,547,680,940,943],list:[15,18,19,40,41,357,358,359,362,812,813,814,817,851,852,860,861,862,866,875,876,885,886,888,889,890,892,895,896,910,940,943,946,948,997,1015,1016,1025,1030,1081,1082,1083,1085,1129,1130,1131,1133,1137,1138,1166,1167,1168,1169,1170,1171,1172,1173,1185,1186,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209],list_join:[40,41,42],list_stack:[40,41],liter:[844,850],littl:1228,load:[40,41],loaded_kwarg:1085,loader:1185,local:43,local_set:[940,980],locat:[43,940,990,1141,1142],log10:[88,368,497,629,822],log1p:[88,368,497,629,822],log2:[88,368,497,629,822],log:[763,822,834,844,847,940,993,1068,1085,1179,1180,1181,1182],logarithm:[822,833,834,835,844,847,1068,1078],logdet:[844,847],logic:[31,822,836,837,860,861,862,1066,1067,1185],logical_and:[325,760,1065],logical_not:[88,225,368,497,629,822],logical_or:[88,325,368,497,629,760,822,1065],logit:[1179,1182],logspac:[138,263,413,547,680,940],look:[43,1228,1231],loop:[1081,1082,1083,1084],loss:[1180,1181,1182,1185,1227],loss_fn:[1185,1227],lot:1228,low:[40,41,461,1141,1143,1145],lower:[40,41,43,812,816,940,996,1141,1145],lower_depth:[1214,1215],lowest:[15,18,19,40,41,1129,1138,1141,1143],lstm:[1166,1176,1185,1202],lstm_updat:[43,1166],machin:[818,819,820,858,859,1058,1063,1141,1147,1185,1228,1231],made:43,mai:[822,832,836,837,856,857,940,943,963,967,1185,1228,1231],main:[812,816,844,845,940,982,1185],mainli:1185,maintain:[43,856,857],make:[43,461,866,1085,1185,1228],maml:[1081,1082,1083],maml_step:1081,manag:[866,1085],manhattan:[844,850],mani:[40,41,43,940,1016,1185],manipulation_funct:[851,852],manner:[15,18,19,40,41,43,1129,1138],manual:[1129,1130,1137,1231],map:[40,41,42,866,875,940,990,1085,1129,1134,1135,1138,1202,1213,1227],map_cont:[40,41],map_nest_at_index:1129,map_nest_at_indic:1129,map_sequ:[40,41],mapper:[866,875,876,1085],mark:43,mask:[1166,1177,1178],master:43,match:[40,41,940,994],match_kwarg:940,math:[33,460,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1185],mathbb:[1058,1064],mathbf:[1058,1064],mathemat:[811,844,850],matmul:[43,111,263,391,520,652,844,940,1231],matplotlib:1228,matric:[812,816,844,845,1166,1175],matrix:[40,41,812,816,844,845,846,940,942,953,995,1058,1059,1060,1061,1062,1063,1064,1166,1175,1202,1212],matrix_norm:[40,41,176,320,454,590,753,1058],matter:1185,max:[40,41,363,818,819,820,940,953,954,965,996,1008,1009,1085,1148,1150,1218,1220],max_batch_s:[40,41],max_chunk_s:[866,910,1085],max_depth:[40,41,866,870,873,880,888,892,898,940,980,1085,1129,1138],max_dev_dim_step_ratio:866,max_freq:[940,972],max_length:[40,41],max_node_dim_step_ratio:1085,max_norm:[40,41,940,953,954],max_split_factor_step_s:[866,1085],max_trust_ratio:[1035,1042,1218,1220],maxim:[1185,1228,1231],maximis:1185,maximum:[40,41,42,680,853,854,866,888,892,898,910,940,952,953,954,972,1035,1042,1085,1129,1138,1148,1150],mayb:[15,18,19],mdi:1085,mean:[40,41,461,866,895,896,897,898,910,940,965,1081,1082,1083,1084,1085,1129,1133,1141,1144,1148,1151,1154,1156,1193,1227,1231],measur:[1166,1177,1202,1213],mech:1185,mechan:[1185,1231],medic:1231,member:43,memori:[866,882,905,910,912,915,1085,1166,1176,1185],mention:43,merg:43,merge_with_upstream:43,meshgrid:[263,413,680,940],messag:[1229,1230],meta:[35,1082,1083,1084,1185],method:[40,41,42,43,461,940,946,957,997,1008,1009,1035,1042,1043,1085,1129,1130,1137,1138,1185,1202,1213,1214,1215,1228],might:[940,963,1231],min:[40,41,125,363,405,534,666,818,819,820,844,850,858,940,965,998,1008,1009,1018,1058,1063,1085,1148,1152],min_bas:[940,1019],min_denomin:[940,1018],min_dev_dim_s:866,min_node_dim_s:1085,min_sf_tune_step:[866,1085],min_unit_dev_tune_step:866,min_unit_node_tune_step:1085,mind:1185,mini:[1183,1184,1216,1217],minimum:[40,41,680,858,859,866,916,920,940,943,945,946,952,977,978,1010,1011,1018,1019,1085,1148,1152],miss:[1218,1222],ml_framework:[940,943,1058,1063],mod:[940,971],mod_depth:[1214,1215],mod_height:[1214,1215],mod_with_top_mod_key_chain:[1214,1215],mode:[40,41,454,456,844,848,864,865,866,895,896,897,898,910,1058,1063,1085,1228],model:[1185,1227],modul:[40,41,42,59,940,999,1085,1185,1186,1188,1189,1190,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1224,1225,1231],moment:[1035,1037,1038,1042,1218,1219,1220],more:[43,844,846,851,852,940,1020,1085,1185,1228,1231],more_util_node_str:1085,most:[40,41,1058,1063,1185,1231],move:[40,41,43,866,911,1085],much:[43,1185,1231],multi:[461,940,999,1166,1177,1202,1213],multi_head_attent:1166,multi_index_nest:1129,multi_map:[40,41],multi_nod:1085,multidev:[866,877,878,879,898],multidevcontain:[40,41],multidevic:[866,875],multidevit:[866,869,872,875,876,880],multidevitem:[866,868,871],multidevnest:[866,870,873],multiheadattent:[1185,1202],multinod:[1085,1089],multinodecontain:1085,multinodeit:1085,multinodeitem:1085,multinodenest:1085,multinomi:[182,329,461,596,774,1141],multipl:[40,41,860,861,862,940,994,1016,1058,1060,1148,1150,1151,1152,1153,1154,1156,1183,1184,1202,1212,1228],multipli:[40,41,940,960,1148,1153],multiprocess:[40,41,42,413,680,866,875,940,1085],must:[40,41,42,43,812,813,814,815,816,817,822,823,824,825,826,827,828,829,831,832,833,835,836,837,839,840,841,842,844,845,846,850,851,852,856,857,858,859,860,861,862,866,895,896,897,898,910,940,943,955,957,959,967,996,998,1009,1020,1068,1072,1075,1085,1141,1146,1218,1222],mutabl:[1129,1131,1138],mutlidevic:[866,875],mutlinod:1085,mw_tm1:[1035,1038,1042],mx_concat:1185,mxn:[812,816,844,845],mxnet:[1185,1231],my_func:43,mymodel:1185,name:[43,864,865,1227],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1228],nan:[40,41,43,811,822,823,824,826,827,828,829,830,833,835,839,840,841,860,861,862,940,981,1031],nativ:[15,17,18,19,40,41,43,866,882,884,893,894,905,912,915,916,921,928,929,1085,1185,1186,1191,1192],native_modul:[1191,1192],native_module_class:[1191,1192],nativearrai:[15,18,19,43,812,815,816,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,846,847,848,850,851,852,853,854,856,857,858,859,860,861,862,866,884,910,911,916,920,926,931,932,940,941,942,943,945,946,947,948,950,952,953,954,955,956,958,959,960,961,964,965,966,967,969,970,971,972,974,975,979,981,982,983,990,991,992,993,995,996,997,998,1001,1002,1005,1006,1007,1008,1009,1014,1016,1017,1020,1022,1023,1025,1026,1027,1028,1030,1031,1032,1033,1034,1085,1129,1131,1138],natur:[822,834,844,847,1068,1078,1231],ncdhw:[1166,1171,1172,1202,1207,1208],nchw:[1166,1169,1170,1173,1202,1205,1206,1209],ncw:[1166,1167,1168,1202,1203,1204],ndarrai:[357,358,359,360,361,362,363,365,366,461,940,1026],ndhwc:[1166,1171,1172,1202,1207,1208],nearest:[940,1007],need:[43,940,953,954,1166,1168,1170,1172,1185,1202,1204,1206,1208,1231],neg:[40,41,88,225,368,497,629,822,829,844,850,851,852,860,861,862,1148,1153,1155,1158,1160],negative_slop:1193,neither:1085,nest:[15,16,17,18,19,40,41,42,866,888,892,898,940,946,1025,1081,1082,1083,1085,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1214,1215,1218,1219,1220,1221,1222,1223],nested_indices_wher:1129,nested_map:[1085,1129],network:[1166,1175,1185,1186,1188,1202,1214,1215,1231],neural:[1166,1185,1188,1202,1227],never:43,new_node_percent_mem:1085,new_node_util:1085,new_node_utils_kei:1085,new_std:[1183,1184,1216,1217],newli:[43,864,865,940,950,951],newlin:[40,41,42],newshap:[940,950,1006],next:[818,819,1085,1214,1215,1218,1219,1220,1221,1222,1223],nhwc:[1166,1169,1170,1173,1202,1205,1206,1209],node:[40,41,1129,1130,1137],node_clon:1085,node_dist:1085,node_dist_arrai:1085,node_dist_it:1085,node_in:1085,node_mapp:1085,node_str:1085,node_to_str:1085,node_util:1085,nodedistit:1085,nodedistitem:1085,nodedistnest:1085,nodemanag:[1085,1096],nodemapp:1085,nodemappermultiproc:1085,noinspect:[867,917,918,919,1036,1085],non:[40,41,822,836,837,844,850,860,861,862,864,865,916,930,1214,1215,1218,1222,1228],none:[40,41,42,43,59,61,64,357,358,359,360,362,411,413,414,416,418,425,426,427,428,435,436,437,438,439,440,441,442,444,454,455,461,462,812,813,814,815,817,818,819,820,844,850,851,852,853,854,858,859,860,861,862,864,865,866,875,876,882,883,908,909,910,911,916,923,924,925,940,943,946,962,963,968,973,974,975,980,982,984,985,986,987,988,992,993,999,1001,1002,1005,1008,1009,1010,1011,1016,1017,1018,1019,1028,1029,1034,1035,1038,1040,1042,1043,1044,1050,1051,1055,1058,1061,1063,1081,1082,1083,1084,1085,1129,1130,1133,1137,1138,1141,1142,1143,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1168,1170,1172,1175,1176,1177,1178,1183,1184,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],norm:[40,41,844,850,940,953,954,1058,1061,1184,1185,1217,1218,1220],normal:[1141,1144,1183,1184,1216,1217],normalized_idx:[1183,1184],normalized_shap:[1216,1217],notat:[40,41,1148,1149],note:[43,1058,1063],noth:[40,41,1228],notimplementederror:1085,now:[40,41,43,866,911,940,941,1085,1185,1202,1213,1214,1215,1227,1228,1231],np_concat:1185,np_finfo:363,ns_tune_step:1085,num:[413,435,436,940,992,993],num_arrai:[40,41],num_arrays_in_memori:940,num_arrays_on_dev:866,num_band:[940,972],num_channel:[1202,1209],num_chunk:1085,num_chunks_floor:1085,num_class:[1141,1142],num_cpu_cor:866,num_gpu:[131,411,866,1085],num_head:[1166,1177,1202,1213],num_kei:[1166,1177,1178],num_lay:[1202,1211],num_or_size_split:[40,41,413,440,940,1016],num_output:1085,num_queri:[1166,1177,1178],num_sampl:[413,434,461,462,940,991,1051,1052,1141,1142],num_task:[1081,1082,1083,1084],number:[40,41,42,811,818,819,820,822,826,844,847,848,860,861,862,864,865,866,902,903,904,916,927,931,932,940,943,952,956,969,972,979,982,991,992,993,996,1000,1005,1016,1023,1027,1031,1033,1081,1082,1083,1084,1085,1141,1142,1146,1148,1150,1151,1152,1154,1156,1166,1177,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1228,1231],numer:[43,822,826,829,830,831,836,837,838,844,846,940,977,978,1010,1011,1018,1019,1068,1075,1193],numhead:[1166,1177],numpi:[40,41,43,357,358,359,360,361,362,363,365,366,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,844,848,940,1026,1058,1063,1148,1149,1185,1227,1228,1231],nwc:[1166,1167,1168,1202,1203,1204],obj:[40,41],object:[40,41,42,59,363,818,819,866,916,920,940,943,946,1035,1129,1132,1134,1135,1136,1139,1140,1141,1147,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1214,1215],object_in:[413,416,940,946],observ:1085,obvious:43,occupi:[818,819,820,940,1008,1009],off:[844,845,940,943],offer:1185,offset:[844,845,849,1183,1184],often:1228,old:[40,41],on_init:[1202,1213,1214,1215],onc:[43,866,910,1085,1141,1142,1185],one:[40,41,43,844,846,850,851,852,853,854,866,895,896,897,898,910,916,922,940,982,994,1001,1008,1009,1017,1020,1058,1061,1085,1148,1149,1150,1151,1152,1153,1154,1155,1156,1185,1228,1231],one_hot:[138,413,547,680,940],onearrai:[940,969],ones:[40,41,77,214,357,486,618,812,815,940,982,1001,1185],ones_lik:[77,214,357,486,618,812],ongo:43,onli:[40,41,43,461,822,836,837,844,846,851,852,866,1058,1063,1085,1129,1130,1131,1137,1218,1219,1220,1221,1222,1223,1227,1228],onlin:[43,1185],onto:[866,895,896,911,1085,1129,1133,1138],oom:[866,1085],open:[940,943,1141,1145,1185,1231],opencv:1228,oper:[40,41,43,940,949,964,965,966,992,993,1021,1035,1038,1040,1042,1043,1044,1065,1066,1067,1166,1167,1168,1169,1170,1171,1172,1173,1175],operand:[40,41,822,823,824,826,827,828,833,835,839,840,841,1148,1149],oppos:[940,972],optim:[866,1035,1038,1040,1042,1043,1044,1081,1082,1083,1084,1085,1185,1219,1220,1221,1223,1227,1231],optimizer_upd:1035,option:[15,18,19,40,41,42,43,357,358,359,360,362,812,813,814,815,817,844,850,851,852,853,854,858,859,860,861,862,864,865,866,875,876,884,888,889,890,891,892,895,896,897,898,905,908,909,910,911,915,916,921,926,930,939,940,942,943,945,946,953,954,955,960,962,963,972,973,974,975,979,981,982,989,991,992,993,994,997,999,1001,1002,1005,1008,1009,1012,1014,1016,1017,1018,1019,1020,1028,1030,1031,1034,1035,1038,1040,1041,1042,1043,1044,1046,1051,1055,1058,1061,1063,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1163,1166,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228],ord:[844,848,850],order:[40,41,42,43,844,850,851,852,856,857,1035,1038,1040,1042,1043,1044,1058,1061,1081,1082,1083,1224,1225],ordered_node_util_kei:1085,org:1231,organ:43,origin:[40,41,42,940,1006,1034,1058,1061],other:[40,41,43,864,865,940,942,943,982,1035,1039,1141,1145,1185,1227,1228,1231],otherwis:[15,16,17,18,19,40,41,822,829,830,844,850,853,854,860,861,862,866,883,916,923,924,925,940,949,1028,1029,1032,1035,1041,1046,1050,1081,1082,1083,1085,1148,1150,1151,1152,1154,1156],our:[43,1185,1231],out:[43,461,812,814,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,839,840,841,844,845,846,847,849,850,851,852,853,854,856,857,860,861,862,940,943,1068,1071,1166,1174,1176,1185,1202,1210],out_feat_dim:[1166,1177],out_featur:[1166,1174,1175],out_i:[822,829,830],outdat:1231,outer:[1081,1082,1083,1084],outer_batch_fn:[1081,1082,1083],outer_batch_shap:[1166,1175],outer_cost_fn:[1081,1082,1083],outer_v:[1081,1082,1083],outlin:1228,output:[40,41,43,812,813,814,815,817,851,852,866,875,876,910,940,943,951,973,982,1005,1023,1035,1039,1068,1072,1085,1141,1143,1144,1145,1166,1168,1170,1172,1174,1176,1177,1178,1185,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213],output_ax:[866,910,1085],output_axi:1085,output_channel:[1202,1203,1204,1205,1206,1207,1208,1211,1212],output_queu:1085,output_shap:[1166,1168,1170,1172,1202,1204,1206,1208],outsid:[940,952],over:[40,41,844,850,860,861,862,1058,1061,1141,1145,1148,1150,1151,1152,1154,1156,1183,1184,1216,1217],overal:1228,overflow:[940,943],overhead:1228,overrid:[940,1001,1034],overriden:[1218,1222],overwrit:[40,41,866,910,1085],overwrite_at_key_chain:[40,41],own:[1185,1228,1231],packag:[43,1228],pad:[940,956,972,1033,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],pad_width:[413,940,956,1033],page:1185,pair:[1166,1178],parallel:[866,875,876,1085],parallelis:[866,875,876,1085],param:[40,41,42,413,426,427,812,813,815,853,854,858,859,866,910,940,941,974,975,1001,1002,1085,1214,1215,1227],paramet:[15,16,17,18,19,40,41,42,43,812,813,815,822,832,838,842,844,845,848,858,859,864,865,866,875,876,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,905,908,909,910,911,912,915,916,920,921,922,926,927,928,929,930,931,932,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,958,959,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,979,981,982,983,985,986,987,989,990,991,992,993,994,995,996,997,998,999,1002,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1046,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],parameter:[1141,1144,1145],pardo:1185,pars:[940,957],part:[812,816,1035,1038,1040,1042,1043,1044,1068,1071,1185,1214,1215,1228],partial:[40,41,43,1214,1215],particl:1231,particular:[43,1231],pass:[40,41,42,43,866,875,910,916,921,940,951,1035,1049,1081,1082,1083,1085,1191,1192,1214,1215,1218,1222,1224,1225],pattern:[40,41,940,964,965,966],peopl:43,per:[866,1085,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],percent_used_mem_on_dev:866,percent_used_mem_on_nod:1085,percentag:[866,905,1085],perf_count:1085,perform:[40,41,43,860,861,862,866,940,945,960,964,965,966,985,986,987,991,992,993,1035,1038,1040,1042,1043,1044,1051,1052,1081,1082,1083,1084,1085,1129,1134,1135,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1174,1176],period:43,permissable_step:1085,permit:43,permut:[461,940,1022,1028],perpendicular:[940,959],person:[43,1185],physci:1231,pickl:[40,41,1085],pickle_filepath:[40,41],pinv:[320,753,1058],pip:1185,pipelin:1227,pkk:1231,pkkm1:1231,pkm1km1:1231,place:[40,41,43,812,813,814,815,817,866,911,940,969,973,985,986,987,1085,1218,1219,1220,1221,1222,1223],placehold:[43,1129,1138],pleas:[43,461,1058,1063],point:[43,811,812,813,814,817,818,819,822,823,824,826,827,828,833,835,839,840,841,842,844,850,916,931,940,943,1068,1075],popul:[40,41,1141,1142],popular:1231,population_s:[461,462,1141,1142],portabl:[1185,1186],posit:[15,16,17,818,819,822,829,860,861,862,866,888,892,898,940,941,943,969,972,1085,1141,1146,1191,1192],possibi:[40,41],possibl:[43,940,994,1025,1051,1056,1231],post:[1183,1184],post_shap:[40,41],power:[940,977,1010,1019,1193],practic:1185,pre:[866,1085,1185],pre_shap:[40,41],precis:[818,819,822,841],pred:[1179,1180,1181,1182],predict:[1179,1180,1181,1182,1231],prepend:[844,846],preprint:1185,present:[40,41],preserv:[40,41,42,851,852,1035,1046],preserve_typ:[40,41,445,448,1035,1046],press:1185,prevent:[43,1035,1037,1038,1042,1085,1218,1219,1220],prevet:43,previou:[1035,1038,1042],previous:[940,951],prime:1185,print:[40,41,42,866,906,940,1003,1185,1227],print_all_arrays_in_memori:940,print_all_arrays_on_dev:866,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1218,1222],prob:[461,462,1141,1142,1166,1174,1202,1210],probabl:[1141,1142,1166,1174,1202,1210],problem:[43,1231],process:[43,866,875,876,905,915,940,999,1085],process_specif:[866,905,915,1085],prod:[40,41,940,965],produc:[866,875,876,1085],product:[40,41,844,846,940,959,960,995,1148,1149,1166,1177,1178,1202,1213],profil:[131,257,411,540,672,866,1085],progress:43,project:[1185,1227,1228,1231],promot:[822,823,824,825,827,828,833,835,839,840,841,844,846,850,1068,1075],prompt:1185,properti:[40,41,363,866,878,1085,1214,1215,1218,1219,1220,1221,1223],provid:[40,41,43,851,852,853,854,860,861,862,864,865,866,883,916,923,924,925,930,939,940,963,1001,1009,1034,1035,1038,1040,1042,1043,1044,1050,1085,1185,1202,1211,1218,1219,1220,1221,1222,1223,1228],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1058,1062],pull:[1185,1186],pure:[40,41,1185,1231],purpos:[43,1231],put:1085,pybroadexcept:1085,pyprotectedmemb:1085,pyshadowingnam:[867,917,918,919,1036,1085],python:[40,41,866,905,915,940,943,1085,1185],pytorch:[1035,1038,1040,1042,1043,1044,1058,1063,1185,1218,1219,1220,1221,1222,1223,1227,1228,1231],pyunresolvedrefer:1085,quadrant:[1068,1072],qualiti:43,queri:[40,41,866,899,909,1085,1166,1177,1178,1202,1213],query_dim:[1202,1213],query_kei:[40,41],queue:[40,41,42,866,875,876,940,1004,1012,1085],queue_class:[866,875,876,1085],queue_load_s:[40,41,42],queue_timeout:[40,41,42,940,1085],quick:[461,1185],quickli:[43,1227],radian:[822,827,839,1068,1069,1070,1072,1079],rai:[1068,1069],rais:[40,41,860,861,862,940,949,977,1010,1017,1019,1029,1085,1214,1215,1218,1222],ram:[866,905,912,915,1085],randint:[182,329,461,596,774,1141],random:[37,40,41,462,1142,1143,1144,1145,1146,1147,1185],random_crop:1051,random_norm:[182,329,461,596,774,1141],random_uniform:[182,329,461,596,774,1141],randomli:[461,1051,1055,1166,1174,1202,1210],rang:[461,940,943,992,993,1068,1072,1085,1185,1227,1231],rank:[844,850,860,861,862,940,956,1030,1033],rate:[1035,1038,1040,1042,1043,1044,1081,1082,1083,1084,1202,1213,1218,1219,1220,1221,1222,1223],rather:[40,41,43,866,910,940,943,989,1035,1041,1085],ratio:[866,1035,1042,1051,1056,1085,1218,1220],raw:[40,41,1058,1063],raw_delta:1085,reach:[43,866,888,892,898,1085,1129,1138],read:[40,41],readi:[1085,1227],real:[1068,1069,1071],realiti:1228,rearrang:[40,41,940,964,966],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1081,1083],receiv:[43,866,875,876,940,944,994,1085,1202,1212],receivess:[866,1085],receivng:[1081,1084],recev:[1081,1082,1083],recognit:1231,recommend:[822,836,837,1185],rectifi:[1158,1160,1161],recurr:[1166,1176],recurrent_bia:[1166,1176],recurrent_kernel:[1166,1176],recurs:[40,41,1129,1130,1131,1137,1138],reduc:[40,41,853,854,860,861,862,866,910,940,965,1058,1063,1085,1148,1150,1151,1152,1153,1154,1155,1156],reduce_max:[40,41,189,334,463,601,781,1148],reduce_mean:[40,41,189,334,463,601,781,1148,1185,1227],reduce_min:[40,41,189,334,463,601,781,1148],reduce_prod:[40,41,189,334,463,601,781,1148],reduce_std:[40,41,334,1148],reduce_sum:[40,41,189,334,463,601,781,1085,1148],reduce_var:[40,41,189,334,463,601,781,1148],reduct:[39,40,41,413,438,439,860,861,862,940,965,1008,1009,1149,1150,1151,1152,1153,1154,1155,1156,1185],refactor:43,refer:[43,822,834,860,861,862,1035,1037,1038,1058,1064,1202,1212,1231],reflect:43,reflected_oper:[0,13,14],regard:[866,1085],regardless:[40,41,864,865],register_paramet:1227,reimplement:1231,rel:[844,845,851,852,856,857,1035,1038,1040,1042,1043,1044],rel_slice_obj:1085,relat:43,relev:[1218,1219,1220,1221,1222,1223],relu:[790,1158,1159,1160,1185,1227],remain:[43,940,1006,1129,1133],remaind:[40,41,940,971,1016],remov:[40,41,43,844,845,846,853,854,940,1017,1081,1082,1083],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,851,852],rep:[940,1023],repeat:[40,41,43,263,680,940,966,1023,1085,1228],repeated_config_check:[866,1085],repeatedli:[1129,1136],repetit:[40,41,940,1005,1023],replac:[40,41,43,461,462,940,952,1008,1009,1141,1142],repo:[43,1185],repositori:43,repres:[43,822,823,824,828,840,842,844,847,916,922,927,1166,1175],represent:[40,41,42,43,811,818,819,820,822,825,866,893,894,916,922,928,929,940,1015,1025,1085],reptil:[1081,1084],reptile_step:1081,request:[1185,1186],requir:[43,822,841,864,865,916,920,940,943,946,1191,1192],resampl:[940,991],reserv:43,reshap:[40,41,461,680,940],reshape_lik:[40,41],respect:[822,825,831,832,837,940,967,1035,1037,1038,1039,1040,1042,1043,1044,1058,1063,1068,1075,1081,1082,1083,1084],respond:43,respons:[43,1085],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,844,845,850,853,854,860,861,862,866,875,940,943,967,1008,1009,1020,1058,1061,1065,1066,1067,1068,1075,1085,1148,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1185],ret:1085,ret_dict:1085,ret_fn:[866,875,876,1085],retain:[1035,1039],retain_grad:[445,446,1035,1039],retreiv:1085,retrn:[940,1015],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1081,1082,1083,1084],return_sequ:[1202,1211],return_st:[1202,1211],rev:[940,963],revers:[40,41,851,852,940,963,1028],review:43,right:[40,41,43],rk_e:1231,robot:1185,ronald:1185,root:[43,822,841],round:[263,413,680,822,826,841,940,943,1085],row:[940,982,1141,1142],rule:[940,943,1068,1075],run:[43,866,875,1035,1037,1038,1042,1081,1082,1083,1084,1085,1185,1186,1202,1213,1214,1215],safe:[866,875,1085],safety_factor:[866,1085],same:[15,16,17,40,41,43,812,815,816,822,826,844,845,848,851,852,853,854,856,857,866,875,876,910,911,916,920,940,941,955,970,971,974,975,1001,1007,1008,1009,1020,1034,1035,1041,1046,1068,1071,1081,1082,1083,1085,1148,1149,1166,1167,1168,1169,1170,1171,1172,1173,1185,1202,1203,1204,1205,1206,1207,1208,1209,1227,1231],same_arrai:[40,41],sampl:[940,991,1051,1052,1141,1142,1144,1145,1166,1174,1185,1202,1210],satisfi:[940,946,1058,1060,1064],save:[40,41,940,1013,1024,1051,1053,1214,1215],save_dir:[411,412,866,881,1085],save_weight:[1214,1215],scalar:[844,850,940,952,1001,1027,1031],scale:[866,908,909,1035,1043,1085,1166,1174,1177,1178,1183,1184,1202,1210,1213,1218,1221],scaled_dot_product_attent:1166,scatter:[940,1001,1008,1009],scatter_flat:[138,263,413,547,680,940],scatter_nd:[138,263,413,547,680,940],scene:[1035,1038,1040,1042,1043,1044],schemat:1185,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[853,854],second:[40,41,822,825,831,832,837,844,845,846,866,897,940,947,959,967,1004,1012,1022,1035,1037,1038,1042,1081,1083,1085,1218,1219,1220],secondli:1231,sector:[822,823,824],see:[59,363,411,412,461,822,825,831,837,844,850,860,861,862,866,878,879,880,881,916,940,943,992,993,1035,1068,1075,1185,1193,1195,1196,1198,1199,1201],seed:[40,41,182,461,774,1141],seed_valu:[40,41,461,1141,1146],seem:1185,seen_set:[940,980],select:[940,946,1017,1228,1231],self:[40,41,59,363,411,412,866,878,879,880,881,916,1035,1085,1185,1193,1195,1196,1198,1199,1201,1218,1222,1227,1231],sent:1085,seper:[43,940,972],seq:[40,41,42,1148,1149,1214,1215],sequenc:[15,16,17,40,41,42,43,461,864,865,866,875,876,885,886,887,888,889,890,891,892,895,896,910,916,920,940,943,946,948,950,955,956,982,994,997,1002,1005,1006,1009,1016,1020,1023,1028,1033,1035,1039,1051,1055,1056,1058,1061,1085,1129,1140,1141,1143,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1183,1184,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1214,1215,1216,1217,1218,1222,1224,1225],sequenti:1185,seri:43,set:[15,18,19,40,41,853,854,856,857,866,895,896,908,909,910,940,942,962,982,1010,1011,1012,1013,1035,1038,1040,1041,1042,1043,1044,1058,1061,1085,1129,1130,1137,1139,1140,1141,1142,1146,1148,1150,1151,1152,1153,1154,1155,1156,1185,1202,1211,1218,1219,1220,1221,1222,1223,1228,1231],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:866,set_default_dtyp:916,set_default_float_dtyp:916,set_default_int_dtyp:916,set_default_nod:1085,set_exception_debug_mod:44,set_framework:[40,41,43,59,1085,1185,1227,1228,1231],set_ivy_backend:[40,41],set_min_bas:940,set_min_denomin:940,set_nest_at_index:1129,set_nest_at_indic:1129,set_queue_timeout:940,set_split_factor:[866,1085],set_stat:[1218,1219,1220,1221,1222,1223],set_tmp_dir:940,set_with_grad:1035,setter:1085,sever:1231,sgd:[1185,1218],shape0:1085,shape:[40,41,43,357,358,359,362,413,425,439,461,680,812,813,814,815,816,817,844,845,846,851,852,853,854,856,857,866,878,916,920,940,941,950,955,956,969,970,971,973,975,979,982,1001,1002,1005,1006,1007,1008,1009,1015,1017,1020,1033,1034,1051,1055,1058,1060,1063,1068,1071,1072,1085,1141,1143,1144,1145,1148,1149,1166,1168,1170,1172,1202,1204,1205,1206,1207,1208,1209,1216,1217],shape_slic:[40,41],shape_to_tupl:940,share:[40,41,1185,1228],shift:1085,should:[40,41,42,43,461,812,816,822,823,824,825,826,827,828,829,830,831,833,835,836,837,839,840,841,842,844,845,846,850,853,854,864,865,866,940,950,951,957,1001,1006,1035,1038,1040,1042,1043,1044,1068,1075,1085,1148,1149,1185],show:[40,41,1185,1231],show_mod_in_top_mod:[1214,1215],show_structur:[1214,1215],show_sub_contain:[40,41],show_v:[1214,1215],show_v_in_top_v:[1214,1215],shown:[40,41],shp:1085,shuffl:[40,41,182,461,774,1141],shuffle_h5_fil:[40,41],side:43,sigmoid:[790,1158,1185,1227],sign:[844,847],signatur:[43,59,363,411,412,413,445,450,454,458,459,461,866,878,879,880,881,916,1035,1193,1195,1196,1198,1199,1201],signific:1231,similar:[43,1166,1177,1202,1213],similarli:[1058,1063],simpl:[43,940,968,1185,1228,1231],simpler:43,simplest:1228,simpli:[40,41,43,1185,1228,1231],simultan:1185,sin:[88,225,368,497,629,822,940,972,1068,1079,1228],sinco:1228,sine:[822,824,839,840,1068,1070],singl:[40,41,864,865,866,875,876,895,896,897,898,940,1017,1027,1031,1051,1056,1085,1141,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1185,1228,1231],singleton:[844,850,860,861,862],singular:[844,848],sinh:[88,225,368,497,629,822],siren:[1185,1193],situat:43,size:[40,41,42,413,438,844,845,848,853,854,860,861,862,866,889,890,891,892,908,909,910,940,943,950,992,993,1008,1016,1051,1055,1058,1061,1085,1141,1142,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1202,1203,1204],size_ordered_arrai:[40,41],skew:[1058,1064],skinv:1231,skip:[40,41],slice:[40,41,940,974,975,1085,1129,1136],slice_kei:[40,41],slice_obj:[40,41,1085],slice_via_kei:[40,41],slide:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],slodget:844,slogdet:[111,239,391,520,652],slope:[1158,1160],small:[1179,1180,1181,1182,1183,1184,1185,1216,1217,1228],smaller:[940,952],smallest:[40,41,818,819,820,822,826,940,945],smallest_norm:[363,818,819],softmax:[198,472,790,1158,1166,1177,1178],softplu:[790,1158],solut:43,solv:1231,some:[40,41,43,940,943,1035,1037,1038,1040,1042,1043,1044,1049,1166,1174,1185,1202,1210,1228,1231],some_backend:43,some_namespac:43,someth:[43,1231],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,844,848,857,1085],sort_by_kei:[40,41],sorting_funct:[856,857],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,357,358,359,360,361,362,363,365,366,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,459,460,461,462,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1230,1231],space:[940,943,972,992,993],spars:[1179,1182],sparse_cross_entropi:1179,spawn:[940,999],special:[43,822,823,824,826,827,828,833,835,839,840,841],specif:[40,41,43,822,836,837,866,908,940,957,964,965,966,999,1081,1082,1083,1084,1085,1141,1147,1185,1214,1215,1227,1228],specifc:[1141,1142],specifi:[40,41,812,813,814,816,817,844,845,850,851,852,853,854,856,857,860,861,862,866,885,886,887,888,889,890,891,892,895,896,900,902,906,909,910,911,916,920,922,940,943,945,946,952,955,956,973,974,975,981,992,993,1020,1030,1033,1058,1061,1085,1129,1134,1135,1139,1140,1148,1149,1150,1151,1152,1153,1154,1155,1156],sphinx:43,split:[40,41,138,263,413,547,680,866,875,889,890,891,892,908,909,910,940,994,1085],split_arg:1085,split_factor:[866,875,1085],split_func_cal:[866,1085],split_siz:1085,spread:[866,898,1085],sqrt:[88,225,368,497,629,822,844,850],squar:[822,841,844,847,940,982,1058,1060],squeez:[138,263,413,547,680,940],stabil:[856,857,940,1018,1019],stabl:[856,857,940,977,978,1010,1011,1018,1019],stable_divid:940,stable_pow:940,stack:[40,41,263,680,812,816,844,845,846,940,1051,1056,1129,1130,1137,1202,1211],stack_imag:[172,316,450,586,749,1051],stacked_dim_s:1085,stage:43,standard:[40,41,818,819,1141,1144,1148,1154,1183,1184,1185,1186,1216,1217],start:[40,41,43,411,412,413,414,435,436,461,866,881,940,943,992,993,1085,1185,1228],starting_index:[40,41],starting_split_factor:[866,1085],state:[1085,1166,1176,1185,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],statement:1228,static_argnam:[413,418,864,865],static_argnum:[413,418,864,865],statistical_funct:[858,859],std:[461,1141,1144],step:[40,41,413,414,866,940,943,992,993,1035,1037,1038,1040,1042,1043,1044,1081,1082,1083,1084,1085,1185,1218,1219,1220,1221,1222,1223,1227,1231],stephen:1185,stick:1185,still:[40,41,43],stochast:[1218,1223],stop:[40,41,411,412,413,414,435,436,866,881,910,940,943,992,993,1035,1038,1040,1042,1043,1044,1046,1081,1082,1083,1084,1085,1218,1219,1220,1221,1222,1223],stop_gradi:[40,41,311,445,581,743,866,910,1035,1038,1040,1042,1043,1044,1081,1082,1083,1084,1085,1218,1219,1220,1221,1222,1223],stopiter:1085,store:[40,41,940,972,1016,1035,1049,1214,1215],store_var:[1214,1215],str:[15,16,17,40,41,42,43,357,358,359,360,362,363,365,366,812,815,818,819,820,864,865,866,875,876,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,910,916,921,922,927,928,929,930,931,932,939,940,946,962,964,965,966,997,999,1002,1008,1009,1058,1061,1063,1081,1082,1083,1084,1085,1129,1133,1148,1149,1191,1192,1202,1213,1214,1215],str_to_nod:1085,straight:1228,strength:[1185,1231],stride:[1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],string:[40,41,43,866,882,884,893,894,899,905,911,912,915,916,920,926,928,929,930,939,940,943,946,962,982,1002,1034,1085,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209,1214,1215],structur:[40,41,42,43,940,957],structural_diff:[40,41],style:43,sub:[40,41,43,844,845,866,889,890,895,896,897,898,940,1016,1081,1082,1083,1084,1085],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1085,sub_mod:[1214,1215],sub_modul:[1224,1225],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1185,1186,1216,1217,1224,1225],subsequ:43,subset:43,substr:[40,41],suffici:[1058,1063],suggest:1185,suitabl:[1051,1056],sum:[40,41,413,438,439,844,849,850,866,895,896,897,898,910,940,961,965,1008,1009,1085,1148,1149,1155],summat:[40,41,1148,1149],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,244,246,248,251,254,255,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,317,318,319,321,322,323,324,326,327,330,331,332,333,335,336,337,338,339,340,341,342,345,347,348,349,350,351,352,353,358,359,360,361,362,364,365,366,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,392,393,394,395,396,397,399,401,404,406,408,409,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,451,452,453,455,456,457,460,462,464,465,466,467,468,469,470,473,474,476,477,478,479,480,481,482,487,488,489,490,491,493,494,495,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,521,522,523,524,525,526,528,530,533,535,537,538,541,542,543,544,545,546,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,582,583,584,585,587,588,589,591,592,593,597,598,599,600,602,603,604,605,606,607,608,612,613,614,619,620,621,622,623,625,626,627,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,653,654,655,656,657,658,660,662,665,667,669,670,673,674,675,676,677,678,679,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,744,745,746,747,748,750,751,752,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,771,772,773,775,776,777,778,779,780,782,783,784,785,786,787,788,791,792,793,794,795,796,797,799,800,802,803,804,805,806,807,808,813,814,815,816,817,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,852,854,857,859,861,862,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1185,1189,1190,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1230,1231],supports_inplac:940,suppos:1231,sure:43,svd:[111,239,391,520,652,844],swap:[40,41,940,1022],swapax:[40,41,547,680,940,1231],symmetr:[1058,1064],syntax:[411,413,445,450,454,458,459,461],tab:1185,take:[43,940,991],taken:[43,844,845,1148,1150,1151,1152,1154,1156],tan:[763,1068,1071],tangent:[822,842,1068,1071,1072,1073,1079,1080,1158,1165],tanh:[88,225,368,497,629,790,822,1068,1158],target:[40,41,866,882,885,886,887,888,889,890,891,892,895,896,897,898,911,1085,1185],target_dict:[40,41],task:[43,1081,1082,1083,1084],team:[43,1231],templat:1185,temporari:[940,1013,1024],tensor:[40,41,43,413,438,439,866,884,916,926,940,943,945,950,992,993,996,998,1001,1002,1006,1008,1009,1016,1034,1085,1141,1142,1143,1166,1174,1176,1185,1202,1210,1212,1218,1219,1220,1221,1222,1223,1227,1228],tensorflow:[43,1058,1063,1166,1168,1170,1172,1185,1202,1204,1206,1208,1228,1231],term:[40,41,43,1166,1176,1185,1202,1212],termcolor:[40,41,42],termin:[40,41,42,1085],test:[43,822,829,830,860,861,862,916,931,932],test_array_api:43,tf_concat:1185,than:[40,41,43,818,819,822,823,826,833,835,841,844,846,850,851,852,866,910,940,943,952,970,989,996,1017,1020,1035,1041,1085,1141,1145,1185,1228],thei:[40,41,1068,1072,1081,1082,1083,1141,1142,1185,1224,1225,1228],them:[1185,1231],themselv:[1129,1130],therefor:43,thi:[40,41,42,43,822,836,837,844,847,849,853,854,866,888,892,898,905,910,915,940,943,972,1004,1006,1012,1035,1038,1040,1041,1042,1043,1044,1049,1058,1061,1085,1129,1133,1138,1148,1150,1151,1152,1153,1154,1155,1156,1166,1175,1185,1214,1215,1218,1219,1220,1221,1222,1223,1227,1228,1231],thing:[43,1185],those:[40,41,43,844,848,940,952,1035,1049,1085],though:43,thought:43,threshold:[940,996,998],through:[40,41,43],tick:43,tickbox:43,tile:[263,547,680,940],time:[43,940,1023,1035,1038,1042,1081,1082,1083,1084,1085,1141,1142,1166,1176,1202,1213,1214,1215,1231],timeout:[40,41,42,866,875,876,940,1004,1012,1085],timestep:[1166,1176,1202,1211],titl:[43,1185],tmp_dir:940,tmp_dr:[940,1013],to_appli:[40,41],to_clon:[866,1085],to_dev:[40,41,131,257,411,540,672,866],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[866,1085],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1185],to_ivy_modul:[200,798,1185,1191],to_json:[40,41],to_kv_fn:[1166,1177],to_kv_v:[1166,1177],to_list:[40,41,413,680,940],to_multi_dev:[40,41],to_mut:[1129,1131,1138],to_n:[15,40,41,1185],to_nod:1085,to_numpi:[40,41,413,680,940,1185,1227],to_out_fn:[1166,1177],to_out_v:[1166,1177],to_q_fn:[1166,1177],to_q_v:[1166,1177],to_raw:[40,41],to_scalar:[413,680,940],todo:[1085,1185,1186],togeth:[40,41,1224,1225],tool:[1185,1228],top_mod:[1214,1215],topic:1231,torch:[43,864,865,1185,1227,1228,1231],torch_concat:1185,torchfcmodel:1227,total:[40,41,42,866,912,1085],total_mem_on_dev:866,total_mem_on_nod:1085,tpu:[866,913,1085],tpu_is_avail:[411,540,672,866,1085],trace:[40,41,111,239,391,520,652,844,940,989],track:[43,866,1085,1129,1138,1214,1215],track_submod_call_ord:[1214,1215],track_submod_ret:[1214,1215],trail:[1216,1217],train:[1035,1037,1038,1042,1185,1186],trainabl:[1035,1041,1185,1186,1191,1192,1214,1215,1224],trainer:1185,tran:1231,transform:[1166,1174,1175],transpos:[40,41,138,263,413,680,866,897,940,1085,1166,1168,1170,1172,1202,1204,1206,1208],travers:[15,18,19,40,41,1129,1138],treat:[40,41,864,865],tri:[40,41],triangular:[812,816],trigonometr:[1068,1069,1071],tril:[77,214,357,486,618,812],trim_kei:[40,41],trust:[1035,1042,1218,1220],truth:[822,831,832,940,967,1065,1066,1067],try_else_non:940,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[866,1085],tune_dev_alloc:866,tune_dev_split:866,tune_node_alloc:1085,tune_node_split:1085,tune_step:[866,1085],tupl:[15,16,17,18,19,40,41,43,357,358,359,362,812,813,814,817,844,848,850,851,852,858,859,860,861,862,864,865,940,956,972,973,1015,1033,1085,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1143,1148,1150,1151,1152,1153,1154,1155,1156],tutori:43,two:[40,41,812,816,844,845,846,847,848,849,940,943,947,959,995,1022,1058,1061],type:[15,18,40,41,42,43,59,365,366,411,412,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,839,840,841,842,844,845,846,850,851,852,856,857,860,861,862,866,878,879,880,881,893,894,898,910,916,920,921,922,926,927,928,929,930,931,932,939,940,941,943,946,955,957,967,970,971,973,982,989,1001,1002,1007,1021,1031,1034,1035,1041,1046,1068,1075,1085,1185,1193,1195,1196,1198,1199,1201,1214,1215,1228],types_to_iteratively_nest:[40,41,42],uint8:[1051,1053,1057],uint8_img_to_float_img:1051,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[822,825],underwai:43,unecessari:43,unfairli:43,unif:1085,unifi:[40,41,866,895,896,897,898,910,1085,1185],uniform:[40,41,1141,1142,1144,1145,1193,1195,1196,1199,1200],uniformli:[1141,1143,1145],unify_arrai:1085,unify_it:1085,unify_nest:1085,uniniti:[812,813],union:[15,18,19,40,41,43,357,358,359,360,362,363,365,366,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,846,847,848,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,884,889,890,891,892,910,911,916,920,921,922,926,927,928,929,930,931,932,939,940,941,942,943,945,946,947,948,950,952,953,954,955,956,958,959,960,961,964,965,966,967,969,970,971,972,973,974,975,979,981,982,983,990,991,992,993,995,996,997,998,1001,1002,1005,1006,1007,1008,1009,1014,1015,1016,1017,1020,1022,1023,1025,1026,1027,1028,1030,1031,1032,1033,1034,1085,1129,1130,1131,1137,1138],uniqu:[866,875,876,1081,1082,1083,1084,1085,1129,1133],unique_kwarg:1085,unit:[43,866,1068,1069,1070,1085,1158,1159,1160,1161],unitari:[844,848],unless:[940,1001,1034],unlik:[866,1085],unnorm:[1141,1142],unpack:[940,1030],unrol:[1166,1176],unset:1228,unset_debug_mod:44,unset_default_devic:866,unset_default_dtyp:916,unset_default_float_dtyp:916,unset_default_int_dtyp:916,unset_framework:[59,1228],unset_with_grad:1035,unstack:[40,41,138,263,413,547,680,940],until:43,unus:[864,865],updat:[40,41,413,438,439,866,875,940,987,1008,1009,1035,1037,1038,1040,1042,1043,1044,1081,1082,1083,1085,1129,1134,1135,1139,1140,1166,1176,1185,1186,1191,1192,1218,1219,1220,1221,1222,1223,1228,1231],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1141,1145],upper_depth:[1214,1215],upstream:43,usabl:[1185,1231],usag:[866,910,1085],use:[40,41,42,43,461,866,875,876,901,913,940,1005,1018,1019,1058,1063,1085,1166,1177,1183,1184,1185,1216,1217,1228,1231],used:[40,41,43,461,844,845,866,875,905,908,909,915,916,927,940,977,978,994,1008,1009,1010,1011,1034,1035,1042,1043,1058,1061,1081,1082,1083,1084,1085,1129,1138,1202,1213,1218,1220,1221,1227,1228],used_dev:[866,875],used_mem_on_dev:866,used_mem_on_nod:1085,used_node_str:1085,used_node_strs_dict:1085,useful:[40,41,866,910,1085,1166,1175,1185,1228],user:[1185,1202,1213,1214,1215,1228,1231],uses:1185,using:[40,41,43,1035,1037,1038,1129,1132,1136,1148,1149,1166,1174,1178,1185,1202,1210,1227,1228,1231],util:[866,899,1085],utility_funct:[860,861,862],v_with_top_v_key_chain:[1214,1215],val:[40,41,413,430,431,432,940,985,986,987,1010,1011],valid:[860,861,862,916,921,940,1018,1019,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],valid_dtyp:916,valu:[40,41,413,822,826,831,832,844,847,848,849,850,853,854,856,857,858,859,866,878,909,910,940,941,943,945,952,953,954,956,957,963,967,972,973,974,975,990,992,993,996,998,1004,1005,1006,1007,1008,1009,1010,1011,1012,1028,1031,1032,1033,1035,1039,1042,1051,1057,1065,1066,1067,1068,1076,1077,1078,1081,1082,1083,1085,1129,1133,1134,1135,1139,1140,1141,1144,1145,1148,1150,1152,1166,1177,1178,1183,1184,1202,1213,1216,1217,1218,1220],value_is_nan:940,vanilla:[1081,1083],var_shap:1193,variabl:[15,16,17,18,19,40,41,311,445,581,743,940,949,985,986,987,988,989,1021,1035,1038,1039,1040,1041,1042,1043,1044,1046,1049,1081,1082,1083,1084,1166,1177,1183,1184,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],variable_data:[445,743,1035],varianc:[40,41,1148,1156,1231],varieti:1228,variou:[43,1185],vector:[40,41,454,457,844,846,848,850,940,954,959,1058,1064,1166,1175,1202,1212],vector_norm:[40,41,111,239,391,520,652,844],vector_to_skew_symmetric_matrix:[176,320,454,590,753,1058],verbos:1230,veri:[43,1185],verifi:43,via:[1129,1130,1137,1228],view:[1051,1056],vision:1185,visual:1228,volum:[1166,1171],vw_tm1:[1035,1038,1042],wai:[1228,1231],wait:[40,41,42,43],want:[43,1185,1228,1231],warn:[59,66,67,68,69,70],warp:[450,451,1051,1052],watch:1227,websit:43,weight:[1035,1037,1038,1040,1042,1043,1044,1166,1175,1176,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1214,1215,1218,1220,1221],weight_initi:[1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],weights_path:[1214,1215],well:[40,41,940,981],were:[40,41,1085],what:[43,1185],when:[40,41,42,43,844,848,866,940,951,1019,1032,1085,1185,1214,1215,1228,1231],where:[40,41,43,263,413,680,822,834,844,848,860,861,862,940,943,950,952,956,969,983,990,1001,1033,1129,1130,1137,1141,1142],wherea:43,wherebi:[1129,1138],whether:[15,18,19,40,41,42,822,830,860,861,862,864,865,866,884,897,901,905,910,913,915,916,926,930,931,932,939,940,942,947,948,960,963,968,972,979,981,984,988,989,994,1014,1021,1030,1031,1035,1038,1039,1040,1041,1042,1043,1044,1046,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1158,1159,1166,1174,1185,1191,1192,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],which:[40,41,42,43,461,812,813,814,815,816,817,818,819,820,844,845,850,851,852,853,854,856,857,858,859,860,861,862,864,865,866,875,876,884,889,890,891,892,895,896,897,898,900,902,906,908,909,910,916,921,926,930,939,940,943,946,955,957,959,960,961,963,973,974,975,976,982,983,991,992,993,1000,1001,1002,1003,1005,1008,1009,1016,1020,1030,1032,1034,1035,1038,1039,1040,1042,1043,1044,1046,1048,1049,1051,1053,1058,1061,1068,1072,1085,1129,1133,1134,1135,1139,1140,1141,1142,1143,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1177,1178,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1227,1228],whilst:43,whitespac:[40,41,42],who:43,whose:[812,816,822,823,824,827,828,839,840,842,844,845,851,852,940,946,951,1148,1149,1150,1151,1152,1154,1156],why:[1185,1186],width:[1051,1056],wiki:1231,wikipedia:1231,window:[1051,1056,1166,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1205,1206,1207,1208,1209],wise:[40,41,822,825,831,832,836,837,940,952,967,970,971,996,998,1007,1035,1038,1040,1042,1044,1065,1066,1067,1068,1069,1070,1071,1072,1075,1076,1077,1078,1079,1158,1159,1160,1161,1162,1163,1164,1165],wish:1228,with_bia:[1202,1212],with_cal:[940,963],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1035,1045],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1085,with_partial_v:[1214,1215],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,413,440,940,1016,1085],with_to_kv_fn:[1202,1213],with_to_out_fn:[1202,1213],with_to_q_fn:[1202,1213],within:[15,18,19,43,844,848,940,943,1141,1145],without:[40,41,43,940,1004,1006,1012,1129,1131,1228],wonder:1185,word:[15,16,17,940,943,1141,1145,1191,1192],work:[43,1227],worker:[866,875,876,1085],worker_class:[866,875,876,1085],worker_kwarg:1085,would:[43,1158,1163,1185,1228,1231],wrap:[15,40,41,42,43,411,413,445,450,454,458,459,461,940,951,1035,1049,1185],write:[40,41,43,1185,1186,1231],written:[43,1185,1231],ws_new:[1035,1038,1040,1042,1043,1044],x1_i:[822,825,831,832,837,940,967,1068,1075],x2_i:[822,825,831,832,837,940,967,1068,1075],x_feat_dim:[1166,1177],x_i:[822,823,824,826,827,828,829,830,833,835,836,839,840,841,842],x_in:[1185,1227],x_inv:[1058,1060],x_max:[413,940,952],x_min:[413,940,952],x_sub:1085,xkk:1231,xkkm1:1231,xkm1km1:1231,xs0:1085,xs_t:1085,year:[1185,1231],yet:[1129,1138,1231],yield:[940,1032],you:[43,1185,1227,1228,1231],your:[1185,1186,1227,1228,1231],your_awesome_project:1228,yourself:[43,1185],yourslef:43,youtub:43,zero:[40,41,77,214,357,486,618,812,813,816,822,836,837,844,846,850,860,861,862,940,956,1001,1008,1009,1033,1034,1035,1037,1038,1042,1043,1166,1174,1185,1193,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1218,1219,1220,1221],zero_pad:[263,413,547,680,940],zeros_lik:[138,263,413,547,680,940],zip:1085,zk_e:1231},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":963,"function":[77,83,88,110,118,120,122,123,125,127,214,220,225,238,245,247,249,250,252,253,357,363,368,390,398,400,402,403,405,407,486,492,497,519,527,529,531,532,534,536,618,624,629,651,659,661,663,664,666,668,812,818,822,843,851,853,855,856,858,860],Ones:1198,Using:1228,abs:[264,548,681,941],aco:[764,1069],acosh:[89,226,369,498,630,823],activ:[198,344,472,610,790,1158,1188],adam:1219,adam_step:1037,adam_upd:1038,algebra:[111,176,239,320,391,454,520,590,652,753,844],all:[128,254,408,537,669,861],all_equ:942,all_nested_indic:1130,ani:[129,255,409,538,670,862],api:[0,43,75,212,355,484,616,810],arang:[139,265,414,549,682,943],arg_nam:944,argmax:[121,248,401,530,662,854],argmin:[140,415,550,683,945],args_to_ivi:16,args_to_n:17,argsort:[124,251,404,533,665,857],arithmet:1,arrai:[0,3,43,75,141,212,266,355,416,484,551,616,684,810,946],array_equ:[267,685,947],arrays_equ:948,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[765,1070],asinh:[90,370,499,631,824],assert_supports_inplac:949,atan2:[767,1072],atan:[766,1071],atanh:[768,1073],attribut:5,backend:[43,73],bilinear_resampl:[173,317,451,587,750,1052],binary_cross_entropi:1180,bitwis:7,bitwise_and:[91,227,371,500,632,825],broadcast_to:[268,686,950],builder:51,cache_fn:951,cast:[142,269,417,552,687,920],ceil:[92,228,372,501,633,826],choleski:[754,1059],choose_random_framework:61,citat:1185,clear_framework_stack:62,clear_mem_on_dev:[674,882],clip:[270,688,952],clip_matrix_norm:953,clip_vector_norm:954,clone:1100,clone_arrai:1101,clone_it:1102,clone_nest:1103,clonedit:1087,cloneditem:1086,clonednest:1088,closest_valid_dtyp:921,code:1231,comparison:9,compil:[271,418,689,864,865],concaten:[143,272,419,553,690,955],constant:[76,213,356,485,617,811],constant_pad:[273,554,691,956],contain:[40,41],container_typ:[692,957],content:1185,contribut:43,conv1d:[204,347,476,802,1167,1203],conv1d_transpos:[205,348,477,803,1168],conv1dtranspos:1204,conv2d:[206,349,478,612,804,1169,1205],conv2d_transpos:[207,350,479,805,1170],conv2dtranspos:1206,conv3d:[208,351,480,613,806,1171,1207],conv3d_transpos:[209,352,481,807,1172],conv3dtranspos:1208,convers:15,convert:[200,798,1191],convert_dtyp:922,copy_arrai:[693,958],copy_nest:1131,core:[130,256,410,539,671,863],cos:[93,373,502,634,827],cosh:[94,374,503,635,769,828,1074],cprint:1230,creat:43,creation:[77,214,357,486,618,812],cross:[274,694,959],cross_entropi:1181,cumprod:[144,275,420,695,960],cumsum:[696,961],current_framework:63,current_framework_str:[697,962],data:[83,87,220,224,363,367,492,496,624,628,818,821],debug_mod:45,debugg:44,default_devic:883,default_dtyp:923,default_float_dtyp:924,default_int_dtyp:925,default_nod:1104,depthwise_conv2d:[210,353,482,614,808,1173],depthwiseconv2d:1209,design:43,dev:[133,259,542,675,884],dev_clon:885,dev_clone_arrai:886,dev_clone_it:887,dev_clone_nest:888,dev_dist:889,dev_dist_arrai:890,dev_dist_it:891,dev_dist_nest:892,dev_from_str:[134,260,543,676,893],dev_to_str:[135,261,544,677,894],dev_unifi:895,dev_unify_arrai:896,dev_unify_it:897,dev_unify_nest:898,dev_util:899,devclonedit:869,devcloneditem:868,devclonednest:870,devdistit:872,devdistitem:871,devdistnest:873,devic:[20,131,257,411,540,672,866],devmapp:875,devmappermultiproc:876,diagon:[112,240,392,521,653,845],distribute_nest:1105,divid:1075,document:1185,dropout:[1174,1210],dtype:[145,276,421,555,698,916,926],dtype_bit:[146,277,422,556,699,927],dtype_from_str:[147,278,423,557,700,928],dtype_to_str:[148,279,424,558,701,929],ecosystem:52,einops_rearrang:964,einops_reduc:965,einops_repeat:966,einsum:[190,335,464,602,782,1149],elementwis:[88,225,368,497,629,822],empti:[78,215,358,487,619,813],equal:[95,375,504,636,967],erf:[460,770,1076],execute_with_gradi:[170,312,446,582,744,1039],exist:968,exp:[771,1077],expand_dim:[280,702,969],finfo:[85,222,365,494,626,819],firstlayersiren:1195,flip:[119,246,399,528,660,852],float_img_to_uint8_img:1053,floor:[281,703,970],floormod:[282,704,971],fomaml_step:1082,fork:43,fourier_encod:972,framework:59,full:[149,283,425,559,705,973],func:72,gather:[150,284,426,560,706,974],gather_nd:[151,285,427,561,707,975],geglu:1189,gelu:[345,473,791,1159,1190],gener:[22,138,263,413,547,680,940],get_all_arrays_in_memori:976,get_all_arrays_on_dev:900,get_framework:64,get_min_bas:977,get_min_denomin:978,get_num_dim:[708,979],get_referrers_recurs:980,glorotuniform:1196,gpu_is_avail:[901,1106],gradient:[24,169,311,445,581,743,1035],gradient_descent_upd:1040,gradient_imag:[174,318,452,588,751,1054],gym:53,handler:59,has_nan:981,ident:[152,286,428,562,709,982],iinfo:[86,223,366,495,627,820],imag:[26,172,316,450,586,749,1051],index_nest:1132,indices_wher:[153,287,429,710,983],initi:1193,inplac:11,inplace_arrays_support:984,inplace_decr:[154,288,430,563,711,985],inplace_incr:[155,289,431,564,712,986],inplace_upd:[156,290,432,565,713,987],inplace_variables_support:988,inv:[755,1060],invalid_dtyp:930,is_arrai:[157,291,433,566,714,989],is_float_dtyp:931,is_int_dtyp:932,is_vari:[171,313,447,583,745,1041],isfinit:[96,229,376,505,637,829],isinf:[292,567,715,990],isnan:[97,230,377,506,638,830],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,809,1227,1228,1231],ivymodul:[201,799],jax:74,keep:43,lamb:1220,lamb_upd:1042,lar:1221,lars_upd:1043,layer:[203,346,475,611,801,1166,1202],layer_norm:1184,layernorm:1217,leaky_relu:[792,1160],less:[98,231,378,507,639,831],less_equ:[99,379,508,640,832],linalg:[28,1058],linear:[111,176,239,320,391,454,520,590,652,753,844,1175,1212],linear_resampl:[158,293,434,568,716,991],linspac:[159,294,435,569,717,992],list:43,log10:[100,380,509,641,833],log1p:[101,381,510,642,834],log2:[102,382,511,643,835],log:[772,1078],logic:[30,180,325,458,594,760,1065],logical_and:[326,761,1066],logical_not:[103,232,383,512,644,836],logical_or:[104,327,384,513,645,762,837,1067],logspac:[160,295,436,570,718,993],loss:1179,lstm:1211,lstm_updat:1176,maml_step:1083,manipul:[118,245,398,527,659,851],map:1133,map_nest_at_index:1134,map_nest_at_indic:1135,match_kwarg:994,math:[32,181,328,459,595,763,1068],matmul:[113,296,393,522,654,846,995],matrix_norm:[177,321,455,591,756,1061],maximum:[719,996],mech:54,memori:55,meshgrid:[297,720,997],meta:[34,1081],method:[110,238,390,519,651,843],min:[126,406,535,667,859],minimum:[721,998],model:56,modul:[1214,1215,1227],multi:1085,multi_head_attent:1177,multi_index_nest:1136,multidevcontain:42,multidevit:879,multidevitem:878,multidevnest:880,multiheadattent:1213,multinodeit:1091,multinodeitem:1090,multinodenest:1092,multinomi:[183,330,462,597,775,1142],multiprocess:[722,999],mxnet:211,nativ:1227,neg:[105,233,385,514,646,838],nest:1129,nested_indices_wher:1137,nested_map:1138,network:1227,next:1185,node:[1085,1107],node_dist:1108,node_dist_arrai:1109,node_dist_it:1110,node_str:1111,node_to_str:1112,node_util:1113,nodedistit:1094,nodedistitem:1093,nodedistnest:1095,nodemapp:1097,nodemappermultiproc:1098,norm:[1183,1216],num_arrays_in_memori:1000,num_arrays_on_dev:902,num_cpu_cor:903,num_gpu:[136,904,1114],numpi:354,nutshel:1185,one_hot:[161,437,571,723,1001],ones:[79,216,359,488,620,814,1002],ones_lik:[80,217,360,489,621,815],oper:[1,3,7,9,11,13],optim:[1218,1222],optimizer_upd:1044,overview:1185,percent_used_mem_on_dev:905,percent_used_mem_on_nod:1115,pinv:[322,757,1062],portabl:1231,print_all_arrays_in_memori:1003,print_all_arrays_on_dev:906,profil:[132,258,412,541,673,881,1099],pull:43,queue_timeout:1004,randint:[184,331,598,776,1143],random:[36,182,329,461,596,774,1141],random_crop:1055,random_norm:[185,332,599,777,1144],random_uniform:[186,333,600,778,1145],reduce_max:[191,336,465,603,783,1150],reduce_mean:[192,337,466,604,784,1151],reduce_min:[193,338,467,605,785,1152],reduce_prod:[194,339,468,606,786,1153],reduce_std:[340,1154],reduce_sum:[195,341,469,607,787,1155],reduce_var:[196,342,470,608,788,1156],reduct:[38,189,334,463,601,781,1148],reflect:13,relu:[793,1161],repeat:[298,724,1005],reptile_step:1084,request:43,reshap:[725,1006],robot:57,round:[299,726,1007],run:1228,scaled_dot_product_attent:1178,scatter_flat:[162,300,438,572,727,1008],scatter_nd:[163,301,439,573,728,1009],search:[120,247,400,529,661,853],seed:[187,779,1146],sequenti:[1224,1225],set:[122,249,402,531,663,855],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:907,set_default_dtyp:933,set_default_float_dtyp:934,set_default_int_dtyp:935,set_default_nod:1116,set_exception_debug_mod:48,set_framework:65,set_min_bas:1010,set_min_denomin:1011,set_nest_at_index:1139,set_nest_at_indic:1140,set_queue_timeout:1012,set_split_factor:[908,1117],set_tmp_dir:1013,set_with_grad:1045,sgd:1223,shape:[729,1014],shape_to_tupl:1015,shuffl:[188,780,1147],sigmoid:[794,1162],signatur:[110,238,390,519,651,843],sin:[106,234,386,515,647,839],sinh:[107,235,387,516,648,840],siren:1199,slodget:847,slogdet:[114,241,394,523,655],softmax:[199,474,795,1163],softplu:[796,1164],sort:[123,250,403,532,664,856],sparse_cross_entropi:1182,split:[164,302,440,574,730,1016],split_factor:[909,1118],split_func_cal:[910,1119],sqrt:[108,236,388,517,649,841],squeez:[165,303,441,575,731,1017],stable_divid:1018,stable_pow:1019,stack:[304,732,1020],stack_imag:[175,319,453,589,752,1056],standard:43,statist:[125,252,405,534,666,858],stop_gradi:[314,448,584,746,1046],str_to_nod:1120,submodul:43,supports_inplac:1021,svd:[115,242,395,524,656,848],swapax:[576,733,1022],tan:[773,1079],tanh:[109,237,389,518,650,797,842,1080,1165],tensorflow:483,tile:[305,577,734,1023],tmp_dir:1024,to_dev:[137,262,545,678,911],to_ivi:18,to_ivy_modul:[202,800,1192],to_list:[735,1025],to_n:19,to_nod:1121,to_numpi:[736,1026],to_scalar:[737,1027],todo:43,torch:615,total_mem_on_dev:912,total_mem_on_nod:1122,tpu_is_avail:[546,679,913,1123],trace:[116,243,396,525,657,849],train:1227,trainabl:1227,transpos:[166,306,442,738,1028],tree:1185,tril:[81,218,361,490,622,816],try_else_non:1029,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,363,367,492,496,624,628,818,821],uint8_img_to_float_img:1057,unifi:1124,unify_arrai:1125,unify_it:1126,unify_nest:1127,unset_debug_mod:49,unset_default_devic:914,unset_default_dtyp:936,unset_default_float_dtyp:937,unset_default_int_dtyp:938,unset_framework:71,unset_with_grad:1047,unstack:[167,307,443,578,739,1030],updat:43,used_mem_on_dev:915,used_mem_on_nod:1128,util:[127,253,407,536,668,860],valid_dtyp:939,value_is_nan:1031,variabl:[315,449,585,747,1048],variable_data:[748,1049],vector_norm:[117,244,397,526,658,850],vector_to_skew_symmetric_matrix:[179,324,457,593,759,1064],verbos:1229,vision:58,where:[308,740,1032,1185],why:1231,with_grad:1050,wrapper:72,write:1228,your:43,zero:[82,219,362,491,623,817,1201],zero_pad:[309,579,741,1033],zeros_lik:[168,310,444,580,742,1034]}})