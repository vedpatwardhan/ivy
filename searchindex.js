Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/jax", "functional/frontends/jax/lax", "functional/frontends/jax/lax/mathematical_functions", "functional/frontends/jax/lax/mathematical_functions/tan", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/add", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/tensorflow", "functional/frontends/tensorflow/mathematical_functions", "functional/frontends/tensorflow/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/add", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/jax.rst", "functional/frontends/jax/lax.rst", "functional/frontends/jax/lax/mathematical_functions.rst", "functional/frontends/jax/lax/mathematical_functions/tan.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/add.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/tensorflow.rst", "functional/frontends/tensorflow/mathematical_functions.rst", "functional/frontends/tensorflow/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/add.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Jax", "Lax", "Mathematical functions", "tan", "Numpy", "Mathematical functions", "add", "tan", "Tensorflow", "Mathematical functions", "tan", "Torch", "Pointwise ops", "add", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 112, 131, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 255, 258, 289, 295, 314, 319, 333, 405, 407, 417, 432, 435, 457, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 457], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 255, 296, 425, 426, 428, 429, 457, 464, 465, 466, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 500, 501], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "base": [0, 19, 27, 30, 32, 38, 54, 93, 103, 112, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 195, 217, 228, 229, 230, 231, 243, 255, 280, 303, 310, 319, 437, 438, 439, 441, 445, 446, 464, 465, 466, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "object": [0, 40, 43, 93, 99, 112, 128, 145, 190, 319, 405, 408, 410, 412, 413, 414, 419, 420, 421, 422, 425, 431, 469, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 112, 113, 114, 115, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 319, 320, 425, 426, 428, 429, 457, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 93, 94, 425, 429], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 71, 72, 73, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 123, 124, 125, 128, 131, 145, 154, 155, 163, 164, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 283, 285, 286, 290, 296, 298, 301, 302, 303, 304, 309, 310, 316, 319, 322, 324, 326, 327, 328, 334, 335, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 467, 468, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 145, 154, 169, 173, 177, 189, 255, 302, 467, 468, 490, 491], "kwarg": [0, 4, 38, 40, 42, 145, 154, 169, 173, 177, 255, 295, 467, 468, 490, 491], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 144, 145, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 467, 468, 478, 487, 488, 494, 498], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 28, 34, 38, 43, 54, 55, 112, 129, 130, 132, 144, 145, 154, 178, 179, 183, 185, 255, 279, 286, 290, 297, 299, 405, 406, 415, 416, 457], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 90, 91, 93, 94, 112, 136, 145, 154, 155, 169, 173, 177, 195, 199, 200, 211, 219, 252, 255, 257, 258, 262, 270, 277, 295, 302, 343, 346, 355, 385, 394, 405, 411, 423, 424, 445, 447, 452, 460, 462, 467, 468, 490, 491], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 92, 93, 104, 108, 109, 112, 129, 130, 145, 164, 188, 195, 244, 255, 260, 319, 322, 324, 326, 328, 356, 374, 375, 405, 411, 417, 445, 451, 453, 457, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 462, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 94, 95, 97, 99, 100, 101, 104, 105, 107, 111, 112, 121, 136, 145, 154, 155, 164, 179, 183, 188, 189, 195, 221, 249, 255, 270, 277, 278, 313, 319, 322, 326, 335, 340, 343, 351, 354, 356, 360, 374, 378, 385, 390, 393, 396, 401, 402, 403, 404, 405, 407, 417, 418, 425, 426, 427, 428, 429, 432, 436, 437, 438, 440, 445, 450, 451, 452, 453, 454, 455, 456, 457, 463, 467, 468, 478, 486, 489, 494, 498], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 82, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 126, 128, 131, 132, 144, 145, 154, 155, 165, 170, 171, 172, 173, 174, 175, 176, 177, 179, 183, 185, 187, 188, 189, 195, 244, 255, 257, 267, 268, 270, 277, 278, 279, 285, 289, 297, 298, 299, 301, 302, 317, 319, 322, 323, 324, 326, 327, 328, 330, 332, 333, 335, 337, 339, 343, 354, 356, 358, 360, 365, 373, 374, 378, 379, 381, 383, 384, 385, 387, 390, 392, 394, 395, 397, 405, 410, 411, 412, 413, 418, 419, 420, 421, 422, 425, 426, 427, 429, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 255, 316, 457], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 90, 91, 93, 94, 95, 97, 100, 101, 105, 107, 111, 195, 221, 255, 282, 307, 335, 340, 385, 393], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 112, 118, 145, 195, 199, 218, 243, 255, 262, 289, 310, 381, 382, 383, 384, 405, 416, 432, 433, 434, 436, 445, 447, 449, 451, 453, 457, 490, 491], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 112, 123, 124, 125, 145, 154, 155, 187, 188, 189, 255, 280, 281, 300, 303, 304, 305, 309, 310, 423, 424, 492, 493], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 145, 164, 174, 175, 186, 187, 188, 189, 195, 203, 255, 256, 303, 304, 305, 306, 319, 322, 324, 325, 326, 327, 328, 356, 358, 365, 367, 370, 373, 405, 406, 415, 416, 417, 421, 422, 425, 430, 432, 433, 438, 439, 440, 441, 442, 443, 444, 445, 451, 453, 478, 487, 494, 495, 496, 497, 498, 499], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 145, 154, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 462, 467, 468, 494, 498], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 100, 101, 104, 106, 107, 110, 111, 112, 118, 129, 130, 145, 164, 165, 167, 179, 180, 181, 182, 183, 188, 190, 192, 193, 195, 199, 200, 204, 205, 206, 209, 210, 211, 212, 213, 217, 219, 221, 222, 226, 237, 238, 240, 245, 252, 255, 259, 260, 266, 267, 274, 277, 281, 292, 307, 313, 314, 315, 335, 338, 339, 341, 342, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 363, 367, 369, 374, 376, 377, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 451, 452, 454, 455, 457], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 120, 136, 145, 164, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 217, 218, 219, 228, 229, 231, 232, 234, 235, 239, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 289, 319, 322, 324, 326, 327, 328, 356, 357, 358, 365, 367, 370, 371, 373, 374, 378, 379, 381, 382, 383, 384, 385, 389, 390, 394, 395, 396, 397, 401, 402, 403, 405, 417, 418, 425, 428, 429, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 335, 341, 457, 463], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 71, 72, 73, 255, 314, 445, 446, 457], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 255, 314, 457], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 68, 69, 71, 73, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 97, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 118, 120, 126, 145, 164, 165, 166, 167, 170, 171, 179, 183, 188, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 237, 238, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 298, 307, 311, 313, 314, 315, 317, 318, 319, 323, 325, 330, 332, 333, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 411, 415, 416, 417, 423, 424, 425, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 489], "arrai": [0, 4, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 126, 128, 131, 133, 134, 136, 140, 145, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 183, 185, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 286, 287, 288, 289, 291, 292, 294, 297, 298, 299, 301, 302, 307, 311, 313, 314, 315, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 330, 332, 333, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 417, 418, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 478, 486, 489], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 82, 84, 85, 86, 87, 89, 92, 93, 100, 101, 104, 106, 107, 111, 112, 118, 145, 164, 165, 167, 179, 181, 183, 190, 195, 199, 200, 202, 203, 205, 206, 209, 210, 211, 212, 213, 217, 219, 221, 222, 226, 231, 237, 238, 240, 245, 252, 255, 259, 260, 263, 264, 267, 274, 277, 292, 307, 313, 335, 336, 338, 339, 341, 342, 343, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 369, 370, 371, 374, 376, 377, 379, 381, 382, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 398, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 454, 455, 457], "0": [0, 4, 19, 23, 24, 25, 38, 40, 41, 42, 43, 82, 84, 85, 86, 87, 88, 89, 93, 94, 98, 102, 103, 107, 108, 109, 110, 111, 112, 118, 128, 145, 147, 150, 154, 157, 161, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 183, 188, 189, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 217, 218, 219, 222, 228, 229, 231, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 259, 260, 263, 264, 266, 267, 268, 274, 277, 278, 283, 292, 298, 301, 302, 307, 313, 314, 315, 319, 321, 322, 326, 327, 335, 338, 339, 341, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 363, 374, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 405, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 82, 84, 85, 86, 87, 88, 89, 93, 100, 101, 104, 106, 107, 110, 111, 112, 118, 129, 130, 145, 165, 179, 180, 181, 182, 183, 185, 188, 192, 195, 199, 200, 204, 205, 206, 209, 210, 211, 212, 213, 217, 219, 221, 222, 226, 237, 238, 240, 245, 252, 255, 259, 260, 266, 267, 274, 277, 281, 299, 307, 313, 314, 315, 335, 338, 339, 341, 342, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 363, 369, 374, 376, 377, 381, 382, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 396, 398, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 451, 452, 454, 455, 457], "function": [0, 4, 5, 6, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 69, 72, 73, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 464, 465, 466, 494, 497, 499], "py": [0, 4, 5, 19, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 425, 426, 428, 429], "noqa": [0, 4, 5, 93, 104, 195, 199, 205, 210, 211, 213, 245, 252, 356, 359, 385, 389, 390, 394, 445, 447], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 82, 83, 84, 87, 89, 90, 91, 93, 94, 99, 103, 104, 108, 109, 112, 116, 117, 118, 122, 127, 129, 130, 132, 135, 140, 144, 145, 154, 155, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 241, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 257, 259, 262, 263, 269, 270, 276, 278, 287, 288, 289, 291, 292, 293, 294, 296, 301, 302, 303, 304, 305, 308, 309, 310, 318, 319, 321, 322, 324, 326, 327, 328, 330, 333, 335, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 112, 129, 130, 457], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 93, 104, 145, 164, 195, 196, 239, 243, 356, 364, 372, 373, 374, 377, 385, 389, 396, 437, 438, 439, 441, 445, 448, 450, 451, 452, 453], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 356, 365, 376, 378, 379, 423, 424, 425, 429, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 492, 493], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 90, 91, 93, 95, 105, 145, 190, 195, 199, 200, 211, 215, 219, 222, 227, 252, 255, 256, 270, 271, 272, 273, 274, 277, 284, 291, 292, 293, 294, 309, 310, 319, 323, 343, 346, 355, 385, 394, 405, 411, 415, 423, 424, 425, 429, 445, 447, 454, 457], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 112, 122, 145, 154, 189, 195, 203, 255, 262, 289, 319, 333, 401, 402, 403, 467, 468, 490, 491, 494, 498, 500, 501], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 68, 69, 319, 325, 437, 438, 439, 441, 457], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 93, 94, 96, 100, 102, 103, 106, 108, 109, 110, 112, 118, 120, 145, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 183, 185, 188, 189, 190, 195, 244, 255, 257, 267, 277, 278, 284, 317, 335, 341, 356, 360, 365, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 394, 396, 397, 400, 405, 410, 412, 413, 419, 420, 421, 422, 432, 433, 434, 437, 438, 439, 441, 442, 443, 445, 446, 450, 452, 454, 455, 456], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 255, 260, 343, 352, 353], "associ": [0, 5, 19, 28, 30, 55, 195, 199, 239, 356, 367, 370, 380], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 82, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 122, 123, 124, 125, 132, 144, 145, 164, 188, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 257, 264, 267, 268, 269, 275, 277, 278, 296, 298, 301, 302, 309, 310, 319, 330, 343, 346, 349, 350, 355, 356, 365, 367, 370, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 405, 406, 411, 416, 417, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "str": [0, 5, 33, 34, 93, 104, 112, 116, 122, 123, 124, 127, 128, 131, 132, 133, 134, 137, 138, 139, 144, 145, 161, 164, 165, 167, 170, 171, 172, 173, 189, 255, 257, 269, 271, 272, 273, 296, 301, 302, 343, 344, 346, 348, 349, 350, 356, 371, 405, 411, 445, 446], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 319, 323, 457, 463], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 255, 257], "i": [0, 5, 19, 21, 22, 38, 41, 43, 93, 94, 104, 195, 196, 203, 207, 209, 211, 219, 220, 223, 237, 238, 240, 243, 244, 255, 259, 260, 319, 322, 324, 326, 327, 328, 356, 358, 364, 367, 370, 373, 374, 377, 379, 385, 397, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 92, 93, 104, 112, 117, 136, 145, 161, 195, 196, 203, 207, 209, 211, 217, 219, 220, 223, 228, 230, 237, 238, 240, 243, 244, 319, 322, 324, 326, 327, 328, 356, 358, 364, 367, 370, 373, 374, 379, 385, 397, 425, 428, 429, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 93, 94, 104, 112, 119, 121, 145, 174, 175, 176, 177, 189, 195, 199, 255, 295, 298, 301, 302, 356, 364, 365, 369, 371, 378, 379, 385, 389, 390, 394, 396, 432, 433, 435, 437, 438, 439, 440, 441, 445, 446, 457], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 123, 124, 125, 126, 145, 154, 155, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 256, 257, 263, 264, 267, 268, 275, 276, 277, 278, 282, 283, 284, 286, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301, 302, 305, 307, 309, 310, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 334, 335, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 365, 367, 370, 371, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 411, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 78, 79, 80, 90, 91, 112, 129, 130, 457], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 75, 76, 457], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 457], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 93, 99, 195, 199, 203, 224, 228, 229, 231, 232, 239, 244, 246, 247, 252, 255, 270, 291, 295, 296, 356, 364, 401, 402, 403, 404, 445, 450, 452, 478, 489, 490, 491], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 145, 164, 255, 271, 272, 273, 425, 426], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 82, 84, 85, 86, 87, 88, 89, 92, 112, 127, 145, 154, 155, 180, 184, 187, 188, 189, 190, 192, 194, 195, 200, 205, 210, 213, 219, 222, 237, 238, 240, 245, 255, 277, 280, 281, 295, 301, 302, 303, 304, 309, 310, 319, 321, 322, 326, 327, 343, 349, 351, 352, 354, 355, 356, 359, 360, 365, 381, 382, 385, 389, 390, 392, 394, 398, 401, 402, 403, 404, 405, 406, 408, 414, 415, 416, 418, 423, 424, 432, 433, 434, 435, 437, 438, 439, 445, 446, 454, 455, 457, 478, 486, 489, 490, 491, 492, 493, 494, 496, 497], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 145, 189, 255, 300, 305, 316, 319, 323, 405, 406, 411, 415, 416, 478, 489, 490, 491, 494, 498], "nativ": [0, 6, 33, 35, 40, 41, 93, 105, 112, 116, 117, 122, 145, 161, 162, 163, 164, 165, 184, 191, 194, 255, 289, 291, 294, 467, 468], "native_arrai": [0, 6, 12, 82, 84, 85, 86, 87, 88, 89, 93, 104, 145, 167, 183, 195, 200, 205, 210, 211, 219, 222, 237, 238, 240, 255, 260, 266, 267, 274, 277, 313, 314, 315, 343, 346, 349, 350, 355, 356, 358, 359, 360, 376, 381, 382, 384, 385, 386, 389, 390, 395, 398, 423, 424, 425, 426, 432, 433, 434, 435, 436, 437, 438, 439, 445, 446, 447, 454, 455], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 78, 79, 82, 84, 85, 86, 87, 89, 93, 94, 101, 102, 103, 104, 106, 107, 111, 112, 118, 128, 145, 149, 152, 154, 159, 164, 165, 167, 169, 173, 177, 179, 182, 183, 188, 190, 195, 197, 198, 199, 200, 203, 205, 206, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 226, 228, 229, 230, 231, 237, 238, 240, 243, 245, 246, 247, 252, 255, 259, 260, 266, 267, 274, 277, 278, 292, 298, 301, 302, 307, 310, 313, 314, 315, 317, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 363, 367, 369, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 405, 417, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 144, 145, 161, 162, 163, 164, 165, 167, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 289, 291, 292, 293, 294, 298, 301, 302, 303, 304, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 330, 332, 335, 339, 341, 342, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 411, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 93, 95, 105, 255, 314], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 112, 118, 121, 126, 145, 164, 165, 176, 180, 181, 184, 189, 192, 194, 195, 205, 221, 222, 223, 224, 225, 226, 234, 235, 255, 256, 259, 260, 267, 270, 274, 276, 282, 289, 291, 292, 294, 295, 307, 317, 319, 322, 323, 324, 325, 326, 327, 328, 356, 357, 365, 374, 379, 385, 395, 401, 402, 403, 404, 405, 406, 407, 411, 415, 416, 417, 418, 425, 426, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 467, 468, 490, 491, 494, 495, 496, 497, 498, 499], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 445, 451, 453], "dict": [0, 12, 32, 41, 42, 145, 154, 155, 164, 167, 170, 171, 172, 173, 255, 257, 271, 272, 273, 405, 407, 408, 411, 414, 417, 418], "previous": [0, 12, 18, 21, 27, 28, 38, 255, 262], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 93, 94, 112, 118, 121, 123, 124, 125, 145, 164, 195, 223, 224, 225, 255, 261, 316, 319, 325, 330, 356, 357, 359, 378, 379, 401, 402, 403, 405, 418, 432, 433, 434, 436, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 112, 118, 136, 145, 190, 195, 196, 197, 198, 200, 201, 202, 203, 212, 213, 217, 218, 228, 229, 230, 231, 239, 243, 244, 247, 248, 252, 356, 361, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 457], "wa": [0, 12, 15, 25, 38, 40, 255, 316, 405, 418, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "last": [0, 12, 16, 25, 29, 55, 82, 87, 145, 164, 335, 339, 343, 353, 356, 358, 360, 365, 377, 378, 381, 383, 384, 385, 390, 394, 395, 397, 442, 443, 444, 454, 455, 456, 478, 488], "henc": [0, 12, 437, 438, 439, 441], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 93, 102, 103, 112, 126, 195, 237, 238, 255, 298, 301, 302, 343, 351, 353, 356, 376, 385, 393, 395, 425, 426, 457, 478, 486, 488], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 145, 189, 195, 254, 343, 354, 355, 401, 402, 403, 405, 417, 437, 438, 439, 441, 445, 450, 452], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 385, 386], "swap": [0, 12, 385, 398], "python": [0, 12, 13, 14, 15, 18, 19, 21, 38, 40, 41, 55, 93, 94, 145, 184, 194, 195, 244, 457, 463], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 113, 114, 115, 146, 153, 156, 320, 457, 470, 473, 476], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 461, 462, 463, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 112, 129, 130, 132, 144, 145, 180, 182, 192, 255, 286, 289, 290, 296, 319, 322, 324, 326, 327, 328, 333, 457, 463, 467, 468, 494, 495, 496, 497, 498, 499], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 457, 463], "explos": [13, 15, 457], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 93, 98, 105, 145, 154, 155, 189, 195, 242, 253, 255, 281, 313, 356, 369, 372, 373, 374, 385, 395, 397, 405, 406, 408, 410, 412, 413, 414, 415, 416, 419, 420, 421, 422, 445, 446, 454, 455, 456, 457, 500, 501], "huge": [13, 15, 41, 457], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 90, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 112, 119, 127, 128, 131, 133, 134, 136, 145, 181, 182, 183, 195, 199, 203, 211, 219, 220, 237, 238, 239, 243, 244, 245, 246, 254, 255, 276, 281, 282, 297, 315, 318, 335, 339, 343, 354, 356, 361, 367, 372, 374, 378, 385, 386, 388, 391, 392, 394, 395, 397, 399, 400, 401, 402, 403, 404, 425, 426, 430, 432, 435, 437, 438, 439, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489], "tool": [13, 16, 39, 43, 54, 55, 457], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 82, 85, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 128, 145, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 264, 271, 272, 273, 275, 319, 325, 333, 343, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397, 398, 425, 427, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "explod": [13, 14, 457], "onto": [13, 14, 145, 174, 175, 405, 411, 417, 457], "scene": [13, 14, 22, 37, 39, 319, 322, 324, 326, 327, 328, 457], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 145, 167, 195, 199, 200, 205, 210, 211, 213, 219, 222, 240, 245, 252, 255, 259, 260, 266, 267, 274, 277, 315, 343, 346, 349, 350, 355, 356, 357, 358, 359, 369, 373, 376, 380, 381, 382, 385, 386, 389, 390, 392, 394, 397, 398, 423, 424, 425, 428, 429, 432, 434, 435, 436, 442, 443, 445, 446, 447, 454, 455, 457, 463], "why": [13, 15, 19, 32, 35, 36, 40, 457], "unifi": [13, 15, 31, 38, 55, 145, 174, 175, 176, 177, 189, 457], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 90, 91, 93, 104, 108, 109, 112, 120, 145, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 239, 241, 243, 244, 246, 247, 248, 249, 251, 252, 254, 255, 262, 289, 298, 319, 322, 324, 326, 327, 328, 343, 355, 356, 357, 358, 359, 360, 363, 364, 367, 369, 370, 371, 373, 374, 376, 377, 378, 379, 385, 393, 425, 431, 432, 433, 434, 437, 438, 439, 441, 445, 446, 447, 448, 450, 451, 452, 453, 457], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 457], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 255, 259, 260, 266, 315, 319, 321, 322, 324, 326, 327, 328, 343, 349, 385, 397, 432, 435, 445, 446, 451, 453, 457, 463], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 93, 104, 112, 128, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 356, 359, 385, 389, 390, 394, 423, 424, 425, 428, 437, 438, 439, 442, 443, 445, 447, 451, 453, 457, 463, 492, 493], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 145, 189, 255, 271, 335, 336, 339, 356, 376, 385, 394, 432, 436, 457], "collabor": [13, 14, 15, 457], "consortium": [13, 15, 457, 463], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 144, 145, 147, 148, 149, 150, 151, 152, 157, 158, 159, 161, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 241, 243, 244, 246, 247, 248, 249, 251, 252, 254, 255, 259, 260, 291, 292, 294, 311, 319, 325, 333, 335, 339, 341, 343, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 385, 389, 390, 391, 393, 394, 396, 397, 425, 431, 432, 433, 434, 435, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "api": [13, 14, 18, 19, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 356, 359, 385, 389, 390, 394, 437, 438, 439, 442, 443, 445, 447, 457, 463], "open": [14, 15, 16, 17, 18, 21, 24, 54, 93, 94, 425, 427, 429, 457], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 425, 426, 428, 429], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18, 19], "year": [14, 16, 55, 457], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 457], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 195, 221, 319, 322, 324, 326, 327, 328, 401, 402, 403, 404, 457, 494, 495, 496, 497, 498, 499], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 93, 95, 105, 112, 121, 145, 187, 188, 189, 335, 337, 356, 363, 385, 393, 425, 427, 457, 463], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 145, 169, 173, 177, 385, 388, 400, 405, 417], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 457, 463], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 82, 85, 86, 88, 93, 94, 97, 99, 106, 108, 109, 110, 145, 166, 167, 170, 179, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 260, 263, 264, 266, 267, 274, 277, 284, 293, 313, 314, 315, 335, 341, 343, 346, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 395, 398, 405, 418, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 498, 500, 501], "term": [14, 19, 343, 353, 478, 488], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 319, 322, 326, 343, 353, 385, 399, 401, 402, 403, 404, 432, 433, 434, 437, 438, 439, 478, 489, 490, 491], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 356, 361, 457, 463], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 93, 94, 145, 154, 155, 179, 183, 185, 189, 195, 212, 234, 235, 245, 247, 252, 255, 256, 259, 260, 261, 279, 285, 286, 290, 297, 299, 311, 343, 352, 356, 358, 364, 365, 367, 370, 374, 375, 378, 385, 386, 390, 394, 405, 407, 411, 417, 425, 428, 429, 432, 433, 434, 435, 437, 438, 457, 500, 501], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 385, 395], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 112, 128, 145, 166, 167, 170, 171, 195, 199, 239, 251, 343, 352, 385, 397, 445, 450, 452, 457], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 195, 234, 235, 437, 438, 445, 448], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 93, 94, 95, 104, 105, 145, 169, 173, 177, 184, 189, 194, 195, 196, 199, 200, 205, 209, 210, 211, 213, 218, 219, 234, 235, 244, 245, 252, 255, 276, 277, 289, 300, 305, 319, 322, 324, 325, 326, 327, 328, 333, 343, 346, 352, 355, 356, 359, 365, 372, 385, 389, 390, 393, 394, 397, 405, 411, 417, 418, 423, 424, 432, 433, 437, 438, 439, 441, 442, 443, 445, 447, 448, 451, 453, 457, 463, 490, 491, 494, 495, 496, 497, 498, 499], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 457], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 255, 277, 289, 319, 322, 343, 346, 352, 355, 356, 359, 385, 389, 390, 394, 401, 402, 403, 404, 405, 406, 407, 415, 416, 417, 423, 424, 437, 438, 439, 442, 443, 445, 447, 478, 488], "consid": [14, 15, 23, 28, 39, 40, 41, 195, 234, 235, 437, 438, 439, 441], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 82, 84, 85, 86, 87, 88, 89, 145, 167, 190, 195, 210, 343, 349, 350, 437, 438, 439, 442, 443, 445, 446, 457, 463], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 145, 190, 195, 218, 234, 235, 356, 361, 437, 438, 439, 441, 445, 447, 448, 449, 457], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 442, 443, 444], "against": [14, 27, 55, 112, 119, 356, 364, 365, 367, 370, 432, 433], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 356, 361, 457], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 94, 104, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 217, 218, 219, 228, 229, 231, 232, 239, 243, 244, 245, 247, 248, 249, 252, 254, 319, 325, 333, 356, 374, 377, 385, 386, 397, 437, 438, 439, 441, 445, 447, 449, 452, 467, 468], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 71, 72, 73, 93, 100, 101, 104, 195, 203, 217, 230, 239, 243, 255, 285, 289, 298, 356, 361, 367, 370, 371, 374, 375, 377, 378, 385, 386, 388, 389, 391, 397, 400, 405, 406, 416, 425, 426, 432, 435, 445, 451, 453, 454, 455, 456, 457], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 437, 438, 439, 441], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 93, 96, 99, 100, 101, 106, 107, 110, 111, 112, 140, 195, 204, 230, 242, 253, 255, 271, 272, 273, 276, 277, 278, 301, 302, 303, 304, 309, 310, 319, 322, 324, 326, 327, 328, 335, 337, 340, 342, 385, 389, 393, 397, 405, 410, 421, 422, 423, 424, 457, 467, 468, 478, 488, 492, 493, 494, 495, 496, 497, 498, 499], "futur": [14, 16, 18, 19, 40, 55, 356, 361], "avail": [14, 18, 19, 24, 34, 55, 145, 164, 180, 181, 182, 192, 255, 272], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 112, 136, 145, 187, 190, 195, 234, 235, 255, 271, 272, 273, 296, 356, 361, 376, 385, 397, 401, 402, 403, 404, 425, 426, 445, 447, 448, 449, 457, 460, 462, 463, 490, 491], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 22, 27, 29, 32, 35, 37, 55, 478, 489, 490, 491], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 457], "desir": [14, 112, 118, 121, 145, 190, 255, 285, 335, 341, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 90, 91, 93, 104, 112, 123, 124, 125, 132, 136, 144, 145, 164, 255, 270, 298, 302, 319, 322, 324, 326, 327, 328, 356, 378, 385, 390, 397, 432, 433, 445, 451, 453, 454, 455, 456, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 90, 91, 93, 94, 108, 109, 145, 154, 179, 185, 255, 256, 259, 260, 279, 299, 314, 343, 353, 356, 373, 376, 379, 385, 390, 394, 401, 402, 403, 404, 405, 406, 407, 416, 417, 418, 425, 426, 429, 454, 457, 460, 462], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 255, 274], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 405, 417], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 82, 85, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 145, 174, 175, 176, 177, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 264, 275, 302, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397, 398, 425, 427, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 494, 498], "determin": [14, 24, 28, 32, 33, 34, 112, 121, 122, 127, 132, 133, 134, 144, 145, 180, 181, 182, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 217, 218, 223, 224, 225, 228, 229, 231, 232, 236, 239, 243, 244, 247, 248, 249, 252, 255, 256, 259, 260, 284, 286, 290, 291, 292, 293, 294, 311, 318, 319, 325, 343, 354, 356, 357, 358, 359, 360, 363, 364, 367, 369, 370, 372, 373, 377, 378, 379, 401, 402, 403, 404, 437, 438, 439, 441, 454, 455, 456], "exactli": [14, 16, 25, 34, 457, 463], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 93, 94, 112, 128, 195, 203, 243, 381, 382, 383, 384, 385, 389, 397, 405, 411, 425, 427, 437, 438, 439, 441, 457, 494, 496], "find": [14, 18, 19, 38, 41, 437, 438, 439, 441, 457], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 255, 270, 494, 498], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 71, 72, 73, 195, 203, 319, 322, 324, 326, 327, 328, 356, 361, 365, 374, 375, 379, 385, 390, 401, 402, 403, 432, 435, 437, 438, 439, 441, 442, 443, 444, 500, 501], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 145, 160, 494, 498], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 145, 184, 190, 191, 194, 195, 199, 239, 244, 255, 257, 289, 385, 393, 425, 429, 457], "search": [14, 18, 23, 25, 27, 433, 434, 435, 436], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 90, 91, 93, 102, 103, 112, 135, 140, 145, 164, 176, 195, 199, 205, 207, 208, 209, 210, 215, 220, 222, 226, 227, 232, 233, 235, 236, 239, 241, 243, 251, 255, 259, 319, 323, 356, 358, 360, 361, 364, 369, 371, 374, 376, 378, 385, 387, 394, 397, 398, 401, 402, 403, 404, 405, 406, 415, 416, 425, 431, 432, 433, 434, 437, 438, 439, 478, 489, 490, 491, 494, 498], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 93, 94, 99, 102, 103, 112, 120, 136, 195, 199, 205, 207, 208, 209, 210, 214, 218, 226, 232, 235, 236, 239, 241, 243, 244, 251, 356, 367, 370, 373, 378, 379, 432, 434, 437, 438, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 145, 163], "front": [14, 37, 38, 41, 457, 463], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 457], "littl": [14, 31, 40], "deeper": [14, 22, 37, 145, 169, 173, 177, 405, 416, 417], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 112, 131, 145, 189, 195, 244, 255, 287, 288, 289, 309, 310, 319, 322, 324, 326, 327, 328, 343, 354, 355, 356, 371, 379, 405, 411, 417, 437, 438, 439, 441, 457, 478, 488, 494, 498], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 93, 94, 97, 101, 104, 107, 108, 109, 111, 112, 118, 119, 120, 145, 154, 155, 189, 195, 196, 199, 206, 211, 219, 239, 244, 245, 246, 254, 255, 275, 277, 278, 298, 301, 302, 319, 325, 330, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 368, 370, 371, 373, 374, 377, 378, 385, 387, 390, 391, 394, 396, 397, 401, 402, 403, 405, 418, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 478, 479, 480, 481, 482, 483, 484, 485], "core": [14, 18, 20, 34, 38, 43, 145, 181, 457], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 93, 102, 103, 112, 136, 195, 199, 209, 210, 222, 240, 244, 255, 261, 271, 272, 273, 311, 319, 322, 324, 326, 327, 328, 343, 344, 345, 346, 347, 348, 349, 350, 352], "expos": [14, 38, 42, 255, 265], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 145, 179, 405, 418, 457], "uniqu": [14, 28, 32, 55, 145, 154, 155, 401, 402, 403, 404, 405, 411, 437, 438, 439, 440, 441], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 145, 185, 195, 234, 235, 356, 364, 371, 385, 390, 405, 406, 407, 415, 416, 432, 433, 434, 445, 448, 457, 494, 495, 496, 497, 498, 499], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 405, 406, 416, 457], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 145, 177, 356, 361, 445, 446, 490, 491], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 82, 85, 86, 88, 93, 104, 112, 119, 145, 154, 155, 166, 167, 168, 169, 170, 171, 172, 176, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 319, 322, 324, 326, 327, 328, 335, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 361, 364, 367, 368, 370, 373, 374, 385, 388, 392, 394, 395, 397, 399, 400, 405, 411, 418, 425, 426, 432, 435, 437, 438, 439, 445, 446, 457, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 457], "similar": [14, 23, 32, 33, 34, 41, 55, 195, 244, 343, 354, 478, 489], "convent": [14, 54, 356, 364, 445, 446], "those": [14, 18, 19, 20, 32, 38, 43, 93, 94, 319, 333, 356, 371, 374, 385, 386], "introduc": [14, 32, 41, 385, 394, 437, 438], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 423, 424, 457, 469, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 195, 199, 200, 211, 219, 252, 255, 277, 343, 346, 355, 385, 394, 423, 424, 445, 447], "present": [14, 19, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 255, 257, 405, 417], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 195, 244], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 195, 199, 211, 219, 220, 239, 249, 254, 457], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 457, 463, 478, 489, 490, 491], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 457], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 112, 122, 129, 130, 132, 144, 145, 184, 194, 255, 261, 274, 284, 291, 292, 293, 294, 311, 318, 319, 325, 356, 361, 405, 406, 415, 416, 417, 457], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 71, 72, 73, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 98, 100, 101, 106, 107, 108, 109, 110, 111, 112, 118, 120, 145, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 266, 267, 268, 271, 272, 273, 275, 277, 278, 285, 298, 335, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 486], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 457], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 145, 169, 173, 177, 405, 417], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 457], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 457, 463], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 457], "With": [15, 16, 18, 25, 27, 38, 82, 84, 85, 86, 87, 88, 89, 93, 104, 145, 167, 183, 195, 199, 200, 205, 210, 211, 213, 219, 222, 237, 238, 240, 245, 252, 255, 260, 266, 267, 274, 277, 313, 314, 315, 343, 346, 349, 350, 355, 356, 357, 358, 359, 360, 365, 376, 381, 382, 384, 385, 386, 389, 390, 392, 394, 395, 398, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 454, 455], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 93, 94, 255, 300, 305, 437, 440, 457], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 82, 87, 145, 190, 457], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 145, 189, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 487], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 112, 120, 195, 217, 243, 255, 261, 280, 289, 303, 310, 316, 356, 364, 366, 378, 385, 396, 397, 432, 435, 445, 447, 449, 454, 455, 456, 490, 491, 494, 498], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 82, 85, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 128, 133, 134, 136, 145, 167, 171, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 262, 263, 264, 266, 275, 276, 277, 285, 289, 291, 292, 293, 294, 314, 315, 316, 319, 325, 330, 332, 333, 335, 337, 341, 342, 343, 346, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 377, 378, 379, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 405, 411, 423, 424, 425, 427, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 467, 468, 490, 491, 494, 495, 496, 498], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 319, 322, 324, 326, 327, 328, 457, 494, 495, 496, 497, 498, 499], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 78, 79, 90, 91, 93, 94, 195, 218, 255, 256, 257, 319, 323, 425, 429, 437, 440, 445, 451, 453, 457], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 457, 463, 490, 491, 494, 498], "momentum": 15, "won": [15, 16, 19, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 255, 309, 310, 356, 361, 385, 389, 500, 501], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 445, 446, 478, 487], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 145], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 195, 243, 245], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 93, 94, 145, 189, 255, 291, 292, 294, 319, 325], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 93, 94, 102, 103, 255, 276], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 93, 104, 145, 184, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 217, 218, 219, 228, 229, 231, 232, 239, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 289, 301, 302, 356, 365, 385, 393, 405, 408, 414, 445, 447, 448, 449, 451, 452, 453, 478, 489, 490, 491, 494, 498], "unlik": [15, 25, 32, 145], "charger": 15, "charact": 15, "encod": [15, 41, 255, 276, 335, 337], "instant": [15, 457], "messag": [15, 19, 38, 40, 503, 504], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 195, 210, 255, 289, 385, 395], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 195, 200, 210, 211, 213, 219, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "replac": [15, 19, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 255, 301, 302, 385, 386, 425, 426], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 457], "10": [15, 18, 21, 25, 32, 38, 40, 41, 93, 100, 103, 145, 195, 205, 206, 213, 222, 229, 255, 267, 277, 300, 305, 319, 326, 343, 349, 356, 359, 360, 369, 376, 385, 390, 392, 395, 423, 424, 425, 426, 427, 432, 435, 437, 438, 445, 446, 447, 494, 496], "100": [15, 16, 41, 42, 43, 55, 457], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 437, 438, 439, 441, 457], "still": [15, 24, 27, 33, 40, 42, 55, 457], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 112, 140], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 457], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 356, 361], "technolog": 15, "sector": [15, 195, 198, 201, 204], "full": [15, 16, 19, 24, 33, 36, 38, 55, 93, 112, 128, 195, 222, 343, 349, 356, 371, 373, 374, 423, 424], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 195, 244], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 437, 438, 439, 441, 457, 478, 489, 490, 491], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 145, 189, 195, 199, 205, 208, 210, 215, 216, 221, 222, 226, 227, 233, 234, 235, 236, 239, 240, 241, 255, 263, 264, 267, 268, 319, 321, 322, 323, 324, 326, 327, 328, 330, 332, 335, 338, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 357, 358, 361, 362, 363, 364, 365, 371, 372, 373, 374, 378, 379, 381, 382, 383, 384, 405, 411, 437, 438, 439, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 145, 343, 353, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 498], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 93, 95, 105, 108, 109, 255, 257, 319, 322, 324, 326, 327, 328, 343, 356, 357, 359, 360, 361, 362, 363, 367, 368, 370, 371, 373, 374, 375, 377, 405, 407, 417], "factor": [15, 145, 154, 187, 188, 189, 319, 321, 322, 326, 327, 343, 344, 345, 346, 347, 348, 349, 350, 356, 357, 478, 479, 480, 481, 482, 483, 484, 485, 494, 495, 496, 497], "sata": 15, "connect": [15, 18, 42, 43, 478, 488, 489], "host": [15, 55], "bu": 15, "adapt": [15, 319, 327, 494, 497], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 255, 277, 278, 298, 301, 302, 425, 426, 427, 428, 429, 467, 468, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "html": [15, 21, 24, 195, 200, 210, 211, 213, 219, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 405, 406, 415, 416], "commun": [15, 17, 19, 20, 55, 457, 463], "network": [15, 28, 32, 38, 42, 54, 343, 352, 457, 464, 478, 490, 491], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 255, 295, 313, 335, 341, 445, 447, 449], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 92, 112, 128, 195, 199, 218, 239, 244, 249], "754": [15, 92, 112, 128, 195, 199, 218, 239, 244, 249], "allow": [15, 38, 55, 93, 102, 103, 255, 295, 490, 491], "calcul": [15, 24, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 213, 214, 217, 218, 228, 229, 230, 231, 232, 239, 243, 247, 248, 249, 251, 252, 381, 382, 383, 384, 445, 447, 448, 449, 450, 451, 452, 453], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 112, 118, 195, 196, 197, 198, 200, 201, 202, 203, 212, 213, 217, 218, 228, 229, 230, 231, 243, 247, 248, 252, 356, 361, 371, 373, 374, 432, 436, 442, 443, 444], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 457], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 145, 189], "relev": [15, 18, 20, 25, 32, 33, 41, 494, 495, 496, 497, 498, 499], "area": [15, 35, 53, 195, 198, 201, 204, 457], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 437, 438, 439, 441], "easili": [15, 19, 41, 42, 43, 55, 457], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 145], "effect": [15, 24, 31, 32, 36, 55, 93, 104, 319, 328, 445, 451, 453], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 112, 128, 131, 195, 221, 356, 367, 370], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 93, 94, 96, 102, 103, 145, 178, 184, 186, 187, 188, 189, 191, 194, 255, 267, 268, 278, 301, 302, 317, 319, 321, 322, 324, 326, 327, 328, 343, 344, 345, 346, 347, 348, 349, 350, 356, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 394, 395, 399, 405, 412, 413, 425, 427, 428, 429, 431, 442, 444, 467, 468], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 195, 197, 198, 200, 203, 211, 228, 229, 231, 243, 244, 246, 249, 356, 367, 370, 379, 425, 429, 445, 453], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 195, 239, 343, 353, 457, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 93, 94, 112, 128, 145, 189, 195, 197, 198, 200, 203, 207, 209, 211, 219, 220, 228, 229, 231, 237, 243, 244, 246, 249, 254, 255, 291, 292, 294, 319, 325, 356, 358, 364, 367, 370, 379, 385, 386, 390, 396, 425, 429, 437, 438, 439, 441, 445, 450, 451, 452, 453], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 356, 357, 369, 445, 446], "80": [15, 356, 369, 445, 446], "90": [15, 195, 210, 245, 356, 369, 445, 446], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 457], "complet": [15, 19, 20, 31, 32, 40, 41, 356, 371], "natur": [15, 25, 31, 32, 54, 195, 217, 228, 230, 356, 372], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 319, 325, 425, 429, 457], "certainli": 15, "mission": [15, 457], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 145, 154, 155, 255, 277, 278, 298, 301, 302, 313, 319, 332, 425, 426, 427, 429, 457, 463, 467, 468, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 145, 154, 155, 184, 194], "ourselv": 15, "lead": [15, 16, 55, 356, 371, 374], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 437, 438, 439, 441], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 195, 203], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 93, 94, 95, 105, 255, 284, 318, 356, 379, 405, 406, 425, 429, 432, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 462, 478, 488, 489, 492, 493], "member": [15, 19], "googl": [15, 457], "octoml": 15, "einop": [15, 255, 271, 272, 273], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 457], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 255, 260, 266, 335, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 356, 360, 369, 457, 463], "shaw": 15, "co": [15, 38, 54, 195, 255, 276, 457], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 500, 501], "major": [15, 33, 34, 55, 432, 435], "involv": [15, 17, 21, 22, 33, 43, 112, 136, 195, 199, 239, 457, 463], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 93, 99, 112, 119, 121], "promis": 15, "sign": [15, 18, 39, 43, 93, 94, 195, 196, 199, 203, 209, 239, 244, 356, 372, 437, 438, 439, 441, 445, 450, 452], "pursuit": 15, "unif": [15, 17, 40, 457, 463], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 343, 354, 355, 478, 489], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 112, 120, 195, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 222, 226, 227, 232, 233, 235, 236, 239, 241, 243, 244, 251, 356, 367, 370, 373, 376, 378, 379, 385, 393, 432, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "excit": [15, 17, 22, 457], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 195, 239], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 195, 218, 319, 321, 322, 324, 326, 327, 328, 333, 343, 351, 457, 478, 486], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 457, 463], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 92, 93, 94, 96, 98, 100, 106, 110, 112, 118, 128, 133, 136, 195, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 217, 218, 219, 228, 229, 231, 232, 239, 243, 244, 245, 247, 248, 249, 252, 254, 356, 357, 359, 361, 362, 363, 367, 370, 371, 373, 374, 379, 437, 438, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453], "mai": [16, 18, 19, 32, 40, 42, 93, 94, 99, 145, 190, 195, 215, 222, 227, 234, 235, 255, 270, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449], "ask": [16, 19, 38, 40, 55, 457], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 385, 393], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 93, 94, 98, 104, 108, 109, 112, 135, 140, 195, 209, 245, 255, 259, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 385, 398, 437, 438, 439, 440, 441, 457], "streamlin": 16, "workflow": [16, 41, 53, 457], "save": [16, 55, 255, 306, 335, 337, 490, 491], "week": [16, 20, 457], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 445, 448, 451, 452, 453, 457], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 457], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 445, 451, 453], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 195, 221, 255, 286, 290, 335, 340], "g": [16, 22, 32, 55, 112, 117, 136, 145, 161, 425, 428, 429, 437, 438, 439, 441, 445, 447, 449, 450, 452], "inevit": 16, "deviat": [16, 423, 424, 425, 428, 445, 451, 492, 493], "origin": [16, 29, 30, 33, 38, 40, 195, 203, 356, 365, 385, 393, 394], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 319, 321, 322, 326, 457], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 82, 87, 93, 102, 103, 145, 255, 267, 271, 272, 273, 287, 288, 289, 319, 322, 324, 326, 327, 328, 335, 336, 339, 343, 351, 353, 356, 374, 401, 402, 403, 404, 405, 412, 413, 454, 455, 456], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 93, 102, 103, 255, 277, 278, 298, 301, 302, 425, 426, 427, 429, 437, 438, 439, 441, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "publish": [16, 55], "manag": [16, 17, 35, 55, 145], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 112, 126, 127, 128, 131, 145, 154, 155, 164, 165, 178, 179, 184, 188, 191, 194, 255, 258, 279, 280, 281, 300, 457, 463, 478, 487], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 457, 463], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23, 145, 181], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 195, 244, 255, 289, 319, 325, 333, 405, 406, 415, 416, 417], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 255, 258, 457], "codebas": [16, 17, 22, 23, 35, 37, 145, 187, 188, 457], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 145, 191, 432, 435, 445, 451, 453], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 356, 360, 377], "test": [16, 18, 20, 22, 25, 55, 112, 133, 134, 195, 223, 224, 225, 454, 455, 456], "error": [16, 18, 27, 31, 34, 36, 40, 55, 82, 83, 145, 195, 216, 445, 447, 449, 490, 491, 494, 498], "iter": [16, 32, 38, 41, 90, 91, 145, 167, 168, 170, 171, 172, 173, 176, 189, 255, 256, 302, 307, 385, 388, 392, 395, 399, 400, 405, 406, 407, 411, 415, 416, 417], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 19, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 145, 154, 155, 174, 175, 176, 177, 255, 315, 318, 425, 428, 429, 437, 438], "multipl": [16, 19, 25, 28, 32, 55, 195, 199, 239, 255, 295, 356, 363, 385, 386, 394, 395, 423, 424, 432, 433, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 488], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 457, 463], "convert": [16, 31, 38, 55, 56, 64, 93, 95, 105, 112, 116, 117, 145, 161, 162, 163, 164, 184, 191, 194, 255, 308, 314, 315, 335, 337, 342, 356, 380, 405, 407, 417, 418, 468], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 405, 417], "graph": [16, 28, 32, 39, 55, 319, 322, 324, 326, 327, 328, 437, 438, 439, 441, 490, 491], "guarante": [16, 31, 55, 437, 438], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 82, 84, 85, 87, 93, 101, 104, 107, 111, 145, 167, 183, 195, 199, 200, 203, 205, 210, 211, 213, 219, 222, 237, 238, 240, 245, 252, 255, 260, 267, 276, 277, 313, 335, 337, 338, 339, 342, 343, 346, 347, 348, 350, 353, 355, 356, 358, 359, 360, 363, 367, 369, 376, 377, 381, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 398, 423, 424, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 454, 455, 457, 494, 495, 496, 497, 499], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 93, 94, 102, 103, 145, 319, 321, 322, 324, 326, 327, 328, 401, 402, 403, 404, 457, 494, 495, 496, 497, 498, 499], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 195, 210, 335, 339, 457, 463], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 457, 463], "second": [16, 18, 25, 35, 40, 112, 135, 140, 145, 176, 195, 199, 205, 207, 208, 209, 210, 215, 220, 222, 226, 227, 232, 233, 235, 236, 239, 241, 243, 251, 255, 259, 300, 305, 319, 321, 322, 326, 356, 358, 360, 361, 364, 369, 371, 374, 376, 378, 385, 397, 398, 401, 403, 437, 438, 439, 494, 495, 496], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 457], "convers": [16, 37, 39, 43, 54, 55, 457, 463], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 90, 91], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 82, 85, 145, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 264, 268, 275, 277, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 423, 424, 425, 427, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 145, 189, 356, 363, 374, 425, 426], "know": [16, 437, 438, 439, 441], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 255, 271, 272, 273], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 145, 356, 358, 385, 393, 405, 407, 417, 457, 463], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 478, 489, 490, 491], "spend": 16, "torchvis": 16, "probabl": [16, 343, 351, 425, 426, 478, 486], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 112, 128, 131], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 112, 128, 457, 490, 491, 494, 495, 496, 497, 498, 499], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 82, 84, 85, 93, 96, 98, 104, 108, 109, 111, 112, 118, 195, 199, 200, 207, 213, 218, 219, 234, 235, 237, 238, 239, 240, 243, 244, 245, 252, 255, 267, 298, 301, 302, 319, 321, 322, 326, 327, 343, 351, 356, 359, 364, 367, 370, 378, 379, 385, 389, 390, 392, 394, 400, 423, 424, 425, 427, 432, 433, 434, 435, 437, 438, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 494, 495, 496, 497], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 255, 263, 264, 385, 386, 389], "said": 16, "high": [16, 20, 41, 425, 427, 429], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 145, 319, 322, 324, 326, 327, 328, 401, 402, 403, 404, 457, 495, 496, 497, 499], "trainer": [16, 53, 55, 457], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 478, 488, 489], "offer": [16, 42], "strongli": [17, 18, 457, 463], "welcom": [17, 18, 457, 463], "absolut": [17, 195, 196, 356, 372], "skill": 17, "whether": [17, 18, 33, 35, 36, 82, 83, 90, 91, 112, 118, 126, 132, 133, 134, 144, 145, 164, 165, 176, 180, 181, 184, 185, 189, 192, 194, 195, 225, 255, 256, 259, 260, 267, 270, 274, 276, 282, 284, 286, 289, 290, 291, 292, 293, 294, 295, 307, 311, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 343, 351, 356, 361, 401, 402, 403, 404, 405, 406, 407, 411, 415, 416, 417, 418, 425, 426, 454, 455, 456, 467, 468, 478, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 93, 94, 102, 103, 145, 160], "aspect": [17, 41, 335, 341, 457], "guid": [17, 18, 19, 27, 457], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 195, 203], "journei": [17, 457, 463], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 457], "split": [17, 19, 37, 38, 55, 145, 154, 170, 171, 172, 173, 187, 188, 189, 255, 295, 385, 457], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 437, 438, 439, 441], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 93, 104, 108, 109, 195, 205, 210, 213, 245, 356, 359, 360, 377, 385, 389, 390, 437, 438, 439, 442, 443, 457], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 255, 295], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 405, 416], "finish": [17, 18, 22, 457], "dive": [17, 19, 20, 37, 40, 41, 55, 457], "right": [17, 18, 19, 22, 25, 41, 195, 207, 209, 356, 374], "environ": [17, 19, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 255, 296], "doc": [17, 20, 24, 36, 38, 41, 42, 457], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 401, 402, 403, 404, 457], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 255, 257, 445, 452, 457], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 463], "toward": [18, 38, 385, 394, 457, 463], "page": [18, 19, 39, 43, 53, 457, 463], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 457, 463], "main": [18, 21, 30, 32, 93, 98, 108, 109, 356, 360, 377], "prefer": [18, 32], "mode": [18, 25, 32, 55, 90, 91, 145, 174, 175, 176, 177, 189, 195, 199, 239, 356, 371], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 405, 406, 407, 415, 416, 417], "submodul": [18, 19, 20, 21, 26, 27, 28, 34, 37, 38, 42, 457, 492, 493, 500, 501], "com": 18, "unifyai": [18, 21], "http": [18, 24, 195, 200, 210, 211, 213, 219, 319, 321, 322, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 145, 164, 490, 491], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 112, 118], "familiar": [18, 20], "decid": [18, 405, 416], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 457], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 494, 498], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 71, 78, 195, 423, 424, 457, 463, 492, 493], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 255, 276, 335, 337, 338, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 145, 154, 255, 289, 301, 302, 319, 321, 322, 324, 326, 327, 328, 343, 353, 401, 402, 403, 405, 412, 413, 421, 422, 467, 468, 494, 495, 496, 497, 498, 499], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 195, 200, 210, 211, 213, 219, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447, 478, 487], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 255, 289], "align": [18, 38, 40, 457, 463], "accord": [18, 21, 28, 33, 112, 121, 128, 195, 199, 209, 239, 255, 277, 301, 302, 356, 378, 385, 388, 400, 445, 451, 453], "stabl": [18, 38, 55, 255, 280, 281, 303, 304, 309, 310, 442, 443, 444], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 145, 195, 218], "pip": [18, 54, 457], "instal": [18, 21, 54, 457], "abil": [18, 39, 55], "certain": [18, 55, 93, 94, 102, 103], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 255, 317], "track": [18, 19, 145, 405, 417, 490, 491], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 145, 154, 319, 321, 322, 326, 401, 402, 403, 404, 478, 489, 490, 491], "command": [18, 19, 21, 457], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 75, 76, 90, 91, 255, 257, 356, 361, 371, 374, 437, 438, 439], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 82, 84, 85, 86, 87, 92, 93, 101, 104, 107, 110, 111, 145, 164, 167, 183, 190, 195, 199, 200, 205, 209, 210, 211, 213, 217, 219, 221, 222, 226, 237, 238, 240, 245, 252, 255, 259, 260, 267, 274, 277, 307, 313, 315, 335, 338, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 363, 367, 369, 374, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 398, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 452, 454, 455, 457], "8": [18, 21, 25, 32, 37, 41, 82, 86, 145, 167, 195, 199, 205, 211, 213, 222, 237, 238, 245, 255, 260, 277, 335, 338, 343, 350, 356, 358, 359, 360, 369, 376, 381, 382, 385, 386, 390, 392, 395, 425, 426, 427, 432, 436, 437, 438, 445, 446, 457, 478, 489], "activ": [18, 19, 21, 23, 42, 83, 84, 85, 86, 87, 88, 89, 457, 465, 466], "setup": 18, "click": [18, 24, 457], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 145, 190, 195, 234, 235, 432, 436, 437, 438, 439, 441, 445, 447, 448, 449], "left": [18, 25, 33, 195, 207, 356, 361, 365, 374, 432, 433, 457], "panel": 18, "select": [18, 19, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 405, 406, 415, 416], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 90, 91, 195, 249, 356, 361, 385, 397, 467, 468], "cmd": [18, 21], "directori": [18, 19, 21, 255, 306], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 255, 306, 490, 491], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 93, 104, 108, 109, 195, 199, 200, 205, 210, 211, 213, 219, 239, 245, 252, 255, 277, 343, 346, 355, 356, 359, 360, 361, 377, 385, 389, 390, 394, 423, 424, 425, 427, 437, 438, 439, 442, 443, 445, 447, 450, 451, 452], "m": [18, 19, 21, 22, 38, 93, 104, 108, 109, 255, 260, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 377, 425, 428, 429], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 19, 21], "OR": [18, 19, 21, 195, 208, 235, 454, 456], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 145, 179], "os": 18, "note": [18, 19, 23, 24, 25, 32, 195, 244, 356, 361, 374, 385, 397, 437, 439, 445, 448], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 457], "ivy_test": [18, 19], "test_array_api": [18, 19, 26, 27], "cd": [18, 19, 21], "r": [18, 255, 260, 317, 356, 371, 380], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 195, 218], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 145, 190, 195, 199, 255, 271, 272, 273, 423, 424, 478, 488], "yet": [18, 20, 32], "particular": [18, 23, 35, 195, 196], "system": [18, 55, 356, 373], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 457], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 255, 316], "deploy": 18, "top": [18, 19, 27, 41, 42, 457], "press": [18, 41, 457], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 356, 365, 432, 433], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 255, 270], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 93, 99, 437, 438, 439, 441], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 93, 104, 255, 263, 264, 343, 351, 356, 365, 379, 478, 486], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 255, 260], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 93, 94, 95, 96, 104, 105, 106, 110, 112, 119, 145, 154, 155, 164, 166, 167, 170, 171, 174, 175, 189, 255, 260, 308, 313, 317, 335, 341, 343, 344, 345, 346, 347, 348, 349, 350, 356, 376, 385, 387, 390, 395, 397, 405, 406, 407, 411, 416, 417, 423, 424, 432, 435, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485], "dev": [18, 28, 34, 38, 40, 42, 145, 154, 179], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 145], "post": [18, 43, 423, 424, 457, 463], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 82, 85, 145, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 264, 275, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 425, 427, 432, 433, 442, 443, 444, 454, 455, 456], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 457], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 145, 174, 175, 176, 177, 189, 255, 272, 401, 402, 403, 404, 405, 411, 425, 428, 437, 438, 445, 457, 469], "configur": [18, 19, 21, 33, 145, 188, 405, 418], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 195, 239, 244, 255, 298, 356, 358, 361, 373, 425, 427, 445, 447, 448, 449], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 457], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 356, 359, 385, 389, 390, 394, 437, 438, 439, 442, 443, 445, 447], "theme": 18, "too": [18, 19, 55, 195, 199, 239], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 112, 129, 130], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 343, 353], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 343, 354, 457, 478, 489], "pane": [18, 19], "readi": [18, 20], "begin": [18, 405, 406, 416], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 19, 503, 504], "dropdown": 18, "tab": [18, 41, 457], "master": [18, 19, 32], "vs": 18, "view": [18, 93, 99, 343, 346, 350], "log": [18, 28, 32, 35, 38, 41, 93, 103, 195, 230, 232, 356, 372, 457], "built": [18, 39, 93, 94, 145, 478, 489, 490, 491], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 195, 205, 245, 343, 346, 356, 360, 369, 376, 385, 392, 394, 425, 427, 432, 435, 437, 438, 445, 446], "minut": 18, "launch": 18, "12": [18, 25, 32, 195, 205, 210, 213, 245, 255, 267, 281, 356, 360, 369, 376, 385, 390, 392, 394, 423, 424, 425, 427, 432, 436, 437, 438, 445, 446], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 82, 85, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 110, 111, 145, 154, 155, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 262, 264, 268, 275, 277, 319, 323, 343, 345, 347, 349, 351, 353, 354, 355, 356, 377, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 399, 405, 418, 423, 424, 425, 427, 428, 429, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489], "That": [18, 19, 40, 41, 42, 195, 244], "alreadi": [18, 19, 29, 32, 36, 40, 55, 145, 195, 211, 219, 239, 245, 254, 356, 369, 457], "refer": [18, 19, 27, 28, 33, 36, 55, 93, 98, 195, 218, 230, 319, 321, 322, 356, 378, 380, 445, 451, 453, 454, 455, 456, 478, 488], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 343, 354, 355, 405, 411, 417], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 457], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 343, 349, 350, 356, 369, 445, 446, 457, 478, 489], "bit": [18, 25, 28, 31, 32, 40, 112, 127, 128, 131, 195, 206, 207, 209, 335, 337, 342, 445, 450, 452], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 93, 94, 112, 119, 195, 218, 356, 364, 385, 390, 437, 438, 439, 441, 457], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 234, 235, 244, 245, 252, 255, 277, 343, 346, 355, 356, 359, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447, 448, 457], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 82, 83, 84, 85, 86, 87, 88, 89, 112, 136, 255, 271, 272, 273, 319, 326, 327, 343, 352, 354, 355, 356, 367, 370, 381, 382, 383, 384, 385, 397, 401, 402, 403, 405, 411, 414, 417, 418, 423, 424, 457, 464, 465, 466, 492, 493], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 145], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 457], "server": [19, 457], "appropri": [19, 30, 195, 199, 239, 432, 433], "context": [19, 25, 32, 33, 34, 145, 255, 296, 343, 354, 478, 489], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 112, 118, 195, 199, 239, 255, 289, 319, 325, 330], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 112, 140, 385, 386, 445, 451, 453, 457], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 90, 93, 94, 102, 103, 195, 200, 210, 211, 213, 219, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 325, 385, 389, 394, 425, 426, 427, 429, 430, 437, 438, 439, 442, 443, 445, 447, 457, 494, 498], "land": 19, "end": [19, 32, 35, 37, 54, 55, 93, 94, 195, 203, 457, 463], "world": 19, "come": [19, 20, 42, 53, 457, 463], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 145, 154, 155, 255, 258, 295, 478, 488], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 381, 382, 383, 384], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 356, 360, 364, 377, 385, 396, 401, 402, 403], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 255, 261, 270, 274, 405, 415], "strive": [19, 55], "repli": 19, "newli": [19, 35, 90, 91, 112, 118, 255, 262], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 110, 111, 145, 190, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 255, 277, 287, 288, 289, 343, 346, 355, 356, 359, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447, 494, 495, 496, 497, 498, 499], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 457], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 405, 417], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 145, 170, 171, 174, 175, 176, 177, 356, 360, 385, 395, 401, 402, 403, 404, 457], "mark": [19, 27], "ii": [19, 445, 446], "iii": 19, "titl": [19, 457], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 457, 463], "partial": [19, 490, 491], "solut": [19, 27, 32, 356, 373], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 93, 100, 101, 255, 256], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 82, 85, 93, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 145, 157, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 264, 275, 278, 282, 298, 301, 302, 308, 335, 338, 340, 341, 343, 345, 346, 347, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 425, 427, 428, 429, 432, 433, 435, 442, 443, 444, 445, 446, 454, 455, 456, 457, 478, 480, 481, 482, 483, 484, 485, 492, 493], "move": [19, 23, 145, 190], "within": [19, 27, 42, 55, 93, 94, 425, 429], "7": [19, 21, 25, 28, 32, 35, 82, 84, 85, 145, 167, 195, 199, 205, 206, 210, 211, 213, 217, 219, 222, 237, 238, 245, 252, 255, 260, 267, 277, 319, 321, 322, 326, 335, 338, 342, 343, 349, 350, 355, 356, 358, 359, 360, 369, 376, 381, 382, 383, 384, 385, 386, 389, 390, 392, 395, 398, 423, 424, 425, 426, 427, 428, 429, 432, 436, 437, 438, 445, 446, 447], "dai": 19, "close": [19, 24, 195, 218, 245, 335, 341, 356, 374], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 145, 164, 319, 325], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 195, 218, 457], "remain": [19, 25, 55, 195, 199, 239, 244, 385, 393, 405, 411], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 343, 353], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 93, 108, 109, 112, 118, 145], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 319, 321, 322, 326, 445, 452, 494, 495, 496], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 112, 128, 131, 255, 263, 264, 385, 386], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 356, 357, 358], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 90, 91, 195, 203], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 195, 218], "role": [19, 39], "kept": [19, 35, 401, 402, 403], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 195, 249, 425, 426, 428, 429], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 445, 450, 452], "clone": [19, 21, 145, 166, 167, 168, 169], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 112, 135, 195, 199, 200, 211, 219, 243, 252, 255, 277, 343, 346, 355, 356, 358, 364, 378, 385, 394, 423, 424, 445, 447], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 24, 25, 26, 28, 31, 32, 33, 36, 112, 119, 195, 203, 243, 356, 358, 361, 373, 385, 387, 394, 425, 426, 432, 433, 434, 437, 438, 439, 441, 445, 450, 451, 452, 453], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 24, 32, 36, 40], "atlassian": 19, "tutori": 19, "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 255, 273, 385, 399], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 356, 364], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 93, 102, 103, 255, 276, 478, 489], "tickbox": 19, "lower": [19, 25, 38, 55, 93, 98, 108, 195, 237, 356, 357, 425, 429], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 255, 300, 305, 385, 393, 405, 407, 437, 438, 439, 441], "span": 19, "intent": [19, 35], "larg": [19, 41, 195, 199, 239], "discourag": 19, "philosophi": 19, "increment": [19, 255, 288], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 457], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 145, 343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "style": [19, 432, 435], "ve": [19, 37, 40, 425, 426, 457], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 93, 108, 109, 319, 322, 324, 326, 327, 328, 490, 491], "subsect": 19, "filepath": 19, "interact": [19, 457], "session": [19, 457], "block": [19, 28, 37, 39, 43, 55, 145, 457], "smaller": [19, 38, 43, 385, 386, 394, 445, 450, 452], "edit": 19, "exact": [19, 38, 437, 438], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 437, 438, 439, 441], "undo": 19, "stress": 19, "frequenc": [19, 255, 276], "pycharm": 19, "pytest": [19, 27], "button": 19, "declar": 19, "insid": [19, 21, 23, 33], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 27], "test_funct": 19, "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 112, 123, 124, 125, 137, 138, 139, 145, 158, 159, 255, 265, 269, 283, 319, 329, 334], "q": [19, 55, 343, 355, 356, 361, 371], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 335, 341, 343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "wherebi": [20, 32, 405, 417], "broad": 20, "distribut": [20, 34, 55, 145, 166, 170, 171, 172, 173, 343, 351, 381, 382, 383, 384, 425, 426, 427, 428, 429, 478, 486, 490, 491], "across": [20, 25, 27, 28, 32, 33, 36, 145, 154, 155, 166, 167, 169, 170, 171, 172, 173, 177, 187, 188, 255, 259, 260, 405, 411, 432, 434], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 195, 234], "static": [20, 24, 25, 28, 55, 90, 91], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 82, 84, 85, 86, 87, 88, 89, 93, 99, 104, 195, 200, 205, 210, 211, 213, 219, 222, 237, 238, 240, 245, 255, 265, 266, 277, 301, 302, 313, 315, 319, 326, 327, 343, 349, 355, 356, 358, 359, 381, 382, 384, 385, 389, 390, 392, 395, 398, 405, 406, 416, 417, 418, 423, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 454, 455, 457, 478, 489, 490, 491], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 82, 84, 85, 86, 87, 88, 89, 93, 104, 145, 154, 186, 195, 199, 200, 205, 210, 211, 213, 219, 222, 237, 238, 240, 245, 252, 255, 266, 277, 289, 313, 315, 343, 346, 349, 355, 356, 358, 359, 381, 382, 384, 385, 389, 390, 392, 394, 395, 398, 423, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 454, 455, 467, 468], "revers": [20, 24, 25, 43, 55, 255, 270, 385, 390], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 112, 135, 401, 402, 403, 425, 426, 457, 500, 501], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 494, 497, 499], "direct": [20, 42, 43, 54, 442, 444], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 217, 218, 219, 228, 229, 231, 232, 239, 243, 244, 245, 246, 247, 248, 249, 252, 254, 445, 447, 448, 449, 451, 452, 453], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 457], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 255, 277, 343, 346, 355, 356, 359, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447], "its": [20, 21, 24, 112, 119, 145, 189, 356, 364, 385, 389, 393, 394, 398], "docstr": [20, 21, 22, 23, 28, 32, 36, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 356, 359, 385, 389, 390, 394, 437, 438, 439, 442, 443, 445, 447], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 457, 463], "builder": [21, 53, 55, 457], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 319, 322, 324, 326, 327, 328, 356, 360, 367, 370, 377, 385, 390, 394, 442, 443, 444, 457], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 195, 200, 210, 211, 213, 219, 319, 321, 322, 356, 380, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "indic": [21, 39, 43, 82, 87, 195, 246, 255, 277, 278, 285, 298, 301, 302, 343, 344, 345, 346, 347, 348, 349, 350, 356, 379, 385, 394, 405, 406, 408, 410, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 435, 437, 438, 440, 442, 443, 444, 457, 460, 462, 478, 479, 480, 481, 482, 483, 484, 485, 490, 491], "privat": [21, 494, 498], "fulfil": [21, 37, 457], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 112, 126, 145, 165, 445, 446, 457], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 255, 265, 405, 418], "rst": 21, "skip": [21, 27, 405, 418], "read": [21, 457], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 93, 95, 99, 112, 118, 145, 190, 255, 266, 314, 315, 385, 393, 405, 407, 442, 444], "5": [21, 25, 29, 36, 40, 41, 42, 82, 84, 85, 87, 93, 101, 104, 107, 110, 111, 145, 167, 183, 188, 195, 199, 200, 204, 205, 209, 210, 211, 213, 219, 222, 237, 238, 240, 245, 252, 255, 260, 267, 277, 313, 335, 338, 339, 343, 346, 348, 349, 355, 356, 357, 358, 359, 360, 363, 369, 376, 377, 381, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 398, 423, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 454, 455, 478, 489], "create_rst_fil": 21, "filter": [21, 343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "repres": [21, 40, 93, 104, 112, 127, 195, 198, 199, 201, 204, 213, 239, 248, 343, 352, 356, 372, 373], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 82, 84, 85, 87, 93, 101, 145, 167, 183, 195, 199, 200, 205, 206, 210, 211, 213, 219, 222, 237, 238, 240, 245, 252, 255, 260, 267, 277, 313, 335, 338, 343, 346, 349, 350, 355, 356, 358, 359, 360, 369, 374, 376, 381, 382, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 398, 423, 424, 425, 426, 427, 432, 433, 436, 437, 438, 439, 445, 446, 447], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 195, 207, 356, 360, 364], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 195, 199, 205, 206, 237, 238, 245, 255, 277, 319, 321, 322, 326, 343, 346, 349, 350, 356, 358, 359, 360, 369, 374, 376, 385, 386, 390, 394, 395, 425, 426, 427, 432, 436, 437, 438, 445, 446, 494, 495, 496], "index": [21, 28, 32, 40, 92, 93, 98, 104, 255, 257, 277, 278, 385, 397, 405, 408, 409, 412, 413, 414, 419, 421, 432, 433, 434, 435, 437, 438, 439, 442, 443, 460, 462], "create_index_rst": 21, "14": [21, 25, 32, 195, 210, 343, 355, 356, 360, 369, 385, 392, 437, 438, 445, 446], "\u03c0": [21, 195, 197, 200, 202, 203], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 145, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 457], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 319, 322, 324, 326, 327, 328], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 112, 136, 145, 183, 195, 205, 210, 222, 237, 238, 255, 266, 274, 277, 313, 314, 315, 343, 346, 349, 350, 355, 356, 376, 381, 382, 384, 385, 386, 423, 424, 432, 436, 445, 446, 448], "nestabl": [22, 24, 25, 27, 35, 195, 199, 200, 211, 219, 252, 255, 277, 343, 346, 355, 385, 394, 423, 424, 445, 447], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 255, 262, 319, 333], "dynam": [22, 33, 34, 35, 38, 90, 91], "runtim": [22, 27, 145], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 90, 91, 145, 161, 162, 163, 164, 165, 179, 183, 184, 191, 194, 319, 322, 324, 326, 327, 328, 494, 495, 496, 497, 498, 499], "h": [22, 32, 335, 336, 337, 338, 340, 342, 343, 346, 347, 348, 349, 350], "inplac": [22, 25, 30, 31, 36, 40, 42, 255, 261, 286, 289, 290, 311, 319, 322, 324, 326, 327, 328, 467, 468, 494, 495, 496, 497, 498, 499], "j": [22, 255, 259, 260, 356, 377, 445, 446], "k": [22, 38, 71, 72, 73, 93, 98, 108, 109, 255, 259, 343, 355, 356, 364, 371, 373, 374, 375, 377, 425, 428, 429, 432, 435], "l": [22, 356, 357, 361, 364, 377], "borrow": 22, "n": [22, 93, 104, 108, 109, 255, 260, 343, 351, 356, 360, 364, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 385, 388, 389, 391, 397, 400, 425, 428, 429, 432, 435, 445, 448, 451, 452, 453, 454, 455, 456], "taken": [23, 43, 356, 360], "constant": [23, 28, 42, 43, 55, 145, 154, 155, 385, 388, 405, 411, 423, 424, 469, 470, 474, 477, 490, 491, 492, 493], "creation": [23, 33, 34, 38, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "data_typ": [23, 33, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "elementwis": [23, 28, 38, 43, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "linear_algebra": [23, 40, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "sort": [23, 356, 361, 374, 375, 443], "statist": [23, 33, 446, 447, 448, 449, 450, 451, 452, 453], "util": [23, 34, 145, 178, 455, 456], "compil": [23, 32, 37, 39, 55, 457, 490, 491, 494, 495, 496, 497, 498, 499], "gradient": [23, 32, 41, 42, 54, 55, 145, 189, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 401, 402, 403, 404, 457, 494, 495, 496, 497, 498, 499], "loss": [23, 28, 41, 42, 43, 382, 383, 384, 457], "meta": [23, 402, 403, 404], "nest": [23, 28, 32, 40, 41, 42, 55, 145, 169, 173, 177, 255, 313, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 490, 491, 494, 495, 496, 497, 498, 499], "norm": [23, 255, 263, 264, 356, 365, 379, 424, 457, 493, 494, 496], "random": [23, 34, 43, 54, 426, 427, 428, 429, 430, 431, 457], "overlap": 23, "sever": [23, 55, 356, 363], "judgement": 23, "locat": [23, 27, 29, 34, 425, 426], "matmul": [23, 29, 38, 356, 374, 457], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 457], "anyth": [23, 457], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 405, 406, 415, 416], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 178, 184, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 263, 264, 267, 268, 271, 272, 273, 275, 276, 277, 278, 282, 284, 285, 289, 298, 301, 302, 307, 308, 313, 314, 315, 317, 318, 319, 321, 322, 324, 326, 327, 328, 332, 335, 339, 341, 342, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 416, 417, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 118, 119, 120, 126, 128, 131, 133, 134, 136, 140, 145, 164, 165, 167, 183, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 263, 264, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 282, 284, 285, 289, 298, 301, 302, 307, 313, 314, 315, 317, 318, 319, 321, 322, 324, 326, 327, 328, 332, 335, 339, 341, 342, 343, 344, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 417, 423, 424, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456], "ax": [23, 25, 33, 40, 145, 189, 255, 267, 356, 365, 373, 376, 379, 385, 388, 390, 391, 394, 396, 398, 400, 432, 433, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 82, 87, 90, 91, 93, 96, 98, 100, 101, 102, 103, 106, 108, 109, 110, 112, 120, 125, 127, 128, 131, 134, 145, 167, 170, 171, 172, 173, 181, 182, 183, 189, 190, 195, 205, 206, 207, 208, 209, 210, 255, 257, 267, 268, 271, 272, 273, 276, 277, 282, 298, 301, 302, 307, 308, 317, 319, 321, 322, 326, 335, 339, 341, 343, 344, 346, 348, 349, 350, 356, 358, 360, 376, 377, 378, 379, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 405, 417, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 90, 91, 93, 95, 96, 100, 105, 106, 110, 112, 120, 130, 145, 164, 255, 276, 308, 335, 341, 343, 346, 349, 350, 356, 367, 370, 374, 376, 379, 385, 387, 388, 390, 391, 394, 396, 397, 400, 405, 407, 408, 410, 412, 413, 414, 416, 417, 419, 420, 421, 422, 425, 428, 429, 432, 435, 437, 438, 439, 440, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "dtype": [23, 25, 28, 33, 34, 40, 71, 72, 73, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 110, 111, 112, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 179, 185, 195, 200, 209, 213, 240, 245, 255, 259, 260, 298, 335, 338, 343, 351, 385, 389, 423, 424, 425, 429, 432, 433, 434, 442, 444, 445, 450, 451, 452, 454, 455, 457, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 500, 501], "nativedtyp": [23, 33, 34, 36, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 110, 111, 112, 117, 118, 124, 125, 126, 135, 445, 452], "nativedevic": [23, 33, 34, 36, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 145, 162, 163, 164, 178, 184, 186, 188, 190, 191, 194, 255, 277, 278, 298, 301, 302, 425, 426, 427, 428, 429], "my": 23, "nan": [23, 24, 92, 112, 118, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 217, 218, 219, 223, 225, 228, 229, 231, 232, 239, 243, 244, 245, 247, 248, 249, 252, 254, 255, 284, 318, 437, 438, 439, 441, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456], "y": [23, 25, 29, 32, 38, 40, 82, 84, 85, 86, 87, 88, 89, 93, 100, 101, 104, 106, 107, 111, 112, 118, 145, 165, 179, 183, 188, 195, 199, 200, 203, 205, 206, 209, 210, 211, 212, 213, 217, 219, 222, 237, 238, 240, 245, 252, 255, 259, 260, 266, 267, 274, 275, 277, 313, 314, 315, 319, 323, 335, 339, 342, 343, 349, 350, 352, 356, 357, 358, 359, 363, 369, 376, 377, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 398, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 445, 446, 447, 451, 452, 454, 455], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 99, 101, 104, 105, 107, 108, 109, 111, 112, 118, 119, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 140, 145, 154, 155, 164, 165, 166, 167, 169, 170, 173, 177, 183, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 307, 308, 311, 313, 314, 315, 317, 318, 319, 323, 325, 330, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493], "numer": [23, 42, 93, 104, 112, 118, 195, 196, 199, 211, 214, 218, 219, 220, 223, 224, 225, 226, 234, 235, 239, 240, 241, 243, 244, 246, 251, 254, 255, 280, 281, 303, 304, 309, 310, 356, 358, 364, 369, 374, 376, 377, 378, 425, 431, 432, 433, 434, 445, 447, 450, 452, 469], "along": [23, 35, 93, 102, 103, 145, 170, 171, 172, 173, 174, 175, 176, 177, 189, 255, 267, 268, 277, 317, 335, 339, 356, 365, 377, 378, 379, 381, 383, 384, 385, 387, 390, 392, 394, 395, 397, 399, 401, 402, 403, 404, 425, 431, 432, 433, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 82, 85, 93, 94, 112, 136, 145, 154, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 264, 268, 275, 277, 301, 302, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 360, 365, 374, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 405, 418, 423, 424, 425, 427, 432, 433, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "broadcast": [23, 24, 25, 32, 33, 82, 85, 112, 119, 120, 145, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 264, 275, 356, 364, 365, 367, 370, 373, 378, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 425, 427, 432, 433, 434, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 93, 104, 145, 154, 155, 169, 173, 177, 255, 258, 295, 405, 411, 445, 452, 490, 491], "produc": [23, 145, 154, 155, 343, 355], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 68, 71, 75, 78, 195, 200, 437, 438, 439, 442, 443, 457], "firstli": [24, 25, 28, 31, 33, 35, 41], "templat": [24, 457], "spec": [24, 25], "api_specif": [24, 195, 200, 210, 211, 213, 219, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 457], "approxim": [24, 82, 83, 195, 197, 198, 200, 201, 202, 203, 212, 213, 217, 218, 228, 229, 230, 231, 243, 247, 248, 252, 356, 367, 370], "tangent": [24, 82, 89, 195, 202, 203, 204, 252, 253], "domain": [24, 195, 197, 198, 200, 201, 202, 203, 212, 213, 217, 218, 228, 229, 231, 247, 248, 249, 252], "infin": [24, 92, 112, 118, 195, 196, 198, 199, 201, 202, 203, 211, 212, 213, 217, 218, 219, 220, 223, 224, 228, 229, 231, 232, 239, 243, 244, 245, 247, 248, 249, 252, 254, 356, 379, 445, 447, 449, 454, 455, 456], "codomain": [24, 195, 197, 198, 200, 201, 202, 203, 212, 213, 217, 218, 228, 229, 231, 247, 248, 249, 252], "element": [24, 38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 100, 101, 108, 109, 145, 168, 172, 176, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 263, 264, 267, 268, 275, 285, 314, 315, 343, 351, 356, 358, 361, 364, 371, 374, 385, 386, 390, 392, 394, 395, 396, 425, 426, 432, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 486], "x_i": [24, 195, 196, 197, 198, 200, 201, 202, 206, 211, 212, 213, 217, 218, 219, 223, 224, 225, 228, 229, 231, 234, 240, 245, 246, 247, 248, 249, 250, 252, 254, 437, 438, 439, 441, 445, 447, 448, 449, 451, 452, 453], "assum": [24, 29, 33, 40, 41, 55, 93, 104, 195, 199, 200, 205, 210, 211, 212, 213, 219, 245, 247, 252, 255, 277, 343, 346, 355, 356, 359, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447], "express": [24, 38, 43, 195, 197, 200, 202, 203, 212, 247, 252], "radian": [24, 195, 197, 200, 202, 203, 212, 247, 252], "float": [24, 28, 32, 33, 35, 36, 40, 42, 82, 84, 92, 93, 94, 96, 98, 100, 101, 102, 103, 106, 110, 112, 118, 124, 128, 133, 136, 145, 178, 184, 188, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 231, 232, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 254, 255, 263, 264, 276, 280, 281, 303, 304, 309, 310, 319, 321, 322, 324, 326, 327, 328, 335, 337, 342, 343, 346, 350, 355, 356, 357, 359, 361, 362, 363, 367, 370, 371, 373, 374, 379, 381, 382, 383, 384, 423, 424, 425, 428, 429, 437, 438, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453], "operand": [24, 195, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 217, 218, 219, 228, 229, 231, 232, 239, 243, 244, 245, 247, 248, 249, 252, 254, 445, 446, 447, 449, 452], "whose": [24, 93, 108, 109, 195, 198, 201, 204, 212, 213, 243, 247, 248, 252, 255, 262, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374, 375, 377, 385, 390, 394, 437, 438, 439, 445, 446], "ref": [24, 195, 209, 226, 239, 241, 244, 251, 385, 397], "promot": [24, 28, 33, 112, 118, 121, 135, 136, 140, 195, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 217, 218, 228, 229, 231, 232, 236, 239, 243, 244, 247, 248, 249, 252, 356, 357, 358, 363, 364, 367, 369, 370, 373, 378, 379, 385, 397, 445, 448], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 457], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 93, 104, 195, 199, 200, 205, 210, 211, 213, 218, 219, 245, 252, 356, 359, 385, 389, 390, 394, 437, 438, 439, 442, 443, 445, 447], "org": [24, 195, 200, 210, 211, 213, 219, 319, 321, 322, 385, 389, 394, 437, 438, 439, 442, 443, 445, 447], "elementwise_funct": [24, 195, 200, 210, 211, 213, 219, 385, 394, 437, 438, 439, 442, 443, 445, 447], "descript": [24, 32, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 255, 277, 343, 346, 355, 356, 359, 379, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447], "simplic": [24, 42, 54, 93, 104, 195, 199, 200, 205, 210, 211, 213, 219, 245, 252, 255, 277, 343, 346, 355, 356, 359, 385, 389, 390, 394, 423, 424, 437, 438, 439, 442, 443, 445, 447], "judgment": 24, "beyond": [24, 385, 394], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 112, 120, 255, 261, 270, 289, 316, 356, 370, 385, 387, 397, 432, 435, 454, 455, 456], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 405, 406], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 385, 397, 405, 406, 407, 415, 416, 417], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 82, 83, 84, 85, 255, 276, 335, 339, 343, 351, 373, 457, 478, 479, 480, 481, 482, 483, 484, 485], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 255, 261, 287, 288, 289, 290, 291, 292, 294, 311, 319, 322, 323, 324, 325, 326, 327, 328, 330, 333, 343, 354, 356, 373, 401, 402, 403, 404, 423, 424, 457, 467, 468, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "store": [24, 29, 31, 32, 38, 40, 41, 42, 255, 276, 319, 333, 356, 377, 385, 395, 490, 491], "intern": [24, 31, 32, 34, 35, 145, 319, 333, 405, 406, 415, 416, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 500, 501], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 490, 491, 494, 498], "_forward": [24, 38, 41, 42, 457], "former": 24, "trainabl": [24, 39, 41, 42, 319, 325, 467, 468, 490, 491, 500], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 356, 361, 478, 487, 489, 490, 491], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 112, 128, 129, 130, 131, 145, 185], "docst": 24, "after": [25, 32, 33, 37, 112, 140, 195, 249, 319, 322, 323, 324, 326, 327, 328, 335, 336, 339, 423, 424, 494, 495, 496, 497, 498, 499], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 195], "multipli": [25, 29, 31, 195, 255, 267], "divid": [25, 31, 195, 220, 255, 309, 385, 395], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 93, 104, 195, 196, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 222, 226, 227, 232, 233, 235, 236, 239, 241, 244, 251, 319, 321, 322, 323, 324, 326, 327, 328, 356, 371, 401, 402, 403, 404], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 356, 358, 373, 425, 426], "combinatorili": 25, "equal": [25, 32, 33, 93, 98, 100, 101, 112, 118, 195, 207, 209, 223, 224, 243, 245, 255, 256, 259, 260, 356, 360, 367, 370, 385, 386, 388, 395, 400, 425, 429, 437, 438, 439, 441, 442, 443, 444, 445, 448, 451, 452, 453], "maximum": [25, 38, 41, 43, 145, 169, 173, 177, 189, 195, 255, 263, 264, 276, 319, 326, 385, 386, 405, 417, 432, 433, 445, 447, 449, 457], "variat": [25, 27], "grid": [25, 27, 54, 93, 104], "vari": [25, 27, 32, 40, 437, 438, 439, 441], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 93, 94, 98, 100, 101, 102, 103, 112, 118, 123, 124, 125, 145, 157, 188, 189, 195, 196, 197, 199, 200, 202, 211, 215, 216, 219, 220, 221, 222, 226, 227, 237, 238, 239, 241, 242, 243, 245, 254, 255, 263, 264, 265, 270, 276, 277, 278, 283, 286, 290, 300, 301, 302, 303, 304, 305, 318, 319, 321, 322, 323, 326, 330, 334, 335, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 367, 370, 371, 372, 373, 374, 375, 379, 385, 386, 388, 392, 393, 400, 401, 402, 403, 405, 409, 410, 411, 412, 413, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 498], "simplest": 25, "small": [25, 28, 38, 42, 55, 195, 239, 356, 367, 370, 423, 424, 492, 493], "dimens": [25, 38, 41, 82, 87, 93, 108, 109, 145, 176, 255, 271, 272, 273, 276, 282, 298, 317, 335, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 425, 431, 432, 433, 434, 435, 437, 438, 439, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489], "unus": [25, 35, 90, 91], "highlight": 25, "extra": [25, 30, 31, 38, 319, 323], "18": [25, 32, 195, 210, 356, 360, 369, 445, 446], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 145, 157, 490, 491, 494, 495, 496, 497, 499], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 425, 428, 437, 438, 445], "prod": [25, 33, 255, 272, 445], "var": [25, 38, 401, 402, 403, 445], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 90, 91, 93, 100, 112, 118, 121, 123, 124, 125, 126, 129, 132, 133, 134, 144, 145, 164, 165, 180, 189, 192, 195, 205, 206, 208, 210, 215, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 241, 255, 256, 259, 260, 267, 270, 274, 276, 282, 284, 289, 291, 292, 293, 294, 307, 317, 318, 319, 330, 356, 357, 365, 374, 379, 385, 395, 405, 406, 407, 411, 415, 416, 417, 425, 426, 432, 433, 434, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 71, 72, 73, 82, 83, 90, 91, 93, 102, 112, 118, 121, 145, 164, 181, 185, 195, 205, 221, 222, 223, 224, 225, 226, 234, 235, 255, 256, 259, 260, 261, 262, 267, 274, 276, 284, 285, 292, 307, 313, 315, 318, 319, 322, 324, 325, 326, 327, 328, 330, 343, 351, 356, 357, 365, 374, 379, 381, 382, 383, 384, 385, 395, 401, 402, 403, 404, 405, 406, 415, 416, 418, 425, 426, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 478, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 82, 87, 93, 102, 103, 145, 147, 150, 157, 170, 171, 172, 173, 174, 175, 176, 177, 189, 255, 267, 268, 277, 317, 335, 339, 356, 358, 360, 378, 379, 381, 383, 384, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 425, 431, 432, 433, 434, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "54": [25, 195, 212, 343, 355, 356, 369, 425, 428, 445, 446], "jointli": 25, "three": [25, 32, 37, 93, 104, 457], "x0": [25, 255, 259], "x1": [25, 36, 71, 72, 112, 140, 145, 183, 195, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 222, 226, 227, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 251, 255, 259, 343, 348, 356, 358, 364, 369, 373, 376, 378, 432, 436], "x2": [25, 36, 71, 72, 112, 140, 145, 183, 195, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 222, 226, 227, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 251, 343, 348, 356, 358, 364, 369, 373, 376, 378, 432, 436], "combin": [25, 27, 28, 31, 32, 43, 335, 341, 356, 358], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 343, 354, 356, 358, 457, 463, 478, 489], "seper": [25, 255, 276], "pars": [25, 55], "satisfi": [25, 356, 380], "ignor": [25, 55, 93, 104, 405, 416, 494, 498], "far": [25, 34, 39, 40, 405, 406, 416], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 356, 361, 374], "shown": [25, 36, 38, 40, 55, 93, 104, 195, 205, 210, 213, 245, 356, 359, 385, 389, 390, 437, 438, 439, 442, 443], "rule": [25, 27, 28, 31, 32, 33, 112, 118, 121, 136, 195, 204, 209, 214, 239, 244, 356, 357, 358, 369, 373], "count": [25, 41, 145, 183, 356, 378, 385, 390, 437, 438, 439, 454, 455, 456], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 195, 252, 356, 369, 445, 446], "19": [25, 195, 210, 252, 356, 360, 385, 392], "143": [25, 195, 252], "16": [25, 41, 195, 252, 343, 349, 356, 360, 369, 423, 424, 432, 436, 445, 446], "38": [25, 195, 252], "11": [25, 32, 195, 199, 205, 245, 255, 267, 277, 356, 360, 369, 385, 390, 392, 425, 427, 432, 436, 437, 438, 445, 446], "13": [25, 32, 195, 205, 210, 213, 255, 267, 343, 350, 355, 356, 360, 369, 385, 392, 423, 424, 432, 436, 437, 438, 445, 446], "17": [25, 32, 82, 84, 356, 360, 425, 428], "shift": [25, 36, 195, 207, 209, 385, 394], "sequenc": [25, 33, 54, 145, 154, 155, 255, 260, 295, 335, 341, 385, 395, 397, 425, 427, 445, 447, 478, 487, 492, 493, 500, 501], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 255, 267, 268, 356, 378, 385, 392, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "non": [25, 32, 33, 38, 90, 91, 112, 118, 132, 195, 234, 235, 343, 346, 356, 359, 367, 374, 376, 378, 379, 432, 433, 434, 435, 445, 447, 448, 449, 450, 453, 454, 455, 456, 490, 491, 494, 498], "static_rol": [25, 32], "float32": [25, 33, 112, 116, 117, 129, 195, 200, 213, 240, 245, 335, 338, 385, 389, 423, 424], "z": [25, 29, 32, 38, 40, 145, 179, 195, 199, 205, 210, 222, 237, 238, 255, 259, 260, 277, 356, 358, 381, 382, 383, 385, 386, 432, 433, 445, 446, 447], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 82, 83, 84, 85, 145], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 145, 154, 405, 412, 413, 417, 418, 478, 489], "collect": [27, 54, 82, 90, 145, 255, 319, 335, 343, 381, 405, 418, 423, 425, 464, 478, 492, 494], "fixtur": 27, "ones": [27, 38, 40, 41, 93, 98, 107, 195, 211, 255, 298, 335, 341, 457], "consum": [27, 32, 36, 145], "300": [27, 195, 245], "ab": [27, 30, 195, 243, 356, 379, 457], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 335, 336, 339, 343, 351, 425, 426, 428, 429, 445, 451, 453, 478, 486], "rang": [27, 41, 42, 43, 93, 94, 102, 103, 437, 438, 445, 450, 452, 457], "previou": [27, 36, 43, 55, 319, 322, 326], "cach": [27, 28, 145, 163, 255, 262], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 405, 414], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 93, 104, 112, 119, 136, 145, 174, 175, 177], "verifi": [27, 33, 34, 40, 457, 463], "truth": [27, 195, 215, 221, 222, 226, 227, 241], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 255, 284, 356, 373], "suffic": [27, 30], "catch": [27, 255, 270], "systemat": 27, "compar": [27, 41, 255, 256, 259, 260, 437, 438, 439, 441, 442, 443, 444], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 145], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 93, 94, 255, 267, 291, 292, 294, 319, 325, 425, 427], "constitut": [28, 38, 445, 451, 453], "venn": 28, "diagram": 28, "lowest": [28, 55, 405, 417, 425, 427], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 381, 384], "pred": [28, 32, 35, 381, 382, 383, 384], "epsilon": [28, 32, 35, 42, 319, 321, 322, 326, 356, 367, 370, 381, 382, 383, 384, 423, 424, 492, 493, 494, 495, 496], "1e": [28, 32, 35, 42, 43, 255, 281, 319, 321, 322, 326, 356, 374, 381, 382, 383, 384, 423, 424, 457, 494, 495, 496, 497, 499], "clip": [28, 32, 35, 38, 41, 43, 195, 237, 238, 255, 263, 264, 385, 457], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 82, 84, 93, 94, 98, 195, 223, 224, 239, 243, 244, 356, 374, 378, 379, 385, 390, 394, 454, 455, 456], "sum": [28, 32, 33, 35, 38, 145, 174, 175, 176, 177, 189, 195, 199, 232, 255, 268, 272, 301, 302, 343, 355, 356, 374, 377, 379, 445, 446, 451], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 445, 451, 453], "outsid": [28, 34, 38, 40, 43, 385, 386, 397], "cache_fn": [28, 255], "stable_divid": [28, 255], "denomin": [28, 55, 255, 275, 281, 304, 309, 310, 423, 424, 492, 493], "divis": [28, 195, 209, 214, 220, 244, 255, 275, 281, 304, 309, 310, 319, 321, 322, 326, 494, 495, 496], "leaf": [28, 32, 41, 405, 406, 415, 416], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 145, 187, 188, 255, 276, 335, 340, 343, 352, 356, 379, 401, 402, 403, 404, 423, 424, 492, 493], "concurr": [28, 32], "weight": [28, 32, 42, 43, 319, 321, 322, 324, 326, 327, 328, 343, 352, 353, 355, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 494, 496, 497], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 90, 91, 145, 190, 255, 316, 319, 321, 322, 326, 356, 364, 401, 402, 403, 404, 445, 451, 453, 490, 491, 494, 495, 496, 498], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 335, 341], "briefli": [28, 41], "can_cast": [28, 33, 112], "cast": [28, 33, 71, 72, 73, 112, 118, 121, 335, 337, 342, 385, 387, 445, 450, 452, 457], "set_default_dtyp": [28, 33, 112], "default_dtyp": [28, 33, 112], "get_all_arrays_on_dev": 28, "nested_map": [28, 405], "index_nest": [28, 405], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 195, 239, 255, 298], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 112, 116, 117, 126, 132, 144, 145, 161, 162, 163, 164, 178, 184, 190, 191, 194, 255, 269], "unmodifi": [29, 33], "loop": [29, 55, 401, 402, 403, 404], "moment": [29, 55, 319, 321, 322, 326, 494, 495, 496], "fallback": 29, "freedom": [29, 445, 451, 453], "recommend": [29, 195, 234, 235, 244, 445, 448], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 145, 181, 195, 233, 234, 235, 454, 455, 456, 457], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 457], "empti": [31, 33, 34, 93, 94, 445, 451, 452, 454, 455, 456], "self": [31, 38, 40, 41, 42, 43, 145, 457, 494, 498], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 195, 255, 276, 457], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 401, 402, 403, 405, 418, 500, 501], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 195, 217, 218, 228, 229, 230, 231, 240, 246, 250, 405, 406, 415, 416, 454, 455, 456], "boolean": [32, 93, 100, 112, 118, 132, 144, 145, 180, 192, 195, 205, 206, 208, 210, 233, 234, 235, 236, 255, 256, 259, 260, 284, 285, 286, 290, 291, 292, 293, 294, 311, 318, 319, 325, 401, 402, 403, 405, 415, 445, 449], "to_iter": 32, "travers": [32, 38, 40, 405, 417], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 385], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 145, 157, 255, 257, 265, 343, 354, 355, 401, 402, 403, 405, 408, 414, 418, 467, 468, 478, 489, 494, 498], "underli": [32, 195, 205, 208, 210, 236], "queri": [32, 33, 40, 145, 178, 188, 343, 354, 355, 478, 489], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 255, 276, 385, 389], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 195, 210], "integ": [32, 33, 40, 93, 94, 100, 112, 131, 134, 136, 195, 196, 205, 206, 207, 208, 209, 210, 211, 219, 220, 236, 243, 244, 245, 254, 356, 366, 378, 379, 385, 395, 425, 427, 430, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "22": [32, 195, 210, 356, 360, 369, 432, 436, 445, 446], "25": [32, 356, 360, 363, 381, 383, 423, 424, 445, 446], "execute_with_gradi": [32, 41, 42, 43, 55, 319, 457], "multi_head_attent": [32, 35, 343], "func": [32, 90, 91, 145, 189, 255, 262, 319, 323, 405, 418], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 90, 91, 112, 129, 130, 145, 189, 255, 257, 262, 270, 272, 401, 402, 403, 404, 405, 411, 415, 416, 417], "xs": [32, 145, 168, 172, 174, 175, 176, 255, 256, 260, 319, 323, 385, 387], "retain_grad": [32, 319, 323], "dy": [32, 319, 323, 335, 338], "dx": [32, 319, 323, 335, 338], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 457, 494, 498], "redund": 32, "scale": [32, 145, 187, 188, 319, 327, 343, 351, 354, 355, 423, 424, 478, 486, 489, 494, 497], "num_head": [32, 343, 354, 478, 489], "mask": [32, 343, 354, 355], "to_q_fn": [32, 343, 354], "to_kv_fn": [32, 343, 354], "to_out_fn": [32, 35, 343, 354], "to_q_v": [32, 343, 354], "to_kv_v": [32, 343, 354], "to_out_v": [32, 343, 354], "measur": [32, 343, 354, 478, 489], "dot": [32, 343, 354, 355, 356, 376, 378, 478, 489], "product": [32, 195, 239, 255, 267, 343, 354, 355, 356, 358, 364, 369, 376, 378, 445, 446, 450, 478, 489], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": [33, 112, 129], "int16": [33, 112, 129, 445, 450, 452], "int32": [33, 112, 129, 145, 179, 445, 450, 452], "int64": [33, 112, 129, 195, 209, 432, 433, 434, 445, 450, 452], "uint8": [33, 112, 129, 335, 337, 342], "uint16": [33, 112, 130, 445, 450, 452], "uint32": [33, 112, 130, 445, 450, 452], "uint64": [33, 112, 130, 445, 450, 452], "bfloat16": [33, 112, 129], "float16": [33, 112, 130], "float64": [33, 112, 118, 129], "deriv": [33, 34, 40, 42, 93, 97, 101, 107, 111, 319, 321, 322, 324, 326, 327, 328, 405, 407, 417, 490, 494, 498, 500], "constructor": [33, 34, 40, 255, 258, 500, 501], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 457, 490, 491, 494, 498], "valid": [33, 38, 112, 122, 343, 344, 345, 346, 347, 348, 349, 350, 385, 397, 454, 455, 456, 478, 479, 480, 481, 482, 483, 484, 485], "invalid": [33, 356, 378, 454, 455, 456], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 112], "broadcast_to": [33, 112], "result_typ": [33, 112], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 255, 272, 301, 302, 454, 455, 456, 457], "overflow": [33, 195, 199, 445, 452], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 423, 424], "scalar": [33, 38, 43, 55, 93, 101, 255, 298, 315, 318, 356, 379], "default_int_dtyp": [33, 112], "default_float_dtyp": [33, 112], "settabl": [33, 34], "set_default_int_dtyp": [33, 112], "set_default_float_dtyp": [33, 112], "arang": [33, 93, 102, 103, 335, 338, 342, 445, 446, 457], "dim": [33, 255, 298, 335, 336, 341, 478, 489], "bear": 33, "popul": [33, 34, 38, 425, 426, 445, 451, 453], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 457], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 457], "nd": [33, 34, 35, 38, 43, 457], "One": [33, 38, 40, 41, 255, 272, 385, 393, 425, 427], "deleg": 33, "fill_valu": [33, 93, 100, 101, 195, 222], "shape_to_tupl": [33, 255], "item": [33, 38, 40, 41, 43, 112, 123, 145, 154, 155, 157, 164, 166, 168, 170, 172, 176, 255, 265, 283, 309, 310, 405, 410, 411, 412, 413, 417, 421, 422, 457, 490, 491], "as_n": [33, 112, 123, 124, 125, 126, 145, 164, 165], "cpu": [34, 55, 93, 102, 103, 145, 164, 165, 167, 181, 184, 190, 191, 193, 194, 255, 277, 278, 298, 301, 302, 425, 426, 427, 428, 429, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "gpu": [34, 40, 55, 145, 164, 167, 180, 182, 188, 193, 425, 427], "idx": [34, 40, 255, 257], "tpu": [34, 145, 167, 192], "get_all_ivy_arrays_on_dev": [34, 145], "aliv": [34, 145, 179, 183, 185, 255, 279, 297, 299], "total_mem_on_dev": [34, 145], "amount": [34, 145, 191, 381, 382, 383, 384], "memori": [34, 35, 53, 55, 145, 163, 184, 189, 191, 194, 343, 353, 457], "dev_util": [34, 145], "num_cpu_cor": [34, 145], "default_devic": [34, 38, 145, 183, 193], "random_uniform": [34, 42, 425, 457], "dual": 34, "thrown": [34, 55, 255, 289], "rare": [34, 55], "set_default_devic": [34, 145, 193], "overwrit": [35, 38, 145, 189], "program": 35, "strictli": 35, "inplace_upd": [35, 255, 467, 468], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 255, 289], "val": [35, 40, 255, 287, 288, 289, 303, 304], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 255], "is_vari": [35, 319], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 112, 118], "inclus": [35, 93, 94, 425, 427], "omit": [35, 36, 437, 438, 439, 441], "unspecifi": [35, 195, 243, 244, 356, 361, 385, 397], "predominantli": [35, 54], "math": [35, 43, 457], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 356, 361, 364, 401, 402, 403, 404], "third": [35, 55, 356, 374, 437, 438], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 335, 338, 342, 385, 457], "asarrai": [35, 93, 343, 344, 437, 439], "equival": [35, 41, 43, 93, 94, 195, 209, 234, 235, 244, 356, 367, 370, 373, 379], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 319, 333, 467, 468], "posit": [36, 41, 54, 92, 93, 98, 112, 128, 145, 169, 173, 177, 195, 196, 223, 224, 239, 244, 255, 276, 356, 357, 385, 389, 394, 425, 430, 432, 435, 454, 455, 456, 467, 468], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 405, 406, 416], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 445, 452], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 469], "sound": 37, "higher": [37, 38, 43, 55, 319, 322, 324, 326, 327, 328], "overview": [37, 54], "handler": [37, 39, 43, 457], "fledg": [38, 39], "cuda": [38, 41, 55, 93, 102, 103, 145, 154, 161, 255, 277, 278, 298, 301, 302, 425, 426, 427, 429, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501], "syntact": [38, 43], "x_min": [38, 43, 385, 386], "x_max": [38, 43, 385, 386], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 195, 243, 244, 437, 438, 439, 441], "fit": [38, 335, 341, 385, 392], "logspac": [38, 93], "construct": [38, 39, 42, 43, 385, 399, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "stop": [38, 55, 93, 94, 102, 103, 145, 160, 189, 319, 322, 324, 326, 327, 328, 330, 401, 402, 403, 404, 494, 495, 496, 497, 498, 499], "num": [38, 93, 102, 103, 335, 341], "power_seq": 38, "linspac": [38, 93, 94, 457], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 93, 94, 102, 103, 356, 378, 385, 386, 397, 425, 427, 429, 454, 455, 456], "edg": [38, 43, 385, 386, 388, 400, 457], "wise": [38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 214, 215, 216, 220, 221, 222, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 251, 255, 275, 385, 386], "larger": [38, 43, 112, 128, 385, 386, 394, 445, 451, 453], "param": [38, 43, 255, 257, 277, 278], "minimum": [38, 43, 145, 195, 196, 255, 280, 281, 303, 304, 309, 310, 385, 386, 432, 434, 445, 447, 449, 457], "ml_framework": [38, 43, 93, 94], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 145, 174, 255, 276, 385, 387, 457], "framework_handl": 38, "face": 38, "verbos": [38, 457, 504], "cprint": [38, 503], "framework_stack": 38, "stack": [38, 93, 108, 109, 335, 341, 356, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 374, 375, 377, 385, 405, 406, 415, 416, 457, 478, 487], "_determine_framework_from_arg": 38, "valueerror": [38, 385, 396], "get_framework": 38, "neither": [38, 195, 199, 239], "illustr": [38, 54], "un": [38, 112, 132], "v": [38, 41, 42, 43, 343, 355, 457, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 498, 500, 501], "lstm_updat": [38, 343], "nn": [38, 43, 93, 104, 457], "init_h": [38, 343, 353], "init_c": [38, 343, 353], "kernel": [38, 55, 343, 353], "recurrent_kernel": [38, 343, 353], "bia": [38, 42, 343, 352, 353, 478, 479, 480, 481, 482, 483, 484, 485, 488], "recurrent_bia": [38, 343, 353], "x_shape": 38, "batch_shap": [38, 40, 43, 255, 298, 335, 336, 337, 338, 340, 341, 342, 343, 353, 354, 355, 356, 380, 425, 426, 478, 487], "timestep": [38, 343, 353, 478, 487], "input_channel": [38, 42, 478, 479, 480, 481, 482, 483, 484, 487, 488], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 343, 353], "wh": 38, "lstm": [38, 343, 353, 478], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 343, 353], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 255, 457], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 385, 395], "sigmoid": [38, 41, 42, 82, 457], "ft": 38, "gt": 38, "tanh": [38, 82, 195, 457], "ot": 38, "expand_dim": [38, 41, 385, 457], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 457], "reduce_sum": [38, 457], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 255, 260, 319, 321, 322, 324, 326, 327, 328, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 255, 291, 292, 294, 356], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 112, 129, 130, 145, 154, 155, 255, 257, 316, 405, 406, 411, 412, 413, 415, 416, 417, 460, 462], "example_input": [38, 90, 91], "static_argnum": [38, 90, 91], "static_argnam": [38, 90, 91], "jit": [38, 55], "low": [38, 425, 427, 429], "frontend": [39, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80], "treat": [39, 43, 90, 91], "primit": [39, 55], "describ": [39, 43, 445, 446, 450, 451, 452], "hierarch": [39, 41, 42], "solv": [39, 54, 356], "straight": [40, 457], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 255, 261], "is_native_arrai": [40, 255], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 145, 189, 255, 272, 356, 371, 432, 433, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "mul": 40, "len": [40, 43, 93, 104], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 145], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 356, 371, 374], "size": [40, 41, 93, 102, 103, 145, 187, 188, 189, 255, 301, 335, 340, 343, 355, 356, 360, 365, 369, 371, 374, 378, 385, 389, 394, 395, 396, 425, 426, 428, 429, 432, 433, 435, 454, 455, 456, 478, 479, 480], "matrix_transpos": [40, 356], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 255, 457], "genuin": 40, "some_method": 40, "similarli": [40, 93, 104], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 195, 209, 217, 243, 255, 280, 303, 310, 356, 366, 469], "enforc": 40, "notic": 40, "appear": [40, 385, 389], "inv": [40, 356, 457], "invers": [40, 54, 195, 197, 198, 200, 201, 202, 203, 204, 356, 363, 370], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 405, 418], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 255, 265], "abc": [40, 145, 154, 160, 255, 274, 490, 491, 494, 498], "newshap": [40, 385, 393], "new_shap": 40, "transpos": [40, 43, 145, 176, 343, 345, 347, 349, 356, 368, 370, 457, 478, 480, 482, 484], "flip": [40, 41, 43, 195, 206, 385, 457], "tidi": 40, "20": [40, 195, 210, 217, 245, 356, 360, 369, 376, 425, 427, 432, 435, 436, 445, 446], "shorter": 40, "crystal": 40, "41": [40, 195, 210, 356, 357, 445, 452], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 145, 188], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 457, 463], "hold": [41, 255, 301, 302], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 319, 322, 324, 326, 327, 328, 494, 495, 496, 497, 498, 499], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 335, 337], "hdf5": [41, 490, 491], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 405, 418], "batch_siz": [41, 335, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 425, 426], "dir": 41, "dataset": [41, 53, 457], "dropout": [41, 343, 478, 489], "adam": [41, 42, 43, 319, 321, 322, 326, 457, 494, 496], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 92], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 356, 379], "depth": [41, 42, 43, 54, 145, 169, 173, 177, 255, 283, 298, 405, 417, 490, 491], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 490, 491], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 335, 341], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 93, 94, 104, 356, 374, 375, 385, 393], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 457], "img_min": 41, "reduce_min": [41, 457], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 385, 397, 423, 424, 425, 428, 492, 493], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 145, 154, 255], "queue": [41, 145, 154, 155, 255, 300, 305], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 457], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 82, 84, 195, 210, 335, 342, 343, 346, 349, 356, 369, 432, 436, 445, 446], "batch_slic": 41, "model": [41, 42, 457], "mymodel": [41, 457], "linear0": [41, 42, 457], "linear1": [41, 42, 457], "relu": [41, 42, 82, 83, 84, 457], "x_in": [41, 42, 43, 457], "001": [41, 42, 423, 424], "loss_fn": [41, 42, 43, 457], "to_numpi": [41, 255, 457], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 478, 479, 480, 481, 482, 483, 484, 487, 488], "with_bia": [42, 478, 488], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 343, 353, 478, 487], "fed": [42, 145, 189], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "glorotuniform": [42, 469, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "bias_initi": [42, 478, 479, 480, 481, 482, 483, 484, 485, 488], "_w_init": 42, "_b_init": 42, "create_vari": [42, 469], "var_shap": [42, 469], "fan_out": [42, 469], "fan_in": [42, 469], "uniform": [42, 425, 426, 427, 429, 469, 471, 472, 475, 476], "fan_mod": [42, 469], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 401, 403], "descent": [42, 319, 324, 494, 499], "lar": [42, 319, 326, 327, 494], "lamb": [42, 319, 326, 494], "beta1": [42, 319, 321, 322, 326, 494, 495, 496], "beta2": [42, 319, 321, 322, 326, 494, 495, 496], "999": [42, 319, 321, 322, 326, 494, 495, 496], "07": [42, 319, 321, 322, 326, 381, 382, 383, 384, 494, 495, 496], "stop_gradi": [42, 145, 189, 319, 322, 324, 326, 327, 328, 401, 402, 403, 404, 457, 494, 495, 496, 497, 498, 499], "compile_on_next_step": [42, 490, 491, 494, 495, 496, 497, 498, 499], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 494, 498], "new_v": 42, "adam_upd": [42, 319], "_lr": 42, "isinst": [42, 43, 255, 313], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 494, 495, 496, 497, 498, 499], "mw": [42, 319, 321, 322], "vw": [42, 319, 321, 322], "pre": [43, 55, 145], "captur": 43, "one_hot": [43, 255, 457], "sparse_funct": 43, "num_class": [43, 425, 426], "ey": [43, 93, 343, 346, 350], "cumprod": [43, 255], "ones_lik": [43, 93, 457], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 423, 424, 492, 493], "to_ivy_modul": [43, 467], "thinli": 43, "whilst": 43, "preserv": [43, 55, 319, 330, 385, 390], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 343, 351, 352], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 356, 369, 425, 430, 445, 446], "init": 43, "update_rul": 43, "01": [43, 195, 245], "tree_multimap": 43, "mechan": [53, 55, 457], "vision": [53, 457], "robot": [53, 457], "focus": 54, "field": [54, 356, 361, 371, 374, 437, 438, 439], "perfect": 54, "3d": [54, 478, 483, 484], "differenti": 54, "demo": [54, 457], "orient": 54, "pose": 54, "represent": [54, 92, 112, 116, 117, 128, 131, 145, 161, 162, 195, 196, 199, 205, 208, 210, 236, 239, 255, 257, 308, 313], "largest": [54, 112, 128, 131, 356, 374], "euler": [54, 92], "quaternion": 54, "rotat": 54, "matric": [54, 93, 104, 108, 109, 343, 352, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 373, 374, 375, 377], "vector": [54, 93, 104, 255, 264, 343, 352, 356, 358, 361, 364, 369, 374, 375, 378, 379, 380, 478, 488], "angl": [54, 195, 203, 213, 248], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 356, 373], "warp": [54, 335, 336], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 343, 457, 464, 478], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 457], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 255, 267, 268], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 90, 91, 405, 415, 416, 432, 436], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 195, 244, 356, 378, 454, 455, 456], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 112, 128, 131, 195, 243, 445, 450, 452], "gold": 55, "dex": 55, "phase": 55, "lax": [55, 68, 69], "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 145, 154, 155], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 405, 407], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "mathematical_funct": [68, 69, 71, 72, 73, 75, 76], "same_kind": [71, 72, 73], "subok": [71, 72, 73], "pointwise_op": [78, 79, 80], "alpha": [78, 79, 82, 84], "gelu": [82, 464], "gaussian": [82, 83], "leaki": [82, 83, 84], "leaky_relu": [82, 457], "rectifi": [82, 84, 85], "slope": [82, 84], "39": [82, 84, 356, 369, 423, 424, 445, 446], "85": [82, 84, 195, 210], "48": [82, 84, 356, 369, 445, 446], "88": [82, 84, 195, 210, 356, 369, 445, 446], "269": [82, 86], "731": [82, 86], "881": [82, 86], "214": [82, 86], "978": [82, 86], "891": [82, 86], "softmax": [82, 343, 354, 355, 457], "422": [82, 87], "155": [82, 87], "0768": [82, 87], "231": [82, 87], "693": [82, 87, 381, 384], "49": [82, 87, 445, 446], "147": [82, 87], "363": [82, 87], "softplu": [82, 457], "3461": [82, 88], "6491": [82, 88], "5349962": [82, 88], "4203641": [82, 88], "hyperbol": [82, 89, 195, 198, 201, 204, 213, 248, 253], "55": [82, 89, 343, 349, 356, 369, 445, 446], "501": [82, 89], "762": [82, 89], "964": [82, 89], "faster": [90, 91], "invoc": [90, 91], "718281828459045": 92, "inf": [92, 255, 284, 318, 356, 379], "newaxi": 92, "alia": 92, "pi": 92, "141592653589793": 92, "mathemat": [92, 195, 199, 203, 218, 239, 356, 379], "evenli": [93, 94, 102, 103, 385, 395], "half": [93, 94, 425, 427, 429], "word": [93, 94, 425, 429, 467, 468], "chosen": [93, 94, 195, 203, 432, 436], "distanc": [93, 94], "adjac": [93, 94], "dimension": [93, 94, 98, 104, 356, 358, 359, 364, 367, 369, 370, 378, 379, 385, 395, 432, 433, 434, 435, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "ceil": [93, 94, 195, 457], "datatyp": [93, 95, 105, 112, 122, 133, 134, 135], "interpret": [93, 95, 105], "fill": [93, 96, 100, 101, 106, 107, 110, 111, 425, 427], "uniniti": [93, 96, 97], "empty_lik": 93, "n_row": [93, 98], "n_col": [93, 98], "diagon": [93, 98, 108, 109, 356, 377], "elsewher": [93, 98, 432, 436], "row": [93, 98, 356, 373, 374, 425, 426, 432, 435], "column": [93, 98, 356, 361, 371, 373, 374], "upper": [93, 98, 109, 356, 357, 371, 425, 429], "from_dlpack": 93, "__dlpack__": [93, 99, 145, 190], "interchang": [93, 99, 385, 398], "full_lik": 93, "endpoint": [93, 102], "entri": [93, 102, 103, 385, 395, 405, 418], "meshgrid": 93, "xy": [93, 104], "coordin": [93, 104, 195, 203], "cartesian": [93, 104], "matrix": [93, 104, 108, 109, 255, 256, 263, 343, 352, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375, 377, 380, 478, 488], "ij": [93, 104, 445, 446], "rank": [93, 104, 255, 317, 356, 358, 367, 371, 373, 377, 378, 379, 385, 388, 389, 397, 400, 432, 435, 454, 455, 456], "ni": [93, 104], "xi": [93, 104], "n1": [93, 104], "n2": [93, 104], "n3": [93, 104], "accordingli": [93, 104, 195, 218, 356, 379, 432, 434, 437, 438, 439, 441, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "xv": [93, 104], "yv": [93, 104], "tril": 93, "triangular": [93, 108, 109, 356, 357, 371], "innermost": [93, 108, 109, 356, 357, 359, 360, 361, 362, 363, 367, 368, 370, 371, 373, 374, 375, 377], "mxn": [93, 108, 109, 356, 360, 367, 368, 370, 371, 375, 377], "triu": 93, "zeros_lik": [93, 385, 386, 457], "defaultdtyp": [112, 113], "defaultfloatdtyp": [112, 114], "float_dtyp": [112, 124, 138], "defaultintdtyp": [112, 115], "as_ivy_dtyp": 112, "dtype_in": [112, 116, 117, 127, 132, 133, 134, 144], "as_native_dtyp": 112, "match": [112, 118, 195, 244, 255, 295], "broadcast_arrai": 112, "incompat": [112, 120], "from_": [112, 121], "occur": [112, 121, 432, 433, 434, 437, 438, 439, 441], "closest_valid_dtyp": 112, "closest": [112, 122, 195, 211, 219, 220, 245, 254], "floatdtyp": [112, 124], "int_dtyp": [112, 125, 139], "intdtyp": [112, 125], "dtype_bit": 112, "finfo": 112, "inform": [112, 128, 131, 255, 257, 319, 330], "followng": [112, 128], "occupi": [112, 128, 131, 255, 301, 302], "ep": [112, 128, 356, 367, 370], "smallest": [112, 128, 131, 195, 211], "max": [112, 128, 131, 195, 237, 255, 263, 264, 272, 301, 302, 356, 367, 370, 445, 494, 496], "min": [112, 128, 131, 195, 238, 255, 272, 301, 302, 309, 356, 371, 374, 375, 379, 445], "smallest_norm": [112, 128], "precis": [112, 128, 195, 239, 249], "function_supported_dtyp": 112, "acosh": [112, 129, 130, 195, 457], "function_unsupported_dtyp": 112, "iinfo": 112, "encapsul": [112, 131], "invalid_dtyp": 112, "is_float_dtyp": 112, "is_int_dtyp": [112, 255, 315], "promote_typ": 112, "type1": [112, 135], "type2": [112, 135], "arrays_and_dtyp": [112, 136], "type_promote_arrai": 112, "ret1": [112, 140], "ret2": [112, 140], "unset_default_dtyp": 112, "unset_default_float_dtyp": 112, "unset_default_int_dtyp": 112, "valid_dtyp": 112, "noinspect": [113, 114, 115, 146, 320], "pyshadowingnam": [113, 114, 115, 146, 320], "defaultdevic": [145, 146], "__enter__": 145, "_dev": 145, "initialis": 145, "devcloneditem": [145, 167], "multidevitem": [145, 147, 150], "devclonedit": 145, "multidevit": [145, 148, 151, 154, 155, 159], "devclonednest": 145, "max_depth": [145, 149, 152, 159, 169, 173, 177, 255, 283, 405, 417], "multidevnest": [145, 149, 152], "devdistitem": 145, "devdistit": 145, "devdistnest": 145, "devmanag": [145, 153], "dev_mapp": 145, "da_dim_s": 145, "safety_factor": 145, "min_dev_dim_s": 145, "max_dev_dim_step_ratio": 145, "min_unit_dev_tune_step": 145, "min_sf_tune_step": 145, "starting_split_factor": 145, "max_split_factor_step_s": 145, "05": [145, 423, 424], "tune_dev_alloc": 145, "tune_dev_split": 145, "mapper": [145, 154, 155], "receivess": 145, "ratio": [145, 319, 326, 335, 341, 494, 496], "safe": [145, 154], "oom": 145, "tune": 145, "da_tune_step": 145, "dim_siz": 145, "ds_tune_step": 145, "to_clon": 145, "to_distribut": 145, "multidevic": [145, 154], "parallel": [145, 154, 155], "mutlidevic": [145, 154], "repeated_config_check": 145, "tune_step": 145, "devmapp": [145, 155], "ret_fn": [145, 154, 155], "queue_class": [145, 154, 155], "worker_class": [145, 154, 155], "timeout": [145, 154, 155, 255, 300, 305], "worker": [145, 154, 155], "used_dev": [145, 154], "split_factor": [145, 154], "sf": [145, 154], "devmappermultiproc": 145, "multidev": [145, 156, 157, 158, 177], "at_dev": [145, 158, 159], "profil": 145, "save_dir": [145, 160], "as_native_dev": 145, "clear_mem_on_dev": 145, "to_devic": [145, 164], "dev_clon": 145, "deviceic": [145, 166], "dev_clone_arrai": 145, "dev_clone_it": 145, "dev_clone_nest": 145, "dev_dist": 145, "dev_dist_arrai": 145, "dev_dist_it": 145, "dev_dist_nest": 145, "dev_unifi": 145, "concat": [145, 174, 175, 176, 177, 189, 255, 276, 385, 457], "concatten": [145, 174, 175, 176, 177, 189], "dev_unify_arrai": 145, "dev_unify_it": 145, "dev_unify_nest": 145, "spread": [145, 177], "140462020989616": [145, 179], "gpu_is_avail": 145, "physic": [145, 181], "num_ivy_arrays_on_dev": 145, "x3": [145, 183], "x4": [145, 183], "percent_used_mem_on_dev": 145, "process_specif": [145, 184, 194], "percentag": [145, 184], "ram": [145, 184, 191, 194], "alon": [145, 184, 194], "print_all_ivy_arrays_on_dev": 145, "attr_onli": [145, 185], "set_split_factor": 145, "chunk": [145, 187, 188, 189], "split_func_cal": 145, "max_chunk_s": [145, 189], "chunk_siz": [145, 189], "input_ax": [145, 189], "output_ax": [145, 189], "feed": [145, 189], "fist": [145, 189], "stream": [145, 190], "caveat": [145, 190], "portabl": [145, 190, 457], "gb": [145, 191, 194], "tpu_is_avail": 145, "unset_default_devic": 145, "reset": [145, 193], "used_mem_on_dev": 145, "magnitud": [195, 196, 199, 239, 356, 374, 375], "aco": [195, 457], "princip": [195, 197, 200, 202], "cosin": [195, 197, 198, 212, 213], "greater": [195, 197, 200, 203, 207, 209, 219, 220, 243, 244, 246, 254, 356, 358, 385, 396, 425, 429], "x1_i": [195, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 222, 226, 227, 232, 233, 235, 236, 239, 241, 243, 244, 251], "x2_i": [195, 199, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 222, 226, 227, 232, 233, 235, 236, 239, 241, 243, 244, 251], "finit": [195, 199, 203, 223, 239, 243, 244], "nonzero": [195, 199, 239, 432], "nor": [195, 199, 239], "nearest": [195, 199, 239, 245], "2019": [195, 199, 218, 239], "commut": [195, 199], "asin": [195, 457], "sine": [195, 200, 201, 247, 248], "5707964": [195, 200], "5235988": [195, 200], "64350116": [195, 200], "10016742": [195, 200], "20135793": [195, 200], "30469266": [195, 200], "41151685": [195, 200], "asinh": [195, 457], "atan": [195, 457], "atan2": [195, 457], "quotient": [195, 203], "notat": [195, 203, 445, 446], "denot": [195, 203], "pair": [195, 203, 343, 355, 356, 358], "quadrant": [195, 203], "3\u03c0": [195, 203], "atanh": [195, 457], "549": [195, 204], "bitwise_and": 195, "bitwis": [195, 205, 208, 210, 236], "AND": [195, 205, 233, 454, 455], "binari": [195, 205, 208, 210, 236, 381, 382], "bitwise_invert": 195, "invert": [195, 206], "bitwise_left_shift": 195, "bitwise_or": 195, "bitwise_right_shift": 195, "arithmet": [195, 209, 445, 448], "propag": [195, 209, 445, 447, 448, 449, 451, 452, 453], "thu": [195, 209, 243, 244, 356, 361], "floor": [195, 209, 255, 275, 457], "lh": [195, 209], "rh": [195, 209], "bitwise_xor": 195, "xor": [195, 210, 236], "78": [195, 210, 356, 369, 445, 446], "91": [195, 210, 356, 369, 445, 446], "23": [195, 210, 343, 349, 355, 356, 360, 432, 436], "66": [195, 210, 356, 369, 423, 424, 445, 446], "77": [195, 210, 356, 369, 445, 446], "79": [195, 210], "89": [195, 210, 356, 376, 445, 452], "98": [195, 210, 356, 369, 432, 436, 445, 446], "26": [195, 210, 356, 360, 369, 376, 445, 446], "57": [195, 210, 356, 357], "21": [195, 210, 255, 267, 356, 360, 369, 445, 446], "34": [195, 210, 335, 342], "24": [195, 210, 255, 267, 356, 360, 369, 445, 446], "74": [195, 210], "51": [195, 210], "27": [195, 210, 213, 343, 355, 356, 369, 445, 446], "59": [195, 210], "416": [195, 212], "cosh": [195, 457], "5430806": [195, 213], "7621958": [195, 213], "067662": [195, 213], "308231": [195, 213], "0200667": [195, 213], "8283155": [195, 213], "110": [195, 213], "705475": [195, 213], "6685185": [195, 213], "567909": [195, 213], "57476": [195, 213], "286647": [195, 213], "40": [195, 213, 356, 369, 445, 446], "731575": [195, 213], "122": [195, 213], "34801": [195, 213], "367": [195, 213], "54822": [195, 213], "669": [195, 213], "71564": [195, 213], "201": [195, 213, 245], "548": [195, 213], "317": [195, 213], "1490": [195, 213], "4791": [195, 213], "dividend": [195, 214, 244], "divisor": [195, 214, 244, 319, 321, 322, 326, 445, 451, 453, 494, 495, 496], "erf": 195, "gauss": [195, 216], "exponenti": [195, 216, 217, 232, 243], "exp": [195, 218, 232, 457], "logarithm": [195, 217, 228, 229, 230, 231, 232, 356, 372], "7182817": [195, 217], "389056": [195, 217], "085537": [195, 217], "expm1": 195, "accur": [195, 218], "fdlibm": [195, 218], "compliant": [195, 218, 234, 235, 445, 447, 448, 449], "greatest": [195, 219, 220], "floor_divid": 195, "greater_equ": 195, "isfinit": 195, "out_i": [195, 223, 224, 225], "isinf": 195, "isnan": 195, "less_equ": 195, "log10": 195, "log1p": 195, "log2": 195, "logaddexp": 195, "logical_and": [195, 457], "logical_not": [195, 457], "logical_or": [195, 457], "logical_xor": 195, "threshold": [195, 237, 238], "exce": [195, 238], "y_i": [195, 240], "not_equ": 195, "pow": 195, "expon": [195, 243, 255, 310], "versu": [195, 243], "odd": [195, 243], "remaind": [195, 255, 275, 385, 395], "modulu": [195, 244], "primarili": [195, 244], "5654": [195, 245], "034": [195, 245], "433": [195, 245], "343": [195, 245], "44": [195, 245, 356, 369, 432, 436, 445, 446], "30": [195, 245, 335, 342, 356, 369, 445, 446, 469, 475], "81": [195, 245, 445, 446], "527": [195, 245], "301": [195, 245], "202": [195, 245], "sinh": [195, 457], "sqrt": [195, 356, 379], "squar": [195, 249, 343, 346, 356, 357, 359, 361, 362, 363, 366, 372, 373, 374], "indistinguish": [195, 249], "infinit": [195, 249], "546": [195, 252], "842": [195, 252], "916": [195, 252], "96": [195, 252, 356, 369, 445, 446], "37": [195, 252, 335, 342, 423, 424], "996": [195, 252], "328": [195, 252], "trunc": 195, "decim": [195, 254], "all_equ": 255, "equality_matrix": [255, 256], "arg_info": 255, "inspect": [255, 257, 461, 462], "arg_nam": 255, "array_equ": 255, "arrays_equ": 255, "assert_supports_inplac": 255, "later": [255, 262], "clip_matrix_norm": 255, "max_norm": [255, 263, 264], "downscal": [255, 263, 264], "clip_vector_norm": 255, "container_typ": 255, "copy_arrai": 255, "60": [255, 267, 356, 369, 445, 446], "cumsum": [255, 457], "current_backend_str": 255, "default_v": [255, 270], "catch_except": [255, 270], "rev": [255, 270], "with_cal": [255, 270], "einops_rearrang": 255, "axes_length": [255, 271, 272, 273], "rearrang": [255, 271, 273], "arrang": [255, 271], "einops_reduc": 255, "einops_repeat": 255, "123": [255, 274], "floormod": [255, 457], "mod": [255, 275], "fourier_encod": 255, "max_freq": [255, 276], "num_band": [255, 276], "flatten": [255, 276, 356, 369, 379, 385, 392, 394, 432, 433, 434, 437, 438, 439, 441], "pad": [255, 276, 343, 344, 345, 346, 347, 348, 349, 350, 385, 388, 400, 478, 479, 480, 481, 482, 483, 484, 485], "fourier": [255, 276], "band": [255, 276], "linearli": [255, 276, 356, 373], "oppos": [255, 276], "geometr": [255, 276], "gather": [255, 278], "slice": [255, 277, 278, 405, 414], "gather_nd": [255, 457], "get_all_arrays_in_memori": 255, "get_min_bas": 255, "get_min_denomin": 255, "get_num_dim": [255, 457], "as_arrai": [255, 282, 307], "get_referrers_recurs": 255, "seen_set": [255, 283], "local_set": [255, 283], "has_nan": 255, "include_inf": [255, 284, 318], "indices_wher": [255, 457], "inplace_arrays_support": 255, "inplace_decr": 255, "decrement": [255, 287], "inplace_incr": 255, "inplace_variables_support": 255, "is_arrai": 255, "is_ivy_contain": 255, "match_kwarg": 255, "allow_dupl": [255, 295], "forkserv": [255, 296], "spawn": [255, 296], "num_arrays_in_memori": 255, "hot": [255, 298], "scatter": [255, 298, 301, 302], "overrid": [255, 298], "print_all_arrays_in_memori": 255, "queue_timeout": 255, "scatter_flat": 255, "flat": [255, 301, 385, 392], "set_min_bas": 255, "set_min_denomin": 255, "set_queue_timeout": 255, "set_tmp_dir": 255, "tmp_dr": [255, 306], "temporari": [255, 306], "y_tupl": [255, 307], "y_tensor": [255, 307], "as_tensor": [255, 307], "min_denomin": [255, 309], "stabil": [255, 309, 310, 442, 443, 444], "_min_denomin": [255, 309], "stable_pow": 255, "min_bas": [255, 310], "_min_bas": [255, 310, 423, 424, 492, 493], "supports_inplac": 255, "tmp_dir": 255, "to_list": [255, 457], "to_scalar": 255, "try_else_non": 255, "keepdim": [255, 317, 356, 365, 379, 432, 433, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "unpack": [255, 317], "value_is_nan": 255, "gradienttrack": [319, 320], "with_grad": [319, 329], "adam_step": 319, "dcdw": [319, 321, 322, 324, 326, 327], "delta": [319, 321], "cost": [319, 321, 322, 324, 326, 327, 328, 401, 402, 403, 404], "ws": [319, 321, 322, 324, 326, 327, 328], "en": [319, 321, 322], "wikipedia": [319, 321, 322], "wiki": [319, 321, 322], "stochastic_gradient_desc": [319, 321, 322], "dc": [319, 321, 322, 324, 326, 327, 328], "dw": [319, 321, 322, 324, 326, 327, 328], "averag": [319, 321, 322, 326, 401, 402, 403], "forget": [319, 321, 322, 326, 494, 495, 496], "mw_tm1": [319, 322, 326], "vw_tm1": [319, 322, 326], "rate": [319, 322, 324, 326, 327, 328, 401, 402, 403, 404, 478, 489, 494, 495, 496, 497, 498, 499], "ws_new": [319, 322, 324, 326, 327, 328], "retain": [319, 323], "gradient_descent_upd": [319, 401, 402, 403, 404, 457], "lamb_upd": 319, "max_trust_ratio": [319, 326, 494, 496], "decay_lambda": [319, 326, 327, 494, 496, 497], "trust": [319, 326, 494, 496], "decai": [319, 326, 327, 494, 496, 497], "lars_upd": 319, "layerwis": [319, 327, 494, 497], "optimizer_upd": 319, "effective_grad": [319, 328], "set_with_grad": 319, "preserve_typ": [319, 330], "unset_with_grad": 319, "variable_data": 319, "bilinear_resampl": [335, 457], "bilinearli": [335, 336], "num_sampl": [335, 336, 339, 425, 426], "bilinear": [335, 336], "float_img_to_uint8_img": 335, "gradient_imag": [335, 457], "linear_resampl": 335, "interpol": [335, 339], "resampl": [335, 339], "random_crop": 335, "crop_siz": [335, 340], "image_dim": [335, 340], "seed": [335, 340, 425, 457], "randomli": [335, 340, 343, 351, 478, 486], "crop": [335, 340], "2d": [335, 340, 356, 372, 478, 481, 482, 485], "nh": [335, 340], "nw": [335, 340], "stack_imag": [335, 457], "desired_aspect_ratio": [335, 341], "width": [335, 341], "uint8_img_to_float_img": 335, "820471434542632e": [335, 342], "0082513512365273e": [335, 342], "658462758989161e": [335, 342], "003653270560797e": [335, 342], "conv1d": [343, 478], "stride": [343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "data_format": [343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "nwc": [343, 344, 345, 478, 479, 480], "dilat": [343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "convolut": [343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "d_in": [343, 344, 345, 346, 347, 348, 349], "fw": [343, 344, 345, 346, 347, 348, 349, 350], "d_out": [343, 344, 345, 346, 347, 348, 349], "slide": [343, 344, 345, 346, 347, 348, 349, 350, 478, 479, 480, 481, 482, 483, 484, 485], "ncw": [343, 344, 345, 478, 479, 480], "wio": [343, 344], "conv1d_transpos": 343, "output_shap": [343, 345, 347, 349, 478, 480, 482, 484], "conv2d": [343, 457, 478], "nhwc": [343, 346, 347, 350, 478, 481, 482, 485], "fh": [343, 346, 347, 348, 349, 350], "nchw": [343, 346, 347, 350, 478, 481, 482, 485], "hwio": [343, 346], "random_norm": [343, 346, 349, 350, 356, 374, 425, 437, 438], "unequ": [343, 346], "28": [343, 346, 349, 350, 356, 369, 445, 446], "unsqueez": [343, 346, 350], "conv2d_transpos": 343, "conv3d": [343, 478], "ndhwc": [343, 348, 349, 478, 483, 484], "volum": [343, 348], "fd": [343, 348, 349], "ncdhw": [343, 348, 349, 478, 483, 484], "dhwio": [343, 348], "conv3d_transpos": 343, "256": [343, 349], "258": [343, 349], "128": [343, 349, 356, 369], "depthwise_conv2d": [343, 457], "depthwis": [343, 350, 478, 485], "333": [343, 350], "inp": [343, 350], "prob": [343, 351, 425, 426, 478, 486], "bernoulli": [343, 351], "out_featur": [343, 351, 352], "incom": [343, 352], "outer_batch_shap": [343, 352], "inner_batch_shap": [343, 352], "in_featur": [343, 352], "cell": [343, 353, 478, 487], "num_queri": [343, 354, 355], "x_feat_dim": [343, 354], "num_kei": [343, 354, 355], "cont_feat_dim": [343, 354], "numhead": [343, 354], "feat_dim": [343, 354, 355], "out_feat_dim": [343, 354], "scaled_dot_product_attent": 343, "score": [343, 355], "04": [343, 355], "03": [343, 355, 423, 424], "35": [343, 355, 356, 358, 432, 436, 445, 446], "09": [343, 355], "08": [343, 355], "choleski": 356, "decomposit": [356, 357, 371, 374], "symmetr": [356, 357, 361, 362, 380], "u": [356, 357, 374], "73": [356, 357, 423, 424], "63": [356, 357, 369, 445, 446], "cross": [356, 381, 382, 383, 384, 457], "vif": [356, 358], "det": 356, "92": [356, 359], "293": [356, 359], "47": [356, 359], "offset": [356, 360, 377, 423, 424], "axis1": [356, 360, 385, 398], "axis2": [356, 360], "eigh": 356, "eigendecomposit": [356, 361], "qlq\u1d40": [356, 361], "orthogon": [356, 361], "eig": [356, 361], "namedtupl": [356, 361, 371, 374, 437, 438, 439], "eigenvalu": [356, 361, 362], "eigenvector": [356, 361], "eigvalsh": 356, "75": [356, 363, 369], "prepend": [356, 364], "matrix_norm": 356, "ord": [356, 365, 379], "fro": [356, 365], "matrix_pow": 356, "matrix_rank": 356, "rtol": [356, 367, 370], "singular": [356, 367, 370, 374, 375], "toler": [356, 367, 370], "largest_singular_valu": [356, 367, 370], "outer": [356, 401, 402, 403, 404], "array_lik": [356, 369], "33": [356, 369, 423, 424, 445, 446], "36": [356, 369, 445, 446], "45": [356, 369, 385, 395, 423, 424, 445, 446], "52": [356, 369, 445, 446], "50": [356, 369, 432, 435, 445, 446], "65": [356, 369, 445, 446], "72": [356, 369, 445, 446], "84": [356, 369, 445, 446], "105": [356, 369], "112": [356, 369, 445, 446], "104": [356, 369, 445, 446], "120": [356, 369], "pinv": [356, 457], "moor": [356, 370], "penros": [356, 370], "pseudo": [356, 370], "qr": 356, "orthonorm": [356, 371, 374], "slogdet": 356, "logdet": [356, 372], "equat": [356, 373, 445, 446], "coeffici": [356, 373], "svd": [356, 457], "full_matric": [356, 374], "usvh": [356, 374], "vh": [356, 374], "hermitian": [356, 374], "descend": [356, 374, 375, 442, 443, 444], "et": [356, 374], "cetera": [356, 374], "adjoint": [356, 374], "reconstruct": [356, 374, 437, 438, 440], "reconstructed_x": [356, 374], "svdval": 356, "tensordot": 356, "contract": [356, 376, 445, 446], "doubl": [356, 376], "76": [356, 376, 445, 446], "vecdot": 356, "vector_norm": 356, "singleton": [356, 379, 385, 396, 432, 434, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "liter": [356, 379], "manhattan": [356, 379], "l2": [356, 379], "euclidean": [356, 379], "vector_to_skew_symmetric_matrix": [356, 457], "mathbf": [356, 380], "mathbb": [356, 380], "skew": [356, 380], "binary_cross_entropi": 381, "entropi": [381, 382, 383, 384], "predict": [381, 382, 383, 384], "smooth": [381, 382, 383, 384], "2231": [381, 382], "3567": [381, 382], "6094": [381, 382], "9163": [381, 382], "2040": [381, 382], "5108": [381, 382], "1054": [381, 382], "discret": [381, 383], "3862944": [381, 383], "35667497": [381, 383, 384], "sparse_cross_entropi": 381, "spars": [381, 384], "logit": [381, 384], "3025851": [381, 384], "357": [381, 384], "join": [385, 387, 397, 457], "constant_pad": 385, "pad_width": [385, 388, 400], "before_1": [385, 388, 400], "after_1": [385, 388, 400], "before_n": [385, 388, 400], "after_n": [385, 388, 400], "insert": [385, 389, 405, 410, 432, 433], "manipulation_funct": [385, 389], "reorder": [385, 390], "permute_dim": 385, "permut": [385, 391, 398], "repetit": [385, 392, 399], "restor": [385, 394], "with_remaind": [385, 395], "squeez": [385, 457], "famili": [385, 397], "intxx": [385, 397], "floatxx": [385, 397], "swapax": 385, "axis0": [385, 398], "tile": [385, 457], "rep": [385, 399], "zero_pad": [385, 457], "fomaml_step": 401, "inner_cost_fn": [401, 402, 403], "outer_cost_fn": [401, 402, 403], "inner_grad_step": [401, 402, 403, 404], "inner_learning_r": [401, 402, 403, 404], "inner_optimization_step": [401, 402, 403, 404], "inner_batch_fn": [401, 402, 403], "outer_batch_fn": [401, 402, 403], "average_across_step": [401, 402, 403], "inner_v": [401, 402, 403], "keep_inner_v": [401, 402, 403], "outer_v": [401, 402, 403], "keep_outer_v": [401, 402, 403], "return_inner_v": [401, 402, 403, 404], "num_task": [401, 402, 403, 404], "maml": [401, 402, 403], "recev": [401, 402, 403], "maml_step": 401, "rece": [401, 403], "reptile_step": 401, "cost_fn": [401, 404], "reptil": [401, 404], "receivng": [401, 404], "all_nested_indic": 405, "include_nest": [405, 406], "_index": [405, 406, 416], "_base": [405, 406, 415, 416], "copy_nest": 405, "include_deriv": [405, 407, 417], "to_mut": [405, 407, 417], "mutabl": [405, 407, 417], "insert_into_nest_at_index": 405, "insert_into_nest_at_indic": 405, "map_nest_at_index": 405, "map_nest_at_indic": 405, "multi_index_nest": 405, "nested_ani": 405, "check_nest": [405, 415, 416], "conditon": [405, 415, 416], "nested_indices_wher": 405, "to_ignor": [405, 416], "stop_after_n_found": [405, 416], "_depth": [405, 417], "_tuple_check_fn": [405, 417], "_list_check_fn": [405, 417], "_dict_check_fn": [405, 417], "nested_multi_map": 405, "key_chain": [405, 418], "to_appli": [405, 418], "prune_unappli": [405, 418], "prune": [405, 418, 419, 420], "leftmost": [405, 418], "nest0": [405, 418], "ivy_arrai": [405, 418], "funciton": [405, 418], "prune_nest_at_index": 405, "prune_nest_at_indic": 405, "set_nest_at_index": 405, "set_nest_at_indic": 405, "layer_norm": 423, "normalized_idx": [423, 424], "new_std": [423, 424, 492, 493], "mini": [423, 424, 492, 493], "gamma": [423, 424], "beta": [423, 424], "0976": [423, 424], "3452": [423, 424], "2740": [423, 424], "1047": [423, 424], "5886": [423, 424], "2732": [423, 424], "7696": [423, 424], "7024": [423, 424], "2518": [423, 424], "58": [423, 424], "283": [423, 424], "585": [423, 424], "909": [423, 424], "628": [423, 424], "997": [423, 424], "0707": [423, 424], "109": [423, 424], "877": [423, 424], "norm_idx": [423, 424], "228": [423, 424], "0285": [423, 424], "199": [423, 424], "204": [423, 424], "335": [423, 424, 437, 438], "multinomi": 425, "population_s": [425, 426], "draw": [425, 426, 428, 429], "unnorm": [425, 426], "drawn": [425, 426, 427, 428, 429], "home": [425, 426, 428, 429], "randint": [425, 457], "uniformli": [425, 427, 429], "highest": [425, 427], "parameter": [425, 428, 429], "6444774682897879": [425, 428], "811": [425, 428], "508": [425, 428], "564": [425, 428], "7268672": [425, 428], "968": [425, 428], "175": [425, 428, 437, 438], "064": [425, 428], "40935726": [425, 428], "556": [425, 428], "boundari": [425, 429], "26431865": [425, 429], "475": [425, 429], "878": [425, 429], "861": [425, 429], "89150229": [425, 429], "89629126": [425, 429], "94198485": [425, 429], "91405606": [425, 429], "72848724": [425, 429], "7550739": [425, 429], "624": [425, 429], "00109": [425, 429], "seed_valu": [425, 430], "shuffl": [425, 457], "argmax": [432, 457], "occurr": [432, 433, 434, 437, 438], "argmin": [432, 457], "yield": [432, 436], "43": [432, 436], "unique_al": 437, "x_j": [437, 438, 439, 441], "impli": [437, 438, 439, 441], "inverse_indic": [437, 438, 440], "aggreg": [437, 438], "fourth": [437, 438], "1141": [437, 438], "8101": [437, 438], "2119": [437, 438], "3519": [437, 438], "40501155": [437, 438], "77361575": [437, 438], "97776199": [437, 438], "36831157": [437, 438], "89148434": [437, 438], "9512272": [437, 438], "67542176": [437, 438], "41985657": [437, 438], "23478023": [437, 438], "9298": [437, 438], "8460": [437, 438], "6252": [437, 438], "4033": [437, 438], "7443": [437, 438], "2577": [437, 438], "3707": [437, 438], "0545": [437, 438], "3238": [437, 438], "5944": [437, 438], "0775": [437, 438], "4327": [437, 438], "176": [437, 438], "889": [437, 438], "763": [437, 438], "071": [437, 438], "262": [437, 438], "456": [437, 438], "114": [437, 438], "349": [437, 438], "615": [437, 438], "594": [437, 438], "212": [437, 438], "457": [437, 438], "827": [437, 438], "209": [437, 438], "unique_count": 437, "unique_invers": 437, "unique_valu": 437, "argsort": 442, "ascend": [442, 443], "einsum": 445, "einstein": [445, 446], "summat": [445, 446], "seq": [445, 446], "jk": [445, 446], "ik": [445, 446], "126": [445, 446], "510": [445, 446], "99": [445, 446], "108": [445, 446], "117": [445, 446], "sentinel": [445, 447, 449], "unsign": [445, 450, 452], "degre": [445, 451, 453], "bessel": [445, 451, 453], "8164966": [445, 451], "varianc": [445, 453], "unbias": [445, 453], "autom": 457, "grow": 457, "ai": 457, "got": 457, "colab": 457, "sharp": 457, "weekli": 457, "event": 457, "immedi": 457, "favorit": 457, "jax_concat": 457, "tf_concat": 457, "np_concat": 457, "mx_concat": 457, "torch_concat": 457, "prompt": 457, "get_devic": 457, "reduce_prod": 457, "linalg": 457, "neural_net": 457, "ecosystem": [457, 463], "popular": [457, 463], "acceler": 457, "articl": 457, "lenton2021ivi": 457, "inter": 457, "author": 457, "lenton": 457, "daniel": 457, "pardo": 457, "fabio": 457, "falck": 457, "fabian": 457, "jame": 457, "stephen": 457, "clark": 457, "ronald": 457, "journal": 457, "arxiv": 457, "preprint": 457, "2102": 457, "02886": 457, "2021": 457, "add_array_spec": 460, "fn_array_spec": 460, "geglu": 464, "native_modul": [467, 468], "native_module_class": [467, 468], "firstlayersiren": 469, "kaimingnorm": [469, 473], "negative_slop": 469, "Ones": 469, "siren": 469, "w0": [469, 475], "filter_s": [478, 479, 480], "1d": [478, 479, 480], "conv1dtranspos": 478, "filter_shap": [478, 481, 482, 483, 484, 485], "conv2dtranspos": 478, "conv3dtranspos": 478, "depthwiseconv2d": 478, "num_channel": [478, 485], "bernoul": [478, 486], "num_lay": [478, 487], "return_sequ": [478, 487], "return_st": [478, 487], "get_initial_st": [478, 487], "dens": [478, 488], "multiheadattent": 478, "query_dim": [478, 489], "head_dim": [478, 489], "dropout_r": [478, 489], "context_dim": [478, 489], "with_to_q_fn": [478, 489], "with_to_kv_fn": [478, 489], "with_to_out_fn": [478, 489], "build_mod": [478, 489, 490, 491], "on_init": [478, 489, 490, 491], "__call__": [478, 489, 490, 491], "store_var": [490, 491], "arg_stateful_idx": [490, 491], "kwarg_stateful_idx": [490, 491], "fallback_to_non_compil": [490, 491, 494, 498], "with_partial_v": [490, 491], "initialz": [490, 491], "from_cal": [490, 491], "check_submod_ret": [490, 491], "get_mod_kei": [490, 491], "top_mod": [490, 491], "mod_depth": [490, 491], "mod_height": [490, 491], "mod_with_top_mod_key_chain": [490, 491], "save_weight": [490, 491], "weights_path": [490, 491], "show_mod_in_top_mod": [490, 491], "upper_depth": [490, 491], "lower_depth": [490, 491], "show_structur": [490, 491], "show_v_in_top_v": [490, 491], "sub_mod": [490, 491], "show_v": [490, 491], "track_submod_call_ord": [490, 491], "track_submod_ret": [490, 491], "v_with_top_v_key_chain": [490, 491], "layernorm": 492, "normalized_shap": [492, 493], "elementwise_affin": [492, 493], "trail": [492, 493], "affin": [492, 493], "0001": [494, 495, 496], "init_on_first_step": [494, 498], "ignore_miss": [494, 498], "overriden": [494, 498], "sgd": 494, "stochast": [494, 499], "sub_modul": [500, 501], "color": [503, 504]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [460, 0, 0, "-", "inspection"], [503, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "jax"], [70, 0, 0, "-", "numpy"], [74, 0, 0, "-", "tensorflow"], [77, 0, 0, "-", "torch"]], "ivy.functional.frontends.jax": [[67, 0, 0, "-", "lax"]], "ivy.functional.frontends.jax.lax": [[68, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.jax.lax.mathematical_functions": [[69, 3, 1, "", "tan"]], "ivy.functional.frontends.numpy": [[71, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[72, 3, 1, "", "add"], [73, 3, 1, "", "tan"]], "ivy.functional.frontends.tensorflow": [[75, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.tensorflow.mathematical_functions": [[76, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[78, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[79, 3, 1, "", "add"], [80, 3, 1, "", "tan"]], "ivy.functional.ivy": [[82, 0, 0, "-", "activations"], [90, 0, 0, "-", "compilation"], [92, 0, 0, "-", "constants"], [93, 0, 0, "-", "creation"], [112, 0, 0, "-", "data_type"], [145, 0, 0, "-", "device"], [195, 0, 0, "-", "elementwise"], [255, 0, 0, "-", "general"], [319, 0, 0, "-", "gradients"], [335, 0, 0, "-", "image"], [343, 0, 0, "-", "layers"], [356, 0, 0, "-", "linear_algebra"], [381, 0, 0, "-", "losses"], [385, 0, 0, "-", "manipulation"], [401, 0, 0, "-", "meta"], [405, 0, 0, "-", "nest"], [423, 0, 0, "-", "norms"], [425, 0, 0, "-", "random"], [432, 0, 0, "-", "searching"], [437, 0, 0, "-", "set"], [442, 0, 0, "-", "sorting"], [445, 0, 0, "-", "statistical"], [454, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[83, 3, 1, "", "gelu"], [84, 3, 1, "", "leaky_relu"], [85, 3, 1, "", "relu"], [86, 3, 1, "", "sigmoid"], [87, 3, 1, "", "softmax"], [88, 3, 1, "", "softplus"], [89, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[91, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[92, 4, 1, "", "e"], [92, 4, 1, "", "inf"], [92, 4, 1, "", "nan"], [92, 4, 1, "", "newaxis"], [92, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[94, 3, 1, "", "arange"], [93, 3, 1, "", "array"], [95, 3, 1, "", "asarray"], [96, 3, 1, "", "empty"], [97, 3, 1, "", "empty_like"], [98, 3, 1, "", "eye"], [99, 3, 1, "", "from_dlpack"], [100, 3, 1, "", "full"], [101, 3, 1, "", "full_like"], [102, 3, 1, "", "linspace"], [103, 3, 1, "", "logspace"], [104, 3, 1, "", "meshgrid"], [105, 3, 1, "", "native_array"], [106, 3, 1, "", "ones"], [107, 3, 1, "", "ones_like"], [108, 3, 1, "", "tril"], [109, 3, 1, "", "triu"], [110, 3, 1, "", "zeros"], [111, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[112, 1, 1, "", "DefaultDtype"], [112, 1, 1, "", "DefaultFloatDtype"], [112, 1, 1, "", "DefaultIntDtype"], [116, 3, 1, "", "as_ivy_dtype"], [117, 3, 1, "", "as_native_dtype"], [118, 3, 1, "", "astype"], [119, 3, 1, "", "broadcast_arrays"], [120, 3, 1, "", "broadcast_to"], [121, 3, 1, "", "can_cast"], [122, 3, 1, "", "closest_valid_dtype"], [123, 3, 1, "", "default_dtype"], [124, 3, 1, "", "default_float_dtype"], [125, 3, 1, "", "default_int_dtype"], [126, 3, 1, "", "dtype"], [127, 3, 1, "", "dtype_bits"], [128, 3, 1, "", "finfo"], [129, 3, 1, "", "function_supported_dtypes"], [130, 3, 1, "", "function_unsupported_dtypes"], [131, 3, 1, "", "iinfo"], [132, 3, 1, "", "invalid_dtype"], [133, 3, 1, "", "is_float_dtype"], [134, 3, 1, "", "is_int_dtype"], [135, 3, 1, "", "promote_types"], [136, 3, 1, "", "result_type"], [137, 3, 1, "", "set_default_dtype"], [138, 3, 1, "", "set_default_float_dtype"], [139, 3, 1, "", "set_default_int_dtype"], [140, 3, 1, "", "type_promote_arrays"], [141, 3, 1, "", "unset_default_dtype"], [142, 3, 1, "", "unset_default_float_dtype"], [143, 3, 1, "", "unset_default_int_dtype"], [144, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[145, 1, 1, "", "DefaultDevice"], [147, 1, 1, "", "DevClonedItem"], [148, 1, 1, "", "DevClonedIter"], [149, 1, 1, "", "DevClonedNest"], [150, 1, 1, "", "DevDistItem"], [151, 1, 1, "", "DevDistIter"], [152, 1, 1, "", "DevDistNest"], [145, 1, 1, "", "DevManager"], [154, 1, 1, "", "DevMapper"], [155, 1, 1, "", "DevMapperMultiProc"], [145, 1, 1, "", "MultiDev"], [157, 1, 1, "", "MultiDevItem"], [158, 1, 1, "", "MultiDevIter"], [159, 1, 1, "", "MultiDevNest"], [160, 1, 1, "", "Profiler"], [161, 3, 1, "", "as_ivy_dev"], [162, 3, 1, "", "as_native_dev"], [163, 3, 1, "", "clear_mem_on_dev"], [164, 3, 1, "", "default_device"], [165, 3, 1, "", "dev"], [166, 3, 1, "", "dev_clone"], [167, 3, 1, "", "dev_clone_array"], [168, 3, 1, "", "dev_clone_iter"], [169, 3, 1, "", "dev_clone_nest"], [170, 3, 1, "", "dev_dist"], [171, 3, 1, "", "dev_dist_array"], [172, 3, 1, "", "dev_dist_iter"], [173, 3, 1, "", "dev_dist_nest"], [174, 3, 1, "", "dev_unify"], [175, 3, 1, "", "dev_unify_array"], [176, 3, 1, "", "dev_unify_iter"], [177, 3, 1, "", "dev_unify_nest"], [178, 3, 1, "", "dev_util"], [179, 3, 1, "", "get_all_ivy_arrays_on_dev"], [180, 3, 1, "", "gpu_is_available"], [181, 3, 1, "", "num_cpu_cores"], [182, 3, 1, "", "num_gpus"], [183, 3, 1, "", "num_ivy_arrays_on_dev"], [184, 3, 1, "", "percent_used_mem_on_dev"], [185, 3, 1, "", "print_all_ivy_arrays_on_dev"], [186, 3, 1, "", "set_default_device"], [187, 3, 1, "", "set_split_factor"], [188, 3, 1, "", "split_factor"], [189, 3, 1, "", "split_func_call"], [190, 3, 1, "", "to_device"], [191, 3, 1, "", "total_mem_on_dev"], [192, 3, 1, "", "tpu_is_available"], [193, 3, 1, "", "unset_default_device"], [194, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[145, 2, 1, "", "__enter__"], [145, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "da_tune_step"], [145, 5, 1, "", "dim_size"], [145, 2, 1, "", "ds_tune_step"], [145, 2, 1, "", "map"], [145, 2, 1, "", "repeated_config_check"], [145, 5, 1, "", "tune_step"], [145, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[155, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[145, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "items"], [157, 2, 1, "", "keys"], [157, 5, 1, "", "shape"], [157, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "at_dev"], [158, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "start"], [160, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[196, 3, 1, "", "abs"], [197, 3, 1, "", "acos"], [198, 3, 1, "", "acosh"], [199, 3, 1, "", "add"], [200, 3, 1, "", "asin"], [201, 3, 1, "", "asinh"], [202, 3, 1, "", "atan"], [203, 3, 1, "", "atan2"], [204, 3, 1, "", "atanh"], [205, 3, 1, "", "bitwise_and"], [206, 3, 1, "", "bitwise_invert"], [207, 3, 1, "", "bitwise_left_shift"], [208, 3, 1, "", "bitwise_or"], [209, 3, 1, "", "bitwise_right_shift"], [210, 3, 1, "", "bitwise_xor"], [211, 3, 1, "", "ceil"], [212, 3, 1, "", "cos"], [213, 3, 1, "", "cosh"], [214, 3, 1, "", "divide"], [215, 3, 1, "", "equal"], [216, 3, 1, "", "erf"], [217, 3, 1, "", "exp"], [218, 3, 1, "", "expm1"], [219, 3, 1, "", "floor"], [220, 3, 1, "", "floor_divide"], [221, 3, 1, "", "greater"], [222, 3, 1, "", "greater_equal"], [223, 3, 1, "", "isfinite"], [224, 3, 1, "", "isinf"], [225, 3, 1, "", "isnan"], [226, 3, 1, "", "less"], [227, 3, 1, "", "less_equal"], [228, 3, 1, "", "log"], [229, 3, 1, "", "log10"], [230, 3, 1, "", "log1p"], [231, 3, 1, "", "log2"], [232, 3, 1, "", "logaddexp"], [233, 3, 1, "", "logical_and"], [234, 3, 1, "", "logical_not"], [235, 3, 1, "", "logical_or"], [236, 3, 1, "", "logical_xor"], [237, 3, 1, "", "maximum"], [238, 3, 1, "", "minimum"], [239, 3, 1, "", "multiply"], [240, 3, 1, "", "negative"], [241, 3, 1, "", "not_equal"], [242, 3, 1, "", "positive"], [243, 3, 1, "", "pow"], [244, 3, 1, "", "remainder"], [245, 3, 1, "", "round"], [246, 3, 1, "", "sign"], [247, 3, 1, "", "sin"], [248, 3, 1, "", "sinh"], [249, 3, 1, "", "sqrt"], [250, 3, 1, "", "square"], [251, 3, 1, "", "subtract"], [252, 3, 1, "", "tan"], [253, 3, 1, "", "tanh"], [254, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[256, 3, 1, "", "all_equal"], [257, 3, 1, "", "arg_info"], [258, 3, 1, "", "arg_names"], [259, 3, 1, "", "array_equal"], [260, 3, 1, "", "arrays_equal"], [261, 3, 1, "", "assert_supports_inplace"], [262, 3, 1, "", "cache_fn"], [263, 3, 1, "", "clip_matrix_norm"], [264, 3, 1, "", "clip_vector_norm"], [265, 3, 1, "", "container_types"], [266, 3, 1, "", "copy_array"], [267, 3, 1, "", "cumprod"], [268, 3, 1, "", "cumsum"], [269, 3, 1, "", "current_backend_str"], [270, 3, 1, "", "default"], [271, 3, 1, "", "einops_rearrange"], [272, 3, 1, "", "einops_reduce"], [273, 3, 1, "", "einops_repeat"], [274, 3, 1, "", "exists"], [275, 3, 1, "", "floormod"], [276, 3, 1, "", "fourier_encode"], [277, 3, 1, "", "gather"], [278, 3, 1, "", "gather_nd"], [279, 3, 1, "", "get_all_arrays_in_memory"], [280, 3, 1, "", "get_min_base"], [281, 3, 1, "", "get_min_denominator"], [282, 3, 1, "", "get_num_dims"], [283, 3, 1, "", "get_referrers_recursive"], [284, 3, 1, "", "has_nans"], [285, 3, 1, "", "indices_where"], [286, 3, 1, "", "inplace_arrays_supported"], [287, 3, 1, "", "inplace_decrement"], [288, 3, 1, "", "inplace_increment"], [289, 3, 1, "", "inplace_update"], [290, 3, 1, "", "inplace_variables_supported"], [291, 3, 1, "", "is_array"], [292, 3, 1, "", "is_ivy_array"], [293, 3, 1, "", "is_ivy_container"], [294, 3, 1, "", "is_native_array"], [295, 3, 1, "", "match_kwargs"], [296, 3, 1, "", "multiprocessing"], [297, 3, 1, "", "num_arrays_in_memory"], [298, 3, 1, "", "one_hot"], [299, 3, 1, "", "print_all_arrays_in_memory"], [300, 3, 1, "", "queue_timeout"], [301, 3, 1, "", "scatter_flat"], [302, 3, 1, "", "scatter_nd"], [303, 3, 1, "", "set_min_base"], [304, 3, 1, "", "set_min_denominator"], [305, 3, 1, "", "set_queue_timeout"], [306, 3, 1, "", "set_tmp_dir"], [307, 3, 1, "", "shape"], [308, 3, 1, "", "shape_to_tuple"], [309, 3, 1, "", "stable_divide"], [310, 3, 1, "", "stable_pow"], [311, 3, 1, "", "supports_inplace"], [312, 3, 1, "", "tmp_dir"], [313, 3, 1, "", "to_list"], [314, 3, 1, "", "to_numpy"], [315, 3, 1, "", "to_scalar"], [316, 3, 1, "", "try_else_none"], [317, 3, 1, "", "unstack"], [318, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[319, 1, 1, "", "GradientTracking"], [321, 3, 1, "", "adam_step"], [322, 3, 1, "", "adam_update"], [323, 3, 1, "", "execute_with_gradients"], [324, 3, 1, "", "gradient_descent_update"], [325, 3, 1, "", "is_variable"], [326, 3, 1, "", "lamb_update"], [327, 3, 1, "", "lars_update"], [328, 3, 1, "", "optimizer_update"], [329, 3, 1, "", "set_with_grads"], [330, 3, 1, "", "stop_gradient"], [331, 3, 1, "", "unset_with_grads"], [332, 3, 1, "", "variable"], [333, 3, 1, "", "variable_data"], [334, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[319, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[336, 3, 1, "", "bilinear_resample"], [337, 3, 1, "", "float_img_to_uint8_img"], [338, 3, 1, "", "gradient_image"], [339, 3, 1, "", "linear_resample"], [340, 3, 1, "", "random_crop"], [341, 3, 1, "", "stack_images"], [342, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[344, 3, 1, "", "conv1d"], [345, 3, 1, "", "conv1d_transpose"], [346, 3, 1, "", "conv2d"], [347, 3, 1, "", "conv2d_transpose"], [348, 3, 1, "", "conv3d"], [349, 3, 1, "", "conv3d_transpose"], [350, 3, 1, "", "depthwise_conv2d"], [351, 3, 1, "", "dropout"], [352, 3, 1, "", "linear"], [353, 3, 1, "", "lstm_update"], [354, 3, 1, "", "multi_head_attention"], [355, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[357, 3, 1, "", "cholesky"], [358, 3, 1, "", "cross"], [359, 3, 1, "", "det"], [360, 3, 1, "", "diagonal"], [361, 3, 1, "", "eigh"], [362, 3, 1, "", "eigvalsh"], [363, 3, 1, "", "inv"], [364, 3, 1, "", "matmul"], [365, 3, 1, "", "matrix_norm"], [366, 3, 1, "", "matrix_power"], [367, 3, 1, "", "matrix_rank"], [368, 3, 1, "", "matrix_transpose"], [369, 3, 1, "", "outer"], [370, 3, 1, "", "pinv"], [371, 3, 1, "", "qr"], [372, 3, 1, "", "slogdet"], [373, 3, 1, "", "solve"], [374, 3, 1, "", "svd"], [375, 3, 1, "", "svdvals"], [376, 3, 1, "", "tensordot"], [377, 3, 1, "", "trace"], [378, 3, 1, "", "vecdot"], [379, 3, 1, "", "vector_norm"], [380, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[382, 3, 1, "", "binary_cross_entropy"], [383, 3, 1, "", "cross_entropy"], [384, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[386, 3, 1, "", "clip"], [387, 3, 1, "", "concat"], [388, 3, 1, "", "constant_pad"], [389, 3, 1, "", "expand_dims"], [390, 3, 1, "", "flip"], [391, 3, 1, "", "permute_dims"], [392, 3, 1, "", "repeat"], [393, 3, 1, "", "reshape"], [394, 3, 1, "", "roll"], [395, 3, 1, "", "split"], [396, 3, 1, "", "squeeze"], [397, 3, 1, "", "stack"], [398, 3, 1, "", "swapaxes"], [399, 3, 1, "", "tile"], [400, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[402, 3, 1, "", "fomaml_step"], [403, 3, 1, "", "maml_step"], [404, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[406, 3, 1, "", "all_nested_indices"], [407, 3, 1, "", "copy_nest"], [408, 3, 1, "", "index_nest"], [409, 3, 1, "", "insert_into_nest_at_index"], [410, 3, 1, "", "insert_into_nest_at_indices"], [411, 3, 1, "", "map"], [412, 3, 1, "", "map_nest_at_index"], [413, 3, 1, "", "map_nest_at_indices"], [414, 3, 1, "", "multi_index_nest"], [415, 3, 1, "", "nested_any"], [416, 3, 1, "", "nested_indices_where"], [417, 3, 1, "", "nested_map"], [418, 3, 1, "", "nested_multi_map"], [419, 3, 1, "", "prune_nest_at_index"], [420, 3, 1, "", "prune_nest_at_indices"], [421, 3, 1, "", "set_nest_at_index"], [422, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[424, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[426, 3, 1, "", "multinomial"], [427, 3, 1, "", "randint"], [428, 3, 1, "", "random_normal"], [429, 3, 1, "", "random_uniform"], [430, 3, 1, "", "seed"], [431, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[433, 3, 1, "", "argmax"], [434, 3, 1, "", "argmin"], [435, 3, 1, "", "nonzero"], [436, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[438, 3, 1, "", "unique_all"], [439, 3, 1, "", "unique_counts"], [440, 3, 1, "", "unique_inverse"], [441, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[443, 3, 1, "", "argsort"], [444, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[446, 3, 1, "", "einsum"], [447, 3, 1, "", "max"], [448, 3, 1, "", "mean"], [449, 3, 1, "", "min"], [450, 3, 1, "", "prod"], [451, 3, 1, "", "std"], [452, 3, 1, "", "sum"], [453, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[455, 3, 1, "", "all"], [456, 3, 1, "", "any"]], "ivy.inspection": [[461, 3, 1, "", "add_array_specs"], [462, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[464, 0, 0, "-", "activations"], [467, 0, 0, "-", "converters"], [469, 0, 0, "-", "initializers"], [478, 0, 0, "-", "layers"], [490, 0, 0, "-", "module"], [492, 0, 0, "-", "norms"], [494, 0, 0, "-", "optimizers"], [500, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[465, 1, 1, "", "GEGLU"], [466, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[465, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[466, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[468, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[469, 1, 1, "", "Constant"], [471, 1, 1, "", "FirstLayerSiren"], [472, 1, 1, "", "GlorotUniform"], [469, 1, 1, "", "KaimingNormal"], [474, 1, 1, "", "Ones"], [475, 1, 1, "", "Siren"], [469, 1, 1, "", "Uniform"], [477, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[471, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[472, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[474, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[475, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[477, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[479, 1, 1, "", "Conv1D"], [480, 1, 1, "", "Conv1DTranspose"], [481, 1, 1, "", "Conv2D"], [482, 1, 1, "", "Conv2DTranspose"], [483, 1, 1, "", "Conv3D"], [484, 1, 1, "", "Conv3DTranspose"], [485, 1, 1, "", "DepthwiseConv2D"], [486, 1, 1, "", "Dropout"], [487, 1, 1, "", "LSTM"], [488, 1, 1, "", "Linear"], [489, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[479, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[480, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[481, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[482, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[483, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[484, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[485, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[486, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[488, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[489, 2, 1, "", "__init__"]], "ivy.stateful.module": [[491, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[491, 2, 1, "", "__init__"], [491, 2, 1, "", "build"], [491, 5, 1, "", "build_mode"], [491, 5, 1, "", "built"], [491, 2, 1, "", "check_submod_rets"], [491, 2, 1, "", "get_mod_key"], [491, 2, 1, "", "mod_depth"], [491, 2, 1, "", "mod_height"], [491, 2, 1, "", "mod_with_top_mod_key_chain"], [491, 2, 1, "", "save_weights"], [491, 2, 1, "", "show_mod_in_top_mod"], [491, 2, 1, "", "show_structure"], [491, 2, 1, "", "show_v_in_top_v"], [491, 2, 1, "", "sub_mods"], [491, 2, 1, "", "track_submod_call_order"], [491, 2, 1, "", "track_submod_rets"], [491, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[493, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[493, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[495, 1, 1, "", "Adam"], [496, 1, 1, "", "LAMB"], [497, 1, 1, "", "LARS"], [498, 1, 1, "", "Optimizer"], [499, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[495, 2, 1, "", "__init__"], [495, 2, 1, "", "set_state"], [495, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[496, 2, 1, "", "__init__"], [496, 2, 1, "", "set_state"], [496, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[497, 2, 1, "", "__init__"], [497, 2, 1, "", "set_state"], [497, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[498, 2, 1, "", "__init__"], [498, 2, 1, "", "set_state"], [498, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[499, 2, 1, "", "__init__"], [499, 2, 1, "", "set_state"], [499, 5, 1, "", "state"]], "ivy.stateful.sequential": [[501, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[501, 2, 1, "", "__init__"]], "ivy.verbosity": [[504, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 457], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 457], "set": [18, 29, 437], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "With": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55, 68, 71, 75], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 457], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 69, 73, 76, 80, 252], "roll": [25, 394], "add": [25, 72, 79, 199], "hypothesi": 27, "data": [27, 33, 41, 55, 112, 437, 438, 439, 441], "gener": [27, 255], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 112], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 490, 491], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 145], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 126], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 90, 91], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 469], "optim": [42, 494, 498], "transpil": 43, "role": 43, "convert": [43, 467], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 457], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 307, 437, 438, 439, 441], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "jax": 66, "lax": 67, "mathemat": [68, 71, 75], "numpi": 70, "tensorflow": 74, "torch": 77, "pointwis": 78, "op": 78, "activ": [82, 464], "gelu": [83, 466], "leaky_relu": 84, "relu": 85, "sigmoid": 86, "softmax": 87, "softplu": 88, "tanh": [89, 253], "constant": 92, "creation": 93, "note": [93, 99], "arang": 94, "asarrai": 95, "empti": 96, "empty_lik": 97, "ey": 98, "from_dlpack": 99, "full": 100, "full_lik": 101, "linspac": 102, "logspac": 103, "meshgrid": 104, "native_arrai": 105, "ones": 106, "ones_lik": 107, "tril": 108, "triu": 109, "zero": [110, 477], "zeros_lik": 111, "as_ivy_dtyp": 116, "as_native_dtyp": 117, "astyp": 118, "broadcast_arrai": 119, "broadcast_to": 120, "can_cast": 121, "closest_valid_dtyp": 122, "default_dtyp": 123, "default_float_dtyp": 124, "default_int_dtyp": 125, "dtype_bit": 127, "finfo": 128, "function_supported_dtyp": 129, "function_unsupported_dtyp": 130, "iinfo": 131, "invalid_dtyp": 132, "is_float_dtyp": 133, "is_int_dtyp": 134, "promote_typ": 135, "result_typ": 136, "set_default_dtyp": 137, "set_default_float_dtyp": 138, "set_default_int_dtyp": 139, "type_promote_arrai": 140, "unset_default_dtyp": 141, "unset_default_float_dtyp": 142, "unset_default_int_dtyp": 143, "valid_dtyp": 144, "devcloneditem": 147, "devclonedit": 148, "devclonednest": 149, "devdistitem": 150, "devdistit": 151, "devdistnest": 152, "devmapp": 154, "devmappermultiproc": 155, "multidevitem": 157, "multidevit": 158, "multidevnest": 159, "profil": 160, "as_ivy_dev": 161, "as_native_dev": 162, "clear_mem_on_dev": 163, "default_devic": 164, "dev": 165, "dev_clon": 166, "dev_clone_arrai": 167, "dev_clone_it": 168, "dev_clone_nest": 169, "dev_dist": 170, "dev_dist_arrai": 171, "dev_dist_it": 172, "dev_dist_nest": 173, "dev_unifi": 174, "dev_unify_arrai": 175, "dev_unify_it": 176, "dev_unify_nest": 177, "dev_util": 178, "get_all_ivy_arrays_on_dev": 179, "gpu_is_avail": 180, "num_cpu_cor": 181, "num_gpu": 182, "num_ivy_arrays_on_dev": 183, "percent_used_mem_on_dev": 184, "print_all_ivy_arrays_on_dev": 185, "set_default_devic": 186, "set_split_factor": 187, "split_factor": 188, "split_func_cal": 189, "to_devic": 190, "total_mem_on_dev": 191, "tpu_is_avail": 192, "unset_default_devic": 193, "used_mem_on_dev": 194, "elementwis": 195, "ab": 196, "aco": 197, "acosh": 198, "asin": 200, "asinh": 201, "atan": 202, "atan2": 203, "atanh": 204, "bitwise_and": 205, "bitwise_invert": 206, "bitwise_left_shift": 207, "bitwise_or": 208, "bitwise_right_shift": 209, "bitwise_xor": 210, "ceil": 211, "co": 212, "cosh": 213, "divid": 214, "equal": 215, "erf": 216, "exp": 217, "expm1": 218, "floor": 219, "floor_divid": 220, "greater": 221, "greater_equ": 222, "isfinit": 223, "isinf": 224, "isnan": 225, "less": 226, "less_equ": 227, "log": 228, "log10": 229, "log1p": 230, "log2": 231, "logaddexp": 232, "logical_and": 233, "logical_not": 234, "logical_or": 235, "logical_xor": 236, "maximum": 237, "minimum": 238, "multipli": 239, "neg": 240, "not_equ": 241, "posit": 242, "pow": 243, "remaind": 244, "round": 245, "sign": 246, "sin": 247, "sinh": 248, "sqrt": 249, "squar": 250, "subtract": 251, "trunc": 254, "all_equ": 256, "arg_info": 257, "arg_nam": 258, "array_equ": 259, "arrays_equ": 260, "assert_supports_inplac": 261, "cache_fn": 262, "clip_matrix_norm": 263, "clip_vector_norm": 264, "container_typ": 265, "copy_arrai": 266, "cumprod": 267, "cumsum": 268, "current_backend_str": 269, "default": 270, "einops_rearrang": 271, "einops_reduc": 272, "einops_repeat": 273, "exist": 274, "floormod": 275, "fourier_encod": 276, "gather": 277, "gather_nd": 278, "get_all_arrays_in_memori": 279, "get_min_bas": 280, "get_min_denomin": 281, "get_num_dim": 282, "get_referrers_recurs": 283, "has_nan": 284, "indices_wher": 285, "inplace_arrays_support": 286, "inplace_decr": 287, "inplace_incr": 288, "inplace_upd": 289, "inplace_variables_support": 290, "is_arrai": 291, "is_ivy_arrai": 292, "is_ivy_contain": 293, "is_native_arrai": 294, "match_kwarg": 295, "multiprocess": 296, "num_arrays_in_memori": 297, "one_hot": 298, "print_all_arrays_in_memori": 299, "queue_timeout": 300, "scatter_flat": 301, "scatter_nd": 302, "set_min_bas": 303, "set_min_denomin": 304, "set_queue_timeout": 305, "set_tmp_dir": 306, "shape_to_tupl": 308, "stable_divid": 309, "stable_pow": 310, "supports_inplac": 311, "tmp_dir": 312, "to_list": 313, "to_numpi": 314, "to_scalar": 315, "try_else_non": 316, "unstack": 317, "value_is_nan": 318, "gradient": 319, "adam_step": 321, "adam_upd": 322, "execute_with_gradi": 323, "gradient_descent_upd": 324, "is_vari": 325, "lamb_upd": 326, "lars_upd": 327, "optimizer_upd": 328, "set_with_grad": 329, "stop_gradi": 330, "unset_with_grad": 331, "variabl": 332, "variable_data": 333, "with_grad": 334, "imag": 335, "bilinear_resampl": 336, "float_img_to_uint8_img": 337, "gradient_imag": 338, "linear_resampl": 339, "random_crop": 340, "stack_imag": 341, "uint8_img_to_float_img": 342, "layer": [343, 478], "conv1d": [344, 479], "conv1d_transpos": 345, "conv2d": [346, 481], "conv2d_transpos": 347, "conv3d": [348, 483], "conv3d_transpos": 349, "depthwise_conv2d": 350, "dropout": [351, 486], "linear": [352, 356, 488], "lstm_updat": 353, "multi_head_attent": 354, "scaled_dot_product_attent": 355, "algebra": 356, "choleski": 357, "cross": 358, "det": 359, "diagon": 360, "eigh": 361, "eigvalsh": 362, "inv": 363, "matmul": 364, "matrix_norm": 365, "matrix_pow": 366, "matrix_rank": 367, "matrix_transpos": 368, "outer": 369, "pinv": 370, "qr": 371, "slogdet": 372, "solv": 373, "svd": 374, "svdval": 375, "tensordot": 376, "trace": 377, "vecdot": 378, "vector_norm": 379, "vector_to_skew_symmetric_matrix": 380, "loss": 381, "binary_cross_entropi": 382, "cross_entropi": 383, "sparse_cross_entropi": 384, "manipul": 385, "clip": 386, "concat": 387, "constant_pad": 388, "expand_dim": 389, "flip": 390, "permute_dim": 391, "repeat": 392, "reshap": 393, "split": 395, "squeez": 396, "stack": 397, "swapax": 398, "tile": 399, "zero_pad": 400, "meta": 401, "fomaml_step": 402, "maml_step": 403, "reptile_step": 404, "nest": 405, "all_nested_indic": 406, "copy_nest": 407, "index_nest": 408, "insert_into_nest_at_index": 409, "insert_into_nest_at_indic": 410, "map": 411, "map_nest_at_index": 412, "map_nest_at_indic": 413, "multi_index_nest": 414, "nested_ani": 415, "nested_indices_wher": 416, "nested_map": 417, "nested_multi_map": 418, "prune_nest_at_index": 419, "prune_nest_at_indic": 420, "set_nest_at_index": 421, "set_nest_at_indic": 422, "norm": [423, 492], "layer_norm": 424, "random": 425, "multinomi": 426, "randint": 427, "random_norm": 428, "random_uniform": 429, "seed": 430, "shuffl": 431, "search": 432, "argmax": 433, "argmin": 434, "nonzero": 435, "where": 436, "depend": [437, 438, 439, 441], "output": [437, 438, 439, 441], "unique_al": 438, "unique_count": 439, "unique_invers": 440, "unique_valu": 441, "sort": [442, 444], "argsort": 443, "statist": 445, "einsum": 446, "max": 447, "mean": 448, "min": 449, "prod": 450, "std": 451, "sum": 452, "var": 453, "util": 454, "all": 455, "ani": 456, "content": 457, "overview": 457, "quick": 457, "start": 457, "roadmap": [457, 463], "citat": 457, "inspect": 460, "add_array_spec": 461, "fn_array_spec": 462, "geglu": 465, "to_ivy_modul": 468, "firstlayersiren": 471, "glorotuniform": 472, "Ones": 474, "siren": 475, "conv1dtranspos": 480, "conv2dtranspos": 482, "conv3dtranspos": 484, "depthwiseconv2d": 485, "lstm": 487, "multiheadattent": 489, "layernorm": 493, "adam": 495, "lamb": 496, "lar": 497, "sgd": 499, "sequenti": [500, 501], "verbos": 503, "cprint": 504}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})