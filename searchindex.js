Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linalg","functional/backends/jax/array_api/linalg/linear_algebra_extension","functional/backends/jax/array_api/linalg/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linalg/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linalg","functional/backends/mxnet/array_api/linalg/linear_algebra_extension","functional/backends/mxnet/array_api/linalg/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linalg/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linalg","functional/backends/numpy/array_api/linalg/linear_algebra_extension","functional/backends/numpy/array_api/linalg/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linalg/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linalg","functional/backends/tensorflow/array_api/linalg/linear_algebra_extension","functional/backends/tensorflow/array_api/linalg/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linalg/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linalg","functional/backends/torch/array_api/linalg/linear_algebra_extension","functional/backends/torch/array_api/linalg/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linalg/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linalg","functional/ivy/array_api/linalg/linear_algebra_extension","functional/ivy/array_api/linalg/linear_algebra_extension/vector_norm","functional/ivy/array_api/linalg/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linalg.rst","functional/backends/jax/array_api/linalg/linear_algebra_extension.rst","functional/backends/jax/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linalg/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linalg.rst","functional/backends/mxnet/array_api/linalg/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linalg/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linalg.rst","functional/backends/numpy/array_api/linalg/linear_algebra_extension.rst","functional/backends/numpy/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linalg/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linalg.rst","functional/backends/tensorflow/array_api/linalg/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linalg/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linalg.rst","functional/backends/torch/array_api/linalg/linear_algebra_extension.rst","functional/backends/torch/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linalg/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linalg.rst","functional/ivy/array_api/linalg/linear_algebra_extension.rst","functional/ivy/array_api/linalg/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linalg/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[825,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[386,0,0,"-"],creation_functions:[387,0,0,"-"],data_type_functions:[390,0,0,"-"],data_types:[394,0,0,"-"],linalg:[406,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[388,2,1,""],zeros:[389,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[390,1,1,""],finfo:[392,2,1,""],iinfo:[393,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[390,3,1,""],bits:[390,3,1,""],eps:[390,3,1,""],max:[390,3,1,""],min:[390,3,1,""],smallest_normal:[390,3,1,""]},"ivy.functional.backends.numpy.array_api.linalg":{linear_algebra_extension:[407,0,0,"-"],linear_algebra_functions:[409,0,0,"-"]},"ivy.functional.backends.numpy.array_api.linalg.linear_algebra_extension":{vector_norm:[408,2,1,""]},"ivy.functional.backends.numpy.core":{device:[430,0,0,"-"],general:[432,0,0,"-"],gradients:[466,0,0,"-"],image:[471,0,0,"-"],linear_algebra:[475,0,0,"-"],logic:[479,0,0,"-"],math:[480,0,0,"-"],random:[482,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[431,1,1,""],clear_mem_on_dev:[430,2,1,""],dev:[430,2,1,""],dev_from_str:[430,2,1,""],dev_to_str:[430,2,1,""],gpu_is_available:[430,2,1,""],num_gpus:[430,2,1,""],to_dev:[430,2,1,""],tpu_is_available:[430,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[431,3,1,""],start:[431,3,1,""],stop:[431,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[432,2,1,""],arange:[433,2,1,""],argmax:[434,2,1,""],argmin:[435,2,1,""],array:[436,2,1,""],asarray:[432,2,1,""],astype:[432,2,1,""],cast:[437,2,1,""],ceil:[432,2,1,""],clip:[432,2,1,""],compile:[438,2,1,""],concatenate:[439,2,1,""],constant_pad:[432,2,1,""],container_types:[432,2,1,""],copy_array:[432,2,1,""],cumprod:[440,2,1,""],current_framework_str:[432,2,1,""],dtype:[441,2,1,""],dtype_bits:[442,2,1,""],dtype_from_str:[443,2,1,""],dtype_to_str:[444,2,1,""],equal:[432,2,1,""],floor:[432,2,1,""],floormod:[432,2,1,""],full:[445,2,1,""],gather:[446,2,1,""],gather_nd:[447,2,1,""],get_num_dims:[432,2,1,""],identity:[448,2,1,""],indices_where:[449,2,1,""],inplace_arrays_supported:[432,2,1,""],inplace_decrement:[450,2,1,""],inplace_increment:[451,2,1,""],inplace_update:[452,2,1,""],inplace_variables_supported:[432,2,1,""],is_array:[453,2,1,""],linear_resample:[454,2,1,""],linspace:[455,2,1,""],logspace:[456,2,1,""],matmul:[432,2,1,""],meshgrid:[432,2,1,""],multiprocessing:[432,2,1,""],one_hot:[457,2,1,""],ones_like:[458,2,1,""],round:[432,2,1,""],scatter_flat:[459,2,1,""],scatter_nd:[460,2,1,""],shape:[432,2,1,""],split:[461,2,1,""],squeeze:[462,2,1,""],to_list:[432,2,1,""],to_numpy:[432,2,1,""],to_scalar:[432,2,1,""],transpose:[463,2,1,""],unstack:[464,2,1,""],where:[432,2,1,""],zero_pad:[432,2,1,""],zeros_like:[465,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[467,2,1,""],is_variable:[468,2,1,""],stop_gradient:[469,2,1,""],variable:[470,2,1,""],variable_data:[466,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[472,2,1,""],gradient_image:[473,2,1,""],stack_images:[474,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[476,2,1,""],qr:[477,2,1,""],vector_to_skew_symmetric_matrix:[478,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[481,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[483,2,1,""],randint:[482,2,1,""],random_normal:[482,2,1,""],random_uniform:[482,2,1,""],seed:[482,2,1,""],shuffle:[482,2,1,""]},"ivy.functional.ivy":{array_api:[826,0,0,"-"],core:[860,0,0,"-"],nn:[1201,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[827,0,0,"-"],creation_functions:[828,0,0,"-"],data_type_functions:[831,0,0,"-"],data_types:[834,0,0,"-"],elementwise_functions:[835,0,0,"-"],function_and_method_signatures:[845,0,0,"-"],linalg:[846,0,0,"-"],manipulation_functions:[850,0,0,"-"],searching_functions:[852,0,0,"-"],set_functions:[853,0,0,"-"],sorting_functions:[854,0,0,"-"],statistical_functions:[856,0,0,"-"],utility_functions:[857,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[827,4,1,""],pi:[827,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[829,2,1,""],zeros:[830,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[832,2,1,""],iinfo:[833,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[836,2,1,""],bitwise_and:[837,2,1,""],cos:[838,2,1,""],cosh:[839,2,1,""],isfinite:[840,2,1,""],isnan:[841,2,1,""],less:[842,2,1,""],logical_not:[843,2,1,""],sqrt:[844,2,1,""]},"ivy.functional.ivy.array_api.linalg":{linear_algebra_extension:[847,0,0,"-"],linear_algebra_functions:[849,0,0,"-"]},"ivy.functional.ivy.array_api.linalg.linear_algebra_extension":{vector_norm:[848,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[851,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[855,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[858,2,1,""],any:[859,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[861,0,0,"-"],compilation:[900,0,0,"-"],device:[902,0,0,"-"],dtype:[952,0,0,"-"],general:[976,0,0,"-"],gradients:[1075,0,0,"-"],image:[1091,0,0,"-"],linalg:[1098,0,0,"-"],logic:[1106,0,0,"-"],math:[1109,0,0,"-"],meta:[1125,0,0,"-"],multi_node:[1129,0,0,"-"],nest:[1173,0,0,"-"],random:[1185,0,0,"-"],reductions:[1192,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[862,2,1,""],builtin_add:[863,2,1,""],builtin_and:[864,2,1,""],builtin_bool:[865,2,1,""],builtin_contains:[866,2,1,""],builtin_deepcopy:[867,2,1,""],builtin_dir:[868,2,1,""],builtin_eq:[869,2,1,""],builtin_float:[870,2,1,""],builtin_floordiv:[871,2,1,""],builtin_ge:[872,2,1,""],builtin_getattr:[873,2,1,""],builtin_getattribute:[874,2,1,""],builtin_getitem:[875,2,1,""],builtin_gt:[876,2,1,""],builtin_int:[877,2,1,""],builtin_invert:[878,2,1,""],builtin_le:[879,2,1,""],builtin_lt:[880,2,1,""],builtin_mul:[881,2,1,""],builtin_ne:[882,2,1,""],builtin_neg:[883,2,1,""],builtin_or:[884,2,1,""],builtin_pos:[885,2,1,""],builtin_pow:[886,2,1,""],builtin_radd:[887,2,1,""],builtin_rand:[888,2,1,""],builtin_rfloordiv:[889,2,1,""],builtin_rmul:[890,2,1,""],builtin_ror:[891,2,1,""],builtin_rpow:[892,2,1,""],builtin_rsub:[893,2,1,""],builtin_rtruediv:[894,2,1,""],builtin_rxor:[895,2,1,""],builtin_setitem:[896,2,1,""],builtin_sub:[897,2,1,""],builtin_truediv:[898,2,1,""],builtin_xor:[899,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[901,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[902,1,1,""],DevClonedItem:[904,1,1,""],DevClonedIter:[905,1,1,""],DevClonedNest:[906,1,1,""],DevDistItem:[907,1,1,""],DevDistIter:[908,1,1,""],DevDistNest:[909,1,1,""],DevManager:[902,1,1,""],DevMapper:[911,1,1,""],DevMapperMultiProc:[912,1,1,""],MultiDev:[902,1,1,""],MultiDevItem:[914,1,1,""],MultiDevIter:[915,1,1,""],MultiDevNest:[916,1,1,""],Profiler:[917,1,1,""],clear_mem_on_dev:[918,2,1,""],default_device:[919,2,1,""],dev:[920,2,1,""],dev_clone:[921,2,1,""],dev_clone_array:[922,2,1,""],dev_clone_iter:[923,2,1,""],dev_clone_nest:[924,2,1,""],dev_dist:[925,2,1,""],dev_dist_array:[926,2,1,""],dev_dist_iter:[927,2,1,""],dev_dist_nest:[928,2,1,""],dev_from_str:[929,2,1,""],dev_to_str:[930,2,1,""],dev_unify:[931,2,1,""],dev_unify_array:[932,2,1,""],dev_unify_iter:[933,2,1,""],dev_unify_nest:[934,2,1,""],dev_util:[935,2,1,""],get_all_arrays_on_dev:[936,2,1,""],gpu_is_available:[937,2,1,""],num_arrays_on_dev:[938,2,1,""],num_cpu_cores:[939,2,1,""],num_gpus:[940,2,1,""],percent_used_mem_on_dev:[941,2,1,""],print_all_arrays_on_dev:[942,2,1,""],set_default_device:[943,2,1,""],set_split_factor:[944,2,1,""],split_factor:[945,2,1,""],split_func_call:[946,2,1,""],to_dev:[947,2,1,""],total_mem_on_dev:[948,2,1,""],tpu_is_available:[949,2,1,""],unset_default_device:[950,2,1,""],used_mem_on_dev:[951,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[902,3,1,""],da_tune_step:[902,3,1,""],dim_size:[902,3,1,""],ds_tune_step:[902,3,1,""],map:[902,3,1,""],repeated_config_check:[902,3,1,""],tune_step:[902,3,1,""],tuned:[902,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[911,3,1,""],map:[911,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[912,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[914,3,1,""],items:[914,3,1,""],keys:[914,3,1,""],shape:[914,3,1,""],values:[914,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[915,3,1,""],at_dev:[915,3,1,""],at_devs:[915,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[916,3,1,""],at_dev:[916,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[917,3,1,""],start:[917,3,1,""],stop:[917,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[952,1,1,""],DefaultFloatDtype:[952,1,1,""],DefaultIntDtype:[952,1,1,""],astype:[952,2,1,""],cast:[956,2,1,""],closest_valid_dtype:[957,2,1,""],convert_dtype:[958,2,1,""],default_dtype:[959,2,1,""],default_float_dtype:[960,2,1,""],default_int_dtype:[961,2,1,""],dtype:[962,2,1,""],dtype_bits:[963,2,1,""],dtype_from_str:[964,2,1,""],dtype_to_str:[965,2,1,""],invalid_dtype:[966,2,1,""],is_float_dtype:[967,2,1,""],is_int_dtype:[968,2,1,""],set_default_dtype:[969,2,1,""],set_default_float_dtype:[970,2,1,""],set_default_int_dtype:[971,2,1,""],unset_default_dtype:[972,2,1,""],unset_default_float_dtype:[973,2,1,""],unset_default_int_dtype:[974,2,1,""],valid_dtype:[975,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[952,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[952,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[952,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1001,2,1,""],abs:[977,2,1,""],all_equal:[978,2,1,""],arange:[979,2,1,""],arg_names:[980,2,1,""],argmax:[981,2,1,""],argmin:[982,2,1,""],array:[983,2,1,""],array_equal:[984,2,1,""],arrays_equal:[985,2,1,""],asarray:[976,2,1,""],assert_supports_inplace:[986,2,1,""],broadcast_to:[987,2,1,""],cache_fn:[988,2,1,""],ceil:[989,2,1,""],clip:[990,2,1,""],clip_matrix_norm:[991,2,1,""],clip_vector_norm:[992,2,1,""],concatenate:[993,2,1,""],constant_pad:[994,2,1,""],container_types:[995,2,1,""],copy_array:[996,2,1,""],cross:[997,2,1,""],cumprod:[998,2,1,""],cumsum:[999,2,1,""],current_framework_str:[1000,2,1,""],einops_rearrange:[1002,2,1,""],einops_reduce:[1003,2,1,""],einops_repeat:[1004,2,1,""],equal:[1005,2,1,""],exists:[1006,2,1,""],expand_dims:[1007,2,1,""],flip:[1008,2,1,""],floor:[1009,2,1,""],floormod:[1010,2,1,""],fourier_encode:[1011,2,1,""],full:[1012,2,1,""],gather:[1013,2,1,""],gather_nd:[1014,2,1,""],get_all_arrays_in_memory:[1015,2,1,""],get_min_base:[1016,2,1,""],get_min_denominator:[1017,2,1,""],get_num_dims:[1018,2,1,""],get_referrers_recursive:[1019,2,1,""],has_nans:[1020,2,1,""],identity:[1021,2,1,""],indices_where:[1022,2,1,""],inplace_arrays_supported:[1023,2,1,""],inplace_decrement:[1024,2,1,""],inplace_increment:[1025,2,1,""],inplace_update:[1026,2,1,""],inplace_variables_supported:[1027,2,1,""],is_array:[1028,2,1,""],isinf:[1029,2,1,""],linear_resample:[1030,2,1,""],linspace:[1031,2,1,""],logspace:[1032,2,1,""],match_kwargs:[1033,2,1,""],matmul:[1034,2,1,""],maximum:[1035,2,1,""],meshgrid:[1036,2,1,""],minimum:[1037,2,1,""],multiprocessing:[1038,2,1,""],num_arrays_in_memory:[1039,2,1,""],one_hot:[1040,2,1,""],ones:[1041,2,1,""],ones_like:[1042,2,1,""],print_all_arrays_in_memory:[1043,2,1,""],queue_timeout:[1044,2,1,""],repeat:[1045,2,1,""],reshape:[1046,2,1,""],round:[1047,2,1,""],scatter_flat:[1048,2,1,""],scatter_nd:[1049,2,1,""],set_min_base:[1050,2,1,""],set_min_denominator:[1051,2,1,""],set_queue_timeout:[1052,2,1,""],set_tmp_dir:[1053,2,1,""],shape:[1054,2,1,""],shape_to_tuple:[1055,2,1,""],split:[1056,2,1,""],squeeze:[1057,2,1,""],stable_divide:[1058,2,1,""],stable_pow:[1059,2,1,""],stack:[1060,2,1,""],supports_inplace:[1061,2,1,""],swapaxes:[1062,2,1,""],tile:[1063,2,1,""],tmp_dir:[1064,2,1,""],to_list:[1065,2,1,""],to_numpy:[1066,2,1,""],to_scalar:[1067,2,1,""],transpose:[1068,2,1,""],try_else_none:[1069,2,1,""],unstack:[1070,2,1,""],value_is_nan:[1071,2,1,""],where:[1072,2,1,""],zero_pad:[1073,2,1,""],zeros_like:[1074,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1075,1,1,""],adam_step:[1077,2,1,""],adam_update:[1078,2,1,""],execute_with_gradients:[1079,2,1,""],gradient_descent_update:[1080,2,1,""],is_variable:[1081,2,1,""],lamb_update:[1082,2,1,""],lars_update:[1083,2,1,""],optimizer_update:[1084,2,1,""],set_with_grads:[1085,2,1,""],stop_gradient:[1086,2,1,""],unset_with_grads:[1087,2,1,""],variable:[1088,2,1,""],variable_data:[1089,2,1,""],with_grads:[1090,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1075,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1092,2,1,""],float_img_to_uint8_img:[1093,2,1,""],gradient_image:[1094,2,1,""],random_crop:[1095,2,1,""],stack_images:[1096,2,1,""],uint8_img_to_float_img:[1097,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1099,2,1,""],inv:[1100,2,1,""],matrix_norm:[1101,2,1,""],pinv:[1102,2,1,""],qr:[1103,2,1,""],svd:[1104,2,1,""],vector_to_skew_symmetric_matrix:[1105,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1107,2,1,""],logical_or:[1108,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1110,2,1,""],acosh:[1111,2,1,""],asin:[1112,2,1,""],atan2:[1114,2,1,""],atan:[1113,2,1,""],atanh:[1115,2,1,""],cosh:[1116,2,1,""],divide:[1117,2,1,""],erf:[1118,2,1,""],exp:[1119,2,1,""],log:[1120,2,1,""],sin:[1121,2,1,""],sinh:[1122,2,1,""],tan:[1123,2,1,""],tanh:[1124,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1126,2,1,""],maml_step:[1127,2,1,""],reptile_step:[1128,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1129,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1174,2,1,""],copy_nest:[1175,2,1,""],index_nest:[1176,2,1,""],map:[1177,2,1,""],map_nest_at_index:[1178,2,1,""],map_nest_at_indices:[1179,2,1,""],multi_index_nest:[1180,2,1,""],nested_indices_where:[1181,2,1,""],nested_map:[1182,2,1,""],set_nest_at_index:[1183,2,1,""],set_nest_at_indices:[1184,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1186,2,1,""],randint:[1187,2,1,""],random_normal:[1188,2,1,""],random_uniform:[1189,2,1,""],seed:[1190,2,1,""],shuffle:[1191,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1193,2,1,""],reduce_max:[1194,2,1,""],reduce_mean:[1195,2,1,""],reduce_min:[1196,2,1,""],reduce_prod:[1197,2,1,""],reduce_std:[1198,2,1,""],reduce_sum:[1199,2,1,""],reduce_var:[1200,2,1,""]},"ivy.functional.ivy.nn":{activations:[1202,0,0,"-"],layers:[1210,0,0,"-"],losses:[1223,0,0,"-"],norms:[1227,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1203,2,1,""],leaky_relu:[1204,2,1,""],relu:[1205,2,1,""],sigmoid:[1206,2,1,""],softmax:[1207,2,1,""],softplus:[1208,2,1,""],tanh:[1209,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1211,2,1,""],conv1d_transpose:[1212,2,1,""],conv2d:[1213,2,1,""],conv2d_transpose:[1214,2,1,""],conv3d:[1215,2,1,""],conv3d_transpose:[1216,2,1,""],depthwise_conv2d:[1217,2,1,""],dropout:[1218,2,1,""],linear:[1219,2,1,""],lstm_update:[1220,2,1,""],multi_head_attention:[1221,2,1,""],scaled_dot_product_attention:[1222,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1224,2,1,""],cross_entropy:[1225,2,1,""],sparse_cross_entropy:[1226,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1228,2,1,""]},"ivy.graph_compiler":{compiler:[1229,0,0,"-"],globals:[1232,0,0,"-"],graph:[1235,0,0,"-"],helpers:[1237,0,0,"-"],op_logging:[1238,0,0,"-"],param:[1239,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1230,2,1,""],show_graph:[1231,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1233,2,1,""],log_global_inference_rel_times:[1234,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1235,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1235,3,1,""],add_fn_to_dict:[1235,3,1,""],add_param:[1235,3,1,""],compiled:[1235,3,1,""],connect:[1235,3,1,""],debug_info:[1235,3,1,""],get_param:[1235,3,1,""],get_param_recursive:[1235,3,1,""],include_generators:[1235,3,1,""],increment_param_count:[1235,3,1,""],log_all_ops:[1235,3,1,""],params_all_empty:[1235,3,1,""],save_debug_info:[1235,3,1,""],set_param:[1235,3,1,""],show:[1235,3,1,""],show_debug_info:[1235,3,1,""],update_inference_times:[1235,3,1,""],with_array_caching:[1235,3,1,""]},"ivy.graph_compiler.param":{Param:[1239,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1239,3,1,""],count:[1239,3,1,""],depth:[1239,3,1,""],get:[1239,3,1,""],is_var:[1239,3,1,""],ptype:[1239,3,1,""],set:[1239,3,1,""],set_count:[1239,3,1,""],shape:[1239,3,1,""]},"ivy.stateful":{activations:[1244,0,0,"-"],converters:[1247,0,0,"-"],initializers:[1249,0,0,"-"],layers:[1258,0,0,"-"],module:[1270,0,0,"-"],norms:[1272,0,0,"-"],optimizers:[1274,0,0,"-"],sequential:[1280,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1245,1,1,""],GELU:[1246,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1245,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1246,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1248,2,1,""]},"ivy.stateful.initializers":{Constant:[1249,1,1,""],FirstLayerSiren:[1251,1,1,""],GlorotUniform:[1252,1,1,""],KaimingNormal:[1249,1,1,""],Ones:[1254,1,1,""],Siren:[1255,1,1,""],Uniform:[1249,1,1,""],Zeros:[1257,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1251,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1252,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1257,3,1,""]},"ivy.stateful.layers":{Conv1D:[1259,1,1,""],Conv1DTranspose:[1260,1,1,""],Conv2D:[1261,1,1,""],Conv2DTranspose:[1262,1,1,""],Conv3D:[1263,1,1,""],Conv3DTranspose:[1264,1,1,""],DepthwiseConv2D:[1265,1,1,""],Dropout:[1266,1,1,""],LSTM:[1267,1,1,""],Linear:[1268,1,1,""],MultiHeadAttention:[1269,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1259,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1266,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1267,3,1,""],get_initial_state:[1267,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1268,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1269,3,1,""]},"ivy.stateful.module":{Module:[1271,1,1,""]},"ivy.stateful.module.Module":{__init__:[1271,3,1,""],build:[1271,3,1,""],build_mode:[1271,3,1,""],built:[1271,3,1,""],check_submod_rets:[1271,3,1,""],compile_graph:[1271,3,1,""],compile_on_next_step:[1271,3,1,""],get_mod_key:[1271,3,1,""],mod_depth:[1271,3,1,""],mod_height:[1271,3,1,""],mod_with_top_mod_key_chain:[1271,3,1,""],save_weights:[1271,3,1,""],show_graph:[1271,3,1,""],show_mod_in_top_mod:[1271,3,1,""],show_structure:[1271,3,1,""],show_v_in_top_v:[1271,3,1,""],sub_mods:[1271,3,1,""],track_submod_call_order:[1271,3,1,""],track_submod_rets:[1271,3,1,""],v_with_top_v_key_chains:[1271,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1273,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1273,3,1,""]},"ivy.stateful.optimizers":{Adam:[1275,1,1,""],LAMB:[1276,1,1,""],LARS:[1277,1,1,""],Optimizer:[1278,1,1,""],SGD:[1279,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1275,3,1,""],set_state:[1275,3,1,""],state:[1275,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1276,3,1,""],set_state:[1276,3,1,""],state:[1276,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1278,3,1,""],compile_graph:[1278,3,1,""],compile_on_next_step:[1278,3,1,""],set_state:[1278,3,1,""],show_graph:[1278,3,1,""],step:[1278,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.sequential":{Sequential:[1281,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1281,3,1,""]},"ivy.verbosity":{cprint:[1286,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1285,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1274,1275,1276],"02886":1241,"100":[1129,1241,1283],"141592653589793":827,"2021":1241,"2102":1241,"360":[835,838,1109,1121,1123],"718281828459045":827,"754":[827,831,832,835,844],"999":[1075,1077,1078,1082,1274,1275,1276],"abstract":[902,917,1241,1274,1278],"boolean":[40,41,835,837,841,843,902,937,949,952,966,975,976,978,984,985,1020,1022,1023,1027,1028,1029,1061,1071,1075,1081,1106,1107,1108,1125,1126,1127,1129],"break":43,"case":[15,18,19,40,41,42,43,835,836,902,941,948,951,976,979,1046,1048,1049,1098,1101,1103,1129,1173,1176,1180,1241,1258,1269,1270,1271,1274,1278,1287],"catch":[976,1001],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,390,430,431,831,833,902,904,905,906,907,908,909,911,912,914,915,916,917,929,930,952,976,980,1033,1075,1089,1129,1173,1175,1182,1223,1225,1226,1235,1239,1241,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],"default":[15,18,19,40,41,42,43,828,829,830,847,848,850,851,854,855,857,858,859,900,901,902,911,912,919,920,924,925,926,927,928,931,932,933,934,941,944,945,946,951,952,959,960,961,962,976,978,979,981,982,991,992,993,994,997,998,999,1008,1011,1012,1013,1018,1020,1021,1030,1032,1033,1036,1038,1041,1044,1045,1048,1049,1052,1054,1056,1058,1059,1068,1070,1071,1075,1078,1080,1081,1082,1083,1084,1086,1090,1098,1101,1103,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1185,1186,1188,1189,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],"final":[40,41,976,1011,1031,1032,1129,1258,1269,1284],"float":[40,41,42,43,407,408,827,828,829,830,831,832,835,836,844,847,848,861,880,886,902,911,912,935,941,944,948,951,952,960,967,976,979,991,992,994,1011,1012,1016,1017,1032,1050,1051,1052,1058,1059,1075,1077,1078,1080,1082,1083,1084,1091,1093,1097,1109,1117,1125,1126,1127,1128,1129,1185,1188,1189,1202,1204,1210,1218,1221,1222,1223,1224,1225,1226,1227,1228,1258,1266,1269,1272,1273,1274,1275,1276,1277,1278,1279],"function":[15,40,41,43,388,389,392,393,407,408,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,827,829,830,832,833,836,837,838,839,840,841,842,843,844,847,848,851,855,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1241,1244,1245,1246,1274,1277,1278,1279,1283,1284,1287],"import":[43,1241,1284,1287],"int":[40,41,42,43,387,388,389,407,408,482,828,829,830,831,832,833,847,848,850,851,854,855,857,858,859,861,880,886,900,901,902,924,925,926,927,928,931,932,933,934,939,940,946,952,961,963,968,976,981,982,987,993,994,998,999,1002,1003,1004,1007,1008,1011,1012,1013,1018,1021,1030,1031,1032,1040,1041,1045,1046,1048,1049,1054,1055,1056,1057,1060,1062,1063,1068,1070,1073,1075,1077,1078,1082,1091,1095,1096,1098,1101,1125,1126,1127,1128,1129,1173,1182,1185,1186,1187,1189,1190,1192,1194,1195,1196,1197,1198,1199,1200,1202,1207,1210,1211,1212,1213,1214,1215,1216,1217,1221,1223,1225,1226,1227,1228,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1272,1273],"long":[1210,1220],"new":[40,41,43,482,828,829,830,835,839,952,956,976,977,987,1002,1003,1004,1007,1011,1012,1013,1014,1041,1046,1048,1049,1050,1051,1058,1059,1060,1075,1078,1080,1082,1083,1084,1091,1093,1095,1097,1109,1111,1115,1116,1122,1124,1129,1173,1183,1184,1185,1186,1227,1228,1241,1247,1248,1258,1268,1272,1273,1274,1275,1276,1277,1278,1279,1284,1287],"public":[976,995],"return":[15,16,17,18,19,40,41,42,43,482,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,861,880,886,900,901,902,911,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,937,938,940,941,945,946,947,948,949,951,952,956,957,958,959,960,961,962,963,964,965,966,967,968,975,976,977,978,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1045,1046,1047,1048,1049,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1241,1247,1248,1258,1267,1268,1274,1278,1283,1284,1287],"short":[1210,1220,1241,1287],"static":[40,41,900,901],"super":1129,"true":[40,41,42,432,438,466,469,482,483,835,840,847,848,854,855,857,858,859,900,901,902,976,978,986,988,1006,1011,1020,1022,1071,1072,1075,1078,1080,1081,1082,1083,1084,1086,1098,1101,1125,1126,1127,1128,1129,1173,1174,1181,1185,1186,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1210,1218,1223,1224,1225,1226,1229,1230,1231,1235,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],"try":[40,41,976,1069,1129],"var":[40,41,1125,1126,1127,1287],"while":[40,41,42,1129],AND:[835,837,857,858,1106,1107],But:1287,For:[43,835,836,976,979,990,1060,1075,1081,1089,1098,1103,1109,1110,1241,1247,1248,1284,1287],Its:[1109,1113],NOT:[835,843],One:[40,41,976,1003,1046,1185,1187,1287],Ones:[1241,1249],Such:[976,995],That:1284,The:[15,16,17,18,19,40,41,42,43,835,836,837,838,840,842,844,847,848,850,851,854,855,857,858,859,861,880,886,900,901,902,911,912,918,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,941,944,945,946,947,948,951,952,956,957,958,963,964,965,966,975,976,979,983,984,987,988,991,992,993,994,996,997,1000,1001,1005,1008,1011,1013,1014,1021,1024,1025,1026,1028,1030,1032,1034,1036,1038,1041,1042,1045,1046,1048,1049,1050,1051,1052,1055,1056,1057,1058,1059,1060,1063,1071,1074,1075,1077,1078,1080,1082,1083,1084,1086,1089,1091,1093,1095,1097,1098,1101,1103,1104,1109,1110,1112,1113,1117,1118,1119,1120,1121,1123,1125,1126,1127,1128,1129,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1284,1287],There:[43,1241,1284],These:[43,1241],Used:[1173,1174,1181,1270,1271],Using:[1241,1242,1287],With:[40,41,1098,1101,1192,1194,1195,1196,1197,1198,1199,1200,1241,1283,1287],__array__:[976,983],__call__:[1258,1269,1270,1271],__del__:1129,__dict__:[1129,1284],__enter__:1129,__exit__:1129,__getitem__:1129,__getstate__:1129,__init__:[40,41,42,43,59,60,81,209,390,391,430,431,511,638,902,903,910,911,912,913,914,915,916,917,952,953,954,955,1075,1076,1129,1133,1140,1235,1236,1239,1240,1241,1244,1245,1246,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],__iter__:1129,__len__:1129,__next__:1129,__pow__:43,__repr__:1129,_assign_vari:1283,_axi:1129,_base:[1173,1174,1181],_compute_node_da_ratio:1129,_compute_node_strs_da:1129,_concat_unify_arrai:1129,_counter:1129,_cur_framework:[43,1129],_da_direct:1129,_da_directions_flip:1129,_da_step_tim:1129,_da_tim:1129,_da_tune_count:1129,_data:1129,_delta_da_dim_s:1129,_delta_sf:1129,_dict:1129,_dim_siz:1129,_first_da_tune_step:1129,_first_ns_tune_step:1129,_fn:1129,_forward:[1241,1283],_get_kalman_param:1287,_get_prior:1287,_get_some_model:1287,_handle_flat_arrays_in_out:43,_index:[1173,1174,1181],_input_queu:1129,_length:1129,_max_depth:1129,_max_node_dim_step_ratio:1129,_max_node_dim_step_s:1129,_max_split_factor_step_s:1129,_mean_unify_arrai:1129,_min_bas:[976,1059,1227,1228,1272,1273],_min_denomin:[976,1058],_min_node_dim_s:1129,_min_sf_tune_step:1129,_min_unit_node_tune_step:1129,_model:1287,_native_wrapp:43,_node_mapp:1129,_node_percent_mem:1129,_node_str:1129,_node_str_da_ratio:1129,_node_strs_da:1129,_node_strs_kei:1129,_node_strs_n:1129,_node_util:1129,_ns_step_tim:1129,_ns_time:1129,_ns_tune_count:1129,_num_nod:1129,_num_work:1129,_observed_config:1129,_output_queu:1129,_paramet:1283,_percent_mem_inc_per_sf:1129,_percent_mem_inc_per_unit_da_dim:1129,_percent_util_inc_per_unit_da_dim:1129,_ret_fn:1129,_safety_factor:1129,_save_dir:1129,_shift_da_split:1129,_shift_n:1129,_slice:1129,_step:[1274,1278],_sum_unify_arrai:1129,_timeout:1129,_tune:1129,_tune_da:1129,_tune_n:1129,_tune_step:1129,_unit_da_tune_count:1129,_unroll_step:1287,_with_node_mappig:1129,_worker:1129,_worker_class:1129,_worker_fn:1129,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,902,911,917,1129,1270,1271,1274,1278],abil:1241,abl:[40,41],about:[831,832,833],abov:[43,1185,1187],above_height:[40,41],abs:[290,432,558,686,847,848,976,1129],absolut:[40,41,976,977],abstractmethod:1129,accept:[15,43,1241],access:[40,41,1284],accord:[40,41,831,832,976,994,1013,1048,1049,1068,1073],accordingli:[847,848,857,858,859],accur:[59,390,430,431,902,914,915,916,917,952,1075,1235,1239,1249,1251,1252,1254,1255,1257],aco:[775,1109],acosh:[775,1109],across:[40,41,902,911,912,921,922,924,925,926,927,928,934,944,945,976,981,982,984,985,1129,1173,1177],activ:[1203,1204,1205,1206,1207,1208,1209,1241,1245,1246],actual:1284,adam:[1075,1077,1078,1082,1241,1274,1276,1283],adam_step:1075,adam_upd:1075,adapt:[1075,1083,1274,1277],add:[40,41,43,1129,1223,1224,1225,1226,1227,1228,1241,1272,1273,1284],add_fn_to_dict:1235,add_param:1235,added:[43,976,1058,1059,1280,1281],adding:[976,987],addit:[40,41,43,976,1002,1003,1004,1227,1228,1258,1268],adher:43,adjac:[976,979],adopt:[976,995],affect:[976,979],affin:[1272,1273],after:[835,844,976,1030,1075,1078,1079,1080,1082,1083,1084,1091,1092,1227,1228,1274,1275,1276,1277,1278,1279,1287],after_1:[976,994,1073],after_n:[976,994,1073],again:43,against:[40,41,1098,1101,1192,1194,1195,1196,1197,1198,1199,1200],agnost:[43,1241,1283,1284],aim:1287,algebra:1098,algorithm:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265,1287],align:[40,41,43,976,987],aliv:[902,936,938,942,976,1015,1039,1043],all:[15,16,17,18,19,40,41,43,107,232,417,537,664,847,848,850,851,857,900,901,902,911,936,942,976,977,978,984,985,995,1008,1015,1021,1043,1057,1098,1103,1125,1126,1127,1128,1129,1173,1174,1175,1181,1182,1185,1186,1189,1192,1194,1195,1196,1197,1198,1199,1200,1210,1220,1241,1284,1287],all_depth:[40,41],all_equ:976,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1173,all_tru:[40,41],alloc:[902,1129],allow:[976,1031,1032,1033,1270,1271],allow_dupl:[976,1033],alon:[902,941,951,1129,1241],along:[40,41,43,482,847,848,850,851,854,855,857,858,859,902,925,926,927,928,931,932,933,934,946,976,993,998,999,1008,1013,1030,1031,1032,1045,1056,1060,1063,1070,1098,1101,1125,1126,1127,1128,1129,1185,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200],alongsid:[1283,1284],alpha:[1202,1204],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,902,1129],also:[40,41,43,976,979,1075,1078,1125,1126,1127,1128,1173,1174,1175,1181,1182,1210,1219,1258,1268,1283],altern:1283,alwai:[40,41,43,1075,1081,1086],among:[40,41],amount:[902,948,1129,1241],angl:[1109,1110,1114],ani:[15,16,17,18,19,40,41,43,107,232,417,537,664,857,900,901,902,904,907,911,912,914,923,924,927,928,933,976,978,979,983,1001,1002,1003,1004,1005,1006,1020,1028,1033,1058,1059,1075,1079,1129,1173,1174,1177,1181,1182,1183,1184,1185,1189,1241,1247,1248,1270,1271,1283,1284,1287],anoth:[40,41,952,958,1241],another_backend:43,anyth:[43,1287],anywai:43,apart:43,api:[1241,1242],appear:[976,1007],append:[40,41,1129],appli:[15,18,19,40,41,835,843,976,1002,1003,1004,1075,1082,1083,1098,1104,1106,1107,1108,1125,1126,1127,1173,1177,1180,1182,1202,1203,1204,1205,1206,1207,1208,1209,1210,1219,1221,1222,1227,1228,1241,1244,1245,1246,1272,1273],applic:[1173,1177,1182,1210,1221,1222,1241,1287],approxim:[43,835,836,861,886,1202,1203],arang:[127,290,432,482,558,686,976,1031,1032],arbitrari:[40,41,902,931,932,934,1129],arc:[1109,1114],arcco:[1109,1110],arctan:[1109,1113],area:[835,836,1241],arg:[15,16,17,40,41,43,59,63,902,911,924,928,934,946,976,1002,1003,1004,1049,1129,1229,1230,1231,1235,1247,1248,1270,1271],arg_nam:976,arg_stateful_idx:[1229,1230,1231,1235,1270,1271],argmax:[127,432,558,686,976],argmin:[127,432,558,686,976],args_clon:1129,args_dist:1129,args_to_ivi:[15,1241],args_to_n:[15,1241],args_uni:1129,argsort:[104,229,414,534,661,854],argument:[15,16,17,18,19,40,41,42,43,59,63,900,901,902,911,912,924,928,934,976,979,980,988,1001,1033,1049,1109,1110,1129,1173,1177,1247,1248,1270,1271],aris:[1241,1287],arithmet:[43,1192,1195,1198,1200],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:482,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,127,290,432,482,558,686,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,880,886,902,920,921,922,925,926,927,928,931,932,933,934,936,938,942,946,947,952,956,962,967,968,976,977,978,979,981,982,984,985,986,987,989,990,991,992,993,994,996,997,998,999,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1018,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1034,1035,1036,1037,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1054,1056,1057,1060,1061,1062,1063,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1077,1078,1081,1082,1086,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1129,1173,1175,1182,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1241,1242,1258,1266,1267,1269,1274,1278,1283,1284],arrang:[976,1002],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,387,388,389,390,392,393,407,408,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859],array_builtin:[43,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899],array_equ:[290,686,976],array_lik:[482,976,983],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,976],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1241],arraywithgener:[22,1241],arraywithgradi:[24,1241],arraywithimag:[26,1241],arraywithlinalg:[28,1241],arraywithlog:[30,1241],arraywithmath:[32,1241],arraywithmeta:[34,1241],arraywithrandom:[36,1241],arraywithreduct:[38,1241],arriv:[40,41,42],articl:1241,arxiv:1241,as_arrai:[40,41,976,1018,1054],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[430,432,441,902,920,952,959,960,961,962],as_tensor:432,as_vari:[40,41],as_zero:[40,41],asarrai:[432,976],asin:[775,1109],asinh:[85,395,515,642,835],aspect:[1091,1096],assert:[40,41,976,986,1129],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:976,associ:[43,1098,1105],assum:[1284,1287],astyp:[432,952],asynchron:[40,41,42],at_dev:[40,42,902,915,916],at_kei:[40,41],at_key_chain:[40,41],at_nod:1129,atan2:[775,1109],atan:[775,1109],atanh:[775,1109],attent:[1210,1221,1222,1258,1269],attribut:[0,6,40,41,831,832,833,976,1042,1074],audienc:[1241,1284],author:1241,avail:[40,41,902,937,939,940,949,976,1003,1129],averag:[1075,1077,1078,1082,1125,1126,1127,1192,1195],average_across_step:[1125,1126,1127],avoid:[902,1129,1284],axes:[40,41,43,432,463,475,476,847,848,850,851,857,858,859,902,946,976,981,982,994,1007,1008,1062,1068,1073,1098,1101,1129,1192,1194,1195,1196,1197,1198,1199,1200],axes_length:[40,41,976,1002,1003,1004],axi:[40,41,407,408,432,434,435,439,440,446,454,455,456,461,462,464,847,848,850,851,854,855,857,858,859,902,904,907,914,925,926,927,928,931,932,933,934,946,976,981,982,993,994,997,998,999,1007,1008,1013,1030,1031,1032,1045,1056,1057,1060,1062,1063,1070,1073,1129,1185,1191,1192,1194,1195,1196,1197,1198,1199,1200,1202,1207,1223,1225,1226],axis0:[40,41,976,1062],axis1:[40,41,976,1062],back:[1270,1271,1274,1278],backend:[15,17,19,40,41,387,388,389,390,392,393,407,408,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,902,937,940,949,952,958,966,975,976,1023,1027,1075,1078,1080,1082,1083,1084,1089,1129,1241,1242,1247,1248,1274,1275,1276,1277,1278,1279,1283,1284,1287],background:[1241,1284],backprop:1287,backward:[857,858,859,1283],band:[976,1011],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,390,430,431,432,456,861,886,902,904,905,906,907,908,909,911,912,914,915,916,917,952,976,1016,1032,1050,1059,1075,1129,1192,1193,1235,1239,1241,1244,1245,1246,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1287],batch:[40,41,847,848,902,944,945,976,1008,1011,1021,1091,1095,1098,1104,1125,1126,1127,1128,1129,1210,1219,1227,1228,1272,1273],batch_shap:[432,448,976,1008,1021,1040,1091,1092,1093,1094,1095,1096,1097,1098,1105,1185,1186,1210,1220,1221,1222,1258,1267],batch_siz:[482,483,1129,1185,1186,1210,1211,1212,1213,1214,1215,1216,1217],bayesian:1287,becaus:[43,976,979],becom:[976,990,1109,1114,1287],been:[976,1002,1003,1004,1185,1186],befor:[40,41,43,902,946,1125,1126,1127,1129,1173,1182,1192,1194,1195,1196,1197,1198,1199,1200,1210,1221,1222,1287],before_1:[976,994,1073],before_n:[976,994,1073],begin:[1173,1174,1181,1284],behaviour:[43,1287],behind:[1075,1078,1080,1082,1083,1084,1241],being:[40,41,43,976,979,1044,1052,1129],belong:[40,41],below:[43,1241,1284,1287],below_depth:[40,41],benefit:1241,bernoul:[1210,1218,1258,1266],best:[976,1033,1241],beta1:[1075,1077,1078,1082,1274,1275,1276],beta2:[1075,1077,1078,1082,1274,1275,1276],beta:[1227,1228],between:[40,41,42,831,832,976,979,1098,1103,1173,1177,1185,1187,1223,1225,1226,1274,1276],bia:[1210,1219,1220,1258,1259,1260,1261,1262,1263,1264,1265,1268],bias_initi:[1258,1259,1260,1261,1262,1263,1264,1265,1268],bilinear:[1091,1092],bilinear_resampl:[163,345,471,601,760,1091],bilinearli:[1091,1092],binari:[835,837,1223,1224],binary_cross_entropi:1223,bit:[390,831,832,833,952,963,1091,1093,1097,1241],bitwis:[835,837],bitwise_and:[85,213,395,515,642,835],bitwise_oper:[0,7,8],block:[1241,1284],bool:[15,18,19,40,41,42,43,407,408,835,840,842,847,848,854,855,857,858,859,861,880,900,901,902,920,933,937,941,946,949,951,952,962,976,978,984,985,998,1001,1005,1006,1011,1018,1020,1028,1033,1054,1056,1070,1071,1072,1075,1078,1079,1080,1081,1082,1083,1084,1086,1098,1101,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1185,1186,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1210,1218,1247,1248,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],both:[43,976,997],bottom:1241,boundari:[40,41,1185,1189],branch:[900,901],brittl:43,broadcast:[40,41,43,835,837,847,848,857,858,859,861,880,886,976,987,1005,1035,1036,1037,1045,1098,1101,1109,1114,1117,1192,1194,1195,1196,1197,1198,1199,1200],broadcast_to:[290,686,976],build:[1129,1241,1258,1269,1270,1271],build_mod:[1258,1269,1270,1271],builder:1241,built:[902,976,979,1129,1258,1269,1270,1271],builtin:43,builtin_ab:[245,861],builtin_add:[245,861],builtin_and:[245,861],builtin_bool:[245,861],builtin_contain:[245,861],builtin_deepcopi:[245,861],builtin_dir:[245,861],builtin_eq:[245,861],builtin_float:[245,861],builtin_floordiv:[245,861],builtin_g:[245,861],builtin_getattr:[245,861],builtin_getattribut:[245,861],builtin_getitem:[245,861],builtin_gt:[245,861],builtin_int:[245,861],builtin_invert:[245,861],builtin_l:[245,861],builtin_lt:[245,546,673,861],builtin_mul:[245,861],builtin_n:[245,861],builtin_neg:[245,861],builtin_or:[245,861],builtin_po:[245,861],builtin_pow:[43,245,861],builtin_radd:[245,861],builtin_rand:[245,861],builtin_rfloordiv:[245,861],builtin_rmul:[245,861],builtin_ror:[245,861],builtin_rpow:[245,861],builtin_rsub:[245,861],builtin_rtruediv:[245,861],builtin_rxor:[245,861],builtin_setitem:[245,861],builtin_some_op:43,builtin_sub:[245,861],builtin_truediv:[245,861],builtin_xor:[245,861],bypass:1284,cach:[902,918,976,988],cache_fn:976,calcul:[40,41,42,43,835,836,844,861,886,1109,1117],call:[43,902,946,976,1044,1052,1069,1075,1079,1129,1173,1174,1177,1181,1258,1269,1270,1271,1274,1278,1284,1287],callabl:[40,41,900,901,902,911,912,946,976,988,1001,1003,1033,1069,1125,1126,1127,1128,1129,1173,1177,1178,1179,1181,1182,1210,1221],can:[43,902,944,945,946,976,1046,1091,1093,1129,1241,1283,1284,1287],cancel_join_thread:1129,captur:1241,cast:[40,41,127,290,432,558,686,952,976,993,1091,1093,1097],catch_except:[976,1001],categori:43,ceil:[290,432,686,976,979],cell:[1210,1220,1258,1267],certain:[40,41,976,979,1031,1032],chain:[40,41,1125,1126,1127,1280,1281],chang:[902,976,1046,1129,1173,1175,1182,1241,1283],channel:[976,1011,1091,1093,1094,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],check:[15,16,17,18,19,40,41,902,941,951,952,957,966,975,976,986,1006,1020,1028,1061,1071,1075,1081,1129,1173,1174,1181,1241,1284],check_nest:[1173,1181],check_shap:[40,41],check_submod_ret:[1270,1271],check_typ:[40,41],choic:[1241,1284],choleski:[764,1098],choos:[976,1072,1098,1103,1109,1114,1241],choose_random_framework:59,chosen:[40,41,976,979,1072],chunk:[902,944,945,946,1129],chunk_siz:[902,946,1129],circl:[1109,1110,1112],clark:1241,clear:[902,918,1129],clear_framework_stack:59,clear_mem_on_dev:[430,678,902],click:1241,clip:[40,41,290,432,686,976,991,992,1035,1037,1241],clip_matrix_norm:976,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,976],clipped_delta:1129,clone:[40,41,902,921,922,923,924,1129],clone_arrai:1129,clone_it:1129,clone_nest:1129,clonedit:1129,cloneditem:1129,clonednest:1129,close:[43,1091,1096,1109,1112,1129,1287],closest:[952,957],closest_valid_dtyp:952,code:[40,41,42,43,482,1241,1242,1283,1284],codebas:[902,944,945,1129,1241,1284,1287],codomain:[835,836,844],collect:[15,40,41,430,432,466,471,475,479,480,482,861,900,902,952,976,1075,1091,1098,1106,1109,1129,1173,1185,1192,1202,1210,1223,1227,1244,1258,1272,1274],color:[40,41,42,1285,1286],column:[976,1021],combin:[40,41,42,1091,1096,1241,1287],combined_batch_s:1129,come:1284,command:1241,commit:1287,common:[40,41,1109,1114],common_key_chain:[40,41],commun:[1241,1284],compar:[40,41,976,978,984,985],comparison_oper:[0,9,10],compat:[43,835,837,847,848,857,858,859,861,880,886,976,1005,1046,1109,1117,1241,1287],compil:[290,432,686,1230,1231,1235,1241,1270,1271,1274,1275,1276,1277,1278,1279],compile_graph:[1229,1241,1270,1271,1274,1278],compile_on_next_step:[1270,1271,1274,1275,1276,1277,1278,1279],complet:[40,41,1098,1103,1129],complex:[1284,1287],compon:[976,997],composit:43,comput:[40,41,835,837,838,842,843,847,848,861,880,902,946,976,991,992,998,999,1005,1034,1075,1077,1078,1079,1080,1082,1083,1084,1086,1088,1091,1094,1098,1099,1100,1101,1102,1103,1106,1107,1108,1109,1110,1112,1113,1114,1118,1119,1120,1121,1123,1173,1177,1192,1193,1194,1195,1196,1197,1198,1199,1200,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1223,1224,1225,1226],concat:[40,41,902,931,932,933,934,946,976,1011,1129],concaten:[40,41,127,290,432,558,686,976,1011,1129,1241],concatten:[40,41,902,931,932,933,934,946,1129],condit:[432,900,901,976,1072,1173,1181],conditon:[1173,1181],config:[40,41,1129],config_list:1129,configur:[40,41],conjunct:1284,connect:[1235,1258,1268,1269],consid:[40,41,1098,1103,1283,1287],consist:[40,41,902,934,1129,1192,1193,1270,1271,1284],constant:[902,911,912,976,994,1129,1173,1177,1223,1224,1225,1226,1227,1228,1249,1250,1254,1257,1270,1271,1272,1273,1284],constant_kwarg:1129,constant_pad:[290,432,558,686,976],constitu:[40,41],construct:[976,1063,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],constructor:[40,41,42,976,980,1280,1281],consum:[902,1129],cont_feat_dim:[1210,1221],contaienr:[40,41],contain:[15,18,19,42,43,828,829,830,835,836,837,840,842,844,847,848,854,855,857,858,859,861,880,886,902,921,925,946,952,956,976,977,981,982,990,991,992,995,1005,1020,1035,1037,1047,1058,1059,1075,1077,1078,1080,1082,1083,1084,1109,1117,1125,1126,1127,1128,1129,1185,1186,1192,1194,1195,1196,1198,1200,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[432,686,976],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[432,976,1038,1210,1221,1258,1269],context_dim:[1258,1269],contextmanag:[59,60],continu:[43,1129,1284],contract:[40,41,1192,1193],contribut:[1241,1242],contributor:1241,control:1241,conv1d:[194,376,496,817,1210,1241,1258],conv1d_transpos:[194,376,496,817,1210],conv1dtranspos:[1241,1258],conv2d:[194,376,496,627,817,1210,1241,1258],conv2d_transpos:[194,376,496,817,1210],conv2dtranspos:[1241,1258],conv3d:[194,376,496,627,817,1210,1241,1258],conv3d_transpos:[194,376,496,817,1210],conv3dtranspos:[1241,1258],convent:[40,41,1192,1193],conver:[902,918,929,941,948,951,1129],convers:[16,17,18,19,40,41,1129,1241],convert:[15,16,17,18,19,40,41,43,902,929,930,952,958,964,965,976,1055,1066,1067,1091,1093,1097,1098,1105,1129,1173,1175,1182,1241,1248],convert_dtyp:952,convolut:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],cool:43,cooler:43,coordin:[976,1036,1109,1110,1112,1114],copi:[40,41,482,976,996,1129,1173,1175],copy_arrai:[432,686,976],copy_nest:1173,core:[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1241],correct:[43,1241,1284],correctli:[40,41,1098,1101,1109,1114,1192,1194,1195,1196,1197,1198,1199,1200],correspond:[40,41,43,861,886,976,993,1185,1186],cos:[85,395,515,642,835,976,1011,1109,1110,1123,1284],cosh:[85,395,515,642,775,835,1109],cosin:[835,838,839,1109,1110,1111,1116],cost:[1075,1077,1078,1080,1082,1083,1084,1125,1126,1127,1128],cost_fn:[1125,1128],could:1287,count:[40,41,850,851,857,858,859,1129,1192,1197,1199,1239],cprint:1285,cpu:[40,41,43,902,939,941,947,948,951,976,979,983,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1074,1129,1185,1186,1187,1188,1189,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1283,1284],creat:[40,41,828,829,830,902,911,912,976,979,983,1012,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1065,1074,1075,1088,1129,1185,1186,1187,1188,1189,1241,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],create_if_abs:[40,41],create_vari:1249,creation:[40,41,42,43],creation_funct:[387,388,389,828,829,830],crop:[1091,1095],crop_siz:[1091,1095],cross:[290,686,976,1223,1224,1225,1226],cross_entropi:1223,cuda:[40,41,902,911,930,947,976,979,983,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1074,1129,1185,1186,1187,1188,1189,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],cumprod:[127,290,432,686,976],cumsum:[686,976],cumul:[976,998,999],current:[40,41,42,43,902,911,935,936,938,942,952,958,966,975,976,1000,1015,1023,1027,1039,1043,1129,1173,1174,1181,1241,1287],current_framework:59,current_framework_str:[432,686,976,1129],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1235,d_in:[1210,1211,1212,1213,1214,1215,1216],d_out:[1210,1211,1212,1213,1214,1215,1216],da_can_termin:1129,da_dim_s:[902,1129],da_direct:1129,da_tune_step:[902,1129],dai:1287,daniel:1241,data:[40,41,42,43,828,829,830,832,833,835,836,837,840,842,844,847,848,850,851,857,858,859,861,880,886,902,904,905,906,907,908,909,914,915,916,930,952,956,957,958,962,963,964,965,966,967,968,975,976,979,983,1005,1012,1021,1028,1041,1042,1046,1057,1061,1074,1075,1081,1089,1109,1117,1129,1210,1219,1241],data_format:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],data_type_funct:[390,392,393,831,832,833],dataset:[40,41],datatyp:[40,41,952,957,967,968],dcdw:[1075,1077,1078,1080,1082,1083],debug_info:1235,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1075,1082,1083,1274,1276,1277],decay_lambda:[1075,1082,1083,1274,1276,1277],decid:[40,41,1287],decompos:[1098,1099,1103],decomposit:[1098,1099,1103,1104],decor:43,decrement:[976,1024],dedic:[1075,1089,1247,1248],deep:[40,41,1241],deep_copi:[40,41],deeper:[902,924,928,934,1129,1173,1182,1241],deepli:[1173,1175],def:[43,60,81,209,391,511,638,903,910,913,953,954,955,1076,1129,1133,1140,1236,1240,1241,1250,1253,1256,1283,1284,1287],default_dev:43,default_devic:902,default_dtyp:[43,952],default_float_dtyp:952,default_int_dtyp:952,default_key_color:[40,41,42],default_nod:1129,default_rng:482,default_v:[976,1001],defaultdevic:[902,903],defaultdtyp:[952,953],defaultfloatdtyp:[952,954],defaultintdtyp:[952,955],defer:43,defin:[43,976,997,1040,1042,1074,1185,1187],degre:[835,838,1109,1121,1123],del:1129,delta:[1075,1077,1129,1235],delta_dim_s:1129,delta_percent_mem:1129,delta_sf:1129,delta_util:1129,demo:1241,denomin:[976,1010,1017,1051,1058,1059,1227,1228,1272,1273],dens:[1258,1268],depend:[43,835,836,861,886,976,1072,1098,1104,1241],depth:[40,41,432,457,902,924,928,934,976,1019,1040,1129,1173,1182,1235,1239,1270,1271],depth_cutoff:[40,41],depthwis:[1210,1217,1258,1265],depthwise_conv2d:[194,376,496,627,817,1210],depthwiseconv2d:[1241,1258],deriv:[1075,1077,1078,1080,1082,1083,1084,1173,1175,1182,1241,1270,1274,1278,1280],descend:[854,855,1098,1104],descent:[1075,1080,1274,1279],describ:[40,41,1192,1193],descript:[847,848],design:[1241,1242],desir:[40,41,902,947,952,956,976,979,983,1021,1022,1041,1042,1074,1091,1096,1129,1192,1194,1195,1196,1198,1200],desired_aspect_ratio:[471,474,1091,1096],desired_percent_increas:1129,detail:1287,detect:[40,41,1173,1174,1181],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,835,836,837,840,844,847,848,857,858,859,861,886,902,937,939,940,949,952,956,957,963,966,967,968,975,976,978,979,983,984,985,1020,1023,1027,1028,1061,1071,1075,1081,1109,1117,1125,1126,1127,1128,1129,1210,1221],dev:[40,41,42,43,120,284,430,432,433,436,446,447,448,455,456,457,458,459,460,465,482,483,551,678,902,905,906,908,909,911,912,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,938,941,942,943,944,945,946,947,948,951,976,979,983,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1074,1075,1090,1185,1186,1187,1188,1189,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],dev_clon:[40,41,902],dev_clone_arrai:902,dev_clone_it:902,dev_clone_nest:902,dev_dist:[40,41,902],dev_dist_arrai:902,dev_dist_it:902,dev_dist_nest:902,dev_from_str:[43,120,284,430,551,678,902],dev_mapp:902,dev_str:[40,41],dev_to_str:[120,284,430,551,678,902],dev_unifi:902,dev_unify_arrai:902,dev_unify_it:902,dev_unify_nest:902,dev_util:902,devclonedit:902,devcloneditem:902,devclonednest:902,devdistit:902,devdistitem:902,devdistnest:902,develop:[1241,1284,1287],deviat:[40,41,1185,1188,1192,1198,1227,1228,1272,1273],devic:[21,40,41,43,387,388,389,431,432,445,828,829,830,904,905,906,907,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,976,979,983,1012,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1074,1075,1090,1185,1186,1187,1188,1189,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],devmanag:[902,910],devmapp:[902,912],devmappermultiproc:902,diag:[1098,1104],diagon:[976,1021],dict:[15,16,17,18,19,40,41,42,902,904,907,911,912,914,924,925,926,927,928,976,1002,1003,1004,1033,1125,1126,1127,1129,1173,1175,1176,1177,1180,1182,1247,1248],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,831,832,902,921,922,925,926,1098,1103,1129,1210,1219,1241,1284,1287],differenti:[1241,1284],dilat:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],dim:[40,41,43,976,1040,1091,1092,1096,1098,1104,1129,1258,1269],dim_siz:[40,41,902,1129],dimens:[40,41,42,847,848,850,851,857,858,859,902,933,976,987,993,997,1002,1003,1004,1007,1011,1018,1030,1040,1045,1046,1056,1057,1060,1068,1070,1091,1095,1098,1101,1104,1125,1126,1127,1128,1129,1185,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1207,1210,1211,1212,1213,1214,1215,1216,1217,1220,1223,1225,1226,1258,1259,1260,1261,1262,1263,1264,1265,1268,1269],dimension:[40,41,482,847,848,857,858,859,976,1056,1057,1098,1104],direct:1129,directli:[43,1173,1182,1284,1287],directori:[976,1053,1064],discret:[1223,1225],disk:[40,41,1091,1093],distanc:[976,979],distribut:[40,41,902,921,925,926,927,928,1129,1185,1186,1187,1188,1189,1210,1218,1258,1266,1270,1271],distribute_nest:1129,distributedarrai:[40,41],distrubt:[1223,1225],dive:[1241,1284],divid:[40,41,976,1056,1058,1109],dividend:[1109,1117],divis:[976,1010,1017,1051,1058,1059,1075,1077,1078,1082,1109,1117,1274,1275,1276],divisor:[1075,1077,1078,1082,1109,1117,1274,1275,1276],doc:1241,docstr:43,doe:[40,41,43,976,979,1056,1283],doesn:[1098,1103,1241],doing:43,domain:[835,836,844,1109,1110],don:1241,door:1287,dot:[1098,1100,1210,1221,1222,1258,1269],down:1283,downscal:[976,991,992],drag:[1241,1287],draw:[1185,1186,1188,1189],drawn:[1185,1186,1187,1188,1189],drop:[1241,1287],dropout:[1210,1241,1258,1269],dropout_r:[1258,1269],ds_tune_step:902,dtype:[40,41,43,127,290,387,388,389,390,392,393,432,433,436,437,445,448,458,465,558,686,828,829,830,831,832,833,956,957,958,959,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,979,983,1012,1021,1040,1041,1042,1074],dtype_bit:[127,290,432,558,686,952],dtype_from_str:[43,127,290,432,558,686,952],dtype_in:[432,442,443,444,952,958,963,964,965,966,967,968,975],dtype_to_str:[127,290,432,558,686,952],duplic:[40,41],dure:[40,41,43,900,901,976,1069,1075,1077,1078,1082,1125,1126,1127,1128,1270,1271,1274,1275,1276,1278],dynam:[432,438,900,901],each:[40,41,42,43,835,836,837,840,842,844,854,855,861,880,886,902,911,912,921,922,923,924,925,926,927,933,945,946,976,977,978,994,1005,1045,1056,1060,1063,1073,1075,1078,1080,1082,1083,1084,1091,1094,1098,1104,1109,1112,1117,1119,1120,1129,1173,1177,1185,1186,1192,1193,1210,1211,1212,1213,1214,1215,1216,1217,1218,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284],eager:1284,easi:1287,easili:1241,econom:1287,ecosystem:1241,edg:[976,990,994,1073],effect:[1075,1084],effective_grad:[1075,1084],effici:1287,einop:[40,41,976,1002,1003,1004],einops_rearrang:[40,41,976],einops_reduc:[40,41,976],einops_repeat:[40,41,976],einstein:[40,41,1192,1193],einsum:[40,41,180,364,484,617,797,1192],either:[40,41,976,1001,1033,1036,1038,1125,1126,1127,1128,1129,1258,1269,1270,1271,1284],eleg:1129,element:[40,41,43,482,835,836,837,838,839,840,842,843,844,850,851,854,855,857,858,859,861,880,886,902,923,927,933,952,956,976,977,979,981,982,984,985,989,990,991,992,998,999,1005,1008,1009,1010,1021,1022,1035,1037,1045,1047,1056,1067,1072,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1129,1192,1193,1195,1197,1199,1202,1203,1204,1205,1206,1207,1208,1209,1210,1218,1258,1266],elementwis:[40,41],elementwise_affin:[1272,1273],elementwise_funct:[835,836,837,838,839,840,841,842,843,844],elemtn:[1185,1186],elif:1129,els:[976,986,1001,1006,1129],elsewher:[976,1072],emphas:1241,empti:[40,41,1098,1103,1129],enabl:[40,41,42,1241],encapsul:[831,833],encod:[976,1011,1091,1093],end:[976,979,1241,1284],ensur:43,entir:[40,41,857,858,859,902,946,1129,1241,1258,1267],entri:[40,41,976,1008,1031,1032,1056,1057],entropi:[1223,1224,1225,1226],enumer:1129,environ:1241,eps:[390,831,832],epsilon:[1075,1077,1078,1082,1223,1224,1225,1226,1227,1228,1272,1273,1274,1275,1276],equal:[40,41,432,558,686,835,838,840,976,978,984,985,994,1056,1073,1109,1121,1123,1185,1189],equality_matrix:[976,978],equat:[40,41,1192,1193],equival:[847,848,976,979,1109,1123],erf:[480,775,1109],error:[40,41,902,976,1057,1109,1118,1129,1202,1203,1270,1271,1274,1278],essenti:43,etc:[40,41,43,902,947,976,979,983,1013,1014,1021,1031,1032,1040,1041,1042,1048,1049,1074,1129,1185,1186,1187,1188,1189,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1287],euclidean:[847,848],euler:827,evalu:[40,41,857,858,859,976,1036,1173,1174,1181],even:1287,evenli:[40,41,976,979,1031,1032,1056],everi:[976,978,1287],exact:[40,41],exampl:[43,900,901,976,990,1060,1098,1103,1241,1283,1284,1287],example_input:[432,438,900,901],exc_tb:1129,exc_typ:1129,exc_val:1129,exce:[976,1037],except:[40,41,44,47,857,858,859,976,979,986,993,1001,1069,1129],excess_s:1129,excit:[1241,1284],exclud:[59,61,976,979,1185,1189],exclus:[40,41,432,440,453,466,468,976,998,1028,1075,1081,1185,1187],execut:[43,976,1069,1284],execute_with_gradi:[160,340,466,596,754,1075,1241,1283],exist:[40,41,976,1001,1129,1241,1274,1278,1287],exp:[775,1109],expand:[40,41,976,1007,1011],expand_dim:[40,41,290,686,976,1129],expect:[976,980],explain:1284,explicitli:[1258,1267,1269,1270,1271,1284],expon:[43,861,886,976,1059],exponenti:[43,861,886,1109,1118,1119],expos:[976,983,995],express:[976,1036],exsit:[40,41],extend:43,extra:[40,41,42,1075,1079],eye:[1098,1100],fabian:1241,fabio:1241,factor:[902,911,944,945,946,1075,1077,1078,1082,1083,1098,1104,1129,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265,1274,1275,1276,1277],falck:1241,fall:[1270,1271,1274,1278],fallback_to_non_compil:[1270,1271,1274,1278],fals:[15,18,19,40,41,42,59,66,67,68,69,70,407,408,430,432,440,441,453,461,464,466,467,468,475,476,835,840,847,848,854,855,857,858,859,902,920,933,941,946,951,952,959,960,961,962,976,978,998,1001,1006,1011,1018,1028,1033,1054,1056,1070,1072,1075,1078,1079,1080,1081,1082,1083,1084,1098,1101,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1192,1194,1195,1196,1197,1198,1199,1200,1229,1230,1231,1235,1239,1247,1248,1270,1271,1274,1275,1276,1277,1278,1279],fan_in:1249,fan_mod:1249,fan_out:1249,far:[1173,1174,1181,1283],faster:[900,901],favourit:[1241,1283],feasibl:1287,feat_dim:[1210,1221,1222],fed:[902,946,1129],feed:[902,946,1129],field:1287,file:[40,41,43,976,1053,1064,1270,1271],filepath:[40,41],fill:[40,41,828,829,830,976,1012,1041,1185,1187],fill_valu:[432,445,976,1012],filter:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265,1287],filter_s:[1258,1259,1260],filter_shap:[1258,1261,1262,1263,1264,1265],find:[40,41,1287],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,208,209,390,391,510,511,637,638,831],finish:[1241,1287],finit:[835,840],first:[40,41,482,835,837,900,901,902,933,976,984,993,997,1005,1031,1032,1060,1062,1075,1079,1098,1104,1125,1126,1127,1128,1129,1173,1174,1181,1185,1191,1192,1197,1199,1258,1269,1270,1271,1274,1278,1284,1287],firstlayersiren:[1241,1249],firstli:[1284,1287],fist:[902,946,1129],fit:[40,41,430,432,466,471,475,479,480,482,976,1045,1091,1096],fkt:1287,flag:[40,41,1075,1081],flat:[40,41,43,976,1045,1048],flat_list:[40,41],flatten:[40,41,847,848,976,1011,1045,1192,1194,1195,1196,1198,1200],flatten_key_chain:[40,41,1270,1271],flexibl:[1241,1284],flip:[40,41,100,225,410,530,657,850,976],float32:[43,432,448,952,956,964,965,976,979,983,1021,1041,1042,1074],float_dtyp:[952,960,970],float_img_to_uint8_img:1091,floor:[290,432,686,976,1010,1129],floormod:[290,432,686,976],fluid:1287,fname:[1229,1231,1235,1270,1271],folder:[43,1241],follow:[40,41,43,831,833,847,848,902,946,976,1024,1025,1026,1058,1059,1075,1078,1080,1082,1083,1084,1129,1173,1177,1182,1210,1221,1222,1241,1258,1268,1274,1278],followng:[831,832],fomaml_step:1125,forget:[1075,1077,1078,1082,1274,1275,1276],fork:[976,1038],forkserv:[976,1038,1129],form:[15,16,17,18,19,40,41,976,983,1075,1078,1080,1082,1083,1084,1173,1175,1182,1210],format:[40,41,43,902,920,952,956,958,962,976,979,983,1021,1041,1042,1074,1129,1192,1193,1241,1283,1284],format_fn:[40,41],format_key_chain:[40,41],forward:[1270,1271,1274,1278,1283],found:[40,41,42],fourier:[976,1011],fourier_encod:976,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,98,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,223,226,230,233,234,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,356,357,360,361,362,363,365,366,367,368,369,370,371,372,375,377,378,379,380,381,382,383,388,389,391,392,393,396,397,398,399,400,401,402,403,404,408,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,528,531,535,538,539,547,552,553,554,555,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,597,598,599,600,602,603,604,606,607,608,609,613,614,615,616,618,619,620,621,622,623,624,628,629,630,635,636,638,639,640,643,644,645,646,647,648,649,650,651,655,658,662,665,666,674,679,680,681,682,683,684,685,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,755,756,757,758,759,761,762,763,765,766,767,768,769,770,771,773,774,776,777,778,779,780,781,782,783,784,785,786,787,788,789,791,792,793,794,795,796,798,799,800,801,802,803,804,807,808,809,810,811,812,813,815,816,818,819,820,821,822,823,824,829,830,832,833,835,836,837,838,839,840,841,842,843,844,848,851,855,858,859,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1228,1230,1231,1233,1234,1236,1240,1241,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1286,1287],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1129,framewrk:[976,1038],freeli:43,frequenc:[976,1011],from:[40,41,42,43,835,842,844,850,851,857,858,859,902,911,912,946,952,958,976,1001,1008,1013,1014,1021,1046,1057,1065,1072,1075,1078,1082,1091,1095,1098,1103,1125,1126,1127,1128,1129,1173,1175,1182,1185,1186,1187,1188,1189,1192,1197,1199,1210,1218,1221,1241,1247,1248,1258,1266,1269,1274,1278,1283,1284],from_cal:[1270,1271],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[127,290,432,558,686,831,832,976,1098,1103,1241],full_matric:[1098,1104],fulli:[43,1241,1258,1268,1269,1283],func:[40,41,432,438,466,467,900,901,902,946,976,988,1075,1079,1129],further:1287,furthermor:1287,futur:1287,gain:1249,gamma:[1227,1228],gather:[40,41,127,290,432,558,686,976,1014],gather_nd:[40,41,127,290,432,558,686,976],gauss:[1109,1118],gaussian:[1202,1203],geglu:[1241,1244],gelu:[374,493,806,1202,1241,1244],gener:[23,40,41,43,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,482,900,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1081,1185,1187,1189,1190,1241,1274,1278],geometr:[976,1011],get:[40,41,831,832,833,902,911,912,920,935,936,941,945,948,951,952,962,963,976,980,1015,1016,1017,1044,1129,1239,1241,1258,1267,1287],get_all_arrays_in_memori:976,get_all_arrays_on_dev:902,get_framework:59,get_initial_st:[1258,1267],get_min_bas:976,get_min_denomin:976,get_mod_kei:[1270,1271],get_num_dim:[432,686,976],get_param:1235,get_param_recurs:1235,get_referrers_recurs:976,getfullargspec:1129,gist:1241,give:[854,855,976,1046,1284],given:[40,41,43,828,829,830,850,851,854,855,902,935,941,944,945,946,948,951,952,956,976,979,983,990,998,999,1008,1014,1031,1032,1041,1042,1045,1048,1049,1056,1063,1068,1070,1074,1075,1077,1078,1080,1082,1083,1084,1098,1100,1105,1109,1110,1129,1173,1178,1179,1185,1188,1189,1191,1192,1195,1197,1198,1199,1200,1210,1211,1212,1213,1214,1215,1216,1217,1247,1248,1287],global:[40,41,42,902,911,912,919,944,945,946,952,959,960,961,976,1000,1016,1017,1044,1050,1051,1052,1058,1059,1075,1090,1129,1227,1228,1233,1234,1241,1272,1273],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1241,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],got:1241,gpu0:43,gpu2:43,gpu:[902,937,940,1129],gpu_is_avail:[430,902,1129],grad:[1241,1274,1278,1283],gradient:[25,40,41,467,468,469,470,902,946,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1094,1125,1126,1127,1128,1241,1274,1275,1276,1277,1278,1279,1283,1287],gradient_descent_upd:[1075,1125,1126,1127,1128],gradient_imag:[163,345,471,601,760,1091],gradienttrack:[1075,1076],graph:[1075,1078,1080,1082,1083,1084,1229,1230,1231,1236,1241,1270,1271],graph_compil:[1229,1230,1231,1232,1233,1234,1235,1239],greater:[40,41,976,979,1009,1057,1185,1189],green:[40,41,42,1285,1286],grid:[976,1036],group:[1091,1096],guid:[1241,1242,1287],gym:1241,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1287,half:[976,979,1129,1185,1189],hand:1241,handl:[40,41,42,43,900,901,902,918,920,929,930,941,948,951,1075,1078,1080,1082,1083,1084,1129,1274,1275,1276,1277,1278,1279],has:[40,41,43,976,1060,1098,1103,1109,1113],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,976],hasattr:1129,have:[40,41,43,831,832,835,836,837,840,842,844,847,848,850,851,857,858,859,861,880,886,976,993,997,1002,1003,1004,1005,1012,1060,1075,1081,1089,1098,1104,1109,1117,1129,1241,1283,1284],hdf5:[40,41,1270,1271],head:[1210,1221,1258,1269],head_dim:[1258,1269],height:[1091,1096],height_cutoff:[40,41],help:[59,390,430,431,902,914,915,916,917,952,1075,1235,1239,1241,1249,1251,1252,1254,1255,1257],helper:1241,here:[43,1241],hidden:[1210,1220,1258,1267],hierarch:[976,995],hierarchi:[40,41],high:[40,41,482,1185,1187,1189],higher:[1075,1078,1080,1082,1083,1084,1098,1104],highest:[1185,1187],highest_util:1129,highest_util_nod:1129,highli:1241,highlight:1287,highlight_subgraph:[1229,1231,1235],hint:43,hkt:1287,hold:[952,956,976,979,983,1048,1049],host:1241,hot:[976,1040],how:[1241,1258,1269,1270,1271,1284,1287],howev:[43,1284],http:1287,hyperbol:[835,836,839,1109,1111,1115,1116,1122,1124,1202,1209],hypothet:1287,icon:1241,idea:1241,ident:[40,41,43,127,290,432,558,686,976],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[827,831,832,835,844],if_exist:[40,41],ignor:[40,41,1274,1278],ignore_key_error:[40,41],ignore_miss:[1274,1278],ignore_non:[40,41],iinfo:[80,208,390,510,637,831],imag:[27,472,473,474,976,1030,1092,1093,1094,1095,1096,1097,1210,1211,1212,1213,1214,1216,1217,1241,1287],image_dim:[1091,1095],imkkhk:1287,immedi:[1241,1284,1287],implement:[43,835,836,861,886,1241,1284,1287],in_featur:[1210,1219],includ:[40,41,43,847,848,857,858,859,976,979,1020,1058,1059,1071,1173,1174,1185,1189,1258,1268,1269,1272,1273,1283],include_deriv:[1173,1175,1182],include_empti:[40,41],include_gener:[1229,1230,1231,1235,1270,1271],include_inf:[40,41,976,1020,1071],include_nest:[1173,1174],include_self:[40,41],inclus:[1185,1187],incom:[1210,1219],increas:[902,924,928,934,976,994,1007,1073,1129,1173,1182],increasingli:1287,increment:[976,1025,1129],increment_param_count:1235,inde:1241,indent:[40,41,42],independ:[1185,1186],index:[40,41,432,482,976,981,982,1013,1014,1036,1057,1060,1173,1176,1178,1179,1180,1183],index_nest:1173,indic:[40,41,432,446,447,457,459,460,847,848,854,855,976,981,982,1013,1014,1022,1040,1048,1049,1173,1174,1176,1178,1179,1180,1181,1183,1184,1185,1186,1202,1207,1210,1211,1212,1213,1214,1215,1216,1217,1227,1228,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271],indices_wher:[127,290,432,686,976],indistinguish:[835,844],inevit:1287,inf:[40,41,407,408,847,848,976,1020,1029,1071,1109,1113],infer:[835,842,900,901,976,1008,1018,1021,1046,1054,1091,1095,1098,1103,1284,1287],infin:[835,836,840,844,847,848,976,1029],infinit:[835,844],inform:[831,832,833,1075,1086],init_c:[1210,1220],init_h:[1210,1220],init_on_first_step:[1274,1278],initi:[40,41,42,59,390,430,431,902,914,915,916,917,952,1075,1129,1210,1220,1235,1239,1241,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1274,1278],initialz:[1270,1271],inner:[1125,1126,1127,1128],inner_batch_fn:[1125,1126,1127],inner_batch_shap:[1210,1219],inner_cost_fn:[1125,1126,1127],inner_grad_step:[1125,1126,1127,1128],inner_learning_r:[1125,1126,1127,1128],inner_optimization_step:[1125,1126,1127,1128],inner_v:[1125,1126,1127],inp:1129,inplac:[40,41,976,986,1023,1027,1061,1075,1078,1080,1082,1083,1084,1247,1248,1274,1275,1276,1277,1278,1279],inplace_arrays_support:[432,976],inplace_decr:[127,290,432,558,686,976],inplace_incr:[127,290,432,558,686,976],inplace_oper:[0,11,12],inplace_upd:[40,41,127,290,432,558,686,976,1247,1248],inplace_variables_support:[432,976],input:[15,18,19,40,41,42,43,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,900,901,902,911,912,919,920,921,924,925,928,934,946,947,952,956,957,959,960,961,962,963,967,968,976,977,978,981,982,984,985,986,987,989,990,991,992,993,994,996,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1018,1020,1021,1022,1024,1025,1026,1028,1029,1030,1034,1035,1036,1037,1045,1047,1054,1055,1057,1060,1061,1062,1063,1065,1066,1067,1068,1070,1071,1073,1075,1079,1081,1086,1090,1091,1092,1093,1094,1095,1097,1098,1101,1103,1104,1106,1107,1108,1109,1111,1113,1115,1116,1117,1121,1122,1123,1124,1125,1126,1127,1128,1129,1185,1186,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1227,1228,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273,1284],input_ax:[902,946,1129],input_channel:[1258,1259,1260,1261,1262,1263,1264,1267,1268],input_queu:1129,inputs_split:1129,insert:[976,1007],insid:43,inspect:1129,inspir:1287,instal:1241,instanc:[15,16,17,18,19,40,41,43,482,861,880,886,902,911,1129,1247,1248,1280,1281],instead:[40,41,482,1192,1194,1195,1196,1197,1198,1199,1200,1287],int32:43,int64:[952,956,976,979,983,1021,1041,1042,1074],int_dtyp:[952,961,971],integ:[40,41,482,831,833,835,837,847,848,857,858,859,952,968,976,979,989,1009,1047,1056,1185,1187,1190],integr:1241,intend:43,inter:1241,interchang:[40,41,976,1062],interest:1241,interfac:[976,983,1284],intermedi:[40,41],intern:[40,41,902,1075,1089,1129,1173,1174,1181,1182,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1280,1281],interpol:[976,1030],intersect:[1109,1110],interv:[40,41,857,858,859,976,979,990,1031,1032,1109,1112,1185,1189],introduc:1287,inv:[764,1098,1287],invalid:[857,858,859],invalid_dtyp:952,invers:[835,836,1098,1100,1102,1109,1110,1111,1112,1113,1115,1287],invert:[1098,1100,1102],invest:1287,invoc:[900,901],irrespect:1241,is_al:1129,is_arrai:[127,290,432,558,686,976,1129],is_float_dtyp:952,is_int_dtyp:952,is_mean:1129,is_sum:1129,is_var:[1235,1239],is_vari:[160,340,466,596,754,1075],isfinit:[85,213,395,515,642,835],isinf:[290,558,686,976],isinst:1129,isnan:[85,213,395,515,642,835],isnumer:1129,item:[15,19,40,41,861,873,874,902,911,912,914,921,923,925,927,933,952,959,976,995,1019,1058,1059,1129,1173,1177,1178,1179,1182,1183,1184,1241,1270,1271,1283],iter:[15,16,17,18,19,40,41,42,900,901,902,905,906,908,909,911,912,915,916,923,925,926,927,928,933,946,976,978,987,993,994,1008,1021,1036,1041,1045,1046,1049,1054,1056,1060,1063,1068,1073,1129,1173,1174,1175,1177,1181,1182],iterbal:[902,923,927,933,1129],its:[482,854,855,902,946,976,1021,1046,1062,1068,1129,1241],itself:[43,1173,1182],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,390,392,393,407,408,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1239,1241,1242,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1285,1286],ivy_backend:[40,41],ivy_bay:1287,ivyfcmodel:1283,ivyh:[40,41,42],ivymodul:[191,814],jame:1241,jax:[1075,1081,1241,1287],jax_concat:1241,jnp:1241,join:[40,41,976,993,1060,1129],journal:1241,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1241,1258,1267,1287],kaimingnorm:[1249,1253],kalman:1287,kalman_filt:1287,kalman_filter_step:1287,kalman_filter_upd:1287,keep:[40,41,902,947,976,1070,1129,1241,1287],keep_inner_v:[1125,1126,1127],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1125,1126,1127],keepdim:[40,41,407,408,432,464,475,476,847,848,857,858,859,976,1070,1098,1101,1192,1194,1195,1196,1197,1198,1199,1200],kei:[15,16,17,40,41,42,861,866,902,914,976,995,1125,1126,1127,1129,1173,1176,1180,1210,1221,1222,1241,1247,1248,1258,1269,1274,1278],kept:[40,41,42,1125,1126,1127],kera:1287,kernel:[1210,1220],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,902,911,912,924,928,934,976,980,1002,1003,1004,1033,1129,1173,1177,1270,1271],keyword_color_dict:[40,41,42],kind:[831,832,833,1287],kwarg:[15,16,17,40,41,42,59,63,902,911,924,928,934,976,1033,1129,1229,1230,1231,1235,1247,1248,1270,1271],kwarg_stateful_idx:[1229,1230,1231,1235,1270,1271],kwargs_clon:1129,kwargs_dist:1129,kwargs_uni:1129,label:[1223,1224,1225,1226],lamb:[1075,1082,1241,1274],lamb_upd:1075,lambda:[1129,1274,1277,1279,1283],lar:[1075,1082,1083,1241,1274],larger:[831,832,976,990],largest:[40,41,831,832,833,976,981,1009],lars_upd:1075,last:[40,41,850,851,857,858,859,976,979,997,1030,1056,1060,1098,1101,1104,1192,1197,1199,1202,1207,1210,1220,1258,1268],later:[40,41,976,988],latest:[1258,1267],layer:[1075,1078,1080,1082,1084,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1227,1228,1241,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1287],layer_norm:1227,layernorm:[1241,1272],layerwis:[1075,1083,1274,1277],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1173,1174,1181],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1202,1203,1204],leaky_relu:[806,1202],learn:[835,842,1075,1078,1080,1082,1083,1084,1098,1103,1125,1126,1127,1128,1185,1191,1241,1274,1275,1276,1277,1278,1279,1284,1287],learnabl:[1227,1228,1272,1273],leav:[15,18,19,40,41,1173,1174,1175,1181,1182],left:[40,41,1098,1101,1192,1194,1195,1196,1197,1198,1199,1200,1241],leftmost:[40,41],len:1129,length:[40,41,42,976,979,1046,1057,1068],lenton2021ivi:1241,lenton:1241,less:[40,41,43,85,213,395,515,642,835,847,848,976,989,1129,1185,1189],less_util_node_str:1129,let:[1284,1287],level:1241,librari:[1241,1283,1287],lightweight:1241,like:[43,1075,1081,1185,1189,1241,1283,1284,1287],limit:[40,41,42,831,832,833,976,990,991,992],linalg:[29,407,408,847,848,1099,1100,1101,1102,1103,1104,1105,1241],linear0:[1241,1283],linear1:1241,linear2:1283,linear:[976,1011,1030,1098,1202,1203,1204,1205,1210,1218,1241,1258,1259,1260,1261,1262,1263,1264,1265,1283],linear_algebra:[475,476,477,478],linear_algebra_extens:[407,408,847,848],linear_resampl:[127,290,432,558,686,976],linearli:[976,1011],link:1241,linspac:[127,290,432,558,686,976,979],list:[15,18,19,40,41,43,387,388,389,828,829,830,850,851,857,858,859,902,911,912,921,922,924,925,926,928,931,932,946,976,979,983,985,1036,1055,1056,1065,1070,1125,1126,1127,1129,1173,1174,1175,1177,1181,1182,1210,1211,1212,1213,1214,1215,1216,1217,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265],list_join:[40,41,42],list_stack:[40,41],liter:[407,408,847,848],littl:1284,load:[40,41],loaded_kwarg:1129,loader:1241,local_set:[976,1019],locat:[43,835,841,976,1029,1185,1186],log:[775,976,1032,1109,1129,1223,1224,1225,1226,1241],log_all_op:1235,log_global_inference_abs_tim:[1232,1241],log_global_inference_rel_tim:[1232,1241],logarithm:[1109,1120],logic:[31,835,843,857,858,859,1107,1108,1241],logical_and:[355,772,1106],logical_not:[85,213,395,515,642,835],logical_or:[355,772,1106],logit:[1223,1226],logspac:[127,290,432,558,686,976],look:[43,1284,1287],loop:[1125,1126,1127,1128],loss:[1224,1225,1226,1241,1283],loss_fn:[1241,1283],lot:1284,low:[40,41,482,1185,1187,1189],lower:[40,41,976,1035,1185,1189],lower_depth:[1270,1271],lowest:[15,18,19,40,41,1173,1182,1185,1187],lstm:[1210,1220,1241,1258],lstm_updat:[43,1210],machin:[831,832,833,835,842,1098,1103,1185,1191,1241,1284,1287],mai:[976,979,1001,1005,1241,1284,1287],main:[976,1021,1241],mainli:1241,make:[43,482,902,1129,1241,1284],maml:[1125,1126,1127],maml_step:1125,manag:[902,1129],manhattan:[847,848],mani:[40,41,43,976,1056,1241],manipulation_funct:[850,851],manner:[15,18,19,40,41,43,1173,1182],manual:[1173,1174,1181,1287],map:[40,41,42,835,841,902,911,976,1029,1129,1173,1178,1179,1182,1258,1269,1283],map_cont:[40,41],map_nest_at_index:1173,map_nest_at_indic:1173,map_sequ:[40,41],mapper:[902,911,912,1129],mask:[1210,1221,1222],match:[40,41,976,1033],match_kwarg:976,math:[33,481,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1129,1241],mathbb:[1098,1105],mathbf:[1098,1105],mathemat:[827,847,848],matmul:[43,290,432,558,686,976,1287],matplotlib:1284,matric:[1210,1219],matrix:[40,41,976,978,991,1034,1098,1099,1100,1101,1102,1103,1105,1210,1219,1258,1268],matrix_norm:[40,41,167,349,475,605,764,1098],matter:1241,max:[40,41,390,831,832,833,976,991,992,1003,1035,1048,1049,1129,1192,1194,1274,1276],max_batch_s:[40,41],max_chunk_s:[902,946,1129],max_depth:[40,41,902,906,909,916,924,928,934,976,1019,1129,1173,1182],max_dev_dim_step_ratio:902,max_freq:[976,1011],max_length:[40,41],max_node_dim_step_ratio:1129,max_norm:[40,41,976,991,992],max_split_factor_step_s:[902,1129],max_trust_ratio:[1075,1082,1274,1276],maxim:[1241,1284,1287],maximis:1241,maximum:[40,41,42,686,902,924,928,934,946,976,981,990,991,992,1011,1075,1082,1129,1173,1182,1192,1194],mayb:[15,18,19],mdi:1129,mean:[40,41,482,902,931,932,933,934,946,976,1003,1125,1126,1127,1128,1129,1173,1177,1185,1188,1192,1195,1198,1200,1249,1283,1287],measur:[1210,1221,1258,1269],mech:1241,mechan:[1241,1287],medic:1287,memori:[902,918,941,946,948,951,1129,1210,1220,1241],meshgrid:[290,432,686,976],messag:[1285,1286],meta:[35,1126,1127,1128,1241],method:[40,41,42,43,482,976,983,995,1036,1048,1049,1075,1082,1083,1129,1173,1174,1181,1182,1241,1258,1269,1270,1271,1284],might:[976,1001,1287],min:[40,41,390,831,832,833,847,848,976,1003,1037,1048,1049,1058,1098,1103,1129,1192,1196],min_bas:[976,1059],min_denomin:[976,1058],min_dev_dim_s:902,min_node_dim_s:1129,min_sf_tune_step:[902,1129],min_unit_dev_tune_step:902,min_unit_node_tune_step:1129,mind:1241,mini:[1227,1228,1272,1273],minimum:[40,41,686,902,952,956,976,979,982,983,990,1016,1017,1050,1051,1058,1059,1129,1192,1196],miss:[1274,1278],ml_framework:[835,842,976,979,1098,1103],mod:[976,1010],mod_depth:[1270,1271],mod_height:[1270,1271],mod_with_top_mod_key_chain:[1270,1271],mode:[40,41,475,477,900,901,902,931,932,933,934,946,1098,1103,1104,1129,1284],model:[1241,1283],modul:[40,41,42,59,976,1038,1129,1241,1242,1244,1245,1246,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273,1280,1281,1287],moment:[1075,1077,1078,1082,1274,1275,1276],more:[43,850,851,976,1060,1129,1241,1284,1287],more_util_node_str:1129,most:[40,41,43,1098,1103,1241,1287],move:[40,41,43,902,947,1129],much:[1241,1287],multi:[482,976,1038,1210,1221,1258,1269],multi_head_attent:1210,multi_index_nest:1173,multi_map:[40,41],multi_nod:1129,multidev:[902,913,914,915,934],multidevcontain:[40,41],multidevic:[902,911],multidevit:[902,905,908,911,912,916],multidevitem:[902,904,907],multidevnest:[902,906,909],multiheadattent:[1241,1258],multinod:[1129,1133],multinodecontain:1129,multinodeit:1129,multinodeitem:1129,multinodenest:1129,multinomi:[173,359,482,612,790,1185],multipl:[40,41,857,858,859,976,1033,1056,1098,1100,1192,1194,1195,1196,1197,1198,1200,1227,1228,1258,1268,1284],multipli:[40,41,976,998,1192,1197],multiprocess:[40,41,42,432,686,902,911,976,1129],must:[40,41,42,43,828,829,830,835,836,837,840,842,844,847,848,850,851,857,858,859,861,880,886,902,931,932,933,934,946,976,979,993,995,997,1005,1035,1037,1049,1060,1109,1114,1117,1129,1185,1190,1274,1278],mutabl:[1173,1175,1182],mutlidevic:[902,911],mutlinod:1129,mw_tm1:[1075,1078,1082],mx_concat:1241,mxnet:[43,1241,1287],my_func:43,mymodel:1241,name:[900,901,1229,1230,1231,1235,1283],namespac:[43,1284],nan:[40,41,835,836,840,841,976,1020,1071],nativ:[15,17,18,19,40,41,43,902,918,920,929,930,941,948,951,952,957,964,965,1129,1241,1242,1247,1248],native_modul:[1247,1248],native_module_class:[1247,1248],nativearrai:[15,18,19,43,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,861,880,886,902,920,946,947,952,956,962,967,968,976,977,978,979,981,982,983,984,985,987,989,990,991,992,993,994,996,997,998,999,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1014,1018,1020,1021,1022,1029,1030,1031,1032,1034,1035,1036,1037,1040,1041,1042,1045,1046,1047,1048,1049,1054,1056,1057,1060,1062,1063,1065,1066,1067,1068,1070,1071,1072,1073,1074,1129,1173,1175,1182],natur:[1109,1120,1287],ncdhw:[1210,1215,1216,1258,1263,1264],nchw:[1210,1213,1214,1217,1258,1261,1262,1265],ncw:[1210,1211,1212,1258,1259,1260],ndarrai:[43,387,388,389,390,392,393,407,408,482,976,1066],ndhwc:[1210,1215,1216,1258,1263,1264],nearest:[976,1047],need:[43,976,991,992,1210,1212,1214,1216,1241,1258,1260,1262,1264,1287],neg:[40,41,835,840,847,848,850,851,857,858,859,1192,1197,1199,1202,1204],negative_slop:1249,neither:1129,nest:[15,16,17,18,19,40,41,42,902,924,928,934,976,983,1065,1125,1126,1127,1129,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1270,1271,1274,1275,1276,1277,1278,1279],nested_indices_wher:1173,nested_map:[1129,1173],network:[1210,1219,1241,1242,1244,1258,1270,1271,1287],neural:[1210,1241,1244,1258,1283],new_node_percent_mem:1129,new_node_util:1129,new_node_utils_kei:1129,new_std:[1227,1228,1272,1273],newli:[900,901,976,987,988],newlin:[40,41,42],newshap:[976,987,1046],next:[831,832,1129,1270,1271,1274,1275,1276,1277,1278,1279],nhwc:[1210,1213,1214,1217,1258,1261,1262,1265],node:[40,41,1173,1174,1181],node_clon:1129,node_dist:1129,node_dist_arrai:1129,node_dist_it:1129,node_in:1129,node_mapp:1129,node_str:1129,node_to_str:1129,node_util:1129,nodedistit:1129,nodedistitem:1129,nodedistnest:1129,nodemanag:[1129,1140],nodemapp:1129,nodemappermultiproc:1129,noinspect:[43,903,953,954,955,1076,1129,1236],non:[40,41,847,848,857,858,859,900,901,952,966,1270,1271,1274,1278,1284],none:[40,41,42,43,59,61,64,387,388,389,407,408,430,432,433,436,438,445,446,447,448,455,456,457,458,459,460,461,462,463,465,475,476,482,483,828,829,830,831,832,833,835,842,847,848,850,851,857,858,859,900,901,902,911,912,918,919,944,945,946,947,952,959,960,961,976,979,983,1000,1001,1006,1008,1012,1013,1014,1019,1021,1023,1024,1025,1026,1027,1031,1032,1038,1040,1041,1042,1045,1048,1049,1050,1051,1056,1057,1058,1059,1068,1069,1074,1075,1078,1080,1082,1083,1084,1090,1091,1095,1098,1101,1103,1125,1126,1127,1128,1129,1173,1174,1177,1181,1182,1185,1186,1187,1188,1189,1192,1194,1195,1196,1197,1198,1199,1200,1210,1212,1214,1216,1219,1220,1221,1222,1227,1228,1229,1230,1231,1235,1239,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],norm:[40,41,847,848,976,991,992,1098,1101,1228,1241,1273,1274,1276],normal:[1185,1188,1227,1228,1272,1273],normalized_idx:[1227,1228],normalized_shap:[1272,1273],notat:[40,41,1192,1193],note:[43,1098,1103],noth:[40,41,1284],notimplementederror:1129,now:[40,41,902,947,976,977,1129,1241,1258,1269,1270,1271,1283,1284,1287],np_concat:1241,np_finfo:390,ns_tune_step:1129,num:[432,455,456,976,1031,1032],num_arrai:[40,41],num_arrays_in_memori:976,num_arrays_on_dev:902,num_band:[976,1011],num_channel:[1258,1265],num_chunk:1129,num_chunks_floor:1129,num_class:[1185,1186],num_cpu_cor:902,num_gpu:[120,430,902,1129],num_head:[1210,1221,1258,1269],num_kei:[1210,1221,1222],num_lay:[1258,1267],num_or_size_split:[40,41,432,461,976,1056],num_output:1129,num_queri:[1210,1221,1222],num_sampl:[432,454,482,483,976,1030,1091,1092,1185,1186],num_task:[1125,1126,1127,1128],number:[40,41,42,831,832,833,835,841,857,858,859,900,901,902,938,939,940,952,963,967,968,976,979,990,994,1007,1011,1018,1021,1030,1031,1032,1035,1039,1045,1056,1063,1067,1071,1073,1098,1104,1125,1126,1127,1128,1129,1185,1186,1190,1192,1194,1195,1196,1198,1200,1210,1221,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1284,1287],numer:[43,835,840,861,880,886,976,1016,1017,1050,1051,1058,1059,1109,1117,1249],numhead:[1210,1221],numpi:[40,41,387,388,389,390,392,393,407,408,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,976,1066,1098,1103,1104,1192,1193,1241,1283,1284,1287],nwc:[1210,1211,1212,1258,1259,1260],obj:[40,41],object:[40,41,42,59,390,831,832,833,902,952,956,976,979,983,1075,1173,1176,1178,1179,1180,1183,1184,1185,1191,1235,1239,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271],object_in:[432,436,976,983],observ:1129,occupi:[831,832,833,976,1048,1049],off:[976,979],offer:1241,offset:[1227,1228],often:1284,old:[40,41],on_init:[1258,1269,1270,1271],onc:[902,946,1129,1185,1186,1241],one:[40,41,43,847,848,850,851,902,931,932,933,934,946,952,958,976,1021,1033,1040,1048,1049,1057,1060,1098,1101,1129,1192,1193,1194,1195,1196,1197,1198,1199,1200,1241,1284,1287],one_hot:[127,432,558,686,976],onearrai:[976,1007],ones:[40,41,77,205,387,507,634,828,976,1021,1040,1042,1241],ones_lik:[127,290,432,558,686,976],ongo:43,onli:[40,41,43,482,850,851,902,1098,1103,1129,1173,1174,1175,1181,1274,1275,1276,1277,1278,1279,1283,1284],onlin:1241,onto:[902,931,932,947,1129,1173,1177,1182],oom:[902,1129],open:[976,979,1185,1189,1241,1287],opencv:1284,oper:[40,41,835,843,976,986,1002,1003,1004,1031,1032,1061,1075,1078,1080,1082,1083,1084,1106,1107,1108,1210,1211,1212,1213,1214,1215,1216,1217,1219,1241,1242],operand:[40,41,835,836,1192,1193],oppos:[976,1011],optim:[902,1075,1078,1080,1082,1083,1084,1125,1126,1127,1128,1129,1241,1275,1276,1277,1279,1283,1287],optimizer_upd:1075,option:[15,18,19,40,41,42,43,387,388,389,407,408,828,829,830,835,842,847,848,850,851,857,858,859,900,901,902,911,912,920,924,925,926,927,928,931,932,933,934,941,944,945,946,947,951,952,957,962,966,975,976,978,979,981,982,983,991,992,993,998,1000,1001,1008,1011,1012,1013,1014,1018,1020,1021,1028,1030,1031,1032,1033,1036,1038,1040,1041,1042,1045,1048,1049,1052,1054,1056,1057,1058,1059,1060,1068,1070,1071,1074,1075,1078,1080,1081,1082,1083,1084,1086,1091,1095,1098,1101,1103,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1185,1186,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1207,1210,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284],ord:[407,408,847,848,976,1008,1098,1104],order:[40,41,42,43,847,848,850,851,854,855,1075,1078,1080,1082,1083,1084,1098,1101,1125,1126,1127,1280,1281],ordered_node_util_kei:1129,org:1287,organ:43,origin:[40,41,42,976,1042,1046,1074,1098,1101],other:[40,41,43,861,863,864,869,871,872,876,878,879,880,881,882,884,886,887,888,889,890,891,893,894,895,897,898,899,900,901,976,978,979,1021,1075,1079,1185,1189,1241,1283,1284,1287],other_i:[43,861,880,886],otherwis:[15,16,17,18,19,40,41,835,840,847,848,857,858,859,902,919,952,959,960,961,976,986,1068,1069,1072,1075,1081,1086,1090,1125,1126,1127,1129,1192,1194,1195,1196,1198,1200],our:[1241,1287],out:[482,861,880,976,979,1109,1113,1210,1218,1220,1241,1258,1266],out_feat_dim:[1210,1221],out_featur:[1210,1218,1219],out_i:[835,840],outdat:1287,outer:[1125,1126,1127,1128],outer_batch_fn:[1125,1126,1127],outer_batch_shap:[1210,1219],outer_cost_fn:[1125,1126,1127],outer_v:[1125,1126,1127],outlin:1284,output:[40,41,43,828,829,830,850,851,902,911,912,946,976,979,988,1012,1021,1045,1063,1075,1079,1109,1114,1129,1185,1187,1188,1189,1210,1212,1214,1216,1218,1220,1221,1222,1241,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269],output_ax:[902,946,1129],output_axi:1129,output_channel:[1258,1259,1260,1261,1262,1263,1264,1267,1268],output_connected_onli:[1229,1231,1235,1270,1271],output_queu:1129,output_shap:[1210,1212,1214,1216,1258,1260,1262,1264],outsid:[976,990],over:[40,41,847,848,857,858,859,976,1008,1098,1101,1185,1189,1192,1194,1195,1196,1198,1200,1227,1228,1272,1273],overal:1284,overflow:[976,979],overhead:1284,overrid:[976,1040,1042,1074],overriden:[1274,1278],overwrit:[40,41,902,946,1129],overwrite_at_key_chain:[40,41],own:[1241,1284,1287],packag:[43,1284],pad:[976,994,1011,1073,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],pad_width:[432,976,994,1073],page:1241,pair:[1210,1222],parallel:[902,911,912,1129],parallelis:[902,911,912,1129],param:[40,41,42,43,432,446,447,835,844,902,946,976,977,1013,1014,1040,1041,1129,1240,1241,1270,1271,1283],paramet:[15,16,17,18,19,40,41,42,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,847,848,850,851,854,855,857,858,859,861,880,886,900,901,902,911,912,918,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,941,944,945,946,947,948,951,952,956,957,958,962,963,964,965,966,967,968,975,976,978,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1018,1020,1021,1022,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1041,1042,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1086,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],parameter:[1185,1188,1189],params_all_empti:1235,pardo:1241,pars:[976,995],part:[1075,1078,1080,1082,1083,1084,1109,1113,1241,1270,1271,1284],partial:[40,41,1270,1271],particl:1287,particular:1287,pass:[40,41,42,902,911,946,952,957,976,988,1075,1089,1125,1126,1127,1129,1247,1248,1270,1271,1274,1278,1280,1281],pattern:[40,41,976,1002,1003,1004],per:[902,1129,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],percent_used_mem_on_dev:902,percent_used_mem_on_nod:1129,percentag:[902,941,1129],perf_count:1129,perform:[40,41,43,854,855,857,858,859,902,976,981,982,998,1002,1003,1004,1024,1025,1026,1030,1031,1032,1075,1078,1080,1082,1083,1084,1091,1092,1125,1126,1127,1128,1129,1173,1178,1179,1192,1194,1195,1196,1197,1198,1199,1200,1202,1207,1210,1218,1220],permissable_step:1129,permit:43,permut:[482,976,1062,1068],perpendicular:[976,997],person:1241,physci:1287,pickl:[40,41,1129],pickle_filepath:[40,41],pid:1235,pinv:[349,764,1098],pip:1241,pipelin:1283,pkk:1287,pkkm1:1287,pkm1km1:1287,place:[40,41,43,828,829,830,902,947,976,1007,1012,1024,1025,1026,1129,1274,1275,1276,1277,1278,1279],placehold:[1173,1182],pleas:[482,1098,1103],point:[827,828,829,830,831,832,835,836,844,847,848,952,967,976,979,1109,1117],popul:[40,41,1185,1186],popular:1287,population_s:[482,483,1185,1186],portabl:[1241,1242],posit:[15,16,17,831,832,835,840,902,924,928,934,976,977,979,1007,1011,1129,1185,1190,1247,1248],possibi:[40,41],possibl:[976,1033,1065,1091,1096,1287],post:[1227,1228],post_shap:[40,41],power:[43,861,886,892,976,1016,1050,1059,1249],practic:1241,pre:[902,1129,1241],pre_shap:[40,41],precis:[831,832,835,844],pred:[1223,1224,1225,1226],predict:[1223,1224,1225,1226,1287],preprint:1241,present:[40,41],preserv:[40,41,42,850,851,976,1008,1075,1086],preserve_typ:[40,41,466,469,1075,1086],press:1241,prevent:[43,1075,1077,1078,1082,1129,1274,1275,1276],previou:[1075,1078,1082],previous:[976,988],prime:1241,print:[40,41,42,902,942,976,1043,1241,1283],print_all_arrays_in_memori:976,print_all_arrays_on_dev:902,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1274,1278],prob:[482,483,1185,1186,1210,1218,1258,1266],probabl:[1185,1186,1210,1218,1258,1266],problem:[43,1287],process:[43,902,911,912,941,951,976,1038,1129],process_specif:[902,941,951,1129],prod:[40,41,976,1003],produc:[902,911,912,1129],product:[40,41,976,997,998,1034,1192,1193,1210,1221,1222,1258,1269],profil:[120,284,430,551,678,902,1129],project:[1241,1283,1284,1287],promot:[43,835,836,837,844,847,848,861,886,1109,1117],prompt:1241,properli:43,properti:[40,41,390,902,914,1129,1235,1239,1270,1271,1274,1275,1276,1277,1279],provid:[40,41,43,850,851,857,858,859,900,901,902,919,952,959,960,961,966,975,976,1001,1040,1042,1049,1074,1075,1078,1080,1082,1083,1084,1090,1129,1241,1258,1267,1274,1275,1276,1277,1278,1279,1284],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1098,1102],ptype:[1235,1239],pure:[40,41,1241,1287],purpos:1287,put:1129,pybroadexcept:1129,pyprotectedmemb:[1129,1236],pyshadowingbuiltin:43,pyshadowingnam:[903,953,954,955,1076,1129],python:[40,41,902,941,951,976,979,1129,1241],pytorch:[1075,1078,1080,1082,1083,1084,1098,1103,1241,1274,1275,1276,1277,1278,1279,1283,1284,1287],pyunresolvedrefer:1129,quadrant:[1109,1114],queri:[40,41,861,875,896,902,935,945,1129,1210,1221,1222,1258,1269],query_dim:[1258,1269],query_kei:[40,41],queue:[40,41,42,902,911,912,976,1044,1052,1129],queue_class:[902,911,912,1129],queue_load_s:[40,41,42],queue_timeout:[40,41,42,976,1129],quick:[482,1241],quickli:1283,radian:[835,838,1109,1110,1112,1114,1121,1123],rai:[1109,1110],rais:[40,41,43,857,858,859,861,886,976,986,1016,1050,1057,1059,1069,1129,1270,1271,1274,1278],ram:[902,941,948,951,1129],randint:[173,359,482,612,790,1185],random:[37,40,41,483,1186,1187,1188,1189,1190,1191,1241],random_crop:1091,random_norm:[173,359,482,612,790,1185],random_uniform:[173,359,482,612,790,1185],randomli:[482,1091,1095,1210,1218,1258,1266],randomness_factor:[1229,1231,1235,1270,1271],rang:[482,976,979,1031,1032,1109,1114,1129,1241,1283,1287],rank:[847,848,857,858,859,976,994,1070,1073],rate:[1075,1078,1080,1082,1083,1084,1125,1126,1127,1128,1258,1269,1274,1275,1276,1277,1278,1279],rather:[40,41,902,946,976,979,1028,1075,1081,1129],ratio:[902,1075,1082,1091,1096,1129,1274,1276],raw:[40,41,1098,1103],raw_delta:1129,reach:[902,924,928,934,1129,1173,1182],read:[40,41],readi:[1129,1283],real:[1109,1110,1113],realiti:1284,rearrang:[40,41,976,1002,1004],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1125,1127],receiv:[902,911,912,976,980,1033,1129,1258,1268],receivess:[902,1129],receiving_fn:1235,receivng:[1125,1128],recev:[1125,1126,1127],recognit:1287,recommend:1241,rectifi:[1202,1204,1205],recurr:[1210,1220],recurrent_bia:[1210,1220],recurrent_kernel:[1210,1220],recurs:[40,41,1173,1174,1175,1181,1182],redefin:43,reduc:[40,41,857,858,859,902,946,976,1003,1098,1103,1129,1192,1194,1195,1196,1197,1198,1199,1200],reduce_max:[40,41,180,364,484,617,797,1192],reduce_mean:[40,41,180,364,484,617,797,1192,1241,1283],reduce_min:[40,41,180,364,484,617,797,1192],reduce_prod:[40,41,180,364,484,617,797,1192],reduce_std:[40,41,364,1192],reduce_sum:[40,41,180,364,484,617,797,1129,1192],reduce_var:[40,41,180,364,484,617,797,1192],reduct:[39,40,41,432,459,460,857,858,859,976,1003,1048,1049,1193,1194,1195,1196,1197,1198,1199,1200,1241],refactor:43,refer:[857,858,859,1075,1077,1078,1098,1105,1258,1268,1287],reflected_oper:[0,13,14],regard:[902,1129],regardless:[40,41,900,901],register_paramet:1283,reimplement:1287,rel:[850,851,1075,1078,1080,1082,1083,1084],rel_slice_obj:1129,relev:[1274,1275,1276,1277,1278,1279],relu:[806,1202,1203,1204,1241,1283],remain:[43,976,1046,1173,1177],remaind:[40,41,976,1010,1056],remov:[40,41,976,1057,1125,1126,1127],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,850,851,976,1008],rep:[976,1063],repeat:[40,41,290,686,976,1004,1063,1129,1284],repeated_config_check:[902,1129],repeatedli:[1173,1180],repetit:[40,41,976,1045,1063],replac:[40,41,43,482,483,976,990,1048,1049,1185,1186],repo:1241,repres:[43,835,836,952,958,963,1210,1219],represent:[40,41,42,43,827,831,832,833,835,837,902,929,930,952,958,964,965,976,1055,1065,1129],reptil:[1125,1128],reptile_step:1125,requir:[43,835,844,900,901,952,956,976,979,983,1247,1248],resampl:[976,1030],reshap:[40,41,43,482,686,976],reshape_lik:[40,41],respect:[835,837,842,861,880,976,1005,1075,1077,1078,1079,1080,1082,1083,1084,1098,1103,1109,1117,1125,1126,1127,1128],respons:1129,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,835,836,837,840,842,843,844,847,848,857,858,859,861,880,886,902,911,976,979,1005,1048,1049,1060,1098,1101,1106,1107,1108,1109,1117,1129,1192,1194,1195,1196,1197,1198,1199,1200,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1241],ret:1129,ret_dict:1129,ret_fn:[902,911,912,1129],retain:[1075,1079],retain_grad:[466,467,1075,1079],retreiv:1129,retrn:[976,1055],return_cont:[40,41],return_dict:[40,41],return_graph:[1229,1230,1231],return_inner_v:[1125,1126,1127,1128],return_sequ:[1258,1267],return_st:[1258,1267],rev:[976,1001],revers:[40,41,850,851,976,1001,1008,1068],right:[40,41],rk_e:1287,robot:1241,ronald:1241,root:[835,844],round:[290,432,686,835,844,976,979,1129],row:[976,1021,1185,1186],rule:[43,835,837,844,861,886,976,979,1109,1117],run:[902,911,1075,1077,1078,1082,1125,1126,1127,1128,1129,1241,1242,1258,1269,1270,1271],safe:[902,911,1129],safety_factor:[902,1129],same:[15,16,17,40,41,43,850,851,902,911,912,946,947,952,956,976,977,989,993,1009,1010,1013,1014,1040,1042,1047,1048,1049,1060,1074,1075,1081,1086,1098,1104,1109,1113,1125,1126,1127,1129,1192,1193,1210,1211,1212,1213,1214,1215,1216,1217,1241,1258,1259,1260,1261,1262,1263,1264,1265,1283,1287],same_arrai:[40,41],sampl:[976,1030,1091,1092,1185,1186,1188,1189,1210,1218,1241,1258,1266],satisfi:[976,983,1098,1100,1105],save:[40,41,976,1053,1064,1091,1093,1270,1271],save_debug_info:1235,save_dir:[430,431,902,917,1129],save_to_disk:[1229,1231,1235,1270,1271],save_weight:[1270,1271],scalar:[847,848,976,990,1040,1067,1071],scale:[902,944,945,1075,1083,1129,1210,1218,1221,1222,1227,1228,1258,1266,1269,1274,1277],scaled_dot_product_attent:1210,scatter:[976,1040,1048,1049],scatter_flat:[127,290,432,558,686,976],scatter_nd:[127,290,432,558,686,976],scene:[1075,1078,1080,1082,1083,1084],schemat:1241,screen:[40,41],search:[15,18,19,40,41],second:[40,41,835,837,902,933,976,984,997,1005,1044,1052,1062,1075,1077,1078,1082,1125,1127,1129,1274,1275,1276],secondli:1287,sector:[835,836],see:[43,59,390,430,431,482,835,837,847,848,857,858,859,861,880,886,902,914,915,916,917,952,976,979,1031,1032,1075,1109,1117,1235,1239,1241,1249,1251,1252,1254,1255,1257],seed:[40,41,173,482,790,1185],seed_valu:[40,41,482,1185,1190],seem:1241,seen_set:[976,1019],select:[976,983,1057,1284,1287],self:[40,41,43,59,390,430,431,861,880,886,902,914,915,916,917,952,1075,1129,1235,1239,1241,1249,1251,1252,1254,1255,1257,1274,1278,1283,1287],self_i:[861,880],sent:1129,seper:[976,1011],seq:[40,41,42,1192,1193,1270,1271],sequenc:[15,16,17,40,41,42,43,482,900,901,902,911,912,921,922,923,924,925,926,927,928,931,932,946,952,956,976,979,983,985,987,993,994,1008,1021,1033,1036,1041,1045,1046,1049,1056,1060,1063,1068,1073,1075,1079,1091,1095,1096,1098,1101,1129,1173,1184,1185,1187,1189,1192,1194,1195,1196,1197,1198,1199,1200,1210,1211,1212,1213,1214,1215,1216,1217,1227,1228,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1270,1271,1272,1273,1274,1278,1280,1281],sequenti:1241,set:[15,18,19,40,41,902,931,932,944,945,946,976,978,1000,1021,1050,1051,1052,1053,1075,1078,1080,1081,1082,1083,1084,1098,1101,1129,1173,1174,1181,1183,1184,1185,1186,1190,1192,1194,1195,1196,1197,1198,1199,1200,1239,1241,1258,1267,1274,1275,1276,1277,1278,1279,1284,1287],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1239,set_debug_mod:44,set_default_devic:902,set_default_dtyp:952,set_default_float_dtyp:952,set_default_int_dtyp:952,set_default_nod:1129,set_exception_debug_mod:44,set_framework:[40,41,59,1129,1241,1283,1284,1287],set_ivy_backend:[40,41],set_min_bas:976,set_min_denomin:976,set_nest_at_index:1173,set_nest_at_indic:1173,set_param:1235,set_queue_timeout:976,set_split_factor:[902,1129],set_stat:[1274,1275,1276,1277,1278,1279],set_tmp_dir:976,set_with_grad:1075,setter:1129,sever:1287,sgd:[1241,1274],shape0:1129,shape:[40,41,43,387,388,389,432,445,460,482,686,828,829,830,850,851,902,914,952,956,976,977,987,989,993,994,1007,1008,1009,1010,1012,1014,1018,1021,1040,1041,1042,1045,1046,1047,1048,1049,1055,1057,1060,1073,1074,1091,1095,1098,1100,1103,1109,1113,1114,1129,1185,1187,1188,1189,1192,1193,1210,1212,1214,1216,1235,1239,1258,1260,1261,1262,1263,1264,1265,1272,1273],shape_slic:[40,41],shape_to_tupl:976,share:[40,41,1241,1284],shift:1129,should:[40,41,42,43,482,835,836,837,840,844,847,848,861,880,886,900,901,902,976,987,988,995,1040,1046,1075,1078,1080,1082,1083,1084,1109,1117,1129,1192,1193,1241],show:[40,41,1235,1241,1287],show_debug_info:1235,show_graph:[1229,1241,1270,1271,1274,1278],show_mod_in_top_mod:[1270,1271],show_structur:[1270,1271],show_sub_contain:[40,41],show_v:[1270,1271],show_v_in_top_v:[1270,1271],shown:[40,41],shp:1129,shuffl:[40,41,173,482,790,1185],shuffle_h5_fil:[40,41],sigmoid:[806,1202,1241,1283],signatur:[43,59,390,430,431,432,466,471,475,479,480,482,902,914,915,916,917,952,1075,1235,1239,1249,1251,1252,1254,1255,1257],signific:1287,similar:[43,1210,1221,1258,1269],similarli:[1098,1103],simpl:[43,976,1006,1241,1284,1287],simplest:1284,simpli:[40,41,43,1241,1284,1287],simultan:1241,sin:[775,976,1011,1109,1123,1284],sinco:1284,sine:[835,836,1109,1112,1121,1122],singl:[40,41,900,901,902,911,912,931,932,933,934,976,1057,1067,1071,1091,1096,1129,1185,1188,1189,1192,1194,1195,1196,1197,1198,1199,1200,1241,1284,1287],singleton:[847,848,857,858,859],singular:[1098,1104],sinh:[775,1109],siren:[1241,1249],size:[40,41,42,432,459,902,925,926,927,928,944,945,946,976,979,987,1031,1032,1048,1056,1091,1095,1098,1101,1104,1129,1185,1186,1188,1189,1192,1194,1195,1196,1197,1198,1199,1200,1258,1259,1260],size_ordered_arrai:[40,41],skew:[1098,1105],skinv:1287,skip:[40,41],slice:[40,41,854,855,976,1013,1014,1129,1173,1180],slice_kei:[40,41],slice_obj:[40,41,1129],slice_via_kei:[40,41],slide:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],slope:[1202,1204],small:[1223,1224,1225,1226,1227,1228,1241,1272,1273,1284],smaller:[976,990],smallest:[40,41,831,832,833,976,982,989],smallest_norm:[390,831,832],softmax:[189,493,806,1202,1210,1221,1222],softplu:[806,1202],solv:1287,some:[40,41,43,976,979,1075,1077,1078,1080,1082,1083,1084,1089,1210,1218,1241,1258,1266,1284,1287],some_backend:43,some_namespac:43,someth:[43,1287],something_cool:43,somewher:[40,41],sort:[40,41,42,855,1098,1104,1129],sort_by_kei:[40,41],sorting_funct:[854,855],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,390,392,393,407,408,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1239,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1285,1286,1287],space:[976,979,1011,1031,1032],spars:[1223,1226],sparse_cross_entropi:1223,spawn:[976,1038],special:[835,836],specif:[40,41,43,902,944,976,995,1002,1003,1004,1038,1125,1126,1127,1128,1129,1185,1191,1241,1270,1271,1283,1284],specifc:[1185,1186],specifi:[40,41,43,847,848,850,851,857,858,859,902,921,922,923,924,925,926,927,928,931,932,936,938,942,945,946,947,952,956,958,976,979,981,982,983,990,993,994,1012,1013,1014,1020,1031,1032,1060,1070,1073,1098,1101,1129,1173,1178,1179,1183,1184,1192,1193,1194,1195,1196,1197,1198,1199,1200],split:[40,41,127,290,432,558,686,902,911,925,926,927,928,944,945,946,976,1033,1129],split_arg:1129,split_factor:[902,911,1129],split_func_cal:[902,1129],split_siz:1129,spread:[902,934,1129],sqrt:[85,213,395,515,642,835,847,848],squar:[835,844,976,1021,1098,1100],squeez:[127,290,432,558,686,976],stabil:[854,855,976,1058,1059],stabl:[854,855,976,1016,1017,1050,1051,1058,1059],stable_divid:976,stable_pow:976,stack:[40,41,290,686,976,1091,1096,1173,1174,1181,1258,1267],stack_imag:[163,345,471,601,760,1091],stacked_dim_s:1129,stage:43,standard:[40,41,43,831,832,1185,1188,1192,1198,1227,1228,1272,1273],start:[40,41,430,431,432,433,455,456,482,902,917,976,979,1031,1032,1129,1241,1284],starting_index:[40,41],starting_split_factor:[902,1129],state:[1129,1210,1220,1229,1230,1231,1235,1241,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],statement:1284,static_argnam:[432,438,900,901],static_argnum:[432,438,900,901],std:[482,1185,1188],step:[40,41,432,433,902,976,979,1031,1032,1075,1077,1078,1080,1082,1083,1084,1125,1126,1127,1128,1129,1241,1274,1275,1276,1277,1278,1279,1283,1287],stephen:1241,stick:1241,still:[40,41],stochast:[1274,1279],stop:[40,41,430,431,432,433,455,456,902,917,946,976,979,1031,1032,1075,1078,1080,1082,1083,1084,1086,1125,1126,1127,1128,1129,1274,1275,1276,1277,1278,1279],stop_gradi:[40,41,340,466,596,754,902,946,1075,1078,1080,1082,1083,1084,1125,1126,1127,1128,1129,1274,1275,1276,1277,1278,1279],stopiter:1129,store:[40,41,976,1011,1056,1075,1089,1270,1271],store_var:[1270,1271],str:[15,16,17,40,41,42,43,387,388,389,390,392,393,831,832,833,900,901,902,911,912,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,946,952,957,958,963,964,965,966,967,968,975,976,983,1000,1002,1003,1004,1036,1038,1041,1048,1049,1098,1101,1103,1125,1126,1127,1128,1129,1173,1177,1192,1193,1247,1248,1258,1269,1270,1271],str_to_nod:1129,straight:1284,strength:[1241,1287],stride:[1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],string:[40,41,43,902,918,920,929,930,935,941,947,948,951,952,956,962,964,965,966,975,976,979,983,1000,1021,1041,1042,1074,1129,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271],structur:[40,41,42,43,976,995],structural_diff:[40,41],sub:[40,41,902,925,926,931,932,933,934,976,1056,1125,1126,1127,1128,1129],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1129,sub_mod:[1270,1271],sub_modul:[1280,1281],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1241,1242,1272,1273,1280,1281],subsequ:43,subset:43,substr:[40,41],suffici:[1098,1103],suggest:1241,suitabl:[1091,1096],sum:[40,41,432,459,460,847,848,902,931,932,933,934,946,976,999,1003,1048,1049,1129,1192,1193,1199],summat:[40,41,1192,1193],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,98,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,223,226,230,233,234,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,356,357,360,361,362,363,365,366,367,368,369,370,371,372,375,377,378,379,380,381,382,383,388,389,391,392,393,396,397,398,399,400,401,402,403,404,408,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,472,473,474,476,477,478,481,483,485,486,487,488,489,490,491,494,495,497,498,499,500,501,502,503,508,509,511,512,513,516,517,518,519,520,521,522,523,524,528,531,535,538,539,547,552,553,554,555,556,557,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,597,598,599,600,602,603,604,606,607,608,609,613,614,615,616,618,619,620,621,622,623,624,628,629,630,635,636,638,639,640,643,644,645,646,647,648,649,650,651,655,658,662,665,666,674,679,680,681,682,683,684,685,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,755,756,757,758,759,761,762,763,765,766,767,768,769,770,771,773,774,776,777,778,779,780,781,782,783,784,785,786,787,788,789,791,792,793,794,795,796,798,799,800,801,802,803,804,807,808,809,810,811,812,813,815,816,818,819,820,821,822,823,824,829,830,832,833,836,837,838,839,840,841,842,843,844,847,848,851,855,858,859,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1228,1230,1231,1233,1234,1236,1240,1241,1245,1246,1248,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1286,1287],supports_inplac:976,suppos:1287,svd:[349,605,764,1098],swap:[40,41,976,1062],swapax:[40,41,558,686,976,1287],symmetr:[1098,1105],syntax:[430,432,466,471,475,479,480,482],tab:1241,take:[976,1030],taken:[1192,1194,1195,1196,1198,1200],tan:[775,1109,1113],tangent:[1109,1113,1114,1115,1123,1124,1202,1209],tanh:[775,806,1109,1202],target:[40,41,902,918,921,922,923,924,925,926,927,928,931,932,933,934,947,1129,1241],target_dict:[40,41],task:[1125,1126,1127,1128],team:1287,templat:1241,temporari:[976,1053,1064],tensor:[40,41,43,432,459,460,854,855,902,920,952,962,976,979,981,982,987,1031,1032,1035,1037,1040,1041,1042,1046,1048,1049,1056,1074,1129,1185,1186,1187,1210,1218,1220,1241,1258,1266,1268,1274,1275,1276,1277,1278,1279,1283,1284],tensorflow:[1098,1103,1210,1212,1214,1216,1241,1258,1260,1262,1264,1284,1287],term:[40,41,1210,1220,1241,1258,1268],termcolor:[40,41,42],termin:[40,41,42,1129],test:[835,840,857,858,859,952,967,968],tf_concat:1241,than:[40,41,831,832,847,848,850,851,902,946,976,979,989,990,1009,1028,1035,1057,1060,1075,1081,1129,1185,1189,1241,1284],thei:[40,41,43,1109,1114,1125,1126,1127,1185,1186,1241,1280,1281,1284],them:[1241,1287],themselv:[1173,1174],therefor:43,thi:[40,41,42,43,902,924,928,934,941,946,951,976,979,1011,1044,1046,1052,1075,1078,1080,1081,1082,1083,1084,1089,1098,1101,1129,1173,1177,1182,1192,1194,1195,1196,1197,1198,1199,1200,1210,1219,1241,1270,1271,1274,1275,1276,1277,1278,1279,1283,1284,1287],thing:[43,1241],those:[40,41,976,990,1075,1089,1098,1104,1129],though:43,threshold:[976,1035,1037],through:[40,41],tile:[290,558,686,976],time:[976,1063,1075,1078,1082,1125,1126,1127,1128,1129,1185,1186,1210,1220,1258,1269,1270,1271,1287],time_chronolog:[1229,1230,1235],time_infer:[1229,1230],timeout:[40,41,42,902,911,912,976,1044,1052,1129],timestep:[1210,1220,1258,1267],timing_fnam:[1229,1230],titl:1241,tmp_dir:976,tmp_dr:[976,1053],to_appli:[40,41],to_clon:[902,1129],to_dev:[40,41,120,284,430,551,678,902],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[902,1129],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1241],to_ivy_modul:[191,814,1241,1247],to_json:[40,41],to_kv_fn:[1210,1221],to_kv_v:[1210,1221],to_list:[40,41,432,686,976],to_multi_dev:[40,41],to_mut:[1173,1175,1182],to_n:[15,40,41,1241],to_nod:1129,to_numpi:[40,41,432,686,976,1241,1283],to_out_fn:[1210,1221],to_out_v:[1210,1221],to_q_fn:[1210,1221],to_q_v:[1210,1221],to_raw:[40,41],to_scalar:[432,686,976],todo:1129,togeth:[40,41,1280,1281],tool:[1241,1284],top_mod:[1270,1271],topic:1287,torch:[43,900,901,1241,1283,1284,1287],torch_concat:1241,torchfcmodel:1283,total:[40,41,42,902,948,1129],total_mem_on_dev:902,total_mem_on_nod:1129,tpu:[902,949,1129],tpu_is_avail:[430,551,678,902,1129],tpye:[952,963],trace:[40,41,976,1028],track:[902,1129,1173,1182,1270,1271],track_submod_call_ord:[1270,1271],track_submod_ret:[1270,1271],trail:[1272,1273],train:[1075,1077,1078,1082,1241,1242],trainabl:[1075,1081,1241,1242,1247,1248,1270,1271,1280],trainer:1241,tran:1287,transform:[1210,1218,1219],transpos:[40,41,127,290,432,686,902,933,976,1129,1210,1212,1214,1216,1258,1260,1262,1264],travers:[15,18,19,40,41,1173,1182],treat:[40,41,900,901],tree_depth:1239,tree_height:1235,tri:[40,41],trigonometr:[835,838,1109,1110,1113,1121],trim_kei:[40,41],trust:[1075,1082,1274,1276],truth:[835,842,843,861,880,976,1005,1106,1107,1108],try_else_non:976,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[902,1129],tune_dev_alloc:902,tune_dev_split:902,tune_node_alloc:1129,tune_node_split:1129,tune_step:[902,1129],tupl:[15,16,17,18,19,40,41,43,387,388,389,407,408,828,829,830,847,848,850,851,857,858,859,900,901,976,994,1011,1012,1055,1073,1129,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1187,1192,1194,1195,1196,1197,1198,1199,1200],two:[40,41,976,979,984,997,1034,1062,1098,1101,1104],type:[15,18,40,41,42,43,59,392,393,430,431,828,829,830,832,833,835,836,837,840,842,844,847,848,850,851,857,858,859,861,880,886,902,914,915,916,917,929,930,934,946,952,956,957,958,962,963,964,965,966,967,968,975,976,977,979,983,989,993,995,1005,1009,1010,1012,1021,1028,1040,1041,1042,1047,1061,1071,1074,1075,1081,1086,1109,1117,1129,1235,1239,1241,1249,1251,1252,1254,1255,1257,1270,1271,1284],types_to_iteratively_nest:[40,41,42],uint8:[1091,1093,1097],uint8_img_to_float_img:1091,unchang:[15,16,17,18,19],underli:[835,837],unif:1129,unifi:[40,41,902,931,932,933,934,946,1129,1241],uniform:[40,41,1185,1186,1188,1189,1249,1251,1252,1255,1256],uniformli:[1185,1187,1189],unify_arrai:1129,unify_it:1129,unify_nest:1129,union:[15,18,19,40,41,43,387,388,389,390,392,393,407,408,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,847,848,850,851,854,855,857,858,859,861,880,886,900,901,902,920,925,926,927,928,946,947,952,956,957,958,962,963,964,965,966,967,968,975,976,977,978,979,981,982,983,984,985,987,989,990,991,992,993,994,996,997,998,999,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1018,1020,1021,1022,1029,1030,1031,1032,1034,1035,1036,1037,1040,1041,1042,1045,1046,1047,1048,1049,1054,1055,1056,1057,1060,1062,1063,1065,1066,1067,1068,1070,1071,1072,1073,1074,1129,1173,1174,1175,1181,1182],uniqu:[902,911,912,1125,1126,1127,1128,1129,1173,1177],unique_kwarg:1129,unit:[902,1109,1110,1112,1129,1202,1203,1204,1205],unitari:[1098,1104],unless:[976,1040,1042,1074],unlik:[902,1129],unnorm:[1185,1186],unpack:[976,1070],unrol:[1210,1220],unset:1284,unset_debug_mod:44,unset_default_devic:902,unset_default_dtyp:952,unset_default_float_dtyp:952,unset_default_int_dtyp:952,unset_framework:[59,1284],unset_with_grad:1075,unstack:[40,41,127,290,432,558,686,976],unus:[900,901],updat:[40,41,432,459,460,902,911,976,1026,1048,1049,1075,1077,1078,1080,1082,1083,1084,1125,1126,1127,1129,1173,1178,1179,1183,1184,1210,1220,1247,1248,1274,1275,1276,1277,1278,1279,1284,1287],update_backend:[40,41],update_config:[40,41],update_inference_tim:1235,upper:[40,41,1185,1189],upper_depth:[1270,1271],usabl:[1241,1287],usag:[902,946,1129],use:[40,41,42,43,482,902,911,912,937,949,976,1045,1058,1059,1098,1103,1129,1210,1221,1227,1228,1241,1272,1273,1284,1287],used:[40,41,43,482,902,911,941,944,945,951,952,963,976,1016,1017,1033,1042,1048,1049,1050,1051,1074,1075,1082,1083,1098,1101,1125,1126,1127,1128,1129,1173,1182,1258,1269,1274,1276,1277,1283,1284],used_dev:[902,911],used_mem_on_dev:902,used_mem_on_nod:1129,used_node_str:1129,used_node_strs_dict:1129,useful:[40,41,902,946,1129,1210,1219,1241,1284],user:[1241,1258,1269,1270,1271,1284,1287],uses:1241,using:[40,41,1075,1077,1078,1173,1176,1180,1192,1193,1210,1218,1222,1241,1258,1266,1283,1284,1287],util:[902,935,1129],utility_funct:[857,858,859],v_with_top_v_key_chain:[1270,1271],val:[40,41,432,450,451,452,861,896,976,1024,1025,1026,1050,1051,1239],valid:[857,858,859,952,957,976,1058,1059,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],valid_dtyp:952,valu:[40,41,432,835,841,842,843,847,848,854,855,861,880,902,914,945,946,976,977,979,981,982,990,991,992,994,995,1001,1005,1011,1012,1013,1014,1029,1031,1032,1035,1037,1044,1045,1046,1047,1048,1049,1050,1051,1052,1068,1071,1072,1073,1075,1079,1082,1091,1097,1098,1104,1106,1107,1108,1109,1118,1119,1120,1125,1126,1127,1129,1173,1177,1178,1179,1183,1184,1185,1188,1189,1192,1194,1196,1210,1221,1222,1227,1228,1235,1258,1269,1272,1273,1274,1276],value_is_nan:976,vanilla:[1125,1127],var_shap:1249,variabl:[15,16,17,18,19,40,41,340,466,596,754,976,986,1024,1025,1026,1027,1028,1061,1075,1078,1079,1080,1081,1082,1083,1084,1086,1089,1125,1126,1127,1128,1210,1221,1227,1228,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],variable_data:[466,754,1075],varianc:[40,41,1192,1200,1287],varieti:1284,variou:[43,1241],vector:[40,41,475,478,847,848,976,992,997,1098,1104,1105,1210,1219,1258,1268],vector_norm:[40,41,97,222,407,527,654,847],vector_to_skew_symmetric_matrix:[167,349,475,605,764,1098],verbos:1286,veri:[43,1241],version:43,via:[1173,1174,1181,1284],view:[1091,1096],vision:1241,visual:1284,volum:[1210,1215],vw_tm1:[1075,1078,1082],wai:[1284,1287],wait:[40,41,42],want:[1241,1284,1287],warn:[59,66,67,68,69,70],warp:[471,472,1091,1092],watch:1283,weight:[1075,1077,1078,1080,1082,1083,1084,1210,1219,1220,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1274,1276,1277],weight_initi:[1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],weights_path:[1270,1271],well:[40,41,976,1020],were:[40,41,1129],what:1241,when:[40,41,42,43,902,976,988,1059,1072,1098,1104,1129,1241,1270,1271,1284,1287],where:[40,41,43,290,432,686,835,841,857,858,859,861,886,976,979,987,990,994,1007,1022,1029,1040,1073,1098,1104,1173,1174,1181,1185,1186],wherea:43,wherebi:[1173,1182],whether:[15,18,19,40,41,42,857,858,859,900,901,902,920,933,937,941,946,949,951,952,962,966,967,968,975,976,978,984,985,998,1001,1006,1011,1018,1020,1023,1027,1028,1033,1054,1061,1070,1071,1075,1078,1079,1080,1081,1082,1083,1084,1086,1125,1126,1127,1128,1129,1173,1174,1175,1177,1181,1182,1185,1186,1202,1203,1210,1218,1241,1247,1248,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],which:[40,41,42,43,482,828,829,830,831,832,833,847,848,850,851,857,858,859,900,901,902,911,912,920,925,926,927,928,931,932,933,934,936,938,942,944,945,946,952,957,962,966,975,976,979,983,993,995,997,998,999,1001,1008,1012,1013,1014,1015,1021,1022,1030,1031,1032,1039,1040,1041,1042,1043,1045,1048,1049,1056,1060,1070,1072,1074,1075,1078,1079,1080,1082,1083,1084,1086,1088,1089,1091,1093,1098,1101,1109,1114,1129,1173,1177,1178,1179,1183,1184,1185,1186,1187,1188,1189,1192,1194,1195,1196,1197,1198,1199,1200,1202,1207,1210,1221,1222,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1283,1284],whitespac:[40,41,42],whose:[43,835,836,850,851,861,886,976,983,988,1192,1193,1194,1195,1196,1198,1200],why:[1241,1242],width:[1091,1096],wiki:1287,wikipedia:1287,window:[1091,1096,1210,1211,1212,1213,1214,1215,1216,1217,1258,1259,1260,1261,1262,1263,1264,1265],wise:[40,41,43,835,837,838,842,843,861,880,886,976,989,990,1005,1009,1010,1035,1037,1047,1075,1078,1080,1082,1084,1106,1107,1108,1109,1110,1112,1113,1114,1117,1118,1119,1120,1121,1123,1202,1203,1204,1205,1206,1207,1208,1209],wish:1284,with_arg_label:[1229,1231,1235,1270,1271],with_array_cach:[1229,1230,1231,1235],with_bia:[1258,1268],with_cal:[976,1001],with_default_key_color:[40,41],with_edge_label:[1229,1231,1235,1270,1271],with_entries_as_list:[40,41],with_grad:[1075,1085,1270,1271],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1129,with_output_label:[1229,1231,1235,1270,1271],with_partial_v:[1270,1271],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,432,461,976,1056,1129],with_to_kv_fn:[1258,1269],with_to_out_fn:[1258,1269],with_to_q_fn:[1258,1269],within:[15,18,19,976,979,1098,1104,1185,1189],without:[40,41,43,976,1044,1046,1052,1173,1175,1284],wonder:1241,word:[15,16,17,976,979,1185,1189,1247,1248],work:[43,1283],worker:[902,911,912,1129],worker_class:[902,911,912,1129],worker_kwarg:1129,would:[43,854,855,1202,1207,1241,1284,1287],wrap:[15,40,41,42,43,430,432,466,471,475,479,480,482,976,988,1075,1089,1241],wrapper:43,write:[40,41,43,1241,1242,1287],written:[43,1241,1287],ws_new:[1075,1078,1080,1082,1083,1084],x1_i:[835,837,842,976,1005,1109,1117],x2_i:[835,837,842,976,1005,1109,1117],x_feat_dim:[1210,1221],x_i:[835,836,840,844],x_in:[1241,1283],x_inv:[1098,1100],x_max:[432,976,990],x_min:[432,976,990],x_sub:1129,xkk:1287,xkkm1:1287,xkm1km1:1287,xs0:1129,xs_t:1129,year:[1241,1287],yet:[1173,1182,1287],yield:[976,1072],you:[1241,1283,1284,1287],your:[1241,1283,1284,1287],your_awesome_project:1284,yourself:1241,zero:[40,41,77,205,387,507,634,828,847,848,857,858,859,976,994,1040,1042,1048,1049,1073,1074,1075,1077,1078,1082,1083,1210,1218,1241,1249,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1274,1275,1276,1277],zero_pad:[290,432,558,686,976],zeros_lik:[127,290,432,558,686,976],zip:1129,zk_e:1287},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linalg","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1001,"function":[77,80,85,95,99,100,102,103,104,106,107,205,208,213,220,224,225,227,228,229,231,232,387,390,395,405,409,410,412,413,414,416,417,507,510,515,525,529,530,532,533,534,536,537,634,637,642,652,656,657,659,660,661,663,664,828,831,835,845,849,850,852,853,854,856,857],Ones:1254,Using:1284,abs:[291,559,687,977],aco:[776,1110],acosh:[777,1111],activ:[189,374,493,626,806,1202,1244],adam:1275,adam_step:1077,adam_upd:1078,algebra:[97,99,167,222,224,349,407,409,475,527,529,605,654,656,764,847,849],all:[108,233,418,538,665,858],all_equ:978,all_nested_indic:1174,ani:[109,234,419,539,666,859],api:[0,43,75,111,203,236,385,421,505,541,632,668,826],arang:[128,292,433,560,688,979],arg_nam:980,argmax:[129,434,561,689,981],argmin:[130,435,562,690,982],args_to_ivi:16,args_to_n:17,argsort:[105,230,415,535,662,855],arithmet:[1,112,237,422,542,669],arrai:[0,3,43,75,110,111,113,131,203,235,236,238,245,293,385,420,421,423,436,505,540,541,543,563,632,667,668,670,691,826,861,983],array_equ:[294,692,984],arrays_equ:985,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[778,1112],asinh:[86,396,516,643,836],assert_supports_inplac:986,atan2:[780,1114],atan:[779,1113],atanh:[781,1115],attribut:[5,114,239,424,544,671],backend:[43,73],bilinear_resampl:[164,346,472,602,761,1092],binary_cross_entropi:1224,bitwis:[7,115,240,425,545,672],bitwise_and:[87,214,397,517,644,837],broadcast_to:[295,693,987],builder:51,builtin:[110,235,245,420,540,667,861],builtin_ab:[246,862],builtin_add:[247,863],builtin_and:[248,864],builtin_bool:[249,865],builtin_contain:[250,866],builtin_deepcopi:[251,867],builtin_dir:[252,868],builtin_eq:[253,869],builtin_float:[254,870],builtin_floordiv:[255,871],builtin_g:[256,872],builtin_getattr:[257,873],builtin_getattribut:[258,874],builtin_getitem:[259,875],builtin_gt:[260,876],builtin_int:[261,877],builtin_invert:[262,878],builtin_l:[263,879],builtin_lt:[264,547,674,880],builtin_mul:[265,881],builtin_n:[266,882],builtin_neg:[267,883],builtin_or:[268,884],builtin_po:[269,885],builtin_pow:[270,886],builtin_radd:[271,887],builtin_rand:[272,888],builtin_rfloordiv:[273,889],builtin_rmul:[274,890],builtin_ror:[275,891],builtin_rpow:[276,892],builtin_rsub:[277,893],builtin_rtruediv:[278,894],builtin_rxor:[279,895],builtin_setitem:[280,896],builtin_sub:[281,897],builtin_truediv:[282,898],builtin_xor:[283,899],cache_fn:988,cast:[132,296,437,564,694,956],ceil:[297,695,989],choleski:[765,1099],choose_random_framework:61,citat:1241,clear_framework_stack:62,clear_mem_on_dev:[680,918],clip:[298,696,990],clip_matrix_norm:991,clip_vector_norm:992,clone:1144,clone_arrai:1145,clone_it:1146,clone_nest:1147,clonedit:1131,cloneditem:1130,clonednest:1132,closest_valid_dtyp:957,code:1287,comparison:[9,116,241,426,546,673],compil:[299,438,697,900,901,1229],compile_graph:1230,concaten:[133,300,439,565,698,993],constant:[76,204,386,506,633,827],constant_pad:[301,566,699,994],contain:[40,41],container_typ:[700,995],content:1241,contribut:43,conv1d:[195,377,497,818,1211,1259],conv1d_transpos:[196,378,498,819,1212],conv1dtranspos:1260,conv2d:[197,379,499,628,820,1213,1261],conv2d_transpos:[198,380,500,821,1214],conv2dtranspos:1262,conv3d:[199,381,501,629,822,1215,1263],conv3d_transpos:[200,382,502,823,1216],conv3dtranspos:1264,convers:15,convert:[191,814,1247],convert_dtyp:958,copy_arrai:[701,996],copy_nest:1175,core:[119,244,429,550,677,860],cos:[88,398,518,645,838],cosh:[89,399,519,646,782,839,1116],cprint:1286,creation:[77,205,387,507,634,828],cross:[302,702,997],cross_entropi:1225,cumprod:[134,303,440,703,998],cumsum:[704,999],current_framework:63,current_framework_str:[705,1000],data:[80,84,208,212,390,394,510,514,637,641,831,834],debug_mod:45,debugg:44,default_devic:919,default_dtyp:959,default_float_dtyp:960,default_int_dtyp:961,default_nod:1148,depthwise_conv2d:[201,383,503,630,824,1217],depthwiseconv2d:1265,design:43,dev:[122,286,553,681,920],dev_clon:921,dev_clone_arrai:922,dev_clone_it:923,dev_clone_nest:924,dev_dist:925,dev_dist_arrai:926,dev_dist_it:927,dev_dist_nest:928,dev_from_str:[123,287,554,682,929],dev_to_str:[124,288,555,683,930],dev_unifi:931,dev_unify_arrai:932,dev_unify_it:933,dev_unify_nest:934,dev_util:935,devclonedit:905,devcloneditem:904,devclonednest:906,devdistit:908,devdistitem:907,devdistnest:909,devic:[20,120,284,430,551,678,902],devmapp:911,devmappermultiproc:912,distribute_nest:1149,divid:1117,document:1241,dropout:[1218,1266],dtype:[135,304,441,567,706,952,962],dtype_bit:[136,305,442,568,707,963],dtype_from_str:[137,306,443,569,708,964],dtype_to_str:[138,307,444,570,709,965],ecosystem:52,einops_rearrang:1002,einops_reduc:1003,einops_repeat:1004,einsum:[181,365,485,618,798,1193],elementwis:[85,213,395,515,642,835],equal:[571,710,1005],erf:[481,783,1118],execute_with_gradi:[161,341,467,597,755,1079],exist:1006,exp:[784,1119],expand_dim:[308,711,1007],extens:[97,222,407,527,654,847],finfo:[82,210,392,512,639,832],firstlayersiren:1251,flip:[101,226,411,531,658,851,1008],float_img_to_uint8_img:1093,floor:[309,712,1009],floormod:[310,713,1010],fomaml_step:1126,fourier_encod:1011,framework:59,full:[139,311,445,572,714,1012],func:72,gather:[140,312,446,573,715,1013],gather_nd:[141,313,447,574,716,1014],geglu:1245,gelu:[375,494,807,1203,1246],gener:[22,127,290,432,558,686,976],get_all_arrays_in_memori:1015,get_all_arrays_on_dev:936,get_framework:64,get_min_bas:1016,get_min_denomin:1017,get_num_dim:[717,1018],get_referrers_recurs:1019,global:1232,glorotuniform:1252,gpu_is_avail:[937,1150],gradient:[24,160,340,466,596,754,1075],gradient_descent_upd:1080,gradient_imag:[165,347,473,603,762,1094],graph:1235,gym:53,handler:59,has_nan:1020,helper:1237,ident:[142,314,448,575,718,1021],iinfo:[83,211,393,513,640,833],imag:[26,163,345,471,601,760,1091],index_nest:1176,indices_wher:[143,315,449,719,1022],initi:1249,inplac:[11,117,242,427,548,675],inplace_arrays_support:1023,inplace_decr:[144,316,450,576,720,1024],inplace_incr:[145,317,451,577,721,1025],inplace_upd:[146,318,452,578,722,1026],inplace_variables_support:1027,inv:[766,1100],invalid_dtyp:966,is_arrai:[147,319,453,579,723,1028],is_float_dtyp:967,is_int_dtyp:968,is_vari:[162,342,468,598,756,1081],isfinit:[90,215,400,520,647,840],isinf:[320,580,724,1029],isnan:[91,216,401,521,648,841],ivi:[43,50,51,52,53,54,55,56,57,58,825,1283,1284,1287],ivymodul:[192,815],jax:74,lamb:1276,lamb_upd:1082,lar:1277,lars_upd:1083,layer:[194,376,496,627,817,1210,1258],layer_norm:1228,layernorm:1273,leaky_relu:[808,1204],less:[92,217,402,522,649,842],linalg:[28,96,221,406,526,653,846,1098],linear:[97,99,167,222,224,349,407,409,475,527,529,605,654,656,764,847,849,1219,1268],linear_resampl:[148,321,454,581,725,1030],linspac:[149,322,455,582,726,1031],log:[785,1120,1238],log_global_inference_abs_tim:1233,log_global_inference_rel_tim:1234,logic:[30,171,355,479,610,772,1106],logical_and:[356,773,1107],logical_not:[93,218,403,523,650,843],logical_or:[357,774,1108],logspac:[150,323,456,583,727,1032],loss:1223,lstm:1267,lstm_updat:1220,maml_step:1127,manipul:[100,225,410,530,657,850],map:1177,map_nest_at_index:1178,map_nest_at_indic:1179,match_kwarg:1033,math:[32,172,358,480,611,775,1109],matmul:[324,584,728,1034],matrix_norm:[168,350,476,606,767,1101],maximum:[729,1035],mech:54,memori:55,meshgrid:[325,730,1036],meta:[34,1125],method:[95,220,405,525,652,845],minimum:[731,1037],model:56,modul:[1270,1271,1283],multi:1129,multi_head_attent:1221,multi_index_nest:1180,multidevcontain:42,multidevit:915,multidevitem:914,multidevnest:916,multiheadattent:1269,multinodeit:1135,multinodeitem:1134,multinodenest:1136,multinomi:[174,360,483,613,791,1186],multiprocess:[732,1038],mxnet:202,nativ:1283,nest:1173,nested_indices_wher:1181,nested_map:1182,network:1283,next:1241,node:[1129,1151],node_dist:1152,node_dist_arrai:1153,node_dist_it:1154,node_str:1155,node_to_str:1156,node_util:1157,nodedistit:1138,nodedistitem:1137,nodedistnest:1139,nodemapp:1141,nodemappermultiproc:1142,norm:[1227,1272],num_arrays_in_memori:1039,num_arrays_on_dev:938,num_cpu_cor:939,num_gpu:[125,940,1158],numpi:384,nutshel:1241,one_hot:[151,457,585,733,1040],ones:[78,206,388,508,635,829,1041],ones_lik:[152,326,458,586,734,1042],oper:[1,3,7,9,11,13,43,112,113,115,116,117,118,237,238,240,241,242,243,422,423,425,426,427,428,542,543,545,546,548,549,669,670,672,673,675,676],optim:[1274,1278],optimizer_upd:1084,overview:1241,param:1239,percent_used_mem_on_dev:941,percent_used_mem_on_nod:1159,pinv:[351,768,1102],portabl:1287,print_all_arrays_in_memori:1043,print_all_arrays_on_dev:942,profil:[121,285,431,552,679,917,1143],queue_timeout:1044,randint:[175,361,614,792,1187],random:[36,173,359,482,612,790,1185],random_crop:1095,random_norm:[176,362,615,793,1188],random_uniform:[177,363,616,794,1189],reduce_max:[182,366,486,619,799,1194],reduce_mean:[183,367,487,620,800,1195],reduce_min:[184,368,488,621,801,1196],reduce_prod:[185,369,489,622,802,1197],reduce_std:[370,1198],reduce_sum:[186,371,490,623,803,1199],reduce_var:[187,372,491,624,804,1200],reduct:[38,180,364,484,617,797,1192],reflect:[13,118,243,428,549,676],relu:[809,1205],repeat:[327,735,1045],reptile_step:1128,reshap:[736,1046],robot:57,round:[328,737,1047],run:1284,scaled_dot_product_attent:1222,scatter_flat:[153,329,459,587,738,1048],scatter_nd:[154,330,460,588,739,1049],search:[102,227,412,532,659,852],seed:[178,795,1190],sequenti:[1280,1281],set:[103,228,413,533,660,853],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:943,set_default_dtyp:969,set_default_float_dtyp:970,set_default_int_dtyp:971,set_default_nod:1160,set_exception_debug_mod:48,set_framework:65,set_min_bas:1050,set_min_denomin:1051,set_nest_at_index:1183,set_nest_at_indic:1184,set_queue_timeout:1052,set_split_factor:[944,1161],set_tmp_dir:1053,set_with_grad:1085,sgd:1279,shape:[740,1054],shape_to_tupl:1055,show_graph:1231,shuffl:[179,796,1191],sigmoid:[810,1206],signatur:[95,220,405,525,652,845],sin:[786,1121],sinh:[787,1122],siren:1255,softmax:[190,495,811,1207],softplu:[812,1208],sort:[104,229,414,534,661,854],sparse_cross_entropi:1226,split:[155,331,461,589,741,1056],split_factor:[945,1162],split_func_cal:[946,1163],sqrt:[94,219,404,524,651,844],squeez:[156,332,462,590,742,1057],stable_divid:1058,stable_pow:1059,stack:[333,743,1060],stack_imag:[166,348,474,604,763,1096],statist:[106,231,416,536,663,856],stop_gradi:[343,469,599,757,1086],str_to_nod:1164,submodul:43,supports_inplac:1061,svd:[353,608,770,1104],swapax:[591,744,1062],tan:[788,1123],tanh:[789,813,1124,1209],tensorflow:504,tile:[334,592,745,1063],tmp_dir:1064,to_dev:[126,289,556,684,947],to_ivi:18,to_ivy_modul:[193,816,1248],to_list:[746,1065],to_n:19,to_nod:1165,to_numpi:[747,1066],to_scalar:[748,1067],torch:631,total_mem_on_dev:948,total_mem_on_nod:1166,tpu_is_avail:[557,685,949,1167],train:1283,trainabl:1283,transpos:[157,335,463,749,1068],tree:1241,try_else_non:1069,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,208,212,390,394,510,514,637,641,831,834],uint8_img_to_float_img:1097,unifi:1168,unify_arrai:1169,unify_it:1170,unify_nest:1171,unset_debug_mod:49,unset_default_devic:950,unset_default_dtyp:972,unset_default_float_dtyp:973,unset_default_int_dtyp:974,unset_framework:71,unset_with_grad:1087,unstack:[158,336,464,593,750,1070],used_mem_on_dev:951,used_mem_on_nod:1172,util:[107,232,417,537,664,857],valid_dtyp:975,value_is_nan:1071,variabl:[344,470,600,758,1088],variable_data:[759,1089],vector_norm:[98,223,408,528,655,848],vector_to_skew_symmetric_matrix:[170,354,478,609,771,1105],verbos:1285,vision:58,where:[337,751,1072,1241],why:1287,with_grad:1090,wrapper:72,write:1284,zero:[79,207,389,509,636,830,1257],zero_pad:[338,594,752,1073],zeros_lik:[159,339,465,595,753,1074]}})