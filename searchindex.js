Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 30, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 58, 59, 60, 96, 114, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 236, 238, 269, 275, 294, 299, 313, 385, 387, 397, 437, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 437], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 20, 32, 33, 34, 35, 40, 43, 44, 46, 48, 59, 60, 236, 276, 405, 406, 407, 408, 409, 437, 444, 445, 446, 447, 448, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 480, 481], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 36, 37, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484], "base": [0, 19, 32, 37, 43, 59, 77, 87, 96, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 176, 198, 209, 210, 211, 212, 224, 236, 260, 283, 290, 299, 417, 418, 421, 425, 426, 444, 445, 446, 449, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "object": [0, 45, 48, 77, 83, 96, 113, 126, 299, 385, 388, 390, 392, 393, 394, 399, 400, 401, 402, 405, 411, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471], "__init__": [0, 1, 4, 5, 28, 38, 43, 45, 46, 47, 48, 96, 97, 98, 99, 126, 127, 134, 135, 136, 137, 138, 139, 140, 141, 299, 300, 405, 406, 407, 408, 409, 437, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "choose_random_backend": 0, "exclud": [0, 2, 30, 43, 77, 78, 405, 409], "none": [0, 2, 5, 12, 28, 30, 33, 38, 39, 40, 41, 43, 45, 47, 48, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 108, 109, 110, 113, 114, 126, 135, 136, 144, 145, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 247, 248, 250, 254, 255, 257, 258, 263, 266, 270, 276, 278, 281, 282, 283, 284, 289, 290, 296, 299, 302, 304, 306, 307, 308, 314, 315, 320, 323, 325, 327, 329, 332, 333, 334, 335, 336, 345, 347, 350, 359, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 417, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 447, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "clear_backend_stack": 0, "current_backend": [0, 28, 33], "arg": [0, 4, 43, 45, 47, 126, 135, 150, 154, 158, 170, 236, 282, 447, 448, 470, 471], "kwarg": [0, 4, 43, 45, 47, 126, 135, 150, 154, 158, 236, 275, 447, 448, 470, 471], "return": [0, 4, 5, 12, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 447, 448, 458, 467, 468, 474, 478], "current": [0, 4, 5, 12, 16, 18, 20, 33, 39, 43, 48, 59, 60, 96, 107, 115, 125, 126, 135, 159, 160, 162, 166, 236, 259, 266, 270, 277, 279, 385, 386, 395, 396, 437], "prioriti": [0, 4, 19, 40], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 27, 28, 29, 30, 32, 33, 35, 36, 37, 43, 45, 46, 74, 75, 77, 78, 96, 118, 126, 135, 136, 150, 154, 158, 236, 238, 242, 250, 275, 282, 385, 391, 425, 432, 440, 442, 447, 448, 470, 471], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 27, 30, 32, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 76, 77, 88, 92, 93, 176, 225, 299, 302, 304, 306, 308, 336, 354, 355, 385, 391, 397, 425, 426, 431, 433, 437, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "paramet": [0, 4, 5, 28, 29, 32, 45, 46, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 442, 447, 448, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 77, 78, 79, 81, 83, 84, 85, 88, 89, 91, 95, 96, 105, 107, 118, 126, 135, 136, 162, 170, 176, 202, 230, 236, 250, 257, 258, 293, 299, 302, 306, 315, 320, 323, 331, 334, 336, 340, 354, 358, 365, 370, 373, 376, 381, 382, 383, 384, 385, 387, 397, 398, 405, 406, 407, 408, 409, 412, 416, 417, 418, 420, 425, 430, 431, 432, 433, 434, 435, 436, 437, 443, 447, 448, 458, 466, 469, 474, 478], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 111, 113, 114, 115, 125, 126, 135, 136, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 168, 169, 170, 176, 225, 236, 247, 248, 250, 257, 258, 259, 265, 277, 278, 279, 281, 282, 297, 299, 302, 303, 304, 306, 307, 308, 310, 312, 313, 315, 317, 319, 323, 334, 335, 336, 338, 340, 345, 353, 354, 358, 359, 361, 363, 364, 365, 367, 370, 372, 374, 375, 377, 385, 390, 391, 392, 393, 398, 399, 400, 401, 402, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 447, 448, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "try": [0, 4, 13, 15, 16, 18, 19, 36, 45, 60, 236, 296, 437], "infer": [0, 4, 27, 38, 39, 43, 48, 74, 75, 77, 78, 79, 81, 84, 85, 89, 91, 95, 176, 202, 236, 262, 287, 315, 320, 365, 373], "when": [0, 4, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 60, 96, 102, 126, 176, 180, 199, 224, 236, 242, 269, 290, 361, 363, 364, 385, 396, 412, 413, 414, 416, 425, 427, 429, 431, 433, 470, 471], "global": [0, 4, 5, 6, 12, 33, 34, 38, 39, 43, 96, 108, 109, 110, 126, 135, 136, 168, 169, 170, 236, 260, 261, 280, 283, 284, 285, 289, 290, 403, 404, 472, 473], "set": [0, 4, 5, 6, 12, 14, 17, 27, 28, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 126, 155, 156, 167, 168, 169, 170, 176, 184, 236, 237, 283, 284, 285, 286, 299, 302, 304, 305, 306, 307, 308, 336, 338, 345, 347, 350, 353, 385, 386, 395, 396, 397, 401, 402, 405, 410, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 431, 433, 458, 467, 474, 475, 476, 477, 478, 479], "ret": [0, 4, 5, 12, 28, 29, 43, 48, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 135, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 287, 289, 290, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 395, 396, 397, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 442, 447, 448, 474, 478], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 84, 85, 88, 90, 91, 94, 95, 96, 102, 126, 146, 161, 162, 163, 164, 171, 173, 176, 180, 185, 187, 190, 192, 193, 198, 202, 207, 233, 236, 239, 246, 261, 287, 293, 294, 295, 315, 318, 321, 322, 323, 324, 328, 330, 336, 337, 338, 339, 340, 343, 347, 354, 356, 357, 361, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 405, 406, 407, 408, 409, 410, 411, 412, 414, 422, 423, 425, 426, 431, 432, 434, 435, 437], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 60, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 104, 118, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 209, 210, 212, 213, 215, 216, 220, 224, 225, 227, 228, 229, 230, 233, 235, 299, 302, 304, 306, 307, 308, 336, 337, 338, 345, 347, 350, 351, 353, 354, 358, 359, 361, 363, 364, 365, 369, 370, 374, 375, 376, 377, 381, 382, 383, 385, 397, 398, 405, 408, 409, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "import": [0, 4, 15, 28, 29, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 48, 60, 315, 321, 437, 443], "numpi": [0, 4, 5, 6, 14, 15, 32, 38, 39, 40, 41, 43, 45, 48, 236, 294, 425, 426, 437], "np": [0, 4, 36, 38, 39, 40, 41, 45, 46, 48, 437], "x": [0, 4, 12, 20, 28, 29, 30, 33, 38, 40, 41, 43, 45, 46, 47, 48, 66, 67, 68, 69, 70, 71, 72, 73, 77, 79, 81, 83, 85, 88, 89, 91, 92, 93, 94, 95, 96, 102, 104, 111, 126, 146, 147, 148, 151, 152, 162, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 192, 193, 194, 197, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 267, 268, 269, 271, 272, 273, 274, 278, 287, 291, 293, 294, 295, 297, 298, 299, 303, 305, 310, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 391, 395, 396, 397, 403, 404, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 469], "arrai": [0, 4, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 60, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 111, 113, 114, 116, 117, 118, 126, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 271, 272, 274, 277, 278, 279, 281, 282, 287, 291, 293, 294, 295, 297, 298, 299, 305, 310, 312, 313, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 397, 398, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 458, 466, 469], "2": [0, 4, 18, 20, 30, 42, 43, 45, 46, 47, 48, 66, 68, 70, 76, 77, 84, 85, 88, 90, 91, 95, 96, 102, 126, 146, 162, 163, 171, 176, 180, 181, 183, 184, 187, 190, 193, 198, 202, 207, 212, 233, 236, 239, 243, 244, 287, 315, 316, 318, 321, 322, 323, 326, 327, 328, 330, 336, 337, 338, 339, 340, 343, 344, 345, 347, 350, 351, 354, 356, 357, 359, 361, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 405, 406, 407, 408, 409, 411, 412, 414, 422, 423, 425, 426, 434, 435, 437], "0": [0, 4, 28, 29, 30, 43, 45, 46, 47, 48, 66, 68, 69, 70, 71, 72, 73, 77, 78, 82, 86, 87, 91, 92, 93, 94, 95, 96, 102, 113, 126, 128, 131, 135, 138, 142, 146, 151, 152, 153, 154, 155, 156, 157, 158, 162, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 198, 199, 200, 209, 210, 212, 220, 224, 225, 227, 228, 229, 230, 233, 235, 236, 239, 243, 244, 246, 247, 248, 257, 258, 263, 278, 281, 282, 287, 293, 294, 299, 301, 302, 306, 307, 315, 318, 321, 323, 324, 328, 330, 336, 337, 338, 339, 340, 343, 354, 356, 357, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 385, 397, 405, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 421, 422, 423, 425, 426, 428, 431, 432, 433, 434, 435, 437, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481], "print": [0, 4, 5, 6, 12, 18, 30, 37, 43, 45, 46, 47, 66, 68, 69, 70, 71, 72, 73, 77, 84, 85, 88, 90, 91, 94, 95, 96, 102, 126, 146, 161, 162, 163, 164, 166, 173, 176, 180, 185, 187, 190, 192, 193, 198, 202, 207, 233, 236, 239, 246, 261, 279, 287, 293, 294, 295, 315, 318, 321, 322, 323, 324, 328, 330, 336, 337, 338, 339, 340, 343, 354, 356, 357, 361, 363, 364, 365, 366, 369, 370, 372, 373, 374, 375, 376, 405, 406, 407, 408, 409, 411, 412, 414, 422, 423, 425, 426, 431, 432, 434, 435, 437], "function": [0, 4, 5, 6, 14, 20, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 44, 45, 46, 47, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 444, 445, 446, 474, 477, 479], "py": [0, 4, 5, 28, 29, 33, 38, 39, 41, 43, 45, 47, 48, 405, 406, 407, 408, 409], "noqa": [0, 4, 5, 77, 88, 176, 180, 233, 336, 339, 365, 370, 374], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 59, 66, 67, 68, 71, 73, 74, 75, 77, 78, 83, 87, 88, 92, 93, 96, 100, 101, 102, 106, 107, 112, 115, 125, 126, 135, 136, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 233, 235, 236, 239, 242, 243, 249, 250, 256, 258, 267, 268, 269, 271, 272, 273, 274, 276, 281, 282, 283, 284, 285, 288, 289, 290, 298, 299, 301, 302, 304, 306, 307, 308, 310, 313, 315, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 447, 448, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478], "set_backend": [0, 4, 5, 12, 34, 35, 38], "ha": [0, 4, 5, 14, 15, 16, 19, 29, 30, 33, 34, 38, 39, 43, 45, 47, 48, 59, 60, 77, 88, 176, 177, 220, 224, 336, 344, 352, 353, 354, 357, 365, 369, 376, 417, 418, 419, 421, 425, 428, 430, 431, 432, 433], "over": [0, 4, 14, 16, 29, 30, 40, 45, 60, 336, 345, 356, 358, 359, 403, 404, 405, 409, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 472, 473], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 74, 75, 77, 79, 89, 176, 196, 203, 208, 236, 237, 250, 251, 252, 253, 254, 264, 271, 272, 273, 274, 289, 290, 299, 303, 385, 391, 395, 405, 409, 434, 437], "pass": [0, 4, 30, 31, 32, 33, 34, 36, 37, 40, 41, 45, 60, 96, 106, 126, 135, 170, 176, 184, 236, 242, 269, 299, 313, 381, 382, 383, 447, 448, 470, 471, 474, 478, 480, 481], "jax": [0, 4, 5, 6, 15, 16, 38, 39, 40, 41, 43, 45, 48, 60, 299, 305, 417, 418, 421, 437], "get_backend": [0, 33], "specifi": [0, 5, 27, 32, 33, 38, 39, 40, 41, 43, 46, 47, 48, 77, 78, 80, 84, 86, 87, 90, 92, 93, 94, 96, 102, 104, 107, 126, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 166, 169, 170, 171, 176, 225, 236, 257, 258, 264, 297, 315, 321, 336, 340, 345, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 370, 374, 376, 377, 380, 385, 390, 392, 393, 399, 400, 401, 402, 412, 413, 414, 417, 418, 421, 422, 423, 425, 426, 430, 432, 434, 435, 436], "isn": [0, 5, 19, 46], "t": [0, 5, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 60, 323, 332, 333], "associ": [0, 5, 19, 33, 35, 60, 176, 180, 220, 336, 347, 350, 360], "option": [0, 5, 18, 28, 29, 30, 33, 38, 39, 40, 41, 43, 48, 66, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 106, 108, 109, 110, 115, 125, 126, 145, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 244, 247, 248, 249, 255, 257, 258, 276, 278, 281, 282, 289, 290, 299, 310, 323, 330, 335, 336, 345, 347, 350, 359, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 374, 375, 376, 377, 385, 386, 391, 396, 397, 405, 406, 407, 408, 409, 412, 413, 414, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "str": [0, 5, 38, 39, 77, 88, 96, 100, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 142, 146, 151, 152, 153, 154, 170, 236, 249, 251, 252, 253, 276, 281, 282, 323, 324, 328, 330, 336, 351, 385, 391, 425, 426], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 299, 303, 425, 426, 437, 443], "want": [0, 5, 15, 17, 19, 32, 46, 47, 48, 60, 425, 426], "retriev": [0, 5], "i": [0, 5, 19, 27, 43, 46, 48, 77, 78, 88, 176, 177, 184, 188, 190, 192, 200, 201, 204, 218, 219, 224, 225, 236, 239, 299, 302, 304, 306, 307, 308, 336, 338, 344, 347, 350, 353, 354, 357, 359, 365, 377, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433], "e": [0, 5, 15, 16, 19, 27, 46, 60, 76, 77, 88, 96, 101, 118, 126, 142, 176, 177, 184, 188, 190, 192, 198, 200, 201, 204, 209, 211, 218, 219, 224, 225, 299, 302, 304, 306, 307, 308, 336, 338, 344, 347, 350, 353, 354, 359, 365, 377, 405, 408, 409, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433], "one": [0, 5, 15, 16, 18, 19, 30, 33, 36, 38, 40, 42, 45, 46, 48, 60, 77, 78, 88, 96, 103, 105, 107, 126, 155, 156, 157, 158, 170, 236, 275, 278, 281, 282, 336, 344, 345, 349, 351, 358, 359, 365, 369, 370, 376, 412, 413, 415, 417, 418, 419, 420, 421, 425, 426, 437], "default": [0, 5, 29, 30, 33, 38, 39, 41, 47, 66, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 108, 109, 110, 111, 126, 135, 136, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 237, 243, 244, 247, 248, 255, 256, 257, 258, 262, 263, 264, 266, 270, 271, 272, 274, 275, 276, 278, 280, 281, 282, 285, 287, 289, 290, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 315, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 345, 347, 350, 351, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 391, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 447, 448, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "torch": [0, 5, 12, 28, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 74, 75, 437], "tensorflow": [0, 5, 12, 15, 16, 38, 39, 40, 41, 43, 48, 60, 437], "mxnet": [0, 5, 15, 38, 39, 40, 43, 48, 437], "either": [0, 5, 12, 19, 29, 30, 33, 34, 38, 39, 43, 45, 46, 60, 77, 83, 176, 180, 184, 205, 209, 210, 212, 213, 220, 225, 227, 228, 233, 236, 250, 271, 275, 276, 336, 344, 381, 382, 383, 384, 425, 430, 432, 458, 469, 470, 471], "doesn": [0, 5, 18, 30, 43, 60], "matter": [0, 5, 14, 30], "been": [0, 5, 29, 33, 34, 38, 39, 41, 43, 59, 236, 251, 252, 253, 405, 406], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 59, 60, 76, 96, 112, 126, 135, 136, 161, 165, 168, 169, 170, 173, 175, 176, 180, 233, 236, 260, 261, 275, 281, 282, 283, 284, 289, 290, 299, 301, 302, 306, 307, 323, 331, 332, 334, 335, 336, 339, 340, 345, 356, 365, 366, 370, 372, 374, 381, 382, 383, 384, 385, 386, 388, 394, 395, 396, 398, 403, 404, 417, 418, 425, 426, 434, 435, 437, 458, 466, 469, 470, 471, 472, 473, 474, 476, 477], "ivy_jax": [0, 5], "subsequ": [0, 6, 30, 32, 33, 36, 41, 47], "call": [0, 6, 12, 15, 20, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 126, 170, 236, 280, 285, 296, 299, 303, 385, 386, 391, 395, 396, 458, 469, 470, 471, 474, 478], "nativ": [0, 6, 38, 40, 45, 46, 77, 89, 96, 100, 101, 106, 126, 142, 143, 144, 146, 165, 172, 175, 236, 269, 271, 274, 447, 448], "native_arrai": [0, 6, 12, 30, 77, 88, 176, 180, 233, 323, 330, 336, 338, 339, 356, 361, 364, 365, 366, 370, 374, 375, 405, 406, 434, 435], "1": [0, 6, 12, 15, 16, 20, 30, 33, 42, 43, 45, 46, 47, 48, 60, 66, 69, 70, 71, 77, 78, 85, 86, 87, 88, 90, 91, 95, 96, 102, 113, 126, 130, 133, 135, 140, 146, 150, 154, 158, 162, 164, 169, 171, 176, 178, 179, 180, 181, 184, 187, 190, 192, 193, 194, 198, 199, 202, 207, 209, 210, 211, 212, 224, 227, 228, 233, 236, 239, 246, 257, 258, 278, 281, 282, 287, 290, 293, 294, 295, 297, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 339, 340, 343, 347, 349, 353, 354, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 385, 397, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 422, 423, 424, 425, 426, 431, 432, 433, 434, 435, 436, 437, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "type": [0, 6, 12, 18, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 142, 143, 144, 146, 158, 159, 161, 162, 163, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 269, 271, 272, 273, 274, 278, 281, 282, 283, 284, 287, 289, 290, 291, 293, 294, 295, 297, 298, 299, 305, 310, 312, 315, 319, 321, 322, 323, 324, 328, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 391, 395, 396, 397, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "ndarrai": [0, 6, 36, 38, 39, 40, 41, 45, 77, 79, 89, 236, 294], "Or": [0, 6, 46, 425, 426], "jaxlib": [0, 6, 18, 39, 41, 45], "xla_extens": [0, 6, 39, 41, 45], "devicearrai": [0, 6, 45], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 30, 38, 40, 46, 47, 48, 96, 102, 105, 111, 126, 146, 157, 161, 165, 170, 173, 175, 176, 202, 204, 205, 206, 207, 215, 216, 236, 237, 239, 247, 250, 254, 256, 262, 271, 272, 274, 275, 287, 297, 299, 302, 303, 304, 305, 306, 307, 308, 336, 337, 345, 354, 359, 365, 375, 381, 382, 383, 384, 385, 386, 387, 391, 395, 396, 397, 398, 405, 406, 412, 413, 414, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 447, 448, 470, 471, 474, 475, 476, 477, 478, 479], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 43, 45], "adjust": [0, 12, 425, 431, 433], "dict": [0, 12, 37, 46, 47, 126, 135, 136, 151, 152, 153, 154, 236, 251, 252, 253, 385, 387, 388, 391, 394, 397, 398], "previous": [0, 12, 20, 32, 33, 43, 236, 242], "otherwis": [0, 12, 36, 38, 39, 41, 43, 45, 77, 78, 96, 102, 105, 108, 109, 110, 176, 204, 205, 206, 236, 241, 296, 299, 305, 310, 336, 337, 339, 358, 359, 381, 382, 383, 385, 398, 412, 413, 414, 416, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "implement": [0, 12, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 96, 102, 118, 176, 177, 178, 179, 181, 182, 183, 184, 193, 194, 198, 199, 209, 210, 211, 212, 220, 224, 225, 228, 229, 233, 336, 341, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 437], "wa": [0, 12, 15, 30, 43, 45, 236, 296, 385, 398, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "last": [0, 12, 16, 66, 71, 315, 319, 323, 333, 336, 338, 340, 345, 357, 358, 361, 363, 364, 365, 370, 374, 375, 377, 422, 423, 424, 434, 435, 436, 458, 468], "henc": [0, 12, 417, 418, 421], "here": [0, 12, 18, 28, 30, 41, 43, 44, 45, 46, 47, 48, 59, 60], "tensor": [0, 12, 14, 28, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 77, 86, 87, 96, 111, 176, 218, 219, 236, 278, 281, 282, 323, 331, 333, 336, 356, 365, 373, 375, 405, 406, 412, 414, 437, 458, 466, 468], "howev": [0, 12, 15, 18, 30, 32, 33, 36, 38, 39, 40, 41, 45, 46, 47, 48, 60], "befor": [0, 12, 18, 19, 29, 32, 36, 38, 39, 40, 43, 46, 60, 126, 170, 176, 235, 323, 334, 335, 381, 382, 383, 385, 397, 417, 418, 421, 425, 430, 432], "becom": [0, 12, 14, 16, 19, 30, 43, 48, 60, 365, 366], "swap": [0, 12, 365, 378], "python": [0, 12, 13, 14, 15, 18, 20, 43, 45, 46, 60, 77, 78, 126, 165, 175, 176, 225, 437, 443], "op": [0, 12, 28, 43, 60], "eagertensor": [0, 12], "def": [1, 28, 30, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 97, 98, 99, 127, 134, 137, 300, 437, 450, 453, 456], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 441, 442, 443, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 39, 41, 42, 45, 48, 59, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484], "backend": [4, 5, 6, 12, 14, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 48, 60, 96, 107, 115, 125, 126, 161, 164, 173, 236, 266, 269, 270, 276, 299, 302, 304, 306, 307, 308, 313, 437, 443, 447, 448, 474, 475, 476, 477, 478, 479], "ml": [13, 15, 16, 17, 42, 43, 44, 46, 47, 48, 59, 437, 443], "explos": [13, 15, 437], "A": [13, 14, 15, 16, 20, 27, 32, 33, 37, 38, 39, 43, 46, 60, 77, 82, 89, 126, 135, 136, 170, 176, 223, 234, 236, 261, 293, 336, 340, 352, 353, 354, 365, 375, 377, 385, 386, 388, 390, 392, 393, 394, 395, 396, 399, 400, 401, 402, 425, 426, 434, 435, 436, 437, 480, 481], "huge": [13, 15, 46, 437], "number": [13, 14, 18, 30, 39, 43, 46, 48, 74, 75, 76, 77, 78, 79, 82, 86, 87, 88, 89, 96, 103, 112, 113, 114, 116, 117, 118, 126, 162, 163, 164, 176, 180, 184, 192, 200, 201, 220, 224, 225, 227, 235, 236, 256, 261, 262, 277, 295, 298, 315, 319, 323, 334, 336, 341, 347, 352, 354, 358, 365, 366, 368, 371, 372, 374, 375, 377, 379, 380, 381, 382, 383, 384, 405, 406, 410, 412, 415, 417, 418, 419, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469], "tool": [13, 16, 44, 48, 59, 60, 437], "have": [13, 14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 66, 69, 77, 78, 80, 81, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 113, 126, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 244, 251, 252, 253, 255, 299, 305, 313, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 363, 365, 366, 367, 369, 370, 371, 372, 374, 376, 377, 405, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "explod": [13, 14, 437], "onto": [13, 14, 126, 155, 156, 385, 391, 397, 437], "scene": [13, 14, 27, 42, 44, 299, 302, 304, 306, 307, 308, 437], "b": [13, 16, 17, 27, 30, 33, 34, 42, 43, 44, 46, 47, 48, 58, 176, 180, 233, 236, 239, 323, 330, 336, 337, 338, 339, 349, 353, 356, 360, 365, 370, 372, 374, 377, 422, 423, 425, 426, 434, 435, 437, 443], "why": [13, 15, 19, 40, 41, 45, 437], "unifi": [13, 15, 36, 43, 60, 126, 155, 156, 157, 158, 170, 437], "should": [13, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 74, 75, 77, 88, 92, 93, 96, 104, 126, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 242, 278, 299, 302, 304, 306, 307, 308, 336, 337, 338, 339, 340, 343, 344, 347, 349, 350, 351, 353, 354, 356, 357, 358, 359, 365, 373, 405, 411, 412, 413, 414, 417, 418, 421, 425, 426, 427, 428, 430, 431, 432, 433, 437], "them": [13, 14, 15, 16, 32, 34, 36, 37, 43, 45, 46, 47, 60, 437], "c": [13, 15, 16, 17, 27, 30, 33, 42, 43, 44, 46, 60, 236, 239, 299, 301, 302, 304, 306, 307, 308, 365, 377, 412, 415, 425, 431, 433, 437, 443], "standard": [13, 27, 28, 29, 31, 32, 36, 40, 41, 60, 77, 88, 96, 113, 176, 180, 233, 336, 339, 365, 370, 372, 374, 403, 404, 405, 408, 422, 423, 425, 431, 433, 437, 443, 472, 473], "re": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 60, 126, 170, 236, 251, 315, 316, 319, 336, 356, 365, 374, 437], "collabor": [13, 14, 15, 437], "consortium": [13, 15, 437, 443], "data": [13, 15, 27, 28, 29, 33, 35, 37, 39, 40, 41, 45, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 239, 271, 272, 274, 291, 299, 305, 313, 315, 321, 323, 332, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 365, 370, 371, 373, 374, 376, 377, 405, 411, 412, 413, 414, 415, 419, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 443], "api": [13, 14, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 60, 77, 88, 176, 180, 233, 336, 339, 365, 370, 372, 374, 422, 423, 437, 443], "open": [14, 15, 16, 17, 18, 29, 59, 77, 78, 405, 407, 409, 437], "project": [14, 15, 16, 18, 19, 20, 45, 47, 59, 60, 405, 406, 407, 408, 409], "grown": 14, "consider": [14, 30, 41], "recent": [14, 15], "year": [14, 16, 437], "especi": 14, "deep": [14, 17, 19, 42, 46, 437], "learn": [14, 15, 18, 27, 33, 42, 48, 59, 176, 202, 299, 302, 304, 306, 307, 308, 381, 382, 383, 384, 437, 474, 475, 476, 477, 478, 479], "can": [14, 15, 16, 17, 19, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 77, 79, 89, 96, 105, 126, 168, 169, 170, 315, 317, 336, 343, 365, 373, 425, 426, 437, 443], "seen": [14, 15, 30, 45, 46], "rapidli": 14, "increas": [14, 126, 150, 154, 158, 365, 368, 380, 385, 397], "github": [14, 18, 19, 29, 32], "repo": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 437, 443], "contain": [14, 18, 19, 20, 27, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 60, 66, 69, 70, 72, 77, 78, 81, 83, 90, 92, 93, 94, 126, 147, 151, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 264, 273, 315, 321, 323, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 385, 398, 405, 406, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 478, 480, 481], "term": [14, 19, 323, 333, 458, 468], "time": [14, 15, 16, 19, 32, 33, 38, 41, 43, 46, 48, 60, 299, 302, 306, 323, 333, 365, 379, 381, 382, 383, 384, 412, 413, 414, 417, 418, 419, 458, 469, 470, 471], "These": [14, 15, 16, 19, 29, 30, 32, 33, 37, 38, 40, 41, 43, 44, 46, 47, 48, 60, 336, 341, 437, 443], "ar": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 77, 78, 126, 135, 136, 160, 162, 166, 170, 176, 193, 215, 216, 228, 233, 236, 237, 239, 240, 241, 259, 265, 266, 270, 277, 279, 291, 323, 332, 336, 338, 344, 345, 347, 350, 354, 355, 358, 365, 366, 370, 374, 385, 387, 391, 397, 405, 408, 409, 412, 413, 414, 415, 417, 418, 437, 480, 481], "written": [14, 28, 29, 36, 40, 41, 43, 45, 48, 60, 425, 426], "mani": [14, 15, 16, 18, 19, 29, 30, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 60, 365, 375], "differ": [14, 15, 16, 19, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 96, 113, 126, 147, 148, 151, 152, 176, 180, 220, 232, 323, 332, 365, 377, 425, 430, 432, 437], "while": [14, 15, 19, 30, 40, 47, 48, 60, 176, 215, 216, 417, 418, 425, 428], "thi": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 77, 78, 79, 88, 89, 126, 150, 154, 158, 165, 170, 175, 176, 177, 180, 190, 199, 215, 216, 225, 233, 236, 256, 269, 280, 285, 299, 302, 304, 305, 306, 307, 308, 313, 323, 332, 336, 339, 345, 352, 365, 369, 370, 372, 373, 374, 377, 385, 391, 397, 398, 412, 413, 417, 418, 421, 422, 423, 425, 426, 428, 431, 433, 437, 443, 470, 471, 474, 475, 476, 477, 478, 479], "wonder": [14, 16, 45], "thing": [14, 15, 16, 18, 19, 45, 46], "research": [14, 59], "develop": [14, 15, 16, 17, 18, 19, 59, 60, 437], "also": [14, 15, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 77, 88, 176, 180, 233, 236, 269, 299, 302, 323, 332, 336, 339, 365, 370, 372, 374, 381, 382, 383, 384, 385, 386, 387, 395, 396, 397, 422, 423, 458, 468], "consid": [14, 15, 28, 30, 33, 44, 45, 46, 176, 215, 216, 417, 418, 421], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 323, 330, 422, 423, 437, 443], "significantli": 14, "hinder": [14, 41], "librari": [14, 15, 16, 43, 48, 58, 60, 176, 199, 215, 216, 336, 341, 417, 418, 421, 425, 427, 428, 429, 437], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 422, 423, 424], "against": [14, 32, 96, 103, 336, 344, 345, 347, 350, 412, 413], "newest": 14, "version": [14, 15, 16, 18, 29, 43, 45, 336, 341, 437], "For": [14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 59, 60, 77, 78, 88, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 299, 305, 313, 336, 354, 357, 365, 366, 377, 417, 418, 421, 425, 426, 427, 429, 432, 447, 448], "softwar": [14, 15, 18, 19], "pipelin": [14, 20, 36, 48], "where": [14, 15, 16, 17, 18, 19, 33, 36, 37, 38, 39, 40, 43, 46, 47, 48, 60, 77, 84, 85, 88, 176, 184, 198, 211, 220, 224, 236, 265, 278, 336, 341, 347, 350, 351, 354, 355, 357, 358, 365, 366, 368, 369, 371, 377, 380, 385, 386, 396, 405, 406, 412, 415, 425, 431, 433, 434, 435, 436, 437], "rapid": [14, 15], "prototyp": 14, "vital": [14, 48], "signific": [14, 15, 60], "bottleneck": 14, "As": [14, 19, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 417, 418, 421], "new": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 35, 38, 40, 42, 45, 48, 59, 77, 80, 83, 84, 85, 90, 91, 94, 95, 176, 185, 211, 223, 234, 236, 251, 252, 253, 256, 257, 258, 281, 282, 283, 284, 289, 290, 299, 302, 304, 306, 307, 308, 315, 317, 320, 322, 365, 369, 373, 377, 385, 390, 401, 402, 403, 404, 425, 426, 437, 447, 448, 458, 468, 472, 473, 474, 475, 476, 477, 478, 479], "futur": [14, 16, 19, 45, 336, 341], "avail": [14, 18, 19, 29, 39, 126, 161, 163, 164, 173, 236, 252], "specif": [14, 18, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 59, 60, 96, 118, 126, 168, 176, 215, 216, 236, 251, 252, 253, 276, 336, 341, 356, 365, 377, 381, 382, 383, 384, 405, 406, 425, 427, 428, 429, 437, 440, 442, 443, 470, 471], "quickli": [14, 16, 19, 46, 47], "obsolet": [14, 16], "user": [14, 15, 18, 27, 32, 40, 42, 60, 458, 469, 470, 471], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 30, 42, 45, 46, 47, 48, 60, 437], "desir": [14, 96, 102, 105, 126, 171, 236, 265, 315, 321], "provid": [14, 18, 19, 30, 33, 36, 37, 38, 39, 40, 41, 43, 47, 59, 60, 74, 75, 77, 88, 96, 108, 109, 110, 115, 118, 125, 126, 236, 250, 278, 282, 299, 302, 304, 306, 307, 308, 336, 358, 365, 370, 377, 412, 413, 425, 431, 433, 434, 435, 436, 458, 467, 474, 475, 476, 477, 478, 479], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 74, 75, 77, 78, 92, 93, 126, 135, 160, 166, 236, 237, 239, 240, 259, 279, 294, 323, 333, 336, 353, 356, 359, 365, 370, 374, 381, 382, 383, 384, 385, 386, 387, 396, 397, 398, 405, 406, 409, 434, 437, 440, 442], "modern": [14, 15], "simpl": [14, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 45, 47, 48, 60, 236, 254], "scalabl": [14, 43], "manner": [14, 28, 39, 46, 59, 60, 385, 397], "must": [14, 16, 18, 19, 28, 29, 30, 33, 36, 38, 39, 43, 47, 48, 66, 69, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 126, 155, 156, 157, 158, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 244, 255, 282, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 361, 363, 365, 366, 367, 369, 370, 371, 372, 374, 376, 377, 405, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 474, 478], "determin": [14, 29, 33, 37, 38, 39, 96, 105, 106, 112, 115, 116, 117, 125, 126, 161, 163, 164, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 198, 199, 204, 205, 206, 209, 210, 212, 213, 217, 220, 224, 225, 228, 229, 230, 233, 236, 237, 239, 240, 264, 266, 270, 271, 272, 273, 274, 291, 298, 299, 305, 323, 334, 336, 337, 338, 339, 340, 343, 344, 347, 349, 350, 352, 353, 357, 358, 359, 381, 382, 383, 384, 417, 418, 421, 434, 435, 436], "exactli": [14, 16, 30, 39, 437, 443], "common": [14, 30, 35, 37, 39, 60], "ground": [14, 32], "li": 14, "between": [14, 30, 32, 33, 36, 37, 41, 42, 44, 45, 46, 48, 59, 77, 78, 96, 113, 176, 184, 224, 361, 363, 364, 365, 369, 377, 385, 391, 405, 407, 417, 418, 421, 437, 474, 476], "find": [14, 19, 43, 46, 417, 418, 421, 437], "exist": [14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 43, 60, 236, 250, 474, 478], "essenti": [14, 15, 30, 33, 39], "order": [14, 18, 19, 20, 29, 30, 34, 36, 38, 39, 41, 45, 46, 48, 60, 176, 184, 299, 302, 304, 306, 307, 308, 336, 341, 345, 354, 355, 359, 365, 370, 381, 382, 383, 412, 415, 417, 418, 421, 422, 423, 424, 425, 426, 480, 481], "design": [14, 15, 27, 40, 43, 45, 60], "univers": 14, "abstract": [14, 37, 47, 60, 126, 141, 474, 478], "In": [14, 16, 18, 19, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 126, 165, 172, 175, 176, 180, 220, 225, 365, 373, 405, 409, 437], "search": [14, 28, 30, 32, 413, 414, 415, 416], "languag": [14, 16, 43], "first": [14, 15, 18, 19, 20, 30, 33, 36, 41, 43, 45, 46, 48, 74, 75, 77, 86, 87, 126, 157, 176, 180, 186, 188, 189, 190, 191, 196, 201, 203, 207, 208, 213, 214, 216, 217, 220, 222, 224, 232, 236, 239, 299, 303, 336, 338, 340, 341, 344, 349, 351, 354, 356, 358, 365, 367, 374, 377, 378, 381, 382, 383, 384, 385, 386, 395, 396, 405, 411, 412, 413, 414, 417, 418, 419, 458, 469, 470, 471, 474, 478], "see": [14, 17, 19, 33, 37, 39, 41, 45, 46, 59, 60, 77, 78, 83, 86, 87, 96, 104, 118, 176, 180, 186, 188, 189, 190, 191, 195, 199, 207, 213, 216, 217, 220, 222, 224, 225, 232, 336, 347, 350, 353, 358, 359, 412, 414, 417, 418, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "clear": [14, 15, 16, 19, 30, 32, 38, 39, 43, 45, 126, 144], "front": [14, 42, 43, 46, 437, 443], "runner": 14, "look": [14, 19, 20, 28, 30, 33, 38, 39, 41, 43, 45, 47, 48], "littl": [14, 36, 45], "deeper": [14, 27, 42, 126, 150, 154, 158, 385, 396, 397], "follow": [14, 15, 18, 19, 20, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 60, 96, 114, 126, 170, 176, 225, 236, 267, 268, 269, 289, 290, 299, 302, 304, 306, 307, 308, 323, 334, 335, 336, 351, 359, 385, 391, 397, 417, 418, 421, 425, 426, 437, 458, 468, 474, 478], "same": [14, 16, 18, 19, 28, 30, 32, 33, 36, 37, 39, 40, 41, 43, 45, 47, 48, 77, 78, 81, 85, 88, 91, 92, 93, 95, 96, 102, 103, 104, 126, 135, 136, 170, 176, 177, 180, 187, 192, 200, 220, 225, 226, 227, 235, 236, 255, 257, 258, 278, 281, 282, 299, 305, 310, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 348, 350, 351, 353, 354, 357, 358, 365, 367, 370, 371, 374, 376, 377, 381, 382, 383, 385, 398, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 437, 458, 459, 460, 461, 462, 463, 464, 465], "core": [14, 39, 43, 48, 126, 163, 437], "principl": 14, "oper": [14, 18, 30, 33, 36, 37, 39, 40, 41, 46, 47, 77, 86, 87, 96, 118, 176, 180, 190, 225, 236, 241, 251, 252, 253, 291, 299, 302, 304, 306, 307, 308, 323, 324, 325, 326, 327, 328, 329, 330, 332], "expos": [14, 43, 47, 236, 245], "almost": [14, 19, 37, 44, 46], "ident": [14, 16, 33, 35, 45, 46, 60, 385, 398, 437], "uniqu": [14, 33, 60, 126, 135, 136, 381, 382, 383, 384, 385, 391, 417, 418, 419, 420, 421], "syntax": [14, 15], "There": [14, 19, 30, 33, 36, 37, 38, 43, 46, 60, 425, 426], "onli": [14, 17, 18, 19, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 126, 176, 215, 216, 336, 344, 351, 365, 370, 385, 386, 387, 395, 396, 412, 413, 414, 425, 428, 437, 474, 475, 476, 477, 478, 479], "so": [14, 15, 18, 19, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 385, 386, 396, 437], "wai": [14, 15, 40, 45, 46, 47, 48, 60, 425, 426], "manipul": [14, 28, 48, 59, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "unsurprisingli": [14, 30], "fundament": [14, 43], "consist": [14, 36, 40, 126, 158, 336, 341, 425, 426, 470, 471], "each": [14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 66, 69, 70, 72, 77, 88, 96, 103, 126, 135, 136, 147, 148, 149, 150, 151, 152, 153, 157, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 299, 302, 304, 306, 307, 308, 315, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 339, 341, 344, 347, 348, 350, 353, 354, 365, 368, 372, 374, 375, 377, 379, 380, 385, 391, 398, 405, 406, 412, 415, 417, 418, 419, 425, 426, 437, 443, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "veri": [14, 15, 19, 28, 30, 32, 33, 39, 40, 41, 44, 46, 47, 48, 60, 437], "similar": [14, 28, 37, 38, 39, 46, 60, 176, 225, 323, 334, 458, 469], "convent": [14, 59, 336, 344, 425, 426], "those": [14, 19, 33, 37, 38, 39, 40, 43, 48, 77, 78, 299, 313, 336, 351, 354, 365, 366], "introduc": [14, 46, 365, 374], "2006": 14, "layer": [14, 28, 43, 44, 47, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 403, 404, 437, 449, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "therefor": [14, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 45, 47, 60], "present": [14, 31, 38, 39, 40, 41, 43], "itself": [14, 19, 37, 40, 41, 47, 59, 60, 385, 397], "cut": 14, "cloth": 14, "adher": [14, 15, 29, 31, 43, 48], "semant": [14, 43, 48, 176, 225], "round": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 176, 180, 192, 200, 201, 220, 230, 235, 437], "up": [14, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60], "hopefulli": [14, 15, 16, 18, 19, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "paint": [14, 43], "pictur": [14, 43], "how": [14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 437, 443, 458, 469, 470, 471], "pleas": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "check": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 96, 106, 115, 125, 126, 165, 175, 236, 241, 254, 264, 271, 272, 273, 274, 291, 298, 299, 305, 336, 341, 385, 386, 395, 396, 397, 437], "out": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 59, 66, 69, 77, 78, 126, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 247, 248, 255, 257, 323, 331, 333, 336, 357, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 412, 413, 414, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 466], "discuss": [14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 437], "faq": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "reach": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 126, 150, 154, 158, 385, 397], "discord": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "you": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 437, 443], "question": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60], "With": [15, 16, 30, 32, 43, 77, 88, 176, 180, 233, 323, 330, 336, 337, 338, 339, 345, 356, 361, 364, 365, 366, 370, 372, 374, 375, 405, 406, 412, 413, 422, 423, 434, 435], "central": 15, "goal": 15, "being": [15, 16, 19, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 46, 59, 60, 77, 78, 236, 280, 285, 417, 420, 437], "would": [15, 18, 19, 27, 29, 30, 32, 35, 36, 40, 41, 42, 43, 45, 47, 48, 60, 66, 71], "entir": [15, 16, 19, 30, 31, 32, 36, 37, 45, 46, 47, 48, 126, 170, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 467], "forgiven": 15, "rais": [15, 19, 43, 45, 96, 104, 176, 198, 224, 236, 241, 260, 283, 290, 296, 336, 344, 346, 358, 365, 376, 377, 412, 415, 425, 427, 429, 434, 435, 436, 470, 471, 474, 478], "an": [15, 16, 18, 19, 20, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 66, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 113, 116, 117, 118, 126, 148, 152, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 242, 243, 244, 246, 255, 256, 265, 271, 272, 273, 274, 294, 295, 296, 299, 305, 310, 312, 313, 315, 317, 321, 322, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 357, 358, 359, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 391, 405, 407, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 447, 448, 470, 471, 474, 475, 476, 478], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 33, 38, 39, 40, 41, 43, 45, 48, 60, 299, 302, 304, 306, 307, 308, 437, 474, 475, 476, 477, 478, 479], "other": [15, 19, 28, 30, 32, 33, 36, 37, 40, 43, 45, 47, 48, 58, 59, 60, 74, 75, 77, 78, 176, 199, 236, 237, 299, 303, 405, 409, 417, 420, 425, 431, 433, 437], "strong": 15, "industri": 15, "back": [15, 36, 40, 42, 43, 45, 60, 437, 443, 470, 471, 474, 478], "momentum": 15, "won": [15, 16, 48], "ad": [15, 18, 19, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 47, 60, 236, 289, 290, 336, 341, 365, 369, 480, 481], "just": [15, 16, 19, 29, 30, 32, 33, 43, 45, 46, 60, 425, 426, 458, 467], "make": [15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 45, 46, 48, 126], "problem": [15, 19, 36, 45], "even": [15, 16, 19, 33, 38, 39, 45, 46, 47, 48, 60, 176, 224], "wors": 15, "rather": [15, 28, 32, 37, 39, 48, 60, 77, 78, 126, 170, 236, 271, 272, 274, 299, 305], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 33], "feasibl": 15, "space": [15, 77, 78, 86, 87, 236, 256], "case": [15, 18, 19, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 60, 77, 88, 126, 165, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 227, 228, 229, 230, 233, 235, 236, 281, 282, 336, 345, 365, 373, 385, 388, 394, 425, 427, 428, 429, 431, 432, 433, 458, 469, 470, 471, 474, 478], "unlik": [15, 30, 37, 126], "charger": 15, "charact": 15, "encod": [15, 46, 236, 256, 315, 317], "instant": [15, 437], "messag": [15, 19, 43, 45, 483, 484], "much": [15, 18, 19, 28, 36, 37, 40, 43, 45, 46], "doe": [15, 19, 20, 27, 28, 30, 32, 33, 34, 35, 38, 40, 41, 43, 45, 46, 60, 365, 375], "mandat": [15, 32, 40], "adopt": [15, 19, 36], "continu": [15, 16, 31, 32, 60], "own": [15, 16, 29, 43, 60], "signatur": [15, 28, 29, 30, 38, 39, 41, 422, 423], "replac": [15, 20, 32, 35, 38, 39, 43, 45, 48, 60, 236, 281, 282, 365, 366, 405, 406], "your": [15, 16, 17, 18, 28, 29, 46, 47, 60, 437], "10": [15, 20, 30, 43, 45, 46, 77, 84, 87, 126, 176, 187, 210, 236, 280, 285, 299, 306, 336, 339, 356, 365, 370, 372, 375, 405, 406, 407, 425, 426, 474, 476], "100": [15, 16, 46, 47, 48, 60, 437], "despit": [15, 39], "distinct": [15, 40, 42, 417, 418, 421, 437], "still": [15, 32, 38, 45, 47, 60, 437], "believ": [15, 19], "share": [15, 32, 33, 34, 37, 43], "bring": [15, 43, 44], "benefit": [15, 16, 19, 36, 37, 45, 46, 60], "unrel": [15, 19], "what": [15, 16, 27, 29, 30, 37, 41, 42, 43, 45, 46, 47, 48, 59, 60, 437], "again": [15, 16, 19, 28, 30, 37, 40, 46, 48, 60], "contrari": 15, "bumpi": 15, "road": [15, 437], "allud": [15, 46], "most": [15, 18, 19, 28, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 336, 341], "technolog": 15, "sector": [15, 176, 179, 182, 185], "full": [15, 16, 19, 29, 38, 41, 43, 60, 77, 96, 113, 336, 351, 353, 354], "success": 15, "reason": [15, 19, 28, 30, 33, 36, 37, 38, 43, 45, 176, 225], "build": [15, 17, 18, 33, 42, 44, 47, 48, 417, 418, 421, 437, 458, 469, 470, 471], "custom": [15, 47], "comput": [15, 16, 33, 43, 46, 60, 126, 170, 176, 180, 186, 189, 191, 196, 197, 202, 203, 207, 208, 214, 215, 216, 217, 220, 221, 222, 236, 243, 244, 247, 248, 299, 301, 302, 303, 304, 306, 307, 308, 310, 312, 315, 318, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 341, 342, 343, 344, 345, 351, 352, 353, 354, 358, 359, 361, 362, 363, 364, 385, 391, 417, 418, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433], "thank": [15, 46], "interoper": 15, "compon": [15, 43], "bio": [15, 18], "hardwar": 15, "initi": [15, 19, 38, 39, 126, 323, 333, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 478], "pcie": 15, "interfac": [15, 48, 60], "motherboard": 15, "raid": 15, "storag": [15, 46], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 33, 47, 48, 77, 79, 89, 92, 93, 299, 302, 304, 306, 307, 308, 323, 336, 337, 339, 340, 341, 342, 343, 347, 348, 350, 351, 353, 354, 355, 357, 385, 387, 397], "factor": [15, 126, 135, 168, 169, 170, 299, 301, 302, 306, 307, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 458, 459, 460, 461, 462, 463, 464, 465, 474, 475, 476, 477], "sata": 15, "connect": [15, 18, 47, 48, 458, 468, 469], "host": [15, 60], "bu": 15, "adapt": [15, 299, 307, 474, 477], "devic": [15, 27, 28, 33, 35, 38, 45, 46, 60, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 236, 257, 258, 278, 281, 282, 405, 406, 407, 408, 409, 447, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "html": [15, 20, 29, 422, 423], "enabl": [15, 18, 19, 32, 33, 36, 37, 40, 42, 43, 44, 46, 48, 60], "anyon": [15, 17, 60], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 385, 386, 395, 396], "commun": [15, 17, 19, 60, 437, 443], "network": [15, 33, 37, 43, 47, 59, 323, 332, 437, 444, 458, 470, 471], "smtp": 15, "possibl": [15, 17, 18, 19, 29, 30, 32, 38, 40, 43, 46, 59, 60, 236, 275, 293, 315, 321, 425, 427, 429], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 76, 96, 113, 176, 180, 199, 220, 225, 230], "754": [15, 76, 96, 113, 176, 180, 199, 220, 225, 230], "allow": [15, 43, 60, 77, 86, 87, 236, 275, 425, 426, 470, 471], "calcul": [15, 29, 176, 177, 178, 179, 180, 181, 182, 183, 184, 193, 194, 195, 198, 199, 209, 210, 211, 212, 213, 220, 224, 228, 229, 230, 232, 233, 361, 363, 364, 425, 427, 428, 429, 430, 431, 432, 433], "live": [15, 16], "depend": [15, 18, 29, 35, 38, 43, 60, 96, 102, 176, 177, 178, 179, 181, 182, 183, 184, 193, 194, 198, 199, 209, 210, 211, 212, 224, 228, 229, 233, 336, 341, 351, 353, 354, 412, 416, 422, 423, 424], "did": [15, 48], "aris": [15, 60], "until": [15, 19, 60, 437], "substanti": [15, 19, 32, 36], "innov": 15, "growth": 15, "usag": [15, 43, 126, 170], "relev": [15, 30, 38, 46, 474, 475, 476, 477, 478, 479], "area": [15, 40, 58, 176, 179, 182, 185, 437], "necess": 15, "parti": [15, 60], "could": [15, 16, 30, 32, 38, 40, 43, 45, 46, 47, 417, 418, 421], "easili": [15, 19, 46, 47, 48, 60, 437], "engag": [15, 17, 19], "regard": [15, 126], "effect": [15, 29, 36, 41, 60, 77, 88, 299, 308, 425, 431, 433], "2015": 15, "sinc": 15, "alongsid": 15, "machin": [15, 18, 33, 59, 96, 113, 114, 176, 202, 336, 347, 350], "given": [15, 16, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48, 59, 77, 78, 80, 86, 87, 126, 159, 165, 167, 168, 169, 170, 172, 175, 236, 247, 248, 258, 281, 282, 297, 299, 301, 302, 304, 306, 307, 308, 323, 324, 325, 326, 327, 328, 329, 330, 336, 360, 361, 363, 364, 365, 366, 369, 370, 372, 374, 375, 379, 385, 392, 393, 405, 407, 408, 409, 411, 422, 424, 447, 448], "frame": [15, 59], "less": [15, 19, 30, 41, 42, 43, 176, 178, 179, 181, 184, 192, 209, 210, 212, 224, 225, 227, 230, 336, 347, 350, 359, 405, 409, 425, 433], "matur": [15, 60], "state": [15, 42, 43, 44, 46, 59, 176, 220, 323, 333, 437, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "than": [15, 19, 28, 30, 32, 37, 39, 40, 43, 46, 47, 48, 60, 77, 78, 96, 113, 126, 170, 176, 178, 179, 181, 184, 188, 190, 192, 200, 201, 209, 210, 212, 218, 224, 225, 227, 230, 235, 236, 271, 272, 274, 299, 305, 336, 338, 344, 347, 350, 359, 365, 366, 370, 376, 405, 409, 417, 418, 419, 421, 425, 426, 430, 431, 432, 433], "preced": [15, 47], "mention": [15, 18, 19, 30, 33, 41], "aros": 15, "70": [15, 336, 337, 425, 426], "80": [15, 425, 426], "90": [15, 425, 426], "effort": [15, 17, 60], "stage": [15, 17, 19, 20, 27, 437], "complet": [15, 19, 36, 37, 45, 46, 336, 351], "natur": [15, 30, 36, 59, 176, 198, 209, 211, 336, 352], "like": [15, 18, 19, 27, 28, 29, 30, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 299, 305, 405, 409, 425, 426, 437], "certainli": 15, "mission": [15, 437], "creat": [15, 17, 19, 20, 38, 39, 40, 43, 44, 47, 58, 59, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 95, 126, 135, 136, 236, 257, 258, 278, 281, 282, 293, 299, 312, 405, 406, 407, 409, 425, 426, 437, 443, 447, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "At": 15, "process": [15, 16, 17, 19, 20, 33, 43, 48, 126, 135, 136, 165, 175], "ourselv": 15, "lead": [15, 16, 60, 336, 351, 354], "quansight": 15, "compani": 15, "made": [15, 19, 40, 43, 45], "organ": [15, 28, 33, 36, 37], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 417, 418, 421], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 43, 48], "sympi": 15, "rai": [15, 176, 184], "modin": 15, "spyder": 15, "includ": [15, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 59, 60, 77, 78, 79, 89, 236, 264, 298, 336, 359, 385, 386, 405, 409, 412, 414, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 442, 458, 468, 469, 472, 473], "member": [15, 19], "googl": [15, 437], "octoml": 15, "einop": [15, 236, 251, 252, 253], "further": [15, 16, 19, 20, 30, 36, 42, 46, 47, 437], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 27, 46, 315, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 340, 437, 443], "shaw": 15, "co": [15, 43, 59, 176, 236, 256, 437], "intel": 15, "togeth": [15, 36, 47, 48, 60, 480, 481], "major": [15, 38, 39, 60, 412, 415], "involv": [15, 17, 20, 27, 38, 48, 96, 118, 176, 180, 220, 437, 443], "anoth": [15, 19, 33, 38, 45, 48, 77, 83, 96, 103, 105, 107], "promis": 15, "sign": [15, 18, 44, 48, 77, 78, 176, 177, 180, 184, 190, 220, 225, 336, 352, 417, 418, 421, 425, 430, 432], "pursuit": 15, "unif": [15, 17, 45, 437, 443], "clearli": [15, 30], "lot": [15, 16, 35, 45, 60], "thought": [15, 18, 19, 41], "care": [15, 19, 48], "attent": [15, 19, 36, 323, 334, 335, 458, 469], "gone": [15, 42], "simplifi": [15, 43, 44, 45, 47], "compat": [15, 96, 104, 176, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 203, 207, 208, 213, 214, 216, 217, 220, 222, 224, 225, 232, 336, 347, 350, 353, 356, 358, 359, 365, 373, 412, 414, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "excit": [15, 17, 27, 437], "complianc": 15, "hope": [15, 60], "due": [15, 40, 176, 220], "suit": [15, 27, 31, 32, 46, 59], "some": [15, 16, 18, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 59, 60, 176, 199, 299, 301, 302, 304, 306, 307, 308, 313, 323, 331, 437, 458, 466], "motiv": [15, 45], "great": [15, 16, 32, 43, 45], "convinc": 15, "celebr": 15, "encourag": [15, 59, 60, 437, 443], "foundat": 15, "point": [16, 19, 29, 30, 36, 41, 43, 45, 46, 59, 76, 77, 78, 80, 82, 84, 90, 94, 96, 102, 113, 116, 118, 176, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 194, 195, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 336, 337, 339, 341, 342, 343, 347, 350, 351, 353, 354, 359, 417, 418, 421, 425, 427, 428, 429, 430, 431, 432, 433], "mai": [16, 18, 45, 47, 77, 78, 83, 176, 196, 203, 208, 215, 216, 236, 250, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429], "ask": [16, 19, 43, 45, 60], "perfectli": 16, "happi": [16, 18, 60], "abund": 16, "better": [16, 27, 42, 45, 46, 47], "ll": [16, 17, 19, 30, 46], "give": [16, 19, 27, 29, 30, 41, 45, 365, 373, 425, 426], "two": [16, 30, 32, 36, 42, 46, 48, 77, 78, 82, 88, 92, 93, 176, 190, 236, 239, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 365, 378, 417, 418, 420, 421, 425, 426, 437], "streamlin": 16, "workflow": [16, 46, 58, 437], "save": [16, 60, 236, 286, 315, 317, 470, 471], "week": [16, 437], "let": [16, 30, 38, 39, 43, 45, 46, 47, 48, 425, 426, 428, 431, 432, 433, 437], "sai": [16, 35, 45], "deepmind": 16, "releas": [16, 18, 437], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 40, 46, 425, 431, 433], "perceiverio": 16, "happen": [16, 19, 46], "slew": 16, "rush": 16, "f": [16, 27, 43, 46, 48, 176, 202, 236, 266, 270, 315, 320], "g": [16, 27, 60, 96, 101, 118, 126, 142, 405, 408, 409, 417, 418, 421, 425, 427, 429, 430, 432], "inevit": 16, "deviat": [16, 403, 404, 405, 408, 425, 431, 472, 473], "origin": [16, 34, 35, 38, 43, 45, 176, 184, 336, 345, 365, 373, 374], "often": [16, 33, 60], "erron": 16, "train": [16, 33, 37, 39, 46, 47, 48, 58, 59, 60, 299, 301, 302, 306, 437], "poor": 16, "converg": 16, "perform": [16, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 43, 46, 60, 66, 71, 77, 86, 87, 126, 236, 247, 251, 252, 253, 267, 268, 269, 299, 302, 304, 306, 307, 308, 315, 316, 319, 323, 331, 333, 336, 354, 381, 382, 383, 384, 385, 392, 393, 434, 435, 436], "issu": [16, 17, 43, 45, 47, 60], "etc": [16, 18, 19, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 60, 77, 86, 87, 236, 257, 258, 278, 281, 282, 405, 406, 407, 409, 417, 418, 421, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "publish": [16, 60], "manag": [16, 17, 60, 126], "get": [16, 17, 18, 27, 33, 38, 39, 43, 44, 45, 46, 47, 96, 111, 112, 113, 114, 126, 135, 136, 146, 159, 160, 165, 169, 172, 175, 236, 238, 259, 260, 261, 280, 437, 443, 458, 467], "work": [16, 18, 19, 27, 32, 38, 39, 42, 43, 44, 45, 47, 48, 437, 443], "repositori": [16, 18, 19, 31], "pull": [16, 17, 18, 28], "request": [16, 17, 28], "confus": 16, "do": [16, 18, 19, 28, 30, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 176, 225, 299, 305, 313, 385, 386, 395, 396, 397, 425, 426], "don": [16, 19, 47, 60], "expect": [16, 60, 236, 238, 437], "codebas": [16, 17, 27, 28, 42, 126, 168, 169, 437], "total": [16, 17, 19, 30, 32, 39, 46, 47, 60, 126, 172, 412, 415, 425, 431, 433], "hour": 16, "spent": 16, "spin": 16, "off": [16, 42, 336, 340, 357], "test": [16, 18, 27, 30, 96, 116, 117, 176, 204, 205, 206, 434, 435, 436], "error": [16, 18, 32, 36, 39, 45, 60, 66, 67, 126, 176, 197, 425, 427, 429, 470, 471, 474, 478], "iter": [16, 37, 43, 46, 74, 75, 126, 149, 151, 152, 153, 154, 157, 170, 236, 237, 282, 287, 365, 368, 372, 375, 379, 380, 385, 386, 387, 391, 395, 396, 397], "address": [16, 19, 36, 43], "sake": 16, "singl": [16, 28, 30, 32, 33, 35, 37, 40, 41, 43, 46, 47, 48, 60, 126, 135, 136, 155, 156, 157, 158, 236, 295, 298, 405, 408, 409, 417, 418], "multipl": [16, 19, 30, 33, 37, 60, 176, 220, 236, 275, 336, 343, 365, 375, 403, 404, 412, 413, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 468], "line": [16, 18, 19, 30, 36, 44, 45, 46, 47, 58, 437, 443], "convert": [16, 36, 40, 43, 60, 77, 79, 89, 96, 100, 101, 107, 126, 142, 143, 144, 165, 172, 175, 236, 288, 294, 295, 315, 317, 322, 336, 360, 385, 387, 397, 448], "directli": [16, 19, 28, 29, 33, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 59, 60, 385, 397], "graph": [16, 33, 44, 60, 299, 302, 304, 306, 307, 308, 417, 418, 421, 470, 471], "guarante": [16, 36, 417, 418], "turn": [16, 30], "4": [16, 20, 30, 43, 45, 46, 47, 48, 77, 85, 88, 91, 95, 176, 180, 184, 233, 236, 256, 315, 317, 318, 322, 323, 326, 327, 328, 330, 333, 336, 338, 339, 340, 343, 347, 356, 357, 361, 364, 365, 366, 367, 370, 372, 373, 374, 375, 405, 406, 411, 422, 423, 425, 426, 434, 435, 437, 474, 475, 476, 477, 479], "step": [16, 18, 19, 20, 30, 34, 36, 38, 39, 43, 46, 47, 48, 59, 77, 78, 86, 87, 126, 299, 301, 302, 304, 306, 307, 308, 381, 382, 383, 384, 437, 474, 475, 476, 477, 478, 479], "take": [16, 17, 19, 30, 32, 38, 39, 43, 45, 47, 48, 60, 315, 319, 437, 443], "few": [16, 19, 33, 37, 38, 39, 40, 44, 45, 46, 47, 58, 437, 443], "second": [16, 30, 45, 126, 157, 176, 180, 186, 188, 189, 190, 191, 196, 201, 203, 207, 208, 213, 214, 216, 217, 220, 222, 224, 232, 236, 239, 280, 285, 299, 301, 302, 306, 336, 338, 340, 341, 344, 349, 351, 354, 356, 358, 365, 377, 378, 381, 383, 417, 418, 419, 474, 475, 476], "automat": [16, 18, 19, 33, 37, 41, 42, 43, 44, 47, 48, 437], "convers": [16, 42, 44, 48, 59, 60, 437, 443], "everyon": [16, 17, 19, 60], "regardless": [16, 17, 45, 48, 74, 75], "wouldn": 16, "nice": [16, 32], "write": [16, 19, 20, 27, 28, 29, 30, 32, 33, 34, 43, 45, 48, 66, 69, 126, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 244, 248, 255, 257, 361, 363, 365, 366, 369, 370, 371, 372, 374, 376, 377, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "onc": [16, 18, 19, 37, 38, 39, 43, 46, 126, 170, 336, 343, 354, 405, 406], "know": [16, 417, 418, 421], "among": [16, 32], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 33, 43], "understand": [16, 18, 19, 27, 29, 30, 31, 41, 42], "pattern": [16, 38, 236, 251, 252, 253], "hasn": 16, "chang": [16, 19, 29, 31, 32, 43, 47, 60, 126, 336, 338, 365, 373, 385, 387, 397, 437, 443], "now": [16, 18, 28, 35, 38, 41, 45, 46, 48, 59, 60, 425, 426, 458, 469, 470, 471], "spend": 16, "torchvis": 16, "probabl": [16, 323, 331, 405, 406, 458, 466], "sonnet": 16, "about": [16, 19, 42, 43, 47, 48, 60, 96, 113, 114], "next": [16, 18, 19, 29, 30, 34, 35, 45, 46, 96, 113, 437, 470, 471, 474, 475, 476, 477, 478, 479], "everyth": [16, 19, 44, 60], "zero": [16, 30, 39, 41, 43, 46, 47, 77, 80, 82, 88, 92, 93, 95, 96, 102, 176, 180, 188, 199, 215, 216, 220, 224, 225, 233, 236, 278, 281, 282, 299, 301, 302, 306, 307, 323, 331, 336, 339, 344, 347, 350, 358, 359, 365, 370, 372, 374, 380, 412, 413, 414, 415, 417, 418, 421, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 449, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 474, 475, 476, 477], "need": [16, 19, 28, 29, 30, 31, 33, 36, 43, 45, 46, 59, 60, 236, 243, 244, 365, 366, 369], "said": 16, "high": [16, 46, 405, 407, 409], "level": [16, 17, 33, 42, 43, 46, 47, 48, 60], "optim": [16, 44, 46, 48, 59, 126, 299, 302, 304, 306, 307, 308, 381, 382, 383, 384, 437, 475, 476, 477, 479], "trainer": [16, 58, 60, 437], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 48], "flax": [16, 48, 60], "trax": [16, 48], "objax": [16, 48], "idea": [16, 59], "fulli": [16, 36, 41, 43, 44, 45, 46, 47, 48, 60, 458, 468, 469], "offer": [16, 47], "strongli": [17, 437, 443], "welcom": [17, 18, 437, 443], "absolut": [17, 176, 177, 336, 352], "skill": 17, "whether": [17, 18, 38, 40, 41, 66, 67, 74, 75, 96, 102, 111, 115, 116, 117, 125, 126, 146, 157, 161, 165, 170, 173, 175, 176, 206, 236, 237, 239, 240, 247, 250, 254, 256, 262, 264, 266, 270, 271, 272, 273, 274, 275, 287, 291, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 310, 323, 331, 336, 341, 381, 382, 383, 384, 385, 386, 387, 391, 395, 396, 397, 398, 405, 406, 434, 435, 436, 447, 448, 458, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 27, 29, 30, 38, 42, 43, 45, 46, 47, 59, 77, 78, 86, 87, 126, 141], "aspect": [17, 46, 315, 321, 437], "guid": [17, 18, 19, 32, 437], "through": [17, 19, 27, 30, 33, 34, 42, 43, 45, 46, 47, 48, 59, 176, 184], "journei": [17, 437, 443], "inclusvi": 17, "big": [17, 60], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 42, 437], "split": [17, 19, 42, 43, 60, 126, 135, 151, 152, 153, 154, 168, 169, 170, 236, 275, 365, 437], "section": [17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 417, 418, 421], "below": [17, 18, 27, 28, 30, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 59, 77, 88, 92, 93, 176, 180, 233, 336, 339, 340, 357, 365, 370, 372, 374, 422, 423, 437], "best": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 236, 275], "go": [17, 18, 19, 27, 28, 30, 42, 46, 385, 396], "finish": [17, 18, 27, 437], "dive": [17, 19, 42, 45, 46, 60], "right": [17, 18, 19, 27, 30, 46, 176, 188, 190, 336, 354], "environ": [17, 18, 59], "basic": 17, "fork": [17, 236, 276], "doc": [17, 29, 41, 43, 46, 47, 437], "document": [17, 19, 20, 44, 46, 48], "local": [17, 19, 33], "help": [17, 18, 30, 36, 37, 45, 46, 47, 58, 425, 426, 432, 437], "video": [17, 19, 29, 30, 41], "realli": [18, 60], "contribut": [18, 19, 43, 443], "toward": [18, 43, 365, 374, 437, 443], "page": [18, 19, 44, 48, 58, 437, 443], "explain": [18, 19, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 437, 443], "main": [18, 20, 35, 37, 77, 82, 92, 93, 336, 340, 357], "prefer": 18, "mode": [18, 30, 60, 74, 75, 126, 155, 156, 157, 158, 170, 176, 180, 220, 336, 351], "git": [18, 19], "com": 18, "unifyai": [18, 20], "http": [18, 29, 299, 301, 302, 422, 423], "gh": 18, "your_fold": 18, "id": [18, 36, 37, 470, 471], "cours": [18, 19, 30, 46, 60], "whatev": [18, 60], "integr": [18, 32, 96, 102], "familiar": 18, "decid": [18, 385, 396], "sure": [18, 31], "elig": 18, "free": [18, 19, 33, 42, 59], "student": 18, "licenc": 18, "peopl": [18, 19, 27], "seem": [18, 47, 60], "miss": [18, 30, 32, 36, 37, 474, 478], "add": [18, 19, 27, 28, 29, 33, 34, 36, 37, 41, 43, 45, 176, 361, 362, 403, 404, 437, 443, 472, 473], "explicit": [18, 38, 40, 43], "remind": 18, "show": [18, 30, 59, 60, 437], "easier": [18, 36], "remot": 18, "packag": [18, 60], "mitig": 18, "potenti": [18, 42, 176, 199], "conflict": [18, 19, 46], "addit": [18, 19, 28, 29, 32, 37, 38, 45, 46, 48, 176, 180, 236, 251, 252, 253, 403, 404, 458, 468], "yet": 18, "particular": [18, 28, 40, 176, 177, 425, 426], "system": [18, 60, 336, 353], "instruct": 18, "abov": [18, 29, 30, 33, 36, 40, 41, 45, 46, 47, 48, 77, 88, 92, 93, 176, 180, 220, 233, 336, 339, 340, 341, 357, 365, 370, 372, 374, 405, 407, 422, 423, 425, 430, 431, 432], "instal": [18, 20, 59, 437], "desktop": 18, "wsl": 18, "requir": [18, 20, 28, 29, 30, 32, 35, 36, 38, 39, 41, 45, 60, 74, 75, 176, 230, 336, 341, 365, 377, 447, 448], "run": [18, 19, 20, 31, 32, 43, 44, 45, 46, 47, 48, 59, 60, 126, 135, 299, 301, 302, 306, 381, 382, 383, 384, 458, 469, 470, 471], "command": [18, 20, 437], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 20, 29, 422, 423, 458, 467], "imag": [18, 20, 28, 43, 44, 46, 48, 59, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 437], "cmd": 18, "profession": 18, "execut": [18, 20, 43, 45, 48, 60, 236, 296], "deploy": 18, "click": [18, 29, 437], "top": [18, 32, 46, 47], "left": [18, 30, 38, 176, 188, 336, 341, 345, 354, 412, 413], "icon": 18, "side": [18, 19], "choos": [18, 19, 48, 176, 215, 216, 412, 416, 417, 418, 421, 425, 427, 428, 429], "panel": 18, "python3": 18, "path": [18, 20], "press": [18, 46, 437], "ok": 18, "correctli": [18, 32, 38, 41, 47, 60, 336, 345, 412, 413], "caus": [18, 19, 30, 32], "earlier": [18, 19], "note": [18, 19, 28, 30, 176, 225, 336, 341, 354, 365, 377, 425, 428], "might": [18, 19, 28, 32, 35, 43, 45, 46, 236, 250], "necessari": [18, 30, 40], "virtualis": 18, "setup": 18, "termin": [18, 19, 37, 43, 46], "linux": 18, "detail": [18, 19, 28, 32, 33, 34, 35, 37, 41, 46, 47, 77, 83, 417, 418, 421], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 27, 30, 31, 35, 36, 37, 38, 41, 43, 45, 46, 48, 126, 135, 236, 269, 281, 282, 299, 301, 302, 304, 306, 307, 308, 323, 333, 381, 382, 383, 385, 392, 393, 401, 402, 447, 448, 474, 475, 476, 477, 478, 479], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 77, 88, 236, 243, 244, 323, 331, 336, 345, 359, 458, 466], "keyr": 18, "fssl": 18, "download": [18, 32], "gpg": 18, "dearmor": 18, "o": [18, 43], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 48, 60], "lsb_releas": 18, "cs": 18, "stabl": [18, 43, 236, 260, 261, 283, 284, 289, 290, 422, 423, 424], "tee": 18, "list": [18, 20, 28, 30, 38, 39, 41, 43, 46, 47, 48, 60, 77, 78, 79, 80, 88, 89, 90, 94, 96, 103, 126, 135, 136, 147, 148, 151, 152, 155, 156, 170, 236, 240, 288, 293, 297, 315, 321, 323, 324, 325, 326, 327, 328, 329, 330, 336, 356, 365, 367, 370, 375, 377, 385, 386, 387, 391, 396, 397, 434, 435, 436, 437, 458, 459, 460, 461, 462, 463, 464, 465], "dev": [18, 33, 39, 43, 45, 47, 126, 135, 162], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 60], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 59], "post": [18, 48, 403, 404, 437, 443], "pypi": 18, "more": [18, 19, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 77, 78, 96, 103, 176, 199, 336, 344, 365, 370, 417, 418, 419, 421, 425, 426, 437], "nutshel": [18, 41], "hook": 18, "lint": 18, "accept": [18, 19, 29, 30, 32, 33, 36, 37, 39, 40, 41, 45, 77, 88, 176, 180, 215, 216, 225, 233, 336, 339, 365, 370, 372, 374, 422, 423, 425, 428, 437], "fix": [18, 19], "fail": [18, 32, 43, 45], "attempt": [18, 60], "succe": 18, "problemat": 18, "appli": [18, 19, 30, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 66, 67, 68, 69, 70, 71, 72, 73, 96, 118, 236, 251, 252, 253, 299, 306, 307, 323, 332, 334, 335, 336, 347, 350, 361, 363, 364, 365, 377, 381, 382, 383, 385, 391, 394, 397, 398, 403, 404, 437, 444, 445, 446, 472, 473], "To": [18, 19, 33, 37, 46, 47, 48, 437], "proce": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "modifi": [18, 29, 33, 38, 39, 43], "file": [18, 19, 20, 28, 29, 33, 36, 37, 43, 46, 236, 286, 470, 471], "properli": [18, 27], "m": [18, 27, 43, 77, 88, 92, 93, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 357, 405, 408, 409], "pip": [18, 59, 437], "enter": [18, 19, 36, 38, 39, 41], "folder": [18, 19, 20, 28, 31, 32, 33], "cd": 18, "That": [18, 19, 45, 46, 47, 176, 225], "good": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 425, 426], "ever": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "unsur": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "channel": [19, 236, 256, 315, 317, 318, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468], "server": 19, "outlin": [19, 27, 32, 33, 45], "appropri": [19, 176, 180, 220, 412, 413], "context": [19, 39, 236, 276, 323, 334, 458, 469], "suitabl": [19, 28, 37], "quick": [19, 27, 47], "alwai": [19, 28, 33, 36, 40, 41, 43, 45, 96, 102, 176, 180, 220, 236, 269, 299, 305, 310], "correct": [19, 27, 33, 37, 38, 39, 41, 365, 366, 425, 431, 433, 437], "tendenc": 19, "gener": [19, 20, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 74, 77, 78, 86, 87, 176, 225, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 405, 406, 407, 409, 410, 422, 423, 437, 474, 478], "land": 19, "end": [19, 42, 59, 60, 77, 78, 176, 184, 437, 443], "world": 19, "come": [19, 47, 58, 437, 443], "fly": 19, "hard": [19, 45], "keep": [19, 31, 44, 46, 48, 236, 297], "track": [19, 126, 385, 397, 470, 471], "receiv": [19, 32, 38, 39, 126, 135, 136, 236, 238, 275, 458, 468], "respons": [19, 20, 40], "internship": 19, "mean": [19, 27, 30, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 126, 155, 156, 157, 158, 170, 236, 252, 381, 382, 383, 384, 385, 391, 405, 408, 425, 449], "found": [19, 29, 36, 37], "avoid": [19, 32, 34, 35, 45, 126, 176, 199], "someon": [19, 60], "els": [19, 28, 33, 34, 40, 43, 45, 47, 48, 236, 241, 250, 254, 385, 395], "strive": [19, 60], "respond": 19, "newli": [19, 40, 74, 75, 96, 102, 236, 242], "name": [19, 20, 29, 32, 43, 45, 46, 48, 74, 75, 336, 341, 351, 354, 417, 418, 419], "suggest": [19, 28], "place": [19, 27, 28, 29, 30, 32, 33, 39, 41, 48, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 94, 95, 126, 171, 176, 180, 233, 236, 267, 268, 269, 336, 339, 365, 370, 372, 374, 422, 423, 474, 475, 476, 477, 478, 479], "bug": [19, 32], "It": [19, 20, 27, 28, 29, 30, 36, 37, 40, 43, 45, 46, 47, 66, 69, 126, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 244, 255, 361, 363, 365, 366, 369, 370, 371, 372, 374, 376, 377, 412, 413, 422, 423, 424, 434, 435, 436], "serv": [19, 32, 33, 36, 37, 41, 42, 437], "suspect": 19, "behaviour": [19, 29, 32, 36, 40, 41, 45], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 28, 46, 47, 60], "bet": 19, "extens": [19, 29, 77, 88, 176, 180, 233, 336, 339, 365, 370, 374, 422, 423], "act": [19, 30, 60], "placehold": [19, 36, 41, 385, 397], "sub": [19, 27, 32, 37, 45, 46, 47, 126, 151, 152, 155, 156, 157, 158, 336, 340, 365, 375, 381, 382, 383, 384, 437], "task": [19, 59, 381, 382, 383, 384], "mark": [19, 32], "tick": 19, "ii": [19, 425, 426], "iii": 19, "comment": 19, "titl": [19, 437], "refer": [19, 32, 33, 38, 41, 60, 77, 82, 176, 199, 211, 299, 301, 302, 336, 358, 360, 425, 431, 433, 434, 435, 436, 458, 468], "issue_numb": 19, "delet": [19, 20], "No": [19, 43], "wait": 19, "progress": [19, 44, 48], "pr": 19, "soon": [19, 58, 60, 437, 443], "partial": [19, 470, 471], "solut": [19, 32, 336, 353], "review": [19, 28], "merg": 19, "everi": [19, 20, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 77, 84, 85, 236, 237], "shape": [19, 28, 29, 30, 38, 39, 41, 43, 45, 46, 47, 48, 66, 69, 77, 80, 81, 84, 85, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 126, 138, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 244, 255, 258, 262, 278, 281, 282, 288, 315, 318, 320, 321, 323, 325, 327, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 405, 407, 408, 409, 412, 413, 419, 422, 423, 424, 425, 426, 434, 435, 436, 437, 458, 460, 461, 462, 463, 464, 465, 472, 473], "master": 19, "move": [19, 28, 126, 171], "within": [19, 32, 47, 60, 77, 78, 405, 409], "7": [19, 20, 30, 33, 176, 180, 187, 198, 233, 299, 301, 302, 306, 315, 318, 322, 323, 330, 336, 338, 339, 340, 356, 361, 362, 363, 364, 365, 366, 370, 372, 375, 405, 406, 407, 425, 426], "dai": 19, "close": [19, 29, 176, 199, 315, 321, 336, 354], "method": [19, 28, 29, 30, 32, 33, 36, 41, 43, 44, 47, 48, 60, 77, 83, 88, 176, 180, 233, 236, 245, 281, 282, 299, 306, 307, 336, 338, 339, 356, 361, 364, 365, 366, 370, 372, 374, 375, 385, 386, 396, 397, 398, 422, 423, 434, 435, 437, 458, 469, 470, 471], "likewis": [19, 33, 38, 41, 46], "freed": 19, "flag": [19, 45, 299, 305], "purpos": [19, 20, 30, 32, 33, 35, 36, 37, 41, 42, 45, 176, 199, 437], "ensur": [19, 32, 36, 38, 41], "remain": [19, 30, 60, 176, 180, 220, 225, 365, 373, 385, 391], "access": [19, 20, 38], "who": [19, 27, 42, 60], "short": [19, 47, 323, 333], "basi": [19, 31, 46], "situat": [19, 48], "alloc": [19, 60, 77, 92, 93, 96, 102, 126], "upon": [19, 30, 32, 40], "long": [19, 30, 323, 333], "period": 19, "whilst": [19, 48], "prevet": 19, "instead": [19, 29, 30, 32, 33, 37, 41, 43, 45, 46, 60], "unabl": 19, "communuti": 19, "obvious": 19, "never": 19, "reflect": [19, 36], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "sometim": 19, "fine": [19, 45, 48], "person": 19, "becaus": [19, 29, 32, 33, 34, 36, 38, 39, 41, 43, 47, 48, 60], "inact": 19, "limit": [19, 30, 32, 43, 46, 48, 60, 96, 113, 114, 236, 243, 244, 365, 366], "me": 19, "unfairli": 19, "definit": [19, 33, 38, 45, 336, 337, 338], "investig": 19, "Then": [19, 20, 45, 60], "practic": [19, 32], "separ": [19, 32, 43, 45, 46], "branch": [19, 60, 74, 75, 176, 184], "simpli": [19, 29, 32, 33, 36, 37, 39, 40, 41, 43, 47, 48, 176, 199], "role": [19, 44], "kept": [19, 40, 381, 382, 383], "date": 19, "upstream": [19, 31], "complic": [19, 43], "script": [19, 30, 43, 60], "root": [19, 20, 46, 176, 230, 405, 406, 407, 408, 409], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 425, 430, 432], "browser": 19, "clone": [19, 126, 147, 148, 149, 150], "push": [19, 31], "both": [19, 29, 30, 33, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 176, 224, 336, 338, 344, 358], "repeat": [19, 29, 30, 34, 36, 236, 253, 365, 379], "yourself": [19, 59], "simpler": [19, 45], "cannot": [19, 38, 48], "alreadi": [19, 34, 41, 45, 60, 126, 176, 192, 200, 220, 235, 336, 349, 437], "least": [19, 30, 33, 36, 336, 344], "final": [19, 29, 30, 33, 36, 38, 43, 45, 46, 77, 86, 87, 236, 256, 458, 469], "done": [19, 30, 32, 46], "tickbox": 19, "lower": [19, 30, 43, 77, 82, 92, 176, 218, 336, 337, 405, 409], "corner": 19, "without": [19, 28, 33, 36, 43, 45, 46, 47, 59, 60, 236, 280, 285, 365, 373, 385, 387, 417, 418, 421], "span": 19, "intent": 19, "larg": [19, 46, 176, 180, 220], "approach": [19, 32, 33, 45, 46, 60], "discourag": 19, "philosophi": 19, "increment": [19, 236, 268], "frequent": 19, "valuabl": 19, "infrequ": 19, "earli": [19, 437], "wast": 19, "spot": [19, 33], "mistak": 19, "propsal": 19, "mountain": 19, "around": [19, 33, 36, 41, 45, 60], "advoc": [19, 60], "individu": [19, 33], "per": [19, 46, 126, 323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "style": [19, 412, 415], "ve": [19, 42, 45, 405, 406, 437], "were": [19, 28, 30, 32], "actual": [19, 27, 33, 40, 42, 45, 47, 60], "aim": [19, 42], "part": [19, 28, 31, 32, 33, 43, 44, 48, 59, 60, 77, 92, 93, 299, 302, 304, 306, 307, 308, 470, 471], "subsect": 19, "filepath": 19, "interact": [19, 437], "session": 19, "block": [19, 33, 42, 44, 48, 437], "smaller": [19, 43, 48, 365, 366, 374, 425, 430, 432], "manual": [19, 32, 47, 385, 386, 395, 396], "edit": 19, "exact": [19, 43, 417, 418], "beauti": 19, "hisotri": 19, "particularli": [19, 46], "concern": [19, 27, 30, 40, 42], "abl": [19, 33, 38, 45, 48], "effici": [19, 32, 33, 40, 41, 43, 46, 60, 425, 426], "histori": 19, "too": [19, 60, 176, 180, 220], "difficult": [19, 32, 60, 417, 418, 421], "undo": 19, "stress": 19, "builder": [20, 58, 60, 437], "synchron": 20, "rest": [20, 44, 48], "remove_doc": 20, "_": [20, 29, 40, 45, 46, 299, 301, 302, 336, 360, 422, 423], "indic": [20, 44, 48, 66, 71, 176, 227, 236, 257, 258, 265, 278, 281, 282, 323, 324, 325, 326, 327, 328, 329, 330, 336, 359, 365, 374, 385, 386, 388, 390, 392, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 406, 412, 413, 414, 415, 417, 418, 420, 422, 423, 424, 437, 440, 442, 458, 459, 460, 461, 462, 463, 464, 465, 470, 471], "privat": [20, 474, 478], "fulfil": [20, 42, 437], "autogenerated_sourc": 20, "3": [20, 30, 43, 45, 46, 47, 48, 76, 77, 85, 88, 91, 94, 95, 126, 171, 176, 180, 190, 198, 202, 207, 233, 236, 239, 287, 315, 318, 321, 322, 323, 324, 325, 328, 329, 330, 336, 337, 338, 339, 340, 343, 347, 354, 356, 357, 360, 361, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 405, 406, 407, 411, 422, 423, 425, 426, 432, 434, 435, 437], "format": [20, 29, 38, 39, 43, 45, 46, 96, 107, 111, 126, 146, 425, 426, 437], "png": [20, 46], "_imag": 20, "lastli": 20, "docstr": [20, 27, 28, 33, 41, 77, 88, 176, 180, 233, 336, 339, 365, 370, 374, 422, 423], "structur": [20, 28, 33, 36, 37, 46, 47, 236, 245, 385, 398], "rst": 20, "submodul": [20, 31, 32, 33, 39, 42, 43, 47, 437, 472, 473, 480, 481], "skip": [20, 32, 385, 398], "read": [20, 437], "configur": [20, 38, 385, 398], "partial_sourc": 20, "conf": 20, "copi": [20, 29, 34, 38, 43, 45, 46, 59, 60, 77, 79, 83, 96, 102, 236, 246, 294, 295, 365, 373, 385, 387, 422, 424], "5": [20, 30, 45, 46, 47, 77, 85, 88, 91, 94, 95, 126, 162, 176, 180, 185, 190, 233, 315, 318, 323, 328, 329, 336, 337, 338, 339, 340, 343, 356, 357, 361, 364, 365, 366, 367, 370, 372, 373, 374, 375, 405, 406, 407, 411, 422, 423, 425, 426, 434, 435, 458, 469], "create_rst_fil": 20, "filter": [20, 323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "recurs": [20, 33, 35, 37, 47, 60, 385, 386, 387, 395, 396, 397], "directori": [20, 236, 286], "repres": [20, 45, 77, 88, 96, 107, 112, 176, 179, 180, 182, 185, 194, 220, 229, 323, 332, 336, 352, 353], "its": [20, 29, 96, 103, 126, 170, 336, 344, 365, 369, 373, 374, 378], "overal": [20, 29, 37, 38, 39, 48], "markup": 20, "6": [20, 30, 45, 46, 47, 77, 85, 176, 180, 187, 233, 315, 318, 323, 330, 336, 338, 339, 340, 354, 356, 361, 364, 365, 366, 367, 370, 372, 373, 374, 375, 405, 406, 407, 425, 426], "extract": [20, 28], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 60], "module_nam": 20, "copy_readme_to_rst": 20, "8": [20, 30, 42, 46, 176, 180, 315, 318, 323, 330, 336, 338, 339, 340, 356, 365, 366, 370, 372, 375, 405, 406, 407, 425, 426, 437, 458, 469], "tabl": 20, "content": [20, 40, 43, 46], "toc": 20, "tree": 20, "accord": [20, 33, 38, 96, 105, 113, 176, 180, 190, 220, 236, 257, 281, 282, 336, 358, 365, 368, 380, 425, 431, 433], "append": [20, 32, 43, 46, 176, 188, 336, 340, 344], "append_toctree_to_rst": 20, "9": [20, 30, 46, 47, 176, 180, 187, 299, 301, 302, 306, 323, 330, 336, 338, 339, 354, 356, 365, 366, 370, 374, 375, 405, 406, 407, 425, 426, 474, 475, 476], "index": [20, 33, 45, 76, 77, 82, 88, 236, 257, 258, 365, 377, 385, 388, 389, 392, 393, 394, 399, 401, 412, 413, 414, 415, 417, 418, 419, 422, 423, 440, 442], "create_index_rst": 20, "14": [20, 30, 336, 356, 365, 372, 405, 407, 425, 426], "\u03c0": [20, 176, 178, 181, 183, 184], "namespac": [20, 28, 38, 43, 48], "remov": [20, 29, 32, 33, 38, 40, 48, 336, 340, 344, 357, 365, 376, 381, 382, 383], "debug_mod": 21, "set_breakpoint_debug_mod": 21, "set_debug_mod": 21, "debug_mode_in": [21, 24], "except": [21, 24, 33, 38, 39, 40, 45, 60, 96, 104, 236, 241, 250, 296, 336, 350, 365, 367, 377, 412, 415, 434, 435, 436], "set_exception_debug_mod": 21, "unset_debug_mod": 21, "debugg": [22, 23, 24, 25, 26], "mainli": [27, 44, 46], "target": [27, 42, 46, 47, 48, 126, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 437], "under": [27, 29, 30, 32, 33, 37, 42, 43, 46, 48], "hood": [27, 30, 32, 33, 37, 42, 43, 46, 48], "weed": [27, 42], "behind": [27, 42, 44, 299, 302, 304, 306, 307, 308], "navig": 27, "tour": 27, "primari": [27, 32, 34, 40, 60], "composit": [27, 32, 34, 36, 43, 47, 48, 60], "mix": [27, 30, 32, 43, 96, 118, 176, 180, 323, 330, 336, 356, 361, 364, 425, 428], "nestabl": [27, 29, 30, 32, 37, 40], "wrap": [27, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 48, 60, 236, 242, 299, 313], "dynam": [27, 38, 39, 40, 43, 74, 75], "runtim": [27, 32], "thei": [27, 28, 30, 33, 37, 38, 39, 40, 45, 46, 47, 48, 60, 381, 382, 383, 405, 406, 437, 480, 481], "handl": [27, 32, 33, 35, 37, 38, 39, 40, 41, 47, 60, 74, 75, 126, 142, 143, 144, 146, 162, 165, 172, 175, 299, 302, 304, 306, 307, 308, 474, 475, 476, 477, 478, 479], "h": [27, 315, 316, 317, 318, 320, 322, 323, 326, 327, 328, 329, 330], "inplac": [27, 30, 35, 36, 41, 45, 47, 236, 241, 266, 270, 291, 299, 302, 304, 306, 307, 308, 447, 448, 474, 475, 476, 477, 478, 479], "output": [27, 28, 29, 30, 32, 33, 36, 39, 40, 41, 43, 45, 47, 48, 60, 66, 69, 77, 78, 80, 81, 82, 84, 85, 88, 90, 91, 94, 95, 126, 135, 136, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 242, 244, 248, 255, 257, 299, 303, 323, 325, 327, 329, 331, 333, 334, 335, 336, 357, 361, 363, 365, 366, 369, 370, 371, 372, 374, 376, 377, 379, 405, 407, 408, 409, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469], "j": [27, 236, 239, 336, 357, 425, 426], "k": [27, 43, 77, 82, 92, 93, 236, 239, 323, 335, 336, 344, 351, 353, 354, 355, 357, 405, 408, 409, 412, 415], "l": [27, 336, 337, 341, 344, 357], "borrow": 27, "n": [27, 77, 88, 92, 93, 323, 331, 336, 340, 344, 346, 347, 348, 349, 350, 351, 354, 355, 357, 358, 359, 360, 365, 368, 369, 371, 377, 380, 405, 408, 409, 412, 415, 425, 428, 431, 432, 433, 434, 435, 436], "categori": [28, 36, 37, 38, 42, 437], "taken": [28, 48, 336, 340], "constant": [28, 33, 47, 48, 126, 135, 136, 361, 362, 365, 368, 385, 391, 403, 404, 449, 450, 454, 457, 470, 471, 472, 473], "creation": [28, 38, 39, 43, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "data_typ": [28, 38, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "elementwis": [28, 33, 43, 48, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "linear_algebra": [28, 45, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "sort": [28, 336, 341, 354, 355, 423], "statist": [28, 38, 426, 427, 428, 429, 430, 431, 432, 433], "util": [28, 39, 126, 159, 435, 436], "activ": [28, 47, 67, 68, 69, 70, 71, 72, 73, 437, 445, 446], "compil": [28, 42, 44, 60, 437, 470, 471, 474, 475, 476, 477, 478, 479], "gradient": [28, 46, 47, 59, 60, 126, 170, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 381, 382, 383, 384, 437, 474, 475, 476, 477, 478, 479], "loss": [28, 33, 46, 47, 48, 362, 363, 364, 437], "meta": [28, 382, 383, 384], "nest": [28, 33, 37, 45, 46, 47, 60, 126, 150, 154, 158, 236, 293, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 470, 471, 474, 475, 476, 477, 478, 479], "norm": [28, 236, 243, 244, 336, 345, 359, 404, 437, 473, 474, 476], "random": [28, 39, 48, 59, 406, 407, 408, 409, 410, 411, 437], "overlap": 28, "sever": [28, 60, 336, 343], "judgement": 28, "locat": [28, 32, 39, 405, 406], "matmul": [28, 43, 336, 354, 437], "some_namespac": 28, "insid": [28, 38], "some_backend": 28, "another_backend": 28, "break": [28, 41, 45, 437], "anyth": 28, "refactor": 28, "ongo": 28, "subfold": [28, 32], "via": [28, 34, 37, 38, 39, 40, 43, 45, 46, 59, 385, 386, 395, 396], "file_nam": 28, "defin": [28, 29, 38, 41, 45, 47, 60, 176, 220, 225, 236, 278, 336, 338, 341, 353, 405, 407, 425, 427, 428, 429], "my_func": [28, 30], "union": [28, 30, 33, 36, 38, 39, 40, 41, 43, 48, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 142, 143, 144, 146, 151, 152, 153, 154, 159, 165, 167, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 262, 264, 265, 269, 278, 281, 282, 287, 288, 293, 294, 295, 297, 298, 299, 312, 315, 319, 321, 322, 323, 324, 328, 330, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 396, 397, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436], "nativearrai": [28, 30, 33, 36, 38, 40, 41, 43, 45, 48, 66, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 102, 103, 104, 111, 113, 114, 116, 117, 118, 126, 146, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 262, 264, 265, 269, 278, 281, 282, 287, 293, 294, 295, 297, 298, 299, 312, 315, 319, 321, 322, 323, 324, 328, 330, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 397, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436], "ax": [28, 30, 38, 45, 126, 170, 336, 345, 353, 356, 359, 365, 368, 370, 371, 374, 376, 378, 380, 412, 413, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "int": [28, 30, 33, 38, 39, 41, 48, 66, 71, 74, 75, 77, 80, 82, 84, 85, 86, 87, 90, 92, 93, 94, 96, 104, 110, 112, 113, 114, 117, 126, 151, 152, 153, 154, 162, 163, 164, 170, 236, 247, 248, 251, 252, 253, 256, 257, 262, 278, 281, 282, 287, 288, 297, 315, 319, 321, 323, 324, 328, 330, 336, 338, 340, 356, 357, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 385, 397, 405, 406, 407, 408, 409, 410, 412, 413, 414, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436], "tupl": [28, 38, 39, 41, 45, 46, 47, 60, 74, 75, 77, 79, 80, 84, 89, 90, 94, 96, 104, 236, 256, 288, 315, 321, 323, 330, 336, 347, 350, 354, 356, 359, 365, 367, 368, 370, 371, 374, 376, 377, 380, 385, 387, 388, 390, 392, 393, 394, 396, 397, 399, 400, 401, 402, 405, 407, 408, 409, 412, 415, 417, 418, 419, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "dtype": [28, 30, 33, 38, 39, 45, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 176, 190, 236, 239, 278, 315, 318, 412, 413, 422, 424, 425, 426, 430, 431, 432, 434, 435, 437], "nativedtyp": [28, 38, 39, 41, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 94, 95, 96, 101, 102, 109, 110, 111, 425, 432], "nativedevic": [28, 39, 41, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 95, 126, 143, 144, 159, 165, 167, 171, 172, 175, 236, 257, 258, 278, 281, 282, 405, 406, 407, 408, 409], "my": 28, "cool": 28, "special": [28, 29, 30, 36, 41, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 227, 228, 229, 230, 233, 235, 425, 427, 428, 429, 431, 432, 433], "nan": [28, 29, 76, 96, 102, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 204, 206, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 236, 264, 298, 417, 418, 421, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436], "y": [28, 30, 43, 45, 66, 68, 69, 70, 71, 72, 73, 77, 84, 85, 88, 90, 91, 95, 96, 102, 126, 146, 162, 176, 180, 184, 187, 190, 192, 193, 198, 218, 219, 233, 236, 239, 246, 255, 293, 294, 295, 299, 303, 315, 322, 323, 330, 332, 336, 337, 338, 339, 343, 356, 357, 361, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 405, 406, 407, 408, 409, 411, 412, 414, 416, 422, 423, 425, 426, 431, 432, 434, 435], "input": [28, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 83, 85, 88, 89, 91, 92, 93, 95, 96, 102, 103, 105, 106, 108, 109, 110, 111, 112, 116, 117, 118, 126, 135, 136, 146, 147, 150, 151, 154, 158, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 262, 264, 265, 267, 268, 269, 271, 272, 273, 274, 287, 288, 291, 293, 294, 295, 297, 298, 299, 303, 305, 310, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 403, 404, 405, 406, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473], "numer": [28, 47, 77, 88, 96, 102, 176, 177, 180, 192, 195, 199, 200, 201, 204, 205, 206, 207, 215, 216, 220, 221, 222, 224, 225, 227, 232, 235, 236, 260, 261, 283, 284, 289, 290, 336, 338, 344, 349, 354, 356, 357, 358, 405, 411, 412, 413, 414, 425, 427, 430, 432, 449], "along": [28, 40, 77, 86, 87, 126, 151, 152, 153, 154, 155, 156, 157, 158, 170, 236, 247, 248, 257, 297, 315, 319, 336, 345, 357, 358, 359, 361, 363, 364, 365, 367, 370, 372, 374, 375, 377, 379, 381, 382, 383, 384, 405, 411, 412, 413, 414, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "result": [28, 29, 30, 32, 36, 37, 38, 40, 41, 46, 66, 69, 77, 78, 96, 118, 126, 135, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 244, 248, 255, 257, 281, 282, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 340, 345, 354, 359, 361, 363, 365, 366, 369, 370, 371, 372, 374, 376, 377, 385, 398, 412, 413, 414, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "broadcast": [28, 29, 30, 38, 66, 69, 96, 103, 104, 126, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 232, 233, 236, 244, 255, 336, 344, 345, 347, 350, 353, 358, 359, 361, 363, 365, 366, 369, 370, 371, 372, 374, 376, 377, 412, 413, 414, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "cooler": 28, "keyword": [28, 38, 39, 40, 41, 46, 77, 88, 126, 135, 136, 150, 154, 158, 236, 238, 275, 385, 391, 425, 432, 470, 471], "hint": [28, 29, 33, 36, 40, 41, 77, 88, 176, 180, 233, 336, 339, 365, 370, 372, 374, 422, 423], "produc": [28, 126, 135, 136], "featur": [28, 41, 46, 437], "something_cool": 28, "feel": [28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "category_nam": [29, 33, 38, 39, 41], "thorough": [29, 32, 41], "contrast": [29, 41], "backend_nam": [29, 33, 34, 35, 38, 39, 41], "account": 29, "instanti": 29, "tan": [29, 33, 37, 40, 41, 43, 176, 422, 423, 437], "firstli": [29, 30, 33, 36, 38, 46], "correspond": [29, 30, 31, 33, 36, 37, 38, 96, 103, 176, 184, 224, 336, 338, 341, 353, 365, 367, 374, 405, 406, 412, 413, 414, 417, 418, 419, 421, 425, 430, 431, 432, 433], "templat": [29, 437], "spec": [29, 30], "api_specif": [29, 422, 423], "array_api": 29, "raw": 29, "preview": 29, "newlin": 29, "render": 29, "incorrectli": 29, "onlin": 29, "approxim": [29, 66, 67, 176, 178, 179, 181, 182, 183, 184, 193, 194, 198, 199, 209, 210, 211, 212, 224, 228, 229, 233, 336, 347, 350], "tangent": [29, 66, 73, 176, 183, 184, 185, 233, 234], "domain": [29, 176, 178, 179, 181, 182, 183, 184, 193, 194, 198, 199, 209, 210, 212, 228, 229, 230, 233], "infin": [29, 76, 96, 102, 176, 177, 179, 180, 182, 183, 184, 192, 193, 194, 198, 199, 200, 201, 204, 205, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 336, 359, 425, 427, 429, 434, 435, 436], "codomain": [29, 176, 178, 179, 181, 182, 183, 184, 193, 194, 198, 199, 209, 210, 212, 228, 229, 230, 233], "element": [29, 43, 48, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 84, 85, 92, 93, 126, 149, 153, 157, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 247, 248, 255, 265, 294, 295, 323, 331, 336, 338, 341, 344, 351, 354, 365, 366, 370, 372, 374, 375, 376, 405, 406, 412, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 466], "x_i": [29, 176, 177, 178, 179, 181, 182, 183, 187, 192, 193, 194, 198, 199, 200, 204, 205, 206, 209, 210, 212, 215, 227, 228, 229, 230, 231, 233, 235, 417, 418, 421, 425, 427, 428, 429, 431, 432, 433], "assum": [29, 38, 45, 46, 60, 77, 88, 176, 180, 193, 228, 233, 336, 339, 365, 370, 372, 374, 422, 423], "express": [29, 43, 48, 176, 178, 181, 183, 184, 193, 228, 233], "radian": [29, 176, 178, 181, 183, 184, 193, 228, 233], "float": [29, 33, 38, 45, 47, 66, 68, 76, 77, 78, 80, 82, 84, 85, 87, 90, 94, 96, 102, 109, 113, 116, 118, 126, 159, 165, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 194, 195, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 236, 243, 244, 256, 260, 261, 283, 284, 289, 290, 315, 317, 322, 323, 330, 336, 337, 339, 341, 342, 343, 347, 350, 351, 353, 354, 359, 361, 363, 364, 405, 408, 409, 417, 418, 421, 425, 427, 428, 429, 430, 431, 432, 433], "operand": [29, 176, 178, 179, 180, 181, 182, 183, 184, 192, 193, 194, 198, 199, 200, 209, 210, 212, 213, 220, 224, 225, 228, 229, 230, 233, 235, 425, 426, 427, 429, 432], "whose": [29, 77, 92, 93, 176, 179, 182, 185, 193, 194, 224, 228, 229, 233, 236, 242, 336, 337, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 353, 354, 355, 357, 365, 370, 374, 417, 418, 419, 425, 426], "ref": [29, 176, 190, 207, 220, 222, 225, 232, 365, 377], "promot": [29, 33, 38, 96, 102, 105, 118, 176, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 198, 199, 209, 210, 212, 213, 217, 220, 224, 225, 228, 229, 230, 233, 336, 337, 338, 343, 344, 347, 349, 350, 353, 358, 359, 365, 377, 425, 428], "But": [29, 48], "needless": 29, "duplic": [29, 34, 35, 45, 47], "info": [29, 437], "subset": [29, 32, 41, 43], "extend": [29, 32, 34, 41], "renam": 29, "conform": [29, 77, 88, 176, 180, 199, 233, 336, 339, 365, 370, 372, 374, 422, 423], "org": [29, 299, 301, 302, 422, 423], "elementwise_funct": [29, 422, 423], "explan": [29, 41, 45], "descript": [29, 77, 88, 176, 180, 233, 336, 339, 359, 365, 370, 372, 374, 422, 423], "simplic": [29, 47, 59, 77, 88, 176, 180, 233, 336, 339, 365, 370, 372, 374, 422, 423], "instanc": [29, 30, 32, 33, 36, 38, 40, 41, 46, 47, 48, 77, 88, 126, 135, 167, 176, 180, 233, 236, 269, 336, 338, 339, 356, 361, 364, 365, 366, 370, 372, 374, 375, 422, 423, 434, 435, 447, 448], "judgment": 29, "docst": [29, 30], "after": [30, 38, 42, 176, 230, 299, 302, 303, 304, 306, 307, 308, 315, 316, 319, 403, 404, 474, 475, 476, 477, 478, 479], "three": [30, 42, 77, 88, 437], "func_nam": [30, 33], "latter": 30, "subtract": [30, 36, 176], "multipli": [30, 36, 176, 236, 247, 425, 426], "divid": [30, 36, 176, 201, 236, 289, 365, 375], "cover": [30, 33, 35, 42], "variant": 30, "independ": [30, 31, 43, 48, 336, 338, 353, 405, 406], "combinatorili": 30, "equal": [30, 37, 38, 77, 82, 84, 85, 96, 102, 176, 188, 190, 204, 205, 224, 236, 237, 239, 240, 336, 340, 347, 350, 365, 366, 368, 375, 380, 405, 409, 417, 418, 421, 422, 423, 424, 425, 428, 431, 432, 433], "maximum": [30, 43, 46, 48, 126, 150, 154, 158, 170, 176, 236, 243, 244, 256, 299, 306, 365, 366, 385, 397, 412, 413, 425, 427, 429, 437], "variat": [30, 32], "grid": [30, 32, 59, 77, 88], "across": [30, 32, 33, 37, 38, 41, 126, 135, 136, 147, 148, 150, 151, 152, 153, 154, 158, 168, 169, 236, 239, 240, 385, 391, 412, 414], "vari": [30, 32, 37, 45, 417, 418, 421], "valu": [30, 32, 33, 38, 39, 41, 43, 45, 48, 60, 77, 78, 82, 84, 85, 86, 87, 96, 102, 108, 109, 110, 126, 138, 145, 169, 170, 176, 177, 178, 180, 181, 183, 192, 196, 197, 200, 201, 202, 203, 207, 208, 218, 219, 220, 222, 223, 224, 226, 235, 236, 243, 244, 245, 250, 256, 257, 258, 263, 266, 270, 280, 281, 282, 283, 284, 285, 298, 299, 301, 302, 303, 306, 310, 314, 315, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 347, 350, 351, 352, 353, 354, 355, 359, 365, 366, 368, 372, 373, 380, 381, 382, 383, 385, 389, 390, 391, 392, 393, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 478], "simplest": 30, "small": [30, 33, 43, 47, 176, 220, 336, 347, 350, 361, 362, 403, 404, 472, 473], "dimens": [30, 43, 46, 66, 71, 77, 92, 93, 126, 157, 236, 251, 252, 253, 256, 262, 278, 297, 315, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 353, 354, 355, 357, 358, 359, 361, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 405, 411, 412, 413, 414, 415, 417, 418, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469], "unus": [30, 40, 74, 75], "highlight": 30, "extra": [30, 35, 36, 43, 299, 303], "versatil": 30, "excess": [30, 34, 45], "combin": [30, 32, 33, 36, 37, 48, 315, 321, 336, 338, 425, 426], "__add__": [30, 36, 37, 41, 45], "__sub__": [30, 36, 37, 41, 45], "__mul__": [30, 36, 37, 41, 45], "__truediv__": [30, 36, 37], "respect": [30, 36, 37, 38, 41, 77, 88, 176, 177, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 202, 203, 207, 208, 213, 214, 216, 217, 220, 222, 225, 232, 299, 301, 302, 303, 304, 306, 307, 308, 336, 351, 381, 382, 383, 384], "respecitv": 30, "meant": 30, "imaginari": 30, "std": [30, 405, 408, 425], "prod": [30, 38, 236, 252, 425], "var": [30, 43, 381, 382, 383, 425], "some_flag": 30, "bool": [30, 38, 48, 74, 75, 77, 84, 96, 102, 105, 108, 109, 110, 111, 115, 116, 117, 125, 126, 145, 146, 161, 170, 173, 176, 196, 202, 203, 204, 205, 206, 207, 208, 214, 215, 216, 222, 236, 237, 239, 240, 247, 250, 254, 256, 262, 264, 271, 272, 273, 274, 287, 297, 298, 299, 310, 336, 337, 345, 354, 359, 365, 375, 385, 386, 387, 391, 395, 396, 397, 405, 406, 412, 413, 414, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "another_flag": 30, "true": [30, 32, 33, 37, 38, 43, 45, 46, 47, 48, 66, 67, 74, 75, 77, 86, 96, 102, 105, 126, 176, 202, 204, 205, 206, 207, 215, 216, 236, 237, 239, 241, 242, 254, 256, 264, 265, 287, 293, 295, 298, 299, 302, 304, 305, 306, 307, 308, 310, 323, 331, 336, 337, 345, 354, 359, 361, 362, 363, 364, 365, 375, 381, 382, 383, 384, 385, 386, 395, 396, 398, 405, 406, 412, 413, 414, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "axi": [30, 33, 38, 41, 43, 45, 48, 59, 66, 71, 77, 86, 87, 126, 128, 131, 138, 151, 152, 153, 154, 155, 156, 157, 158, 170, 236, 247, 248, 257, 297, 315, 319, 336, 338, 340, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 405, 411, 412, 413, 414, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "54": [30, 176, 193, 425, 426], "jointli": 30, "x0": [30, 236, 239], "x1": [30, 41, 176, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 202, 203, 207, 208, 213, 214, 216, 217, 218, 219, 220, 222, 224, 225, 232, 236, 239, 323, 328, 336, 338, 344, 349, 353, 356, 358, 412, 416], "x2": [30, 41, 176, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 202, 203, 207, 208, 213, 214, 216, 217, 218, 219, 220, 222, 224, 225, 232, 323, 328, 336, 338, 344, 349, 353, 356, 358, 412, 416], "procedur": 30, "think": 30, "sens": [30, 45], "5574077": 30, "1850398": 30, "5463025": 30, "8422884": 30, "91601413": 30, "9647598": 30, "3738229": 30, "1597457": 30, "0963247": 30, "9955841": 30, "3278579": 30, "multi": [30, 42, 60, 323, 334, 336, 338, 425, 426, 437, 443, 458, 469], "seper": [30, 36, 236, 256], "pars": [30, 60], "satisfi": [30, 336, 360], "ignor": [30, 60, 77, 88, 385, 396, 474, 478], "far": [30, 39, 44, 45, 385, 386, 396], "asid": [30, 59], "irrelev": [30, 38], "increasingli": 30, "complex": [30, 46, 47, 48, 336, 341, 354], "shown": [30, 41, 43, 45, 77, 88, 176, 180, 233, 336, 339, 365, 370, 372, 374, 422, 423], "rule": [30, 32, 33, 36, 37, 38, 96, 102, 105, 118, 176, 185, 190, 195, 220, 225, 336, 337, 338, 349, 353], "count": [30, 46, 126, 162, 336, 358, 365, 370, 417, 418, 419, 434, 435, 436], "14254655": 30, "1578213": 30, "380515": 30, "11": [30, 176, 180, 365, 370, 372, 405, 407, 425, 426], "12": [30, 236, 261, 336, 356, 365, 370, 372, 374, 405, 407, 425, 426], "shift": [30, 41, 176, 188, 190, 365, 374], "sequenc": [30, 59, 126, 135, 136, 236, 240, 275, 315, 321, 365, 375, 377, 458, 467, 472, 473, 480, 481], "15": [30, 336, 356, 365, 372, 374, 405, 407, 425, 426], "bit": [30, 33, 36, 45, 96, 112, 113, 114, 176, 187, 188, 190, 315, 317, 322, 425, 430, 432], "trivial": 30, "By": [30, 33, 47, 48, 236, 247, 248, 336, 358, 365, 372, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "demonstr": [30, 45], "non": [30, 37, 38, 43, 74, 75, 96, 102, 115, 176, 215, 216, 336, 339, 347, 354, 356, 358, 359, 412, 413, 414, 415, 425, 427, 428, 429, 430, 433, 434, 435, 436, 470, 471, 474, 478], "exlud": 30, "float32": [30, 38, 96, 100, 101, 315, 318], "z": [30, 43, 45, 126, 162, 176, 180, 236, 239, 336, 338, 361, 363, 425, 426], "dictat": [30, 40, 41], "13": [30, 323, 330, 365, 372, 405, 407, 425, 426], "unit": [31, 32, 66, 67, 68, 69, 126], "test_array_api": [31, 32], "thoroughli": [31, 32], "On": [32, 44, 48], "map": [32, 33, 37, 41, 46, 59, 60, 126, 135, 385, 392, 393, 397, 398, 437, 458, 469], "collect": [32, 59, 66, 74, 126, 236, 299, 315, 323, 361, 385, 398, 403, 405, 444, 458, 472, 474], "test_ivi": 32, "properti": [32, 33, 37, 45, 46, 47, 126, 138, 470, 471, 474, 475, 476, 477, 479], "pytest": 32, "fixtur": 32, "ones": [32, 43, 45, 46, 77, 82, 91, 236, 278, 315, 321, 437], "commit": 32, "consum": [32, 41, 126], "300": 32, "ab": [32, 176, 224, 336, 359, 437], "hit": [32, 43], "permit": [32, 36, 41], "action": 32, "eleg": 32, "intellig": 32, "sampl": [32, 315, 316, 319, 323, 331, 405, 406, 408, 409, 425, 431, 433, 458, 466], "rang": [32, 46, 47, 48, 77, 78, 86, 87, 425, 430, 432, 437], "previou": [32, 41, 48, 299, 302, 306], "cach": [32, 33, 126, 144, 236, 242], "select": [32, 43, 45, 48], "unexplor": 32, "known": 32, "repeatedli": [32, 385, 394], "upload": 32, "artifact": 32, "ci": 32, "parametr": 32, "strategi": 32, "statement": [32, 60], "plai": [32, 48], "todo": 32, "helper": [32, 46], "arbitrari": [32, 33, 37, 41, 47, 60, 77, 88, 96, 103, 118, 126, 155, 156, 158], "verifi": [32, 38, 39, 45, 437, 443], "truth": [32, 176, 196, 202, 203, 207, 208, 222], "opt": [32, 45], "defer": [32, 33, 36, 37, 38, 39], "well": [32, 40, 47, 48, 59, 236, 264, 336, 353], "suffic": [32, 35], "catch": [32, 236, 250], "systemat": 32, "compar": [32, 46, 236, 237, 239, 240, 417, 418, 421, 422, 423, 424], "safeguard": 32, "inabl": 32, "leav": [32, 33, 35, 37, 38, 40, 41, 46, 47, 365, 377, 385, 386, 387, 395, 396, 397], "fact": [32, 46], "num_gpu": [32, 39, 126], "four": [33, 38, 41, 46], "categor": [33, 39], "mutual": [33, 37], "exclus": [33, 37, 48, 77, 78, 236, 247, 271, 272, 274, 299, 305, 405, 407], "consitut": 33, "venn": 33, "diagram": 33, "lowest": [33, 60, 385, 397, 405, 407], "light": [33, 60], "wherea": [33, 36, 38, 39, 41, 48], "hand": [33, 60], "themselv": [33, 38, 39, 47, 385, 386], "cross_entropi": [33, 361, 364], "pred": [33, 361, 362, 363, 364], "epsilon": [33, 47, 299, 301, 302, 306, 336, 347, 350, 361, 362, 363, 364, 403, 404, 472, 473, 474, 475, 476], "1e": [33, 47, 48, 236, 261, 299, 301, 302, 306, 336, 354, 361, 362, 363, 364, 437, 474, 475, 476, 477, 479], "clip": [33, 43, 46, 48, 176, 218, 219, 236, 243, 244, 365, 437], "log_pr": 33, "log": [33, 43, 46, 77, 87, 176, 211, 213, 336, 352, 361, 362, 437], "neg": [33, 66, 68, 77, 78, 82, 176, 204, 205, 220, 224, 225, 336, 354, 358, 359, 365, 370, 374, 434, 435, 436], "sum": [33, 38, 43, 126, 155, 156, 157, 158, 170, 176, 180, 213, 236, 248, 252, 281, 282, 336, 354, 357, 359, 425, 426, 431], "explicitli": [33, 36, 40, 43, 60, 336, 341, 458, 467, 469, 470, 471], "set_framework": [33, 43, 45, 46, 48, 437], "array_arg": 33, "typic": 33, "though": [33, 46, 60], "whatsoev": 33, "standlon": 33, "commonli": [33, 425, 431, 433], "outsid": [33, 39, 43, 45, 48, 365, 366, 377], "cache_fn": [33, 236], "stable_divid": [33, 236], "denomin": [33, 60, 236, 255, 261, 284, 289, 290, 403, 404, 472, 473], "divis": [33, 176, 190, 195, 201, 225, 236, 255, 261, 284, 289, 290, 299, 301, 302, 306, 474, 475, 476], "leaf": [33, 46, 385, 386, 395, 396], "piec": [33, 35, 36, 43], "deal": [33, 60], "batch": [33, 37, 46, 126, 168, 169, 236, 256, 315, 320, 323, 332, 336, 359, 381, 382, 383, 384, 403, 404, 472, 473], "concurr": 33, "weight": [33, 37, 47, 48, 299, 301, 302, 304, 306, 307, 308, 323, 332, 333, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 474, 476, 477], "modif": 33, "_wrap_funct": [33, 35], "appear": [33, 38, 39, 40, 45, 365, 369], "non_wrapped_funct": [33, 38, 39, 40], "dure": [33, 38, 39, 40, 60, 74, 75, 236, 296, 299, 301, 302, 306, 336, 344, 381, 382, 383, 384, 425, 431, 433, 470, 471, 474, 475, 476, 478], "static": [33, 60, 74, 75], "group": [33, 37, 315, 321], "briefli": [33, 46], "can_cast": [33, 38, 96], "cast": [33, 38, 96, 102, 105, 315, 317, 322, 365, 367, 425, 430, 432, 437], "set_default_dtyp": [33, 38, 96], "default_dtyp": [33, 38, 96], "get_all_arrays_on_dev": [33, 39, 126], "nested_map": [33, 385], "index_nest": [33, 385], "quit": [33, 35, 36], "store": [34, 36, 37, 43, 45, 46, 47, 236, 256, 299, 313, 336, 357, 365, 375, 470, 471], "__dict__": [34, 43, 45], "ivy_original_dict": [34, 43], "string": [34, 38, 39, 43, 46, 96, 100, 101, 111, 115, 125, 126, 142, 143, 144, 159, 165, 171, 172, 175, 236, 249], "unmodifi": [34, 38], "loop": [34, 60, 381, 382, 383, 384], "solv": [34, 44, 59, 336], "achiev": [35, 46, 48], "_wrap_or_unwrap_funct": 35, "_function_wrap": 35, "logic": [35, 36, 38, 39, 45, 176, 214, 215, 216, 434, 435, 436, 437], "independenli": 35, "topic": [35, 45], "tf": [36, 38, 39, 40, 41, 43, 48, 60, 437], "empti": [36, 38, 39, 77, 78, 425, 431, 432, 434, 435, 436], "overwritten": 36, "wrapper": [36, 40, 41, 45], "self": [36, 43, 45, 46, 47, 48, 437, 474, 478], "_data": [36, 45], "organiz": [36, 37], "inherit": [36, 37, 45], "arraywithelementwis": 36, "intern": [36, 37, 39, 126, 299, 313, 385, 386, 395, 396, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 480, 481], "underpin": [36, 37, 43], "programmat": [36, 37], "backup": [36, 37], "accident": [36, 37], "readabl": [36, 37, 41, 45, 46], "absent": [36, 37], "perk": [36, 37], "auto": [36, 37, 46], "__setitem__": [36, 37, 45], "sin": [36, 43, 176, 236, 256, 437], "throw": [36, 45], "agnost": [36, 41, 43, 45, 48, 60, 437], "imposs": 36, "chain": [36, 37, 47, 48, 60, 381, 382, 383, 385, 398, 480, 481], "coupl": [36, 45, 47], "anywai": 36, "secondli": [36, 38], "dicat": [36, 41], "five": [37, 46], "all_tru": [37, 46], "evalu": [37, 176, 198, 199, 209, 210, 211, 212, 221, 227, 231, 385, 386, 395, 396, 434, 435, 436], "boolean": [37, 77, 84, 96, 102, 115, 125, 126, 161, 173, 176, 186, 187, 189, 191, 214, 215, 216, 217, 236, 237, 239, 240, 264, 265, 266, 270, 271, 272, 273, 274, 291, 298, 299, 305, 381, 382, 383, 385, 395, 425, 429], "to_iter": 37, "travers": [37, 43, 45, 385, 397], "containerbas": 37, "decis": [37, 43, 45], "bind": 37, "multi_map": 37, "diff": [37, 46], "displai": [37, 46], "common_key_chain": 37, "recap": [37, 47], "arbitrarili": [37, 46], "multi_map_in_static_method": 37, "static_add": 37, "static_tan": 37, "static_rol": 37, "roll": [37, 41, 365], "containerwithelementwis": 37, "__repr__": 37, "control": [37, 38, 40, 45, 46, 59], "__getattr__": 37, "kei": [37, 46, 126, 138, 236, 245, 323, 334, 335, 381, 382, 383, 385, 388, 394, 398, 447, 448, 458, 469, 474, 478], "underli": [37, 176, 186, 189, 191, 217], "queri": [37, 38, 45, 126, 159, 169, 323, 334, 335, 458, 469], "attribut": [37, 38, 44, 45, 46, 47, 96, 113, 114], "__setattr__": 37, "__getitem__": 37, "__contains__": 37, "__getstate__": 37, "__setstate__": 37, "pickl": [37, 46], "unpickl": 37, "static_subtract": 37, "static_multipli": 37, "static_divid": 37, "int8": 38, "int16": [38, 425, 430, 432], "int32": [38, 425, 426, 430, 432], "int64": [38, 176, 190, 425, 430, 432], "uint8": [38, 315, 317, 322], "uint16": [38, 425, 430, 432], "uint32": [38, 425, 430, 432], "uint64": [38, 425, 430, 432], "bfloat16": 38, "float16": 38, "float64": [38, 96, 102], "deriv": [38, 39, 45, 47, 77, 81, 85, 91, 95, 299, 301, 302, 304, 306, 307, 308, 385, 387, 397, 470, 474, 478, 480], "constructor": [38, 39, 45, 236, 238, 480, 481], "all_dtyp": 38, "all_numeric_dtyp": 38, "all_int_dtyp": 38, "all_float_dtyp": 38, "fall": [38, 42, 437, 470, 471, 474, 478], "replic": 38, "valid": [38, 43, 96, 106, 323, 324, 325, 326, 327, 328, 329, 330, 365, 377, 434, 435, 436, 458, 459, 460, 461, 462, 463, 464, 465], "invalid": [38, 336, 358, 434, 435, 436], "thirdli": 38, "native_float32": 38, "importantli": [38, 45, 48, 59], "unsupport": 38, "longer": [38, 40], "varieti": [38, 39], "astyp": [38, 40, 96], "broadcast_to": [38, 96], "result_typ": [38, 96], "conveni": [38, 39, 41, 44, 46, 47], "arguabl": [38, 39], "compound": 38, "reduct": [38, 45, 236, 252, 281, 282, 434, 435, 436, 437], "overflow": [38, 176, 180, 425, 432], "_function_w_arrays_dtype_n_dev_handl": [38, 39], "non_dtype_wrapped_funct": [38, 39], "applic": [38, 39, 47, 323, 334, 335, 385, 391, 397], "arr": [38, 39], "scalar": [38, 43, 48, 60, 77, 85, 236, 278, 295, 298, 336, 359], "default_int_dtyp": [38, 96], "default_float_dtyp": [38, 96], "settabl": [38, 39], "set_default_int_dtyp": [38, 96], "set_default_float_dtyp": [38, 96], "arang": [38, 77, 86, 87, 315, 318, 322, 425, 426, 437], "dim": [38, 236, 278, 315, 316, 321, 336, 356, 458, 469], "integ": [38, 45, 77, 78, 84, 96, 114, 117, 118, 176, 177, 186, 187, 188, 189, 190, 191, 192, 200, 201, 217, 224, 225, 226, 235, 336, 346, 358, 359, 365, 375, 405, 407, 410, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "bear": 38, "popul": [38, 39, 43, 405, 406, 425, 431, 433], "keepdim": [38, 236, 297, 336, 345, 359, 412, 413, 414, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "jaxarrai": [38, 39, 40, 41], "jnp": [38, 39, 40, 41, 48, 437], "mx": [38, 39, 40, 437], "nd": [38, 39, 40, 43, 48, 437], "One": [38, 43, 45, 46, 236, 252, 365, 373, 405, 407], "deleg": 38, "fill_valu": [38, 77, 84, 85], "shape_to_tupl": [38, 236], "item": [38, 43, 45, 46, 48, 96, 108, 126, 135, 136, 138, 145, 147, 149, 151, 153, 157, 236, 245, 263, 289, 290, 385, 390, 391, 392, 393, 397, 401, 402, 437, 470, 471], "as_n": [38, 96, 108, 109, 110, 111, 126, 145, 146], "cpu": [39, 60, 77, 86, 87, 126, 146, 163, 165, 171, 172, 175, 236, 257, 258, 278, 281, 282, 405, 406, 407, 409, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "gpu": [39, 45, 60, 126, 161, 164, 405, 407], "idx": [39, 45], "tpu": [39, 126, 173], "aliv": [39, 126, 160, 162, 166, 236, 259, 277, 279], "total_mem_on_dev": [39, 126], "amount": [39, 126, 172, 361, 363, 364], "memori": [39, 40, 58, 60, 126, 144, 165, 170, 172, 175, 323, 333, 425, 426, 437], "dev_util": [39, 126], "num_cpu_cor": [39, 126], "default_devic": [39, 43, 126], "random_uniform": [39, 47, 405, 437], "dual": 39, "thrown": [39, 60], "unless": [39, 60, 176, 220, 236, 278], "distribut": [39, 60, 126, 147, 151, 152, 153, 154, 323, 331, 361, 363, 364, 405, 406, 407, 408, 409, 458, 466, 470, 471], "non_dev_wrapped_funct": 39, "omit": [39, 41, 417, 418, 421], "rare": [39, 60], "set_default_devic": [39, 126], "overwrit": [40, 43, 126, 170], "program": 40, "prevent": [40, 45, 299, 301, 302, 306, 425, 432, 474, 475, 476], "old": 40, "strictli": 40, "inplace_upd": [40, 236, 447, 448], "ration": 40, "technic": [40, 41, 60], "speak": 40, "subtli": 40, "val": [40, 45, 236, 267, 268, 269, 283, 284], "x_nativ": 40, "val_n": 40, "args_to_n": [40, 45], "is_ivy_arrai": [40, 45, 236], "variabl": [40, 41, 46, 47, 48, 60, 236, 241, 267, 268, 269, 270, 271, 272, 274, 291, 299, 302, 303, 304, 305, 306, 307, 308, 310, 313, 323, 334, 336, 353, 381, 382, 383, 384, 403, 404, 437, 447, 448, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "is_vari": [40, 299], "assign": [40, 45], "irrespect": [40, 45, 96, 102], "inclus": [40, 77, 78, 405, 407], "ommit": 40, "unspecifi": [40, 176, 224, 225, 336, 341, 365, 377], "predominatli": 40, "_function_w_arrays_n_out_handl": 40, "math": [40, 48, 437], "presenc": 40, "altern": [40, 46], "_wrap_fn": 40, "reshap": [40, 43, 45, 48, 315, 318, 322, 365, 437], "asarrai": [40, 77, 323, 324], "equival": [40, 46, 48, 77, 78, 176, 190, 215, 216, 225, 336, 347, 350, 353, 359], "input_arrai": 40, "adress": 41, "revisit": [41, 48], "dedic": [41, 45, 47, 299, 313, 447, 448], "variou": [41, 59], "posit": [41, 46, 59, 76, 77, 82, 96, 113, 126, 150, 154, 158, 176, 177, 204, 205, 220, 225, 236, 256, 336, 337, 365, 369, 374, 405, 410, 412, 415, 434, 435, 436, 447, 448], "__div__": 41, "addition": 41, "detect": [41, 46, 47, 385, 386, 396], "futher": 41, "brittl": 41, "intend": [41, 425, 432], "freeli": 41, "inde": [41, 60], "flexibl": 41, "original_typ": 41, "cumbersom": 41, "gain": [42, 47, 449], "sound": 42, "higher": [42, 43, 48, 60, 299, 302, 304, 306, 307, 308], "overview": [42, 59], "handler": [42, 44, 48, 437], "transpil": [42, 44, 437, 443], "fledg": [43, 44], "label": [43, 44, 48, 361, 362, 363, 364], "cuda": [43, 46, 60, 77, 86, 87, 126, 135, 142, 236, 257, 258, 278, 281, 282, 405, 406, 407, 409, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481], "syntact": [43, 48], "align": [43, 45, 437, 443], "x_min": [43, 48, 365, 366], "x_max": [43, 48, 365, 366], "clip_by_valu": [43, 48], "clamp": [43, 48], "mayb": [43, 45, 425, 426], "behavior": [43, 60, 176, 224, 225, 417, 418, 421], "fit": [43, 315, 321, 365, 372], "logspac": [43, 77], "construct": [43, 44, 47, 48, 365, 379, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "stop": [43, 60, 77, 78, 86, 87, 126, 141, 170, 299, 302, 304, 306, 307, 308, 310, 381, 382, 383, 384, 474, 475, 476, 477, 478, 479], "num": [43, 77, 86, 87, 315, 321], "power_seq": 43, "linspac": [43, 77, 78, 437], "okai": 43, "bound": 43, "resid": [43, 47], "interv": [43, 48, 77, 78, 86, 87, 336, 358, 365, 366, 377, 405, 407, 409, 434, 435, 436], "edg": [43, 48, 365, 366, 368, 380, 437], "wise": [43, 48, 66, 67, 68, 69, 70, 71, 72, 73, 176, 177, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 195, 196, 197, 201, 202, 203, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 232, 236, 255, 365, 366, 425, 426], "larger": [43, 48, 96, 113, 365, 366, 374, 425, 431, 433], "param": [43, 48, 236, 257, 258], "minimum": [43, 48, 126, 176, 177, 236, 260, 261, 283, 284, 289, 290, 365, 366, 412, 414, 425, 427, 429, 437], "ml_framework": [43, 48, 77, 78], "current_framework": [43, 48], "furthermor": 43, "implicit": 43, "concaten": [43, 46, 236, 256, 365, 367, 437], "framework_handl": 43, "face": 43, "verbos": [43, 437, 484], "cprint": [43, 483], "framework_stack": 43, "stack": [43, 77, 92, 93, 315, 321, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 354, 355, 357, 365, 385, 386, 395, 396, 437, 458, 467], "_determine_framework_from_arg": 43, "valueerror": [43, 365, 376], "get_framework": 43, "neither": [43, 176, 180, 220], "callabl": [43, 74, 75, 126, 170, 236, 242, 250, 252, 381, 382, 383, 384, 385, 391, 395, 396, 397], "slightli": [43, 47, 425, 426], "illustr": [43, 59], "un": [43, 96, 115], "v": [43, 46, 47, 48, 323, 335, 437, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 478, 480, 481], "constitut": [43, 425, 431, 433], "lstm_updat": [43, 323], "nn": [43, 48, 77, 88, 437], "init_h": [43, 323, 333], "init_c": [43, 323, 333], "kernel": [43, 60, 323, 333], "recurrent_kernel": [43, 323, 333], "bia": [43, 47, 323, 332, 333, 458, 459, 460, 461, 462, 463, 464, 465, 468], "recurrent_bia": [43, 323, 333], "x_shape": 43, "batch_shap": [43, 45, 48, 236, 278, 315, 316, 317, 318, 320, 321, 322, 323, 333, 334, 335, 336, 360, 405, 406, 458, 467], "timestep": [43, 323, 333, 458, 467], "input_channel": [43, 47, 458, 459, 460, 461, 462, 463, 464, 467, 468], "x_flat": 43, "wi": 43, "wi_x": 43, "wii_x": 43, "wif_x": 43, "wig_x": 43, "wio_x": 43, "recurr": [43, 323, 333], "wh": 43, "lstm": [43, 323, 333, 458], "ht": 43, "ct": 43, "hts_list": 43, "unrol": [43, 46, 323, 333], "wii_xt": 43, "wif_xt": 43, "wig_xt": 43, "wio_xt": 43, "zip": 43, "unstack": [43, 46, 236, 437], "htm1": 43, "ctm1": 43, "wh_htm1": 43, "whi_htm1": 43, "whf_htm1": 43, "whg_htm1": 43, "who_htm1": 43, "num_or_size_split": [43, 365, 375], "sigmoid": [43, 46, 47, 66, 437], "ft": 43, "gt": 43, "tanh": [43, 66, 176, 437], "ot": 43, "expand_dim": [43, 46, 365, 437], "offici": 43, "reliabl": 43, "minim": 43, "sacrific": 43, "hear": 43, "virtu": 43, "pure_ivi": 43, "reduce_mean": [43, 46, 47, 48, 437], "reduce_sum": [43, 437], "reduce_var": 43, "compile_graph": [43, 48], "pure_torch": 43, "cat": [43, 48], "backbon": [43, 46], "_layer": 43, "linear": [43, 46, 47, 48, 66, 67, 68, 69, 236, 256, 315, 319, 323, 331, 353, 437, 458, 459, 460, 461, 462, 463, 464, 465], "super": [43, 46, 47, 48], "_forward": [43, 46, 47, 437], "clean": [43, 44, 46], "w": [43, 46, 47, 299, 301, 302, 304, 306, 307, 308, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330], "random_unifrom": 43, "unclean": 43, "wx": 43, "temp": 43, "trace": [43, 60, 236, 271, 272, 274, 336], "torchscript": 43, "lambda": [43, 46, 474, 477, 479], "fn": [43, 45, 61, 62, 63, 64, 126, 135, 136, 236, 296, 385, 386, 391, 392, 393, 395, 396, 397, 440, 442], "example_input": [43, 74, 75], "static_argnum": [43, 74, 75], "static_argnam": [43, 74, 75], "jit": [43, 60], "maxim": 43, "low": [43, 405, 407, 409], "explor": [44, 48, 59], "frontend": 44, "treat": [44, 48, 74, 75], "abil": [44, 60], "primit": [44, 60], "experi": [44, 46, 60], "describ": [44, 48, 425, 426, 430, 431, 432], "hierarch": [44, 46, 47], "trainabl": [44, 46, 47, 299, 305, 447, 448, 470, 471, 480], "built": [44, 77, 78, 126, 458, 469, 470, 471], "straight": 45, "arraywithdevic": 45, "arraywithgener": 45, "arraywithgradi": 45, "arraywithimag": 45, "arraywithlinalg": 45, "arraywithlog": 45, "arraywithmath": 45, "arraywithmeta": 45, "arraywithrandom": 45, "arraywithreduct": 45, "assert": [45, 46, 236, 241], "is_native_arrai": [45, 236], "_shape": 45, "_size": 45, "functool": 45, "reduc": [45, 126, 170, 236, 252, 336, 351, 412, 413, 414, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "mul": 45, "len": [45, 48, 77, 88], "_dtype": 45, "_devic": 45, "_dev_str": 45, "as_ivy_dev": [45, 126], "_pre_repr": 45, "_post_repr": 45, "ndim": [45, 336, 351, 354], "size": [45, 46, 77, 86, 87, 126, 168, 169, 170, 236, 281, 315, 320, 336, 340, 345, 349, 351, 354, 358, 365, 369, 374, 375, 376, 405, 406, 408, 409, 412, 413, 415, 434, 435, 436, 458, 459, 460], "matrix_transpos": [45, 336, 356], "mt": 45, "answer": [45, 60], "perhap": [45, 46, 47, 60], "consol": 45, "typeerror": 45, "immut": 45, "pure": [45, 48, 60], "behav": 45, "claim": 45, "truli": 45, "_native_wrapp": 45, "attributeerror": 45, "scatter_nd": [45, 236, 437], "genuin": 45, "some_method": 45, "similarli": [45, 77, 88], "rewritten": 45, "__pow__": 45, "strang": 45, "power": [45, 46, 47, 176, 190, 198, 224, 236, 260, 283, 290, 336, 346, 449], "enforc": 45, "notic": 45, "inv": [45, 336, 437], "invers": [45, 59, 176, 178, 179, 181, 182, 183, 184, 185, 336, 343, 350], "_wrap_method": 45, "func_wrapp": [45, 61, 62, 63, 64], "hasattr": 45, "__name__": 45, "non_wrapped_method": 45, "_method_wrap": 45, "native_arg": 45, "native_kwarg": 45, "to_ivi": 45, "inner_fn": 45, "whist": 45, "down": 45, "unwrap": 45, "inner": [45, 336, 341, 344, 381, 382, 383, 384, 425, 426], "transit": 45, "needlessli": 45, "randn": 45, "_unwrap_method": 45, "method_wrap": 45, "whenev": [45, 46], "parent": 45, "compartment": 45, "public": [45, 236, 245], "abc": [45, 126, 135, 141, 470, 471, 474, 478], "newshap": [45, 365, 373], "new_shap": 45, "transpos": [45, 48, 126, 157, 323, 325, 327, 329, 336, 348, 350, 425, 426, 437, 458, 460, 462, 464], "flip": [45, 46, 48, 176, 187, 365, 437], "tidi": 45, "20": [45, 176, 198, 336, 356, 405, 407, 425, 426], "shorter": 45, "crystal": 45, "41": [45, 336, 337, 425, 432], "builtin": [45, 47], "enough": [45, 46, 47], "ton": 46, "ado": [46, 47], "dictionari": [46, 60], "incred": [46, 60], "hash": 46, "soup": 46, "walk": [46, 47], "dct": 46, "cnt": 46, "combo": [46, 437, 443], "intuit": [46, 47], "hold": [46, 236, 281, 282], "1000": 46, "uda": 46, "3333": 46, "6667": 46, "178": 46, "grad": [46, 47, 48, 437, 474, 478], "lr": [46, 47, 299, 302, 304, 306, 307, 308, 474, 475, 476, 477, 478, 479], "new_weight": 46, "0600": 46, "3100": 46, "2400": 46, "6900": 46, "delimit": 46, "autocomplet": 46, "tab": [46, 437], "midwai": 46, "agent": 46, "total_spe": 46, "total_height": 46, "total_width": 46, "ag": 46, "tot": 46, "total_": 46, "total_h": 46, "disk": [46, 315, 317], "hdf5": [46, 470, 471], "to_disk_as_hdf5": 46, "from_disk_as_hdf5": 46, "same_arrai": 46, "to_disk_as_pickl": 46, "from_disk_as_pickl": 46, "config": [46, 385, 398], "batch_siz": [46, 315, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 405, 406], "16": [46, 176, 233, 336, 356, 405, 407, 425, 426], "dir": 46, "dataset": [46, 58, 437], "dropout": [46, 323, 458, 469], "adam": [46, 47, 48, 299, 301, 302, 306, 437, 474, 476], "json": 46, "to_disk_as_json": 46, "from_disk_as_json": 46, "debug": 46, "cnt0": 46, "cnt1": 46, "deep_copi": 46, "diff_0": 46, "diff_1": 46, "config0": 46, "config1": 46, "Not": [46, 47, 76], "hierarchi": 46, "screen": 46, "decod": 46, "l0": 46, "l1": [46, 336, 359], "depth": [46, 47, 48, 59, 126, 150, 154, 158, 236, 263, 278, 385, 397, 470, 471], "clearer": 46, "truncat": 46, "__": 46, "flatten_key_chain": [46, 470, 471], "above_height": 46, "decoder__l0": 46, "decoder__l1": 46, "encoder__l0": 46, "encoder__l1": 46, "height": [46, 315, 321], "below_depth": 46, "l0__b": 46, "l0__w": 46, "l1__b": 46, "l1__w": 46, "with_print_limit": 46, "printabl": 46, "with_key_length_limit": 46, "length": [46, 77, 78, 88, 336, 354, 355, 365, 373, 425, 426], "with_print_ind": 46, "indent": 46, "obviou": 46, "foresight": 46, "untidili": 46, "update_ag": 46, "normalize_img": 46, "img": 46, "img_max": 46, "reduce_max": [46, 437], "img_min": 46, "reduce_min": [46, 437], "img_rang": 46, "agent_posit": 46, "agent_veloc": 46, "agent_cam_front_rgb": 46, "agent_cam_front_depth": 46, "agent_cam_rear_rgb": 46, "agent_cam_rear_depth": 46, "agent_cam_lidar": 46, "normal": [46, 365, 377, 403, 404, 405, 408, 472, 473], "cleaner": 46, "camera": 46, "front_rgb": 46, "front_depth": 46, "rear_rgb": 46, "rear_depth": 46, "lidar": 46, "rgb": 46, "rear": 46, "veloc": 46, "cam": 46, "cam_max": 46, "cam_min": 46, "cam_rang": 46, "Of": 46, "ideal": 46, "perman": 46, "afterward": 46, "thread": 46, "incorpor": 46, "multiprocess": [46, 60, 126, 135, 236], "queue": [46, 126, 135, 136, 236, 280, 285], "pretti": 46, "straightforward": 46, "dataload": [46, 58, 437], "_cnt": 46, "img_": 46, "_dataset_s": 46, "_batch_siz": 46, "_count": [46, 47], "__next__": 46, "filenam": 46, "img_fnam": 46, "list_stack": 46, "fname": 46, "loaded_img": 46, "cv2": 46, "imread": 46, "from_numpi": 46, "loader": [46, 60], "32": [46, 315, 322, 425, 426], "batch_slic": 46, "model": [46, 47, 437], "mymodel": [46, 437], "linear0": [46, 47, 437], "64": [46, 47, 323, 330, 425, 426, 437, 458, 469], "linear1": [46, 47, 437], "relu": [46, 47, 66, 67, 68, 437], "x_in": [46, 47, 48, 437], "001": [46, 47], "loss_fn": [46, 47, 48, 437], "execute_with_gradi": [46, 47, 48, 60, 299, 437], "to_numpi": [46, 236, 437], "0145": 46, "grad_fn": 46, "addbackward0": 46, "_create_vari": 47, "output_channel": [47, 458, 459, 460, 461, 462, 463, 464, 467, 468], "with_bia": [47, 458, 468], "_input_channel": 47, "_output_channel": 47, "_w_shape": 47, "_b_shape": 47, "_with_bia": 47, "8979": 47, "3198": 47, "0196": 47, "3126": 47, "3717": 47, "9687": 47, "6958": 47, "5122": 47, "3902": 47, "8800": 47, "5613": 47, "1982": 47, "nightmar": 47, "overcom": 47, "fc": 47, "9563": 47, "direct": [47, 48, 59, 422, 424], "impact": 47, "v0": 47, "v1": 47, "6440": 47, "key0": 47, "key1": 47, "1823": 47, "8075": 47, "linear3": 47, "v2": 47, "2346": 47, "counter": 47, "hidden": [47, 323, 333, 458, 467], "fed": [47, 126, 170], "sequenti": 47, "1300": 47, "decoupl": 47, "scheme": 47, "weight_initi": [47, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468], "glorotuniform": [47, 449, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468], "bias_initi": [47, 458, 459, 460, 461, 462, 463, 464, 465, 468], "_w_init": 47, "_b_init": 47, "create_vari": [47, 449], "var_shap": [47, 449], "fan_out": [47, 449], "fan_in": [47, 449], "uniform": [47, 405, 406, 407, 409, 449, 451, 452, 455, 456], "fan_mod": [47, 449], "fan_sum": 47, "slight": 47, "misnom": 47, "belong": 47, "saw": 47, "vanilla": [47, 381, 383], "descent": [47, 299, 304, 474, 479], "lar": [47, 299, 306, 307, 474], "lamb": [47, 299, 306, 474], "beta1": [47, 299, 301, 302, 306, 474, 475, 476], "beta2": [47, 299, 301, 302, 306, 474, 475, 476], "999": [47, 299, 301, 302, 306, 474, 475, 476], "07": [47, 299, 301, 302, 306, 361, 362, 363, 364, 474, 475, 476], "stop_gradi": [47, 126, 170, 299, 302, 304, 306, 307, 308, 381, 382, 383, 384, 437, 474, 475, 476, 477, 478, 479], "compile_on_next_step": [47, 470, 471, 474, 475, 476, 477, 478, 479], "_beta1": 47, "_beta2": 47, "_epsilon": 47, "_mw": 47, "_vw": 47, "_first_pass": 47, "_should_compil": 47, "_step": [47, 474, 478], "new_v": 47, "adam_upd": [47, 299], "_lr": 47, "isinst": [47, 48, 236, 293], "_inplac": 47, "_stop_gradi": 47, "set_stat": [47, 474, 475, 476, 477, 478, 479], "mw": [47, 299, 301, 302], "vw": [47, 299, 301, 302], "revers": [48, 60, 236, 250, 365, 370], "pre": [48, 60, 126], "captur": 48, "one_hot": [48, 236, 437], "sparse_funct": 48, "num_class": [48, 405, 406], "ey": [48, 77, 323, 330], "cumprod": [48, 236], "ones_lik": [48, 77, 437], "num_dim": 48, "new_axi": 48, "constitu": 48, "_linear": 48, "forward": [48, 59, 60, 470, 471, 474, 478], "to_backend": 48, "jax_graph": 48, "learnabl": [48, 403, 404, 472, 473], "to_ivy_modul": [48, 447], "thinli": 48, "preserv": [48, 60, 299, 310, 365, 370], "to_haiku_modul": 48, "hk": 48, "loss_fn_t": 48, "transform": [48, 59, 323, 331, 332], "without_apply_rng": 48, "rng": 48, "prngkei": 48, "42": [48, 405, 410, 425, 426], "init": 48, "update_rul": 48, "01": 48, "tree_multimap": 48, "mechan": [58, 60, 437], "vision": [58, 437], "robot": [58, 437], "focus": 59, "field": [59, 336, 341, 351, 354, 417, 418, 419], "perfect": 59, "showcas": 59, "3d": [59, 458, 463, 464], "differenti": 59, "demo": [59, 437], "orient": 59, "pose": 59, "represent": [59, 76, 96, 100, 101, 107, 113, 114, 126, 142, 143, 176, 177, 180, 186, 189, 191, 217, 220, 236, 288, 293], "largest": [59, 96, 113, 114, 336, 354], "euler": [59, 76], "quaternion": 59, "rotat": 59, "matric": [59, 77, 88, 92, 93, 323, 332, 336, 337, 339, 340, 341, 342, 343, 346, 347, 348, 350, 351, 353, 354, 355, 357], "vector": [59, 77, 88, 236, 244, 323, 332, 336, 338, 341, 344, 349, 354, 355, 358, 359, 360, 458, 468], "angl": [59, 176, 184, 194, 229], "ivy_mech": 59, "target_facing_rotation_matrix": 59, "polar_to_cartesian_coord": 59, "predominantli": 59, "ordin": [59, 336, 353], "warp": [59, 315, 316], "optic": 59, "flow": 59, "voxel": 59, "cloud": 59, "ivy_vis": 59, "coords_to_voxel_grid": 59, "render_pixel_coord": 59, "neural": [59, 323, 437, 444, 458], "radianc": 59, "nerf": 59, "trajectori": 59, "motion": 59, "plan": [59, 437], "mobil": 59, "ivy_robot": 59, "sample_spline_path": 59, "rigidmobil": 59, "sample_bodi": 59, "drone": 59, "sample_link": 59, "openai": 59, "swimmer": 59, "cumul": [59, 236, 247, 248], "reward": 59, "supervis": 59, "reinforc": 59, "door": [59, 60], "intersect": 59, "cartpol": 59, "mountain_car": 59, "pendulum": 59, "reacher": 59, "polici": 59, "condit": [59, 74, 75, 385, 395, 396, 412, 416], "learnt": 59, "ture": 59, "ntm": 59, "egospher": 59, "spatial": 59, "esm": 59, "ivy_memori": 59, "egocentr": 59, "room": 59, "inspir": 59, "doubt": 60, "grate": 60, "put": 60, "probe": 60, "q": [60, 323, 335, 336, 341, 351], "xla": 60, "buffer": 60, "certain": [60, 77, 78, 86, 87], "kind": [60, 96, 113, 114, 176, 224, 425, 430, 432], "gold": 60, "dex": 60, "phase": 60, "lax": 60, "scan": 60, "tricki": 60, "predictor": 60, "tight": 60, "driver": 60, "schedul": 60, "algorithm": [60, 323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "eager": 60, "dispatch": 60, "Will": 60, "ast": 60, "dynamic": 60, "cond": 60, "jacobian": 60, "checkpoint": 60, "autodiff": 60, "shine": 60, "merci": 60, "superset": 60, "autograd": 60, "cluster": 60, "compet": 60, "paradigm": 60, "parallelis": [60, 126, 135, 136], "spmd": 60, "mixtur": 60, "expert": 60, "sophist": 60, "depart": 60, "routin": 60, "hundr": 60, "thousand": 60, "deepli": [60, 385, 387], "moment": [60, 299, 301, 302, 306, 474, 475, 476], "broadli": 60, "heavili": 60, "supplementari": 60, "drop": 60, "Is": 60, "reusabl": 60, "fanci": 60, "fusion": 60, "lose": 60, "vmap": 60, "pmap": 60, "overhead": 60, "ineffici": 60, "eventu": 60, "supplement": 60, "backdoor": 60, "callback": 60, "load": 60, "record": 60, "metric": 60, "visual": 60, "somewhat": 60, "outsourc": 60, "third": [60, 336, 354, 417, 418], "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 61, "outputs_to_ivy_arrai": 61, "gelu": [66, 444], "gaussian": [66, 67], "leaki": [66, 67, 68], "leaky_relu": [66, 437], "alpha": [66, 68], "rectifi": [66, 68, 69], "slope": [66, 68], "39": [66, 68, 425, 426], "85": [66, 68], "17": [66, 68], "269": [66, 70], "731": [66, 70], "881": [66, 70], "softmax": [66, 323, 334, 335, 437], "09003057": [66, 71], "24472848": [66, 71], "66524094": [66, 71], "softplu": [66, 437], "3461": [66, 72], "6491": [66, 72], "5349962": [66, 72], "4203641": [66, 72], "hyperbol": [66, 73, 176, 179, 182, 185, 194, 229, 234], "55": [66, 73, 425, 426], "50": [66, 73, 425, 426], "func": [74, 75, 126, 170, 236, 242, 299, 303, 385, 398], "faster": [74, 75, 425, 426], "invoc": [74, 75], "718281828459045": 76, "inf": [76, 236, 264, 298, 336, 359], "newaxi": 76, "alia": 76, "pi": 76, "141592653589793": 76, "mathemat": [76, 176, 180, 184, 199, 220, 336, 359], "evenli": [77, 78, 86, 87, 365, 375], "half": [77, 78, 405, 407, 409], "word": [77, 78, 405, 409, 447, 448], "chosen": [77, 78, 176, 184, 412, 416], "distanc": [77, 78], "adjac": [77, 78], "dimension": [77, 78, 82, 88, 336, 338, 339, 344, 347, 349, 350, 358, 359, 365, 375, 412, 413, 414, 415, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "ceil": [77, 78, 176, 437], "datatyp": [77, 79, 89, 96, 106, 116, 117], "interpret": [77, 79, 89], "fill": [77, 80, 84, 85, 90, 91, 94, 95, 405, 407], "uniniti": [77, 80, 81], "empty_lik": 77, "n_row": [77, 82], "n_col": [77, 82], "diagon": [77, 82, 92, 93, 336, 357, 425, 426], "elsewher": [77, 82, 412, 416], "row": [77, 82, 336, 353, 354, 405, 406, 412, 415], "column": [77, 82, 336, 341, 351, 353, 354, 425, 426], "upper": [77, 82, 93, 336, 337, 351, 405, 409], "from_dlpack": 77, "__dlpack__": [77, 83], "view": [77, 83, 323, 330], "interchang": [77, 83, 365, 378], "full_lik": 77, "endpoint": [77, 86], "entri": [77, 86, 87, 365, 375, 385, 398], "meshgrid": 77, "xy": [77, 88], "coordin": [77, 88, 176, 184], "cartesian": [77, 88], "matrix": [77, 88, 92, 93, 236, 237, 243, 323, 332, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 357, 360, 458, 468], "ij": [77, 88, 425, 426], "rank": [77, 88, 236, 297, 336, 338, 347, 351, 353, 357, 358, 359, 365, 368, 369, 377, 380, 412, 415, 434, 435, 436], "ni": [77, 88], "xi": [77, 88], "n1": [77, 88], "n2": [77, 88], "n3": [77, 88], "accordingli": [77, 88, 176, 199, 336, 359, 412, 414, 417, 418, 421, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "xv": [77, 88], "yv": [77, 88], "tril": 77, "triangular": [77, 92, 93, 336, 337, 351], "innermost": [77, 92, 93, 336, 337, 339, 340, 341, 342, 343, 347, 348, 350, 351, 353, 354, 355, 357], "mxn": [77, 92, 93, 336, 340, 347, 348, 350, 351, 355, 357], "triu": 77, "zeros_lik": [77, 365, 366, 437], "defaultdtyp": [96, 97], "defaultfloatdtyp": [96, 98], "float_dtyp": [96, 109, 120], "defaultintdtyp": [96, 99], "as_ivy_dtyp": 96, "dtype_in": [96, 100, 101, 107, 112, 115, 116, 117, 125], "as_native_dtyp": 96, "match": [96, 102, 176, 225, 236, 275], "broadcast_arrai": 96, "incompat": [96, 104], "from_": [96, 105], "occur": [96, 105, 412, 413, 414, 417, 418, 419, 421], "closest_valid_dtyp": 96, "closest": [96, 106, 176, 192, 200, 201, 235], "convert_dtyp": 96, "summari": [96, 108, 109, 110, 119, 120, 121, 126, 139, 140, 145, 236, 245, 249, 263, 299, 309, 314], "floatdtyp": [96, 109], "int_dtyp": [96, 110, 121], "intdtyp": [96, 110], "dtype_bit": 96, "finfo": 96, "inform": [96, 113, 114, 299, 310], "followng": [96, 113], "occupi": [96, 113, 114, 236, 281, 282], "ep": [96, 113, 336, 347, 350], "smallest": [96, 113, 114, 176, 192], "max": [96, 113, 114, 176, 218, 236, 243, 244, 252, 281, 282, 336, 347, 350, 425, 474, 476], "min": [96, 113, 114, 176, 219, 236, 252, 281, 282, 289, 336, 351, 354, 355, 359, 425], "smallest_norm": [96, 113], "precis": [96, 113, 176, 220, 230], "iinfo": 96, "encapsul": [96, 114], "invalid_dtyp": 96, "is_float_dtyp": 96, "is_int_dtyp": [96, 236, 295], "arrays_and_dtyp": [96, 118], "unset_default_dtyp": 96, "unset_default_float_dtyp": 96, "unset_default_int_dtyp": 96, "valid_dtyp": 96, "noinspect": [97, 98, 99, 127, 300], "pyshadowingnam": [97, 98, 99, 127, 300], "defaultdevic": [126, 127], "devcloneditem": 126, "multidevitem": [126, 128, 131], "devclonedit": 126, "multidevit": [126, 129, 132, 135, 136, 140], "devclonednest": 126, "max_depth": [126, 130, 133, 140, 150, 154, 158, 236, 263, 385, 397], "multidevnest": [126, 130, 133], "devdistitem": 126, "devdistit": 126, "devdistnest": 126, "devmanag": [126, 134], "dev_mapp": 126, "da_dim_s": 126, "safety_factor": 126, "min_dev_dim_s": 126, "max_dev_dim_step_ratio": 126, "min_unit_dev_tune_step": 126, "min_sf_tune_step": 126, "starting_split_factor": 126, "max_split_factor_step_s": 126, "05": 126, "tune_dev_alloc": 126, "tune_dev_split": 126, "mapper": [126, 135, 136], "receivess": 126, "ratio": [126, 299, 306, 315, 321, 474, 476], "safe": [126, 135], "oom": 126, "tune": 126, "da_tune_step": 126, "dim_siz": 126, "ds_tune_step": 126, "to_clon": 126, "to_distribut": 126, "multidevic": [126, 135], "parallel": [126, 135, 136], "mutlidevic": [126, 135], "repeated_config_check": 126, "tune_step": 126, "devmapp": [126, 136], "ret_fn": [126, 135, 136], "queue_class": [126, 135, 136], "worker_class": [126, 135, 136], "timeout": [126, 135, 136, 236, 280, 285], "worker": [126, 135, 136], "used_dev": [126, 135], "split_factor": [126, 135], "sf": [126, 135], "devmappermultiproc": 126, "multidev": [126, 137, 138, 139, 158], "at_dev": [126, 139, 140], "profil": 126, "save_dir": [126, 141], "as_native_dev": 126, "clear_mem_on_dev": 126, "dev_clon": 126, "deviceic": [126, 147], "dev_clone_arrai": 126, "dev_clone_it": 126, "xs": [126, 149, 153, 155, 156, 157, 236, 237, 240, 299, 303, 365, 367], "dev_clone_nest": 126, "dev_dist": 126, "dev_dist_arrai": 126, "dev_dist_it": 126, "iterbal": [126, 153, 157], "dev_dist_nest": 126, "dev_unifi": 126, "concatten": [126, 155, 156, 157, 158, 170], "concat": [126, 155, 156, 157, 158, 170, 236, 256, 365, 437], "dev_unify_arrai": 126, "dev_unify_it": 126, "dev_unify_nest": 126, "spread": [126, 158], "gpu_is_avail": 126, "num_arrays_on_dev": 126, "percent_used_mem_on_dev": 126, "process_specif": [126, 165, 175], "percentag": [126, 165], "ram": [126, 165, 172, 175], "alon": [126, 165, 175], "print_all_arrays_on_dev": 126, "set_split_factor": 126, "scale": [126, 168, 169, 299, 307, 323, 331, 334, 335, 403, 404, 458, 466, 469, 474, 477], "chunk": [126, 168, 169, 170], "split_func_cal": 126, "max_chunk_s": [126, 170], "chunk_siz": [126, 170], "input_ax": [126, 170], "output_ax": [126, 170], "feed": [126, 170], "fist": [126, 170], "to_dev": 126, "gb": [126, 172, 175], "tpu_is_avail": 126, "unset_default_devic": 126, "used_mem_on_dev": 126, "magnitud": [176, 177, 180, 220, 336, 354, 355], "aco": [176, 437], "princip": [176, 178, 181, 183], "cosin": [176, 178, 179, 193, 194], "greater": [176, 178, 181, 184, 188, 190, 200, 201, 224, 225, 227, 235, 336, 338, 365, 376, 405, 409], "acosh": [176, 437], "x1_i": [176, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 202, 203, 207, 208, 213, 214, 216, 217, 220, 222, 224, 225, 232], "x2_i": [176, 180, 184, 186, 188, 189, 190, 191, 195, 196, 201, 202, 203, 207, 208, 213, 214, 216, 217, 220, 222, 224, 225, 232], "finit": [176, 180, 184, 204, 220, 224, 225], "nonzero": [176, 180, 220, 412], "nor": [176, 180, 220], "nearest": [176, 180, 220, 226], "2019": [176, 180, 199, 220], "commut": [176, 180], "asin": [176, 437], "sine": [176, 181, 182, 228, 229], "asinh": [176, 437], "atan": [176, 437], "atan2": [176, 437], "quotient": [176, 184], "notat": [176, 184, 425, 426], "denot": [176, 184], "pair": [176, 184, 323, 335, 336, 338], "quadrant": [176, 184], "3\u03c0": [176, 184], "atanh": [176, 437], "549": [176, 185], "bitwise_and": 176, "bitwis": [176, 186, 189, 191, 217], "AND": [176, 186, 214, 434, 435], "binari": [176, 186, 189, 191, 217, 361, 362], "bitwise_invert": 176, "invert": [176, 187], "bitwise_left_shift": 176, "bitwise_or": 176, "OR": [176, 189, 216, 434, 436], "bitwise_right_shift": 176, "arithmet": [176, 190, 425, 428], "propag": [176, 190, 425, 427, 428, 429, 431, 432, 433], "thu": [176, 190, 224, 225, 336, 341], "floor": [176, 190, 236, 255, 437], "lh": [176, 190], "rh": [176, 190], "bitwise_xor": 176, "xor": [176, 191, 217], "416": [176, 193], "cosh": [176, 437], "dividend": [176, 195, 225], "divisor": [176, 195, 225, 299, 301, 302, 306, 425, 431, 433, 474, 475, 476], "erf": 176, "gauss": [176, 197], "exponenti": [176, 197, 198, 213, 224], "exp": [176, 199, 213, 437], "logarithm": [176, 198, 209, 210, 211, 212, 213, 336, 352], "7182817": [176, 198], "389056": [176, 198], "085537": [176, 198], "expm1": 176, "accur": [176, 199], "fdlibm": [176, 199], "compliant": [176, 199, 215, 216, 425, 427, 428, 429], "greatest": [176, 200, 201], "floor_divid": 176, "greater_equ": 176, "isfinit": 176, "out_i": [176, 204, 205, 206], "isinf": 176, "isnan": 176, "less_equ": 176, "log10": 176, "log1p": 176, "log2": 176, "logaddexp": 176, "logical_and": [176, 437], "logical_not": [176, 437], "NOT": [176, 215], "recommend": [176, 215, 216, 225, 425, 428], "logical_or": [176, 437], "logical_xor": 176, "threshold": [176, 218, 219], "exce": [176, 219], "product": [176, 220, 236, 247, 323, 334, 335, 336, 338, 344, 349, 356, 358, 425, 426, 430, 458, 469], "not_equ": 176, "pow": 176, "expon": [176, 224, 236, 290], "versu": [176, 224], "odd": [176, 224], "remaind": [176, 236, 255, 365, 375], "modulu": [176, 225], "primarili": [176, 225], "backward": [176, 225, 336, 358, 434, 435, 436], "sinh": [176, 437], "sqrt": [176, 336, 359], "squar": [176, 230, 336, 337, 339, 341, 342, 343, 346, 352, 353, 354], "indistinguish": [176, 230], "infinit": [176, 230], "56": [176, 233, 425, 426], "19": [176, 233, 365, 372], "546": [176, 233], "842": [176, 233], "916": [176, 233], "96": [176, 233, 425, 426], "37": [176, 233, 315, 322], "996": [176, 233], "328": [176, 233], "143": [176, 233], "38": [176, 233], "trunc": 176, "decim": [176, 235], "all_equ": 236, "equality_matrix": [236, 237], "arg_nam": 236, "array_equ": 236, "arrays_equ": 236, "assert_supports_inplac": 236, "later": [236, 242], "clip_matrix_norm": 236, "max_norm": [236, 243, 244], "downscal": [236, 243, 244], "clip_vector_norm": 236, "container_typ": 236, "copy_arrai": 236, "cumsum": [236, 437], "current_backend_str": 236, "default_v": [236, 250], "catch_except": [236, 250], "rev": [236, 250], "with_cal": [236, 250], "einops_rearrang": 236, "axes_length": [236, 251, 252, 253], "rearrang": [236, 251, 253], "arrang": [236, 251], "einops_reduc": 236, "einops_repeat": 236, "floormod": [236, 437], "mod": [236, 255], "fourier_encod": 236, "max_freq": [236, 256], "num_band": [236, 256], "flatten": [236, 256, 336, 349, 359, 365, 372, 374, 412, 413, 414, 417, 418, 419, 421], "pad": [236, 256, 323, 324, 325, 326, 327, 328, 329, 330, 365, 368, 380, 458, 459, 460, 461, 462, 463, 464, 465], "fourier": [236, 256], "frequenc": [236, 256], "band": [236, 256], "linearli": [236, 256, 336, 353], "oppos": [236, 256], "geometr": [236, 256], "expand": [236, 256, 365, 369], "gather": [236, 258], "slice": [236, 257, 258, 385, 394], "gather_nd": [236, 437], "get_all_arrays_in_memori": 236, "get_min_bas": 236, "get_min_denomin": 236, "get_num_dim": [236, 437], "as_arrai": [236, 262, 287], "get_referrers_recurs": 236, "seen_set": [236, 263], "local_set": [236, 263], "has_nan": 236, "include_inf": [236, 264, 298], "indices_wher": [236, 437], "inplace_arrays_support": 236, "inplace_decr": 236, "decrement": [236, 267], "inplace_incr": 236, "inplace_variables_support": 236, "is_arrai": 236, "is_ivy_contain": 236, "match_kwarg": 236, "allow_dupl": [236, 275], "forkserv": [236, 276], "spawn": [236, 276], "num_arrays_in_memori": 236, "hot": [236, 278], "scatter": [236, 278, 281, 282], "overrid": [236, 278], "print_all_arrays_in_memori": 236, "queue_timeout": 236, "scatter_flat": 236, "flat": [236, 281, 365, 372], "set_min_bas": 236, "set_min_denomin": 236, "set_queue_timeout": 236, "set_tmp_dir": 236, "tmp_dr": [236, 286], "temporari": [236, 286], "y_tupl": [236, 287], "y_tensor": [236, 287], "as_tensor": [236, 287], "min_denomin": [236, 289], "stabil": [236, 289, 290, 422, 423, 424], "_min_denomin": [236, 289], "stable_pow": 236, "min_bas": [236, 290], "_min_bas": [236, 290, 403, 404, 472, 473], "supports_inplac": 236, "tmp_dir": 236, "to_list": [236, 437], "to_scalar": 236, "try_else_non": 236, "unpack": [236, 297], "r": [236, 297, 336, 351, 360], "value_is_nan": 236, "gradienttrack": [299, 300], "with_grad": [299, 309], "adam_step": 299, "dcdw": [299, 301, 302, 304, 306, 307], "delta": [299, 301], "cost": [299, 301, 302, 304, 306, 307, 308, 381, 382, 383, 384], "ws": [299, 301, 302, 304, 306, 307, 308], "en": [299, 301, 302], "wikipedia": [299, 301, 302], "wiki": [299, 301, 302], "stochastic_gradient_desc": [299, 301, 302], "dc": [299, 301, 302, 304, 306, 307, 308], "dw": [299, 301, 302, 304, 306, 307, 308], "averag": [299, 301, 302, 306, 381, 382, 383], "forget": [299, 301, 302, 306, 474, 475, 476], "mw_tm1": [299, 302, 306], "vw_tm1": [299, 302, 306], "rate": [299, 302, 304, 306, 307, 308, 381, 382, 383, 384, 458, 469, 474, 475, 476, 477, 478, 479], "rel": [299, 302, 304, 306, 307, 308, 336, 340, 347, 350, 357, 365, 370, 374, 422, 423, 424, 437], "ws_new": [299, 302, 304, 306, 307, 308], "retain_grad": [299, 303], "dy": [299, 303, 315, 318], "dx": [299, 303, 315, 318], "retain": [299, 303], "gradient_descent_upd": [299, 381, 382, 383, 384, 437], "lamb_upd": 299, "max_trust_ratio": [299, 306, 474, 476], "decay_lambda": [299, 306, 307, 474, 476, 477], "trust": [299, 306, 474, 476], "decai": [299, 306, 307, 474, 476, 477], "lars_upd": 299, "layerwis": [299, 307, 474, 477], "optimizer_upd": 299, "effective_grad": [299, 308], "set_with_grad": 299, "preserve_typ": [299, 310], "unset_with_grad": 299, "variable_data": 299, "bilinear_resampl": [315, 437], "bilinearli": [315, 316], "num_sampl": [315, 316, 319, 405, 406], "bilinear": [315, 316], "float_img_to_uint8_img": 315, "gradient_imag": [315, 437], "linear_resampl": 315, "interpol": [315, 319], "resampl": [315, 319], "random_crop": 315, "crop_siz": [315, 320], "image_dim": [315, 320], "seed": [315, 320, 405, 437], "randomli": [315, 320, 323, 331, 458, 466], "crop": [315, 320], "2d": [315, 320, 336, 352, 458, 461, 462, 465], "nh": [315, 320], "nw": [315, 320], "stack_imag": [315, 437], "desired_aspect_ratio": [315, 321], "window": [315, 321, 323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "width": [315, 321], "uint8_img_to_float_img": 315, "820471434542632e": [315, 322], "0082513512365273e": [315, 322], "34": [315, 322], "658462758989161e": [315, 322], "003653270560797e": [315, 322], "30": [315, 322, 425, 426, 449, 455], "conv1d": [323, 458], "stride": [323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "data_format": [323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "nwc": [323, 324, 325, 458, 459, 460], "dilat": [323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "convolut": [323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "d_in": [323, 324, 325, 326, 327, 328, 329], "fw": [323, 324, 325, 326, 327, 328, 329, 330], "d_out": [323, 324, 325, 326, 327, 328, 329], "slide": [323, 324, 325, 326, 327, 328, 329, 330, 458, 459, 460, 461, 462, 463, 464, 465], "ncw": [323, 324, 325, 458, 459, 460], "wio": [323, 324], "conv1d_transpos": 323, "output_shap": [323, 325, 327, 329, 458, 460, 462, 464], "conv2d": [323, 437, 458], "nhwc": [323, 326, 327, 330, 458, 461, 462, 465], "fh": [323, 326, 327, 328, 329, 330], "nchw": [323, 326, 327, 330, 458, 461, 462, 465], "conv2d_transpos": 323, "conv3d": [323, 458], "ndhwc": [323, 328, 329, 458, 463, 464], "volum": [323, 328], "fd": [323, 328, 329], "ncdhw": [323, 328, 329, 458, 463, 464], "dhwio": [323, 328], "conv3d_transpos": 323, "depthwise_conv2d": [323, 437], "depthwis": [323, 330, 458, 465], "random_norm": [323, 330, 336, 354, 405], "28": [323, 330, 425, 426], "unsqueez": [323, 330], "333": [323, 330], "inp": [323, 330], "prob": [323, 331, 405, 406, 458, 466], "bernoul": [323, 331, 458, 466], "out_featur": [323, 331, 332], "incom": [323, 332], "outer_batch_shap": [323, 332], "inner_batch_shap": [323, 332], "in_featur": [323, 332], "cell": [323, 333, 458, 467], "multi_head_attent": 323, "num_head": [323, 334, 458, 469], "mask": [323, 334, 335], "to_q_fn": [323, 334], "to_kv_fn": [323, 334], "to_out_fn": [323, 334], "to_q_v": [323, 334], "to_kv_v": [323, 334], "to_out_v": [323, 334], "head": [323, 334, 437, 458, 469], "num_queri": [323, 334, 335], "x_feat_dim": [323, 334], "measur": [323, 334, 458, 469], "num_kei": [323, 334, 335], "cont_feat_dim": [323, 334], "numhead": [323, 334], "feat_dim": [323, 334, 335], "dot": [323, 334, 335, 336, 356, 358, 425, 426, 458, 469], "out_feat_dim": [323, 334], "scaled_dot_product_attent": 323, "choleski": 336, "decomposit": [336, 337, 351, 354], "symmetr": [336, 337, 341, 342, 360], "u": [336, 337, 354], "73": [336, 337], "57": [336, 337], "63": [336, 337, 425, 426], "cross": [336, 361, 362, 363, 364, 437], "vif": [336, 338], "35": [336, 338, 425, 426], "det": 336, "92": [336, 339], "293": [336, 339], "47": [336, 339], "offset": [336, 340, 357, 403, 404], "axis1": [336, 340, 365, 378], "axis2": [336, 340], "eigh": 336, "eigendecomposit": [336, 341], "qlq\u1d40": [336, 341], "orthogon": [336, 341], "eig": [336, 341], "namedtupl": [336, 341, 351, 354, 417, 418, 419], "eigenvalu": [336, 341, 342], "eigenvector": [336, 341], "eigvalsh": 336, "25": [336, 343, 361, 363, 425, 426], "75": [336, 343], "prepend": [336, 344], "matrix_norm": 336, "ord": [336, 345, 359], "fro": [336, 345], "matrix_pow": 336, "matrix_rank": 336, "rtol": [336, 347, 350], "singular": [336, 347, 350, 354, 355], "toler": [336, 347, 350], "largest_singular_valu": [336, 347, 350], "outer": [336, 381, 382, 383, 384, 425, 426], "array_lik": [336, 349], "pinv": [336, 437], "moor": [336, 350], "penros": [336, 350], "pseudo": [336, 350], "qr": 336, "orthonorm": [336, 351, 354], "slodget": 336, "logdet": [336, 352], "equat": [336, 353, 425, 426], "coeffici": [336, 353], "svd": [336, 437], "full_matric": [336, 354], "usvh": [336, 354], "vh": [336, 354], "hermitian": [336, 354], "descend": [336, 354, 355, 422, 423, 424], "et": [336, 354], "cetera": [336, 354], "adjoint": [336, 354], "reconstruct": [336, 354, 417, 418, 420], "reconstructed_x": [336, 354], "svdval": 336, "tensordot": 336, "contract": [336, 356, 425, 426], "26": [336, 356, 425, 426], "doubl": [336, 356], "89": [336, 356, 425, 432], "76": [336, 356, 425, 426], "vecdot": 336, "vector_norm": 336, "singleton": [336, 359, 365, 376, 412, 414, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "liter": [336, 359], "manhattan": [336, 359], "l2": [336, 359], "euclidean": [336, 359], "vector_to_skew_symmetric_matrix": [336, 437], "mathbf": [336, 360], "mathbb": [336, 360], "skew": [336, 360], "binary_cross_entropi": 361, "entropi": [361, 362, 363, 364], "predict": [361, 362, 363, 364], "discret": [361, 363], "smooth": [361, 363, 364], "3862944": [361, 363], "35667497": [361, 363, 364], "sparse_cross_entropi": 361, "spars": [361, 364], "logit": [361, 364], "3025851": [361, 364], "693": [361, 364], "357": [361, 364], "join": [365, 367, 377, 437], "constant_pad": 365, "pad_width": [365, 368, 380], "before_1": [365, 368, 380], "after_1": [365, 368, 380], "before_n": [365, 368, 380], "after_n": [365, 368, 380], "insert": [365, 369, 385, 390, 412, 413], "reorder": [365, 370], "permute_dim": 365, "permut": [365, 371, 378], "repetit": [365, 372, 379], "beyond": [365, 374], "restor": [365, 374], "with_remaind": [365, 375], "45": [365, 375, 425, 426], "squeez": [365, 437], "famili": [365, 377], "intxx": [365, 377], "floatxx": [365, 377], "swapax": 365, "axis0": [365, 378], "tile": [365, 437], "rep": [365, 379], "zero_pad": [365, 437], "fomaml_step": 381, "inner_cost_fn": [381, 382, 383], "outer_cost_fn": [381, 382, 383], "inner_grad_step": [381, 382, 383, 384], "inner_learning_r": [381, 382, 383, 384], "inner_optimization_step": [381, 382, 383, 384], "inner_batch_fn": [381, 382, 383], "outer_batch_fn": [381, 382, 383], "average_across_step": [381, 382, 383], "inner_v": [381, 382, 383], "keep_inner_v": [381, 382, 383], "outer_v": [381, 382, 383], "keep_outer_v": [381, 382, 383], "return_inner_v": [381, 382, 383, 384], "num_task": [381, 382, 383, 384], "maml": [381, 382, 383], "recev": [381, 382, 383], "maml_step": 381, "rece": [381, 383], "reptile_step": 381, "cost_fn": [381, 384], "reptil": [381, 384], "receivng": [381, 384], "all_nested_indic": 385, "include_nest": [385, 386], "_index": [385, 386, 396], "_base": [385, 386, 395, 396], "begin": [385, 386, 396], "copy_nest": 385, "include_deriv": [385, 387, 397], "to_mut": [385, 387, 397], "mutabl": [385, 387, 397], "insert_into_nest_at_index": 385, "insert_into_nest_at_indic": 385, "map_nest_at_index": 385, "map_nest_at_indic": 385, "multi_index_nest": 385, "nested_ani": 385, "check_nest": [385, 395, 396], "conditon": [385, 395, 396], "nested_indices_wher": 385, "to_ignor": [385, 396], "_depth": [385, 397], "_tuple_check_fn": [385, 397], "_list_check_fn": [385, 397], "_dict_check_fn": [385, 397], "wherebi": [385, 397], "nested_multi_map": 385, "key_chain": [385, 398], "to_appli": [385, 398], "prune_unappli": [385, 398], "prune": [385, 398, 399, 400], "leftmost": [385, 398], "nest0": [385, 398], "funciton": [385, 398], "prune_nest_at_index": 385, "prune_nest_at_indic": 385, "set_nest_at_index": 385, "set_nest_at_indic": 385, "layer_norm": 403, "normalized_idx": [403, 404], "new_std": [403, 404, 472, 473], "mini": [403, 404, 472, 473], "gamma": [403, 404], "beta": [403, 404], "multinomi": 405, "population_s": [405, 406], "draw": [405, 406, 408, 409], "unnorm": [405, 406], "drawn": [405, 406, 407, 408, 409], "home": [405, 406, 407, 408, 409], "randint": [405, 437], "uniformli": [405, 407, 409], "highest": [405, 407], "parameter": [405, 408, 409], "6444774682897879": [405, 408], "boundari": [405, 409], "89150229": [405, 409], "seed_valu": [405, 410], "shuffl": [405, 437], "argmax": [412, 437], "occurr": [412, 413, 414, 417, 418], "argmin": [412, 437], "yield": [412, 416], "unique_al": 417, "x_j": [417, 418, 421], "impli": [417, 418, 421], "inverse_indic": [417, 418, 420], "aggreg": [417, 418], "fourth": [417, 418], "unique_count": 417, "unique_invers": 417, "unique_valu": 417, "argsort": 422, "ascend": [422, 423], "einsum": 425, "einstein": [425, 426], "summat": [425, 426], "seq": [425, 426], "imagin": [425, 426], "suppos": [425, 426], "chanc": [425, 426], "22": [425, 426], "bigger": [425, 426], "jk": [425, 426], "ik": [425, 426], "1d": [425, 426, 458, 459, 460], "24": [425, 426], "36": [425, 426], "66": [425, 426], "84": [425, 426], "104": [425, 426], "126": [425, 426], "510": [425, 426], "18": [425, 426], "21": [425, 426], "27": [425, 426], "33": [425, 426], "40": [425, 426], "44": [425, 426], "48": [425, 426], "52": [425, 426], "60": [425, 426], "65": [425, 426], "72": [425, 426], "78": [425, 426], "49": [425, 426], "77": [425, 426], "91": [425, 426], "98": [425, 426], "88": [425, 426], "112": [425, 426], "81": [425, 426], "99": [425, 426], "108": [425, 426], "117": [425, 426], "sentinel": [425, 427, 429], "unsign": [425, 430, 432], "degre": [425, 431, 433], "freedom": [425, 431, 433], "bessel": [425, 431, 433], "8164966": [425, 431], "varianc": [425, 433], "unbias": [425, 433], "autom": 437, "grow": 437, "ai": 437, "got": 437, "colab": 437, "sharp": 437, "immedi": 437, "favourit": 437, "jax_concat": 437, "tf_concat": 437, "np_concat": 437, "mx_concat": 437, "torch_concat": 437, "prompt": 437, "get_devic": 437, "reduce_prod": 437, "linalg": 437, "neural_net": 437, "ecosystem": [437, 443], "popular": [437, 443], "acceler": 437, "articl": 437, "lenton2021ivi": 437, "inter": 437, "portabl": 437, "author": 437, "lenton": 437, "daniel": 437, "pardo": 437, "fabio": 437, "falck": 437, "fabian": 437, "jame": 437, "stephen": 437, "clark": 437, "ronald": 437, "journal": 437, "arxiv": 437, "preprint": 437, "2102": 437, "02886": 437, "2021": 437, "add_array_spec": 440, "fn_array_spec": 440, "inspect": [441, 442], "geglu": 444, "native_modul": [447, 448], "native_module_class": [447, 448], "firstlayersiren": 449, "kaimingnorm": [449, 453], "negative_slop": 449, "Ones": 449, "siren": 449, "w0": [449, 455], "filter_s": [458, 459, 460], "conv1dtranspos": 458, "filter_shap": [458, 461, 462, 463, 464, 465], "conv2dtranspos": 458, "conv3dtranspos": 458, "depthwiseconv2d": 458, "num_channel": [458, 465], "num_lay": [458, 467], "return_sequ": [458, 467], "return_st": [458, 467], "get_initial_st": [458, 467], "dens": [458, 468], "multiheadattent": 458, "query_dim": [458, 469], "head_dim": [458, 469], "dropout_r": [458, 469], "context_dim": [458, 469], "with_to_q_fn": [458, 469], "with_to_kv_fn": [458, 469], "with_to_out_fn": [458, 469], "build_mod": [458, 469, 470, 471], "on_init": [458, 469, 470, 471], "__call__": [458, 469, 470, 471], "store_var": [470, 471], "arg_stateful_idx": [470, 471], "kwarg_stateful_idx": [470, 471], "fallback_to_non_compil": [470, 471, 474, 478], "with_partial_v": [470, 471], "initialz": [470, 471], "from_cal": [470, 471], "check_submod_ret": [470, 471], "get_mod_kei": [470, 471], "top_mod": [470, 471], "mod_depth": [470, 471], "mod_height": [470, 471], "mod_with_top_mod_key_chain": [470, 471], "save_weight": [470, 471], "weights_path": [470, 471], "show_mod_in_top_mod": [470, 471], "upper_depth": [470, 471], "lower_depth": [470, 471], "show_structur": [470, 471], "show_v_in_top_v": [470, 471], "sub_mod": [470, 471], "show_v": [470, 471], "track_submod_call_ord": [470, 471], "track_submod_ret": [470, 471], "v_with_top_v_key_chain": [470, 471], "layernorm": 472, "normalized_shap": [472, 473], "elementwise_affin": [472, 473], "trail": [472, 473], "affin": [472, 473], "0001": [474, 475, 476], "init_on_first_step": [474, 478], "ignore_miss": [474, 478], "overriden": [474, 478], "sgd": 474, "stochast": [474, 479], "sub_modul": [480, 481], "color": [483, 484], "green": [483, 484]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [21, 0, 0, "-", "debugger"], [61, 0, 0, "-", "func_wrapper"], [440, 0, 0, "-", "inspection"], [483, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[22, 3, 1, "", "debug_mode"], [23, 3, 1, "", "set_breakpoint_debug_mode"], [24, 3, 1, "", "set_debug_mode"], [25, 3, 1, "", "set_exception_debug_mode"], [26, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[62, 3, 1, "", "inputs_to_ivy_arrays"], [63, 3, 1, "", "inputs_to_native_arrays"], [64, 3, 1, "", "outputs_to_ivy_arrays"]], "ivy.functional.ivy": [[66, 0, 0, "-", "activations"], [74, 0, 0, "-", "compilation"], [76, 0, 0, "-", "constants"], [77, 0, 0, "-", "creation"], [96, 0, 0, "-", "data_type"], [126, 0, 0, "-", "device"], [176, 0, 0, "-", "elementwise"], [236, 0, 0, "-", "general"], [299, 0, 0, "-", "gradients"], [315, 0, 0, "-", "image"], [323, 0, 0, "-", "layers"], [336, 0, 0, "-", "linear_algebra"], [361, 0, 0, "-", "losses"], [365, 0, 0, "-", "manipulation"], [381, 0, 0, "-", "meta"], [385, 0, 0, "-", "nest"], [403, 0, 0, "-", "norms"], [405, 0, 0, "-", "random"], [412, 0, 0, "-", "searching"], [417, 0, 0, "-", "set"], [422, 0, 0, "-", "sorting"], [425, 0, 0, "-", "statistical"], [434, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[67, 3, 1, "", "gelu"], [68, 3, 1, "", "leaky_relu"], [69, 3, 1, "", "relu"], [70, 3, 1, "", "sigmoid"], [71, 3, 1, "", "softmax"], [72, 3, 1, "", "softplus"], [73, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[75, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[76, 4, 1, "", "e"], [76, 4, 1, "", "inf"], [76, 4, 1, "", "nan"], [76, 4, 1, "", "newaxis"], [76, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[78, 3, 1, "", "arange"], [77, 3, 1, "", "array"], [79, 3, 1, "", "asarray"], [80, 3, 1, "", "empty"], [81, 3, 1, "", "empty_like"], [82, 3, 1, "", "eye"], [83, 3, 1, "", "from_dlpack"], [84, 3, 1, "", "full"], [85, 3, 1, "", "full_like"], [86, 3, 1, "", "linspace"], [87, 3, 1, "", "logspace"], [88, 3, 1, "", "meshgrid"], [89, 3, 1, "", "native_array"], [90, 3, 1, "", "ones"], [91, 3, 1, "", "ones_like"], [92, 3, 1, "", "tril"], [93, 3, 1, "", "triu"], [94, 3, 1, "", "zeros"], [95, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[96, 1, 1, "", "DefaultDtype"], [96, 1, 1, "", "DefaultFloatDtype"], [96, 1, 1, "", "DefaultIntDtype"], [100, 3, 1, "", "as_ivy_dtype"], [101, 3, 1, "", "as_native_dtype"], [102, 3, 1, "", "astype"], [103, 3, 1, "", "broadcast_arrays"], [104, 3, 1, "", "broadcast_to"], [105, 3, 1, "", "can_cast"], [106, 3, 1, "", "closest_valid_dtype"], [107, 3, 1, "", "convert_dtype"], [108, 3, 1, "", "default_dtype"], [109, 3, 1, "", "default_float_dtype"], [110, 3, 1, "", "default_int_dtype"], [111, 3, 1, "", "dtype"], [112, 3, 1, "", "dtype_bits"], [113, 3, 1, "", "finfo"], [114, 3, 1, "", "iinfo"], [115, 3, 1, "", "invalid_dtype"], [116, 3, 1, "", "is_float_dtype"], [117, 3, 1, "", "is_int_dtype"], [118, 3, 1, "", "result_type"], [119, 3, 1, "", "set_default_dtype"], [120, 3, 1, "", "set_default_float_dtype"], [121, 3, 1, "", "set_default_int_dtype"], [122, 3, 1, "", "unset_default_dtype"], [123, 3, 1, "", "unset_default_float_dtype"], [124, 3, 1, "", "unset_default_int_dtype"], [125, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[96, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[126, 1, 1, "", "DefaultDevice"], [128, 1, 1, "", "DevClonedItem"], [129, 1, 1, "", "DevClonedIter"], [130, 1, 1, "", "DevClonedNest"], [131, 1, 1, "", "DevDistItem"], [132, 1, 1, "", "DevDistIter"], [133, 1, 1, "", "DevDistNest"], [126, 1, 1, "", "DevManager"], [135, 1, 1, "", "DevMapper"], [136, 1, 1, "", "DevMapperMultiProc"], [126, 1, 1, "", "MultiDev"], [138, 1, 1, "", "MultiDevItem"], [139, 1, 1, "", "MultiDevIter"], [140, 1, 1, "", "MultiDevNest"], [141, 1, 1, "", "Profiler"], [142, 3, 1, "", "as_ivy_dev"], [143, 3, 1, "", "as_native_dev"], [144, 3, 1, "", "clear_mem_on_dev"], [145, 3, 1, "", "default_device"], [146, 3, 1, "", "dev"], [147, 3, 1, "", "dev_clone"], [148, 3, 1, "", "dev_clone_array"], [149, 3, 1, "", "dev_clone_iter"], [150, 3, 1, "", "dev_clone_nest"], [151, 3, 1, "", "dev_dist"], [152, 3, 1, "", "dev_dist_array"], [153, 3, 1, "", "dev_dist_iter"], [154, 3, 1, "", "dev_dist_nest"], [155, 3, 1, "", "dev_unify"], [156, 3, 1, "", "dev_unify_array"], [157, 3, 1, "", "dev_unify_iter"], [158, 3, 1, "", "dev_unify_nest"], [159, 3, 1, "", "dev_util"], [160, 3, 1, "", "get_all_arrays_on_dev"], [161, 3, 1, "", "gpu_is_available"], [162, 3, 1, "", "num_arrays_on_dev"], [163, 3, 1, "", "num_cpu_cores"], [164, 3, 1, "", "num_gpus"], [165, 3, 1, "", "percent_used_mem_on_dev"], [166, 3, 1, "", "print_all_arrays_on_dev"], [167, 3, 1, "", "set_default_device"], [168, 3, 1, "", "set_split_factor"], [169, 3, 1, "", "split_factor"], [170, 3, 1, "", "split_func_call"], [171, 3, 1, "", "to_dev"], [172, 3, 1, "", "total_mem_on_dev"], [173, 3, 1, "", "tpu_is_available"], [174, 3, 1, "", "unset_default_device"], [175, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[126, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "da_tune_step"], [126, 5, 1, "", "dim_size"], [126, 2, 1, "", "ds_tune_step"], [126, 2, 1, "", "map"], [126, 2, 1, "", "repeated_config_check"], [126, 5, 1, "", "tune_step"], [126, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[136, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[126, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "items"], [138, 2, 1, "", "keys"], [138, 5, 1, "", "shape"], [138, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "at_dev"], [139, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "start"], [141, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[177, 3, 1, "", "abs"], [178, 3, 1, "", "acos"], [179, 3, 1, "", "acosh"], [180, 3, 1, "", "add"], [181, 3, 1, "", "asin"], [182, 3, 1, "", "asinh"], [183, 3, 1, "", "atan"], [184, 3, 1, "", "atan2"], [185, 3, 1, "", "atanh"], [186, 3, 1, "", "bitwise_and"], [187, 3, 1, "", "bitwise_invert"], [188, 3, 1, "", "bitwise_left_shift"], [189, 3, 1, "", "bitwise_or"], [190, 3, 1, "", "bitwise_right_shift"], [191, 3, 1, "", "bitwise_xor"], [192, 3, 1, "", "ceil"], [193, 3, 1, "", "cos"], [194, 3, 1, "", "cosh"], [195, 3, 1, "", "divide"], [196, 3, 1, "", "equal"], [197, 3, 1, "", "erf"], [198, 3, 1, "", "exp"], [199, 3, 1, "", "expm1"], [200, 3, 1, "", "floor"], [201, 3, 1, "", "floor_divide"], [202, 3, 1, "", "greater"], [203, 3, 1, "", "greater_equal"], [204, 3, 1, "", "isfinite"], [205, 3, 1, "", "isinf"], [206, 3, 1, "", "isnan"], [207, 3, 1, "", "less"], [208, 3, 1, "", "less_equal"], [209, 3, 1, "", "log"], [210, 3, 1, "", "log10"], [211, 3, 1, "", "log1p"], [212, 3, 1, "", "log2"], [213, 3, 1, "", "logaddexp"], [214, 3, 1, "", "logical_and"], [215, 3, 1, "", "logical_not"], [216, 3, 1, "", "logical_or"], [217, 3, 1, "", "logical_xor"], [218, 3, 1, "", "maximum"], [219, 3, 1, "", "minimum"], [220, 3, 1, "", "multiply"], [221, 3, 1, "", "negative"], [222, 3, 1, "", "not_equal"], [223, 3, 1, "", "positive"], [224, 3, 1, "", "pow"], [225, 3, 1, "", "remainder"], [226, 3, 1, "", "round"], [227, 3, 1, "", "sign"], [228, 3, 1, "", "sin"], [229, 3, 1, "", "sinh"], [230, 3, 1, "", "sqrt"], [231, 3, 1, "", "square"], [232, 3, 1, "", "subtract"], [233, 3, 1, "", "tan"], [234, 3, 1, "", "tanh"], [235, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[237, 3, 1, "", "all_equal"], [238, 3, 1, "", "arg_names"], [239, 3, 1, "", "array_equal"], [240, 3, 1, "", "arrays_equal"], [241, 3, 1, "", "assert_supports_inplace"], [242, 3, 1, "", "cache_fn"], [243, 3, 1, "", "clip_matrix_norm"], [244, 3, 1, "", "clip_vector_norm"], [245, 3, 1, "", "container_types"], [246, 3, 1, "", "copy_array"], [247, 3, 1, "", "cumprod"], [248, 3, 1, "", "cumsum"], [249, 3, 1, "", "current_backend_str"], [250, 3, 1, "", "default"], [251, 3, 1, "", "einops_rearrange"], [252, 3, 1, "", "einops_reduce"], [253, 3, 1, "", "einops_repeat"], [254, 3, 1, "", "exists"], [255, 3, 1, "", "floormod"], [256, 3, 1, "", "fourier_encode"], [257, 3, 1, "", "gather"], [258, 3, 1, "", "gather_nd"], [259, 3, 1, "", "get_all_arrays_in_memory"], [260, 3, 1, "", "get_min_base"], [261, 3, 1, "", "get_min_denominator"], [262, 3, 1, "", "get_num_dims"], [263, 3, 1, "", "get_referrers_recursive"], [264, 3, 1, "", "has_nans"], [265, 3, 1, "", "indices_where"], [266, 3, 1, "", "inplace_arrays_supported"], [267, 3, 1, "", "inplace_decrement"], [268, 3, 1, "", "inplace_increment"], [269, 3, 1, "", "inplace_update"], [270, 3, 1, "", "inplace_variables_supported"], [271, 3, 1, "", "is_array"], [272, 3, 1, "", "is_ivy_array"], [273, 3, 1, "", "is_ivy_container"], [274, 3, 1, "", "is_native_array"], [275, 3, 1, "", "match_kwargs"], [276, 3, 1, "", "multiprocessing"], [277, 3, 1, "", "num_arrays_in_memory"], [278, 3, 1, "", "one_hot"], [279, 3, 1, "", "print_all_arrays_in_memory"], [280, 3, 1, "", "queue_timeout"], [281, 3, 1, "", "scatter_flat"], [282, 3, 1, "", "scatter_nd"], [283, 3, 1, "", "set_min_base"], [284, 3, 1, "", "set_min_denominator"], [285, 3, 1, "", "set_queue_timeout"], [286, 3, 1, "", "set_tmp_dir"], [287, 3, 1, "", "shape"], [288, 3, 1, "", "shape_to_tuple"], [289, 3, 1, "", "stable_divide"], [290, 3, 1, "", "stable_pow"], [291, 3, 1, "", "supports_inplace"], [292, 3, 1, "", "tmp_dir"], [293, 3, 1, "", "to_list"], [294, 3, 1, "", "to_numpy"], [295, 3, 1, "", "to_scalar"], [296, 3, 1, "", "try_else_none"], [297, 3, 1, "", "unstack"], [298, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[299, 1, 1, "", "GradientTracking"], [301, 3, 1, "", "adam_step"], [302, 3, 1, "", "adam_update"], [303, 3, 1, "", "execute_with_gradients"], [304, 3, 1, "", "gradient_descent_update"], [305, 3, 1, "", "is_variable"], [306, 3, 1, "", "lamb_update"], [307, 3, 1, "", "lars_update"], [308, 3, 1, "", "optimizer_update"], [309, 3, 1, "", "set_with_grads"], [310, 3, 1, "", "stop_gradient"], [311, 3, 1, "", "unset_with_grads"], [312, 3, 1, "", "variable"], [313, 3, 1, "", "variable_data"], [314, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[299, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[316, 3, 1, "", "bilinear_resample"], [317, 3, 1, "", "float_img_to_uint8_img"], [318, 3, 1, "", "gradient_image"], [319, 3, 1, "", "linear_resample"], [320, 3, 1, "", "random_crop"], [321, 3, 1, "", "stack_images"], [322, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[324, 3, 1, "", "conv1d"], [325, 3, 1, "", "conv1d_transpose"], [326, 3, 1, "", "conv2d"], [327, 3, 1, "", "conv2d_transpose"], [328, 3, 1, "", "conv3d"], [329, 3, 1, "", "conv3d_transpose"], [330, 3, 1, "", "depthwise_conv2d"], [331, 3, 1, "", "dropout"], [332, 3, 1, "", "linear"], [333, 3, 1, "", "lstm_update"], [334, 3, 1, "", "multi_head_attention"], [335, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[337, 3, 1, "", "cholesky"], [338, 3, 1, "", "cross"], [339, 3, 1, "", "det"], [340, 3, 1, "", "diagonal"], [341, 3, 1, "", "eigh"], [342, 3, 1, "", "eigvalsh"], [343, 3, 1, "", "inv"], [344, 3, 1, "", "matmul"], [345, 3, 1, "", "matrix_norm"], [346, 3, 1, "", "matrix_power"], [347, 3, 1, "", "matrix_rank"], [348, 3, 1, "", "matrix_transpose"], [349, 3, 1, "", "outer"], [350, 3, 1, "", "pinv"], [351, 3, 1, "", "qr"], [352, 3, 1, "", "slodget"], [353, 3, 1, "", "solve"], [354, 3, 1, "", "svd"], [355, 3, 1, "", "svdvals"], [356, 3, 1, "", "tensordot"], [357, 3, 1, "", "trace"], [358, 3, 1, "", "vecdot"], [359, 3, 1, "", "vector_norm"], [360, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[362, 3, 1, "", "binary_cross_entropy"], [363, 3, 1, "", "cross_entropy"], [364, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[366, 3, 1, "", "clip"], [367, 3, 1, "", "concat"], [368, 3, 1, "", "constant_pad"], [369, 3, 1, "", "expand_dims"], [370, 3, 1, "", "flip"], [371, 3, 1, "", "permute_dims"], [372, 3, 1, "", "repeat"], [373, 3, 1, "", "reshape"], [374, 3, 1, "", "roll"], [375, 3, 1, "", "split"], [376, 3, 1, "", "squeeze"], [377, 3, 1, "", "stack"], [378, 3, 1, "", "swapaxes"], [379, 3, 1, "", "tile"], [380, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[382, 3, 1, "", "fomaml_step"], [383, 3, 1, "", "maml_step"], [384, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[386, 3, 1, "", "all_nested_indices"], [387, 3, 1, "", "copy_nest"], [388, 3, 1, "", "index_nest"], [389, 3, 1, "", "insert_into_nest_at_index"], [390, 3, 1, "", "insert_into_nest_at_indices"], [391, 3, 1, "", "map"], [392, 3, 1, "", "map_nest_at_index"], [393, 3, 1, "", "map_nest_at_indices"], [394, 3, 1, "", "multi_index_nest"], [395, 3, 1, "", "nested_any"], [396, 3, 1, "", "nested_indices_where"], [397, 3, 1, "", "nested_map"], [398, 3, 1, "", "nested_multi_map"], [399, 3, 1, "", "prune_nest_at_index"], [400, 3, 1, "", "prune_nest_at_indices"], [401, 3, 1, "", "set_nest_at_index"], [402, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[404, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[406, 3, 1, "", "multinomial"], [407, 3, 1, "", "randint"], [408, 3, 1, "", "random_normal"], [409, 3, 1, "", "random_uniform"], [410, 3, 1, "", "seed"], [411, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[413, 3, 1, "", "argmax"], [414, 3, 1, "", "argmin"], [415, 3, 1, "", "nonzero"], [416, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[418, 3, 1, "", "unique_all"], [419, 3, 1, "", "unique_counts"], [420, 3, 1, "", "unique_inverse"], [421, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[423, 3, 1, "", "argsort"], [424, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[426, 3, 1, "", "einsum"], [427, 3, 1, "", "max"], [428, 3, 1, "", "mean"], [429, 3, 1, "", "min"], [430, 3, 1, "", "prod"], [431, 3, 1, "", "std"], [432, 3, 1, "", "sum"], [433, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[435, 3, 1, "", "all"], [436, 3, 1, "", "any"]], "ivy.inspection": [[441, 3, 1, "", "add_array_specs"], [442, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[444, 0, 0, "-", "activations"], [447, 0, 0, "-", "converters"], [449, 0, 0, "-", "initializers"], [458, 0, 0, "-", "layers"], [470, 0, 0, "-", "module"], [472, 0, 0, "-", "norms"], [474, 0, 0, "-", "optimizers"], [480, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[445, 1, 1, "", "GEGLU"], [446, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[445, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[446, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[448, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[449, 1, 1, "", "Constant"], [451, 1, 1, "", "FirstLayerSiren"], [452, 1, 1, "", "GlorotUniform"], [449, 1, 1, "", "KaimingNormal"], [454, 1, 1, "", "Ones"], [455, 1, 1, "", "Siren"], [449, 1, 1, "", "Uniform"], [457, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[449, 2, 1, "", "__init__"], [449, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[451, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[452, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[449, 2, 1, "", "__init__"], [449, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[454, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[455, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[449, 2, 1, "", "__init__"], [449, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[459, 1, 1, "", "Conv1D"], [460, 1, 1, "", "Conv1DTranspose"], [461, 1, 1, "", "Conv2D"], [462, 1, 1, "", "Conv2DTranspose"], [463, 1, 1, "", "Conv3D"], [464, 1, 1, "", "Conv3DTranspose"], [465, 1, 1, "", "DepthwiseConv2D"], [466, 1, 1, "", "Dropout"], [467, 1, 1, "", "LSTM"], [468, 1, 1, "", "Linear"], [469, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[463, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[465, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[467, 2, 1, "", "__init__"], [467, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[469, 2, 1, "", "__init__"]], "ivy.stateful.module": [[471, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "build"], [471, 5, 1, "", "build_mode"], [471, 5, 1, "", "built"], [471, 2, 1, "", "check_submod_rets"], [471, 2, 1, "", "get_mod_key"], [471, 2, 1, "", "mod_depth"], [471, 2, 1, "", "mod_height"], [471, 2, 1, "", "mod_with_top_mod_key_chain"], [471, 2, 1, "", "save_weights"], [471, 2, 1, "", "show_mod_in_top_mod"], [471, 2, 1, "", "show_structure"], [471, 2, 1, "", "show_v_in_top_v"], [471, 2, 1, "", "sub_mods"], [471, 2, 1, "", "track_submod_call_order"], [471, 2, 1, "", "track_submod_rets"], [471, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[473, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[473, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[475, 1, 1, "", "Adam"], [476, 1, 1, "", "LAMB"], [477, 1, 1, "", "LARS"], [478, 1, 1, "", "Optimizer"], [479, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "set_state"], [475, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "set_state"], [476, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "set_state"], [477, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "set_state"], [478, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[479, 2, 1, "", "__init__"], [479, 2, 1, "", "set_state"], [479, 5, 1, "", "state"]], "ivy.stateful.sequential": [[481, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[481, 2, 1, "", "__init__"]], "ivy.verbosity": [[484, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 28, 34, 43], "handler": [0, 43], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 437], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 60], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 45, 60], "arrai": [15, 31, 36, 41, 45], "api": [15, 28, 31, 37, 43, 45, 47, 48], "why": 16, "unifi": [16, 45], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 437], "set": [18, 34, 417], "up": 18, "clone": 18, "ivi": [18, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "build": [20, 43], "doc": 20, "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "debugg": 21, "debug_mod": 22, "set_breakpoint_debug_mod": 23, "set_debug_mod": 24, "set_exception_debug_mod": 25, "unset_debug_mod": 26, "deep": 27, "dive": 27, "navig": 28, "code": 28, "categor": 28, "submodul": 28, "design": [28, 42, 437], "docstr": [29, 30], "exampl": [30, 41], "tan": [30, 233], "roll": [30, 374], "add": [30, 180], "test": [31, 32], "hypothesi": 32, "data": [32, 38, 46, 60, 96, 417, 418, 421], "gener": [32, 236], "self": 32, "consist": 32, "explicit": 32, "test_array_funct": 32, "function": [33, 35, 38, 39, 41, 43, 48, 60], "type": [33, 38, 60, 96], "primari": 33, "composit": 33, "mix": 33, "standalon": 33, "nestabl": [33, 41], "conveni": 33, "wrap": 35, "nativ": 36, "handl": 36, "contain": [37, 46], "instanc": [37, 45], "method": [37, 45, 46], "static": 37, "special": 37, "modul": [38, 39, 47, 470, 471], "argument": [38, 39, 40, 41], "other": [38, 39], "devic": [39, 41, 126], "inplac": 40, "updat": 40, "out": [40, 41], "copi": 40, "dtype": [41, 111], "integ": 41, "sequenc": 41, "block": 43, "framework": [43, 44], "graph": [43, 48], "compil": [43, 48, 74, 75], "class": 45, "oper": [45, 60], "monkei": 45, "patch": 45, "construct": 46, "represent": 46, "recurs": 46, "built": 46, "ins": 46, "access": 46, "save": 46, "load": 46, "comparison": 46, "custom": [46, 60], "us": 46, "case": 46, "compartment": 46, "configur": 46, "network": [46, 48], "weight": 46, "state": [47, 60], "initi": [47, 449], "optim": [47, 474, 478], "transpil": 48, "frontend": 48, "role": 48, "convert": [48, 447], "model": [48, 55, 60], "builder": 50, "ecosystem": 51, "gym": [52, 59], "mech": 53, "memori": [54, 59], "robot": [56, 59], "vision": [57, 59], "extens": [58, 437], "appli": 59, "librari": 59, "mechan": 59, "faq": 60, "dynam": 60, "size": 60, "shape": [60, 287, 417, 418, 421], "check": 60, "control": 60, "flow": 60, "auto": 60, "differenti": 60, "replica": 60, "parallel": 60, "support": 60, "altern": 60, "structur": 60, "pipelin": 60, "func": 61, "wrapper": 61, "inputs_to_ivy_arrai": 62, "inputs_to_native_arrai": 63, "outputs_to_ivy_arrai": 64, "activ": [66, 444], "gelu": [67, 446], "leaky_relu": 68, "relu": 69, "sigmoid": 70, "softmax": 71, "softplu": 72, "tanh": [73, 234], "constant": 76, "creation": 77, "note": [77, 83], "arang": 78, "asarrai": 79, "empti": 80, "empty_lik": 81, "ey": 82, "from_dlpack": 83, "full": 84, "full_lik": 85, "linspac": 86, "logspac": 87, "meshgrid": 88, "native_arrai": 89, "ones": 90, "ones_lik": 91, "tril": 92, "triu": 93, "zero": [94, 457], "zeros_lik": 95, "as_ivy_dtyp": 100, "as_native_dtyp": 101, "astyp": 102, "broadcast_arrai": 103, "broadcast_to": 104, "can_cast": 105, "closest_valid_dtyp": 106, "convert_dtyp": 107, "default_dtyp": 108, "default_float_dtyp": 109, "default_int_dtyp": 110, "dtype_bit": 112, "finfo": 113, "iinfo": 114, "invalid_dtyp": 115, "is_float_dtyp": 116, "is_int_dtyp": 117, "result_typ": 118, "set_default_dtyp": 119, "set_default_float_dtyp": 120, "set_default_int_dtyp": 121, "unset_default_dtyp": 122, "unset_default_float_dtyp": 123, "unset_default_int_dtyp": 124, "valid_dtyp": 125, "devcloneditem": 128, "devclonedit": 129, "devclonednest": 130, "devdistitem": 131, "devdistit": 132, "devdistnest": 133, "devmapp": 135, "devmappermultiproc": 136, "multidevitem": 138, "multidevit": 139, "multidevnest": 140, "profil": 141, "as_ivy_dev": 142, "as_native_dev": 143, "clear_mem_on_dev": 144, "default_devic": 145, "dev": 146, "dev_clon": 147, "dev_clone_arrai": 148, "dev_clone_it": 149, "dev_clone_nest": 150, "dev_dist": 151, "dev_dist_arrai": 152, "dev_dist_it": 153, "dev_dist_nest": 154, "dev_unifi": 155, "dev_unify_arrai": 156, "dev_unify_it": 157, "dev_unify_nest": 158, "dev_util": 159, "get_all_arrays_on_dev": 160, "gpu_is_avail": 161, "num_arrays_on_dev": 162, "num_cpu_cor": 163, "num_gpu": 164, "percent_used_mem_on_dev": 165, "print_all_arrays_on_dev": 166, "set_default_devic": 167, "set_split_factor": 168, "split_factor": 169, "split_func_cal": 170, "to_dev": 171, "total_mem_on_dev": 172, "tpu_is_avail": 173, "unset_default_devic": 174, "used_mem_on_dev": 175, "elementwis": 176, "ab": 177, "aco": 178, "acosh": 179, "asin": 181, "asinh": 182, "atan": 183, "atan2": 184, "atanh": 185, "bitwise_and": 186, "bitwise_invert": 187, "bitwise_left_shift": 188, "bitwise_or": 189, "bitwise_right_shift": 190, "bitwise_xor": 191, "ceil": 192, "co": 193, "cosh": 194, "divid": 195, "equal": 196, "erf": 197, "exp": 198, "expm1": 199, "floor": 200, "floor_divid": 201, "greater": 202, "greater_equ": 203, "isfinit": 204, "isinf": 205, "isnan": 206, "less": 207, "less_equ": 208, "log": 209, "log10": 210, "log1p": 211, "log2": 212, "logaddexp": 213, "logical_and": 214, "logical_not": 215, "logical_or": 216, "logical_xor": 217, "maximum": 218, "minimum": 219, "multipli": 220, "neg": 221, "not_equ": 222, "posit": 223, "pow": 224, "remaind": 225, "round": 226, "sign": 227, "sin": 228, "sinh": 229, "sqrt": 230, "squar": 231, "subtract": 232, "trunc": 235, "all_equ": 237, "arg_nam": 238, "array_equ": 239, "arrays_equ": 240, "assert_supports_inplac": 241, "cache_fn": 242, "clip_matrix_norm": 243, "clip_vector_norm": 244, "container_typ": 245, "copy_arrai": 246, "cumprod": 247, "cumsum": 248, "current_backend_str": 249, "default": 250, "einops_rearrang": 251, "einops_reduc": 252, "einops_repeat": 253, "exist": 254, "floormod": 255, "fourier_encod": 256, "gather": 257, "gather_nd": 258, "get_all_arrays_in_memori": 259, "get_min_bas": 260, "get_min_denomin": 261, "get_num_dim": 262, "get_referrers_recurs": 263, "has_nan": 264, "indices_wher": 265, "inplace_arrays_support": 266, "inplace_decr": 267, "inplace_incr": 268, "inplace_upd": 269, "inplace_variables_support": 270, "is_arrai": 271, "is_ivy_arrai": 272, "is_ivy_contain": 273, "is_native_arrai": 274, "match_kwarg": 275, "multiprocess": 276, "num_arrays_in_memori": 277, "one_hot": 278, "print_all_arrays_in_memori": 279, "queue_timeout": 280, "scatter_flat": 281, "scatter_nd": 282, "set_min_bas": 283, "set_min_denomin": 284, "set_queue_timeout": 285, "set_tmp_dir": 286, "shape_to_tupl": 288, "stable_divid": 289, "stable_pow": 290, "supports_inplac": 291, "tmp_dir": 292, "to_list": 293, "to_numpi": 294, "to_scalar": 295, "try_else_non": 296, "unstack": 297, "value_is_nan": 298, "gradient": 299, "adam_step": 301, "adam_upd": 302, "execute_with_gradi": 303, "gradient_descent_upd": 304, "is_vari": 305, "lamb_upd": 306, "lars_upd": 307, "optimizer_upd": 308, "set_with_grad": 309, "stop_gradi": 310, "unset_with_grad": 311, "variabl": 312, "variable_data": 313, "with_grad": 314, "imag": 315, "bilinear_resampl": 316, "float_img_to_uint8_img": 317, "gradient_imag": 318, "linear_resampl": 319, "random_crop": 320, "stack_imag": 321, "uint8_img_to_float_img": 322, "layer": [323, 458], "conv1d": [324, 459], "conv1d_transpos": 325, "conv2d": [326, 461], "conv2d_transpos": 327, "conv3d": [328, 463], "conv3d_transpos": 329, "depthwise_conv2d": 330, "dropout": [331, 466], "linear": [332, 336, 468], "lstm_updat": 333, "multi_head_attent": 334, "scaled_dot_product_attent": 335, "algebra": 336, "choleski": 337, "cross": 338, "det": 339, "diagon": 340, "eigh": 341, "eigvalsh": 342, "inv": 343, "matmul": 344, "matrix_norm": 345, "matrix_pow": 346, "matrix_rank": 347, "matrix_transpos": 348, "outer": 349, "pinv": 350, "qr": 351, "slodget": 352, "solv": 353, "svd": 354, "svdval": 355, "tensordot": 356, "trace": 357, "vecdot": 358, "vector_norm": 359, "vector_to_skew_symmetric_matrix": 360, "loss": 361, "binary_cross_entropi": 362, "cross_entropi": 363, "sparse_cross_entropi": 364, "manipul": 365, "clip": 366, "concat": 367, "constant_pad": 368, "expand_dim": 369, "flip": 370, "permute_dim": 371, "repeat": 372, "reshap": 373, "split": 375, "squeez": 376, "stack": 377, "swapax": 378, "tile": 379, "zero_pad": 380, "meta": 381, "fomaml_step": 382, "maml_step": 383, "reptile_step": 384, "nest": 385, "all_nested_indic": 386, "copy_nest": 387, "index_nest": 388, "insert_into_nest_at_index": 389, "insert_into_nest_at_indic": 390, "map": 391, "map_nest_at_index": 392, "map_nest_at_indic": 393, "multi_index_nest": 394, "nested_ani": 395, "nested_indices_wher": 396, "nested_map": 397, "nested_multi_map": 398, "prune_nest_at_index": 399, "prune_nest_at_indic": 400, "set_nest_at_index": 401, "set_nest_at_indic": 402, "norm": [403, 472], "layer_norm": 404, "random": 405, "multinomi": 406, "randint": 407, "random_norm": 408, "random_uniform": 409, "seed": 410, "shuffl": 411, "search": 412, "argmax": 413, "argmin": 414, "nonzero": 415, "where": 416, "depend": [417, 418, 421], "output": [417, 418, 421], "unique_al": 418, "unique_count": 419, "unique_invers": 420, "unique_valu": 421, "sort": [422, 424], "argsort": 423, "statist": 425, "einsum": 426, "max": 427, "mean": 428, "min": 429, "prod": 430, "std": 431, "sum": 432, "var": 433, "util": 434, "all": 435, "ani": 436, "content": 437, "overview": 437, "quick": 437, "start": 437, "roadmap": [437, 443], "citat": 437, "inspect": 440, "add_array_spec": 441, "fn_array_spec": 442, "geglu": 445, "to_ivy_modul": 448, "firstlayersiren": 451, "glorotuniform": 452, "Ones": 454, "siren": 455, "conv1dtranspos": 460, "conv2dtranspos": 462, "conv3dtranspos": 464, "depthwiseconv2d": 465, "lstm": 467, "multiheadattent": 469, "layernorm": 473, "adam": 475, "lamb": 476, "lar": 477, "sgd": 479, "sequenti": [480, 481], "verbos": 483, "cprint": 484}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})