Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[781,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[370,0,0,"-"],creation_functions:[371,0,0,"-"],data_type_functions:[372,0,0,"-"],data_types:[376,0,0,"-"],elementwise_functions:[377,0,0,"-"],function_and_method_signatures:[380,0,0,"-"],linear_algebra_extension:[381,0,0,"-"],linear_algebra_functions:[382,0,0,"-"],manipulation_functions:[383,0,0,"-"],searching_functions:[384,0,0,"-"],set_functions:[385,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[372,1,1,""],finfo:[374,2,1,""],iinfo:[375,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[372,3,1,""],bits:[372,3,1,""],eps:[372,3,1,""],max:[372,3,1,""],min:[372,3,1,""],smallest_normal:[372,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[378,2,1,""],logical_not:[379,2,1,""]},"ivy.functional.ivy":{array_api:[782,0,0,"-"],core:[804,0,0,"-"],nn:[1149,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[783,0,0,"-"],creation_functions:[784,0,0,"-"],data_type_functions:[785,0,0,"-"],data_types:[788,0,0,"-"],elementwise_functions:[789,0,0,"-"],function_and_method_signatures:[792,0,0,"-"],linear_algebra_extension:[793,0,0,"-"],linear_algebra_functions:[794,0,0,"-"],manipulation_functions:[795,0,0,"-"],searching_functions:[796,0,0,"-"],set_functions:[797,0,0,"-"],sorting_functions:[798,0,0,"-"],statistical_functions:[800,0,0,"-"],utility_functions:[801,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[786,2,1,""],iinfo:[787,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[790,2,1,""],logical_not:[791,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[799,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[802,2,1,""],any:[803,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[805,0,0,"-"],compilation:[844,0,0,"-"],device:[846,0,0,"-"],dtype:[896,0,0,"-"],general:[920,0,0,"-"],gradients:[1021,0,0,"-"],image:[1037,0,0,"-"],linalg:[1044,0,0,"-"],logic:[1052,0,0,"-"],math:[1055,0,0,"-"],meta:[1073,0,0,"-"],multi_node:[1077,0,0,"-"],nest:[1121,0,0,"-"],random:[1133,0,0,"-"],reductions:[1140,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[806,2,1,""],builtin_add:[807,2,1,""],builtin_and:[808,2,1,""],builtin_bool:[809,2,1,""],builtin_contains:[810,2,1,""],builtin_deepcopy:[811,2,1,""],builtin_dir:[812,2,1,""],builtin_eq:[813,2,1,""],builtin_float:[814,2,1,""],builtin_floordiv:[815,2,1,""],builtin_ge:[816,2,1,""],builtin_getattr:[817,2,1,""],builtin_getattribute:[818,2,1,""],builtin_getitem:[819,2,1,""],builtin_gt:[820,2,1,""],builtin_int:[821,2,1,""],builtin_invert:[822,2,1,""],builtin_le:[823,2,1,""],builtin_lt:[824,2,1,""],builtin_mul:[825,2,1,""],builtin_ne:[826,2,1,""],builtin_neg:[827,2,1,""],builtin_or:[828,2,1,""],builtin_pos:[829,2,1,""],builtin_pow:[830,2,1,""],builtin_radd:[831,2,1,""],builtin_rand:[832,2,1,""],builtin_rfloordiv:[833,2,1,""],builtin_rmul:[834,2,1,""],builtin_ror:[835,2,1,""],builtin_rpow:[836,2,1,""],builtin_rsub:[837,2,1,""],builtin_rtruediv:[838,2,1,""],builtin_rxor:[839,2,1,""],builtin_setitem:[840,2,1,""],builtin_sub:[841,2,1,""],builtin_truediv:[842,2,1,""],builtin_xor:[843,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[845,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[846,1,1,""],DevClonedItem:[848,1,1,""],DevClonedIter:[849,1,1,""],DevClonedNest:[850,1,1,""],DevDistItem:[851,1,1,""],DevDistIter:[852,1,1,""],DevDistNest:[853,1,1,""],DevManager:[846,1,1,""],DevMapper:[855,1,1,""],DevMapperMultiProc:[856,1,1,""],MultiDev:[846,1,1,""],MultiDevItem:[858,1,1,""],MultiDevIter:[859,1,1,""],MultiDevNest:[860,1,1,""],Profiler:[861,1,1,""],clear_mem_on_dev:[862,2,1,""],default_device:[863,2,1,""],dev:[864,2,1,""],dev_clone:[865,2,1,""],dev_clone_array:[866,2,1,""],dev_clone_iter:[867,2,1,""],dev_clone_nest:[868,2,1,""],dev_dist:[869,2,1,""],dev_dist_array:[870,2,1,""],dev_dist_iter:[871,2,1,""],dev_dist_nest:[872,2,1,""],dev_from_str:[873,2,1,""],dev_to_str:[874,2,1,""],dev_unify:[875,2,1,""],dev_unify_array:[876,2,1,""],dev_unify_iter:[877,2,1,""],dev_unify_nest:[878,2,1,""],dev_util:[879,2,1,""],get_all_arrays_on_dev:[880,2,1,""],gpu_is_available:[881,2,1,""],num_arrays_on_dev:[882,2,1,""],num_cpu_cores:[883,2,1,""],num_gpus:[884,2,1,""],percent_used_mem_on_dev:[885,2,1,""],print_all_arrays_on_dev:[886,2,1,""],set_default_device:[887,2,1,""],set_split_factor:[888,2,1,""],split_factor:[889,2,1,""],split_func_call:[890,2,1,""],to_dev:[891,2,1,""],total_mem_on_dev:[892,2,1,""],tpu_is_available:[893,2,1,""],unset_default_device:[894,2,1,""],used_mem_on_dev:[895,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[846,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[846,3,1,""],da_tune_step:[846,3,1,""],dim_size:[846,3,1,""],ds_tune_step:[846,3,1,""],map:[846,3,1,""],repeated_config_check:[846,3,1,""],tune_step:[846,3,1,""],tuned:[846,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[855,3,1,""],map:[855,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[846,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[858,3,1,""],items:[858,3,1,""],keys:[858,3,1,""],shape:[858,3,1,""],values:[858,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[859,3,1,""],at_dev:[859,3,1,""],at_devs:[859,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[860,3,1,""],at_dev:[860,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[861,3,1,""],start:[861,3,1,""],stop:[861,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[896,1,1,""],DefaultFloatDtype:[896,1,1,""],DefaultIntDtype:[896,1,1,""],astype:[896,2,1,""],cast:[900,2,1,""],closest_valid_dtype:[901,2,1,""],convert_dtype:[902,2,1,""],default_dtype:[903,2,1,""],default_float_dtype:[904,2,1,""],default_int_dtype:[905,2,1,""],dtype:[906,2,1,""],dtype_bits:[907,2,1,""],dtype_from_str:[908,2,1,""],dtype_to_str:[909,2,1,""],invalid_dtype:[910,2,1,""],is_float_dtype:[911,2,1,""],is_int_dtype:[912,2,1,""],set_default_dtype:[913,2,1,""],set_default_float_dtype:[914,2,1,""],set_default_int_dtype:[915,2,1,""],unset_default_dtype:[916,2,1,""],unset_default_float_dtype:[917,2,1,""],unset_default_int_dtype:[918,2,1,""],valid_dtype:[919,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[896,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[896,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[896,3,1,""]},"ivy.functional.ivy.core.general":{"default":[945,2,1,""],abs:[921,2,1,""],all_equal:[922,2,1,""],arange:[923,2,1,""],arg_names:[924,2,1,""],argmax:[925,2,1,""],argmin:[926,2,1,""],array:[927,2,1,""],array_equal:[928,2,1,""],arrays_equal:[929,2,1,""],asarray:[920,2,1,""],assert_supports_inplace:[930,2,1,""],broadcast_to:[931,2,1,""],cache_fn:[932,2,1,""],ceil:[933,2,1,""],clip:[934,2,1,""],clip_matrix_norm:[935,2,1,""],clip_vector_norm:[936,2,1,""],concatenate:[937,2,1,""],constant_pad:[938,2,1,""],container_types:[939,2,1,""],copy_array:[940,2,1,""],cross:[941,2,1,""],cumprod:[942,2,1,""],cumsum:[943,2,1,""],current_framework_str:[944,2,1,""],einops_rearrange:[946,2,1,""],einops_reduce:[947,2,1,""],einops_repeat:[948,2,1,""],equal:[949,2,1,""],exists:[950,2,1,""],expand_dims:[951,2,1,""],flip:[952,2,1,""],floor:[953,2,1,""],floormod:[954,2,1,""],fourier_encode:[955,2,1,""],full:[956,2,1,""],gather:[957,2,1,""],gather_nd:[958,2,1,""],get_all_arrays_in_memory:[959,2,1,""],get_min_base:[960,2,1,""],get_min_denominator:[961,2,1,""],get_num_dims:[962,2,1,""],get_referrers_recursive:[963,2,1,""],has_nans:[964,2,1,""],identity:[965,2,1,""],indices_where:[966,2,1,""],inplace_arrays_supported:[967,2,1,""],inplace_decrement:[968,2,1,""],inplace_increment:[969,2,1,""],inplace_update:[970,2,1,""],inplace_variables_supported:[971,2,1,""],is_array:[972,2,1,""],isinf:[973,2,1,""],isnan:[974,2,1,""],linear_resample:[975,2,1,""],linspace:[976,2,1,""],logspace:[977,2,1,""],match_kwargs:[978,2,1,""],matmul:[979,2,1,""],maximum:[980,2,1,""],meshgrid:[981,2,1,""],minimum:[982,2,1,""],multiprocessing:[983,2,1,""],num_arrays_in_memory:[984,2,1,""],one_hot:[985,2,1,""],ones:[986,2,1,""],ones_like:[987,2,1,""],print_all_arrays_in_memory:[988,2,1,""],queue_timeout:[989,2,1,""],repeat:[990,2,1,""],reshape:[991,2,1,""],round:[992,2,1,""],scatter_flat:[993,2,1,""],scatter_nd:[994,2,1,""],set_min_base:[995,2,1,""],set_min_denominator:[996,2,1,""],set_queue_timeout:[997,2,1,""],set_tmp_dir:[998,2,1,""],shape:[999,2,1,""],shape_to_tuple:[1000,2,1,""],split:[1001,2,1,""],squeeze:[1002,2,1,""],stable_divide:[1003,2,1,""],stable_pow:[1004,2,1,""],stack:[1005,2,1,""],supports_inplace:[1006,2,1,""],swapaxes:[1007,2,1,""],tile:[1008,2,1,""],tmp_dir:[1009,2,1,""],to_list:[1010,2,1,""],to_numpy:[1011,2,1,""],to_scalar:[1012,2,1,""],transpose:[1013,2,1,""],try_else_none:[1014,2,1,""],unstack:[1015,2,1,""],value_is_nan:[1016,2,1,""],where:[1017,2,1,""],zero_pad:[1018,2,1,""],zeros:[1019,2,1,""],zeros_like:[1020,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1021,1,1,""],adam_step:[1023,2,1,""],adam_update:[1024,2,1,""],execute_with_gradients:[1025,2,1,""],gradient_descent_update:[1026,2,1,""],is_variable:[1027,2,1,""],lamb_update:[1028,2,1,""],lars_update:[1029,2,1,""],optimizer_update:[1030,2,1,""],set_with_grads:[1031,2,1,""],stop_gradient:[1032,2,1,""],unset_with_grads:[1033,2,1,""],variable:[1034,2,1,""],variable_data:[1035,2,1,""],with_grads:[1036,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1021,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1038,2,1,""],float_img_to_uint8_img:[1039,2,1,""],gradient_image:[1040,2,1,""],random_crop:[1041,2,1,""],stack_images:[1042,2,1,""],uint8_img_to_float_img:[1043,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1045,2,1,""],inv:[1046,2,1,""],matrix_norm:[1047,2,1,""],pinv:[1048,2,1,""],svd:[1049,2,1,""],vector_norm:[1050,2,1,""],vector_to_skew_symmetric_matrix:[1051,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1053,2,1,""],logical_or:[1054,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1056,2,1,""],acosh:[1057,2,1,""],asin:[1058,2,1,""],asinh:[1059,2,1,""],atan2:[1061,2,1,""],atan:[1060,2,1,""],atanh:[1062,2,1,""],cos:[1063,2,1,""],cosh:[1064,2,1,""],divide:[1065,2,1,""],erf:[1066,2,1,""],exp:[1067,2,1,""],log:[1068,2,1,""],sin:[1069,2,1,""],sinh:[1070,2,1,""],tan:[1071,2,1,""],tanh:[1072,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1074,2,1,""],maml_step:[1075,2,1,""],reptile_step:[1076,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1077,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1122,2,1,""],copy_nest:[1123,2,1,""],index_nest:[1124,2,1,""],map:[1125,2,1,""],map_nest_at_index:[1126,2,1,""],map_nest_at_indices:[1127,2,1,""],multi_index_nest:[1128,2,1,""],nested_indices_where:[1129,2,1,""],nested_map:[1130,2,1,""],set_nest_at_index:[1131,2,1,""],set_nest_at_indices:[1132,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1134,2,1,""],randint:[1135,2,1,""],random_normal:[1136,2,1,""],random_uniform:[1137,2,1,""],seed:[1138,2,1,""],shuffle:[1139,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1141,2,1,""],reduce_max:[1142,2,1,""],reduce_mean:[1143,2,1,""],reduce_min:[1144,2,1,""],reduce_prod:[1145,2,1,""],reduce_std:[1146,2,1,""],reduce_sum:[1147,2,1,""],reduce_var:[1148,2,1,""]},"ivy.functional.ivy.nn":{activations:[1150,0,0,"-"],layers:[1158,0,0,"-"],losses:[1171,0,0,"-"],norms:[1175,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1151,2,1,""],leaky_relu:[1152,2,1,""],relu:[1153,2,1,""],sigmoid:[1154,2,1,""],softmax:[1155,2,1,""],softplus:[1156,2,1,""],tanh:[1157,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1159,2,1,""],conv1d_transpose:[1160,2,1,""],conv2d:[1161,2,1,""],conv2d_transpose:[1162,2,1,""],conv3d:[1163,2,1,""],conv3d_transpose:[1164,2,1,""],depthwise_conv2d:[1165,2,1,""],dropout:[1166,2,1,""],linear:[1167,2,1,""],lstm_update:[1168,2,1,""],multi_head_attention:[1169,2,1,""],scaled_dot_product_attention:[1170,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1172,2,1,""],cross_entropy:[1173,2,1,""],sparse_cross_entropy:[1174,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1176,2,1,""]},"ivy.graph_compiler":{compiler:[1177,0,0,"-"],globals:[1180,0,0,"-"],graph:[1183,0,0,"-"],helpers:[1185,0,0,"-"],op_logging:[1186,0,0,"-"],param:[1187,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1178,2,1,""],show_graph:[1179,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1181,2,1,""],log_global_inference_rel_times:[1182,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1183,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1183,3,1,""],add_fn_to_dict:[1183,3,1,""],add_param:[1183,3,1,""],compiled:[1183,3,1,""],connect:[1183,3,1,""],debug_info:[1183,3,1,""],get_param:[1183,3,1,""],get_param_recursive:[1183,3,1,""],include_generators:[1183,3,1,""],increment_param_count:[1183,3,1,""],log_all_ops:[1183,3,1,""],params_all_empty:[1183,3,1,""],save_debug_info:[1183,3,1,""],set_param:[1183,3,1,""],show:[1183,3,1,""],show_debug_info:[1183,3,1,""],update_inference_times:[1183,3,1,""],with_array_caching:[1183,3,1,""]},"ivy.graph_compiler.param":{Param:[1187,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1187,3,1,""],count:[1187,3,1,""],depth:[1187,3,1,""],get:[1187,3,1,""],is_var:[1187,3,1,""],ptype:[1187,3,1,""],set:[1187,3,1,""],set_count:[1187,3,1,""],shape:[1187,3,1,""]},"ivy.stateful":{activations:[1192,0,0,"-"],converters:[1195,0,0,"-"],initializers:[1197,0,0,"-"],layers:[1206,0,0,"-"],module:[1218,0,0,"-"],norms:[1220,0,0,"-"],optimizers:[1222,0,0,"-"],sequential:[1228,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1193,1,1,""],GELU:[1194,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1193,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1194,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1196,2,1,""]},"ivy.stateful.initializers":{Constant:[1197,1,1,""],FirstLayerSiren:[1199,1,1,""],GlorotUniform:[1200,1,1,""],KaimingNormal:[1197,1,1,""],Ones:[1202,1,1,""],Siren:[1203,1,1,""],Uniform:[1197,1,1,""],Zeros:[1205,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1197,3,1,""],create_variables:[1197,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1199,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1200,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1197,3,1,""],create_variables:[1197,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1202,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1203,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1197,3,1,""],create_variables:[1197,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1205,3,1,""]},"ivy.stateful.layers":{Conv1D:[1207,1,1,""],Conv1DTranspose:[1208,1,1,""],Conv2D:[1209,1,1,""],Conv2DTranspose:[1210,1,1,""],Conv3D:[1211,1,1,""],Conv3DTranspose:[1212,1,1,""],DepthwiseConv2D:[1213,1,1,""],Dropout:[1214,1,1,""],LSTM:[1215,1,1,""],Linear:[1216,1,1,""],MultiHeadAttention:[1217,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1208,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1211,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1212,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1213,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1214,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1215,3,1,""],get_initial_state:[1215,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1216,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1217,3,1,""]},"ivy.stateful.module":{Module:[1219,1,1,""]},"ivy.stateful.module.Module":{__init__:[1219,3,1,""],build:[1219,3,1,""],build_mode:[1219,3,1,""],built:[1219,3,1,""],check_submod_rets:[1219,3,1,""],compile_graph:[1219,3,1,""],compile_on_next_step:[1219,3,1,""],get_mod_key:[1219,3,1,""],mod_depth:[1219,3,1,""],mod_height:[1219,3,1,""],mod_with_top_mod_key_chain:[1219,3,1,""],save_weights:[1219,3,1,""],show_graph:[1219,3,1,""],show_mod_in_top_mod:[1219,3,1,""],show_structure:[1219,3,1,""],show_v_in_top_v:[1219,3,1,""],sub_mods:[1219,3,1,""],track_submod_call_order:[1219,3,1,""],track_submod_rets:[1219,3,1,""],v_with_top_v_key_chains:[1219,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1221,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1221,3,1,""]},"ivy.stateful.optimizers":{Adam:[1223,1,1,""],LAMB:[1224,1,1,""],LARS:[1225,1,1,""],Optimizer:[1226,1,1,""],SGD:[1227,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1223,3,1,""],set_state:[1223,3,1,""],state:[1223,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1224,3,1,""],set_state:[1224,3,1,""],state:[1224,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1225,3,1,""],set_state:[1225,3,1,""],state:[1225,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1226,3,1,""],compile_graph:[1226,3,1,""],compile_on_next_step:[1226,3,1,""],set_state:[1226,3,1,""],show_graph:[1226,3,1,""],step:[1226,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1227,3,1,""],set_state:[1227,3,1,""],state:[1227,3,1,""]},"ivy.stateful.sequential":{Sequential:[1229,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1229,3,1,""]},"ivy.verbosity":{cprint:[1234,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1233,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1222,1223,1224],"02886":1189,"100":[1077,1189,1231],"2021":1189,"2102":1189,"360":[1055,1063,1069,1071],"754":[785,786],"999":[1021,1023,1024,1028,1222,1223,1224],"abstract":[846,861,1189,1222,1226],"boolean":[40,41,789,791,846,881,893,896,910,919,920,922,928,929,964,966,967,971,972,973,974,1006,1016,1021,1027,1052,1053,1054,1073,1074,1075,1077],"break":43,"case":[15,18,19,40,41,42,43,846,885,892,895,920,923,991,993,994,1044,1047,1050,1077,1121,1124,1128,1189,1206,1217,1218,1219,1222,1226,1235],"catch":[920,945],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,372,785,787,846,848,849,850,851,852,853,855,856,858,859,860,861,873,874,896,920,924,978,986,1021,1035,1077,1121,1123,1130,1171,1173,1174,1183,1187,1189,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1235],"default":[15,18,19,40,41,42,43,798,799,801,802,803,844,845,846,855,856,863,864,868,869,870,871,872,875,876,877,878,885,888,889,890,895,896,903,904,905,906,920,922,923,925,926,935,936,937,938,941,942,943,952,955,956,957,962,964,965,975,977,978,981,983,986,989,990,993,994,997,999,1001,1003,1004,1013,1015,1016,1019,1021,1024,1026,1027,1028,1029,1030,1032,1036,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],"final":[40,41,920,955,976,977,1077,1206,1217,1232],"float":[40,41,42,43,785,786,805,830,846,855,856,879,885,888,892,895,896,904,911,920,923,935,936,938,955,956,960,961,977,995,996,997,1003,1004,1021,1023,1024,1026,1028,1029,1030,1037,1039,1043,1055,1065,1073,1074,1075,1076,1077,1133,1136,1137,1150,1152,1158,1166,1169,1170,1171,1172,1173,1174,1175,1176,1206,1214,1217,1220,1221,1222,1223,1224,1225,1226,1227],"function":[15,40,41,43,374,375,378,379,786,787,790,791,799,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1189,1192,1193,1194,1222,1225,1226,1227,1231,1232,1235],"import":[43,1189,1232,1235],"int":[40,41,42,43,785,786,787,798,799,801,802,803,805,830,844,845,846,868,869,870,871,872,875,876,877,878,883,884,890,896,905,907,912,920,925,926,931,937,938,942,943,946,947,948,951,952,955,956,957,962,965,975,976,977,985,986,990,991,993,994,999,1000,1001,1002,1005,1007,1008,1013,1015,1018,1019,1021,1023,1024,1028,1037,1041,1042,1044,1047,1050,1073,1074,1075,1076,1077,1121,1130,1133,1134,1135,1137,1138,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1169,1171,1173,1174,1175,1176,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1220,1221],"long":[1158,1168],"new":[40,41,43,896,900,920,921,931,946,947,948,951,955,956,957,958,986,991,993,994,995,996,1003,1004,1005,1019,1021,1024,1026,1028,1029,1030,1037,1039,1041,1043,1055,1057,1059,1062,1064,1070,1072,1077,1121,1131,1132,1133,1134,1175,1176,1189,1195,1196,1206,1216,1220,1221,1222,1223,1224,1225,1226,1227,1232,1235],"public":[920,939],"return":[15,16,17,18,19,40,41,42,43,785,786,787,789,790,791,798,799,801,802,803,805,830,844,845,846,855,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,881,882,884,885,889,890,891,892,893,895,896,900,901,902,903,904,905,906,907,908,909,910,911,912,919,920,921,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,990,991,992,993,994,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1189,1195,1196,1206,1215,1216,1222,1226,1231,1232,1235],"short":[1158,1168,1189,1235],"static":[40,41,844,845],"super":1077,"true":[40,41,42,789,790,798,799,801,802,803,844,845,846,920,922,930,932,950,955,964,966,1016,1017,1021,1024,1026,1027,1028,1029,1030,1032,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1129,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1158,1166,1171,1172,1173,1174,1177,1178,1179,1183,1206,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227],"try":[40,41,920,1014,1077],"var":[40,41,1073,1074,1075,1235],"while":[40,41,42,1077],AND:[801,802,1052,1053],But:1235,For:[43,920,923,934,1005,1021,1027,1035,1055,1056,1189,1195,1196,1232,1235],Its:[1055,1060],NOT:[789,791],One:[40,41,920,947,991,1133,1135,1235],Ones:[1189,1197],Such:[920,939],That:1232,The:[15,16,17,18,19,40,41,42,43,789,790,798,799,801,802,803,805,830,844,845,846,855,856,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,885,888,889,890,891,892,895,896,900,901,902,907,908,909,910,919,920,923,927,928,931,932,935,936,937,938,940,941,944,945,949,952,955,957,958,965,968,969,970,972,975,977,979,981,983,986,987,990,991,993,994,995,996,997,1000,1001,1002,1003,1004,1005,1008,1016,1019,1020,1021,1023,1024,1026,1028,1029,1030,1032,1035,1037,1039,1041,1043,1044,1047,1049,1055,1056,1058,1060,1063,1065,1066,1067,1068,1069,1071,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1189,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1232,1235],There:[43,1189,1232],These:[43,1189],Used:[1121,1122,1129,1218,1219],Using:[1189,1190,1235],With:[40,41,1044,1047,1050,1140,1142,1143,1144,1145,1146,1147,1148,1189,1231,1235],__array__:[920,927],__call__:[1206,1217,1218,1219],__del__:1077,__dict__:[1077,1232],__enter__:1077,__exit__:1077,__getitem__:1077,__getstate__:1077,__init__:[40,41,42,43,59,60,79,197,372,373,483,600,846,847,854,855,856,857,858,859,860,861,896,897,898,899,1021,1022,1077,1081,1088,1183,1184,1187,1188,1189,1192,1193,1194,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1235],__iter__:1077,__len__:1077,__next__:1077,__pow__:43,__repr__:1077,_assign_vari:1231,_axi:1077,_base:[1121,1122,1129],_compute_node_da_ratio:1077,_compute_node_strs_da:1077,_concat_unify_arrai:1077,_counter:1077,_cur_framework:[43,1077],_da_direct:1077,_da_directions_flip:1077,_da_step_tim:1077,_da_tim:1077,_da_tune_count:1077,_data:1077,_delta_da_dim_s:1077,_delta_sf:1077,_dict:1077,_dim_siz:1077,_first_da_tune_step:1077,_first_ns_tune_step:1077,_fn:1077,_forward:[1189,1231],_get_kalman_param:1235,_get_prior:1235,_get_some_model:1235,_handle_flat_arrays_in_out:43,_index:[1121,1122,1129],_input_queu:1077,_length:1077,_max_depth:1077,_max_node_dim_step_ratio:1077,_max_node_dim_step_s:1077,_max_split_factor_step_s:1077,_mean_unify_arrai:1077,_min_bas:[920,1004,1175,1176,1220,1221],_min_denomin:[920,1003],_min_node_dim_s:1077,_min_sf_tune_step:1077,_min_unit_node_tune_step:1077,_model:1235,_native_wrapp:43,_node_mapp:1077,_node_percent_mem:1077,_node_str:1077,_node_str_da_ratio:1077,_node_strs_da:1077,_node_strs_kei:1077,_node_strs_n:1077,_node_util:1077,_ns_step_tim:1077,_ns_time:1077,_ns_tune_count:1077,_num_nod:1077,_num_work:1077,_observed_config:1077,_output_queu:1077,_paramet:1231,_percent_mem_inc_per_sf:1077,_percent_mem_inc_per_unit_da_dim:1077,_percent_util_inc_per_unit_da_dim:1077,_ret_fn:1077,_safety_factor:1077,_save_dir:1077,_shift_da_split:1077,_shift_n:1077,_slice:1077,_step:[1222,1226],_sum_unify_arrai:1077,_timeout:1077,_tune:1077,_tune_da:1077,_tune_n:1077,_tune_step:1077,_unit_da_tune_count:1077,_unroll_step:1235,_with_node_mappig:1077,_worker:1077,_worker_class:1077,_worker_fn:1077,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,846,855,861,1077,1218,1219,1222,1226],abil:1189,abl:[40,41],about:[785,786,787],abov:[43,1133,1135],above_height:[40,41],abs:[271,519,637,920,1077],absolut:[40,41,920,921],abstractmethod:1077,accept:[15,43,1189],access:[40,41,1232],accord:[40,41,785,786,920,938,957,993,994,1013,1018],accordingli:[801,802,803],accur:[59,372,846,858,859,860,861,896,1021,1183,1187,1197,1199,1200,1202,1203,1205],aco:[729,1055],acosh:[729,1055],across:[40,41,846,855,856,865,866,868,869,870,871,872,878,888,889,920,925,926,928,929,1077,1121,1125],activ:[1151,1152,1153,1154,1155,1156,1157,1189,1193,1194],actual:1232,adam:[1021,1023,1024,1028,1189,1222,1224,1231],adam_step:1021,adam_upd:1021,adapt:[1021,1029,1222,1225],add:[40,41,43,1077,1171,1172,1173,1174,1175,1176,1189,1220,1221,1232],add_fn_to_dict:1183,add_param:1183,added:[43,920,1003,1004,1228,1229],adding:[920,931],addit:[40,41,43,920,946,947,948,1175,1176,1206,1216],adher:43,adjac:[920,923],adopt:[920,939],affect:[920,923],affin:[1220,1221],after:[920,975,1021,1024,1025,1026,1028,1029,1030,1037,1038,1175,1176,1222,1223,1224,1225,1226,1227,1235],after_1:[920,938,1018],after_n:[920,938,1018],again:43,against:[40,41,1044,1047,1050,1140,1142,1143,1144,1145,1146,1147,1148],agnost:[43,1189,1231,1232],aim:1235,algebra:1044,algorithm:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213,1235],align:[40,41,43,920,931],aliv:[846,880,882,886,920,959,984,988],all:[15,16,17,18,19,40,41,43,95,213,389,499,616,801,844,845,846,855,880,886,920,921,922,928,929,939,952,959,965,988,1002,1073,1074,1075,1076,1077,1121,1122,1123,1129,1130,1133,1134,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1168,1189,1232,1235],all_depth:[40,41],all_equ:920,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1121,all_tru:[40,41],alloc:[846,1077],allow:[920,976,977,978,1218,1219],allow_dupl:[920,978],alon:[846,885,895,1077,1189],along:[40,41,43,798,799,801,802,803,846,869,870,871,872,875,876,877,878,890,920,937,942,943,952,957,975,976,977,990,1001,1005,1008,1015,1044,1047,1050,1073,1074,1075,1076,1077,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148],alongsid:[1231,1232],alpha:[1150,1152],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,846,1077],also:[40,41,43,920,923,1021,1024,1073,1074,1075,1076,1121,1122,1123,1129,1130,1158,1167,1206,1216,1231],altern:1231,alwai:[40,41,43,1021,1027,1032],among:[40,41],amount:[846,892,1077,1189],angl:[1055,1056,1061],ani:[15,16,17,18,19,40,41,43,95,213,389,499,616,801,844,845,846,848,851,855,856,858,867,868,871,872,877,920,922,923,927,945,946,947,948,949,950,964,972,978,1003,1004,1021,1025,1077,1121,1122,1125,1129,1130,1131,1132,1133,1137,1189,1195,1196,1218,1219,1231,1232,1235],anoth:[40,41,896,902,1189],another_backend:43,anyth:[43,1235],anywai:43,apart:43,api:[1189,1190],appear:[920,951],append:[40,41,1077],appli:[15,18,19,40,41,789,791,920,946,947,948,1021,1028,1029,1044,1049,1052,1053,1054,1073,1074,1075,1121,1125,1128,1130,1150,1151,1152,1153,1154,1155,1156,1157,1158,1167,1169,1170,1175,1176,1189,1192,1193,1194,1220,1221],applic:[1121,1125,1130,1158,1169,1170,1189,1235],approxim:[43,805,830,1150,1151],arang:[115,271,404,519,637,920,976,977],arbitrari:[40,41,846,875,876,878,1077],arc:[1055,1061],arcco:[1055,1056],arctan:[1055,1060],area:1189,arg:[15,16,17,40,41,43,59,63,846,855,868,872,878,890,920,946,947,948,994,1077,1177,1178,1179,1183,1195,1196,1218,1219],arg_nam:920,arg_stateful_idx:[1177,1178,1179,1183,1218,1219],argmax:[115,404,519,637,920],argmin:[115,404,519,637,920],args_clon:1077,args_dist:1077,args_to_ivi:[15,1189],args_to_n:[15,1189],args_uni:1077,argsort:[92,210,386,496,613,798],argument:[15,16,17,18,19,40,41,42,43,59,63,844,845,846,855,856,868,872,878,920,923,924,932,945,978,994,1055,1056,1077,1121,1125,1195,1196,1218,1219],aris:[1189,1235],arithmet:[43,1140,1143,1146,1148],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,115,271,404,519,637,785,786,787,789,790,791,798,799,801,802,803,830,846,864,865,866,869,870,871,872,875,876,877,878,880,882,886,890,891,896,900,906,911,912,920,921,922,923,925,926,928,929,930,931,933,934,935,936,937,938,940,941,942,943,946,947,948,949,951,952,953,954,955,956,957,958,959,962,964,965,966,967,968,969,970,972,973,974,975,976,977,979,980,981,982,984,985,986,987,988,990,991,992,993,994,999,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1023,1024,1027,1028,1032,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1121,1123,1130,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1189,1190,1206,1214,1215,1217,1222,1226,1231,1232],arrang:[920,946],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,372,374,375,377,378,379,785,786,787,789,790,791,798,799,801,802,803],array_builtin:[43,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843],array_equ:[271,637,920],array_lik:[920,927],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,920],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1189],arraywithgener:[22,1189],arraywithgradi:[24,1189],arraywithimag:[26,1189],arraywithlinalg:[28,1189],arraywithlog:[30,1189],arraywithmath:[32,1189],arraywithmeta:[34,1189],arraywithrandom:[36,1189],arraywithreduct:[38,1189],arriv:[40,41,42],articl:1189,arxiv:1189,as_arrai:[40,41,920,962,999],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[846,864,896,903,904,905,906],as_vari:[40,41],as_zero:[40,41],asarrai:920,asin:[729,1055],asinh:[729,1055],aspect:[1037,1042],assert:[40,41,920,930,1077],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:920,associ:[43,1044,1051],assum:[1232,1235],astyp:896,asynchron:[40,41,42],at_dev:[40,42,846,859,860],at_kei:[40,41],at_key_chain:[40,41],at_nod:1077,atan2:[729,1055],atan:[729,1055],atanh:[729,1055],attent:[1158,1169,1170,1206,1217],attribut:[0,6,40,41,785,786,787,920,987,1020],audienc:[1189,1232],author:1189,avail:[40,41,846,881,883,884,893,920,947,1077],averag:[1021,1023,1024,1028,1073,1074,1075,1140,1143],average_across_step:[1073,1074,1075],avoid:[846,1077,1232],axes:[40,41,43,801,802,803,846,890,920,925,926,938,951,952,1007,1013,1018,1044,1047,1050,1077,1140,1142,1143,1144,1145,1146,1147,1148],axes_length:[40,41,920,946,947,948],axi:[40,41,798,799,801,802,803,846,848,851,858,869,870,871,872,875,876,877,878,890,920,925,926,937,938,941,942,943,951,952,957,975,976,977,990,1001,1002,1005,1007,1008,1015,1018,1044,1050,1077,1133,1139,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1171,1173,1174],axis0:[40,41,920,1007],axis1:[40,41,920,1007],back:[1218,1219,1222,1226],backend:[15,17,19,40,41,372,374,375,377,378,379,846,881,884,893,896,902,910,919,920,967,971,1021,1024,1026,1028,1029,1030,1035,1077,1189,1190,1195,1196,1222,1223,1224,1225,1226,1227,1231,1232,1235],background:[1189,1232],backprop:1235,backward:[801,802,803,1231],band:[920,955],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,372,805,830,846,848,849,850,851,852,853,855,856,858,859,860,861,896,920,960,977,995,1004,1021,1077,1140,1141,1183,1187,1189,1192,1193,1194,1197,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1235],batch:[40,41,846,888,889,920,952,955,965,1037,1041,1044,1049,1073,1074,1075,1076,1077,1158,1167,1175,1176,1220,1221],batch_shap:[920,952,965,985,1037,1038,1039,1040,1041,1042,1043,1044,1051,1133,1134,1158,1168,1169,1170,1206,1215],batch_siz:[1077,1133,1134,1158,1159,1160,1161,1162,1163,1164,1165],bayesian:1235,becaus:[43,920,923],becom:[920,934,1055,1061,1235],been:[920,946,947,948,1133,1134],befor:[40,41,43,846,890,1073,1074,1075,1077,1121,1130,1140,1142,1143,1144,1145,1146,1147,1148,1158,1169,1170,1235],before_1:[920,938,1018],before_n:[920,938,1018],begin:[1121,1122,1129,1232],behaviour:[43,1235],behind:[1021,1024,1026,1028,1029,1030,1189],being:[40,41,43,920,923,989,997,1077],belong:[40,41],below:[43,1189,1232,1235],below_depth:[40,41],benefit:1189,bernoul:[1158,1166,1206,1214],best:[920,978,1189],beta1:[1021,1023,1024,1028,1222,1223,1224],beta2:[1021,1023,1024,1028,1222,1223,1224],beta:[1175,1176],between:[40,41,42,785,786,920,923,1121,1125,1133,1135,1171,1173,1174,1222,1224],bia:[1158,1167,1168,1206,1207,1208,1209,1210,1211,1212,1213,1216],bias_initi:[1206,1207,1208,1209,1210,1211,1212,1213,1216],bilinear:[1037,1038],bilinear_resampl:[154,330,446,566,715,1037],bilinearli:[1037,1038],binari:[1171,1172],binary_cross_entropi:1171,bit:[372,785,786,787,896,907,1037,1039,1043,1189],bitwise_oper:[0,7,8],block:[1189,1232],bool:[15,18,19,40,41,42,43,789,790,798,799,801,802,803,844,845,846,864,877,881,885,890,893,895,896,906,920,922,928,929,942,945,949,950,955,962,964,972,978,999,1001,1015,1016,1017,1021,1024,1025,1026,1027,1028,1029,1030,1032,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1158,1166,1195,1196,1206,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227],both:[43,920,941],bottom:1189,boundari:[40,41,1133,1137],branch:[844,845],brittl:43,broadcast:[40,41,43,801,802,803,805,830,920,931,949,980,981,982,990,1044,1047,1050,1055,1061,1065,1140,1142,1143,1144,1145,1146,1147,1148],broadcast_to:[271,637,920],build:[1077,1189,1206,1217,1218,1219],build_mod:[1206,1217,1218,1219],builder:1189,built:[846,920,923,1077,1206,1217,1218,1219],builtin:43,builtin_ab:[226,805],builtin_add:[226,805],builtin_and:[226,805],builtin_bool:[226,805],builtin_contain:[226,805],builtin_deepcopi:[226,805],builtin_dir:[226,805],builtin_eq:[226,805],builtin_float:[226,805],builtin_floordiv:[226,805],builtin_g:[226,805],builtin_getattr:[226,805],builtin_getattribut:[226,805],builtin_getitem:[226,805],builtin_gt:[226,805],builtin_int:[226,805],builtin_invert:[226,805],builtin_l:[226,805],builtin_lt:[226,805],builtin_mul:[226,805],builtin_n:[226,805],builtin_neg:[226,805],builtin_or:[226,805],builtin_po:[226,805],builtin_pow:[43,226,805],builtin_radd:[226,805],builtin_rand:[226,805],builtin_rfloordiv:[226,805],builtin_rmul:[226,805],builtin_ror:[226,805],builtin_rpow:[226,805],builtin_rsub:[226,805],builtin_rtruediv:[226,805],builtin_rxor:[226,805],builtin_setitem:[226,805],builtin_some_op:43,builtin_sub:[226,805],builtin_truediv:[226,805],builtin_xor:[226,805],bypass:1232,cach:[846,862,920,932],cache_fn:920,calcul:[40,41,42,43,805,830,1055,1065],call:[43,846,890,920,989,997,1014,1021,1025,1077,1121,1122,1125,1129,1206,1217,1218,1219,1222,1226,1232,1235],callabl:[40,41,844,845,846,855,856,890,920,932,945,947,978,1014,1073,1074,1075,1076,1077,1121,1125,1126,1127,1129,1130,1158,1169],can:[43,846,888,889,890,920,991,1037,1039,1077,1189,1231,1232,1235],cancel_join_thread:1077,captur:1189,cast:[40,41,115,271,404,519,637,896,920,937,1037,1039,1043],catch_except:[920,945],categori:43,ceil:[271,637,920,923],cell:[1158,1168,1206,1215],certain:[40,41,920,923,976,977],chain:[40,41,1073,1074,1075,1228,1229],chang:[846,920,991,1077,1121,1123,1130,1189,1231],channel:[920,955,1037,1039,1040,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216],check:[15,16,17,18,19,40,41,846,885,895,896,901,910,919,920,930,950,964,972,1006,1016,1021,1027,1077,1121,1122,1129,1189,1232],check_nest:[1121,1129],check_shap:[40,41],check_submod_ret:[1218,1219],check_typ:[40,41],choic:[1189,1232],choleski:[719,1044],choos:[920,1017,1055,1061,1189],choose_random_framework:59,chosen:[40,41,920,923,1017],chunk:[846,888,889,890,1077],chunk_siz:[846,890,1077],circl:[1055,1056,1058],clark:1189,clear:[846,862,1077],clear_framework_stack:59,clear_mem_on_dev:[629,846],click:1189,clip:[40,41,271,637,920,935,936,980,982,1189],clip_matrix_norm:920,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,920],clipped_delta:1077,clone:[40,41,846,865,866,867,868,1077],clone_arrai:1077,clone_it:1077,clone_nest:1077,clonedit:1077,cloneditem:1077,clonednest:1077,close:[43,1037,1042,1055,1058,1077,1235],closest:[896,901],closest_valid_dtyp:896,code:[40,41,42,43,1189,1190,1231,1232],codebas:[846,888,889,1077,1189,1232,1235],collect:[15,40,41,805,844,846,896,920,1021,1037,1044,1052,1055,1077,1121,1133,1140,1150,1158,1171,1175,1192,1206,1220,1222],color:[40,41,42,1233,1234],column:[920,965],combin:[40,41,42,1037,1042,1189,1235],combined_batch_s:1077,come:1232,command:1189,commit:1235,common:[40,41,1055,1061],common_key_chain:[40,41],commun:[1189,1232],compar:[40,41,920,922,928,929],comparison_oper:[0,9,10],compat:[43,801,802,803,805,830,920,949,991,1055,1065,1189,1235],compil:[271,404,637,1178,1179,1183,1189,1218,1219,1222,1223,1224,1225,1226,1227],compile_graph:[1177,1189,1218,1219,1222,1226],compile_on_next_step:[1218,1219,1222,1223,1224,1225,1226,1227],complet:[40,41,1077],complex:[1232,1235],compon:[920,941],composit:43,comput:[40,41,789,791,846,890,920,935,936,942,943,949,979,1021,1023,1024,1025,1026,1028,1029,1030,1032,1034,1037,1040,1044,1045,1046,1047,1048,1050,1052,1053,1054,1055,1056,1058,1060,1061,1063,1066,1067,1068,1069,1071,1121,1125,1140,1141,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1167,1169,1171,1172,1173,1174],concat:[40,41,846,875,876,877,878,890,920,955,1077],concaten:[40,41,115,271,404,519,637,920,955,1077,1189],concatten:[40,41,846,875,876,877,878,890,1077],condit:[844,845,920,1017,1121,1129],conditon:[1121,1129],config:[40,41,1077],config_list:1077,configur:[40,41],conjunct:1232,connect:[1183,1206,1216,1217],consid:[40,41,1044,1050,1231,1235],consist:[40,41,846,878,1077,1140,1141,1218,1219,1232],constant:[846,855,856,920,938,1077,1121,1125,1171,1172,1173,1174,1175,1176,1197,1198,1202,1205,1218,1219,1220,1221,1232],constant_kwarg:1077,constant_pad:[271,519,637,920],constitu:[40,41],construct:[920,1008,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231],constructor:[40,41,42,920,924,1228,1229],consum:[846,1077],cont_feat_dim:[1158,1169],contaienr:[40,41],contain:[15,18,19,42,43,789,790,798,799,801,802,803,805,830,846,865,869,890,896,900,920,921,925,926,934,935,936,939,949,964,980,982,992,1003,1004,1021,1023,1024,1026,1028,1029,1030,1055,1065,1073,1074,1075,1076,1077,1133,1134,1140,1142,1143,1144,1146,1148,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[637,920],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[920,983,1158,1169,1206,1217],context_dim:[1206,1217],contextmanag:[59,60],continu:[43,1077,1232],contract:[40,41,1140,1141],contribut:[1189,1190],contributor:1189,control:1189,conv1d:[184,360,470,773,1158,1189,1206],conv1d_transpos:[184,360,470,773,1158],conv1dtranspos:[1189,1206],conv2d:[184,360,470,591,773,1158,1189,1206],conv2d_transpos:[184,360,470,773,1158],conv2dtranspos:[1189,1206],conv3d:[184,360,470,591,773,1158,1189,1206],conv3d_transpos:[184,360,470,773,1158],conv3dtranspos:[1189,1206],convent:[40,41,1140,1141],conver:[846,862,873,885,892,895,1077],convers:[16,17,18,19,40,41,1077,1189],convert:[15,16,17,18,19,40,41,43,846,873,874,896,902,908,909,920,1000,1011,1012,1037,1039,1043,1044,1051,1077,1121,1123,1130,1189,1196],convert_dtyp:896,convolut:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],cool:43,cooler:43,coordin:[920,981,1055,1056,1058,1061],copi:[40,41,920,940,1077,1121,1123],copy_arrai:[637,920],copy_nest:1121,core:[805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1189],correct:[43,1189,1232],correctli:[40,41,1044,1047,1050,1055,1061,1140,1142,1143,1144,1145,1146,1147,1148],correspond:[40,41,43,805,830,920,937,1133,1134],cos:[729,920,955,1055,1056,1071,1232],cosh:[729,1055],cosin:[1055,1056,1057,1063,1064],cost:[1021,1023,1024,1026,1028,1029,1030,1073,1074,1075,1076],cost_fn:[1073,1076],could:1235,count:[40,41,801,802,803,1077,1140,1145,1147,1187],cprint:1233,cpu:[40,41,43,846,883,885,891,892,895,920,923,927,957,958,965,976,977,985,986,987,993,994,1019,1020,1077,1133,1134,1135,1136,1137,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229,1231,1232],creat:[40,41,846,855,856,920,923,927,956,957,958,965,976,977,985,986,987,993,994,1010,1019,1020,1021,1034,1077,1133,1134,1135,1136,1137,1189,1195,1196,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1235],create_if_abs:[40,41],create_vari:1197,creation:[40,41,42,43],crop:[1037,1041],crop_siz:[1037,1041],cross:[271,637,920,1171,1172,1173,1174],cross_entropi:1171,cuda:[40,41,846,855,874,891,920,923,927,957,958,965,976,977,985,986,987,993,994,1019,1020,1077,1133,1134,1135,1136,1137,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229],cumprod:[115,271,404,637,920],cumsum:[637,920],cumul:[920,942,943],current:[40,41,42,43,846,855,879,880,882,886,896,902,910,919,920,944,959,967,971,984,988,1077,1121,1122,1129,1189,1235],current_framework:59,current_framework_str:[637,920,1077],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1183,d_in:[1158,1159,1160,1161,1162,1163,1164],d_out:[1158,1159,1160,1161,1162,1163,1164],da_can_termin:1077,da_dim_s:[846,1077],da_direct:1077,da_tune_step:[846,1077],dai:1235,daniel:1189,data:[40,41,42,43,786,787,789,790,801,802,803,805,830,846,848,849,850,851,852,853,858,859,860,874,896,900,901,902,906,907,908,909,910,911,912,919,920,923,927,949,956,965,972,986,987,991,1002,1006,1019,1020,1021,1027,1035,1055,1065,1077,1158,1167,1189],data_format:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],data_type_funct:[372,374,375,785,786,787],dataset:[40,41],datatyp:[40,41,896,901,911,912],dcdw:[1021,1023,1024,1026,1028,1029],debug_info:1183,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1021,1028,1029,1222,1224,1225],decay_lambda:[1021,1028,1029,1222,1224,1225],decid:[40,41,1235],decompos:[1044,1045],decomposit:[1044,1045,1049],decor:43,decrement:[920,968],dedic:[1021,1035,1195,1196],deep:[40,41,1189],deep_copi:[40,41],deeper:[846,868,872,878,1077,1121,1130,1189],deepli:[1121,1123],def:[43,60,79,197,373,483,600,847,854,857,897,898,899,1022,1077,1081,1088,1184,1188,1189,1198,1201,1204,1231,1232,1235],default_dev:43,default_devic:846,default_dtyp:[43,896],default_float_dtyp:896,default_int_dtyp:896,default_key_color:[40,41,42],default_nod:1077,default_v:[920,945],defaultdevic:[846,847],defaultdtyp:[896,897],defaultfloatdtyp:[896,898],defaultintdtyp:[896,899],defer:43,defin:[43,920,941,985,987,1020,1133,1135],degre:[1055,1063,1069,1071],del:1077,delta:[1021,1023,1077,1183],delta_dim_s:1077,delta_percent_mem:1077,delta_sf:1077,delta_util:1077,demo:1189,denomin:[920,954,961,996,1003,1004,1175,1176,1220,1221],dens:[1206,1216],depend:[43,805,830,920,1017,1044,1049,1189],depth:[40,41,846,868,872,878,920,963,985,1077,1121,1130,1183,1187,1218,1219],depth_cutoff:[40,41],depthwis:[1158,1165,1206,1213],depthwise_conv2d:[184,360,470,591,773,1158],depthwiseconv2d:[1189,1206],deriv:[1021,1023,1024,1026,1028,1029,1030,1121,1123,1130,1189,1218,1222,1226,1228],descend:[798,799,1044,1049],descent:[1021,1026,1222,1227],describ:[40,41,1140,1141],design:[1189,1190],desir:[40,41,846,891,896,900,920,923,927,965,966,986,987,1019,1020,1037,1042,1077,1140,1142,1143,1144,1146,1148],desired_aspect_ratio:[1037,1042],desired_percent_increas:1077,detail:1235,detect:[40,41,1121,1122,1129],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,789,790,801,802,803,805,830,846,881,883,884,893,896,900,901,907,910,911,912,919,920,922,923,927,928,929,964,967,971,972,1006,1016,1021,1027,1055,1065,1073,1074,1075,1076,1077,1158,1169],dev:[40,41,42,43,108,265,512,629,846,849,850,852,853,855,856,859,860,862,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,885,886,887,888,889,890,891,892,895,920,923,927,957,958,965,976,977,985,986,987,993,994,1019,1020,1021,1036,1133,1134,1135,1136,1137,1195,1196,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229],dev_clon:[40,41,846],dev_clone_arrai:846,dev_clone_it:846,dev_clone_nest:846,dev_dist:[40,41,846],dev_dist_arrai:846,dev_dist_it:846,dev_dist_nest:846,dev_from_str:[43,108,265,512,629,846],dev_mapp:846,dev_str:[40,41],dev_to_str:[108,265,512,629,846],dev_unifi:846,dev_unify_arrai:846,dev_unify_it:846,dev_unify_nest:846,dev_util:846,devclonedit:846,devcloneditem:846,devclonednest:846,devdistit:846,devdistitem:846,devdistnest:846,develop:[1189,1232,1235],deviat:[40,41,1133,1136,1140,1146,1175,1176,1220,1221],devic:[21,40,41,43,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,920,923,927,956,957,958,965,976,977,985,986,987,993,994,1019,1020,1021,1036,1133,1134,1135,1136,1137,1189,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229],devmanag:[846,854],devmapp:[846,856],devmappermultiproc:846,diag:[1044,1049],diagon:[920,965],dict:[15,16,17,18,19,40,41,42,846,848,851,855,856,858,868,869,870,871,872,920,946,947,948,978,1073,1074,1075,1077,1121,1123,1124,1125,1128,1130,1195,1196],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,785,786,846,865,866,869,870,1077,1158,1167,1189,1232,1235],differenti:[1189,1232],dilat:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],dim:[40,41,43,920,985,1037,1038,1042,1044,1049,1077,1206,1217],dim_siz:[40,41,846,1077],dimens:[40,41,42,801,802,803,846,877,920,931,937,941,946,947,948,951,955,962,975,985,990,991,1001,1002,1005,1013,1015,1037,1041,1044,1047,1049,1050,1073,1074,1075,1076,1077,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1168,1171,1173,1174,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217],dimension:[40,41,801,802,803,920,1001,1002,1044,1049],direct:1077,directli:[43,1121,1130,1232,1235],directori:[920,998,1009],discret:[1171,1173],disk:[40,41,1037,1039],distanc:[920,923],distribut:[40,41,846,865,869,870,871,872,1077,1133,1134,1135,1136,1137,1158,1166,1206,1214,1218,1219],distribute_nest:1077,distributedarrai:[40,41],distrubt:[1171,1173],dive:[1189,1232],divid:[40,41,920,1001,1003,1055],dividend:[1055,1065],divis:[920,954,961,996,1003,1004,1021,1023,1024,1028,1055,1065,1222,1223,1224],divisor:[1021,1023,1024,1028,1055,1065,1222,1223,1224],doc:1189,docstr:43,doe:[40,41,43,920,923,1001,1231],doesn:1189,doing:43,domain:[1055,1056],don:1189,door:1235,dot:[1044,1046,1158,1169,1170,1206,1217],down:1231,downscal:[920,935,936],drag:[1189,1235],draw:[1133,1134,1136,1137],drawn:[1133,1134,1135,1136,1137],drop:[1189,1235],dropout:[1158,1189,1206,1217],dropout_r:[1206,1217],ds_tune_step:846,dtype:[40,41,43,115,271,372,374,375,404,519,637,785,786,787,900,901,902,903,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,923,927,956,965,985,986,987,1019,1020],dtype_bit:[115,271,404,519,637,896],dtype_from_str:[43,115,271,404,519,637,896],dtype_in:[896,902,907,908,909,910,911,912,919],dtype_to_str:[115,271,404,519,637,896],duplic:[40,41],dure:[40,41,43,844,845,920,1014,1021,1023,1024,1028,1073,1074,1075,1076,1218,1219,1222,1223,1224,1226],dynam:[844,845],each:[40,41,42,43,789,790,798,799,805,830,846,855,856,865,866,867,868,869,870,871,877,889,890,920,921,922,938,949,990,1001,1005,1008,1018,1021,1024,1026,1028,1029,1030,1037,1040,1044,1049,1055,1058,1065,1067,1068,1077,1121,1125,1133,1134,1140,1141,1158,1159,1160,1161,1162,1163,1164,1165,1166,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1232],eager:1232,easi:1235,easili:1189,econom:1235,ecosystem:1189,edg:[920,934,938,1018],effect:[1021,1030],effective_grad:[1021,1030],effici:1235,einop:[40,41,920,946,947,948],einops_rearrang:[40,41,920],einops_reduc:[40,41,920],einops_repeat:[40,41,920],einstein:[40,41,1140,1141],einsum:[40,41,170,348,458,581,753,1140],either:[40,41,920,945,978,981,983,1073,1074,1075,1076,1077,1206,1217,1218,1219,1232],eleg:1077,element:[40,41,43,789,790,791,798,799,801,802,803,805,830,846,867,871,877,896,900,920,921,923,925,926,928,929,933,934,935,936,942,943,949,952,953,954,965,966,980,982,990,992,1001,1012,1017,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1140,1141,1143,1145,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1166,1206,1214],elementwis:[40,41],elementwise_affin:[1220,1221],elementwise_funct:[377,378,379,789,790,791],elemtn:[1133,1134],elif:1077,els:[920,930,945,950,1077],elsewher:[920,1017],emphas:1189,empti:[40,41,1077],enabl:[40,41,42,1189],encapsul:[785,787],encod:[920,955,1037,1039],end:[920,923,1189,1232],ensur:43,entir:[40,41,801,802,803,846,890,1077,1189,1206,1215],entri:[40,41,920,952,976,977,1001,1002],entropi:[1171,1172,1173,1174],enumer:1077,environ:1189,eps:[372,785,786],epsilon:[1021,1023,1024,1028,1171,1172,1173,1174,1175,1176,1220,1221,1222,1223,1224],equal:[40,41,519,637,789,790,920,922,928,929,938,1001,1018,1055,1063,1069,1071,1133,1137],equality_matrix:[920,922],equat:[40,41,1140,1141],equival:[920,923,1055,1071],erf:[454,729,1055],error:[40,41,846,920,1002,1055,1066,1077,1150,1151,1218,1219,1222,1226],essenti:43,etc:[40,41,43,846,891,920,923,927,957,958,965,976,977,985,986,987,993,994,1019,1020,1077,1133,1134,1135,1136,1137,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229,1235],evalu:[40,41,801,802,803,920,981,1121,1122,1129],even:1235,evenli:[40,41,920,923,976,977,1001],everi:[920,922,1235],exact:[40,41],exampl:[43,844,845,920,934,1005,1189,1231,1232,1235],example_input:[844,845],exc_tb:1077,exc_typ:1077,exc_val:1077,exce:[920,982],except:[40,41,44,47,801,802,803,920,923,930,937,945,1014,1077],excess_s:1077,excit:[1189,1232],exclud:[59,61,920,923,1133,1137],exclus:[40,41,920,942,972,1021,1027,1133,1135],execut:[43,920,1014,1232],execute_with_gradi:[151,325,441,561,709,1021,1189,1231],exist:[40,41,920,945,1077,1189,1222,1226,1235],exp:[729,1055],expand:[40,41,920,951,955],expand_dim:[40,41,271,637,920,1077],expect:[920,924],explain:1232,explicitli:[1206,1215,1217,1218,1219,1232],expon:[43,805,830,920,1004],exponenti:[43,805,830,1055,1066,1067],expos:[920,927,939],express:[920,981],exsit:[40,41],extend:43,extra:[40,41,42,1021,1025],eye:[1044,1046],fabian:1189,fabio:1189,factor:[846,855,888,889,890,1021,1023,1024,1028,1029,1044,1049,1077,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213,1222,1223,1224,1225],falck:1189,fall:[1218,1219,1222,1226],fallback_to_non_compil:[1218,1219,1222,1226],fals:[15,18,19,40,41,42,59,66,67,68,69,70,789,790,798,799,801,802,803,846,864,877,885,890,895,896,903,904,905,906,920,922,942,945,950,955,962,972,978,999,1001,1015,1017,1021,1024,1025,1026,1027,1028,1029,1030,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1140,1142,1143,1144,1145,1146,1147,1148,1177,1178,1179,1183,1187,1195,1196,1218,1219,1222,1223,1224,1225,1226,1227],fan_in:1197,fan_mod:1197,fan_out:1197,far:[1121,1122,1129,1231],faster:[844,845],favourit:[1189,1231],feasibl:1235,feat_dim:[1158,1169,1170],fed:[846,890,1077],feed:[846,890,1077],field:1235,file:[40,41,43,920,998,1009,1218,1219],filepath:[40,41],fill:[40,41,920,956,986,1019,1133,1135],fill_valu:[920,956],filter:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213,1235],filter_s:[1206,1207,1208],filter_shap:[1206,1209,1210,1211,1212,1213],find:[40,41,1235],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,196,197,372,373,482,483,599,600,785],finish:[1189,1235],finit:[789,790],first:[40,41,844,845,846,877,920,928,937,941,949,976,977,1005,1007,1021,1025,1044,1049,1073,1074,1075,1076,1077,1121,1122,1129,1133,1139,1140,1145,1147,1206,1217,1218,1219,1222,1226,1232,1235],firstlayersiren:[1189,1197],firstli:[1232,1235],fist:[846,890,1077],fit:[40,41,920,990,1037,1042],fkt:1235,flag:[40,41,1021,1027],flat:[40,41,43,920,990,993],flat_list:[40,41],flatten:[40,41,920,955,990,1044,1050,1140,1142,1143,1144,1146,1148],flatten_key_chain:[40,41,1218,1219],flexibl:[1189,1232],flip:[40,41,115,271,404,519,637,920],float32:[43,896,900,908,909,920,923,927,965,986,987,1019,1020],float_dtyp:[896,904,914],float_img_to_uint8_img:1037,floor:[271,637,920,954,1077],floormod:[271,637,920],fluid:1235,fname:[1177,1179,1183,1218,1219],folder:[43,1189],follow:[40,41,43,785,787,846,890,920,968,969,970,1003,1004,1021,1024,1026,1028,1029,1030,1077,1121,1125,1130,1158,1169,1170,1189,1206,1216,1222,1226],followng:[785,786],fomaml_step:1073,forget:[1021,1023,1024,1028,1222,1223,1224],fork:[920,983],forkserv:[920,983,1077],form:[15,16,17,18,19,40,41,920,927,1021,1024,1026,1028,1029,1030,1121,1123,1130,1158],format:[40,41,43,846,864,896,900,902,906,920,923,927,965,986,987,1019,1020,1077,1140,1141,1189,1231,1232],format_fn:[40,41],format_key_chain:[40,41],forward:[1218,1219,1222,1226,1231],found:[40,41,42],fourier:[920,955],fourier_encod:920,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,93,96,97,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,203,211,214,215,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,331,332,333,335,336,337,338,340,341,344,345,346,347,349,350,351,352,353,354,355,356,359,361,362,363,364,365,366,367,373,374,375,378,379,387,390,391,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,442,443,444,445,447,448,449,451,452,455,457,459,460,461,462,463,464,465,468,469,471,472,473,474,475,476,477,483,484,485,488,489,497,500,501,513,514,515,516,517,518,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,592,593,594,600,601,602,605,606,614,617,618,630,631,632,633,634,635,636,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,710,711,712,713,714,716,717,718,720,721,722,723,724,725,727,728,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,747,748,749,750,751,752,754,755,756,757,758,759,760,763,764,765,766,767,768,769,771,772,774,775,776,777,778,779,780,786,787,790,791,798,799,802,803,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1178,1179,1181,1182,1184,1188,1189,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1234,1235],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1077,framewrk:[920,983],freeli:43,frequenc:[920,955],from:[40,41,42,43,798,799,801,802,803,846,855,856,890,896,902,920,945,952,957,958,965,991,1002,1010,1017,1021,1024,1028,1037,1041,1073,1074,1075,1076,1077,1121,1123,1130,1133,1134,1135,1136,1137,1140,1145,1147,1158,1166,1169,1189,1195,1196,1206,1214,1217,1222,1226,1231,1232],from_cal:[1218,1219],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[115,271,404,519,637,785,786,920,1189],full_matric:[1044,1049],fulli:[43,1189,1206,1216,1217,1231],func:[40,41,844,845,846,890,920,932,1021,1025,1077],further:1235,furthermor:1235,futur:1235,gain:1197,gamma:[1175,1176],gather:[40,41,115,271,404,519,637,920,958],gather_nd:[40,41,115,271,404,519,637,920],gauss:[1055,1066],gaussian:[1150,1151],geglu:[1189,1192],gelu:[358,467,762,1150,1189,1192],gener:[23,40,41,43,844,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1027,1133,1135,1137,1138,1189,1222,1226],geometr:[920,955],get:[40,41,785,786,787,846,855,856,864,879,880,885,889,892,895,896,906,907,920,924,959,960,961,989,1077,1187,1189,1206,1215,1235],get_all_arrays_in_memori:920,get_all_arrays_on_dev:846,get_framework:59,get_initial_st:[1206,1215],get_min_bas:920,get_min_denomin:920,get_mod_kei:[1218,1219],get_num_dim:[637,920],get_param:1183,get_param_recurs:1183,get_referrers_recurs:920,getfullargspec:1077,gist:1189,give:[798,799,920,991,1232],given:[40,41,43,798,799,846,879,885,888,889,890,892,895,896,900,920,923,927,934,942,943,952,958,976,977,986,987,990,993,994,1001,1008,1013,1015,1019,1020,1021,1023,1024,1026,1028,1029,1030,1044,1046,1051,1055,1056,1077,1121,1126,1127,1133,1136,1137,1139,1140,1143,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1195,1196,1235],global:[40,41,42,846,855,856,863,888,889,890,896,903,904,905,920,944,960,961,989,995,996,997,1003,1004,1021,1036,1077,1175,1176,1181,1182,1189,1220,1221],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1189,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216],got:1189,gpu0:43,gpu2:43,gpu:[846,881,884,1077],gpu_is_avail:[846,1077],grad:[1189,1222,1226,1231],gradient:[25,40,41,846,890,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1040,1073,1074,1075,1076,1189,1222,1223,1224,1225,1226,1227,1231,1235],gradient_descent_upd:[1021,1073,1074,1075,1076],gradient_imag:[154,330,446,566,715,1037],gradienttrack:[1021,1022],graph:[1021,1024,1026,1028,1029,1030,1177,1178,1179,1184,1189,1218,1219],graph_compil:[1177,1178,1179,1180,1181,1182,1183,1187],greater:[40,41,920,923,953,1002,1133,1137],green:[40,41,42,1233,1234],grid:[920,981],group:[1037,1042],guid:[1189,1190,1235],gym:1189,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1235,half:[920,923,1077,1133,1137],hand:1189,handl:[40,41,42,43,844,845,846,862,864,873,874,885,892,895,1021,1024,1026,1028,1029,1030,1077,1222,1223,1224,1225,1226,1227],has:[40,41,43,920,1005,1055,1060],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,920],hasattr:1077,have:[40,41,43,785,786,789,790,801,802,803,805,830,920,937,941,946,947,948,949,956,1005,1021,1027,1035,1044,1049,1055,1065,1077,1189,1231,1232],hdf5:[40,41,1218,1219],head:[1158,1169,1206,1217],head_dim:[1206,1217],height:[1037,1042],height_cutoff:[40,41],help:[59,372,846,858,859,860,861,896,1021,1183,1187,1189,1197,1199,1200,1202,1203,1205],helper:1189,here:[43,1189],hidden:[1158,1168,1206,1215],hierarch:[920,939],hierarchi:[40,41],high:[40,41,1133,1135,1137],higher:[1021,1024,1026,1028,1029,1030,1044,1049],highest:[1133,1135],highest_util:1077,highest_util_nod:1077,highli:1189,highlight:1235,highlight_subgraph:[1177,1179,1183],hint:43,hkt:1235,hold:[896,900,920,923,927,993,994],host:1189,hot:[920,985],how:[1189,1206,1217,1218,1219,1232,1235],howev:[43,1232],http:1235,hyperbol:[1055,1057,1059,1062,1064,1070,1072,1150,1157],hypothet:1235,icon:1189,idea:1189,ident:[40,41,43,115,271,404,519,637,920],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[785,786],if_exist:[40,41],ignor:[40,41,1222,1226],ignore_key_error:[40,41],ignore_miss:[1222,1226],ignore_non:[40,41],iinfo:[78,196,372,482,599,785],imag:[27,920,975,1038,1039,1040,1041,1042,1043,1158,1159,1160,1161,1162,1164,1165,1189,1235],image_dim:[1037,1041],imkkhk:1235,immedi:[1189,1232,1235],implement:[43,805,830,1189,1232,1235],in_featur:[1158,1167],includ:[40,41,43,801,802,803,920,923,964,1003,1004,1016,1121,1122,1133,1137,1206,1216,1217,1220,1221,1231],include_deriv:[1121,1123,1130],include_empti:[40,41],include_gener:[1177,1178,1179,1183,1218,1219],include_inf:[40,41,920,964,1016],include_nest:[1121,1122],include_self:[40,41],inclus:[1133,1135],incom:[1158,1167],increas:[846,868,872,878,920,938,951,1018,1077,1121,1130],increasingli:1235,increment:[920,969,1077],increment_param_count:1183,inde:1189,indent:[40,41,42],independ:[1133,1134],index:[40,41,920,925,926,957,958,981,1002,1005,1121,1124,1126,1127,1128,1131],index_nest:1121,indic:[40,41,798,799,920,925,926,957,958,966,985,993,994,1121,1122,1124,1126,1127,1128,1129,1131,1132,1133,1134,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1175,1176,1206,1207,1208,1209,1210,1211,1212,1213,1218,1219],indices_wher:[115,271,404,637,920],inevit:1235,inf:[40,41,920,964,973,1016,1055,1060],infer:[798,799,844,845,920,952,962,965,991,999,1037,1041,1232,1235],infin:[789,790,920,973],inform:[785,786,787,1021,1032],init_c:[1158,1168],init_h:[1158,1168],init_on_first_step:[1222,1226],initi:[40,41,42,59,372,846,858,859,860,861,896,1021,1077,1158,1168,1183,1187,1189,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1222,1226],initialz:[1218,1219],inner:[1073,1074,1075,1076],inner_batch_fn:[1073,1074,1075],inner_batch_shap:[1158,1167],inner_cost_fn:[1073,1074,1075],inner_grad_step:[1073,1074,1075,1076],inner_learning_r:[1073,1074,1075,1076],inner_optimization_step:[1073,1074,1075,1076],inner_v:[1073,1074,1075],inp:1077,inplac:[40,41,920,930,967,971,1006,1021,1024,1026,1028,1029,1030,1195,1196,1222,1223,1224,1225,1226,1227],inplace_arrays_support:920,inplace_decr:[115,271,404,519,637,920],inplace_incr:[115,271,404,519,637,920],inplace_oper:[0,11,12],inplace_upd:[40,41,115,271,404,519,637,920,1195,1196],inplace_variables_support:920,input:[15,18,19,40,41,42,43,789,790,791,798,799,801,802,803,844,845,846,855,856,863,864,865,868,869,872,878,890,891,896,900,901,903,904,905,906,907,911,912,920,921,922,925,926,928,929,930,931,933,934,935,936,937,938,940,942,943,945,946,947,948,949,950,951,952,953,954,955,962,964,965,966,968,969,970,972,973,974,975,979,980,981,982,990,992,999,1000,1002,1005,1006,1007,1008,1010,1011,1012,1013,1015,1016,1018,1021,1025,1027,1032,1036,1037,1038,1039,1040,1041,1043,1044,1047,1049,1050,1052,1053,1054,1055,1057,1059,1060,1062,1063,1064,1065,1069,1070,1071,1072,1073,1074,1075,1076,1077,1133,1134,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1176,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220,1221,1232],input_ax:[846,890,1077],input_channel:[1206,1207,1208,1209,1210,1211,1212,1215,1216],input_queu:1077,inputs_split:1077,insert:[920,951],insid:43,inspect:1077,inspir:1235,instal:1189,instanc:[15,16,17,18,19,40,41,43,805,830,846,855,1077,1195,1196,1228,1229],instead:[40,41,1140,1142,1143,1144,1145,1146,1147,1148,1235],int32:43,int64:[896,900,920,923,927,965,986,987,1019,1020],int_dtyp:[896,905,915],integ:[40,41,785,787,801,802,803,896,912,920,923,933,953,992,1001,1044,1050,1133,1135,1138],integr:1189,intend:43,inter:1189,interchang:[40,41,920,1007],interest:1189,interfac:[920,927,1232],intermedi:[40,41],intern:[40,41,846,1021,1035,1077,1121,1122,1129,1130,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1228,1229],interpol:[920,975],intersect:[1055,1056],interv:[40,41,801,802,803,920,923,934,976,977,1055,1058,1133,1137],introduc:1235,inv:[719,1044,1235],invalid:[801,802,803],invalid_dtyp:896,invers:[1044,1046,1048,1055,1056,1057,1058,1059,1060,1062,1235],invert:[1044,1046,1048],invest:1235,invoc:[844,845],irrespect:1189,is_al:1077,is_arrai:[115,271,404,519,637,920,1077],is_float_dtyp:896,is_int_dtyp:896,is_mean:1077,is_sum:1077,is_var:[1183,1187],is_vari:[151,325,441,561,709,1021],isfinit:[83,201,377,487,604,789],isinf:[271,519,637,920],isinst:1077,isnan:[271,519,637,920],isnumer:1077,item:[15,19,40,41,805,817,818,846,855,856,858,865,867,869,871,877,896,903,920,939,963,1003,1004,1077,1121,1125,1126,1127,1130,1131,1132,1189,1218,1219,1231],iter:[15,16,17,18,19,40,41,42,844,845,846,849,850,852,853,855,856,859,860,867,869,870,871,872,877,890,920,922,931,937,938,952,965,981,986,990,991,994,999,1001,1005,1008,1013,1018,1019,1077,1121,1122,1123,1125,1129,1130],iterbal:[846,867,871,877,1077],its:[798,799,846,890,920,965,991,1007,1013,1077,1189],itself:[43,1121,1130],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,372,374,375,377,378,379,785,786,787,789,790,791,798,799,801,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1187,1189,1190,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1233,1234],ivy_backend:[40,41],ivy_bay:1235,ivyfcmodel:1231,ivyh:[40,41,42],ivymodul:[181,770],jame:1189,jax:[1021,1027,1189,1235],jax_concat:1189,jnp:1189,join:[40,41,920,937,1005,1077],journal:1189,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1189,1206,1215,1235],kaimingnorm:[1197,1201],kalman:1235,kalman_filt:1235,kalman_filter_step:1235,kalman_filter_upd:1235,keep:[40,41,846,891,920,1015,1077,1189,1235],keep_inner_v:[1073,1074,1075],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1073,1074,1075],keepdim:[40,41,801,802,803,920,1015,1044,1047,1050,1140,1142,1143,1144,1145,1146,1147,1148],kei:[15,16,17,40,41,42,805,810,846,858,920,939,1073,1074,1075,1077,1121,1124,1128,1158,1169,1170,1189,1195,1196,1206,1217,1222,1226],kept:[40,41,42,1073,1074,1075],kera:1235,kernel:[1158,1168],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,846,855,856,868,872,878,920,924,946,947,948,978,1077,1121,1125,1218,1219],keyword_color_dict:[40,41,42],kind:[785,786,787,1235],kwarg:[15,16,17,40,41,42,59,63,846,855,868,872,878,920,978,1077,1177,1178,1179,1183,1195,1196,1218,1219],kwarg_stateful_idx:[1177,1178,1179,1183,1218,1219],kwargs_clon:1077,kwargs_dist:1077,kwargs_uni:1077,label:[1171,1172,1173,1174],lamb:[1021,1028,1189,1222],lamb_upd:1021,lambda:[1077,1222,1225,1227,1231],lar:[1021,1028,1029,1189,1222],larger:[785,786,920,934],largest:[40,41,785,786,787,920,925,953],lars_upd:1021,last:[40,41,801,802,803,920,923,941,975,1001,1005,1044,1047,1049,1140,1145,1147,1150,1155,1158,1168,1206,1216],later:[40,41,920,932],latest:[1206,1215],layer:[1021,1024,1026,1028,1030,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1176,1189,1197,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229,1235],layer_norm:1175,layernorm:[1189,1220],layerwis:[1021,1029,1222,1225],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1121,1122,1129],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1150,1151,1152],leaky_relu:[762,1150],learn:[798,799,1021,1024,1026,1028,1029,1030,1073,1074,1075,1076,1133,1139,1189,1222,1223,1224,1225,1226,1227,1232,1235],learnabl:[1175,1176,1220,1221],leav:[15,18,19,40,41,1121,1122,1123,1129,1130],left:[40,41,1044,1047,1050,1140,1142,1143,1144,1145,1146,1147,1148,1189],leftmost:[40,41],len:1077,length:[40,41,42,920,923,991,1002,1013],lenton2021ivi:1189,lenton:1189,less:[40,41,43,920,933,1077,1133,1137],less_util_node_str:1077,let:[1232,1235],level:1189,librari:[1189,1231,1235],lightweight:1189,like:[43,1021,1027,1133,1137,1189,1231,1232,1235],limit:[40,41,42,785,786,787,920,934,935,936],linalg:[29,1045,1046,1047,1048,1049,1050,1051,1189],linear0:[1189,1231],linear1:1189,linear2:1231,linear:[920,955,975,1044,1150,1151,1152,1153,1158,1166,1189,1206,1207,1208,1209,1210,1211,1212,1213,1231],linear_resampl:[115,271,404,519,637,920],linearli:[920,955],link:1189,linspac:[115,271,404,519,637,920,923],list:[15,18,19,40,41,43,801,802,803,846,855,856,865,866,868,869,870,872,875,876,890,920,923,927,929,981,1000,1001,1010,1015,1073,1074,1075,1077,1121,1122,1123,1125,1129,1130,1158,1159,1160,1161,1162,1163,1164,1165,1189,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213],list_join:[40,41,42],list_stack:[40,41],littl:1232,load:[40,41],loaded_kwarg:1077,loader:1189,local_set:[920,963],locat:[43,920,973,974,1133,1134],log:[729,920,977,1055,1077,1171,1172,1173,1174,1189],log_all_op:1183,log_global_inference_abs_tim:[1180,1189],log_global_inference_rel_tim:[1180,1189],logarithm:[1055,1068],logic:[31,789,791,801,802,803,1053,1054,1189],logical_and:[339,726,1052],logical_not:[83,201,377,487,604,789],logical_or:[339,726,1052],logit:[1171,1174],logspac:[115,271,404,519,637,920],look:[43,1232,1235],loop:[1073,1074,1075,1076],loss:[1172,1173,1174,1189,1231],loss_fn:[1189,1231],lot:1232,low:[40,41,1133,1135,1137],lower:[40,41,920,980,1133,1137],lower_depth:[1218,1219],lowest:[15,18,19,40,41,1121,1130,1133,1135],lstm:[1158,1168,1189,1206],lstm_updat:[43,1158],machin:[785,786,787,798,799,1133,1139,1189,1232,1235],mai:[920,923,945,949,1189,1232,1235],main:[920,965,1189],mainli:1189,make:[43,846,1077,1189,1232],maml:[1073,1074,1075],maml_step:1073,manag:[846,1077],mani:[40,41,43,920,1001,1189],manner:[15,18,19,40,41,43,1121,1130],manual:[1121,1122,1129,1235],map:[40,41,42,846,855,920,973,974,1077,1121,1126,1127,1130,1206,1217,1231],map_cont:[40,41],map_nest_at_index:1121,map_nest_at_indic:1121,map_sequ:[40,41],mapper:[846,855,856,1077],mask:[1158,1169,1170],match:[40,41,920,978],match_kwarg:920,math:[33,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1189],mathbb:[1044,1051],mathbf:[1044,1051],matmul:[43,271,519,637,920,1235],matplotlib:1232,matric:[1158,1167],matrix:[40,41,920,922,935,979,1044,1045,1046,1047,1048,1051,1158,1167,1206,1216],matrix_norm:[40,41,158,334,450,570,719,1044],matter:1189,max:[40,41,372,785,786,787,920,935,936,947,980,993,994,1077,1140,1142,1222,1224],max_batch_s:[40,41],max_chunk_s:[846,890,1077],max_depth:[40,41,846,850,853,860,868,872,878,920,963,1077,1121,1130],max_dev_dim_step_ratio:846,max_freq:[920,955],max_length:[40,41],max_node_dim_step_ratio:1077,max_norm:[40,41,920,935,936],max_split_factor_step_s:[846,1077],max_trust_ratio:[1021,1028,1222,1224],maxim:[1189,1232,1235],maximis:1189,maximum:[40,41,42,637,846,868,872,878,890,920,925,934,935,936,955,1021,1028,1077,1121,1130,1140,1142],mayb:[15,18,19],mdi:1077,mean:[40,41,846,875,876,877,878,890,920,947,1073,1074,1075,1076,1077,1121,1125,1133,1136,1140,1143,1146,1148,1197,1231,1235],measur:[1158,1169,1206,1217],mech:1189,mechan:[1189,1235],medic:1235,memori:[846,862,885,890,892,895,1077,1158,1168,1189],meshgrid:[271,637,920],messag:[1233,1234],meta:[35,1074,1075,1076,1189],method:[40,41,42,43,920,927,939,981,993,994,1021,1028,1029,1077,1121,1122,1129,1130,1189,1206,1217,1218,1219,1232],might:[920,945,1235],min:[40,41,372,785,786,787,920,947,982,993,994,1003,1077,1140,1144],min_bas:[920,1004],min_denomin:[920,1003],min_dev_dim_s:846,min_node_dim_s:1077,min_sf_tune_step:[846,1077],min_unit_dev_tune_step:846,min_unit_node_tune_step:1077,mind:1189,mini:[1175,1176,1220,1221],minimum:[40,41,637,846,896,900,920,923,926,927,934,960,961,995,996,1003,1004,1077,1140,1144],miss:[1222,1226],ml_framework:[798,799,920,923],mod:[920,954],mod_depth:[1218,1219],mod_height:[1218,1219],mod_with_top_mod_key_chain:[1218,1219],mode:[40,41,844,845,846,875,876,877,878,890,1044,1049,1077,1232],model:[1189,1231],modul:[40,41,42,59,920,983,1077,1189,1190,1192,1193,1194,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220,1221,1228,1229,1235],moment:[1021,1023,1024,1028,1222,1223,1224],more:[43,920,1005,1077,1189,1232,1235],more_util_node_str:1077,most:[40,41,43,1189,1235],move:[40,41,43,846,891,1077],much:[1189,1235],multi:[920,983,1158,1169,1206,1217],multi_head_attent:1158,multi_index_nest:1121,multi_map:[40,41],multi_nod:1077,multidev:[846,857,858,859,878],multidevcontain:[40,41],multidevic:[846,855],multidevit:[846,849,852,855,856,860],multidevitem:[846,848,851],multidevnest:[846,850,853],multiheadattent:[1189,1206],multinod:[1077,1081],multinodecontain:1077,multinodeit:1077,multinodeitem:1077,multinodenest:1077,multinomi:[163,343,456,576,746,1133],multipl:[40,41,801,802,803,920,978,1001,1044,1046,1140,1142,1143,1144,1145,1146,1148,1175,1176,1206,1216,1232],multipli:[40,41,920,942,1140,1145],multiprocess:[40,41,42,637,846,855,920,1077],must:[40,41,42,43,789,790,801,802,803,805,830,846,875,876,877,878,890,920,923,937,939,941,949,980,982,994,1005,1055,1061,1065,1077,1133,1138,1222,1226],mutabl:[1121,1123,1130],mutlidevic:[846,855],mutlinod:1077,mw_tm1:[1021,1024,1028],mx_concat:1189,mxnet:[43,1189,1235],my_func:43,mymodel:1189,name:[844,845,1177,1178,1179,1183,1231],namespac:[43,1232],nan:[40,41,789,790,920,964,974,1016],nativ:[15,17,18,19,40,41,43,846,862,864,873,874,885,892,895,896,901,908,909,1077,1189,1190,1195,1196],native_modul:[1195,1196],native_module_class:[1195,1196],nativearrai:[15,18,19,43,785,786,787,789,790,798,799,801,802,803,805,830,846,864,890,891,896,900,906,911,912,920,921,922,923,925,926,927,928,929,931,933,934,935,936,937,938,940,941,942,943,946,947,948,949,951,952,953,954,955,957,958,962,964,965,966,973,974,975,976,977,979,980,981,982,985,986,987,990,991,992,993,994,999,1001,1002,1005,1007,1008,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1077,1121,1123,1130],natur:[1055,1068,1235],ncdhw:[1158,1163,1164,1206,1211,1212],nchw:[1158,1161,1162,1165,1206,1209,1210,1213],ncw:[1158,1159,1160,1206,1207,1208],ndarrai:[43,372,374,375,377,378,379,920,1011],ndhwc:[1158,1163,1164,1206,1211,1212],nearest:[920,992],need:[43,920,935,936,1158,1160,1162,1164,1189,1206,1208,1210,1212,1235],neg:[40,41,789,790,801,802,803,1140,1145,1147,1150,1152],negative_slop:1197,neither:1077,nest:[15,16,17,18,19,40,41,42,846,868,872,878,920,927,1010,1073,1074,1075,1077,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1218,1219,1222,1223,1224,1225,1226,1227],nested_indices_wher:1121,nested_map:[1077,1121],network:[1158,1167,1189,1190,1192,1206,1218,1219,1235],neural:[1158,1189,1192,1206,1231],new_node_percent_mem:1077,new_node_util:1077,new_node_utils_kei:1077,new_std:[1175,1176,1220,1221],newli:[844,845,920,931,932],newlin:[40,41,42],newshap:[920,931,991],next:[785,786,1077,1218,1219,1222,1223,1224,1225,1226,1227],nhwc:[1158,1161,1162,1165,1206,1209,1210,1213],node:[40,41,1121,1122,1129],node_clon:1077,node_dist:1077,node_dist_arrai:1077,node_dist_it:1077,node_in:1077,node_mapp:1077,node_str:1077,node_to_str:1077,node_util:1077,nodedistit:1077,nodedistitem:1077,nodedistnest:1077,nodemanag:[1077,1088],nodemapp:1077,nodemappermultiproc:1077,noinspect:[43,847,897,898,899,1022,1077,1184],non:[40,41,801,802,803,844,845,896,910,1218,1219,1222,1226,1232],none:[40,41,42,43,59,61,64,785,786,787,798,799,801,802,803,844,845,846,855,856,862,863,888,889,890,891,896,903,904,905,920,923,927,944,945,950,952,956,957,958,963,965,967,968,969,970,971,976,977,983,985,986,987,990,993,994,995,996,1001,1002,1003,1004,1013,1014,1019,1020,1021,1024,1026,1028,1029,1030,1036,1037,1041,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1125,1129,1130,1133,1134,1135,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1160,1162,1164,1167,1168,1169,1170,1175,1176,1177,1178,1179,1183,1187,1195,1196,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],norm:[40,41,920,935,936,1044,1047,1050,1176,1189,1221,1222,1224],normal:[1133,1136,1175,1176,1220,1221],normalized_idx:[1175,1176],normalized_shap:[1220,1221],notat:[40,41,1140,1141],note:43,noth:[40,41,1232],notimplementederror:1077,now:[40,41,846,891,920,921,1077,1189,1206,1217,1218,1219,1231,1232,1235],np_concat:1189,np_finfo:372,ns_tune_step:1077,num:[920,976,977],num_arrai:[40,41],num_arrays_in_memori:920,num_arrays_on_dev:846,num_band:[920,955],num_channel:[1206,1213],num_chunk:1077,num_chunks_floor:1077,num_class:[1133,1134],num_cpu_cor:846,num_gpu:[108,846,1077],num_head:[1158,1169,1206,1217],num_kei:[1158,1169,1170],num_lay:[1206,1215],num_or_size_split:[40,41,920,1001],num_output:1077,num_queri:[1158,1169,1170],num_sampl:[920,975,1037,1038,1133,1134],num_task:[1073,1074,1075,1076],number:[40,41,42,785,786,787,801,802,803,844,845,846,882,883,884,896,907,911,912,920,923,934,938,951,955,962,965,974,975,976,977,980,984,990,1001,1008,1012,1016,1018,1044,1049,1073,1074,1075,1076,1077,1133,1134,1138,1140,1142,1143,1144,1146,1148,1158,1169,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1232,1235],numer:[43,789,790,805,830,920,960,961,995,996,1003,1004,1055,1065,1197],numhead:[1158,1169],numpi:[40,41,372,374,375,377,378,379,920,1011,1044,1049,1140,1141,1189,1231,1232,1235],nwc:[1158,1159,1160,1206,1207,1208],obj:[40,41],object:[40,41,42,59,372,785,786,787,846,896,900,920,923,927,1021,1121,1124,1126,1127,1128,1131,1132,1133,1139,1183,1187,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1218,1219],object_in:[920,927],observ:1077,occupi:[785,786,787,920,993,994],off:[920,923],offer:1189,offset:[1175,1176],often:1232,old:[40,41],on_init:[1206,1217,1218,1219],onc:[846,890,1077,1133,1134,1189],one:[40,41,43,846,875,876,877,878,890,896,902,920,965,978,985,993,994,1002,1005,1044,1047,1050,1077,1140,1141,1142,1143,1144,1145,1146,1147,1148,1189,1232,1235],one_hot:[115,404,519,637,920],onearrai:[920,951],ones:[40,41,115,271,404,519,637,920,965,985,987,1189],ones_lik:[115,271,404,519,637,920],ongo:43,onli:[40,41,43,846,1077,1121,1122,1123,1129,1222,1223,1224,1225,1226,1227,1231,1232],onlin:1189,onto:[846,875,876,891,1077,1121,1125,1130],oom:[846,1077],open:[920,923,1133,1137,1189,1235],opencv:1232,oper:[40,41,789,791,920,930,946,947,948,976,977,1006,1021,1024,1026,1028,1029,1030,1052,1053,1054,1158,1159,1160,1161,1162,1163,1164,1165,1167,1189,1190],operand:[40,41,1140,1141],oppos:[920,955],optim:[846,1021,1024,1026,1028,1029,1030,1073,1074,1075,1076,1077,1189,1223,1224,1225,1227,1231,1235],optimizer_upd:1021,option:[15,18,19,40,41,42,43,798,799,801,802,803,844,845,846,855,856,864,868,869,870,871,872,875,876,877,878,885,888,889,890,891,895,896,901,906,910,919,920,922,923,925,926,927,935,936,937,942,944,945,952,955,956,957,958,962,964,965,972,975,976,977,978,981,983,985,986,987,990,993,994,997,999,1001,1002,1003,1004,1005,1013,1015,1016,1019,1020,1021,1024,1026,1027,1028,1029,1030,1032,1037,1041,1044,1047,1050,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1155,1158,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1232],ord:[920,952,1044,1049],order:[40,41,42,43,798,799,1021,1024,1026,1028,1029,1030,1044,1047,1050,1073,1074,1075,1228,1229],ordered_node_util_kei:1077,org:1235,organ:43,origin:[40,41,42,920,987,991,1020,1044,1047,1050],other:[40,41,43,805,807,808,813,815,816,820,822,823,824,825,826,828,830,831,832,833,834,835,837,838,839,841,842,843,844,845,920,922,923,965,1021,1025,1133,1137,1189,1231,1232,1235],other_i:[43,805,830],otherwis:[15,16,17,18,19,40,41,789,790,801,802,803,846,863,896,903,904,905,920,930,1013,1014,1017,1021,1027,1032,1036,1073,1074,1075,1077,1140,1142,1143,1144,1146,1148],our:[1189,1235],out:[920,923,1055,1060,1158,1166,1168,1189,1206,1214],out_feat_dim:[1158,1169],out_featur:[1158,1166,1167],out_i:[789,790],outdat:1235,outer:[1073,1074,1075,1076],outer_batch_fn:[1073,1074,1075],outer_batch_shap:[1158,1167],outer_cost_fn:[1073,1074,1075],outer_v:[1073,1074,1075],outlin:1232,output:[40,41,43,846,855,856,890,920,923,932,956,965,990,1008,1021,1025,1055,1061,1077,1133,1135,1136,1137,1158,1160,1162,1164,1166,1168,1169,1170,1189,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217],output_ax:[846,890,1077],output_axi:1077,output_channel:[1206,1207,1208,1209,1210,1211,1212,1215,1216],output_connected_onli:[1177,1179,1183,1218,1219],output_queu:1077,output_shap:[1158,1160,1162,1164,1206,1208,1210,1212],outsid:[920,934],over:[40,41,801,802,803,920,952,1044,1047,1050,1133,1137,1140,1142,1143,1144,1146,1148,1175,1176,1220,1221],overal:1232,overflow:[920,923],overhead:1232,overrid:[920,985,987,1020],overriden:[1222,1226],overwrit:[40,41,846,890,1077],overwrite_at_key_chain:[40,41],own:[1189,1232,1235],packag:[43,1232],pad:[920,938,955,1018,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],pad_width:[920,938,1018],page:1189,pair:[1158,1170],parallel:[846,855,856,1077],parallelis:[846,855,856,1077],param:[40,41,42,43,801,803,846,890,920,921,957,958,985,986,1019,1077,1188,1189,1218,1219,1231],paramet:[15,16,17,18,19,40,41,42,785,786,787,789,790,791,798,799,801,802,805,830,844,845,846,855,856,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,885,888,889,890,891,892,895,896,900,901,902,906,907,908,909,910,911,912,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,962,964,965,966,968,969,970,972,973,974,975,976,977,978,979,980,981,982,983,986,987,990,991,992,993,994,995,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1032,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231],parameter:[1133,1136,1137],params_all_empti:1183,pardo:1189,pars:[920,939],part:[1021,1024,1026,1028,1029,1030,1055,1060,1189,1218,1219,1232],partial:[40,41,1218,1219],particl:1235,particular:1235,pass:[40,41,42,846,855,890,896,901,920,932,1021,1035,1073,1074,1075,1077,1195,1196,1218,1219,1222,1226,1228,1229],pattern:[40,41,920,946,947,948],per:[846,1077,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],percent_used_mem_on_dev:846,percent_used_mem_on_nod:1077,percentag:[846,885,1077],perf_count:1077,perform:[40,41,43,798,799,801,802,803,846,920,925,926,942,946,947,948,968,969,970,975,976,977,1021,1024,1026,1028,1029,1030,1037,1038,1073,1074,1075,1076,1077,1121,1126,1127,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1166,1168],permissable_step:1077,permit:43,permut:[920,1007,1013],perpendicular:[920,941],person:1189,physci:1235,pickl:[40,41,1077],pickle_filepath:[40,41],pid:1183,pinv:[334,719,1044],pip:1189,pipelin:1231,pkk:1235,pkkm1:1235,pkm1km1:1235,place:[40,41,43,846,891,920,951,956,968,969,970,1077,1222,1223,1224,1225,1226,1227],placehold:[1121,1130],point:[785,786,896,911,920,923,1055,1065],popul:[40,41,1133,1134],popular:1235,population_s:[1133,1134],portabl:[1189,1190],posit:[15,16,17,785,786,789,790,846,868,872,878,920,921,923,951,955,1077,1133,1138,1195,1196],possibi:[40,41],possibl:[920,978,1010,1037,1042,1235],post:[1175,1176],post_shap:[40,41],power:[43,805,830,836,920,960,995,1004,1197],practic:1189,pre:[846,1077,1189],pre_shap:[40,41],precis:[785,786],pred:[1171,1172,1173,1174],predict:[1171,1172,1173,1174,1235],preprint:1189,present:[40,41],preserv:[40,41,42,920,952,1021,1032],preserve_typ:[40,41,1021,1032],press:1189,prevent:[43,1021,1023,1024,1028,1077,1222,1223,1224],previou:[1021,1024,1028],previous:[920,932],prime:1189,print:[40,41,42,846,886,920,988,1189,1231],print_all_arrays_in_memori:920,print_all_arrays_on_dev:846,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1222,1226],prob:[1133,1134,1158,1166,1206,1214],probabl:[1133,1134,1158,1166,1206,1214],problem:[43,1235],process:[43,846,855,856,885,895,920,983,1077],process_specif:[846,885,895,1077],prod:[40,41,920,947],produc:[846,855,856,1077],product:[40,41,920,941,942,979,1140,1141,1158,1169,1170,1206,1217],profil:[108,265,402,512,629,846,1077],project:[1189,1231,1232,1235],promot:[43,805,830,1055,1065],prompt:1189,properli:43,properti:[40,41,372,846,858,1077,1183,1187,1218,1219,1222,1223,1224,1225,1227],provid:[40,41,43,801,802,803,844,845,846,863,896,903,904,905,910,919,920,945,985,987,994,1020,1021,1024,1026,1028,1029,1030,1036,1077,1189,1206,1215,1222,1223,1224,1225,1226,1227,1232],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1044,1048],ptype:[1183,1187],pure:[40,41,1189,1235],purpos:1235,put:1077,pybroadexcept:1077,pyprotectedmemb:[1077,1184],pyshadowingbuiltin:43,pyshadowingnam:[847,897,898,899,1022,1077],python:[40,41,846,885,895,920,923,1077,1189],pytorch:[1021,1024,1026,1028,1029,1030,1189,1222,1223,1224,1225,1226,1227,1231,1232,1235],pyunresolvedrefer:1077,quadrant:[1055,1061],queri:[40,41,805,819,840,846,879,889,1077,1158,1169,1170,1206,1217],query_dim:[1206,1217],query_kei:[40,41],queue:[40,41,42,846,855,856,920,989,997,1077],queue_class:[846,855,856,1077],queue_load_s:[40,41,42],queue_timeout:[40,41,42,920,1077],quick:1189,quickli:1231,radian:[1055,1056,1058,1061,1063,1069,1071],rai:[1055,1056],rais:[40,41,43,801,802,803,805,830,920,930,960,995,1002,1004,1014,1077,1218,1219,1222,1226],ram:[846,885,892,895,1077],randint:[163,343,576,746,1133],random:[37,40,41,1134,1135,1136,1137,1138,1139,1189],random_crop:1037,random_norm:[163,343,576,746,1133],random_uniform:[163,343,576,746,1133],randomli:[1037,1041,1158,1166,1206,1214],randomness_factor:[1177,1179,1183,1218,1219],rang:[920,923,976,977,1055,1061,1077,1189,1231,1235],rank:[801,802,803,920,938,1015,1018],rate:[1021,1024,1026,1028,1029,1030,1073,1074,1075,1076,1206,1217,1222,1223,1224,1225,1226,1227],rather:[40,41,846,890,920,923,972,1021,1027,1077],ratio:[846,1021,1028,1037,1042,1077,1222,1224],raw:[40,41],raw_delta:1077,reach:[846,868,872,878,1077,1121,1130],read:[40,41],readi:[1077,1231],real:[1055,1056,1060],realiti:1232,rearrang:[40,41,920,946,948],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1073,1075],receiv:[846,855,856,920,924,978,1077,1206,1216],receivess:[846,1077],receiving_fn:1183,receivng:[1073,1076],recev:[1073,1074,1075],recognit:1235,recommend:1189,rectifi:[1150,1152,1153],recurr:[1158,1168],recurrent_bia:[1158,1168],recurrent_kernel:[1158,1168],recurs:[40,41,1121,1122,1123,1129,1130],redefin:43,reduc:[40,41,801,802,803,846,890,920,947,1077,1140,1142,1143,1144,1145,1146,1147,1148],reduce_max:[40,41,170,348,458,581,753,1140],reduce_mean:[40,41,170,348,458,581,753,1140,1189,1231],reduce_min:[40,41,170,348,458,581,753,1140],reduce_prod:[40,41,170,348,458,581,753,1140],reduce_std:[40,41,348,1140],reduce_sum:[40,41,170,348,458,581,753,1077,1140],reduce_var:[40,41,170,348,458,581,753,1140],reduct:[39,40,41,801,802,803,920,947,993,994,1141,1142,1143,1144,1145,1146,1147,1148,1189],refactor:43,refer:[801,802,803,1021,1023,1024,1044,1051,1206,1216,1235],reflected_oper:[0,13,14],regard:[846,1077],regardless:[40,41,844,845],register_paramet:1231,reimplement:1235,rel:[1021,1024,1026,1028,1029,1030],rel_slice_obj:1077,relev:[1222,1223,1224,1225,1226,1227],relu:[762,1150,1151,1152,1189,1231],remain:[43,920,991,1121,1125],remaind:[40,41,920,954,1001],remov:[40,41,920,1002,1073,1074,1075],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,920,952],rep:[920,1008],repeat:[40,41,271,637,920,948,1008,1077,1232],repeated_config_check:[846,1077],repeatedli:[1121,1128],repetit:[40,41,920,990,1008],replac:[40,41,43,920,934,993,994,1133,1134],repo:1189,repres:[43,896,902,907,1158,1167],represent:[40,41,42,43,785,786,787,846,873,874,896,902,908,909,920,1000,1010,1077],reptil:[1073,1076],reptile_step:1073,requir:[43,844,845,896,900,920,923,927,1195,1196],resampl:[920,975],reshap:[40,41,43,637,920],reshape_lik:[40,41],respect:[920,949,1021,1023,1024,1025,1026,1028,1029,1030,1055,1065,1073,1074,1075,1076],respons:1077,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,789,790,791,801,802,803,805,830,846,855,920,923,949,993,994,1005,1044,1047,1050,1052,1053,1054,1055,1065,1077,1140,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1189],ret:1077,ret_dict:1077,ret_fn:[846,855,856,1077],retain:[1021,1025],retain_grad:[1021,1025],retreiv:1077,retrn:[920,1000],return_cont:[40,41],return_dict:[40,41],return_graph:[1177,1178,1179],return_inner_v:[1073,1074,1075,1076],return_sequ:[1206,1215],return_st:[1206,1215],rev:[920,945],revers:[40,41,920,945,952,1013],right:[40,41],rk_e:1235,robot:1189,ronald:1189,round:[271,637,920,923,1077],row:[920,965,1133,1134],rule:[43,805,830,920,923,1055,1065],run:[846,855,1021,1023,1024,1028,1073,1074,1075,1076,1077,1189,1190,1206,1217,1218,1219],safe:[846,855,1077],safety_factor:[846,1077],same:[15,16,17,40,41,43,846,855,856,890,891,896,900,920,921,933,937,953,954,957,958,985,987,992,993,994,1005,1020,1021,1027,1032,1044,1049,1055,1060,1073,1074,1075,1077,1140,1141,1158,1159,1160,1161,1162,1163,1164,1165,1189,1206,1207,1208,1209,1210,1211,1212,1213,1231,1235],same_arrai:[40,41],sampl:[920,975,1037,1038,1133,1134,1136,1137,1158,1166,1189,1206,1214],satisfi:[920,927,1044,1046,1051],save:[40,41,920,998,1009,1037,1039,1218,1219],save_debug_info:1183,save_dir:[846,861,1077],save_to_disk:[1177,1179,1183,1218,1219],save_weight:[1218,1219],scalar:[920,934,985,1012,1016],scale:[846,888,889,1021,1029,1077,1158,1166,1169,1170,1175,1176,1206,1214,1217,1222,1225],scaled_dot_product_attent:1158,scatter:[920,985,993,994],scatter_flat:[115,271,404,519,637,920],scatter_nd:[115,271,404,519,637,920],scene:[1021,1024,1026,1028,1029,1030],schemat:1189,screen:[40,41],search:[15,18,19,40,41],second:[40,41,846,877,920,928,941,949,989,997,1007,1021,1023,1024,1028,1073,1075,1077,1222,1223,1224],secondli:1235,see:[43,59,372,801,802,803,805,830,846,858,859,860,861,896,920,923,976,977,1021,1055,1065,1183,1187,1189,1197,1199,1200,1202,1203,1205],seed:[40,41,163,746,1133],seed_valu:[40,41,1133,1138],seem:1189,seen_set:[920,963],select:[920,927,1002,1232,1235],self:[40,41,43,59,372,805,830,846,858,859,860,861,896,1021,1077,1183,1187,1189,1197,1199,1200,1202,1203,1205,1222,1226,1231,1235],sent:1077,seper:[920,955],seq:[40,41,42,1140,1141,1218,1219],sequenc:[15,16,17,40,41,42,43,844,845,846,855,856,865,866,867,868,869,870,871,872,875,876,890,896,900,920,923,927,929,931,937,938,952,965,978,981,986,990,991,994,1001,1005,1008,1013,1018,1019,1021,1025,1037,1041,1042,1044,1047,1050,1077,1121,1132,1133,1135,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1175,1176,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1215,1218,1219,1220,1221,1222,1226,1228,1229],sequenti:1189,set:[15,18,19,40,41,846,875,876,888,889,890,920,922,944,965,995,996,997,998,1021,1024,1026,1027,1028,1029,1030,1044,1047,1050,1077,1121,1122,1129,1131,1132,1133,1134,1138,1140,1142,1143,1144,1145,1146,1147,1148,1187,1189,1206,1215,1222,1223,1224,1225,1226,1227,1232,1235],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1187,set_debug_mod:44,set_default_devic:846,set_default_dtyp:896,set_default_float_dtyp:896,set_default_int_dtyp:896,set_default_nod:1077,set_exception_debug_mod:44,set_framework:[40,41,59,1077,1189,1231,1232,1235],set_ivy_backend:[40,41],set_min_bas:920,set_min_denomin:920,set_nest_at_index:1121,set_nest_at_indic:1121,set_param:1183,set_queue_timeout:920,set_split_factor:[846,1077],set_stat:[1222,1223,1224,1225,1226,1227],set_tmp_dir:920,set_with_grad:1021,setter:1077,sever:1235,sgd:[1189,1222],shape0:1077,shape:[40,41,43,637,846,858,896,900,920,921,931,933,937,938,951,952,953,954,956,958,962,965,985,986,987,990,991,992,993,994,1000,1002,1005,1018,1019,1020,1037,1041,1044,1046,1055,1060,1061,1077,1133,1135,1136,1137,1140,1141,1158,1160,1162,1164,1183,1187,1206,1208,1209,1210,1211,1212,1213,1220,1221],shape_slic:[40,41],shape_to_tupl:920,share:[40,41,1189,1232],shift:1077,should:[40,41,42,43,789,790,805,830,844,845,846,920,931,932,939,985,991,1021,1024,1026,1028,1029,1030,1055,1065,1077,1140,1141,1189],show:[40,41,1183,1189,1235],show_debug_info:1183,show_graph:[1177,1189,1218,1219,1222,1226],show_mod_in_top_mod:[1218,1219],show_structur:[1218,1219],show_sub_contain:[40,41],show_v:[1218,1219],show_v_in_top_v:[1218,1219],shown:[40,41],shp:1077,shuffl:[40,41,163,746,1133],shuffle_h5_fil:[40,41],sigmoid:[762,1150,1189,1231],signatur:[43,59,372,846,858,859,860,861,896,1021,1183,1187,1197,1199,1200,1202,1203,1205],signific:1235,similar:[43,1158,1169,1206,1217],simpl:[43,920,950,1189,1232,1235],simplest:1232,simpli:[40,41,43,1189,1232,1235],simultan:1189,sin:[729,920,955,1055,1071,1232],sinco:1232,sine:[1055,1058,1059,1069,1070],singl:[40,41,844,845,846,855,856,875,876,877,878,920,1002,1012,1016,1037,1042,1077,1133,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1189,1232,1235],singleton:[801,802,803],singular:[1044,1049],sinh:[729,1055],siren:[1189,1197],size:[40,41,42,846,869,870,871,872,888,889,890,920,923,931,976,977,993,1001,1037,1041,1044,1047,1049,1050,1077,1133,1134,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1206,1207,1208],size_ordered_arrai:[40,41],skew:[1044,1051],skinv:1235,skip:[40,41],slice:[40,41,798,799,920,957,958,1077,1121,1128],slice_kei:[40,41],slice_obj:[40,41,1077],slice_via_kei:[40,41],slide:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],slope:[1150,1152],small:[1171,1172,1173,1174,1175,1176,1189,1220,1221,1232],smaller:[920,934],smallest:[40,41,785,786,787,920,926,933],smallest_norm:[372,785,786],softmax:[179,467,762,1150,1158,1169,1170],softplu:[762,1150],solv:1235,some:[40,41,43,920,923,1021,1023,1024,1026,1028,1029,1030,1035,1158,1166,1189,1206,1214,1232,1235],some_backend:43,some_namespac:43,someth:[43,1235],something_cool:43,somewher:[40,41],sort:[40,41,42,799,1044,1049,1077],sort_by_kei:[40,41],sorting_funct:[798,799],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,372,374,375,377,378,379,785,786,787,789,790,791,798,799,801,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1187,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1233,1234,1235],space:[920,923,955,976,977],spars:[1171,1174],sparse_cross_entropi:1171,spawn:[920,983],specif:[40,41,43,846,888,920,939,946,947,948,983,1073,1074,1075,1076,1077,1133,1139,1189,1218,1219,1231,1232],specifc:[1133,1134],specifi:[40,41,43,801,802,803,846,865,866,867,868,869,870,871,872,875,876,880,882,886,889,890,891,896,900,902,920,923,925,926,927,934,937,938,956,957,958,964,976,977,1005,1015,1018,1044,1047,1050,1077,1121,1126,1127,1131,1132,1140,1141,1142,1143,1144,1145,1146,1147,1148],split:[40,41,115,271,404,519,637,846,855,869,870,871,872,888,889,890,920,978,1077],split_arg:1077,split_factor:[846,855,1077],split_func_cal:[846,1077],split_siz:1077,spread:[846,878,1077],squar:[920,965,1044,1046],squeez:[115,271,404,519,637,920],stabil:[798,799,920,1003,1004],stabl:[798,799,920,960,961,995,996,1003,1004],stable_divid:920,stable_pow:920,stack:[40,41,271,637,920,1037,1042,1121,1122,1129,1206,1215],stack_imag:[154,330,446,566,715,1037],stacked_dim_s:1077,stage:43,standard:[40,41,43,785,786,1133,1136,1140,1146,1175,1176,1220,1221],start:[40,41,846,861,920,923,976,977,1077,1189,1232],starting_index:[40,41],starting_split_factor:[846,1077],state:[1077,1158,1168,1177,1178,1179,1183,1189,1192,1193,1194,1195,1196,1197,1199,1200,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231],statement:1232,static_argnam:[844,845],static_argnum:[844,845],std:[1133,1136],step:[40,41,846,920,923,976,977,1021,1023,1024,1026,1028,1029,1030,1073,1074,1075,1076,1077,1189,1222,1223,1224,1225,1226,1227,1231,1235],stephen:1189,stick:1189,still:[40,41],stochast:[1222,1227],stop:[40,41,846,861,890,920,923,976,977,1021,1024,1026,1028,1029,1030,1032,1073,1074,1075,1076,1077,1222,1223,1224,1225,1226,1227],stop_gradi:[40,41,325,441,561,709,846,890,1021,1024,1026,1028,1029,1030,1073,1074,1075,1076,1077,1222,1223,1224,1225,1226,1227],stopiter:1077,store:[40,41,920,955,1001,1021,1035,1218,1219],store_var:[1218,1219],str:[15,16,17,40,41,42,43,372,374,375,785,786,787,844,845,846,855,856,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,890,896,901,902,907,908,909,910,911,912,919,920,927,944,946,947,948,981,983,986,993,994,1044,1047,1050,1073,1074,1075,1076,1077,1121,1125,1140,1141,1195,1196,1206,1217,1218,1219],str_to_nod:1077,straight:1232,strength:[1189,1235],stride:[1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],string:[40,41,43,846,862,864,873,874,879,885,891,892,895,896,900,906,908,909,910,919,920,923,927,944,965,986,987,1019,1020,1077,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213,1218,1219],structur:[40,41,42,43,920,939],structural_diff:[40,41],sub:[40,41,846,869,870,875,876,877,878,920,1001,1073,1074,1075,1076,1077],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1077,sub_mod:[1218,1219],sub_modul:[1228,1229],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1189,1190,1220,1221,1228,1229],subsequ:43,subset:43,substr:[40,41],suggest:1189,suitabl:[1037,1042],sum:[40,41,846,875,876,877,878,890,920,943,947,993,994,1077,1140,1141,1147],summat:[40,41,1140,1141],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,93,96,97,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,203,211,214,215,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,331,332,333,335,336,337,338,340,341,344,345,346,347,349,350,351,352,353,354,355,356,359,361,362,363,364,365,366,367,373,374,375,378,379,387,390,391,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,442,443,444,445,447,448,449,451,452,455,457,459,460,461,462,463,464,465,468,469,471,472,473,474,475,476,477,483,484,485,488,489,497,500,501,513,514,515,516,517,518,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,592,593,594,600,601,602,605,606,614,617,618,630,631,632,633,634,635,636,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,710,711,712,713,714,716,717,718,720,721,722,723,724,725,727,728,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,747,748,749,750,751,752,754,755,756,757,758,759,760,763,764,765,766,767,768,769,771,772,774,775,776,777,778,779,780,786,787,790,791,799,802,803,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1178,1179,1181,1182,1184,1188,1189,1193,1194,1196,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1234,1235],supports_inplac:920,suppos:1235,svd:[334,570,719,1044],swap:[40,41,920,1007],swapax:[40,41,519,637,920,1235],symmetr:[1044,1051],tab:1189,take:[920,975],taken:[1140,1142,1143,1144,1146,1148],tan:[729,1055,1060],tangent:[1055,1060,1061,1062,1071,1072,1150,1157],tanh:[729,762,1055,1150],target:[40,41,846,862,865,866,867,868,869,870,871,872,875,876,877,878,891,1077,1189],target_dict:[40,41],task:[1073,1074,1075,1076],team:1235,templat:1189,temporari:[920,998,1009],tensor:[40,41,43,798,799,846,864,896,906,920,923,925,926,931,976,977,980,982,985,986,987,991,993,994,1001,1019,1020,1077,1133,1134,1135,1158,1166,1168,1189,1206,1214,1216,1222,1223,1224,1225,1226,1227,1231,1232],tensorflow:[1158,1160,1162,1164,1189,1206,1208,1210,1212,1232,1235],term:[40,41,1158,1168,1189,1206,1216],termcolor:[40,41,42],termin:[40,41,42,1077],test:[789,790,801,802,803,896,911,912],tf_concat:1189,than:[40,41,785,786,846,890,920,923,933,934,953,972,980,1002,1005,1021,1027,1077,1133,1137,1189,1232],thei:[40,41,43,1055,1061,1073,1074,1075,1133,1134,1189,1228,1229,1232],them:[1189,1235],themselv:[1121,1122],therefor:43,thi:[40,41,42,43,846,868,872,878,885,890,895,920,923,955,989,991,997,1021,1024,1026,1027,1028,1029,1030,1035,1044,1047,1050,1077,1121,1125,1130,1140,1142,1143,1144,1145,1146,1147,1148,1158,1167,1189,1218,1219,1222,1223,1224,1225,1226,1227,1231,1232,1235],thing:[43,1189],those:[40,41,920,934,1021,1035,1044,1049,1077],though:43,threshold:[920,980,982],through:[40,41],tile:[271,519,637,920],time:[920,1008,1021,1024,1028,1073,1074,1075,1076,1077,1133,1134,1158,1168,1206,1217,1218,1219,1235],time_chronolog:[1177,1178,1183],time_infer:[1177,1178],timeout:[40,41,42,846,855,856,920,989,997,1077],timestep:[1158,1168,1206,1215],timing_fnam:[1177,1178],titl:1189,tmp_dir:920,tmp_dr:[920,998],to_appli:[40,41],to_clon:[846,1077],to_dev:[40,41,108,265,512,629,846],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[846,1077],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1189],to_ivy_modul:[181,770,1189,1195],to_json:[40,41],to_kv_fn:[1158,1169],to_kv_v:[1158,1169],to_list:[40,41,637,920],to_multi_dev:[40,41],to_mut:[1121,1123,1130],to_n:[15,40,41,1189],to_nod:1077,to_numpi:[40,41,637,920,1189,1231],to_out_fn:[1158,1169],to_out_v:[1158,1169],to_q_fn:[1158,1169],to_q_v:[1158,1169],to_raw:[40,41],to_scalar:[637,920],todo:1077,togeth:[40,41,1228,1229],tool:[1189,1232],top_mod:[1218,1219],topic:1235,torch:[43,844,845,1189,1231,1232,1235],torch_concat:1189,torchfcmodel:1231,total:[40,41,42,846,892,1077],total_mem_on_dev:846,total_mem_on_nod:1077,tpu:[846,893,1077],tpu_is_avail:[512,629,846,1077],tpye:[896,907],trace:[40,41,920,972],track:[846,1077,1121,1130,1218,1219],track_submod_call_ord:[1218,1219],track_submod_ret:[1218,1219],trail:[1220,1221],train:[1021,1023,1024,1028,1189,1190],trainabl:[1021,1027,1189,1190,1195,1196,1218,1219,1228],trainer:1189,tran:1235,transform:[1158,1166,1167],transpos:[40,41,115,271,404,637,846,877,920,1077,1158,1160,1162,1164,1206,1208,1210,1212],travers:[15,18,19,40,41,1121,1130],treat:[40,41,844,845],tree_depth:1187,tree_height:1183,tri:[40,41],trigonometr:[1055,1056,1060,1063,1069],trim_kei:[40,41],trust:[1021,1028,1222,1224],truth:[789,791,920,949,1052,1053,1054],try_else_non:920,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[846,1077],tune_dev_alloc:846,tune_dev_split:846,tune_node_alloc:1077,tune_node_split:1077,tune_step:[846,1077],tupl:[15,16,17,18,19,40,41,43,801,802,803,844,845,920,938,955,956,1000,1018,1077,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1135,1140,1142,1143,1144,1145,1146,1147,1148],two:[40,41,920,923,928,941,979,1007,1044,1047,1049],type:[15,18,40,41,42,43,59,374,375,786,787,789,790,801,802,803,805,830,846,858,859,860,861,873,874,878,890,896,900,901,902,906,907,908,909,910,911,912,919,920,921,923,927,933,937,939,949,953,954,956,965,972,985,986,987,992,1006,1016,1019,1020,1021,1027,1032,1055,1065,1077,1183,1187,1189,1197,1199,1200,1202,1203,1205,1218,1219,1232],types_to_iteratively_nest:[40,41,42],uint8:[1037,1039,1043],uint8_img_to_float_img:1037,unchang:[15,16,17,18,19],unif:1077,unifi:[40,41,846,875,876,877,878,890,1077,1189],uniform:[40,41,1133,1134,1136,1137,1197,1199,1200,1203,1204],uniformli:[1133,1135,1137],unify_arrai:1077,unify_it:1077,unify_nest:1077,union:[15,18,19,40,41,43,372,374,375,785,786,787,789,790,798,799,801,802,803,805,830,844,845,846,864,869,870,871,872,890,891,896,900,901,902,906,907,908,909,910,911,912,919,920,921,922,923,925,926,927,928,929,931,933,934,935,936,937,938,940,941,942,943,946,947,948,949,951,952,953,954,955,956,957,958,962,964,965,966,973,974,975,976,977,979,980,981,982,985,986,987,990,991,992,993,994,999,1000,1001,1002,1005,1007,1008,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1077,1121,1122,1123,1129,1130],uniqu:[846,855,856,1073,1074,1075,1076,1077,1121,1125],unique_kwarg:1077,unit:[846,1055,1056,1058,1077,1150,1151,1152,1153],unitari:[1044,1049],unless:[920,985,987,1020],unlik:[846,1077],unnorm:[1133,1134],unpack:[920,1015],unrol:[1158,1168],unset:1232,unset_debug_mod:44,unset_default_devic:846,unset_default_dtyp:896,unset_default_float_dtyp:896,unset_default_int_dtyp:896,unset_framework:[59,1232],unset_with_grad:1021,unstack:[40,41,115,271,404,519,637,920],unus:[844,845],updat:[40,41,846,855,920,970,993,994,1021,1023,1024,1026,1028,1029,1030,1073,1074,1075,1077,1121,1126,1127,1131,1132,1158,1168,1195,1196,1222,1223,1224,1225,1226,1227,1232,1235],update_backend:[40,41],update_config:[40,41],update_inference_tim:1183,upper:[40,41,1133,1137],upper_depth:[1218,1219],usabl:[1189,1235],usag:[846,890,1077],use:[40,41,42,43,846,855,856,881,893,920,990,1003,1004,1077,1158,1169,1175,1176,1189,1220,1221,1232,1235],used:[40,41,43,846,855,885,888,889,895,896,907,920,960,961,978,987,993,994,995,996,1020,1021,1028,1029,1044,1047,1073,1074,1075,1076,1077,1121,1130,1206,1217,1222,1224,1225,1231,1232],used_dev:[846,855],used_mem_on_dev:846,used_mem_on_nod:1077,used_node_str:1077,used_node_strs_dict:1077,useful:[40,41,846,890,1077,1158,1167,1189,1232],user:[1189,1206,1217,1218,1219,1232,1235],uses:1189,using:[40,41,1021,1023,1024,1121,1124,1128,1140,1141,1158,1166,1170,1189,1206,1214,1231,1232,1235],util:[846,879,1077],utility_funct:[801,802,803],v_with_top_v_key_chain:[1218,1219],val:[40,41,805,840,920,968,969,970,995,996,1187],valid:[801,802,803,896,901,920,1003,1004,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],valid_dtyp:896,valu:[40,41,789,791,798,799,846,858,889,890,920,921,923,925,926,934,935,936,938,939,945,949,955,956,957,958,973,974,976,977,980,982,989,990,991,992,993,994,995,996,997,1013,1016,1017,1018,1021,1025,1028,1037,1043,1044,1049,1052,1053,1054,1055,1066,1067,1068,1073,1074,1075,1077,1121,1125,1126,1127,1131,1132,1133,1136,1137,1140,1142,1144,1158,1169,1170,1175,1176,1183,1206,1217,1220,1221,1222,1224],value_is_nan:920,vanilla:[1073,1075],var_shap:1197,variabl:[15,16,17,18,19,40,41,325,441,561,709,920,930,968,969,970,971,972,1006,1021,1024,1025,1026,1027,1028,1029,1030,1032,1035,1073,1074,1075,1076,1158,1169,1175,1176,1195,1196,1197,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],variable_data:[709,1021],varianc:[40,41,1140,1148,1235],varieti:1232,variou:[43,1189],vector:[40,41,920,936,941,1044,1049,1050,1051,1158,1167,1206,1216],vector_norm:[40,41,1044],vector_to_skew_symmetric_matrix:[158,334,450,570,719,1044],verbos:1234,veri:[43,1189],version:43,via:[1121,1122,1129,1232],view:[1037,1042],vision:1189,visual:1232,volum:[1158,1163],vw_tm1:[1021,1024,1028],wai:[1232,1235],wait:[40,41,42],want:[1189,1232,1235],warn:[59,66,67,68,69,70],warp:[1037,1038],watch:1231,weight:[1021,1023,1024,1026,1028,1029,1030,1158,1167,1168,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1218,1219,1222,1224,1225],weight_initi:[1206,1207,1208,1209,1210,1211,1212,1213,1215,1216],weights_path:[1218,1219],well:[40,41,920,964],were:[40,41,1077],what:1189,when:[40,41,42,43,846,920,932,1004,1017,1044,1049,1077,1189,1218,1219,1232,1235],where:[40,41,43,271,637,801,802,803,805,830,920,923,931,934,938,951,966,973,974,985,1018,1044,1049,1121,1122,1129,1133,1134],wherea:43,wherebi:[1121,1130],whether:[15,18,19,40,41,42,801,802,803,844,845,846,864,877,881,885,890,893,895,896,906,910,911,912,919,920,922,928,929,942,945,950,955,962,964,967,971,972,978,999,1006,1015,1016,1021,1024,1025,1026,1027,1028,1029,1030,1032,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1150,1151,1158,1166,1189,1195,1196,1206,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227],which:[40,41,42,43,785,786,787,801,802,803,844,845,846,855,856,864,869,870,871,872,875,876,877,878,880,882,886,888,889,890,896,901,906,910,919,920,923,927,937,939,941,942,943,945,952,956,957,958,959,965,966,975,976,977,984,985,986,987,988,990,993,994,1001,1005,1015,1017,1019,1020,1021,1024,1025,1026,1028,1029,1030,1032,1034,1035,1037,1039,1044,1047,1050,1055,1061,1077,1121,1125,1126,1127,1131,1132,1133,1134,1135,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1169,1170,1189,1195,1196,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1229,1231,1232],whitespac:[40,41,42],whose:[43,805,830,920,927,932,1140,1141,1142,1143,1144,1146,1148],why:[1189,1190],width:[1037,1042],wiki:1235,wikipedia:1235,window:[1037,1042,1158,1159,1160,1161,1162,1163,1164,1165,1206,1207,1208,1209,1210,1211,1212,1213],wise:[40,41,43,789,791,805,830,920,933,934,949,953,954,980,982,992,1021,1024,1026,1028,1030,1052,1053,1054,1055,1056,1058,1060,1061,1063,1065,1066,1067,1068,1069,1071,1150,1151,1152,1153,1154,1155,1156,1157],wish:1232,with_arg_label:[1177,1179,1183,1218,1219],with_array_cach:[1177,1178,1179,1183],with_bia:[1206,1216],with_cal:[920,945],with_default_key_color:[40,41],with_edge_label:[1177,1179,1183,1218,1219],with_entries_as_list:[40,41],with_grad:[1021,1031,1218,1219],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1077,with_output_label:[1177,1179,1183,1218,1219],with_partial_v:[1218,1219],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,920,1001,1077],with_to_kv_fn:[1206,1217],with_to_out_fn:[1206,1217],with_to_q_fn:[1206,1217],within:[15,18,19,920,923,1044,1049,1133,1137],without:[40,41,43,920,989,991,997,1121,1123,1232],wonder:1189,word:[15,16,17,920,923,1133,1137,1195,1196],work:[43,1231],worker:[846,855,856,1077],worker_class:[846,855,856,1077],worker_kwarg:1077,would:[43,798,799,1150,1155,1189,1232,1235],wrap:[15,40,41,42,43,920,932,1021,1035,1189],wrapper:43,write:[40,41,43,1189,1190,1235],written:[43,1189,1235],ws_new:[1021,1024,1026,1028,1029,1030],x1_i:[920,949,1055,1065],x2_i:[920,949,1055,1065],x_feat_dim:[1158,1169],x_i:[789,790],x_in:[1189,1231],x_inv:[1044,1046],x_max:[920,934],x_min:[920,934],x_sub:1077,xkk:1235,xkkm1:1235,xkm1km1:1235,xs0:1077,xs_t:1077,year:[1189,1235],yet:[1121,1130,1235],yield:[920,1017],you:[1189,1231,1232,1235],your:[1189,1231,1232,1235],your_awesome_project:1232,yourself:1189,zero:[40,41,115,271,404,519,637,801,802,803,920,938,985,987,993,994,1018,1020,1021,1023,1024,1028,1029,1158,1166,1189,1197,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1222,1223,1224,1225],zero_pad:[271,519,637,920],zeros_lik:[115,271,404,519,637,920],zip:1077,zk_e:1235},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":945,"function":[77,78,83,86,88,89,90,91,92,94,95,195,196,201,204,206,207,208,209,210,212,213,371,372,377,380,382,383,384,385,386,388,389,481,482,487,490,492,493,494,495,496,498,499,598,599,604,607,609,610,611,612,613,615,616,784,785,789,792,794,795,796,797,798,800,801],Ones:1202,Using:1232,abs:[272,520,638,921],aco:[730,1056],acosh:[731,1057],activ:[179,358,467,590,762,1150,1192],adam:1223,adam_step:1023,adam_upd:1024,algebra:[87,88,205,206,381,382,491,492,608,609,793,794],all:[96,214,390,500,617,802],all_equ:922,all_nested_indic:1122,ani:[97,215,391,501,618,803],api:[0,43,75,99,193,217,369,393,479,503,596,620,782],arang:[116,273,405,521,639,923],arg_nam:924,argmax:[117,406,522,640,925],argmin:[118,407,523,641,926],args_to_ivi:16,args_to_n:17,argsort:[93,211,387,497,614,799],arithmet:[1,100,218,394,504,621],arrai:[0,3,43,75,98,99,101,119,193,216,217,219,226,274,369,392,393,395,408,479,502,503,505,524,596,619,620,622,642,782,805,927],array_equ:[275,643,928],arrays_equ:929,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[732,1058],asinh:[733,1059],assert_supports_inplac:930,atan2:[735,1061],atan:[734,1060],atanh:[736,1062],attribut:[5,102,220,396,506,623],backend:[43,73],bilinear_resampl:[155,331,447,567,716,1038],binary_cross_entropi:1172,bitwis:[7,103,221,397,507,624],broadcast_to:[276,644,931],builder:51,builtin:[98,216,226,392,502,619,805],builtin_ab:[227,806],builtin_add:[228,807],builtin_and:[229,808],builtin_bool:[230,809],builtin_contain:[231,810],builtin_deepcopi:[232,811],builtin_dir:[233,812],builtin_eq:[234,813],builtin_float:[235,814],builtin_floordiv:[236,815],builtin_g:[237,816],builtin_getattr:[238,817],builtin_getattribut:[239,818],builtin_getitem:[240,819],builtin_gt:[241,820],builtin_int:[242,821],builtin_invert:[243,822],builtin_l:[244,823],builtin_lt:[245,824],builtin_mul:[246,825],builtin_n:[247,826],builtin_neg:[248,827],builtin_or:[249,828],builtin_po:[250,829],builtin_pow:[251,830],builtin_radd:[252,831],builtin_rand:[253,832],builtin_rfloordiv:[254,833],builtin_rmul:[255,834],builtin_ror:[256,835],builtin_rpow:[257,836],builtin_rsub:[258,837],builtin_rtruediv:[259,838],builtin_rxor:[260,839],builtin_setitem:[261,840],builtin_sub:[262,841],builtin_truediv:[263,842],builtin_xor:[264,843],cache_fn:932,cast:[120,277,409,525,645,900],ceil:[278,646,933],choleski:[720,1045],choose_random_framework:61,citat:1189,clear_framework_stack:62,clear_mem_on_dev:[631,862],clip:[279,647,934],clip_matrix_norm:935,clip_vector_norm:936,clone:1092,clone_arrai:1093,clone_it:1094,clone_nest:1095,clonedit:1079,cloneditem:1078,clonednest:1080,closest_valid_dtyp:901,code:1235,comparison:[9,104,222,398,508,625],compil:[280,410,648,844,845,1177],compile_graph:1178,concaten:[121,281,411,526,649,937],constant:[76,194,370,480,597,783],constant_pad:[282,527,650,938],contain:[40,41],container_typ:[651,939],content:1189,contribut:43,conv1d:[185,361,471,774,1159,1207],conv1d_transpos:[186,362,472,775,1160],conv1dtranspos:1208,conv2d:[187,363,473,592,776,1161,1209],conv2d_transpos:[188,364,474,777,1162],conv2dtranspos:1210,conv3d:[189,365,475,593,778,1163,1211],conv3d_transpos:[190,366,476,779,1164],conv3dtranspos:1212,convers:15,convert:[181,770,1195],convert_dtyp:902,copy_arrai:[652,940],copy_nest:1123,core:[107,225,401,511,628,804],cos:[737,1063],cosh:[738,1064],cprint:1234,creation:[77,195,371,481,598,784],cross:[283,653,941],cross_entropi:1173,cumprod:[122,284,412,654,942],cumsum:[655,943],current_framework:63,current_framework_str:[656,944],data:[78,82,196,200,372,376,482,486,599,603,785,788],debug_mod:45,debugg:44,default_devic:863,default_dtyp:903,default_float_dtyp:904,default_int_dtyp:905,default_nod:1096,depthwise_conv2d:[191,367,477,594,780,1165],depthwiseconv2d:1213,design:43,dev:[110,267,514,632,864],dev_clon:865,dev_clone_arrai:866,dev_clone_it:867,dev_clone_nest:868,dev_dist:869,dev_dist_arrai:870,dev_dist_it:871,dev_dist_nest:872,dev_from_str:[111,268,515,633,873],dev_to_str:[112,269,516,634,874],dev_unifi:875,dev_unify_arrai:876,dev_unify_it:877,dev_unify_nest:878,dev_util:879,devclonedit:849,devcloneditem:848,devclonednest:850,devdistit:852,devdistitem:851,devdistnest:853,devic:[20,108,265,402,512,629,846],devmapp:855,devmappermultiproc:856,distribute_nest:1097,divid:1065,document:1189,dropout:[1166,1214],dtype:[123,285,413,528,657,896,906],dtype_bit:[124,286,414,529,658,907],dtype_from_str:[125,287,415,530,659,908],dtype_to_str:[126,288,416,531,660,909],ecosystem:52,einops_rearrang:946,einops_reduc:947,einops_repeat:948,einsum:[171,349,459,582,754,1141],elementwis:[83,201,377,487,604,789],equal:[532,661,949],erf:[455,739,1066],execute_with_gradi:[152,326,442,562,710,1025],exist:950,exp:[740,1067],expand_dim:[289,662,951],extens:[87,205,381,491,608,793],finfo:[80,198,374,484,601,786],firstlayersiren:1199,flip:[127,290,417,533,663,952],float_img_to_uint8_img:1039,floor:[291,664,953],floormod:[292,665,954],fomaml_step:1074,fourier_encod:955,framework:59,full:[128,293,418,534,666,956],func:72,gather:[129,294,419,535,667,957],gather_nd:[130,295,420,536,668,958],geglu:1193,gelu:[359,468,763,1151,1194],gener:[22,115,271,404,519,637,920],get_all_arrays_in_memori:959,get_all_arrays_on_dev:880,get_framework:64,get_min_bas:960,get_min_denomin:961,get_num_dim:[669,962],get_referrers_recurs:963,global:1180,glorotuniform:1200,gpu_is_avail:[881,1098],gradient:[24,151,325,441,561,709,1021],gradient_descent_upd:1026,gradient_imag:[156,332,448,568,717,1040],graph:1183,gym:53,handler:59,has_nan:964,helper:1185,ident:[131,296,421,537,670,965],iinfo:[81,199,375,485,602,787],imag:[26,154,330,446,566,715,1037],index_nest:1124,indices_wher:[132,297,422,671,966],initi:1197,inplac:[11,105,223,399,509,626],inplace_arrays_support:967,inplace_decr:[133,298,423,538,672,968],inplace_incr:[134,299,424,539,673,969],inplace_upd:[135,300,425,540,674,970],inplace_variables_support:971,inv:[721,1046],invalid_dtyp:910,is_arrai:[136,301,426,541,675,972],is_float_dtyp:911,is_int_dtyp:912,is_vari:[153,327,443,563,711,1027],isfinit:[84,202,378,488,605,790],isinf:[302,542,676,973],isnan:[303,543,677,974],ivi:[43,50,51,52,53,54,55,56,57,58,781,1231,1232,1235],ivymodul:[182,771],jax:74,lamb:1224,lamb_upd:1028,lar:1225,lars_upd:1029,layer:[184,360,470,591,773,1158,1206],layer_norm:1176,layernorm:1221,leaky_relu:[764,1152],linalg:[28,158,334,450,570,719,1044],linear:[87,88,205,206,381,382,491,492,608,609,793,794,1167,1216],linear_resampl:[137,304,427,544,678,975],linspac:[138,305,428,545,679,976],log:[741,1068,1186],log_global_inference_abs_tim:1181,log_global_inference_rel_tim:1182,logic:[30,161,339,453,574,726,1052],logical_and:[340,727,1053],logical_not:[85,203,379,489,606,791],logical_or:[341,728,1054],logspac:[139,306,429,546,680,977],loss:1171,lstm:1215,lstm_updat:1168,maml_step:1075,manipul:[89,207,383,493,610,795],map:1125,map_nest_at_index:1126,map_nest_at_indic:1127,match_kwarg:978,math:[32,162,342,454,575,729,1055],matmul:[307,547,681,979],matrix_norm:[159,335,451,571,722,1047],maximum:[682,980],mech:54,memori:55,meshgrid:[308,683,981],meta:[34,1073],method:[86,204,380,490,607,792],minimum:[684,982],model:56,modul:[1218,1219,1231],multi:1077,multi_head_attent:1169,multi_index_nest:1128,multidevcontain:42,multidevit:859,multidevitem:858,multidevnest:860,multiheadattent:1217,multinodeit:1083,multinodeitem:1082,multinodenest:1084,multinomi:[164,344,457,577,747,1134],multiprocess:[685,983],mxnet:192,nativ:1231,nest:1121,nested_indices_wher:1129,nested_map:1130,network:1231,next:1189,node:[1077,1099],node_dist:1100,node_dist_arrai:1101,node_dist_it:1102,node_str:1103,node_to_str:1104,node_util:1105,nodedistit:1086,nodedistitem:1085,nodedistnest:1087,nodemapp:1089,nodemappermultiproc:1090,norm:[1175,1220],num_arrays_in_memori:984,num_arrays_on_dev:882,num_cpu_cor:883,num_gpu:[113,884,1106],numpi:368,nutshel:1189,one_hot:[140,430,548,686,985],ones:[141,309,431,549,687,986],ones_lik:[142,310,432,550,688,987],oper:[1,3,7,9,11,13,43,100,101,103,104,105,106,218,219,221,222,223,224,394,395,397,398,399,400,504,505,507,508,509,510,621,622,624,625,626,627],optim:[1222,1226],optimizer_upd:1030,overview:1189,param:1187,percent_used_mem_on_dev:885,percent_used_mem_on_nod:1107,pinv:[336,723,1048],portabl:1235,print_all_arrays_in_memori:988,print_all_arrays_on_dev:886,profil:[109,266,403,513,630,861,1091],queue_timeout:989,randint:[165,345,578,748,1135],random:[36,163,343,456,576,746,1133],random_crop:1041,random_norm:[166,346,579,749,1136],random_uniform:[167,347,580,750,1137],reduce_max:[172,350,460,583,755,1142],reduce_mean:[173,351,461,584,756,1143],reduce_min:[174,352,462,585,757,1144],reduce_prod:[175,353,463,586,758,1145],reduce_std:[354,1146],reduce_sum:[176,355,464,587,759,1147],reduce_var:[177,356,465,588,760,1148],reduct:[38,170,348,458,581,753,1140],reflect:[13,106,224,400,510,627],relu:[765,1153],repeat:[311,689,990],reptile_step:1076,reshap:[690,991],robot:57,round:[312,691,992],run:1232,scaled_dot_product_attent:1170,scatter_flat:[143,313,433,551,692,993],scatter_nd:[144,314,434,552,693,994],search:[90,208,384,494,611,796],seed:[168,751,1138],sequenti:[1228,1229],set:[91,209,385,495,612,797],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:887,set_default_dtyp:913,set_default_float_dtyp:914,set_default_int_dtyp:915,set_default_nod:1108,set_exception_debug_mod:48,set_framework:65,set_min_bas:995,set_min_denomin:996,set_nest_at_index:1131,set_nest_at_indic:1132,set_queue_timeout:997,set_split_factor:[888,1109],set_tmp_dir:998,set_with_grad:1031,sgd:1227,shape:[694,999],shape_to_tupl:1000,show_graph:1179,shuffl:[169,752,1139],sigmoid:[766,1154],signatur:[86,204,380,490,607,792],sin:[742,1069],sinh:[743,1070],siren:1203,softmax:[180,469,767,1155],softplu:[768,1156],sort:[92,210,386,496,613,798],sparse_cross_entropi:1174,split:[145,315,435,553,695,1001],split_factor:[889,1110],split_func_cal:[890,1111],squeez:[146,316,436,554,696,1002],stable_divid:1003,stable_pow:1004,stack:[317,697,1005],stack_imag:[157,333,449,569,718,1042],statist:[94,212,388,498,615,800],stop_gradi:[328,444,564,712,1032],str_to_nod:1112,submodul:43,supports_inplac:1006,svd:[337,572,724,1049],swapax:[555,698,1007],tan:[744,1071],tanh:[745,769,1072,1157],tensorflow:478,tile:[318,556,699,1008],tmp_dir:1009,to_dev:[114,270,517,635,891],to_ivi:18,to_ivy_modul:[183,772,1196],to_list:[700,1010],to_n:19,to_nod:1113,to_numpi:[701,1011],to_scalar:[702,1012],torch:595,total_mem_on_dev:892,total_mem_on_nod:1114,tpu_is_avail:[518,636,893,1115],train:1231,trainabl:1231,transpos:[147,319,437,703,1013],tree:1189,try_else_non:1014,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,196,200,372,376,482,486,599,603,785,788],uint8_img_to_float_img:1043,unifi:1116,unify_arrai:1117,unify_it:1118,unify_nest:1119,unset_debug_mod:49,unset_default_devic:894,unset_default_dtyp:916,unset_default_float_dtyp:917,unset_default_int_dtyp:918,unset_framework:71,unset_with_grad:1033,unstack:[148,320,438,557,704,1015],used_mem_on_dev:895,used_mem_on_nod:1120,util:[95,213,389,499,616,801],valid_dtyp:919,value_is_nan:1016,variabl:[329,445,565,713,1034],variable_data:[714,1035],vector_norm:1050,vector_to_skew_symmetric_matrix:[160,338,452,573,725,1051],verbos:1233,vision:58,where:[321,705,1017,1189],why:1235,with_grad:1036,wrapper:72,write:1232,zero:[149,323,439,559,707,1019,1205],zero_pad:[322,558,706,1018],zeros_lik:[150,324,440,560,708,1020]}})