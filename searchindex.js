Search.setIndex({"docnames": ["Cython_func_wrapper", "Cython_func_wrapper/from_zero_dim_arrays_to_float", "Cython_func_wrapper/handle_array_like", "Cython_func_wrapper/handle_nans", "Cython_func_wrapper/handle_nestable", "Cython_func_wrapper/handle_out_argument", "Cython_func_wrapper/infer_device", "Cython_func_wrapper/infer_dtype", "Cython_func_wrapper/inputs_to_ivy_arrays", "Cython_func_wrapper/inputs_to_native_arrays", "Cython_func_wrapper/integer_arrays_to_float", "Cython_func_wrapper/outputs_to_ivy_arrays", "Cython_func_wrapper/to_native_arrays_and_back", "_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/ContextManager", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "builder", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_array_like", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/isneginf", "functional/ivy/experimental/isneginf/isneginf_array", "functional/ivy/experimental/isneginf/isneginf_container", "functional/ivy/experimental/isneginf/isneginf_functional", "functional/ivy/experimental/isneginf/static_isneginf_container", "functional/ivy/experimental/isposinf", "functional/ivy/experimental/isposinf/isposinf_array", "functional/ivy/experimental/isposinf/isposinf_container", "functional/ivy/experimental/isposinf/isposinf_functional", "functional/ivy/experimental/isposinf/static_isposinf_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/dropout1d", "functional/ivy/layers/dropout1d/dropout1d_array", "functional/ivy/layers/dropout1d/dropout1d_container", "functional/ivy/layers/dropout1d/dropout1d_functional", "functional/ivy/layers/dropout1d/static_dropout1d_container", "functional/ivy/layers/fft", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["Cython_func_wrapper.rst", "Cython_func_wrapper/from_zero_dim_arrays_to_float.rst", "Cython_func_wrapper/handle_array_like.rst", "Cython_func_wrapper/handle_nans.rst", "Cython_func_wrapper/handle_nestable.rst", "Cython_func_wrapper/handle_out_argument.rst", "Cython_func_wrapper/infer_device.rst", "Cython_func_wrapper/infer_dtype.rst", "Cython_func_wrapper/inputs_to_ivy_arrays.rst", "Cython_func_wrapper/inputs_to_native_arrays.rst", "Cython_func_wrapper/integer_arrays_to_float.rst", "Cython_func_wrapper/outputs_to_ivy_arrays.rst", "Cython_func_wrapper/to_native_arrays_and_back.rst", "_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/ContextManager.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "builder.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_array_like.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/isneginf.rst", "functional/ivy/experimental/isneginf/isneginf_array.rst", "functional/ivy/experimental/isneginf/isneginf_container.rst", "functional/ivy/experimental/isneginf/isneginf_functional.rst", "functional/ivy/experimental/isneginf/static_isneginf_container.rst", "functional/ivy/experimental/isposinf.rst", "functional/ivy/experimental/isposinf/isposinf_array.rst", "functional/ivy/experimental/isposinf/isposinf_container.rst", "functional/ivy/experimental/isposinf/isposinf_functional.rst", "functional/ivy/experimental/isposinf/static_isposinf_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/dropout1d.rst", "functional/ivy/layers/dropout1d/dropout1d_array.rst", "functional/ivy/layers/dropout1d/dropout1d_container.rst", "functional/ivy/layers/dropout1d/dropout1d_functional.rst", "functional/ivy/layers/dropout1d/static_dropout1d_container.rst", "functional/ivy/layers/fft.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Cython func wrapper", "from_zero_dim_arrays_to_float", "handle_array_like", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Builder", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_array_like", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "beta", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "is_ivy_sparse_array", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "isneginf", "ivy.Array.isneginf", "ivy.Container.isneginf", "ivy.isneginf", "ivy.Container.static_isneginf", "isposinf", "ivy.Array.isposinf", "ivy.Container.isposinf", "ivy.isposinf", "ivy.Container.static_isposinf", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "dropout1d", "ivy.Array.dropout1d", "ivy.Container.dropout1d", "ivy.dropout1d", "ivy.Container.static_dropout1d", "fft", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 56, 61, 63, 65, 66, 67, 68, 70, 72, 74, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 110, 112, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 133, 134, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 158, 160, 163, 164, 165, 168, 169, 170, 171, 173, 174, 176, 177, 178, 180, 181, 183, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1806, 1808, 1810, 1811, 1814, 1816, 1817, 1818, 1821, 1822, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1862], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 56, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 110, 112, 114, 116, 118, 120, 122, 124, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 156, 157, 158, 159, 162, 163, 164, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1815, 1821, 1822, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1862], "version": [13, 47, 48, 49, 56, 57, 77, 125, 162, 165, 173, 178, 1801, 1817, 1818], "ml": [46, 48, 49, 51, 54, 172, 177, 178, 179, 181, 182, 183, 194, 1801, 1807, 1808, 1809, 1810, 1811, 1814, 1816, 1818], "explos": [46, 48, 1801], "A": [46, 47, 48, 49, 53, 54, 55, 56, 69, 70, 71, 72, 77, 78, 79, 90, 91, 94, 95, 102, 103, 104, 105, 108, 111, 112, 113, 114, 119, 120, 125, 126, 127, 138, 139, 142, 143, 152, 153, 156, 160, 162, 163, 168, 169, 172, 174, 178, 181, 195, 1800, 1801, 1811, 1812], "huge": [46, 48, 181, 1801, 1811, 1817], "number": [46, 47, 56, 57, 59, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 160, 162, 163, 164, 171, 173, 174, 176, 178, 181, 1801], "tool": [46, 49, 57, 164, 179, 183, 194, 195, 1801, 1809, 1810, 1811, 1812, 1814, 1817, 1818], "have": [46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1800, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "explod": [46, 47, 1801], "onto": [46, 47, 1801, 1811], "scene": [46, 47, 80, 81, 156, 177, 179, 1801, 1811], "b": [46, 49, 51, 59, 62, 63, 75, 76, 77, 78, 79, 84, 85, 102, 103, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 164, 169, 177, 178, 179, 181, 182, 183, 193, 1801, 1807], "why": [46, 48, 57, 171, 180, 1801], "unifi": [46, 48, 111, 112, 156, 157, 158, 162, 166, 172, 176, 178, 195, 1801, 1807, 1808, 1809, 1811, 1815, 1818], "should": [46, 48, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 94, 95, 96, 97, 102, 103, 108, 109, 110, 111, 112, 113, 114, 117, 118, 123, 124, 125, 128, 129, 134, 135, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1807, 1808, 1811, 1813, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "we": [46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 77, 106, 107, 125, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1811, 1812, 1816, 1817], "try": [46, 48, 49, 53, 55, 56, 57, 111, 112, 157, 158, 160, 162, 166, 167, 178, 180, 195, 1801], "them": [46, 47, 48, 49, 53, 55, 57, 157, 158, 159, 160, 166, 170, 171, 172, 173, 174, 178, 180, 181, 182, 195, 1800, 1801, 1808, 1809, 1811, 1813, 1817], "c": [46, 48, 49, 51, 56, 77, 78, 79, 80, 81, 84, 85, 90, 91, 102, 103, 119, 120, 123, 124, 125, 126, 127, 128, 129, 134, 135, 138, 139, 150, 151, 156, 160, 164, 169, 176, 177, 178, 179, 181, 195, 1800, 1801, 1807, 1811, 1815, 1816, 1818], "standard": [46, 75, 76, 86, 87, 92, 93, 94, 95, 102, 103, 123, 124, 140, 141, 142, 143, 150, 151, 156, 157, 158, 160, 162, 165, 168, 171, 174, 175, 195, 1801, 1807, 1809, 1810, 1813, 1814, 1816], "re": [46, 47, 48, 51, 55, 56, 57, 78, 79, 96, 97, 144, 145, 156, 157, 162, 172, 175, 176, 180, 183, 195, 1801, 1811], "collabor": [46, 47, 48, 1801], "The": [46, 47, 49, 51, 52, 53, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 183, 194, 1800, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "consortium": [46, 48, 1801], "python": [46, 47, 48, 53, 54, 56, 57, 77, 94, 95, 125, 142, 143, 157, 160, 166, 167, 172, 174, 176, 178, 180, 181, 195, 1800, 1801, 1808, 1811, 1812, 1813, 1817, 1818], "data": [46, 48, 56, 59, 62, 63, 69, 70, 72, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 111, 112, 113, 114, 117, 118, 120, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 163, 165, 168, 169, 170, 171, 173, 175, 176, 178, 180, 1800, 1801, 1811, 1812, 1813, 1815, 1816, 1817], "api": [46, 47, 56, 75, 76, 86, 87, 123, 124, 156, 158, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 195, 1800, 1801, 1807, 1809, 1811, 1813, 1816, 1818], "open": [47, 48, 49, 51, 53, 56, 57, 94, 95, 142, 143, 161, 162, 165, 172, 173, 176, 194, 1801, 1809, 1810, 1811, 1813, 1814], "sourc": [47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 172, 1801, 1810, 1811, 1812, 1813, 1814, 1861, 1862], "project": [47, 48, 49, 53, 56, 57, 159, 174, 182, 194, 195, 1807, 1809, 1811, 1814, 1818], "ha": [47, 48, 49, 55, 57, 77, 86, 87, 90, 91, 98, 99, 102, 103, 111, 112, 119, 120, 126, 127, 134, 135, 138, 139, 146, 147, 150, 151, 157, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 194, 195, 1807, 1810, 1811, 1813, 1814, 1817], "grown": 47, "consider": [47, 164, 168, 176, 1808, 1809], "recent": [47, 48, 56, 57, 174], "year": [47, 49, 157, 195, 1801, 1811], "especi": [47, 56, 176, 1811], "deep": [47, 51, 54, 55, 57, 111, 112, 157, 160, 162, 173, 177, 180, 181, 1801, 1809, 1811, 1814, 1815, 1817, 1818], "learn": [47, 48, 51, 54, 55, 56, 80, 81, 128, 129, 156, 157, 169, 177, 194, 1800, 1801, 1809, 1813, 1814, 1815, 1816, 1817, 1818], "can": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 69, 70, 71, 72, 77, 86, 87, 90, 91, 94, 95, 119, 120, 125, 134, 135, 138, 139, 142, 143, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 195, 1800, 1801, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1817, 1818], "seen": [47, 48, 161, 164, 166, 172, 174, 178, 180, 181, 1817], "from": [47, 48, 49, 51, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818], "rapidli": 47, "increas": [47, 86, 87, 134, 135, 162, 166, 175, 176, 1811], "github": [47, 52, 54, 55, 57, 157, 162, 164, 165, 174], "repo": [47, 52, 53, 54, 56, 57, 157, 162, 172, 175], "contain": [47, 52, 53, 55, 56, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 164, 165, 168, 169, 170, 171, 174, 177, 178, 179, 182, 195, 1800, 1801, 1811, 1812, 1817], "term": [47, 57, 160, 178, 1800, 1811], "over": [47, 49, 56, 57, 77, 86, 87, 102, 103, 104, 105, 106, 107, 119, 120, 125, 134, 135, 150, 151, 152, 153, 154, 155, 159, 164, 165, 171, 178, 180, 195, 1809, 1811], "time": [47, 48, 49, 55, 56, 57, 77, 80, 81, 98, 99, 125, 128, 129, 146, 147, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 174, 175, 178, 181, 183, 195, 1809, 1811, 1812, 1815, 1816, 1817], "These": [47, 48, 49, 52, 54, 55, 56, 57, 77, 125, 157, 160, 161, 162, 164, 165, 167, 168, 169, 171, 173, 174, 175, 178, 179, 181, 182, 183, 195, 1800, 1811, 1815, 1817, 1818], "ar": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 108, 111, 112, 113, 114, 117, 118, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "written": [47, 56, 157, 158, 165, 168, 171, 172, 175, 178, 180, 183, 195, 1809, 1811, 1815, 1817, 1818], "mani": [47, 48, 49, 55, 56, 57, 90, 91, 111, 112, 138, 139, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 195, 1807, 1811, 1814, 1817, 1818], "differ": [47, 48, 49, 54, 56, 57, 59, 62, 63, 75, 76, 77, 78, 79, 108, 111, 112, 113, 114, 125, 126, 127, 150, 151, 156, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 195, 1801, 1808, 1809, 1810, 1811, 1814, 1817, 1818], "while": [47, 48, 55, 56, 57, 108, 111, 112, 113, 114, 159, 162, 164, 167, 168, 171, 172, 174, 176, 180, 182, 183, 195, 1811, 1817, 1818], "thi": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "i": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "wonder": [47, 49, 180], "thing": [47, 48, 49, 54, 55, 56, 57, 159, 167, 172, 174, 176, 180, 181, 1811], "research": [47, 194, 1811, 1818], "develop": [47, 48, 49, 51, 52, 54, 55, 56, 57, 157, 161, 175, 194, 195, 1800, 1801, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1818], "when": [47, 48, 51, 52, 54, 55, 56, 57, 69, 70, 71, 72, 77, 86, 87, 88, 89, 94, 95, 96, 97, 102, 103, 108, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 134, 135, 136, 137, 142, 143, 144, 145, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 183, 195, 1809, 1811, 1814, 1815, 1816, 1817], "also": [47, 48, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 194, 195, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1816, 1817, 1818], "consid": [47, 48, 77, 86, 87, 125, 134, 135, 162, 169, 175, 179, 180, 181, 1808, 1812, 1816, 1818], "speed": [47, 77, 125, 174, 1814], "which": [47, 48, 49, 53, 54, 55, 56, 57, 60, 61, 69, 70, 71, 72, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1816, 1817, 1818], "evolv": [47, 1811], "shareabl": 47, "code": [47, 48, 49, 53, 54, 55, 56, 57, 75, 76, 108, 111, 112, 113, 114, 121, 122, 123, 124, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 193, 195, 1800, 1801, 1807, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818], "significantli": [47, 1809], "hinder": [47, 168], "librari": [47, 48, 49, 51, 55, 121, 122, 157, 176, 183, 193, 195, 1800, 1801, 1807, 1808, 1809, 1811, 1815, 1818], "becom": [47, 49, 57, 77, 125, 160, 164, 172, 195], "outdat": 47, "matter": [47, 164], "month": [47, 56], "rigor": [47, 174], "maintain": [47, 57, 100, 101, 148, 149, 157, 161, 174, 1810], "against": [47, 71, 72, 77, 86, 87, 96, 97, 119, 120, 123, 124, 125, 134, 135, 144, 145, 174, 178, 195, 1811], "newest": 47, "For": [47, 48, 49, 52, 53, 55, 56, 57, 77, 86, 87, 125, 134, 135, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 194, 195, 1808, 1809, 1812, 1817, 1818], "softwar": [47, 48, 56, 57, 1809, 1814, 1815, 1816], "pipelin": [47, 158, 183, 1800, 1811, 1812, 1817], "where": [47, 48, 49, 51, 53, 56, 57, 69, 70, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 102, 103, 104, 105, 111, 112, 117, 118, 123, 124, 125, 134, 135, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 195, 1801, 1809, 1818], "rapid": [47, 48, 56, 1811], "prototyp": [47, 1811], "vital": [47, 183], "signific": [47, 48, 195, 1811], "bottleneck": 47, "As": [47, 57, 106, 107, 154, 155, 158, 160, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 195, 1811, 1816], "new": [47, 48, 49, 51, 53, 55, 56, 57, 77, 78, 79, 80, 81, 90, 91, 92, 93, 111, 112, 117, 118, 125, 126, 127, 128, 129, 138, 139, 140, 141, 156, 159, 160, 161, 162, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 194, 1800, 1801, 1809, 1813, 1817, 1818], "futur": [47, 49, 56, 57, 162, 174, 175, 176, 180, 195, 1817], "avail": [47, 56, 57, 78, 79, 126, 127, 160, 161, 163, 165, 172, 195, 1816, 1817], "backend": [47, 54, 55, 56, 57, 64, 66, 68, 78, 79, 80, 81, 111, 112, 126, 127, 156, 157, 158, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 183, 1800, 1801, 1811, 1814, 1817, 1818], "specif": [47, 55, 56, 57, 78, 79, 121, 122, 126, 127, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 194, 195, 1800, 1807, 1809, 1810, 1812, 1813, 1814, 1818], "quickli": [47, 49, 56, 57, 181, 182, 1811, 1818], "obsolet": [47, 49], "user": [47, 48, 52, 53, 56, 57, 156, 159, 160, 162, 170, 171, 172, 174, 176, 177, 178, 195, 1809, 1811, 1817, 1818], "constantli": [47, 175, 176], "invent": 47, "wheel": 47, "If": [47, 51, 52, 53, 55, 56, 57, 59, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "our": [47, 48, 51, 54, 55, 56, 57, 59, 106, 107, 108, 154, 155, 157, 160, 161, 162, 164, 166, 167, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1816, 1817, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "desir": [47, 57, 71, 72, 77, 96, 97, 111, 112, 119, 120, 121, 122, 125, 144, 145, 159, 162, 172, 178, 1811], "provid": [47, 56, 57, 69, 70, 78, 79, 80, 81, 90, 91, 96, 97, 102, 103, 104, 105, 111, 112, 117, 118, 126, 127, 138, 139, 144, 145, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 174, 176, 180, 182, 194, 195, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818], "simultan": [47, 49], "all": [47, 48, 49, 51, 52, 53, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 78, 79, 86, 87, 90, 91, 94, 95, 104, 105, 106, 107, 111, 112, 115, 116, 123, 124, 126, 127, 134, 135, 138, 139, 142, 143, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1817, 1818], "modern": [47, 48, 1816], "simpl": [47, 55, 56, 57, 158, 160, 162, 163, 164, 165, 169, 171, 172, 174, 175, 176, 180, 182, 183, 195, 1800, 1810, 1811, 1812, 1813], "scalabl": [47, 178, 1816, 1817], "manner": [47, 56, 64, 67, 68, 115, 116, 163, 165, 172, 175, 181, 194, 195, 1807, 1809, 1817, 1818], "must": [47, 49, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 162, 163, 164, 165, 166, 168, 169, 172, 174, 175, 176, 178, 182, 183, 1812, 1818], "determin": [47, 59, 62, 63, 75, 76, 77, 86, 87, 90, 91, 104, 105, 108, 111, 112, 113, 114, 123, 124, 125, 126, 127, 134, 135, 148, 149, 152, 153, 160, 162, 163, 165, 169, 172, 173, 176], "exactli": [47, 49, 160, 162, 163, 164, 174, 176], "common": [47, 55, 75, 76, 77, 111, 112, 125, 160, 162, 163, 164, 167, 169, 170, 172, 175, 176, 195, 1808, 1811, 1818], "ground": [47, 172, 174], "li": 47, "between": [47, 77, 88, 89, 90, 91, 108, 111, 112, 113, 114, 123, 124, 136, 137, 138, 139, 158, 159, 160, 164, 168, 169, 172, 173, 174, 176, 177, 179, 180, 181, 183, 194, 1801, 1807, 1808, 1810, 1811, 1812, 1817], "find": [47, 51, 53, 54, 55, 56, 57, 111, 112, 157, 161, 172, 174, 176, 178, 181, 1800, 1801], "exist": [47, 48, 53, 55, 56, 78, 79, 90, 91, 111, 112, 138, 139, 157, 159, 164, 165, 169, 170, 171, 172, 174, 176, 178, 195, 1800, 1809, 1811, 1814, 1817], "essenti": [47, 48, 55, 160, 163, 164, 169, 172, 175, 1817], "order": [47, 53, 55, 56, 57, 59, 62, 63, 77, 80, 81, 86, 87, 90, 91, 100, 101, 108, 111, 112, 113, 114, 125, 134, 135, 138, 139, 148, 149, 158, 159, 160, 161, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 181, 183, 195, 1807, 1810, 1811, 1812, 1814, 1817], "design": [47, 48, 125, 156, 162, 171, 172, 173, 176, 178, 180, 195, 1807, 1809, 1811, 1814, 1815, 1816], "univers": 47, "abstract": [47, 160, 162, 172, 174, 176, 182, 195, 1809, 1811, 1813, 1814, 1818], "In": [47, 49, 52, 55, 56, 57, 78, 79, 90, 91, 121, 122, 138, 139, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 194, 195, 1801, 1807, 1809, 1811, 1812, 1814, 1817], "search": [47, 54, 56, 64, 67, 68, 97, 115, 116, 145, 160, 164, 174, 175], "languag": [47, 49, 172, 176, 178, 1800, 1809, 1812, 1814, 1815, 1816, 1817], "first": [47, 48, 52, 53, 54, 55, 56, 57, 59, 62, 63, 75, 76, 77, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 108, 113, 114, 123, 124, 125, 134, 135, 138, 139, 142, 143, 146, 147, 150, 151, 157, 158, 160, 164, 168, 169, 170, 171, 172, 174, 176, 178, 180, 181, 183, 1809, 1811, 1812, 1816], "see": [47, 51, 53, 55, 56, 57, 59, 62, 63, 71, 72, 75, 76, 86, 87, 96, 97, 102, 103, 104, 105, 108, 113, 114, 123, 124, 134, 135, 144, 145, 150, 151, 152, 153, 157, 160, 161, 163, 164, 168, 169, 172, 173, 174, 175, 176, 178, 180, 181, 194, 195, 1801, 1807], "clear": [47, 48, 49, 55, 57, 162, 163, 164, 172, 176, 178, 180, 1811], "front": [47, 177, 178, 181, 1801, 1809, 1811], "runner": 47, "look": [47, 52, 53, 56, 57, 159, 160, 162, 163, 164, 166, 168, 169, 172, 173, 174, 175, 176, 178, 180, 182, 183, 1801, 1807, 1811], "littl": [47, 173, 180, 1813], "deeper": [47, 57, 156, 174, 177], "follow": [47, 48, 53, 55, 56, 57, 78, 79, 80, 81, 111, 112, 126, 127, 128, 129, 134, 135, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 1801, 1808, 1811, 1814], "same": [47, 49, 52, 53, 56, 57, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 76, 77, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 111, 112, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 150, 151, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 195, 1801, 1808, 1810, 1817, 1818], "core": [47, 55, 56, 163, 174, 183, 1801, 1809, 1810, 1811, 1812, 1816, 1818], "principl": [47, 1809, 1811, 1814], "oper": [47, 55, 56, 71, 72, 77, 78, 79, 80, 81, 84, 85, 108, 111, 112, 113, 114, 119, 120, 125, 126, 127, 132, 133, 157, 158, 160, 162, 163, 164, 165, 169, 171, 172, 174, 176, 178, 181, 182, 1800, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818], "expos": [47, 178, 182], "almost": [47, 54, 160, 173, 179, 181], "ident": [47, 49, 111, 112, 160, 169, 170, 172, 173, 175, 176, 180, 181, 195, 1800, 1801], "function": [47, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 167, 171, 176, 177, 179, 180, 181, 182, 193, 194, 1800, 1801, 1808, 1809, 1810, 1811, 1812, 1817, 1818], "uniqu": [47, 77, 98, 99, 125, 146, 147, 157, 160, 169, 172, 173, 176, 195, 1814], "syntax": [47, 48, 162, 167, 1811], "argument": [47, 55, 64, 65, 66, 67, 68, 75, 76, 78, 79, 86, 87, 108, 111, 112, 113, 114, 115, 116, 123, 124, 126, 127, 156, 157, 158, 159, 160, 164, 165, 167, 169, 170, 173, 174, 175, 176, 178, 180, 181, 1800, 1811], "There": [47, 55, 56, 57, 157, 158, 160, 162, 164, 166, 167, 169, 172, 173, 178, 181, 195, 1812, 1813, 1817, 1818], "onli": [47, 51, 55, 56, 57, 59, 62, 63, 77, 90, 91, 94, 95, 111, 112, 125, 138, 139, 142, 143, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 193, 195, 1801, 1810, 1811, 1812, 1817, 1818], "so": [47, 48, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 1801, 1811, 1812, 1813, 1815], "wai": [47, 48, 54, 55, 56, 157, 159, 162, 171, 173, 174, 176, 180, 181, 182, 183, 195, 1813, 1817, 1818], "manipul": [47, 91, 139, 172, 175, 176, 178, 183, 194, 1811], "tensor": [47, 69, 70, 75, 76, 77, 78, 79, 90, 91, 94, 95, 111, 112, 117, 118, 123, 124, 125, 126, 127, 138, 139, 142, 143, 158, 159, 162, 163, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 195, 1800, 1801, 1808, 1809, 1812, 1814, 1815, 1818], "unsurprisingli": [47, 164], "fundament": [47, 172, 176, 178, 1811], "consist": [47, 102, 103, 111, 112, 157, 158, 162, 166, 171, 178, 1812], "each": [47, 48, 49, 52, 55, 56, 57, 59, 62, 63, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 108, 111, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 144, 145, 146, 147, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 194, 195, 1801, 1807, 1808, 1812, 1814, 1817], "veri": [47, 48, 54, 55, 56, 57, 77, 125, 160, 162, 163, 164, 168, 169, 171, 172, 173, 174, 175, 176, 179, 181, 182, 183, 195, 1801, 1807, 1808, 1809, 1811, 1812, 1813, 1816, 1817, 1818], "similar": [47, 55, 56, 160, 161, 162, 163, 166, 170, 172, 173, 174, 175, 181, 195, 1807, 1808, 1809, 1810, 1817], "convent": [47, 159, 168, 175, 194, 1817], "those": [47, 55, 56, 57, 90, 91, 111, 112, 125, 138, 139, 160, 162, 170, 172, 174, 176, 1808], "numpi": [47, 48, 54, 55, 56, 57, 78, 79, 102, 103, 126, 127, 157, 159, 161, 162, 163, 166, 168, 171, 173, 174, 175, 176, 178, 180, 183, 1800, 1801, 1813, 1818], "introduc": [47, 160, 161, 162, 173, 181], "2006": 47, "layer": [47, 85, 92, 93, 133, 140, 141, 165, 172, 175, 176, 178, 179, 182, 1801, 1809, 1811, 1815, 1818], "therefor": [47, 52, 55, 57, 75, 76, 86, 87, 123, 124, 157, 158, 160, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 182, 195, 1808, 1811, 1817], "present": [47, 55, 57, 111, 112, 160, 162, 163, 168, 171, 178, 1808, 1809, 1818], "itself": [47, 56, 57, 77, 157, 160, 171, 172, 182, 194, 195, 1810, 1811, 1812, 1817], "cut": [47, 1817], "cloth": 47, "adher": [47, 48, 157, 162, 165, 168, 176, 178, 183, 1807, 1808, 1817], "set": [47, 51, 53, 57, 64, 67, 68, 77, 78, 79, 80, 81, 86, 87, 96, 97, 99, 100, 101, 102, 103, 111, 112, 125, 126, 127, 134, 135, 144, 145, 147, 148, 149, 150, 151, 156, 157, 158, 160, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 1809, 1810, 1811, 1812, 1813, 1815, 1818], "semant": [47, 178, 183, 1812], "round": [47, 48, 49, 52, 53, 55, 56, 57, 75, 76, 77, 123, 124, 125, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "up": [47, 48, 49, 51, 52, 53, 55, 57, 77, 125, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "hopefulli": [47, 48, 49, 52, 53, 55, 56, 57, 59, 108, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "paint": [47, 178], "pictur": [47, 55, 178], "how": [47, 49, 51, 53, 54, 55, 56, 57, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 194, 195, 1801, 1807, 1811], "pleas": [47, 48, 49, 52, 53, 55, 56, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "reach": [47, 48, 49, 52, 53, 55, 56, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "out": [47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "discord": [47, 48, 49, 52, 53, 55, 56, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "you": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 78, 79, 108, 126, 127, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1800, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "ani": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 69, 70, 75, 76, 77, 78, 79, 86, 87, 104, 105, 106, 107, 108, 121, 122, 123, 124, 125, 126, 127, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1800, 1801, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "question": [47, 48, 49, 52, 53, 55, 56, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "With": [48, 49, 56, 59, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 86, 87, 96, 97, 102, 103, 108, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 170, 172, 174, 176, 178, 1811, 1814], "central": [48, 55, 176, 1817], "goal": [48, 55, 1811, 1817], "being": [48, 49, 56, 57, 59, 62, 63, 111, 112, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 176, 178, 181, 194, 195, 1801, 1807, 1809, 1810, 1811, 1812, 1817, 1818], "would": [48, 51, 53, 55, 56, 57, 90, 91, 121, 122, 138, 139, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 180, 182, 183, 195, 1801, 1811, 1817], "entir": [48, 49, 55, 56, 57, 102, 103, 104, 105, 111, 112, 126, 127, 150, 151, 152, 153, 157, 158, 160, 162, 164, 171, 172, 174, 176, 178, 181, 182, 183, 195, 1811, 1817, 1818], "forgiven": 48, "rais": [48, 57, 77, 78, 79, 90, 91, 94, 95, 104, 105, 111, 112, 125, 126, 127, 138, 139, 142, 143, 152, 153, 157, 159, 166, 167, 171, 172, 178, 180], "an": [48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 194, 195, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1800, 1801, 1807, 1809, 1810, 1811, 1812, 1814, 1815, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "eyebrow": 48, "want": [48, 51, 55, 56, 57, 106, 107, 154, 155, 161, 170, 171, 174, 176, 181, 182, 183, 195], "somehow": 48, "tensorflow": [48, 49, 54, 55, 56, 57, 78, 79, 126, 127, 157, 161, 162, 163, 168, 171, 172, 173, 174, 175, 176, 178, 183, 195, 1800, 1801, 1809, 1812, 1814, 1815, 1817, 1818], "pytorch": [48, 49, 54, 55, 80, 81, 161, 162, 163, 166, 168, 169, 171, 172, 173, 175, 176, 178, 183, 195, 1800, 1801, 1812, 1814, 1815, 1817, 1818], "jax": [48, 49, 54, 55, 56, 57, 157, 159, 161, 162, 163, 168, 171, 172, 173, 174, 175, 176, 178, 180, 183, 195, 1801, 1812, 1814, 1817, 1818], "other": [48, 52, 55, 56, 57, 59, 62, 63, 71, 72, 78, 79, 102, 103, 108, 111, 112, 113, 114, 119, 120, 123, 124, 126, 127, 150, 151, 157, 158, 160, 161, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 193, 194, 195, 1800, 1801, 1807, 1809, 1810, 1811, 1817, 1818], "strong": [48, 195, 1811], "industri": [48, 1811, 1813], "back": [48, 56, 57, 77, 90, 91, 125, 138, 139, 158, 162, 170, 177, 195, 1809, 1813], "momentum": 48, "won": [48, 49, 56, 57, 160, 183], "t": [48, 49, 52, 53, 55, 56, 57, 59, 62, 63, 106, 107, 126, 127, 154, 155, 156, 159, 160, 161, 162, 164, 170, 171, 174, 176, 178, 180, 181, 182, 183, 195, 1809, 1811, 1813], "ad": [48, 54, 55, 56, 57, 90, 91, 138, 139, 154, 155, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 195, 1810, 1811], "just": [48, 49, 56, 57, 102, 103, 157, 159, 162, 164, 165, 169, 170, 171, 172, 173, 174, 178, 180, 181, 195, 1811, 1812, 1817], "make": [48, 49, 55, 56, 57, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 1809, 1811, 1812, 1813, 1814, 1817, 1818], "problem": [48, 57, 157, 158, 172, 180, 1807, 1813, 1817], "even": [48, 49, 56, 57, 77, 125, 157, 162, 163, 165, 168, 169, 172, 176, 180, 181, 182, 183, 195, 1817], "wors": 48, "rather": [48, 57, 78, 79, 111, 112, 126, 127, 157, 160, 162, 165, 171, 172, 173, 174, 175, 183, 195, 1807, 1810, 1811], "funni": 48, "comic": 48, "strip": 48, "": [48, 49, 51, 52, 53, 55, 56, 57, 69, 70, 77, 78, 79, 80, 81, 86, 87, 102, 103, 125, 126, 127, 128, 129, 134, 135, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 194, 195, 1800, 1801, 1807, 1810, 1811, 1812, 1814, 1815, 1816, 1817], "easi": [48, 56, 57, 160, 169, 173, 174, 176, 1809, 1811, 1817, 1818], "feasibl": [48, 55], "space": [48, 77, 78, 79, 123, 124, 126, 127, 176], "howev": [48, 55, 56, 57, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 195, 1810, 1811, 1817], "import": [48, 52, 54, 55, 56, 57, 106, 107, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 167, 171, 172, 173, 174, 175, 178, 180, 181, 183, 195, 1801, 1807, 1809, 1811, 1814, 1815, 1817], "case": [48, 55, 56, 57, 64, 67, 68, 77, 78, 79, 90, 91, 102, 103, 108, 111, 112, 113, 114, 126, 127, 138, 139, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 195, 1810, 1814], "ivi": [48, 49, 51, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 176, 177, 193, 195, 1800, 1801, 1807, 1818, 1861, 1862], "unlik": [48, 157, 160, 164, 171, 1816, 1818], "charger": 48, "charact": [48, 167], "encod": [48, 78, 79, 126, 127, 181], "instant": [48, 1801], "messag": [48, 57, 161, 164, 166, 167, 172, 178, 180, 1861, 1862], "much": [48, 55, 56, 57, 158, 160, 162, 171, 172, 173, 175, 178, 180, 181, 1809, 1811, 1817, 1818], "one": [48, 49, 55, 56, 57, 69, 70, 77, 78, 79, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 111, 112, 117, 118, 123, 124, 125, 126, 127, 128, 129, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 162, 164, 167, 168, 169, 170, 171, 172, 174, 176, 177, 180, 181, 183, 195, 1801, 1811, 1812, 1814, 1817], "doe": [48, 53, 55, 57, 77, 90, 91, 111, 112, 125, 138, 139, 156, 159, 162, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 195, 1800, 1807, 1811, 1812, 1818], "mandat": [48, 162, 171, 174, 175], "adopt": [48, 57, 158, 168, 176, 1810, 1811, 1816], "continu": [48, 49, 54, 55, 56, 156, 157, 167, 174, 195, 1811], "own": [48, 49, 56, 157, 162, 165, 166, 172, 175, 178, 195, 1800, 1807, 1810, 1811, 1816, 1817], "call": [48, 53, 57, 108, 113, 114, 119, 120, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 195, 1811, 1812, 1815], "signatur": [48, 75, 76, 123, 124, 162, 163, 164, 165, 168, 171, 174, 175, 176, 1808, 1817], "replac": [48, 53, 57, 75, 76, 77, 78, 79, 90, 91, 94, 95, 111, 112, 125, 126, 127, 138, 139, 142, 143, 160, 162, 163, 164, 170, 172, 174, 180, 183, 195, 1818], "your": [48, 49, 51, 52, 53, 54, 55, 56, 157, 165, 175, 176, 181, 182, 195, 1801, 1811], "1": [48, 49, 53, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 195, 1801], "10": [48, 53, 56, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 95, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 162, 164, 173, 174, 178, 180, 181, 1816], "100": [48, 49, 77, 125, 126, 127, 174, 181, 182, 183, 195, 1801], "despit": [48, 160, 162, 163, 176, 178, 1808, 1811], "distinct": [48, 56, 160, 165, 171, 172, 177, 1801, 1811], "still": [48, 55, 57, 111, 112, 162, 165, 171, 172, 174, 176, 182, 195, 1801, 1808, 1811, 1817], "believ": [48, 57], "share": [48, 111, 112, 159, 160, 164, 169, 173, 174, 176, 178, 1809, 1810, 1817], "bring": [48, 157, 174, 178, 179, 1800], "benefit": [48, 49, 56, 158, 160, 171, 176, 180, 181, 195, 1809, 1813, 1816], "unrel": [48, 57], "what": [48, 49, 52, 57, 156, 160, 164, 165, 168, 170, 172, 174, 177, 178, 180, 181, 182, 183, 194, 195, 1801, 1807, 1812, 1813, 1816], "again": [48, 49, 57, 159, 160, 164, 171, 172, 174, 175, 176, 181, 183, 195, 1816, 1817], "contrari": 48, "bumpi": 48, "road": 48, "allud": [48, 181], "most": [48, 54, 55, 56, 111, 112, 117, 118, 158, 160, 162, 163, 167, 168, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 195, 1811, 1812, 1814, 1815, 1817, 1818], "technologi": [48, 1809, 1813], "sector": [48, 75, 76, 123, 124], "full": [48, 49, 57, 86, 87, 162, 165, 168, 172, 174, 176, 178, 195, 1809, 1811, 1817], "success": 48, "reason": [48, 55, 57, 157, 158, 160, 162, 164, 169, 171, 172, 175, 176, 178, 180, 1817], "build": [48, 51, 52, 56, 161, 162, 169, 177, 179, 182, 183, 195, 1800, 1801, 1809, 1811, 1813, 1816, 1817, 1818], "custom": [48, 161, 166, 173, 174, 182, 1811, 1815, 1816, 1817], "comput": [48, 49, 56, 60, 61, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 102, 103, 109, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 150, 151, 160, 162, 169, 172, 174, 176, 178, 181, 195, 1800, 1807, 1809, 1811, 1812, 1814, 1815, 1817], "thank": [48, 181], "interoper": [48, 1808, 1809, 1811, 1814], "compon": [48, 178, 1807, 1812, 1814], "bio": [48, 56], "hardwar": [48, 56, 59, 62, 63, 176, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817], "initi": [48, 57, 108, 111, 112, 113, 114, 159, 162, 163, 174, 178, 1811, 1817, 1818], "pcie": 48, "interfac": [48, 180, 183, 195, 1800, 1807, 1808, 1809, 1810, 1811, 1815, 1818], "motherboard": 48, "raid": 48, "storag": [48, 181], "virtual": [48, 52, 53, 57, 1814, 1815], "bluetooth": 48, "wireless": 48, "exchang": [48, 54, 1807, 1809], "btx": 48, "form": [48, 51, 64, 65, 66, 67, 68, 69, 70, 80, 81, 86, 87, 111, 112, 134, 135, 169, 174, 176, 182, 183, 1811, 1812, 1817], "factor": [48, 80, 81, 84, 85, 86, 87, 125, 128, 129, 132, 133, 134, 135, 166], "sata": 48, "connect": [48, 56, 182, 183, 1809], "host": [48, 195, 1816], "bu": 48, "adapt": [48, 128, 129], "devic": [48, 57, 59, 62, 63, 69, 70, 74, 94, 95, 111, 112, 117, 118, 122, 125, 126, 127, 142, 143, 156, 159, 162, 166, 169, 170, 173, 174, 175, 176, 178, 183, 195, 1800, 1810, 1811, 1813, 1814, 1815, 1816], "html": [48, 53, 75, 76, 123, 124, 165], "enabl": [48, 56, 57, 108, 111, 112, 113, 114, 158, 160, 169, 170, 171, 172, 174, 176, 177, 179, 181, 183, 195, 1800, 1809, 1810, 1811, 1812, 1813, 1814, 1817, 1818], "anyon": [48, 51, 57, 195, 1817], "websit": [48, 157], "tcp": 48, "ip": 48, "node": [48, 111, 112, 126, 127, 160, 172, 1812], "commun": [48, 51, 55, 56, 57, 195, 1801, 1810, 1811, 1813], "network": [48, 160, 169, 178, 182, 194, 1801, 1807, 1809, 1810, 1811, 1815, 1817, 1818], "smtp": 48, "possibl": [48, 51, 55, 56, 57, 90, 91, 138, 139, 157, 160, 161, 162, 164, 165, 171, 172, 173, 174, 176, 178, 181, 194, 195, 1809, 1811, 1817], "send": [48, 1816], "gmail": 48, "outlook": 48, "pop": [48, 56], "u": [48, 51, 56, 57, 86, 87, 134, 135, 160, 170, 171, 172, 173, 174, 175, 176, 182, 195], "email": 48, "ieee": 48, "754": 48, "allow": [48, 52, 55, 57, 161, 162, 166, 167, 170, 172, 173, 174, 178, 180, 195, 1800, 1809, 1811, 1815, 1816], "calcul": [48, 55, 75, 76, 77, 88, 89, 102, 103, 108, 111, 112, 113, 114, 123, 124, 125, 136, 137, 150, 151, 165, 173, 178], "live": [48, 49, 162, 1807, 1809], "depend": [48, 52, 55, 56, 57, 71, 72, 78, 79, 100, 101, 119, 120, 148, 149, 150, 151, 162, 165, 170, 171, 172, 174, 176, 178, 195, 1809, 1811, 1812], "did": [48, 55, 183, 1817], "aris": [48, 162, 195], "until": [48, 57, 167, 175, 178, 195, 1801, 1818], "wa": [48, 57, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 164, 172, 178, 180, 1810, 1811, 1813], "substanti": [48, 57, 158, 162, 174, 1811], "innov": 48, "growth": [48, 1814], "usag": [48, 162, 174, 178, 195, 1814], "relev": [48, 55, 56, 57, 160, 161, 162, 164, 173, 181, 1809, 1816, 1817], "area": [48, 75, 76, 123, 124, 171, 193, 1801, 1807], "necess": 48, "parti": [48, 195, 1810, 1811, 1817], "could": [48, 49, 55, 56, 57, 157, 162, 164, 170, 171, 172, 173, 174, 178, 180, 181, 182, 1811, 1816, 1817], "easili": [48, 56, 161, 172, 176, 181, 182, 183, 195, 1801, 1811, 1817, 1818], "engag": [48, 51, 57], "regard": [48, 54, 160, 172, 173, 176], "effect": [48, 55, 80, 81, 102, 103, 128, 129, 150, 151, 158, 160, 165, 168, 171, 176, 195], "2015": [48, 1811], "sinc": [48, 56, 57, 77, 125, 157, 160, 171, 172, 195, 1811, 1817], "alongsid": 48, "machin": [48, 56, 86, 87, 134, 135, 157, 169, 194, 1800, 1809, 1811, 1813, 1814, 1815, 1816, 1817], "given": [48, 49, 53, 55, 56, 57, 59, 77, 78, 79, 88, 89, 90, 91, 94, 95, 108, 111, 112, 125, 126, 127, 128, 129, 136, 137, 138, 139, 142, 143, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1813, 1814, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "frame": [48, 194, 1811], "less": [48, 57, 59, 62, 63, 75, 76, 77, 86, 87, 94, 95, 102, 103, 123, 124, 125, 134, 135, 142, 143, 160, 162, 164, 166, 168, 171, 172, 174, 176, 177, 178, 1811, 1813], "matur": [48, 195, 1811], "state": [48, 56, 162, 165, 166, 168, 172, 174, 177, 178, 179, 181, 194, 1801, 1817, 1818], "than": [48, 52, 57, 59, 62, 63, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 108, 111, 112, 113, 114, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 157, 160, 161, 162, 164, 166, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 195, 1808, 1809, 1810, 1811, 1817, 1818], "preced": [48, 182], "mention": [48, 55, 56, 57, 164, 168, 169, 171, 172, 174, 176, 1811], "aros": 48, "70": [48, 126, 127], "80": 48, "90": [48, 75, 76, 77, 123, 124, 125], "effort": [48, 51, 195, 1807, 1811, 1817], "stage": [48, 51, 53, 57, 156, 167, 174, 1801, 1811], "complet": [48, 55, 57, 111, 112, 157, 158, 160, 161, 164, 172, 173, 174, 180, 181, 1809], "natur": [48, 86, 87, 134, 135, 158, 164, 173, 194], "like": [48, 53, 55, 56, 57, 77, 90, 91, 125, 138, 139, 156, 157, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 194, 195, 1801, 1811, 1816], "certainli": [48, 1817], "mission": [48, 1801, 1813], "creat": [48, 51, 52, 53, 55, 56, 57, 69, 70, 77, 94, 95, 111, 112, 117, 118, 125, 126, 127, 142, 143, 162, 163, 166, 170, 171, 172, 173, 174, 176, 178, 179, 182, 193, 194, 1800, 1801, 1811, 1812, 1817], "At": [48, 55, 56, 157, 172, 174, 175, 1811], "process": [48, 49, 51, 53, 56, 57, 160, 169, 172, 173, 174, 176, 178, 183, 1809, 1810, 1811, 1814, 1815, 1817, 1818], "ourselv": [48, 1817], "lead": [48, 49, 108, 111, 112, 113, 114, 164, 195], "quansight": [48, 1817], "compani": [48, 1807], "made": [48, 52, 55, 57, 77, 125, 157, 161, 171, 172, 175, 178, 180, 1811], "organ": [48, 158, 160, 169, 172, 175, 1800], "panda": 48, "scipi": [48, 1813, 1818], "conda": [48, 53, 56, 1813], "dask": 48, "apach": [48, 1813, 1817], "mxnet": [48, 1818], "onnx": [48, 1809, 1817], "scikit": 48, "jupyt": [48, 1813], "aw": 48, "cupi": [48, 1811, 1818], "net": [48, 49, 178, 183], "sympi": 48, "rai": 48, "modin": 48, "spyder": 48, "includ": [48, 55, 57, 69, 70, 77, 78, 79, 96, 97, 102, 103, 104, 105, 111, 112, 123, 124, 125, 126, 127, 134, 135, 144, 145, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 194, 195, 1808, 1809, 1811, 1813, 1816, 1817, 1818], "member": [48, 55, 57, 172], "googl": [48, 1801], "octoml": [48, 1817], "einop": [48, 78, 79, 126, 127], "further": [48, 49, 53, 57, 157, 158, 164, 166, 172, 174, 177, 178, 181, 182, 1801, 1816, 1817], "sponsor": 48, "lg": 48, "electron": 48, "microsoft": [48, 1811, 1816, 1818], "d": [48, 49, 51, 56, 77, 84, 85, 86, 87, 125, 132, 133, 134, 135, 156, 160, 174, 181, 1801, 1807], "e": [48, 49, 51, 52, 53, 55, 56, 57, 59, 62, 63, 77, 80, 81, 86, 87, 94, 95, 100, 101, 102, 103, 125, 134, 135, 142, 143, 148, 149, 150, 151, 156, 157, 160, 166, 172, 174, 178, 181, 195, 1800, 1807], "shaw": 48, "co": [48, 54, 75, 76, 78, 79, 123, 124, 162, 178, 194, 1801], "intel": [48, 1809, 1816], "togeth": [48, 111, 112, 158, 160, 167, 172, 175, 176, 182, 183, 195, 1809, 1811, 1812, 1817], "major": [48, 162, 163, 174, 195, 1808, 1811], "involv": [48, 51, 53, 71, 72, 119, 120, 156, 162, 164, 176, 183, 1811, 1817], "anoth": [48, 55, 56, 57, 160, 162, 169, 170, 172, 173, 174, 176, 178, 180, 183, 1800, 1811, 1817], "promis": 48, "sign": [48, 56, 75, 76, 86, 87, 123, 124, 134, 135, 178, 183], "pursuit": 48, "unif": [48, 51, 180, 1807, 1817], "clearli": [48, 55, 57, 164, 173, 174, 1815], "lot": [48, 49, 162, 170, 174, 195, 1810], "thought": [48, 56, 57, 168, 1809], "care": [48, 57, 172, 176, 183], "attent": [48, 57, 158], "gone": [48, 177], "simplifi": [48, 166, 172, 178, 179, 182, 1807, 1809, 1810, 1811, 1814, 1817, 1818], "compat": [48, 59, 62, 63, 75, 76, 86, 87, 90, 91, 96, 97, 102, 103, 104, 105, 108, 113, 114, 123, 124, 134, 135, 138, 139, 144, 145, 150, 151, 152, 153, 159, 168, 172, 173, 175, 178, 195, 1801], "excit": [48, 51, 156, 1801], "complianc": 48, "hope": [48, 195, 1817], "due": [48, 52, 56, 157, 171, 172, 1811], "suit": [48, 56, 156, 157, 161, 174, 181, 194, 1800, 1811, 1817], "some": [48, 49, 55, 56, 57, 111, 112, 128, 129, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 194, 195, 1800, 1801, 1807, 1808, 1810, 1811, 1812, 1817, 1818], "motiv": [48, 180], "great": [48, 49, 57, 174, 178, 180, 1817], "convinc": 48, "celebr": 48, "encourag": [48, 194, 195], "foundat": [48, 1814], "point": [49, 55, 56, 57, 71, 72, 75, 76, 77, 86, 87, 94, 95, 102, 103, 119, 120, 123, 124, 125, 134, 135, 142, 143, 150, 151, 157, 158, 161, 164, 165, 168, 171, 172, 174, 175, 176, 178, 180, 181, 194, 1817], "mai": [49, 54, 55, 56, 57, 75, 76, 77, 100, 101, 121, 122, 123, 124, 148, 149, 157, 160, 162, 171, 172, 174, 179, 180, 182, 1818], "ask": [49, 55, 56, 164, 178, 180, 195], "perfectli": 49, "happi": [49, 56, 195], "current": [49, 53, 55, 56, 57, 78, 79, 108, 111, 112, 113, 114, 157, 159, 160, 162, 163, 166, 169, 170, 172, 173, 174, 176, 178, 183, 194, 195, 1801, 1811, 1817, 1818], "us": [49, 51, 52, 54, 55, 57, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 194, 195, 1800, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "abund": 49, "better": [49, 52, 156, 172, 173, 175, 176, 177, 180, 181, 182, 1814], "ll": [49, 51, 56, 57, 164, 171, 181], "give": [49, 52, 56, 57, 156, 159, 164, 165, 168, 174, 1811, 1815], "two": [49, 55, 56, 59, 62, 63, 69, 70, 77, 86, 87, 108, 113, 114, 125, 134, 135, 157, 158, 162, 164, 165, 172, 174, 176, 177, 181, 183, 1801, 1808, 1816], "exampl": [49, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 178, 180, 181, 182, 183, 194, 195, 1801, 1808, 1809, 1812, 1814, 1817, 1818], "streamlin": [49, 1814], "workflow": [49, 55, 57, 159, 161, 162, 172, 181, 193, 1800, 1801, 1810, 1817, 1818], "save": [49, 52, 111, 112, 167, 174, 195, 1810], "week": [49, 57, 1801], "let": [49, 52, 78, 79, 102, 103, 126, 127, 160, 162, 163, 164, 165, 166, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 1801, 1818], "sai": [49, 56, 170, 180], "deepmind": 49, "releas": [49, 55, 56, 57, 162, 172, 175, 176, 195, 1801, 1811, 1817], "awesom": 49, "paper": 49, "love": 49, "choic": [49, 56, 102, 103, 150, 151, 171, 172, 181, 1811], "perceiverio": 49, "happen": [49, 56, 57, 174, 181], "slew": 49, "rush": 49, "f": [49, 51, 53, 57, 77, 90, 91, 125, 138, 139, 156, 160, 167, 178, 181, 1807], "g": [49, 51, 55, 56, 77, 94, 95, 142, 143, 156, 157, 160, 172, 174, 178, 195, 1800, 1807], "inevit": [49, 1812], "deviat": [49, 92, 93, 94, 95, 102, 103, 140, 141, 142, 143, 150, 151, 157], "origin": [49, 55, 57, 59, 62, 63, 77, 86, 87, 90, 91, 102, 103, 108, 111, 112, 113, 114, 125, 134, 135, 138, 139, 150, 151, 159, 162, 170, 171, 172, 173, 178, 1811, 1812], "often": [49, 54, 157, 166, 167, 168, 169, 172, 174, 195, 1812, 1815, 1818], "erron": 49, "train": [49, 80, 81, 84, 85, 128, 129, 132, 133, 160, 163, 169, 181, 182, 183, 193, 194, 195, 1800, 1801, 1809, 1810, 1815, 1817, 1818], "poor": 49, "converg": 49, "perform": [49, 80, 81, 102, 103, 104, 105, 126, 127, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 195, 1808, 1811, 1812, 1813, 1814, 1815, 1816, 1818], "issu": [49, 51, 54, 55, 157, 159, 162, 164, 166, 172, 174, 178, 182, 195], "etc": [49, 55, 56, 57, 69, 70, 94, 95, 106, 107, 126, 127, 142, 143, 154, 155, 157, 158, 160, 161, 162, 164, 166, 168, 172, 173, 174, 175, 178, 180, 181, 195, 1800, 1809, 1811, 1817], "publish": [49, 195], "manag": [49, 51, 171, 195, 1813, 1815], "get": [49, 51, 54, 55, 56, 75, 76, 111, 112, 156, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 1800, 1811, 1817], "work": [49, 54, 55, 56, 57, 156, 157, 160, 162, 163, 164, 166, 172, 173, 174, 175, 177, 178, 180, 182, 183, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "repositori": [49, 52, 53, 56, 57, 156, 157, 161, 167], "pull": [49, 51, 52, 53, 55, 56, 157, 164, 175, 176, 195], "request": [49, 51, 55, 164, 175, 176], "confus": [49, 162, 166, 171, 176, 1800], "do": [49, 55, 56, 57, 78, 79, 111, 112, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 178, 180, 181, 182, 183, 195, 1800, 1812, 1817, 1818], "don": [49, 55, 56, 57, 106, 107, 154, 155, 162, 174, 182, 195], "expect": [49, 57, 157, 162, 166, 174, 195, 1801], "codebas": [49, 51, 156, 162, 171, 172, 174, 175, 177, 1801], "total": [49, 51, 57, 77, 102, 103, 108, 111, 112, 113, 114, 125, 150, 151, 162, 163, 164, 174, 176, 181, 182, 195], "hour": [49, 161], "spent": 49, "spin": 49, "off": [49, 56, 177, 1817], "test": [49, 54, 55, 75, 76, 77, 104, 105, 123, 124, 125, 152, 153, 156, 162, 164, 166, 167, 170, 172, 175, 195, 1811], "discuss": [49, 56, 57, 162, 163, 171, 172, 174, 176, 179, 180, 181, 195, 1801, 1807, 1812], "error": [49, 54, 56, 57, 75, 76, 111, 112, 123, 124, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 172, 174, 175, 180, 195, 1811], "iter": [49, 64, 65, 66, 67, 68, 78, 79, 106, 107, 108, 111, 112, 113, 114, 126, 127, 154, 155, 160, 178, 181], "address": [49, 55, 57, 157, 158, 178, 1807, 1809, 1811, 1817], "sake": 49, "singl": [49, 55, 56, 57, 77, 94, 95, 111, 112, 123, 124, 142, 143, 157, 160, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 195], "multipl": [49, 57, 77, 92, 93, 102, 103, 104, 105, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 135, 138, 139, 140, 141, 150, 151, 152, 153, 159, 160, 164, 166, 169, 171, 172, 174, 176, 178, 195, 1809, 1810, 1811, 1818], "line": [49, 56, 157, 158, 164, 167, 170, 174, 176, 179, 180, 181, 182, 193, 1801, 1814], "convert": [49, 55, 64, 65, 66, 67, 68, 69, 70, 75, 76, 115, 116, 123, 124, 158, 170, 174, 178, 195, 1800, 1809, 1810, 1817], "directli": [49, 57, 157, 158, 160, 161, 162, 163, 165, 169, 170, 171, 172, 173, 175, 176, 178, 180, 182, 183, 194, 195, 1815, 1816, 1817], "graph": [49, 80, 81, 160, 169, 172, 176, 179, 195, 1800, 1807, 1811, 1814], "guarante": [49, 158, 195], "turn": [49, 56, 160, 164, 172, 174], "4": [49, 53, 55, 56, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 164, 174, 178, 180, 181, 182, 183, 1801, 1811, 1817, 1818], "step": [49, 52, 53, 55, 56, 57, 77, 80, 81, 117, 118, 125, 128, 129, 158, 159, 160, 162, 163, 164, 172, 174, 178, 181, 182, 183, 194, 1801, 1811], "take": [49, 51, 55, 56, 57, 77, 90, 91, 102, 103, 125, 138, 139, 157, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 178, 180, 182, 183, 195, 1801, 1808, 1809, 1817], "few": [49, 54, 55, 57, 160, 162, 163, 168, 169, 171, 174, 176, 178, 179, 180, 181, 182, 193, 1801, 1811, 1813], "second": [49, 56, 59, 62, 63, 75, 76, 77, 80, 81, 86, 87, 94, 95, 98, 99, 108, 113, 114, 123, 124, 125, 128, 129, 134, 135, 146, 147, 157, 162, 164, 171, 172, 174, 180, 1816], "automat": [49, 55, 56, 57, 156, 160, 161, 162, 167, 169, 176, 177, 179, 182, 183, 1800, 1801, 1811, 1814, 1818], "convers": [49, 55, 65, 66, 67, 68, 75, 76, 116, 170, 177, 179, 183, 194, 195, 1800, 1801, 1810, 1817], "everyon": [49, 51, 57, 195], "regardless": [49, 51, 111, 112, 162, 180, 183], "wouldn": 49, "nice": [49, 174, 1811], "write": [49, 53, 54, 55, 57, 60, 61, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 159, 162, 164, 165, 169, 171, 172, 173, 175, 178, 180, 183, 1811, 1818], "onc": [49, 55, 56, 57, 94, 95, 142, 143, 160, 162, 163, 164, 172, 174, 176, 178, 181, 195], "know": [49, 57, 173, 174, 175, 1812], "among": [49, 111, 112, 174, 176, 1811], "frantic": 49, "port": 49, "last": [49, 57, 59, 62, 63, 69, 70, 77, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 111, 112, 125, 134, 135, 136, 137, 138, 139, 148, 149, 150, 151, 152, 153, 157, 159, 162, 164, 167, 171, 173, 174, 176, 178, 195, 1811], "lucid": 49, "honk": 49, "improv": [49, 57, 162, 168, 169, 176, 178, 1800, 1809, 1811, 1813, 1814], "understand": [49, 52, 53, 54, 55, 56, 57, 156, 157, 164, 165, 168, 173, 176, 177, 1807, 1817], "pattern": [49, 78, 79, 126, 127, 162, 165], "hasn": 49, "chang": [49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 161, 162, 164, 165, 172, 174, 175, 176, 178, 182, 195, 1801, 1814, 1817], "now": [49, 53, 56, 157, 159, 160, 162, 167, 168, 170, 172, 174, 175, 176, 180, 181, 183, 194, 195, 1811], "spend": [49, 1811], "torchvis": 49, "probabl": [49, 94, 95, 142, 143, 174], "sonnet": 49, "about": [49, 54, 55, 56, 57, 157, 161, 162, 168, 174, 175, 176, 177, 178, 180, 181, 182, 183, 195, 1812, 1813, 1816], "next": [49, 52, 55, 56, 57, 77, 125, 159, 164, 165, 170, 172, 175, 179, 180, 181, 1801, 1811, 1813], "everyth": [49, 55, 57, 164, 172, 173, 174, 175, 179, 195], "zero": [49, 69, 70, 71, 72, 75, 76, 77, 80, 81, 86, 87, 96, 97, 102, 103, 104, 105, 117, 118, 119, 120, 123, 124, 125, 128, 129, 134, 135, 142, 143, 144, 145, 150, 151, 152, 153, 158, 160, 162, 163, 164, 168, 170, 178, 181, 182, 1801, 1810], "need": [49, 52, 53, 55, 56, 57, 78, 79, 90, 91, 126, 127, 138, 139, 157, 158, 160, 162, 164, 165, 166, 169, 171, 172, 173, 175, 176, 178, 180, 181, 194, 195, 1807, 1811, 1812, 1813, 1817], "said": 49, "high": [49, 55, 94, 95, 142, 143, 172, 176, 181, 1800, 1807, 1808, 1809, 1810, 1811, 1815, 1817, 1818], "level": [49, 51, 55, 57, 160, 169, 172, 176, 177, 178, 181, 182, 183, 195, 1800, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818], "modul": [49, 53, 56, 106, 107, 108, 111, 112, 113, 114, 154, 155, 158, 159, 167, 169, 171, 172, 174, 178, 179, 181, 183, 194, 195, 1801, 1811, 1812, 1814], "optim": [49, 80, 81, 128, 129, 171, 179, 181, 183, 194, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1818], "trainer": [49, 193, 195, 1801, 1818], "statu": [49, 55, 161], "quo": 49, "kera": [49, 1817], "dopamin": 49, "ignit": 49, "catalyst": 49, "lightn": 49, "fastai": 49, "haiku": [49, 183, 1811], "flax": [49, 183, 195, 1811], "trax": [49, 183], "objax": [49, 183], "idea": [49, 52, 172, 175, 179, 194, 1810], "fulli": [49, 158, 162, 168, 171, 176, 178, 179, 180, 181, 182, 183, 195, 1809, 1810, 1811, 1817, 1818], "offer": [49, 56, 172, 182, 1811, 1817, 1818], "strongli": [51, 56, 1817, 1818], "welcom": [51, 56, 57], "absolut": [51, 56, 75, 76, 77, 86, 87, 111, 112, 123, 124, 125, 134, 135, 176], "skill": [51, 1813], "whether": [51, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 90, 91, 94, 95, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 164, 168, 171, 172, 174, 175, 176], "veteran": 51, "beginn": [51, 1811], "aspect": [51, 181, 1801, 1811], "guid": [51, 55, 56, 57, 167, 172, 1801, 1817], "through": [51, 54, 55, 57, 77, 125, 156, 159, 160, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 194, 1809, 1811, 1812, 1813], "journei": [51, 1801], "inclus": [51, 159, 171, 176], "big": [51, 195, 1811], "team": [51, 55, 56, 57, 172, 1813], "board": 51, "contributor": [51, 56, 57, 172, 177, 1801, 1811], "split": [51, 57, 77, 90, 91, 111, 112, 125, 138, 139, 177, 178, 195, 1801, 1818], "section": [51, 52, 54, 55, 57, 77, 125, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 1807, 1814, 1817], "below": [51, 53, 55, 56, 69, 70, 150, 151, 156, 157, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 194, 1801, 1807, 1809, 1814, 1816], "best": [51, 54, 55, 56, 57, 156, 162, 167, 174, 175, 1814, 1815], "go": [51, 52, 55, 56, 57, 156, 159, 162, 164, 172, 173, 174, 175, 177, 181, 195, 1807, 1811, 1812, 1816, 1818], "start": [51, 52, 53, 55, 56, 57, 111, 112, 117, 118, 156, 161, 162, 164, 165, 168, 172, 174, 176, 177, 178, 180, 181, 182, 194, 195, 1811, 1817], "finish": [51, 55, 56, 156, 1801], "dive": [51, 54, 55, 57, 157, 160, 162, 173, 177, 180, 181, 195, 1801, 1817], "right": [51, 56, 57, 86, 87, 108, 111, 112, 113, 114, 134, 135, 156, 157, 164, 176, 181], "environ": [51, 52, 53, 57, 194, 1811, 1813], "basic": [51, 53, 55, 164, 174], "fork": [51, 56, 157], "doc": [51, 54, 55, 164, 165, 168, 173, 174, 178, 181, 182, 1801], "document": [51, 54, 57, 162, 164, 172, 173, 174, 181, 183], "local": [51, 52, 53, 56, 157, 169], "task": [51, 57, 172, 173, 194, 1801, 1811, 1817, 1818], "help": [51, 52, 55, 56, 158, 159, 160, 162, 164, 170, 172, 174, 175, 176, 180, 181, 182, 193, 1800, 1801, 1807, 1811, 1813, 1817], "appli": [51, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 180, 181, 182, 183, 193, 195, 1800, 1801, 1812], "resourc": [51, 55], "video": [51, 56, 57, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 1809], "contribut": [52, 54, 55, 56, 57, 172, 178, 1815], "toward": [52, 56, 77, 90, 91, 138, 139, 175, 178, 1807, 1811], "requir": [52, 53, 55, 56, 77, 125, 158, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 178, 180, 195, 1811, 1817], "slightli": [52, 160, 172, 178, 182], "more": [52, 54, 55, 57, 77, 90, 91, 98, 99, 125, 138, 139, 146, 147, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 194, 195, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1817, 1818], "complex": [52, 55, 162, 164, 174, 176, 181, 182, 183, 195, 1800, 1807, 1809, 1811, 1813, 1817, 1818], "setup": [52, 56, 57], "alon": [52, 174], "instanc": [52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 162, 164, 165, 168, 169, 170, 171, 174, 181, 182, 183, 1800, 1812], "mech": 52, "vision": [52, 193, 1801, 1807, 1817], "demo": [52, 194, 1801], "util": [52, 105, 153, 163, 166, 175, 1809, 1817, 1818], "thu": [52, 55, 166, 172], "relat": [52, 54, 56, 57, 167, 172, 174, 175, 176, 194, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818], "folder": [52, 53, 56, 57, 157, 169, 172, 174, 175], "To": [52, 53, 56, 157, 160, 162, 164, 166, 167, 169, 172, 173, 174, 175, 181, 182, 183, 1801], "grasp": [52, 172], "directori": [52, 53, 55, 56, 57, 161, 172, 174], "tree": [52, 53, 162], "place": [52, 54, 57, 64, 66, 68, 69, 70, 75, 76, 77, 78, 79, 86, 87, 90, 91, 111, 112, 117, 118, 121, 122, 123, 124, 125, 126, 127, 138, 139, 142, 143, 156, 157, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 1800, 1813], "dir": [52, 181], "clone": [52, 53, 57], "mutual": [52, 160, 169], "git": [52, 54, 56, 57, 157, 174], "http": [52, 56, 75, 76, 123, 124, 128, 129, 157, 162, 165], "com": [52, 56, 157, 162], "unifyai": [52, 53, 56, 57], "type": [52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 167, 168, 170, 171, 173, 174, 175, 176, 178, 180, 181, 1801, 1811, 1812, 1815], "venv": 52, "python3": [52, 53, 56, 57], "m": [52, 53, 56, 57, 59, 62, 63, 69, 70, 77, 86, 87, 94, 95, 123, 124, 125, 134, 135, 142, 143, 156, 178], "ivy_dev": [52, 53, 56, 57], "activ": [52, 53, 56, 57, 61, 78, 79, 106, 107, 110, 154, 155, 175, 182, 1801, 1811, 1814], "window": [52, 53, 57, 77, 84, 85, 125, 132, 133, 1816], "script": [52, 53, 56, 57, 164, 178, 195, 1811], "bat": [52, 53, 56, 57], "mac": [52, 53, 56, 57], "linux": [52, 53, 56, 57, 1814, 1816], "bin": [52, 53, 56, 57, 157, 160], "instal": [52, 53, 56, 57, 159, 167, 194, 1801], "packag": [52, 53, 56, 167, 172, 195, 1811, 1813], "edit": [52, 55, 56, 57], "mode": [52, 56, 57, 77, 86, 87, 111, 112, 125, 134, 135, 160, 164, 176, 195, 1811, 1814], "cd": [52, 53, 56, 57], "pip": [52, 56, 194, 1801], "repeat": [52, 57, 78, 79, 90, 91, 126, 127, 138, 139, 158, 159, 164, 165, 167, 174], "note": [52, 55, 56, 57, 75, 76, 77, 90, 91, 125, 138, 139, 162, 164, 165, 172, 173, 174, 175], "link": [52, 55, 56, 161, 162, 172, 174, 1807, 1809], "reflect": [52, 57, 158, 174], "immedi": [52, 56, 176, 1801], "ivy_robot": [52, 194], "docker": [52, 54], "desktop": [52, 56], "imag": [52, 53, 56, 77, 83, 84, 85, 125, 131, 132, 133, 175, 178, 179, 181, 183, 194, 1801, 1811], "my": [52, 175], "mount": [52, 57], "run": [52, 53, 55, 56, 80, 81, 128, 129, 156, 159, 161, 164, 167, 168, 172, 173, 178, 179, 180, 181, 182, 183, 194, 195, 1809, 1811, 1812, 1813, 1814, 1816, 1817, 1818], "rm": [52, 57], "v": [52, 56, 57, 84, 85, 100, 101, 132, 133, 148, 149, 173, 178, 181, 182, 183, 1801], "pwd": 52, "volum": [52, 77, 125], "rebuild": [52, 108, 111, 112, 113, 114], "after": [52, 53, 55, 56, 57, 80, 81, 92, 93, 111, 112, 128, 129, 140, 141, 157, 162, 164, 166, 168, 172, 174, 177, 1811], "everi": [52, 53, 55, 57, 69, 70, 78, 79, 126, 127, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 182, 1811], "id": [52, 54, 56, 158, 160, 167], "pycharm": 52, "configur": [52, 53, 56, 57, 111, 112, 161, 162, 170], "part": [52, 57, 69, 70, 80, 81, 157, 169, 172, 174, 175, 176, 178, 179, 183, 194, 195, 1809, 1811, 1816, 1817, 1818], "vscode": [52, 56], "found": [52, 55, 56, 57, 108, 111, 112, 113, 114, 158, 159, 160, 162, 165, 167, 170, 171, 172, 176, 1813], "devcontain": [52, 56], "extens": [52, 54, 56, 57, 75, 76, 86, 87, 123, 124, 165, 174, 1090, 1808, 1811, 1818], "remot": [52, 56, 157], "codespac": 52, "config": [52, 56, 111, 112, 157, 181, 1812], "json": [52, 56, 111, 112, 181], "good": [52, 53, 54, 55, 56, 57, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 182], "feel": [52, 53, 55, 56, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "free": [52, 53, 54, 55, 57, 59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "channel": [52, 53, 55, 56, 57, 59, 78, 79, 108, 126, 127, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "pre": [52, 55, 174, 183, 195, 1811], "commit": [52, 55, 157, 161, 164, 174], "_": [52, 53, 56, 75, 76, 123, 124, 128, 129, 165, 167, 171, 174, 181], "builder": [53, 193, 195, 1800, 1801], "dockerfil": [53, 56], "command": [53, 56, 157, 170, 1801], "maco": [53, 1816], "latest": [53, 55, 56, 57, 75, 76, 123, 124, 159, 161, 162, 165, 175, 195, 1816], "ubuntu": [53, 161], "arg": [53, 64, 65, 66, 102, 103, 111, 112, 166, 172, 178, 182], "name": [53, 55, 56, 57, 77, 98, 99, 146, 147, 159, 160, 164, 165, 167, 168, 172, 173, 174, 175, 176, 178, 181, 183, 1811], "uid": 53, "bash": [53, 56, 57, 157], "root": [53, 56, 57, 75, 76, 123, 124, 172, 181], "both": [53, 57, 75, 76, 77, 86, 87, 117, 118, 123, 124, 125, 134, 135, 159, 160, 162, 163, 164, 165, 168, 169, 171, 172, 174, 176, 178, 180, 181, 182, 183, 194, 195, 1811, 1814, 1816, 1817, 1818], "either": [53, 55, 56, 57, 75, 76, 77, 78, 79, 111, 112, 123, 124, 125, 126, 127, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 176, 178, 181, 195, 1811], "termin": [53, 56, 57, 108, 111, 112, 113, 114, 160, 178, 181], "3": [53, 56, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 159, 160, 162, 164, 174, 178, 180, 181, 182, 183, 1801, 1818], "8": [53, 56, 59, 62, 63, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 108, 113, 114, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 160, 164, 174, 177, 181, 1801], "built": [53, 56, 57, 160, 174, 179, 1800, 1810, 1811, 1815], "doesn": [53, 56, 159, 160, 161, 162, 164, 174, 176, 178, 195, 1809], "explicit": [53, 56, 160, 162, 171, 172, 178, 195, 1811], "cmd": [53, 56], "file": [53, 55, 56, 57, 111, 112, 157, 158, 159, 160, 161, 165, 167, 169, 172, 173, 174, 175, 178, 181, 1807, 1810, 1811, 1812], "abov": [53, 56, 57, 69, 70, 75, 76, 86, 87, 94, 95, 109, 110, 123, 124, 142, 143, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 1811, 1816], "OR": [53, 56, 57, 104, 105, 152, 153], "move": [53, 57, 77, 121, 122, 125, 175], "execut": [53, 56, 57, 160, 164, 171, 174, 176, 178, 180, 183, 195, 1800, 1807, 1811, 1812, 1813, 1814, 1815, 1817], "insid": [53, 56, 57, 160, 162, 170, 174, 175, 1817], "make_docs_without_dock": 53, "path": [53, 56, 171, 172, 173, 1811], "rel": [53, 57, 59, 62, 63, 77, 80, 81, 86, 87, 90, 91, 100, 101, 117, 118, 125, 128, 129, 134, 135, 138, 139, 148, 149, 173, 176, 1801, 1811, 1813], "assum": [53, 75, 76, 77, 86, 87, 123, 124, 125, 157, 159, 162, 165, 173, 176, 180, 181, 195], "gener": [53, 55, 56, 57, 75, 76, 79, 94, 95, 106, 107, 123, 124, 127, 142, 143, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 180, 182, 183, 194, 195, 1800, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817], "prefer": [53, 56, 160, 170, 172, 176, 1811], "browser": [53, 56], "affect": [53, 172], "page": [53, 56, 57, 161, 179, 180, 183, 193, 1801], "It": [53, 55, 56, 57, 60, 61, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 1809, 1811, 1812, 1814, 1815, 1816, 1817, 1818], "synchron": [53, 161], "respons": [53, 57, 162], "rest": [53, 56, 77, 125, 161, 183, 1813], "remove_doc": 53, "indic": [53, 69, 70, 77, 78, 79, 84, 85, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 111, 112, 117, 118, 119, 120, 125, 126, 127, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 161, 167, 168, 172, 183, 1801], "privat": [53, 174], "access": [53, 55, 56, 57, 111, 112, 162, 172, 1811, 1813, 1815], "fulfil": [53, 177, 1801], "purpos": [53, 57, 158, 160, 161, 164, 166, 168, 169, 170, 172, 174, 176, 177, 180, 1800, 1801, 1810, 1812, 1815, 1816, 1817], "delet": [53, 57], "previous": [53, 56, 169, 174, 178], "autogenerated_sourc": 53, "2": [53, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 162, 164, 166, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 195, 1801, 1817, 1818], "Then": [53, 55, 57, 170, 175, 195], "format": [53, 102, 103, 109, 110, 111, 112, 115, 116, 156, 162, 163, 164, 165, 166, 178, 180, 181, 1801, 1807, 1809, 1811, 1812], "x": [53, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 1801], "png": [53, 181], "_imag": 53, "lastli": 53, "docstr": [53, 54, 55, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 168, 169, 172, 175], "structur": [53, 57, 108, 111, 112, 113, 114, 158, 160, 169, 173, 174, 175, 181, 182, 1810, 1811], "rst": 53, "main": [53, 56, 69, 70, 86, 87, 134, 135, 157, 160, 167, 170, 1809, 1811, 1812, 1817], "submodul": [53, 55, 56, 57, 59, 108, 157, 161, 163, 169, 170, 174, 177, 178, 182, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1800, 1801, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "skip": [53, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 170, 174], "read": [53, 55, 77, 90, 91, 111, 112, 125, 138, 139, 174, 176, 1801, 1811], "partial_sourc": 53, "conf": 53, "copi": [53, 57, 69, 70, 71, 72, 77, 78, 79, 90, 91, 111, 112, 117, 118, 119, 120, 121, 122, 125, 126, 127, 138, 139, 157, 159, 162, 165, 172, 173, 178, 181, 194, 195], "5": [53, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 157, 159, 160, 164, 168, 173, 174, 180, 181, 182], "create_rst_fil": 53, "list": [53, 54, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 85, 90, 91, 92, 93, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 167, 168, 172, 173, 174, 175, 178, 181, 182, 183, 195, 1801, 1811, 1812, 1817], "filter": [53, 77, 84, 85, 125, 132, 133], "recurs": [53, 56, 64, 65, 66, 67, 68, 111, 112, 115, 116, 157, 160, 169, 182, 195], "repres": [53, 75, 76, 86, 87, 123, 124, 134, 135, 176, 180, 1808, 1809, 1812], "its": [53, 55, 56, 57, 64, 67, 68, 71, 72, 90, 91, 111, 112, 119, 120, 126, 127, 138, 139, 162, 165, 170, 172, 173, 174, 175, 176, 183, 195, 1800, 1810, 1811, 1817], "overal": [53, 160, 162, 163, 165, 183, 1807, 1809, 1810, 1811], "markup": 53, "6": [53, 59, 62, 63, 69, 70, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 100, 101, 102, 103, 108, 113, 114, 117, 118, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 157, 159, 160, 164, 174, 176, 178, 180, 181, 182], "extract": [53, 77, 125, 172, 175, 1807, 1811, 1812, 1817], "class": [53, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 162, 163, 164, 165, 168, 173, 174, 176, 178, 179, 181, 182, 183, 193, 194, 195, 1800, 1801, 1809, 1811, 1812, 1818], "get_functions_and_class": 53, "doctr": 53, "7": [53, 57, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 108, 113, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 160, 164, 169, 171, 174], "readm": [53, 195], "module_nam": 53, "copy_readme_to_rst": 53, "tabl": [53, 162, 172, 1811], "content": [53, 55, 111, 112, 171, 178, 181], "toc": 53, "accord": [53, 55, 56, 71, 72, 78, 79, 102, 103, 119, 120, 150, 151, 157, 162, 169, 172, 174], "append": [53, 111, 112, 166, 174, 178, 181], "append_toctree_to_rst": 53, "9": [53, 59, 62, 63, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 94, 95, 100, 101, 102, 103, 108, 113, 114, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 160, 164, 174, 181, 182, 1807], "index": [53, 69, 70, 77, 78, 79, 90, 91, 96, 97, 98, 99, 100, 101, 111, 112, 117, 118, 125, 126, 127, 138, 139, 144, 145, 146, 147, 148, 149, 160, 169, 173, 174, 180, 1811], "create_index_rst": 53, "14": [53, 71, 72, 75, 76, 77, 94, 95, 102, 103, 119, 120, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 160, 164, 174], "\u03c0": 53, "updat": [53, 55, 56, 57, 64, 66, 68, 78, 79, 80, 81, 111, 112, 126, 127, 128, 129, 156, 157, 158, 160, 161, 162, 164, 168, 170, 172, 173, 174, 176, 178, 180, 181, 183, 195], "namespac": [53, 55, 162, 170, 172, 173, 175, 178, 183], "remov": [53, 55, 86, 87, 111, 112, 134, 135, 159, 162, 165, 169, 174, 176, 183, 1811], "here": [54, 55, 56, 57, 157, 160, 161, 164, 168, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 194, 195, 1811, 1812], "resours": 54, "climb": 54, "steep": 54, "curv": 54, "respect": [54, 55, 57, 75, 76, 80, 81, 123, 124, 128, 129, 158, 160, 162, 164, 168, 172, 175, 1807, 1817], "behaviour": [54, 55, 57, 156, 157, 158, 160, 162, 165, 166, 168, 171, 172, 174, 175, 180], "frontend": [54, 64, 67, 156, 162, 174, 175, 176, 177, 179, 1800, 1811], "refer": [54, 55, 56, 57, 77, 90, 91, 102, 103, 104, 105, 125, 128, 129, 138, 139, 150, 151, 152, 153, 157, 162, 168, 169, 172, 173, 174, 195, 1800, 1811], "realpython": 54, "pyn": 54, "kind": [54, 77, 172, 174, 176, 178, 195], "stack": [54, 59, 62, 63, 86, 87, 90, 91, 111, 112, 125, 134, 135, 138, 139, 157, 178, 1801, 1807, 1809, 1816, 1817], "overflow": [54, 162], "platform": [54, 56, 1809, 1813, 1815], "sort": [54, 77, 101, 108, 111, 112, 113, 114, 125, 149, 175], "inform": [54, 55, 56, 57, 80, 81, 128, 129, 157, 160, 166, 173, 174, 1814], "pilot": 54, "bit": [54, 55, 56, 160, 162, 164, 169, 178, 180, 1817], "thei": [54, 55, 57, 77, 86, 87, 94, 95, 111, 112, 134, 135, 142, 143, 156, 157, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 195, 1801, 1808, 1811, 1813, 1814, 1817, 1818], "done": [54, 55, 56, 57, 157, 164, 167, 172, 174, 181, 1811], "faster": [54, 1800, 1813, 1816], "head": [54, 56, 172, 1801], "stuck": [54, 55], "spell": 54, "check": [54, 55, 56, 57, 64, 65, 66, 67, 68, 71, 72, 78, 79, 111, 112, 119, 120, 126, 127, 157, 160, 164, 166, 170, 172, 174, 175, 177, 178, 180, 181, 182, 1801], "though": [54, 55, 57, 162, 165, 169, 172, 176, 181, 195], "sound": [54, 177], "odd": [54, 157], "peopl": [54, 56, 57, 156, 1811, 1813], "action": [54, 164, 174], "integr": [54, 56, 71, 72, 77, 119, 120, 123, 124, 156, 1809, 1811, 1813, 1814, 1815], "keep": [54, 55, 56, 57, 90, 91, 111, 112, 138, 139, 157, 160, 161, 172, 174, 175, 176, 181, 183], "explain": [55, 56, 57, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 1801, 1807, 1814, 1817], "frequent": [55, 57, 1811], "wherebi": [55, 1808], "outlin": [55, 56, 57, 156, 160, 162, 165, 169, 171, 172, 174], "broad": [55, 1813], "individu": [55, 57, 157, 161, 162, 169, 171, 172, 1811, 1814, 1817, 1818], "sub": [55, 57, 77, 90, 91, 108, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 138, 139, 156, 160, 166, 172, 173, 174, 180, 181, 182, 1801, 1807], "distribut": [55, 77, 88, 89, 94, 95, 125, 136, 137, 142, 143, 163, 195, 1811, 1814], "across": [55, 96, 97, 111, 112, 126, 127, 144, 145, 157, 160, 162, 164, 166, 168, 169, 172, 174, 176, 1809, 1811, 1816], "todo": [55, 162, 172, 174], "detail": [55, 57, 157, 159, 160, 161, 168, 169, 170, 172, 173, 174, 175, 178, 180, 181, 182, 1813, 1817], "befor": [55, 56, 57, 90, 91, 111, 112, 157, 158, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 178, 181, 195, 1811], "select": [55, 56, 57, 77, 102, 103, 125, 150, 151, 171, 174, 178, 180, 183, 195, 1811, 1814, 1815], "alloc": [55, 57, 69, 70, 71, 72, 119, 120, 195], "describ": [55, 57, 102, 103, 161, 172, 174, 178, 183, 1811], "explan": [55, 57, 160, 165, 168, 172, 180], "instead": [55, 56, 57, 75, 76, 123, 124, 157, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 195, 1809, 1811, 1817, 1818], "focu": [55, 1809, 1810, 1813, 1818], "been": [55, 57, 78, 79, 94, 95, 126, 127, 142, 143, 157, 159, 160, 161, 162, 163, 165, 167, 168, 169, 174, 178, 180, 194, 195, 1800, 1811, 1818], "alwai": [55, 57, 71, 72, 90, 91, 119, 120, 138, 139, 158, 159, 160, 162, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 195], "NOT": 55, "pypi": [55, 56, 195], "implement": [55, 71, 72, 77, 100, 101, 119, 120, 121, 122, 125, 148, 149, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 194, 195, 1800, 1801, 1808, 1809, 1810, 1811, 1814, 1817, 1818], "instruct": [55, 56, 157, 1809, 1812, 1815, 1817], "static": [55, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 169, 170, 172, 195, 1810, 1811, 1812], "method": [55, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 162, 164, 165, 167, 168, 169, 170, 174, 175, 178, 179, 182, 183, 195, 1801, 1812, 1818], "arrai": [55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 195, 1800, 1801, 1809, 1810, 1811, 1813, 1817, 1818], "revers": [55, 59, 62, 63, 77, 78, 79, 86, 87, 102, 103, 108, 113, 114, 125, 134, 135, 150, 151, 160, 162, 164, 165, 172, 176, 183, 195], "familiar": [55, 56], "yourself": [55, 57, 172, 174, 176, 194], "hypothesi": [55, 57, 157, 170], "pass": [55, 57, 77, 106, 107, 108, 111, 112, 113, 114, 125, 154, 155, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 195, 1809], "fail": [55, 56, 57, 157, 161, 162, 164, 167, 172], "els": [55, 78, 79, 94, 95, 142, 143, 157, 159, 162, 166, 169, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 195, 1812], "cover": [55, 157, 164, 165, 169, 170, 174, 176, 177], "lambda": [55, 178, 181], "direct": [55, 77, 172, 173, 176, 182, 183, 194, 1807, 1811, 1812, 1815], "bind": [55, 160, 1810, 1811], "defin": [55, 56, 69, 70, 77, 78, 79, 86, 87, 117, 118, 125, 126, 127, 134, 135, 161, 162, 165, 168, 172, 173, 174, 175, 180, 182, 195, 1800, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1818], "def": [55, 56, 157, 160, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 1801], "special": [55, 59, 62, 63, 102, 103, 108, 113, 114, 134, 135, 157, 158, 164, 165, 166, 168, 171, 175, 176, 1811, 1812, 1813], "sure": [55, 56, 57, 157, 161, 172, 173, 176], "aforement": 55, "correct": [55, 57, 102, 103, 150, 151, 156, 160, 162, 163, 167, 168, 169, 173, 174, 1801], "categori": [55, 157, 158, 160, 162, 172, 175, 177, 1801], "parent": [55, 180], "arraywithelementwis": [55, 59, 62, 63, 75, 158, 180], "containerwithmanipul": [55, 108, 113, 114, 138], "hint": [55, 75, 76, 86, 87, 123, 124, 158, 165, 168, 169, 171, 172, 175], "add": [55, 56, 57, 59, 62, 63, 75, 76, 92, 93, 106, 107, 108, 111, 112, 113, 114, 123, 124, 140, 141, 154, 155, 156, 157, 158, 159, 160, 162, 165, 168, 169, 171, 172, 174, 175, 176, 178, 180, 195, 1801, 1807, 1809, 1811], "thorough": [55, 165, 168, 174], "ensur": [55, 56, 57, 78, 79, 158, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 1811], "produc": [55, 125, 162, 174, 175, 1812, 1814], "comment": [55, 56, 57, 157, 162, 167, 172], "add_reformatting_checklist_": 55, "category_nam": [55, 162, 163, 165, 168, 169], "pr": [55, 57, 157, 172], "belong": [55, 111, 112, 157, 182], "shown": [55, 57, 106, 107, 111, 112, 154, 155, 157, 161, 162, 164, 167, 168, 172, 173, 174, 175, 178, 180, 195], "trigger": [55, 161], "autom": [55, 174, 1800, 1801, 1813], "bot": 55, "proper": 55, "markdown": 55, "text": [55, 57, 164, 165], "might": [55, 56, 57, 78, 79, 162, 164, 167, 170, 171, 172, 174, 175, 176, 178, 180, 181, 1800], "moment": [55, 80, 81, 128, 129, 159, 195], "patient": [55, 56], "modifi": [55, 56, 57, 77, 111, 112, 125, 157, 159, 162, 163, 165, 167, 169, 175, 178], "item": [55, 64, 68, 78, 79, 106, 107, 111, 112, 125, 126, 127, 160, 162, 178, 180, 181, 183, 1801], "symbol": [55, 56, 1811, 1812], "emoji": 55, "within": [55, 57, 64, 67, 68, 77, 125, 172, 173, 174, 182, 195, 1807, 1808, 1812], "legend": 55, "mark": [55, 57, 157, 174, 178], "review": [55, 57, 164, 172, 175], "checkbox": [55, 56], "proce": [55, 56], "elabor": 55, "struggl": 55, "assigne": 55, "author": [55, 57, 1801, 1809, 1813], "later": [55, 111, 112, 174, 1811], "status": 55, "manual": [55, 56, 57, 161, 172, 174, 182], "refrain": 55, "transpil": [55, 172, 177, 178, 179, 1800, 1801, 1811, 1817, 1818], "locat": [55, 57, 159, 163, 172, 173, 174, 175, 1809], "subsect": [55, 57, 157, 161], "verifi": [55, 162, 163, 172, 174, 175], "miss": [55, 56, 158, 160, 164, 167, 174], "simpler": [55, 57, 172, 1812, 1818], "titl": [55, 57, 172, 1801], "label": [55, 57, 88, 89, 136, 137, 157, 161, 172, 177, 178, 179, 183, 1811], "suggest": [55, 56, 57, 162, 172, 174, 175], "simpli": [55, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 176, 178, 182, 183, 195, 1800, 1812, 1817], "leav": [55, 64, 67, 68, 108, 113, 114, 115, 116, 125, 126, 127, 138, 139, 150, 151, 160, 162, 164, 165, 168, 169, 171, 172, 174, 181, 182], "assess": [55, 176], "appropri": [55, 57, 96, 97, 106, 107, 144, 145, 154, 155, 170, 174], "wait": [55, 57, 108, 111, 112, 113, 114, 172], "option": [55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 183, 195, 1811, 1817], "composit": [55, 156, 158, 159, 160, 162, 171, 173, 174, 176, 178, 182, 183, 195, 1800, 1812], "temporari": [55, 162], "merg": [55, 57, 157, 172, 1811], "close": [55, 56, 57, 165, 172, 176, 1811], "normal": [55, 77, 92, 93, 94, 95, 125, 140, 141, 142, 143, 176, 181, 1809], "altern": [55, 56, 77, 125, 171, 172, 181, 1814], "composition": [55, 171, 172], "choos": [55, 56, 57, 96, 97, 121, 122, 174, 179, 183, 1818], "decid": [55, 56, 111, 112, 162, 176], "addit": [55, 56, 57, 78, 79, 92, 93, 121, 122, 126, 127, 140, 141, 160, 162, 164, 165, 172, 174, 175, 176, 180, 181, 183, 1811, 1812, 1813, 1817], "potenti": [55, 56, 57, 162, 172, 177, 1814], "pend": 55, "show": [55, 56, 57, 111, 112, 161, 164, 171, 172, 174, 194, 195, 1801, 1811], "helpfulli": [55, 176, 1809], "prevent": [55, 57, 80, 81, 128, 129, 162, 167, 171, 172, 175, 176], "problemat": [55, 56], "unimpl": 55, "final": [55, 57, 78, 79, 126, 127, 157, 158, 162, 164, 165, 167, 169, 171, 172, 176, 177, 181, 1807, 1817], "issue_link": 55, "chosen": 55, "correctli": [55, 56, 57, 77, 86, 87, 96, 97, 125, 134, 135, 144, 145, 160, 162, 164, 166, 167, 168, 171, 173, 174, 176, 182, 195], "alias": [55, 172, 173], "detect": [55, 56, 111, 112, 159, 160, 167, 174, 181, 182], "alias_nam": 55, "function_nam": 55, "notic": [55, 176], "alia": [55, 172], "alreadi": [55, 56, 57, 111, 112, 159, 160, 162, 168, 172, 176, 195, 1801, 1811, 1813, 1818], "push": [55, 57, 157, 167, 1817], "liner": 55, "default": [55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162, 163, 164, 165, 166, 168, 169, 170, 172, 174, 176, 178, 182, 1800, 1811], "meanwhil": 55, "reselect": 55, "too": [55, 56, 57, 157, 161, 162, 167, 195], "placement": 55, "categoris": [55, 157, 172], "faithfulli": 55, "descript": [55, 75, 76, 86, 87, 123, 124, 134, 135, 165], "inner": [55, 86, 87, 117, 118, 134, 135, 171], "fall": [55, 57, 162, 177, 1801], "under": [55, 56, 57, 156, 157, 160, 164, 165, 169, 172, 174, 176, 177, 178, 181, 183, 195, 1811, 1814, 1818], "linalg": [55, 171, 1801], "match": [55, 71, 72, 111, 112, 119, 120, 160, 164, 1812, 1817], "creation_routin": [55, 173], "fft": [55, 1811], "indexing_routin": 55, "logic": [55, 104, 105, 152, 153, 158, 162, 163, 166, 170, 172, 174, 176, 180, 1801], "ma": 55, "manipulation_routin": 55, "mathematical_funct": [55, 172], "matrix": [55, 59, 62, 63, 78, 79, 84, 85, 86, 87, 126, 127, 132, 133, 134, 135, 162, 172, 1809, 1811], "ndarrai": [55, 69, 70, 77, 78, 79, 125, 158, 162, 163, 168, 171, 172, 173, 175, 176, 178, 180, 183, 1800], "random": [55, 77, 95, 111, 112, 125, 143, 163, 174, 175, 183, 194, 1801, 1811], "sorting_searching_count": 55, "statist": [55, 103, 151, 154, 155, 162, 172, 174, 175, 1811], "ufunc": 55, "hierarchi": [55, 111, 112, 181, 1807, 1817], "__init__": [55, 59, 62, 63, 108, 111, 112, 113, 114, 159, 162, 166, 172, 175, 178, 180, 181, 182, 183, 1801], "py": [55, 56, 57, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 178, 180, 182, 183], "decomposit": [55, 1818], "matrix_and_vector_product": 55, "matrix_eigenvalu": 55, "norms_and_other_numb": 55, "solving_equations_and_inverting_matric": 55, "product": [55, 75, 76, 86, 87, 102, 103, 123, 124, 125, 134, 135, 150, 151, 178, 1811, 1813], "seem": [55, 56, 176, 182, 183, 195, 1811], "np": [55, 123, 124, 126, 127, 158, 162, 163, 168, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 1800, 1801], "func": [55, 111, 112, 157, 164], "gleam": 55, "yet": [55, 56, 195], "uncom": 55, "test_numpy_inn": 55, "mirror": [55, 1811], "correspond": [55, 57, 71, 72, 75, 76, 77, 78, 79, 90, 91, 102, 103, 108, 111, 112, 113, 114, 119, 120, 123, 124, 125, 138, 139, 150, 151, 158, 159, 160, 161, 162, 164, 165, 168, 169, 170, 172, 174, 176, 178, 1811], "ivy_test": [55, 56, 57, 157, 161, 173], "test_ivi": [55, 56, 57, 161, 173, 174], "test_frontend": [55, 173], "unsur": [55, 174], "put": [55, 174, 195, 1817], "explor": [55, 56, 57, 162, 176, 179, 183, 194, 1811, 1814], "outer": [55, 86, 87, 134, 135], "confirm": 55, "ve": [55, 56, 57, 94, 95, 142, 143, 174, 176, 177, 180, 1800, 1801], "empti": [55, 56, 78, 79, 111, 112, 126, 127, 158, 162, 163], "along": [55, 60, 61, 77, 78, 79, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 164, 171, 175, 176, 178, 1811], "backend_nam": [55, 159, 162, 163, 165, 168, 169, 170], "relevant_submodul": 55, "sometim": [55, 56, 57, 157, 162, 172, 174, 175, 176], "behav": [55, 157, 166, 171, 173, 180, 1812], "helper": [55, 161, 162, 166, 181, 1800], "recreat": [55, 157], "defer": [55, 158, 160, 162, 163, 169, 170, 171, 172, 174, 1817], "clearer": [55, 166, 181], "mind": [55, 158, 160, 174], "posit": [55, 57, 64, 65, 66, 75, 76, 77, 78, 79, 86, 87, 90, 91, 123, 124, 125, 126, 127, 134, 135, 138, 139, 157, 160, 170, 172, 173, 174, 175, 181, 194, 1813], "keyword": [55, 64, 65, 66, 108, 111, 112, 113, 114, 160, 162, 163, 170, 171, 172, 173, 174, 175, 181], "paramet": [55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 166, 168, 170, 172, 174, 175, 178, 180, 181, 194, 1812], "strategi": [55, 170, 173], "draw": [55, 94, 95, 142, 143, 157, 173, 174], "realli": [56, 160, 195, 1816, 1817], "gh": 56, "your_fold": 56, "cours": [56, 57, 157, 164, 175, 176, 181, 195, 1816, 1817], "whatev": [56, 160, 195], "elig": 56, "student": 56, "licenc": 56, "remind": 56, "account": [56, 77, 90, 91, 125, 138, 139, 165, 172], "licens": [56, 1814], "expir": 56, "abl": [56, 57, 111, 112, 157, 162, 169, 171, 172, 176, 178, 183, 1814, 1817], "profession": 56, "trial": 56, "jetbrain": 56, "valid": [56, 77, 84, 85, 104, 105, 125, 132, 133, 152, 153, 159, 162, 164, 173, 174, 1812], "bui": [56, 1817], "paid": 56, "pace": 56, "align": [56, 57, 77, 111, 112, 125, 172, 178, 180, 1800, 1817], "stabl": [56, 78, 79, 100, 101, 126, 127, 148, 149, 159, 162, 178, 195], "mayb": [56, 64, 67, 68, 178, 180], "person": [56, 57], "experi": [56, 174, 179, 181, 195], "avoid": [56, 57, 159, 160, 162, 167, 170, 172, 174, 175, 1811], "abil": [56, 176, 179, 195, 1811], "certain": [56, 57, 111, 112, 157, 162, 174, 176, 195, 1815], "perhap": [56, 180, 181, 182, 195, 1817], "track": [56, 57, 157, 1811], "click": [56, 57, 161, 165, 179, 1801], "icon": [56, 57], "side": [56, 57, 100, 101, 148, 149], "left": [56, 57, 77, 86, 87, 96, 97, 100, 101, 125, 134, 135, 144, 145, 148, 149, 157, 162, 164], "panel": 56, "drop": [56, 195], "down": [56, 174, 1800, 1811, 1817], "builtin": [56, 180, 182], "virtualenv": 56, "o": [56, 156, 178], "tick": [56, 57, 161], "test_array_api": [56, 57, 157, 174], "r": [56, 57, 111, 112, 156], "txt": [56, 157, 175], "visual": [56, 172, 195, 1811, 1813, 1816], "mitig": [56, 1817], "conflict": [56, 57, 172, 181], "particular": [56, 57, 157, 159, 162, 164, 170, 171, 172, 173, 174, 175, 176, 1807, 1811, 1817], "system": [56, 57, 159, 162, 195, 1809, 1811, 1814, 1816, 1818], "jaxlib": [56, 158, 162, 163, 168, 175, 178, 180], "wsl": 56, "powershel": 56, "admin": 56, "visit": [56, 57, 173], "deploy": [56, 1810, 1813, 1814, 1817, 1818], "top": [56, 57, 77, 90, 91, 125, 162, 172, 174, 181, 182, 1811, 1815], "press": [56, 57, 181, 1801], "ok": 56, "debug": [56, 57, 160, 161, 174, 176, 181, 1811], "dialog": 56, "invalid": [56, 104, 105, 152, 153, 162, 167], "caus": [56, 57, 157, 159, 160, 161, 162, 164, 171, 174, 195], "earlier": [56, 57], "necessari": [56, 57, 77, 90, 91, 125, 138, 139, 159, 160, 164, 170, 171, 172, 174, 176], "virtualis": 56, "sudo": 56, "apt": 56, "ca": 56, "certif": 56, "curl": 56, "gnupg": 56, "lsb": 56, "mkdir": 56, "p": [56, 57, 78, 79, 126, 127, 134, 135, 156], "keyr": 56, "fssl": 56, "download": [56, 174], "gpg": 56, "dearmor": 56, "echo": 56, "deb": 56, "arch": 56, "dpkg": 56, "print": [56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 164, 174, 178, 180, 181, 182, 1801], "architectur": [56, 183, 195, 1809, 1810, 1811, 1814, 1815, 1816], "lsb_releas": 56, "tee": 56, "dev": [56, 73, 74, 111, 112, 121, 122, 163, 169, 180, 182], "null": 56, "ce": 56, "cli": 56, "containerd": 56, "io": 56, "compos": [56, 160, 174, 195, 1811, 1818], "plugin": 56, "systemctl": 56, "permiss": 56, "post": [56, 92, 93, 140, 141, 183], "coupl": [56, 158, 180, 182, 1811], "unit": [56, 60, 61, 109, 110, 157, 162, 172, 173, 174, 195, 1812, 1815], "test_ab": 56, "context": [56, 57, 84, 85, 132, 133, 164], "menu": 56, "editor": 56, "green": [56, 57, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 1861, 1862], "appear": [56, 57, 157, 172, 176], "pytest": [56, 57, 157, 174], "keyboard": 56, "shortcut": 56, "displai": [56, 160, 174, 181], "screenshot": 56, "henc": [56, 160, 174], "ctrl": [56, 57], "shift": [56, 57, 90, 91, 108, 113, 114, 117, 118, 138, 139, 164, 168], "bottom": [56, 1817], "screen": [56, 111, 112, 181], "elsewher": 56, "test_elementwis": 56, "tab": [56, 161, 181, 1801], "progress": [56, 57, 183], "bar": 56, "shell": [56, 57], "run_tests_cli": [56, 157], "run_ivy_core_test": 56, "run_ivy_nn_test": 56, "run_ivy_stateful_test": 56, "run_test": 56, "sh": [56, 57, 157], "test_depend": 56, "test_ivy_cor": 56, "test_ivy_nn": 56, "test_ivy_st": 56, "test_": [56, 161, 173], "test_funct": [56, 57, 161, 173, 174], "test_cor": [56, 57, 161, 173], "wish": [56, 172], "ivy_cor": 56, "ivy_nn": 56, "ivy_st": 56, "torch": [56, 57, 157, 158, 159, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 181, 183, 195, 1800, 1801, 1817], "dure": [56, 80, 81, 102, 103, 111, 112, 121, 122, 128, 129, 150, 151, 160, 162, 163, 166, 169, 170, 171, 172, 173, 174, 176, 195, 1811, 1812, 1817], "simplest": [56, 164, 174, 176], "valu": [56, 57, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 195, 1811, 1812], "return": [56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 195, 1801, 1812], "becaus": [56, 57, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 178, 182, 183, 195, 1811, 1814, 1817], "header": [56, 57], "summari": [56, 57, 111, 112, 174], "recommend": [56, 57, 159], "advanc": [56, 1810], "q": [56, 57, 77, 125, 132, 133, 156, 195], "fix": [56, 57, 77, 125, 157, 161, 162, 174, 175], "arrow": 56, "button": [56, 57], "funcion": 56, "target": [56, 156, 173, 175, 177, 181, 182, 183, 1801, 1807, 1809, 1810, 1811, 1814, 1816, 1817], "test_stat": [56, 161], "test_submodule_nam": 56, "test_function_nam": 56, "debugg": 56, "studio": 56, "easiest": 56, "effici": [56, 57, 160, 167, 169, 170, 171, 174, 178, 181, 195, 1811, 1813, 1814], "afterward": [56, 181], "background": [56, 1811, 1813], "restart": 56, "corner": [56, 57, 172], "overlap": [56, 175, 176, 1812], "test_file_path": 56, "test_fn_nam": 56, "long": [56, 57, 161, 162, 164, 178, 1811], "larg": [56, 57, 77, 125, 181, 1811], "gb": 56, "engin": [56, 1811, 1813, 1814], "comma": 56, "end": [56, 57, 159, 171, 175, 176, 177, 194, 195, 1801, 1809, 1814], "entri": [56, 90, 91, 111, 112, 138, 139, 174, 1811], "postcreatecommand": 56, "post_create_command": 56, "poststartcommand": 56, "global": [56, 78, 79, 92, 93, 108, 111, 112, 113, 114, 126, 127, 140, 141, 159, 162, 163, 166, 169, 172, 178, 1811], "safe": [56, 172], "containerworkspacefold": 56, "roughli": [56, 119, 120, 157, 1814], "reopen": [56, 161], "dropdown": 56, "test_fle_path": 56, "enter": [56, 57, 158, 162, 163, 168, 170], "forward": [56, 159, 165, 174, 175, 176, 183, 194, 195, 1811, 1812], "slash": 56, "regular": [56, 57, 172, 173, 1811], "headach": 56, "arm": [56, 57], "m1": 56, "featur": [56, 57, 168, 172, 175, 176, 181, 195, 1801, 1811, 1812, 1813, 1817], "vm": 56, "azur": 56, "cloud": [56, 194, 1813], "mean": [56, 57, 77, 78, 79, 84, 85, 90, 91, 94, 95, 102, 103, 111, 112, 125, 126, 127, 132, 133, 138, 139, 142, 143, 150, 151, 154, 155, 156, 157, 159, 160, 162, 163, 164, 169, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 194, 195, 1800, 1801, 1808, 1811], "longer": [56, 162, 170, 171, 174, 1811], "worri": 56, "agnost": [56, 158, 168, 178, 180, 183, 195, 1801, 1817, 1818], "usual": [56, 157, 172, 174, 176], "favourit": 56, "theme": 56, "unsupport": [56, 167, 172], "old": [56, 111, 112, 159, 171], "slow": 56, "ipad": 56, "cool": [56, 175], "sever": [56, 57, 175, 195, 1809, 1815], "requisit": 56, "pane": [56, 57], "readi": 56, "begin": [56, 157, 173], "master": [56, 57, 157, 175, 1811], "view": [56, 57, 77, 125, 161, 1811], "box": 56, "upto": [56, 57], "15": [56, 75, 76, 77, 94, 95, 102, 103, 108, 113, 114, 117, 118, 123, 124, 125, 126, 127, 132, 133, 138, 139, 142, 143, 150, 151, 164, 1814], "minut": 56, "subsequ": [56, 158, 162, 164, 168, 169, 171, 174, 176, 182, 1812], "launch": 56, "12": [56, 75, 76, 77, 78, 79, 94, 95, 102, 103, 123, 124, 125, 126, 127, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 150, 151, 159, 160, 162, 164, 175], "output": [56, 57, 60, 61, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 182, 183, 195, 1800, 1801, 1812], "That": [56, 57, 174, 180, 181, 182, 1812], "approach": [56, 57, 160, 162, 169, 170, 174, 176, 180, 181, 195, 1808, 1815, 1817], "colour": 56, "applic": [56, 162, 163, 170, 182, 1808, 1809, 1811, 1813, 1815, 1817], "chanc": 56, "troubleshoot": 56, "ever": 56, "64": [56, 75, 76, 77, 84, 85, 108, 113, 114, 123, 124, 125, 126, 127, 132, 133, 134, 135, 142, 143, 150, 151, 181, 182, 1801, 1816], "usr": 56, "flask": 56, "toolbar": [56, 57], "_array_modul": [56, 157], "array_api_test": [56, 57, 157], "refresh": 56, "conftest": 56, "nutshel": [56, 168], "hook": 56, "lint": 56, "accept": [56, 57, 64, 75, 76, 86, 87, 115, 123, 124, 158, 160, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 180, 1800, 1801, 1809], "attempt": [56, 167, 195], "succe": 56, "properli": [56, 156, 166, 174], "server": [57, 1811], "suitabl": [57, 125, 160, 175, 1811], "quick": [57, 156, 173, 182], "tendenc": 57, "land": 57, "isn": [57, 126, 127, 170, 181, 195, 1813], "world": [57, 1813], "come": [57, 172, 175, 176, 182, 193, 1800, 1801, 1811], "fly": [57, 1811], "hard": [57, 180, 1811], "receiv": [57, 162, 163, 174], "internship": 57, "bug": [57, 172, 174, 175], "serv": [57, 158, 160, 168, 169, 172, 174, 176, 177, 1800, 1801, 1809], "suspect": 57, "observ": [57, 166, 178, 1813], "act": [57, 164, 195, 1818], "placehold": [57, 158, 167, 168, 1800], "ii": [57, 102, 103, 150, 151], "iii": 57, "issue_numb": 57, "No": [57, 1811], "soon": [57, 162, 193, 195, 1801], "partial": [57, 111, 112], "solut": [57, 160, 162, 174, 176, 1809, 1813], "associ": [57, 86, 87, 134, 135, 162, 169, 170, 172, 173, 174, 195], "respond": 57, "shape": [57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 1801], "dai": [57, 161], "warn": 57, "without": [57, 111, 112, 158, 160, 162, 163, 164, 166, 167, 168, 169, 173, 174, 175, 176, 180, 181, 182, 194, 195, 1808, 1811, 1812, 1813, 1817], "likewis": [57, 160, 162, 165, 168, 169, 172, 176, 181, 1817], "freed": 57, "flag": [57, 111, 112, 162, 170, 171, 172, 174], "remain": [57, 90, 91, 96, 97, 138, 139, 144, 145, 161, 164, 175, 176, 195], "prioriti": [57, 111, 112, 171], "short": [57, 162, 172, 175, 178, 182], "basi": [57, 157, 181], "situat": [57, 183], "upon": [57, 164, 171, 174, 176, 195, 1810, 1811], "period": [57, 125, 175], "unabl": [57, 176], "obvious": 57, "never": [57, 90, 91, 138, 139, 162, 172, 174, 176], "qualiti": 57, "hypothet": 57, "frustrat": 57, "delai": 57, "busi": 57, "fine": [57, 162, 164, 172, 180, 183, 1817], "inact": 57, "limit": [57, 108, 111, 112, 113, 114, 164, 166, 167, 172, 174, 176, 181, 195, 1810, 1811, 1812], "me": 57, "unfairli": 57, "definit": [57, 77, 86, 87, 123, 124, 134, 135, 162, 169, 180], "investig": 57, "maximum": [57, 75, 76, 77, 78, 79, 80, 81, 90, 91, 96, 97, 102, 103, 108, 111, 112, 113, 114, 123, 124, 125, 126, 127, 128, 129, 138, 139, 144, 145, 150, 151, 164, 181, 1801, 1818], "incomplet": 57, "three": [57, 77, 160, 164, 172, 174, 176, 177, 178, 1801, 1812, 1817], "per": [57, 77, 84, 85, 125, 132, 133, 172, 181], "self": [57, 59, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 166, 172, 173, 178, 180, 181, 182, 183, 1801], "assign": [57, 159, 162, 167, 171, 180], "sequenc": [57, 77, 90, 91, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 163, 164, 166, 174, 175, 178, 183, 194, 1814], "regist": 57, "wherea": [57, 158, 160, 162, 163, 164, 168, 169, 174, 175, 183, 1808], "primarili": [57, 160, 1811], "invit": 57, "roadmap": [57, 161, 1801], "result": [57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 157, 158, 160, 161, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 178, 181, 195, 1801, 1812, 1814], "mainli": [57, 156, 174, 179, 181, 1800, 1811], "extend": [57, 159, 165, 168, 172, 175, 195, 1808, 1811, 1817], "ideal": [57, 171, 181], "Such": [57, 174], "easier": [57, 157, 158, 162, 172, 175, 1800, 1811, 1813], "interv": [57, 94, 95, 104, 105, 142, 143, 152, 153], "forth": 57, "rare": [57, 163, 195, 1816], "scenario": 57, "someon": [57, 195], "someth": [57, 175, 181, 182, 195, 1817], "unfortun": 57, "redund": [57, 162, 166, 172, 176], "specifi": [57, 69, 70, 71, 72, 77, 78, 79, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 102, 103, 104, 105, 109, 110, 111, 112, 119, 120, 125, 126, 127, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 156, 162, 163, 168, 169, 171, 172, 173, 174, 176, 178, 181, 182, 1817], "behind": [57, 80, 81, 156, 168, 174, 177, 179], "well": [57, 126, 127, 161, 162, 171, 172, 173, 174, 182, 183, 194, 1810, 1811, 1812, 1816], "practic": [57, 161, 1814], "separ": [57, 158, 160, 174, 178, 180, 181, 1812, 1816], "branch": [57, 157, 195, 1811], "role": [57, 172, 179, 1812, 1814, 1818], "kept": [57, 108, 111, 112, 113, 114, 171, 175], "date": [57, 175], "upstream": [57, 157], "base": [57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 166, 168, 170, 173, 174, 175, 178, 194, 1811, 1816, 1818], "complic": [57, 173, 178], "merge_with_upstream": 57, "name_of_your_branch": 57, "resolv": [57, 162, 178], "abort": 57, "tediou": [57, 164], "resolut": 57, "stash": 57, "reinstat": 57, "fetch": [57, 157], "0": [57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 162, 164, 165, 166, 172, 173, 174, 175, 178, 180, 181, 182, 183, 195, 1801], "uncommit": 57, "unstag": 57, "untrack": 57, "comprehens": [57, 157], "atlassian": 57, "tutori": [57, 172], "wrote": 57, "piec": [57, 158, 169, 170, 178, 1807, 1809], "tag": 57, "navig": [57, 156], "blame": 57, "revis": 57, "log": [57, 75, 76, 86, 87, 123, 124, 134, 135, 160, 161, 164, 169, 171, 172, 174, 176, 178, 181, 1801], "eg": 57, "16": [57, 59, 62, 63, 75, 76, 77, 84, 85, 86, 87, 94, 95, 102, 103, 108, 113, 114, 119, 120, 123, 124, 125, 126, 127, 132, 133, 134, 135, 138, 139, 142, 143, 164, 181], "past": [57, 157, 173, 174, 1811], "l": [57, 86, 87, 123, 124, 134, 135, 156], "filepath": [57, 111, 112, 157], "grep": 57, "retriev": [57, 172], "commit_id": 57, "handi": 57, "histori": 57, "toggl": 57, "vertic": [57, 125], "highlight": [57, 164, 172], "previou": [57, 80, 81, 128, 129, 157, 168, 172, 174, 176, 183, 195, 1814], "whenev": [57, 161, 162, 166, 170, 174, 181], "think": [57, 164, 1812], "gain": [57, 157, 177, 182, 1811], "quit": [57, 158, 164, 165, 169, 170, 174, 176, 1811, 1817], "newli": [57, 71, 72, 119, 120, 171, 174], "cannot": [57, 77, 157, 159, 162, 172, 178, 183, 1817], "least": [57, 77, 125, 158, 162, 164, 169, 174], "approv": 57, "hash": [57, 181], "cancel": 57, "speedup": 57, "unavail": 57, "tickbox": 57, "lower": [57, 69, 70, 75, 76, 86, 87, 94, 95, 123, 124, 134, 135, 142, 143, 164, 172, 174, 176, 178, 195, 1800, 1807, 1808, 1809, 1811, 1812, 1817, 1818], "span": [57, 176, 1809, 1817], "intent": [57, 171], "discourag": 57, "philosophi": 57, "increment": [57, 78, 79, 126, 127, 175, 1811], "valuabl": 57, "infrequ": 57, "earli": [57, 1801, 1811], "wast": 57, "spot": [57, 164, 169], "mistak": [57, 167], "propos": [57, 172, 176, 1811], "mountain": 57, "around": [57, 108, 111, 112, 113, 114, 158, 168, 169, 172, 175, 180, 195, 1800, 1809, 1811, 1818], "advoc": [57, 195], "style": [57, 1811], "were": [57, 111, 112, 119, 120, 162, 167, 174, 175, 176, 178, 1811, 1812, 1817], "actual": [57, 156, 169, 171, 174, 176, 177, 182, 195, 1812, 1817], "aim": [57, 157, 174, 177, 1809, 1811, 1814], "session": [57, 1811], "block": [57, 160, 166, 167, 169, 174, 177, 179, 183, 195, 1800, 1801, 1816, 1818], "smaller": [57, 90, 91, 138, 139, 178], "exact": [57, 109, 110, 111, 112, 157, 164, 178], "beauti": 57, "particularli": [57, 181, 195, 1809], "concern": [57, 156, 160, 164, 171, 176, 177, 1817], "difficult": [57, 157, 162, 174, 195], "undo": 57, "stress": 57, "frequenc": [57, 78, 79, 126, 127, 161], "advantag": [57, 171, 172, 1811], "nifti": 57, "reassur": 57, "isol": [57, 1812, 1817], "fact": [57, 157, 172, 174, 178, 181], "local_path_to_ivi": 57, "overwrit": [57, 111, 112, 171, 172, 178], "subfold": [57, 173, 174, 175], "wide": [57, 174, 1809, 1811], "via": [57, 157, 160, 162, 163, 171, 175, 176, 178, 180, 181, 194, 1811], "dep": 57, "fresh": 57, "arsen": 57, "declar": 57, "exec": 57, "rf": 57, "cp": 57, "ivy_contain": 57, "test_imag": 57, "test_random_crop": 57, "test_creation_funct": 57, "test_arang": 57, "variou": [57, 157, 162, 165, 166, 168, 170, 173, 174, 194, 1800, 1807, 1809, 1810, 1811, 1814, 1817], "cpu": [57, 69, 70, 73, 74, 94, 95, 121, 122, 126, 127, 142, 143, 163, 172, 174, 195, 1809, 1811, 1814, 1816], "gpu": [57, 163, 180, 1809, 1811, 1814, 1815, 1816], "combin": [57, 108, 111, 112, 113, 114, 158, 160, 162, 164, 169, 174, 176, 183, 1811], "num": [57, 117, 118, 168, 178], "integ": [57, 59, 62, 63, 75, 76, 77, 90, 91, 94, 95, 102, 103, 104, 105, 108, 111, 112, 113, 114, 123, 124, 125, 134, 135, 138, 139, 142, 143, 150, 151, 152, 153, 160, 162, 170, 173, 174, 178, 180], "greater": [57, 59, 62, 63, 75, 76, 77, 94, 95, 108, 113, 114, 123, 124, 142, 143, 173], "prompt": [57, 1801], "whole": 57, "multipli": [57, 75, 76, 102, 103, 123, 124, 158, 159, 160, 164], "cursor": 57, "alt": 57, "j": [57, 69, 70, 86, 87, 102, 103, 117, 118, 123, 124, 134, 135, 156, 1807], "blog": 57, "breakpoint": 57, "gutter": 57, "caret": 57, "f8": 57, "f9": 57, "Into": 57, "f7": 57, "smart": 57, "interest": 57, "consol": [57, 174, 180], "store": [57, 71, 72, 78, 79, 86, 87, 90, 91, 111, 112, 119, 120, 126, 127, 134, 135, 138, 139, 158, 159, 160, 165, 178, 180, 181, 182, 1800], "variabl": [57, 78, 79, 80, 81, 92, 93, 111, 112, 126, 127, 128, 129, 140, 141, 159, 162, 165, 167, 168, 171, 174, 175, 178, 181, 182, 183, 195, 1812], "fragment": [57, 1807, 1809, 1813], "except": [57, 77, 78, 79, 90, 91, 94, 95, 104, 105, 111, 112, 125, 126, 127, 134, 135, 142, 143, 152, 153, 156, 157, 158, 162, 165, 167, 168, 171, 172, 176, 180, 195], "pychram": 57, "depth": [57, 69, 70, 117, 118, 181, 182, 183, 194], "dummi": 57, "wherein": [57, 170, 174], "evalu": [57, 75, 76, 111, 112, 123, 124, 125, 160, 162, 176, 1811], "failur": [57, 161, 174], "arraywithactiv": [59, 60, 62, 63, 180], "arraywithcr": [59, 62, 63, 69, 180], "arraywithdatatyp": [59, 62, 63, 71, 180], "arraywithdevic": [59, 62, 63, 73, 180], "arraywithgener": [59, 62, 63, 78, 180], "arraywithgradi": [59, 62, 63, 80, 180], "arraywithimag": [59, 62, 63, 82, 180], "arraywithlay": [59, 62, 63, 84, 180], "arraywithlinearalgebra": [59, 62, 63, 86, 180], "arraywithloss": [59, 62, 63, 88, 180], "arraywithmanipul": [59, 62, 63, 90, 180], "arraywithnorm": [59, 62, 63, 92, 180], "arraywithrandom": [59, 62, 63, 94, 180], "arraywithsearch": [59, 62, 63, 96, 180], "arraywithset": [59, 62, 63, 98, 180], "arraywithsort": [59, 62, 63, 100, 180], "arraywithstatist": [59, 62, 63, 102, 180], "arraywithutil": [59, 62, 63, 104, 180], "arraywithactivationsexperiment": [59, 62, 63, 77], "arraywithconversionsexperiment": [59, 62, 63, 77], "arraywithcreationexperiment": [59, 62, 63, 77], "arraywithdata_typeexperiment": [59, 62, 63, 77], "arraywithdeviceexperiment": [59, 62, 63, 77], "arraywithelementwiseexperiment": [59, 62, 63, 77], "arraywithgeneralexperiment": [59, 62, 63, 77], "arraywithgradientsexperiment": [59, 62, 63, 77], "arraywithimageexperiment": [59, 62, 63, 77], "arraywithlayersexperiment": [59, 62, 63, 77], "arraywithlinearalgebraexperiment": [59, 62, 63, 77], "arraywithlossesexperiment": [59, 62, 63, 77], "arraywithmanipulationexperiment": [59, 62, 63, 77], "arraywithnormsexperiment": [59, 62, 63, 77], "arraywithrandomexperiment": [59, 62, 63, 77], "arraywithsearchingexperiment": [59, 62, 63, 77], "arraywithsetexperiment": [59, 62, 63, 77], "arraywithsortingexperiment": [59, 62, 63, 77], "arraywithstatisticalexperiment": [59, 62, 63, 77], "arraywithutilityexperiment": [59, 62, 63, 77], "properti": [59, 62, 63, 111, 112, 157, 160, 164, 169, 173, 174, 180, 181, 182, 1817], "transpos": [59, 62, 63, 86, 87, 111, 112, 134, 135, 171, 180, 183, 1801], "ret": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 171, 172, 173, 175, 178, 183], "dimension": [59, 62, 63, 77, 86, 87, 90, 91, 96, 97, 102, 103, 104, 105, 111, 112, 123, 124, 134, 135, 138, 139, 150, 151, 152, 153, 178, 1808, 1811, 1818], "whose": [59, 62, 63, 69, 70, 75, 76, 77, 78, 79, 86, 87, 90, 91, 98, 99, 102, 103, 117, 118, 123, 124, 125, 126, 127, 134, 135, 138, 139, 146, 147, 150, 151, 165, 174], "dimens": [59, 62, 63, 69, 70, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 108, 111, 112, 113, 114, 117, 118, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 164, 166, 172, 173, 174, 176, 178, 181], "ax": [59, 60, 61, 62, 63, 77, 86, 87, 90, 91, 96, 97, 102, 103, 104, 105, 109, 110, 125, 134, 135, 138, 139, 144, 145, 150, 151, 152, 153, 162, 164, 174, 175, 178, 180], "permut": [59, 62, 63], "__add__": [59, 62, 63, 108, 113, 114, 158, 160, 164, 165, 168, 172, 180], "variant": [59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 164, 165, 176], "wrap": [59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 178, 180, 183, 195, 1800, 1807, 1811, 1812, 1817, 1818], "minim": [59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 171, 173, 176, 178, 1809, 1817], "input": [59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 195, 1812, 1815], "numer": [59, 62, 63, 71, 72, 75, 76, 78, 79, 86, 87, 94, 95, 96, 97, 102, 103, 108, 113, 114, 119, 120, 123, 124, 126, 127, 134, 135, 142, 143, 144, 145, 148, 149, 162, 170, 172, 173, 174, 175, 176, 178, 182, 1808, 1811, 1817], "broadcast": [59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 160, 162, 164, 165, 174, 175, 178], "element": [59, 60, 61, 62, 63, 69, 70, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 113, 114, 117, 118, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 165, 173, 174, 176, 178, 1815], "wise": [59, 60, 61, 62, 63, 75, 76, 77, 86, 87, 108, 109, 110, 113, 114, 123, 124, 125, 134, 135, 176], "sum": [59, 62, 63, 75, 76, 77, 78, 79, 86, 87, 88, 89, 102, 103, 108, 111, 112, 113, 114, 123, 124, 125, 126, 127, 134, 135, 136, 137, 150, 151, 160, 162, 169, 171, 178], "promot": [59, 62, 63, 71, 72, 75, 76, 77, 86, 87, 108, 113, 114, 119, 120, 123, 124, 125, 134, 135, 148, 149, 157, 165, 166, 169], "y": [59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 164, 172, 173, 174, 175, 176, 178, 180], "z": [59, 62, 63, 75, 76, 78, 79, 86, 87, 88, 89, 94, 95, 102, 103, 108, 113, 114, 123, 124, 126, 127, 134, 135, 136, 137, 142, 143, 150, 151, 159, 160, 164, 178, 180], "__le__": [59, 62, 63], "equal": [59, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 100, 101, 102, 103, 108, 111, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 134, 135, 138, 139, 142, 143, 148, 149, 160, 162, 164, 166, 174], "bool": [59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 164, 166, 171, 172, 174, 175, 178, 183], "fals": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 164, 166, 171, 172, 173, 174, 178, 181, 182, 183], "true": [59, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 181, 182, 183], "__radd__": [59, 62, 63, 108, 113, 114, 164, 165, 172], "__rrshift__": [59, 62, 63, 108, 113, 114], "bitwise_right_shift": [59, 62, 63, 75, 76, 123, 124], "x1": [59, 62, 63, 71, 72, 75, 76, 77, 86, 87, 96, 97, 119, 120, 123, 124, 125, 126, 127, 134, 135, 144, 145, 148, 149, 157, 162, 164, 166, 168, 172], "32": [59, 62, 63, 75, 76, 77, 94, 95, 108, 113, 114, 123, 124, 125, 142, 143, 181, 1816], "__rshift__": [59, 62, 63, 108, 113, 114], "__rsub__": [59, 62, 63, 108, 113, 114], "subtract": [59, 62, 63, 75, 76, 108, 113, 114, 123, 124, 158, 160, 164], "__sub__": [59, 62, 63, 108, 113, 114, 158, 160, 164, 168, 180], "nativearrai": [59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 158, 160, 164, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 1800], "nativ": [59, 62, 63, 64, 66, 67, 68, 69, 70, 78, 79, 115, 116, 126, 127, 162, 166, 170, 171, 172, 173, 174, 178, 180, 181, 1800, 1809, 1818], "resid": [59, 62, 63, 172, 178, 182], "dtype": [59, 62, 63, 69, 70, 71, 72, 77, 84, 85, 86, 87, 94, 95, 96, 97, 102, 103, 117, 118, 119, 120, 125, 126, 127, 132, 133, 134, 135, 142, 143, 144, 145, 150, 151, 157, 159, 162, 163, 164, 167, 169, 170, 172, 173, 174, 175, 178, 180, 1801], "mt": [59, 62, 63, 180], "matric": [59, 62, 63, 69, 70, 86, 87, 134, 135, 194, 1811], "n": [59, 62, 63, 69, 70, 77, 86, 87, 90, 91, 94, 95, 96, 97, 102, 103, 104, 105, 123, 124, 125, 134, 135, 138, 139, 142, 143, 144, 145, 150, 151, 152, 153, 156, 174], "ndim": [59, 62, 63, 77, 96, 97, 144, 145, 160], "int": [59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 160, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 183], "size": [59, 62, 63, 77, 78, 79, 86, 87, 90, 91, 94, 95, 96, 97, 108, 111, 112, 113, 114, 125, 126, 127, 134, 135, 138, 139, 142, 143, 144, 145, 173, 174, 181], "overview": [59, 108, 174, 177, 194, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "forum": [59, 108, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 210, 248, 250, 251, 333, 428, 462, 1090, 1091, 1286, 1324, 1396, 1530, 1546, 1627, 1631, 1649, 1654, 1681, 1728, 1744, 1789, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1825, 1835, 1847, 1850, 1852, 1858], "abc": [60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 180], "gelu": [60, 61, 109, 110], "approxim": [60, 61, 77, 86, 87, 109, 110, 123, 124, 134, 135, 165, 172], "none": [60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183], "185": [60, 61, 109, 110], "046": [60, 61, 109, 110], "leaky_relu": [60, 61, 109, 110, 173, 1801], "alpha": [60, 61, 75, 76, 77, 94, 95, 109, 110, 123, 124, 125, 142, 143, 172, 173], "39": [60, 61, 75, 76, 77, 94, 95, 109, 110, 123, 124, 125, 128, 129, 142, 143], "85": [60, 61, 94, 95, 109, 110, 123, 124, 128, 129, 132, 133, 142, 143], "17": [60, 61, 77, 108, 109, 110, 113, 114, 123, 124, 125, 126, 127, 128, 129, 132, 133, 142, 143, 160, 164], "log_softmax": [60, 61, 109, 110], "axi": [60, 61, 69, 70, 77, 78, 79, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 117, 118, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 139, 144, 145, 148, 149, 150, 151, 152, 153, 160, 162, 164, 166, 168, 169, 171, 172, 174, 176, 178, 180, 183, 194], "98": [60, 61, 80, 81, 94, 95, 109, 110, 123, 124, 128, 129, 142, 143], "37": [60, 61, 75, 76, 77, 109, 110, 123, 124, 125], "35": [60, 61, 84, 85, 109, 110, 123, 124, 125, 132, 133, 134, 135, 142, 143], "0719": [60, 61, 109, 110], "62": [60, 61, 109, 110, 125, 140, 141, 142, 143], "221": [60, 61], "82": [60, 61, 75, 76, 128, 129, 142, 143], "relu": [60, 61, 106, 107, 109, 110, 173, 181, 182, 1801], "sigmoid": [60, 61, 109, 110, 178, 181, 182, 1801], "269": [60, 61, 109, 110], "731": [60, 61, 109, 110], "881": [60, 61, 75, 76, 109, 110, 123, 124], "softmax": [60, 61, 106, 107, 109, 110, 1801], "union": [60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 162, 163, 164, 166, 167, 168, 169, 171, 172, 175, 176, 178, 183], "422": [60, 61, 109, 110], "155": [60, 61, 109, 110, 132, 133], "softplu": [60, 61, 109, 110, 176, 1801], "beta": [60, 61, 92, 93, 94, 95, 109, 110, 125, 140, 141, 142, 143, 176], "threshold": [60, 61, 75, 76, 109, 110, 123, 124, 176], "3461": [60, 61, 109, 110], "6491": [60, 61, 109, 110], "22": [60, 61, 75, 76, 77, 78, 79, 94, 95, 102, 103, 109, 110, 125, 126, 127, 132, 133, 142, 143, 160], "09": [60, 61, 128, 129, 142, 143], "31": [60, 61, 75, 76, 77, 123, 124, 125, 126, 127, 132, 133, 142, 143, 181], "55": [60, 61, 142, 143, 157], "13": [60, 61, 75, 76, 77, 84, 85, 94, 95, 102, 103, 123, 124, 125, 126, 127, 128, 129, 132, 133, 138, 139, 142, 143, 150, 151, 160, 164], "collect": [64, 111, 112, 115, 166, 173, 174, 194, 1809, 1811, 1814], "args_to_ivi": 64, "include_deriv": [64, 65, 66, 67, 68, 115, 116], "kwarg": [64, 65, 66, 77, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 172, 178, 182], "nest": [64, 65, 66, 67, 68, 108, 111, 112, 113, 114, 115, 116, 158, 160, 169, 175, 181, 182, 195, 1800, 1811], "otherwis": [64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 86, 87, 90, 91, 96, 97, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 161, 162, 163, 164, 174, 178], "unchang": [64, 65, 66, 67, 68], "dict": [64, 65, 66, 67, 68, 78, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 167, 181, 182, 1800], "deriv": [64, 65, 66, 67, 68, 69, 70, 80, 81, 115, 116, 117, 118, 125, 128, 129, 162, 163, 180, 182], "tupl": [64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 84, 85, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 167, 168, 173, 174, 178, 181, 182, 195], "str": [64, 65, 66, 77, 78, 79, 84, 85, 90, 91, 102, 103, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 163, 166, 167, 172, 175, 178, 183], "kei": [64, 65, 66, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 167, 172, 173, 174, 181, 1811, 1814, 1818], "word": [64, 65, 66, 160, 172, 1800], "args_to_n": [64, 171], "cont_inplac": [64, 66, 68], "to_ivi": [64, 115, 116], "leaf": [64, 67, 111, 112, 150, 151, 160, 169, 181], "travers": [64, 67, 68, 115, 116, 160, 162, 178], "lowest": [64, 67, 68, 94, 95, 115, 116, 142, 143, 169, 195, 1800, 1808, 1812, 1816], "to_n": [64, 115, 116, 178], "asarrai": [69, 70, 78, 79, 126, 127, 170, 171, 172], "boolean": [69, 70, 71, 72, 75, 76, 77, 78, 79, 90, 91, 96, 97, 102, 103, 111, 112, 119, 120, 123, 124, 125, 126, 127, 138, 139, 144, 145, 150, 151, 160, 172, 173, 174, 176], "nativedtyp": [69, 70, 71, 72, 77, 94, 95, 96, 97, 102, 103, 117, 118, 125, 142, 143, 144, 145, 150, 151, 162, 163, 168, 172, 175, 178], "datatyp": [69, 70, 111, 112], "infer": [69, 70, 78, 79, 90, 91, 117, 118, 126, 127, 138, 139, 156, 159, 162, 163, 170, 174, 178, 183, 1809, 1810, 1813, 1815], "nativedevic": [69, 70, 73, 74, 94, 95, 117, 118, 121, 122, 142, 143, 162, 163, 166, 168, 175], "interpret": [69, 70, 161, 1812], "copy_arrai": [69, 70], "empty_lik": [69, 70, 117, 118, 176], "deafult": [69, 70, 96, 97, 144, 145], "uniniti": [69, 70], "from_dlpack": [69, 70, 117, 118], "full_lik": [69, 70, 117, 118, 175], "fill_valu": [69, 70, 96, 97, 117, 118, 144, 145, 162, 173, 175], "float": [69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 102, 103, 109, 110, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 157, 160, 162, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 182], "scalar": [69, 70, 75, 76, 77, 78, 79, 109, 110, 117, 118, 123, 124, 126, 127, 134, 135, 162, 195, 1811], "fill": [69, 70, 77, 94, 95, 96, 97, 111, 112, 117, 118, 125, 142, 143, 144, 145, 173], "000123": [69, 70], "ones": [69, 70, 80, 81, 94, 95, 111, 112, 117, 118, 142, 143, 164, 168, 174, 180, 181, 1801, 1811], "meshgrid": [69, 70, 117, 118], "spars": [69, 70, 88, 89, 117, 118, 136, 137], "xy": [69, 70, 117, 118], "native_arrai": [69, 70, 71, 72, 75, 76, 90, 91, 117, 118, 121, 122, 123, 124, 126, 127, 148, 149, 170, 173, 174], "one_hot": [69, 70, 117, 118, 183, 1801], "on_valu": [69, 70, 117, 118], "off_valu": [69, 70, 117, 118], "scatter": [69, 70, 78, 79, 117, 118, 126, 127, 176, 1818], "hot": [69, 70, 117, 118], "float32": [69, 70, 71, 72, 84, 85, 117, 118, 119, 120, 126, 127, 132, 133, 150, 151, 162, 164, 174], "cuda": [69, 70, 94, 95, 126, 127, 142, 143, 178, 195, 1800, 1816], "unless": [69, 70, 77, 86, 87, 117, 118, 125, 159, 163, 171, 195], "overrid": [69, 70, 117, 118], "ones_lik": [69, 70, 117, 118, 159, 183, 1801], "tril": [69, 70, 117, 118], "k": [69, 70, 77, 84, 85, 86, 87, 94, 95, 117, 118, 123, 124, 125, 132, 133, 134, 135, 142, 143, 156, 157, 172, 178, 1807, 1811], "innermost": [69, 70, 86, 87, 134, 135], "mxn": [69, 70, 86, 87, 134, 135], "diagon": [69, 70, 86, 87, 134, 135], "triangular": [69, 70, 86, 87, 134, 135], "triu": [69, 70, 117, 118], "upper": [69, 70, 86, 87, 94, 95, 134, 135, 142, 143, 171, 174], "zeros_lik": [69, 70, 117, 118, 172, 176, 1801], "creation": [70, 108, 111, 112, 113, 114, 118, 162, 163, 166, 168, 170, 172, 173, 174, 175, 178, 1811, 1813, 1817], "data_typ": [71, 72, 119, 120, 162, 174, 175], "astyp": [71, 72, 84, 85, 119, 120, 132, 133, 162, 171, 172, 176], "irrespect": [71, 72, 119, 120, 160, 171, 180, 1818], "rule": [71, 72, 77, 86, 87, 119, 120, 123, 124, 134, 135, 157, 158, 160, 162, 164, 167, 168, 169, 174, 176, 1812], "cast": [71, 72, 77, 119, 120, 125, 162, 169, 173, 178, 1801], "nan": [71, 72, 75, 76, 77, 78, 79, 102, 103, 119, 120, 123, 124, 125, 126, 127, 157, 162, 165, 175], "infin": [71, 72, 75, 76, 77, 78, 79, 119, 120, 123, 124, 125, 134, 135, 157, 165], "non": [71, 72, 77, 86, 87, 94, 95, 96, 97, 102, 103, 104, 105, 119, 120, 125, 134, 135, 142, 143, 144, 145, 150, 151, 152, 153, 160, 162, 164, 170, 178, 1811], "float64": [71, 72, 94, 95, 102, 103, 119, 120, 142, 143, 150, 151, 162, 174], "broadcast_arrai": [71, 72, 119, 120], "arbitrari": [71, 72, 77, 111, 112, 119, 120, 160, 168, 169, 171, 172, 174, 182, 195, 1812, 1817], "x2": [71, 72, 75, 76, 77, 78, 79, 86, 87, 96, 97, 119, 120, 123, 124, 125, 126, 127, 134, 135, 144, 145, 157, 162, 164, 166, 168, 172], "x3": [71, 72], "mix": [71, 72, 75, 76, 108, 113, 114, 119, 120, 123, 124, 126, 127, 136, 137, 142, 143, 156, 164, 171, 174, 176, 178, 1800, 1811, 1815, 1817], "broadcast_to": [71, 72, 119, 120, 162], "can_cast": [71, 72, 119, 120, 162, 169, 172], "occur": [71, 72, 77, 98, 99, 119, 120, 125, 146, 147, 157], "as_n": [71, 72, 73, 74, 119, 120, 121, 122, 162], "int32": [71, 72, 94, 95, 96, 97, 102, 103, 119, 120, 126, 127, 142, 143, 144, 145, 162, 172, 174, 178], "finfo": [71, 72, 119, 120, 174], "iinfo": [71, 72, 119, 120, 167], "119": [71, 72], "122": [71, 72], "int8": [71, 72, 94, 95, 142, 143, 162, 174], "min": [71, 72, 78, 79, 102, 103, 119, 120, 126, 127, 150, 151], "128": [71, 72, 77, 84, 85, 108, 113, 114, 125, 132, 133], "max": [71, 72, 77, 78, 79, 86, 87, 102, 103, 119, 120, 125, 126, 127, 134, 135, 150, 151, 174], "127": [71, 72, 77, 125], "is_bool_dtyp": [71, 72, 119, 120], "is_float_dtyp": [71, 72, 119, 120, 175], "is_int_dtyp": [71, 72, 119, 120, 173, 175], "is_uint_dtyp": [71, 72, 119, 120, 173, 175], "result_typ": [71, 72, 119, 120, 162], "arrays_and_dtyp": [71, 72, 119, 120], "to_devic": [73, 74, 121, 122], "stream": [73, 74, 121, 122, 1815], "ab": [75, 76, 123, 124, 162, 170, 172, 174, 1801], "aco": [75, 76, 123, 124, 1801], "real": [75, 76, 102, 103, 123, 124, 150, 151, 160, 1813], "invers": [75, 76, 123, 124, 134, 135, 162, 194], "cosin": [75, 76, 123, 124], "57": [75, 76, 123, 124], "69": [75, 76, 128, 129, 142, 143, 174, 181], "acosh": [75, 76, 123, 124, 1801], "hyperbol": [75, 76, 123, 124], "99": [75, 76, 80, 81, 123, 124, 142, 143], "asin": [75, 76, 123, 124, 1801], "sine": [75, 76, 123, 124], "927": [75, 76, 123, 124], "asinh": [75, 76, 123, 124, 1801], "atan": [75, 76, 123, 124, 1801], "tangent": [75, 76, 123, 124, 165], "785": [75, 76, 123, 124], "464": [75, 76, 142, 143], "atan2": [75, 76, 123, 124, 1801], "coordin": [75, 76, 96, 97, 123, 124, 144, 145], "quotient": [75, 76, 123, 124], "245": [75, 76, 132, 133], "atanh": [75, 76, 123, 124, 1801], "549": [75, 76, 123, 124, 132, 133], "47": [75, 76, 77, 94, 95, 123, 124, 125, 126, 127, 128, 129, 142, 143], "bitwise_and": [75, 76, 123, 124], "11": [75, 76, 77, 78, 79, 84, 85, 86, 87, 94, 95, 102, 103, 108, 113, 114, 123, 124, 125, 126, 127, 132, 133, 134, 135, 138, 139, 142, 143, 150, 151, 160, 162, 164, 175], "bitwise_invert": [75, 76, 123, 124], "bitiwse_invert": [75, 76], "bitwise_left_shift": [75, 76, 123, 124], "bitwise_or": [75, 76, 123, 124], "bitwise_xor": [75, 76, 123, 124], "89": [75, 76, 94, 95, 119, 120, 123, 124, 125, 142, 143], "51": [75, 76, 77, 123, 124, 125, 126, 127, 142, 143], "18": [75, 76, 77, 94, 95, 123, 124, 125, 142, 143, 150, 151, 160, 164], "19": [75, 76, 77, 94, 95, 123, 124, 125, 134, 135, 142, 143, 164], "26": [75, 76, 92, 93, 94, 95, 125, 126, 127, 128, 129, 142, 143], "27": [75, 76, 77, 86, 87, 94, 95, 125, 134, 135, 142, 143, 150, 151], "23": [75, 76, 77, 94, 95, 117, 118, 123, 124, 125, 126, 127, 142, 143, 174, 178], "20": [75, 76, 77, 84, 85, 94, 95, 102, 103, 123, 124, 125, 126, 127, 142, 143, 150, 151, 176, 180], "74": [75, 76, 142, 143], "41": [75, 76, 77, 123, 124, 125, 126, 127, 134, 135], "59": [75, 76], "24": [75, 76, 77, 86, 87, 102, 103, 125, 126, 127, 132, 133, 134, 135, 142, 143, 181], "ceil": [75, 76, 123, 124, 1801], "express": [75, 76, 77, 123, 124, 125, 165, 167, 172, 178, 183, 1811, 1812], "radian": [75, 76, 77, 123, 124, 125, 165], "54": [75, 76, 84, 85, 123, 124, 125, 132, 133, 142, 143, 164], "416": [75, 76], "540": [75, 76], "990": [75, 76], "cosh": [75, 76, 123, 124, 1801], "angl": [75, 76, 123, 124, 194], "76": [75, 76, 102, 103, 119, 120, 123, 124, 142, 143], "03": [75, 76, 123, 124, 128, 129, 142, 143], "81": [75, 76, 119, 120, 123, 124, 134, 135, 142, 143, 174], "deg2rad": [75, 76, 123, 124], "degre": [75, 76, 77, 102, 103, 123, 124, 125, 150, 151, 1810], "180": [75, 76, 123, 124], "270": [75, 76, 123, 124], "360": [75, 76, 123, 124], "71": [75, 76, 123, 124], "28": [75, 76, 92, 93, 123, 124, 125, 126, 127, 142, 143, 150, 151], "divid": [75, 76, 78, 79, 90, 91, 111, 112, 123, 124, 138, 139, 158, 160, 164], "dividend": [75, 76, 123, 124], "divisor": [75, 76, 80, 81, 102, 103, 123, 124, 128, 129, 150, 151], "375": [75, 76], "erf": [75, 76, 123, 124], "exponenti": [75, 76, 123, 124], "gauss": [75, 76, 123, 124], "exp": [75, 76, 123, 124, 1801], "expm1": [75, 76, 123, 124, 162], "244": [75, 76], "918": [75, 76], "48": [75, 76, 77, 123, 124, 125, 126, 127, 128, 129, 142, 143], "147": [75, 76], "floor": [75, 76, 123, 124, 1801], "floor_divid": [75, 76, 123, 124], "greater_equ": [75, 76, 123, 124], "isfinit": [75, 76, 123, 124, 172], "out_i": [75, 76, 123, 124], "self_i": [75, 76, 123, 124], "finit": [75, 76, 77, 123, 124, 125], "inf": [75, 76, 77, 78, 79, 86, 87, 123, 124, 125, 126, 127, 134, 135, 162], "isinf": [75, 76, 123, 124], "neg": [75, 76, 77, 86, 87, 90, 91, 94, 95, 104, 105, 109, 110, 123, 124, 125, 134, 135, 138, 139, 142, 143, 152, 153, 160, 169, 171], "isnan": [75, 76, 123, 124], "isreal": [75, 76, 123, 124], "1j": [75, 76, 123, 124], "5j": [75, 76, 123, 124], "6j": [75, 76], "less_equ": [75, 76, 123, 124, 166], "61": [75, 76, 77, 123, 124, 125, 128, 129, 136, 137, 142, 143], "log10": [75, 76, 123, 124], "logarithm": [75, 76, 123, 124], "602": [75, 76], "699": [75, 76], "log1p": [75, 76, 123, 124], "693": [75, 76, 123, 124], "001": [75, 76, 77, 92, 93, 125, 181, 182], "0953": [75, 76, 123, 124], "log2": [75, 76, 123, 124], "logaddexp": [75, 76, 123, 124], "05": [75, 76, 77, 80, 81, 92, 93, 123, 124, 125, 128, 129, 140, 141, 173, 174], "logical_and": [75, 76, 123, 124, 172, 176, 1801, 1818], "logical_not": [75, 76, 123, 124, 162, 1801], "logical_or": [75, 76, 123, 124, 1801, 1818], "conform": [75, 76, 86, 87, 123, 124, 165], "org": [75, 76, 123, 124, 128, 129, 165], "api_specif": [75, 76, 123, 124, 165], "elementwise_funct": [75, 76, 123, 124, 165], "noqa": [75, 76, 86, 87, 123, 124], "simplic": [75, 76, 86, 87, 123, 124, 165, 176, 182, 194], "nestabl": [75, 76, 86, 87, 123, 124, 156, 164, 165, 171, 174, 1800], "logical_xor": [75, 76, 123, 124], "use_wher": [75, 76, 123, 124], "formula": [75, 76, 123, 124], "clip": [75, 76, 90, 91, 123, 124, 126, 127, 138, 139, 160, 169, 171, 181, 183, 1801], "minimum": [75, 76, 78, 79, 90, 91, 96, 97, 102, 103, 123, 124, 126, 127, 138, 139, 144, 145, 150, 151, 1801, 1808, 1814, 1818], "exce": [75, 76, 77, 125], "arguement": [75, 76], "condit": [75, 76, 96, 97, 144, 145, 157, 162, 164, 166, 171, 194], "boradcastbl": [75, 76], "thatth": [75, 76], "30": [75, 76, 125, 126, 127, 142, 143, 150, 151], "56": [75, 76, 77, 84, 85, 94, 95, 123, 124, 125, 164], "21": [75, 76, 77, 78, 79, 94, 95, 123, 124, 125, 126, 127, 142, 143, 150, 151], "not_equ": [75, 76, 123, 124], "pow": [75, 76, 123, 124, 157], "expon": [75, 76, 77, 78, 79, 125, 126, 127], "rad2deg": [75, 76, 123, 124], "286": [75, 76, 125], "458": [75, 76], "573": [75, 76], "reciproc": [75, 76, 123, 124], "remaind": [75, 76, 77, 90, 91, 111, 112, 123, 124, 125, 138, 139, 157], "modulu": [75, 76, 123, 124], "x2_i": [75, 76, 123, 124, 157], "94": [75, 76, 80, 81, 94, 95, 123, 124, 128, 129, 142, 143], "256": [75, 76], "0001": [75, 76], "36": [75, 76, 84, 85, 102, 103, 125, 126, 127, 134, 135], "67": [75, 76, 78, 79, 123, 124, 126, 127, 142, 143], "45": [75, 76, 77, 102, 103, 108, 113, 114, 123, 124, 125, 128, 129, 142, 143], "678": [75, 76], "25": [75, 76, 78, 79, 86, 87, 88, 89, 94, 95, 102, 103, 109, 110, 123, 124, 125, 126, 127, 132, 133, 134, 135, 140, 141, 142, 143, 150, 151, 160], "33": [75, 76, 94, 95, 102, 103, 123, 124, 126, 127, 128, 129, 132, 133], "sin": [75, 76, 78, 79, 123, 124, 158, 178, 1801], "841": [75, 76, 123, 124], "909": [75, 76, 123, 124, 126, 127], "141": [75, 76, 123, 124], "sinh": [75, 76, 123, 124, 1801], "63": [75, 76, 109, 110, 123, 124, 134, 135], "232": [75, 76, 123, 124], "sqrt": [75, 76, 123, 124], "squar": [75, 76, 86, 87, 123, 124, 134, 135], "tan": [75, 76, 123, 124, 160, 165, 168, 169, 171, 172, 178, 1801], "tanh": [75, 76, 123, 124, 178, 1801], "762": [75, 76, 123, 124], "964": [75, 76, 123, 124], "trunc": [75, 76, 123, 124], "025": [75, 76], "trunc_divid": [75, 76, 123, 124], "elementwis": [76, 92, 93, 124, 140, 141, 169, 175, 178], "allclos": [77, 125], "rtol": [77, 86, 87, 125, 134, 135, 173], "1e": [77, 80, 81, 88, 89, 92, 93, 125, 128, 129, 136, 137, 140, 141, 160, 169, 171, 173, 182, 183, 1801], "atol": [77, 86, 87, 125, 134, 135], "08": [77, 102, 103, 125, 142, 143], "equal_nan": [77, 125], "toler": [77, 86, 87, 125, 134, 135, 157, 173, 1811], "compar": [77, 78, 79, 100, 101, 111, 112, 125, 126, 127, 148, 149, 159, 164, 167, 173, 174, 181, 1807, 1809, 1811, 1817, 1818], "1e10": 77, "00001e10": 77, "00001e": 77, "005": 77, "count_nonzero": [77, 125], "keepdim": [77, 86, 87, 90, 91, 96, 97, 102, 103, 104, 105, 111, 112, 125, 134, 135, 138, 139, 144, 145, 150, 151, 152, 153, 166, 172, 178], "count": [77, 90, 91, 98, 99, 104, 105, 125, 138, 139, 146, 147, 152, 153, 160, 164, 181], "flatten": [77, 78, 79, 90, 91, 96, 97, 98, 99, 125, 126, 127, 134, 135, 138, 139, 144, 145, 146, 147, 176], "diff": [77, 111, 112, 125, 160, 164, 181], "param": [77, 108, 111, 112, 113, 114, 125, 126, 127, 183], "th": [77, 125], "discret": [77, 125], "static_diff": [77, 125], "exp2": [77, 125], "power": [77, 78, 79, 86, 87, 125, 126, 127, 134, 135, 180, 181, 182, 1811, 1813, 1817], "nearest": 77, "float_pow": [77, 125], "125": [77, 86, 87, 134, 135], "fmax": [77, 125], "fmod": [77, 125], "divis": [77, 78, 79, 80, 81, 125, 126, 127, 128, 129, 169], "gcd": [77, 125], "isclos": [77, 125, 157], "hold": [77, 78, 79, 86, 87, 102, 103, 125, 134, 135, 150, 151, 181, 1812], "01": [77, 80, 81, 125, 128, 129, 134, 135, 142, 143, 159, 183], "isneginf": [77, 125], "isposinf": [77, 125], "lcm": [77, 125], "60": [77, 102, 103, 125, 126, 127, 142, 143, 150, 151], "logaddexp2": [77, 125], "169925": [77, 125], "nan_to_num": [77, 125], "posinf": [77, 125], "neginf": [77, 125], "small": [77, 86, 87, 92, 93, 125, 134, 135, 140, 141, 164, 169, 173, 176, 178, 182, 195, 1812], "5e": [77, 80, 81, 125], "nansum": [77, 125], "accumul": [77, 125], "By": [77, 102, 103, 104, 105, 125, 150, 151, 152, 153, 162, 164, 169, 171, 172, 178, 182, 183], "reduc": [77, 78, 79, 86, 87, 96, 97, 102, 103, 104, 105, 111, 112, 125, 126, 127, 134, 135, 144, 145, 150, 151, 152, 153, 166, 172, 176, 178, 180, 1809, 1813, 1814, 1815], "nextaft": [77, 125], "represent": [77, 78, 79, 108, 111, 112, 113, 114, 125, 126, 127, 194, 1809, 1810, 1812, 1816, 1817], "0e": [77, 80, 81, 125, 128, 129], "50": [77, 102, 103, 123, 124, 125, 126, 127, 180], "4013e": [77, 125], "4028e": [77, 125], "38": [77, 123, 124, 125, 142, 143, 164], "signbit": [77, 125], "637": [77, 125], "212": [77, 84, 85, 125], "0909": [77, 125], "trapz": [77, 123, 124], "dx": [77, 123, 124], "sampl": [77, 94, 95, 102, 103, 123, 124, 125, 142, 143, 150, 151, 170, 173, 174], "evenli": [77, 90, 91, 111, 112, 123, 124, 138, 139], "apart": [77, 123, 124], "trapezoid": [77, 123, 124], "zeta": [77, 125], "0369": [77, 125], "2021": [77, 125, 1801], "isin": [77, 125], "test_el": [77, 125], "assume_uniqu": [77, 125], "invert": [77, 125], "avg_pool1d": [77, 125], "kernel": [77, 84, 85, 125, 132, 133, 176, 178, 195, 1811, 1814, 1815], "stride": [77, 84, 85, 125, 132, 133, 1811], "pad": [77, 84, 85, 125, 132, 133], "data_format": [77, 84, 85, 125, 132, 133], "nwc": [77, 84, 85, 125, 132, 133], "batch_siz": [77, 84, 85, 94, 95, 125, 132, 133, 142, 143, 181], "w": [77, 80, 81, 84, 85, 111, 112, 123, 124, 125, 126, 127, 128, 129, 132, 133, 178, 181, 182], "d_in": [77, 84, 85, 125, 132, 133], "slide": [77, 84, 85, 125, 132, 133], "algorithm": [77, 84, 85, 109, 110, 125, 132, 133, 162, 172, 176, 195, 1811, 1813, 1815], "ncw": [77, 84, 85, 125, 132, 133], "pool": [77, 125], "arang": [77, 86, 87, 102, 103, 125, 134, 135, 162, 1801, 1818], "reshap": [77, 86, 87, 90, 91, 111, 112, 125, 132, 133, 134, 135, 138, 139, 171, 172, 174, 176, 178, 180, 183, 1801], "avg_pool2d": [77, 125], "nhwc": [77, 84, 85, 125, 132, 133], "h": [77, 84, 85, 125, 126, 127, 132, 133, 156, 160, 1807], "nchw": [77, 84, 85, 125, 132, 133], "max_pool2d": [77, 125], "40": [77, 78, 79, 108, 113, 114, 125, 126, 127, 142, 143, 150, 151], "46": [77, 94, 95, 125, 132, 133, 142, 143], "avg_pool3d": [77, 125], "ndhwc": [77, 84, 85, 125, 132, 133], "convolut": [77, 84, 85, 125, 132, 133, 1809, 1811], "ncdhw": [77, 125], "43": [77, 108, 113, 114, 142, 143], "44": [77, 94, 95, 123, 124, 125, 142, 143], "dct": [77, 125, 181], "norm": [77, 78, 79, 86, 87, 93, 125, 126, 127, 134, 135, 141, 175, 1801], "signal": [77, 125, 1810, 1811], "liter": [77, 86, 87, 125, 134, 135, 167], "lenght": [77, 125], "transform": [77, 84, 85, 125, 132, 133, 174, 183, 194, 1800, 1809, 1811, 1812, 1813], "truncat": [77, 125, 181], "larger": [77, 90, 91, 102, 103, 125, 138, 139, 150, 151, 174, 1818], "ortho": [77, 125], "102": [77, 125, 142, 143], "406": [77, 125], "max_pool1d": [77, 125], "max_pool3d": [77, 125], "diagflat": [77, 125], "offset": [77, 86, 87, 125, 134, 135], "padding_valu": [77, 125], "right_left": [77, 125], "num_row": [77, 125], "num_col": [77, 125], "kron": [77, 125, 1818], "atleast_1d": [77, 125], "ari": [77, 125], "a1": 77, "a2": 77, "atleast_2d": [77, 125], "atleast_3d": [77, 125], "dsplit": [77, 125], "indices_or_sect": [77, 125], "3rd": [77, 125], "dstack": [77, 125], "start_dim": [77, 125], "end_dim": [77, 125], "dim": [77, 111, 112, 117, 118, 125, 162, 173, 176], "fastest": [77, 90, 91, 125, 138, 139], "slowest": [77, 90, 91, 125, 138, 139], "fortran": [77, 90, 91, 125, 138, 139, 1811, 1815], "memori": [77, 90, 91, 125, 138, 139, 162, 163, 171, 172, 176, 178, 193, 195, 1801, 1811, 1813, 1814, 1815], "layout": [77, 90, 91, 125, 138, 139, 159, 172, 176], "underli": [77, 90, 91, 125, 138, 139, 160, 176, 1811], "fliplr": [77, 125], "flip": [77, 90, 91, 125, 138, 139, 172, 180, 181, 183, 1801], "diag": [77, 86, 87, 125, 134, 135, 178], "flipud": [77, 125], "heavisid": [77, 125], "0000": [77, 125], "5000": 77, "hsplit": [77, 125], "horizont": [77, 125], "hstack": [77, 125], "vstack": [77, 125], "i0": [77, 125], "bessel": [77, 102, 103, 125, 150, 151], "26606588": [77, 125], "2795853": [77, 125], "88079259": [77, 125], "moveaxi": [77, 125], "destin": [77, 125], "unstack": [77, 90, 91, 111, 112, 138, 139, 160, 178, 181, 1801, 1818], "reorder": [77, 90, 91, 125, 138, 139], "pad_width": [77, 90, 91, 125, 138, 139], "constant": [77, 92, 93, 125, 140, 141, 169, 175, 182, 183, 195], "stat_length": [77, 125], "constant_valu": [77, 125], "end_valu": [77, 125], "reflect_typ": [77, 125], "rot90": [77, 125], "rotat": [77, 125, 194], "plane": [77, 125], "take_along_axi": [77, 125], "arr": [77, 78, 79, 119, 120, 125, 162, 163], "top_k": [77, 125], "largest": [77, 111, 112, 125, 194], "retun": [77, 125], "smallest": [77, 111, 112, 125], "vsplit": [77, 125], "dirichlet": [77, 125], "seed": [77, 94, 95, 111, 112, 125, 142, 143, 174, 1801], "shuffl": [77, 94, 95, 111, 112, 125, 142, 143, 1801], "length": [77, 90, 91, 108, 111, 112, 113, 114, 125, 138, 139, 167, 174, 181], "nativeshap": [77, 90, 91, 94, 95, 125, 138, 139, 142, 143], "drawn": [77, 94, 95, 125, 142, 143, 174], "vector": [77, 78, 79, 84, 85, 86, 87, 126, 127, 132, 133, 134, 135, 194, 1811], "10598304": 77, "21537054": 77, "67864642": 77, "48006698": 77, "07472073": 77, "44521229": 77, "55479872": 77, "05426367": 77, "39093761": 77, "19531053": 77, "51675832": 77, "28793114": 77, "12315625": 77, "29823365": 77, "5786101": 77, "15564976": 77, "50542368": 77, "33892656": 77, "1325352": 77, "44439589": 77, "42306891": 77, "msort": [77, 125], "randint": [77, 84, 85, 94, 95, 125, 132, 133, 142, 143, 162, 1801], "median": [77, 125, 172], "nanmean": [77, 125], "anyth": [77, 125, 174, 175, 1811, 1812], "6666666666666665": [77, 125], "unravel_index": [77, 125], "unravel": [77, 125], "all_equ": [78, 79, 126, 127], "equality_matrix": [78, 79, 126, 127], "array_equ": [78, 79], "assert_supports_inplac": [78, 79, 126, 127], "clip_matrix_norm": [78, 79, 126, 127], "max_norm": [78, 79, 126, 127], "downscal": [78, 79, 126, 127], "894": [78, 79, 126, 127], "79": [78, 79, 126, 127, 142, 143], "clip_vector_norm": [78, 79, 126, 127], "default_v": [78, 79], "catch_except": [78, 79], "rev": [78, 79], "with_cal": [78, 79], "catch": [78, 79, 174], "callabl": [78, 79, 126, 127, 160, 166, 172, 178], "einops_rearrang": [78, 79, 126, 127], "axes_length": [78, 79, 126, 127], "arrang": [78, 79], "rearrang": [78, 79, 126, 127], "einops_reduc": [78, 79, 126, 127], "reduct": [78, 79, 88, 89, 104, 105, 111, 112, 126, 127, 136, 137, 152, 153, 162, 174, 180, 1801], "One": [78, 79, 90, 91, 94, 95, 126, 127, 138, 139, 142, 143, 162, 164, 173, 174, 178, 180, 181], "prod": [78, 79, 102, 103, 126, 127, 150, 151, 162, 164, 178], "einops_repeat": [78, 79, 126, 127], "fourier_encod": [78, 79, 126, 127], "max_freq": [78, 79, 126, 127], "num_band": [78, 79, 126, 127], "linear": [78, 79, 84, 85, 109, 110, 126, 127, 132, 133, 165, 172, 174, 176, 178, 181, 182, 183, 1801, 1809, 1810, 1811, 1814], "concat": [78, 79, 90, 91, 111, 112, 138, 139, 173, 176, 178, 1801], "band": [78, 79, 126, 127], "linearli": [78, 79, 126, 127], "oppos": [78, 79, 126, 127, 162], "geometr": [78, 79, 126, 127], "concaten": [78, 79, 90, 91, 173, 176, 178, 181, 1801], "seper": [78, 79, 164, 174], "batch": [78, 79, 111, 112, 126, 127, 134, 135, 160, 169, 181, 1809], "expand": [78, 79, 90, 91, 126, 127, 160], "gather": [78, 79, 126, 127, 1818], "batch_dim": [78, 79, 126, 127], "gather_nd": [78, 79, 126, 127, 1801], "get_num_dim": [78, 79, 126, 127, 1801], "as_arrai": [78, 79, 126, 127], "has_nan": [78, 79, 126, 127], "include_inf": [78, 79, 126, 127], "inplace_decr": [78, 79, 126, 127], "val": [78, 79, 111, 112, 126, 127, 171, 180], "decrement": [78, 79, 126, 127], "inplace_incr": [78, 79, 126, 127], "inplace_upd": [78, 79, 126, 127, 171], "ensure_in_backend": [78, 79, 171], "inplac": [78, 79, 80, 81, 111, 112, 126, 127, 156, 158, 164, 168, 170, 173, 176, 180, 182], "is_arrai": [78, 79, 126, 127, 172], "exclus": [78, 79, 102, 103, 111, 112, 126, 127, 150, 151, 160, 162, 169, 172, 175, 183, 1815, 1817], "trace": [78, 79, 86, 87, 111, 112, 126, 127, 134, 135, 157, 162, 178, 195, 1800, 1812, 1817], "is_ivy_arrai": [78, 79, 126, 127, 171, 180], "is_ivy_contain": [78, 79, 126, 127], "is_native_arrai": [78, 79, 126, 127, 180], "scatter_flat": [78, 79, 126, 127], "occupi": [78, 79], "scatter_nd": [78, 79, 126, 127, 176, 180, 1801], "stable_divid": [78, 79, 126, 127, 169], "denomin": [78, 79, 92, 93, 126, 127, 140, 141, 169, 195, 1808], "min_denomin": [78, 79, 126, 127], "_min_denomin": [78, 79, 126, 127], "stable_pow": [78, 79, 126, 127], "min_bas": [78, 79, 126, 127], "_min_bas": [78, 79, 92, 93, 126, 127, 140, 141], "supports_inplace_upd": [78, 79, 126, 127], "supports_inplac": [78, 79, 126, 127], "to_list": [78, 79, 126, 127, 1801], "to_numpi": [78, 79, 126, 127, 181, 1801], "to_scalar": [78, 79, 126, 127], "value_is_nan": [78, 79, 126, 127], "92": [78, 79, 142, 143], "adam_step": [80, 81, 128, 129], "mw": [80, 81, 128, 129, 182], "vw": [80, 81, 128, 129, 182], "beta1": [80, 81, 128, 129, 182], "beta2": [80, 81, 128, 129, 182], "999": [80, 81, 123, 124, 128, 129, 182], "epsilon": [80, 81, 86, 87, 88, 89, 92, 93, 128, 129, 134, 135, 136, 137, 140, 141, 160, 169, 171, 182], "07": [80, 81, 88, 89, 123, 124, 128, 129, 136, 137, 142, 143, 182], "cost": [80, 81, 128, 129, 176, 1809], "weight": [80, 81, 84, 85, 92, 93, 128, 129, 132, 133, 140, 141, 160, 169, 178, 182, 183, 1810], "dc": [80, 81, 128, 129], "dw": [80, 81, 128, 129], "averag": [80, 81, 128, 129], "forget": [80, 81, 128, 129, 162], "adam": [80, 81, 128, 129, 181, 182, 183, 1801, 1811], "delta": [80, 81, 128, 129], "dcdw": [80, 81, 128, 129], "adam_step_delta": [80, 81, 128, 129], "182": [80, 81, 125], "adam_upd": [80, 81, 128, 129, 182], "lr": [80, 81, 128, 129, 181, 182], "mw_tm1": [80, 81, 128, 129], "vw_tm1": [80, 81, 128, 129], "stop_gradi": [80, 81, 128, 129, 182, 1801], "rate": [80, 81, 128, 129], "stop": [80, 81, 117, 118, 128, 129, 168, 176, 178, 195, 1811], "ws_new": [80, 81, 128, 129], "gradient_descent_upd": [80, 81, 128, 129, 1801], "handl": [80, 81, 108, 111, 112, 113, 114, 156, 160, 162, 163, 168, 169, 170, 171, 172, 173, 174, 176, 182, 1808, 1818], "higher": [80, 81, 177, 178, 183, 195, 1808, 1811, 1812, 1815, 1817, 1818], "descent": [80, 81, 128, 129, 182, 1811], "new_weight": [80, 81, 128, 129, 181], "95": [80, 81, 94, 95, 128, 129, 142, 143], "97": [80, 81, 123, 124, 128, 129, 142, 143], "96": [80, 81, 123, 124, 125, 126, 127, 142, 143], "lamb_upd": [80, 81, 128, 129], "max_trust_ratio": [80, 81, 128, 129], "decay_lambda": [80, 81, 128, 129], "trust": [80, 81, 128, 129], "ratio": [80, 81, 128, 129], "decai": [80, 81, 128, 129], "lamb": [80, 81, 128, 129, 182], "784": [80, 81], "78": [80, 81], "02": [80, 81, 92, 93, 94, 95, 123, 124, 128, 129, 142, 143], "04": [80, 81, 128, 129, 173, 174], "lars_upd": [80, 81, 128, 129], "lar": [80, 81, 128, 129, 182], "optimizer_upd": [80, 81, 128, 129], "effective_grad": [80, 81, 128, 129], "3e": [80, 81, 128, 129], "preserve_typ": [80, 81, 128, 129], "preserv": [80, 81, 108, 111, 112, 113, 114, 128, 129, 174, 183, 195], "gradient": [81, 129, 175, 181, 182, 194, 195, 1801, 1811], "conv1d": [84, 85, 132, 133], "dilat": [84, 85, 125, 132, 133], "fw": [84, 85, 132, 133, 173, 174], "d_out": [84, 85, 132, 133], "wio": [84, 85], "conv1d_transpos": [84, 85, 132, 133], "output_shap": [84, 85, 132, 133], "conv2d": [84, 85, 132, 133, 1801], "fh": [84, 85, 132, 133], "hwio": [84, 85], "conv3d": [84, 85, 132, 133], "conv3d_transpos": [84, 85, 132, 133], "depthwise_conv2d": [84, 85, 132, 133, 1801], "255": [84, 85, 125, 132, 133], "random_norm": [84, 85, 94, 95, 132, 133, 142, 143], "std": [84, 85, 94, 95, 102, 103, 132, 133, 142, 143, 150, 151, 164], "dropout": [84, 85, 132, 133, 181], "prob": [84, 85, 132, 133, 142, 143], "scale": [84, 85, 128, 129, 132, 133, 1811, 1813], "dropout1d": [84, 85, 132, 133], "bia": [84, 85, 92, 93, 132, 133, 140, 141, 178, 182], "outer_batch_shap": [84, 85, 132, 133], "inner_batch_shap": [84, 85, 132, 133], "in_featur": [84, 85, 132, 133], "out_featur": [84, 85, 132, 133], "84": [84, 85, 102, 103, 123, 124, 140, 141, 142, 143], "133": [84, 85], "134": [84, 85], "lstm_updat": [84, 85, 132, 133, 178], "init_h": [84, 85, 132, 133, 178], "init_c": [84, 85, 132, 133, 178], "recurrent_kernel": [84, 85, 132, 133, 178], "recurrent_bia": [84, 85, 132, 133, 178], "multi_head_attent": [84, 85, 132, 133, 171], "num_head": [84, 85, 132, 133], "mask": [84, 85, 132, 133, 176], "to_q_fn": [84, 85, 132, 133], "to_kv_fn": [84, 85, 132, 133], "to_out_fn": [84, 85, 132, 133, 171], "to_q_v": [84, 85, 132, 133], "to_kv_v": [84, 85, 132, 133], "to_out_v": [84, 85, 132, 133], "scaled_dot_product_attent": [84, 85, 132, 133], "linear_algebra": [86, 87, 134, 135, 175], "choleski": [86, 87, 134, 135, 171], "symmetr": [86, 87, 125, 134, 135, 160], "625": [86, 87], "cross": [86, 87, 88, 89, 134, 135, 136, 137, 161, 1801], "vif": [86, 87, 134, 135], "det": [86, 87, 134, 135], "axis1": [86, 87, 90, 91, 134, 135, 138, 139], "axis2": [86, 87, 134, 135], "eigh": [86, 87, 134, 135], "uplo": [86, 87, 134, 135], "eigvalsh": [86, 87, 134, 135], "eigenvalu": [86, 87, 134, 135], "inv": [86, 87, 134, 135, 1801], "adjoint": [86, 87, 134, 135], "matmul": [86, 87, 134, 135, 159, 174, 175, 178, 1801], "transpose_a": [86, 87, 134, 135], "transpose_b": [86, 87, 134, 135], "matrix_norm": [86, 87, 134, 135], "ord": [86, 87, 134, 135], "fro": [86, 87, 134, 135], "nuc": [86, 87, 134, 135], "matrix_rank": [86, 87, 134, 135], "rank": [86, 87, 90, 91, 104, 105, 134, 135, 138, 139, 152, 153], "singular": [86, 87, 134, 135, 162], "largest_singular_valu": [86, 87, 134, 135], "equival": [86, 87, 134, 135, 171, 172, 176, 181, 183], "ep": [86, 87, 134, 135], "defici": [86, 87], "matrix_transpos": [86, 87, 134, 135, 180], "pinv": [86, 87, 134, 135, 1801], "0426": [86, 87, 134, 135], "0964": [86, 87, 134, 135], "0605": [86, 87, 134, 135], "1368": [86, 87, 134, 135], "qr": [86, 87, 134, 135], "slogdet": [86, 87, 134, 135], "namedtupl": [86, 87, 98, 99, 134, 135, 146, 147], "logabsdet": [86, 87, 134, 135], "6931472": [86, 87], "solv": [86, 87, 134, 135, 157, 172, 179, 194, 1813], "svd": [86, 87, 134, 135, 1801], "compute_uv": [86, 87, 134, 135], "full_matric": [86, 87, 134, 135], "svdval": [86, 87, 134, 135], "tensordot": [86, 87, 134, 135, 162], "vander": [86, 87, 134, 135], "vandermond": [86, 87, 134, 135], "column": [86, 87, 134, 135], "len": [86, 87, 134, 135, 160, 171, 172, 174, 180, 183], "vecdot": [86, 87, 134, 135], "vector_norm": [86, 87, 134, 135, 1801], "vector_to_skew_symmetric_matrix": [86, 87, 134, 135, 1801], "binary_cross_entropi": [88, 89, 136, 137], "pred": [88, 89, 136, 137, 160, 169, 171], "predict": [88, 89, 136, 137], "amount": [88, 89, 136, 137, 163, 173], "smooth": [88, 89, 136, 137], "binari": [88, 89, 136, 137], "entropi": [88, 89, 136, 137], "357": [88, 89, 136, 137], "223": [88, 89, 136, 137], "cross_entropi": [88, 89, 136, 137, 160, 169, 171], "3862944": [88, 89], "sparse_cross_entropi": [88, 89, 136, 137], "logit": [88, 89, 136, 137], "loss": [89, 137, 162, 169, 172, 175, 181, 182, 183, 1801, 1811, 1818], "x_min": [90, 91, 138, 139, 183], "x_max": [90, 91, 138, 139, 183], "join": [90, 91, 111, 112, 166, 1801], "constant_pad": [90, 91, 138, 139], "expand_dim": [90, 91, 138, 139, 172, 178, 181, 1801], "permute_dim": [90, 91, 138, 139], "valueerror": [90, 91, 126, 127, 138, 139, 166], "reus": [90, 91, 138, 139, 166, 174, 1816], "buffer": [90, 91, 138, 139, 195], "roll": [90, 91, 138, 139, 160, 168], "restor": [90, 91, 138, 139], "num_or_size_split": [90, 91, 111, 112, 138, 139, 178], "with_remaind": [90, 91, 111, 112, 138, 139], "squeez": [90, 91, 138, 139, 1801, 1811], "swapax": [90, 91, 138, 139], "axis0": [90, 91, 138, 139], "swap_ax": [90, 91], "tile": [90, 91, 126, 127, 138, 139, 1801], "rep": [90, 91, 138, 139], "unpack": [90, 91, 138, 139, 167, 173, 174], "zero_pad": [90, 91, 138, 139, 1801], "layer_norm": [92, 93, 140, 141], "normalized_idx": [92, 93, 140, 141], "new_std": [92, 93, 140, 141], "learnabl": [92, 93, 140, 141, 183], "gamma": [92, 93, 94, 95, 140, 141], "0976": [92, 93], "3452": [92, 93], "2740": [92, 93], "1047": [92, 93], "5886": [92, 93], "2732": [92, 93], "7696": [92, 93], "7024": [92, 93], "2518": [92, 93], "826": [92, 93], "178": [92, 93], "981": [92, 93], "831": [92, 93], "421": [92, 93], "parameter": [94, 95, 142, 143], "multinomi": [94, 95, 142, 143], "population_s": [94, 95, 142, 143], "num_sampl": [94, 95, 142, 143], "unnorm": [94, 95, 142, 143, 174], "popul": [94, 95, 102, 103, 111, 112, 142, 143, 150, 151, 162, 163, 174, 178, 1817], "uniform": [94, 95, 142, 143, 182, 1818], "batch_shap": [94, 95, 117, 118, 142, 143, 176, 178, 180], "independ": [94, 95, 142, 143, 157, 162, 164, 170, 178, 183, 1809], "highest": [94, 95, 142, 143], "low": [94, 95, 142, 143, 160, 172, 176, 178, 1807, 1809, 1811, 1812, 1813, 1815, 1817], "half": [94, 95, 142, 143, 176], "int16": [94, 95, 119, 120, 142, 143, 162, 172, 174, 178], "int64": [94, 95, 96, 97, 100, 101, 119, 120, 142, 143, 144, 145, 148, 149, 150, 151, 162, 172, 174, 178], "72": [94, 95, 128, 129], "235": [94, 95], "float16": [94, 95, 142, 143, 162, 174], "49": [94, 95, 134, 135], "807": [94, 95], "42": [94, 95, 109, 110, 128, 129, 140, 141, 142, 143, 178, 183], "random_uniform": [94, 95, 142, 143, 163, 174, 182, 1801], "boundari": [94, 95, 142, 143, 1811], "86": [94, 95, 142, 143], "06": [94, 95, 123, 124, 128, 129, 174, 181], "53": [94, 95, 123, 124], "object": [94, 95, 108, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 126, 127, 142, 143, 160, 170, 172, 174, 180, 183, 1811, 1817], "argmax": [96, 97, 144, 145, 172, 1801], "output_dtyp": [96, 97, 144, 145], "insert": [96, 97, 144, 145], "occurr": [96, 97], "argmin": [96, 97, 144, 145, 1801], "singleton": [96, 97, 102, 103, 104, 105, 134, 135, 144, 145, 150, 151, 152, 153, 178], "accordingli": [96, 97, 102, 103, 104, 105, 134, 135, 144, 145, 150, 151, 152, 153, 167, 172, 178], "argwher": [96, 97, 144, 145, 167], "nonzero": [96, 97, 144, 145], "as_tupl": [96, 97, 144, 145], "fewer": [96, 97, 144, 145], "yield": [96, 97, 161, 167], "unique_al": [98, 99, 146, 147], "unique_count": [98, 99, 146, 147], "field": [98, 99, 146, 147, 194, 1809, 1817], "unique_invers": [98, 99, 146, 147], "inverse_indic": [98, 99, 146, 147], "reconstruct": [98, 99, 146, 147], "unique_valu": [98, 99, 146, 147], "argsort": [100, 101, 148, 149], "descend": [100, 101, 148, 149], "ascend": [100, 101, 148, 149], "stabil": [100, 101, 148, 149, 162, 176], "searchsort": [100, 101, 148, 149], "sorter": [100, 101, 148, 149], "ret_dtyp": [100, 101, 148, 149], "cumprod": [102, 103, 150, 151, 172, 183], "cumul": [102, 103, 150, 151, 194], "exclud": [102, 103, 150, 151, 164, 178], "120": [102, 103, 108, 113, 114, 150, 151], "cumsum": [102, 103, 150, 151, 162, 1801], "einsum": [102, 103, 150, 151], "equat": [102, 103, 125, 150, 151, 1811], "contract": [102, 103], "operand": [102, 103, 160, 165, 172], "seq": [102, 103], "ij": [102, 103], "jk": [102, 103], "ik": [102, 103], "66": [102, 103, 126, 127, 128, 129], "104": [102, 103], "126": [102, 103], "510": [102, 103], "arithmet": [102, 103, 150, 151, 172], "x_i": [102, 103, 123, 124, 165], "propag": [102, 103], "04999995": [102, 103], "0999999": [102, 103], "freedom": [102, 103, 150, 151, 159], "adjust": [102, 103, 150, 151], "constitut": [102, 103, 150, 151, 169, 178, 1812], "commonli": [102, 103, 150, 151, 166, 169], "8164966": [102, 103], "var": [102, 103, 150, 151, 154, 155, 164, 178], "varianc": [102, 103, 150, 151], "unbias": [102, 103, 150, 151], "6666665": [102, 103, 181], "667": [102, 103, 126, 127], "AND": [104, 105, 152, 153], "backward": [104, 105, 152, 153, 195], "add_ivy_array_instance_method": 106, "cl": [106, 107, 154, 155], "to_ignor": [106, 107, 154, 155], "loop": [106, 107, 154, 155, 159, 167, 195], "_wrap_funct": [106, 107, 154, 155, 169, 170], "toi": [106, 107, 154, 155], "arrayexampl": [106, 107], "hasattr": [106, 107, 154, 155], "dict_in": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "queue": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 181], "queue_load_s": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "container_combine_method": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "list_join": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "queue_timeout": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "print_limit": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "key_length_limit": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "print_ind": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "print_line_spac": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "ivyh": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "default_key_color": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "keyword_color_dict": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "rebuild_child_contain": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "types_to_iteratively_nest": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "alphabetical_kei": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "containerwithactiv": [108, 109, 113, 114], "containerwithconvers": [108, 113, 114, 115], "containerwithcr": [108, 113, 114, 117], "containerwithdatatyp": [108, 113, 114, 119], "containerwithdevic": [108, 113, 114, 121], "containerwithelementwis": [108, 113, 114, 123, 160], "containerwithgener": [108, 113, 114, 126], "containerwithgradi": [108, 113, 114, 128], "containerwithimag": [108, 113, 114, 130], "containerwithlay": [108, 113, 114, 132], "containerwithlinearalgebra": [108, 113, 114, 134], "containerwithloss": [108, 113, 114, 136], "containerwithnorm": [108, 113, 114, 140], "containerwithrandom": [108, 113, 114, 142], "containerwithsearch": [108, 113, 114, 144], "containerwithset": [108, 113, 114, 146], "containerwithsort": [108, 113, 114, 148], "containerwithstatist": [108, 113, 114, 150], "containerwithutil": [108, 113, 114, 152], "containerwithactivationexperiment": [108, 113, 114, 125], "containerwithconversionexperiment": [108, 113, 114, 125], "containerwithcreationexperiment": [108, 113, 114, 125], "containerwithdata_typeexperiment": [108, 113, 114, 125], "containerwithdeviceexperiment": [108, 113, 114, 125], "containerwithelementwiseexperiment": [108, 113, 114, 125], "containerwithgeneralexperiment": [108, 113, 114, 125], "containerwithgradientsexperiment": [108, 113, 114, 125], "containerwithimageexperiment": [108, 113, 114, 125], "containerwithlayersexperiment": [108, 113, 114, 125], "containerwithlinearalgebraexperiment": [108, 113, 114, 125], "containerwithlossesexperiment": [108, 113, 114, 125], "containerwithmanipulationexperiment": [108, 113, 114, 125], "containerwithnormsexperiment": [108, 113, 114, 125], "containerwithrandomexperiment": [108, 113, 114, 125], "containerwithsearchingexperiment": [108, 113, 114, 125], "containerwithsetexperiment": [108, 113, 114, 125], "containerwithsortingexperiment": [108, 113, 114, 125], "containerwithstatisticalexperiment": [108, 113, 114, 125], "containerwithutilityexperiment": [108, 113, 114, 125], "dictionari": [108, 111, 112, 113, 114, 162, 172, 181, 195], "multiprocess": [108, 111, 112, 113, 114, 181, 195], "asynchron": [108, 111, 112, 113, 114, 1811], "arriv": [108, 111, 112, 113, 114, 176], "timeout": [108, 111, 112, 113, 114], "whitespac": [108, 111, 112, 113, 114], "indent": [108, 111, 112, 113, 114, 181], "extra": [108, 111, 112, 113, 114, 158, 162, 164, 170, 172, 173, 176, 178, 1808, 1813], "newlin": [108, 111, 112, 113, 114, 165], "color": [108, 111, 112, 113, 114, 1861, 1862], "map": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 162, 168, 169, 172, 174, 175, 181, 194, 195, 1800, 1812], "termcolor": [108, 111, 112, 113, 114], "constructor": [108, 111, 112, 113, 114, 162, 163, 180], "alphabet": [108, 111, 112, 113, 114], "rshift": [108, 113, 114], "143": [108, 113, 114, 123, 124, 164], "containerbas": [109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160], "key_chain": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "to_appli": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "prune_unappli": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "map_sequ": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "formul": [109, 110], "chain": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 172, 182, 183, 195, 1811], "prune": [109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "slope": [109, 110], "leaki": [109, 110], "371": [109, 110], "rectifi": [109, 110], "40000001": [109, 110], "revert": [109, 110], "535": [109, 110], "948": [109, 110], "static_gelu": [109, 110], "static_leaky_relu": [109, 110], "static_log_softmax": [109, 110], "static_relu": [109, 110], "static_sigmoid": [109, 110], "static_softmax": [109, 110], "static_softplu": [109, 110], "__getitem__": [111, 112, 160], "queri": [111, 112, 160, 162, 180, 1811], "slice": [111, 112, 126, 127, 1811], "__setitem__": [111, 112, 158, 160, 180], "all_fals": [111, 112], "assert_is_bool": [111, 112], "assert": [111, 112, 156, 157, 167, 172, 174, 175, 180, 181], "all_key_chain": [111, 112], "include_empti": [111, 112], "all_tru": [111, 112, 160, 181], "as_bool": [111, 112], "assert_contains_sub_contain": [111, 112], "sub_cont": [111, 112], "assert_contains_sub_structur": [111, 112], "check_shap": [111, 112], "assert_ident": [111, 112], "check_typ": [111, 112], "same_arrai": [111, 112, 181], "arrays_equ": [111, 112], "assert_identical_structur": [111, 112], "at_key_chain": [111, 112], "ignore_key_error": [111, 112], "ignore_non": [111, 112], "at_kei": [111, 112], "ignor": [111, 112, 161, 164, 174, 195, 1817], "substr": [111, 112], "duplic": [111, 112, 159, 165, 167, 170, 173, 182, 1817], "container_rightmost": [111, 112], "common_key_chain": [111, 112, 160], "cont_inplace_upd": [111, 112], "contains_sub_contain": [111, 112], "contains_sub_structur": [111, 112], "create_if_abs": [111, 112], "noth": [111, 112, 176, 1817], "cutoff_at_depth": [111, 112], "depth_cutoff": [111, 112], "cutoff_at_height": [111, 112], "height_cutoff": [111, 112], "deep_copi": [111, 112, 181], "intern": [111, 112, 158, 160, 163, 165, 171], "dev_str": [111, 112], "diff_kei": [111, 112], "detect_key_diff": [111, 112], "detect_value_diff": [111, 112], "detect_shape_diff": [111, 112], "treat": [111, 112, 174, 179, 183], "container0": [111, 112], "duplicate_array_keychain": [111, 112], "find_sub_contain": [111, 112], "sub_cont_to_find": [111, 112], "exsit": [111, 112], "find_sub_structur": [111, 112], "sub_struc_to_find": [111, 112], "flatten_key_chain": [111, 112, 181], "__": [111, 112, 164, 181], "above_height": [111, 112, 181], "below_depth": [111, 112, 181], "format_key_chain": [111, 112], "format_fn": [111, 112], "string": [111, 112, 159, 162, 163, 166, 167, 178, 181], "from_disk_as_hdf5": [111, 112, 181], "h5_obj_or_filepath": [111, 112], "slice_obj": [111, 112], "load": [111, 112, 195, 1810, 1817], "disk": [111, 112, 181, 1810], "h5py": [111, 112], "hdf5": [111, 112, 181], "h5": [111, 112], "from_disk_as_json": [111, 112, 181], "json_filepath": [111, 112], "from_disk_as_pickl": [111, 112, 181], "pickle_filepath": [111, 112], "pickl": [111, 112, 160, 181], "from_flat_list": [111, 112], "flat_list": [111, 112], "flat": [111, 112], "h5_file_s": [111, 112], "handle_inplac": [111, 112], "prime": [111, 112], "overwritten": [111, 112, 158, 159], "has_kei": [111, 112], "query_kei": [111, 112], "somewher": [111, 112], "has_key_chain": [111, 112], "identical_array_shap": [111, 112], "identical_config": [111, 112], "identical_structur": [111, 112], "if_exist": [111, 112], "key_chains_contain": [111, 112], "sub_str": [111, 112], "list_stack": [111, 112, 181], "map_cont": [111, 112], "include_self": [111, 112], "possibi": [111, 112], "max_depth": [111, 112], "multi_map": [111, 112, 160], "map_nest": [111, 112], "leftmost": [111, 112], "multi_map_in_static_method": [111, 112, 160], "fn_name": [111, 112, 159, 173, 174], "num_arrai": [111, 112, 173, 174], "overwrite_at_key_chain": [111, 112], "target_dict": [111, 112], "return_dict": [111, 112], "prune_empti": [111, 112], "keep_non": [111, 112], "prune_key_chain": [111, 112], "key1": [111, 112, 182], "key2": [111, 112], "key3": [111, 112], "prune_key_from_key_chain": [111, 112], "prune_kei": [111, 112], "prune_keys_from_key_chain": [111, 112], "remove_key_length_limit": [111, 112], "remove_print_limit": [111, 112], "reshape_lik": [111, 112], "leading_shap": [111, 112], "return_cont": [111, 112], "restructur": [111, 112], "keep_orig": [111, 112], "restructure_key_chain": [111, 112], "keychain_map": [111, 112], "set_at_key_chain": [111, 112], "set_at_kei": [111, 112], "attribut": [111, 112, 160, 162, 165, 170, 171, 179, 180, 181, 182], "shared_shap": [111, 112], "show_sub_contain": [111, 112], "sub_cont_or_keychain": [111, 112], "shuffle_h5_fil": [111, 112], "seed_valu": [111, 112], "dataset": [111, 112, 181, 193, 1801], "size_ordered_arrai": [111, 112], "keychain": [111, 112, 125], "slice_kei": [111, 112], "key_slic": [111, 112], "all_depth": [111, 112], "slice_via_kei": [111, 112], "sort_by_kei": [111, 112], "split_cont": [111, 112], "constitu": [111, 112, 183], "structural_diff": [111, 112], "to_dict": [111, 112], "to_disk_as_hdf5": [111, 112, 181], "starting_index": [111, 112], "max_batch_s": [111, 112], "to_disk_as_json": [111, 112, 181], "to_disk_as_pickl": [111, 112, 181], "to_flat_list": [111, 112], "to_iter": [111, 112, 160], "leaf_keys_onli": [111, 112], "to_iterator_kei": [111, 112], "to_iterator_valu": [111, 112], "to_json": [111, 112], "to_nested_list": [111, 112], "to_raw": [111, 112], "raw": [111, 112, 165, 1812], "trim_kei": [111, 112], "max_length": [111, 112], "trim": [111, 112], "try_kc": [111, 112], "tri": [111, 112], "concatten": [111, 112], "unstack_cont": [111, 112], "dim_siz": [111, 112], "update_config": [111, 112], "with_default_key_color": [111, 112], "with_entries_as_list": [111, 112], "with_ivy_backend": [111, 112], "ivy_backend": [111, 112], "with_key_length_limit": [111, 112, 181], "with_print_ind": [111, 112, 181], "with_print_limit": [111, 112, 181], "with_print_line_spac": [111, 112], "static_to_ivi": [115, 116], "static_to_n": [115, 116], "2324": [117, 118], "234": [117, 118, 123, 124], "123": [117, 118, 174], "static_arang": [117, 118], "static_asarrai": [117, 118], "static_empty_lik": [117, 118], "static_ey": [117, 118], "n_row": [117, 118, 125], "n_col": [117, 118, 125], "static_from_dlpack": [117, 118], "static_full_lik": [117, 118], "static_linspac": [117, 118], "endpoint": [117, 118, 168], "static_logspac": [117, 118], "static_meshgrid": [117, 118], "static_native_arrai": [117, 118], "static_one_hot": [117, 118], "static_on": [117, 118], "static_ones_lik": [117, 118], "static_tril": [117, 118], "static_triu": [117, 118], "static_zero": [117, 118], "static_zeros_lik": [117, 118], "718": [119, 120, 123, 124], "618": [119, 120, 123, 124], "broadcats": [119, 120], "1800": [119, 120], "32768": [119, 120], "32767": [119, 120], "2147483648": [119, 120], "2147483647": [119, 120], "static_astyp": [119, 120], "static_broadcast_arrai": [119, 120], "And": [119, 120, 174], "static_broadcast_to": [119, 120], "static_can_cast": [119, 120], "from_": [119, 120], "static_default_float_dtyp": [119, 120], "float_dtyp": [119, 120], "static_dtyp": [119, 120], "static_finfo": [119, 120], "static_function_supported_dtyp": [119, 120], "fn": [119, 120, 166, 172, 178], "static_function_unsupported_dtyp": [119, 120], "static_iinfo": [119, 120], "static_is_bool_dtyp": [119, 120], "dtype_in": [119, 120], "static_is_float_dtyp": [119, 120], "static_is_int_dtyp": [119, 120], "static_is_uint_dtyp": [119, 120], "static_result_typ": [119, 120], "static_dev": [121, 122], "static_to_devic": [121, 122], "__dlpack__": [121, 122], "caveat": [121, 122], "portabl": [121, 122, 1801, 1809], "524": [123, 124], "644": [123, 124, 182], "305": [123, 124, 132, 133], "915": [123, 124], "29": [123, 124, 126, 127, 128, 129, 142, 143], "983": [123, 124], "75": [123, 124, 126, 127, 132, 133, 142, 143], "978": [123, 124], "696": [123, 124, 142, 143], "993": [123, 124], "203": [123, 124, 140, 141], "34": [123, 124, 125, 126, 127, 142, 143], "52": [123, 124, 126, 127, 128, 129, 142, 143], "351": [123, 124], "00613": [123, 124], "0154": [123, 124], "0262": [123, 124], "873": [123, 124], "333": [123, 124], "thefunct": [123, 124], "649": [123, 124], "220": [123, 124], "959": [123, 124], "865": [123, 124], "metho": [123, 124], "999999999999": [123, 124], "7j": [123, 124], "3j": [123, 124], "0j": [123, 124], "898": [123, 124], "0414": [123, 124], "956": [123, 124], "65": [123, 124, 128, 129, 142, 143], "2860": [123, 124], "413": [123, 124], "recirpoc": [123, 124], "300": [123, 124, 126, 127, 174], "527": [123, 124], "301": [123, 124], "757": [123, 124], "279": [123, 124], "835": [123, 124], "347": [123, 124], "721": [123, 124], "static_ab": [123, 124], "static_aco": [123, 124], "static_acosh": [123, 124], "static_add": [123, 124, 160, 164, 165], "static_asin": [123, 124], "412": [123, 124, 132, 133], "201": [123, 124, 125], "static_asinh": [123, 124], "static_atan": [123, 124], "static_atan2": [123, 124], "static_atanh": [123, 124], "static_bitwise_and": [123, 124], "static_bitwise_invert": [123, 124], "static_bitwise_left_shift": [123, 124], "static_bitwise_or": [123, 124], "static_bitwise_right_shift": [123, 124], "static_bitwise_xor": [123, 124], "static_ceil": [123, 124], "static_co": [123, 124], "static_cosh": [123, 124], "static_deg2rad": [123, 124], "static_divid": [123, 124], "static_equ": [123, 124], "static_erf": [123, 124], "static_exp": [123, 124], "static_expm1": [123, 124], "areal": [123, 124], "static_floor": [123, 124], "static_floor_divid": [123, 124], "static_great": [123, 124], "static_greater_equ": [123, 124], "static_isfinit": [123, 124], "static_isinf": [123, 124], "static_isnan": [123, 124], "static_isr": [123, 124], "23j": [123, 124], "9j": [123, 124], "static_less": [123, 124], "static_less_equ": [123, 124], "static_log": [123, 124], "static_log10": [123, 124], "static_log1p": [123, 124], "static_log2": [123, 124], "static_logaddexp": [123, 124], "static_logical_and": [123, 124], "static_logical_not": [123, 124], "static_logical_or": [123, 124], "static_logical_xor": [123, 124], "static_maximum": [123, 124], "static_minimum": [123, 124], "static_multipli": [123, 124], "static_neg": [123, 124], "static_not_equ": [123, 124], "static_posit": [123, 124], "static_pow": [123, 124], "static_rad2deg": [123, 124], "5160": [123, 124], "10300": [123, 124], "15500": [123, 124], "20600": [123, 124], "static_reciproc": [123, 124], "static_remaind": [123, 124], "static_round": [123, 124], "thevfunct": [123, 124], "static_sign": [123, 124], "static_sin": [123, 124], "static_sinh": [123, 124], "static_sqrt": [123, 124], "static_squar": [123, 124], "static_subtract": [123, 124], "static_tan": [123, 124, 160, 164], "static_tanh": [123, 124], "995": [123, 124], "9999": [123, 124], "static_trapz": [123, 124], "static_trunc": [123, 124], "static_trunc_divid": [123, 124], "hamming_window": 125, "coeffici": 125, "ham": 125, "8000": 125, "2000": 125, "4180": 125, "8180": 125, "hann_window": 125, "hann": 125, "7500": 125, "3455": 125, "9045": 125, "kaiser_bessel_derived_window": 125, "spectral": 125, "analysi": [125, 1811, 1812], "kaiser": 125, "70710677": 125, "18493208": 125, "9827513": 125, "kaiser_window": 125, "static_kaiser_window": 125, "2049": 125, "8712": 125, "0367": 125, "7753": 125, "static_hamming_window": 125, "static_hann_window": 125, "window_length": 125, "static_hann": 125, "static_kaiser_bessel_derived_window": 125, "static_triu_indic": 125, "static_vorbis_window": 125, "vorbis_window": 125, "vorbi": 125, "38268343": 125, "92387953": 125, "14943586": 125, "51644717": 125, "85631905": 125, "98877142": 125, "triu_indic": 125, "0003": 125, "0006": 125, "1080": 125, "1550": 125, "130": 125, "08746284": 125, "32192809": 125, "0707": 125, "0579": 125, "static_allclos": 125, "static_count_nonzero": 125, "static_exp2": 125, "static_fix": 125, "static_float_pow": 125, "static_fmax": 125, "static_fmod": 125, "static_gcd": 125, "static_isclos": 125, "static_isneginf": 125, "static_isposinf": 125, "static_lcm": 125, "static_logaddexp2": 125, "static_nan_to_num": 125, "static_nansum": 125, "static_nextaft": 125, "static_signbit": 125, "static_sinc": 125, "636": 125, "090": 125, "070": 125, "057": 125, "static_zeta": 125, "0244": 125, "static_isin": 125, "673": 125, "0507": 125, "static_avg_pool1d": 125, "static_avg_pool2d": 125, "static_avg_pool3d": 125, "static_dct": 125, "132": 125, "242": 125, "253": 125, "515": 125, "467": 125, "static_max_pool1d": 125, "static_max_pool2d": 125, "max_pool2dd": 125, "static_max_pool3d": 125, "450": 125, "static_diagflat": 125, "static_kron": 125, "kroneck": 125, "atleast": 125, "1d": 125, "ary1": 125, "ary2": 125, "2d": [125, 172], "3d": [125, 194], "30192195": 125, "static_atleast_1d": 125, "static_atleast_2d": 125, "static_atleast_3d": 125, "static_dsplit": 125, "static_dstack": 125, "static_flatten": 125, "static_fliplr": 125, "static_flipud": 125, "static_heavisid": 125, "static_hsplit": 125, "static_vsplit": 125, "static_hstack": 125, "static_i0": 125, "static_moveaxi": 125, "static_pad": 125, "static_rot90": 125, "static_take_along_axi": 125, "static_top_k": 125, "static_vstack": 125, "43643127": 125, "32325703": 125, "24031169": 125, "34251311": 125, "31692529": 125, "3405616": 125, "5319725": 125, "22458365": 125, "24344385": 125, "26588406": 125, "61075421": 125, "12336174": 125, "51142915": 125, "25041268": 125, "23815817": 125, "64042903": 125, "25763214": 125, "10193883": 125, "31624692": 125, "46567987": 125, "21807321": 125, "37677699": 125, "39914594": 125, "22407707": 125, "static_dirichlet": 125, "static_msort": 125, "static_median": 125, "static_nanmean": 125, "static_unravel_index": 125, "static_all_equ": [126, 127], "833": [126, 127], "200": [126, 127, 181], "400": [126, 127], "500": [126, 127], "600": [126, 127], "700": [126, 127], "static_assert_supports_inplac": [126, 127], "static_clip_matrix_norm": [126, 127], "849": [126, 127], "static_clip_vector_norm": [126, 127], "static_einops_rearrang": [126, 127], "static_einops_reduc": [126, 127], "93": [126, 127, 142, 143], "static_einops_repeat": [126, 127], "static_fourier_encod": [126, 127], "static_gath": [126, 127], "static_gather_nd": [126, 127], "static_get_num_dim": [126, 127], "static_has_nan": [126, 127], "leafwis": [126, 127], "static_inplace_decr": [126, 127], "static_inplace_incr": [126, 127], "static_inplace_upd": [126, 127], "static_is_arrai": [126, 127], "static_is_ivy_arrai": [126, 127], "static_is_ivy_contain": [126, 127], "static_is_native_arrai": [126, 127], "static_scatter_flat": [126, 127], "ref": [126, 127, 134, 135, 165], "static_scatter_nd": [126, 127], "static_stable_divid": [126, 127], "22222222": [126, 127], "11111111": [126, 127], "857": [126, 127], "444": [126, 127], "static_stable_pow": [126, 127], "static_supports_inplace_upd": [126, 127], "static_to_list": [126, 127], "static_to_numpi": [126, 127], "static_to_scalar": [126, 127], "static_value_is_nan": [126, 127], "452": [126, 127], "425": [126, 127], "87": [128, 129], "976": [128, 129], "49e": [128, 129], "74e": [128, 129], "95e": [128, 129], "024": [128, 129], "096": [128, 129], "216": [128, 129, 134, 135], "384": [128, 129], "626": [128, 129], "en": [128, 129], "wikipedia": [128, 129], "wiki": [128, 129], "stochastic_gradient_desc": [128, 129], "w_new": [128, 129], "88": [128, 129, 142, 143], "708": [128, 129], "445": [128, 129], "6e": [128, 129], "00036": [128, 129], "00016": [128, 129], "00049": [128, 129], "layerwis": [128, 129], "static_stop_gradi": [128, 129], "ey": [132, 133, 176, 183], "conv2d_transpos": [132, 133], "inp": [132, 133], "278": [132, 133], "105": [132, 133], "352": [132, 133], "195": [132, 133], "static_conv1d": [132, 133], "static_conv1d_transpos": [132, 133], "static_conv2d": [132, 133], "static_conv2d_transpos": [132, 133], "static_conv3d": [132, 133], "static_conv3d_transpos": [132, 133], "static_depthwise_conv2d": [132, 133], "static_dropout": [132, 133], "static_dropout1d": [132, 133], "static_linear": [132, 133], "static_lstm_upd": [132, 133], "static_multi_head_attent": [132, 133], "static_scaled_dot_product_attent": [132, 133], "73": [134, 135, 174], "577": [134, 135], "707": [134, 135], "matrix_pow": [134, 135], "pseudo": [134, 135], "static_choleski": [134, 135], "static_rol": [134, 135, 138, 139, 160, 164], "static_cross": [134, 135], "static_det": [134, 135], "static_diag": [134, 135], "static_diagon": [134, 135], "static_eigh": [134, 135], "static_eigvalsh": [134, 135], "51572949": [134, 135], "17091519": [134, 135], "3448143": [134, 135], "88178420e": [134, 135], "35898387e": [134, 135], "46410179e": [134, 135], "00": [134, 135, 174], "static_inn": [134, 135], "static_inv": [134, 135], "static_matmul": [134, 135], "matul": [134, 135], "static_matrix_norm": [134, 135], "deimens": [134, 135], "static_matrix_pow": [134, 135], "static_matrix_rank": [134, 135], "static_matrix_transpos": [134, 135], "static_out": [134, 135], "static_pinv": [134, 135], "static_qr": [134, 135], "static_slogdet": [134, 135], "static_solv": [134, 135], "static_svd": [134, 135], "static_svdv": [134, 135], "static_tensordot": [134, 135], "static_trac": [134, 135], "static_vand": [134, 135], "343": [134, 135], "512": [134, 135], "729": [134, 135, 182], "static_vecdot": [134, 135], "static_vector_norm": [134, 135], "mathemat": [134, 135, 162, 172, 176, 1811, 1817], "l1": [134, 135, 160, 181], "manhattan": [134, 135], "l2": [134, 135, 160], "euclidean": [134, 135], "static_vector_to_skew_symmetric_matrix": [134, 135], "511": [136, 137], "5108256": [136, 137], "609438": [136, 137], "static_binary_cross_entropi": [136, 137], "static_cross_entropi": [136, 137], "20397282": [136, 137], "83258148": [136, 137], "60943794": [136, 137], "static_sparse_cross_entropi": [136, 137], "static_stack": [138, 139], "static_clip": [138, 139], "static_concat": [138, 139], "static_constant_pad": [138, 139], "static_expand_dim": [138, 139], "container_axi": [138, 139], "static_flip": [138, 139], "static_permute_dim": [138, 139], "static_repeat": [138, 139], "static_reshap": [138, 139], "positivclip": [138, 139], "static_split": [138, 139], "static_squeez": [138, 139], "static_swapax": [138, 139], "static_til": [138, 139], "static_unstack": [138, 139], "static_zero_pad": [138, 139], "classivi": [138, 139, 146, 147], "342": [140, 141], "0427": [140, 141], "299": [140, 141], "241": [140, 141], "431": [142, 143], "68": [142, 143], "83": [142, 143], "274": [142, 143], "91": [142, 143], "static_beta": [142, 143], "static_multinomi": [142, 143], "static_randint": [142, 143], "static_random_norm": [142, 143], "651": [142, 143], "static_random_uniform": [142, 143], "481": [142, 143], "0999": [142, 143], "static_shuffl": [142, 143], "static_argmax": [144, 145], "static_argmin": [144, 145], "static_argwher": [144, 145], "static_nonzero": [144, 145], "static_wher": [144, 145], "static_unique_al": [146, 147], "static_unique_count": [146, 147], "static_unique_invers": [146, 147], "static_unique_valu": [146, 147], "static_argsort": [148, 149], "static_searchsort": [148, 149], "static_sort": [148, 149], "60000002": [150, 151], "10000002": [150, 151], "cotain": [150, 151], "11000001": [150, 151], "23100001": [150, 151], "30800003": [150, 151], "static_cumprod": [150, 151], "static_cumsum": [150, 151], "static_sum": [150, 151], "static_var": [150, 151], "12666667": [150, 151], "11555555": [150, 151], "respectv": [150, 151], "81649649": [150, 151], "94280904": [150, 151], "509902": [150, 151], "2472192": [150, 151], "44948983": [150, 151], "41421354": [150, 151], "contian": [150, 151], "6666667": [150, 151], "static_al": [152, 153], "static_ani": [152, 153], "add_ivy_container_instance_method": 154, "containerexampl": [154, 155], "who": [156, 177, 195, 1811, 1813], "hood": [156, 160, 164, 169, 172, 174, 176, 177, 178, 181, 183, 1818], "weed": [156, 177], "tour": 156, "primari": [156, 159, 162, 171, 172, 174, 176, 195, 1800], "superset": [156, 195], "goe": [156, 176], "dynam": [156, 162, 163, 171, 172, 178, 1811, 1815], "runtim": [156, 174, 176, 1811], "borrow": 156, "conjunct": 157, "establish": [157, 1813], "2020": [157, 1811], "group": [157, 160, 169, 172, 173, 1807, 1810, 1816], "intend": [157, 168, 1809, 1811, 1815, 1816], "popular": [157, 1811], "sens": [157, 164, 172, 180], "unconnect": 157, "decis": [157, 160, 162, 172, 176, 178, 180, 1811], "initialis": [157, 174], "checkout": [157, 174], "everytim": [157, 162], "init": [157, 183], "thoroughli": 157, "ci": [157, 162, 167, 174, 195], "test_linalg": 157, "test_set_funct": 157, "test_signatur": 157, "excess": [157, 159, 164], "explicitli": [157, 158, 159, 160, 162, 165, 166, 169, 170, 171, 174, 178, 195, 1811], "array_modul": 157, "set_backend": [157, 159, 162, 169, 170, 178, 180, 183, 1801], "vv": 157, "test_manipulation_funct": 157, "test_concat": [157, 174], "typic": [157, 169, 1810, 1818], "nb": 157, "liber": 157, "bodi": [157, 174], "decor": [157, 160, 162, 163, 169, 170, 171, 172, 173], "fortun": 157, "falsifi": [157, 174], "______________________": 157, "test_remaind": 157, "_______________________": 157, "test_operators_and_elementwise_funct": 157, "1264": 157, "st": [157, 173, 174], "1277": 157, "binary_param_assert_against_refimpl": 157, "ctx": 157, "mod": 157, "620": 157, "binary_assert_against_refimpl": 157, "324": 157, "scalar_o": 157, "assertionerror": [157, 166, 174], "17304064": 157, "binaryparamcontext": 157, "reproduc": 157, "temporarili": [157, 175], "reproduce_failur": [157, 174], "axic42baaowcnp": 157, "rumwmabaear0": 157, "parametr": [157, 174, 1811], "make_binary_param": 157, "dh": 157, "numeric_dtyp": 157, "left_strat": 157, "left_sym": 157, "right_strat": 157, "right_sym": 157, "right_is_scalar": 157, "xp": 157, "binary_param_assert_dtyp": 157, "binary_param_assert_shap": 157, "led": [157, 1813], "unexpectedli": 157, "discrep": [157, 173], "sync": 157, "varieti": [157, 161, 162, 163, 174, 1807, 1809, 1813, 1814, 1817, 1818], "known": [157, 162, 172, 174], "test_asarray_arrai": 157, "test_floor_divid": 157, "health": 157, "test_iop": 157, "__imod__": 157, "x1_i": 157, "isequ": 157, "test_matrix_norm": 157, "alter": 157, "tweak": 157, "array_api_methods_to_test": 157, "identifi": [157, 161, 174, 176], "202": 157, "test_trac": 157, "latter": [157, 159, 162, 165, 172], "hand": [157, 162, 169, 174, 195], "scheme": [157, 182, 1811], "edg": [157, 174, 1801, 1811, 1813, 1817], "test_special_cas": 157, "__ipow__": 157, "is_integ": 157, "revisit": [157, 168], "tf": [158, 162, 163, 168, 171, 172, 174, 175, 176, 178, 183, 195, 1800, 1801, 1811], "xla_extens": [158, 162, 163, 168, 175, 178, 180], "devicearrai": [158, 173, 178, 180], "wrapper": [158, 160, 162, 170, 171, 172, 180, 1800, 1807, 1811], "_data": [158, 172, 180], "meta": [158, 175, 1811], "organiz": [158, 160, 172], "inherit": [158, 160, 166, 180, 195, 1800], "bear": [158, 160, 162, 172], "necessarili": [158, 160], "although": [158, 160, 172, 176, 1809, 1811], "underpin": [158, 160, 178], "programmat": [158, 160, 1812], "backup": [158, 160], "accident": [158, 160, 172], "readabl": [158, 160, 166, 168, 174, 175, 180, 181], "absent": [158, 160], "perk": [158, 160], "auto": [158, 160, 181], "__mul__": [158, 160, 164, 168, 176, 180], "__truediv__": [158, 160, 164], "throw": [158, 162, 166, 180, 1811], "imposs": 158, "inputs_to_native_arrai": [158, 170], "outputs_to_ivy_arrai": [158, 162, 163, 168, 170], "firstli": [158, 162, 164, 165, 166, 169, 170, 171, 176, 181, 1807, 1817], "anywai": [158, 170, 172], "secondli": [158, 162], "permit": [158, 168, 172, 174, 176], "dictat": [158, 164, 168, 171], "implicit_backend": [159, 178], "__dict__": [159, 178], "ivy_original_dict": [159, 178], "unmodifi": [159, 162], "get_backend": [159, 169], "opt": [159, 162, 171, 174, 175, 176], "unset_backend": 159, "unset": [159, 178], "fallback": 159, "backend_handl": [159, 178, 1801], "requires_grad": [159, 173], "memory_format": 159, "preserve_format": 159, "weren": 159, "break": [159, 162, 167, 168, 175, 195, 1801], "Not": [159, 173, 181, 182, 195], "vast": [159, 162, 1811], "minor": [159, 176, 195], "fn_name_v_1p12_and_abov": 159, "similarli": [159, 162, 176, 180, 1817], "fn_name_v_1p01_to_1p1": 159, "vari": [160, 164, 172, 174, 180], "five": [160, 181], "recap": [160, 164, 182], "arbitrarili": [160, 170, 181], "__repr__": 160, "control": [160, 162, 171, 172, 176, 180, 181, 194, 1800, 1811, 1817], "__getattr__": 160, "__setattr__": 160, "__contains__": 160, "__getstate__": 160, "__setstate__": 160, "unpickl": 160, "num_dim": [160, 183], "__len__": 160, "restrict": [160, 172, 178, 1808], "enforc": [160, 180], "extern": [160, 168, 172, 174, 175], "flexibl": [160, 168, 175, 1811], "c1": 160, "lefthand": 160, "righthand": 160, "handle_nest": [160, 169, 170, 178], "addition": [160, 171, 172, 1817], "counterpart": [160, 170], "behavior": [160, 162, 172, 173, 174, 176, 178, 195, 1808], "presenc": [160, 171], "absenc": [160, 168, 1811], "implicitli": [160, 174, 178], "themselv": [160, 162, 163, 165, 169, 172, 182, 1808, 1817], "log_pr": [160, 169, 171], "intuit": [160, 174, 181, 182, 1807], "chronolog": 160, "concurr": [160, 169, 1811], "had": [160, 171, 178, 1811, 1812], "consum": [160, 168, 173, 174], "sequenti": [160, 182], "But": [160, 165, 170, 171, 183], "flow": [160, 194, 1811, 1812], "compil": [160, 172, 175, 176, 177, 179, 195, 1800, 1801, 1807, 1810, 1811, 1812, 1815, 1818], "implic": 160, "whatsoev": [160, 169, 1800, 1817], "implicit": [160, 165, 172, 174, 178, 1811], "eager": [160, 195, 1811], "children": 160, "shallowest": 160, "deepest": 160, "event": [161, 174], "ex": 161, "review_request": 161, "yml": 161, "dispatch": [161, 195, 1811, 1814], "pair": 161, "test_nn": 161, "yellow": 161, "dot": 161, "queu": 161, "redirect": 161, "book": 161, "procedur": [161, 164], "decoupl": [161, 182], "ran": 161, "badg": 161, "clickabl": 161, "uint8": [162, 174], "uint16": [162, 172, 174, 178], "uint32": [162, 174, 178], "uint64": [162, 174, 178], "bfloat16": [162, 172, 174], "all_dtyp": 162, "all_numeric_dtyp": 162, "all_int_dtyp": 162, "all_float_dtyp": 162, "replic": [162, 164, 172, 176], "four": [162, 164, 168, 169, 174, 176, 181], "thirdli": 162, "native_float32": 162, "importantli": [162, 180, 183, 194], "conveni": [162, 163, 168, 173, 179, 181, 182, 1800, 1817], "set_default_dtyp": [162, 169], "default_dtyp": [162, 169], "arguabl": [162, 163, 172], "promote_typ": 162, "type_promote_arrai": 162, "promote_types_of_input": 162, "jaxarrai": [162, 163, 168, 171, 175, 178], "jnp": [162, 163, 168, 171, 173, 175, 178, 183, 1801], "_handle_0_dim_output": [162, 171], "experiment": [162, 172, 175, 178, 1811], "subtli": [162, 171], "On": [162, 172, 174, 179, 183], "promote_types_frontend_nam": 162, "promote_types_of_frontend_name_input": 162, "frontend_nam": 162, "demonstr": [162, 164, 180], "accuraci": 162, "precis": [162, 172, 176, 1815], "upcast": 162, "instabl": 162, "underflow": 162, "nearli": [162, 168, 170, 1811], "downcast": 162, "footprint": 162, "constraint": 162, "concret": 162, "compound": 162, "infer_dtyp": [162, 163, 168, 170], "default_int_dtyp": 162, "default_float_dtyp": 162, "settabl": [162, 163], "set_default_int_dtyp": 162, "set_default_float_dtyp": 162, "irrelev": [162, 164], "handle_out_argu": [162, 163, 168, 170, 171, 178], "infer_devic": [162, 163, 168, 170], "deleg": [162, 1818], "shape_to_tupl": 162, "with_supported_dtyp": 162, "with_unsupported_dtyp": 162, "unment": 162, "backend_vers": 162, "_cast_for_unary_op": 162, "target_typ": 162, "function_supported_dtyp": 162, "function_unsupported_dtyp": 162, "unsign": [162, 173, 178], "discov": 162, "unsupported_dtyp": 162, "invalid_dtyp": 162, "former": [162, 165, 172], "uint": [162, 173], "lack": [162, 171, 1811, 1818], "rang": [162, 166, 174, 178, 181, 182, 183, 1801, 1811, 1817], "patch": [162, 1811], "achiev": [162, 167, 170, 174, 181, 183, 1800], "subtl": [162, 175, 1817], "offici": [162, 178], "inconsist": [162, 166], "unexpect": 162, "84530": 162, "unwarr": 162, "risk": [162, 1817], "needlessli": 162, "bloat": 162, "undergo": [162, 195], "supported_dtyp": [162, 172], "unsupported_devic": 162, "supported_devic": 162, "slight": [162, 182], "downsid": 162, "coverag": [162, 174], "inflat": 162, "idx": [163, 180], "tpu": [163, 1811, 1814], "get_all_ivy_arrays_on_dev": 163, "aliv": 163, "num_gpu": [163, 174], "total_mem_on_dev": 163, "dev_util": 163, "num_cpu_cor": 163, "default_devic": [163, 166], "outsid": [163, 167, 169, 180, 1816], "dual": 163, "categor": [163, 169, 172], "thrown": [163, 166, 195], "far": [163, 164, 179, 1816, 1817], "set_default_devic": 163, "eight": [164, 177], "func_nam": [164, 165, 169, 172], "static_func_nam": 164, "op_nam": 164, "__r": 164, "combinatori": 164, "variat": [164, 172, 174], "grid": [164, 174, 194], "unus": [164, 167, 171], "okai": [164, 176, 178], "showcas": [164, 194], "meant": 164, "imaginari": 164, "spec": [164, 165], "my_func": [164, 175], "some_flag": 164, "another_flag": 164, "jointli": 164, "x0": 164, "5574077": 164, "1850398": 164, "5463025": 164, "8422884": 164, "91601413": 164, "9647598": 164, "3738229": 164, "1597457": 164, "0963247": 164, "9955841": 164, "3278579": 164, "multi": [164, 177, 195, 1801, 1807, 1809, 1811, 1815], "pars": [164, 195], "satisfi": 164, "asid": [164, 194], "increasingli": 164, "14254655": 164, "1578213": 164, "380515": 164, "trivial": 164, "exlud": 164, "failing_fn_nam": 164, "onlin": [164, 165], "minutest": 164, "suffici": [164, 174], "segment": 164, "fault": [164, 1811], "contrast": [165, 168, 172, 1817], "instanti": 165, "templat": [165, 174, 1801], "array_api": 165, "preview": 165, "render": 165, "incorrectli": 165, "domain": [165, 1809, 1811], "codomain": 165, "needless": [165, 173], "info": [165, 1801], "subset": [165, 168, 172, 174, 178, 1811], "renam": [165, 172], "judgment": 165, "beyond": [165, 172, 1817], "pure": [165, 168, 172, 176, 180, 183, 195, 1811, 1817, 1818], "operator_nam": 165, "succinct": 165, "contstructor": 165, "_forward": [165, 178, 181, 182, 1801], "trainabl": [165, 179, 181, 182], "docst": 165, "ivyexcept": [166, 172], "super": [166, 178, 181, 182, 183], "ivybackendexcept": 166, "_default": 166, "current_backend_str": [166, 178, 180], "_delimit": 166, "indexerror": 166, "ivyerror": 166, "repetit": 166, "caught": 166, "functool": [166, 172, 180], "new_fn": [166, 172], "__name__": 166, "current_backend": [166, 169, 172, 175, 178], "comparison": 166, "error_stack": 166, "axiserror": 166, "bound": [166, 174, 178, 1817], "got": [166, 1801], "elif": [166, 171, 172], "polici": [166, 174, 194], "moreov": 166, "cleaner": [166, 181], "check_less": 166, "allow_equ": 166, "lesser": 166, "set_split_factor": 166, "split_factor": 166, "met": 166, "flake8": 167, "undefin": 167, "statement": [167, 171, 174, 176, 195], "handler": [167, 177, 179, 183, 1800, 1801], "annot": [167, 168], "star": 167, "byte": [167, 1816, 1817], "notimpl": 167, "notimplementederror": 167, "unsuccess": 167, "reformat": 167, "exceed": 167, "black": 167, "disobei": 167, "taken": [167, 172, 175, 183, 1812], "successfulli": 167, "inde": [167, 168, 176, 195, 1809], "adress": 168, "dedic": [168, 180, 182], "to_native_arrays_and_back": [168, 170, 178], "usabl": [168, 175], "sole": [168, 175, 1810, 1811, 1812], "strictli": [168, 171], "linspac": [168, 176, 178, 1801, 1818], "rational": 168, "__div__": [168, 176], "dicat": 168, "futher": 168, "pep": 168, "484": 168, "brittl": 168, "freeli": 168, "technic": [168, 171, 195, 1811, 1813], "original_typ": 168, "cumbersom": 168, "omit": [168, 171, 172], "venn": 169, "diagram": [169, 1817], "light": [169, 172, 195, 1800, 1812, 1817], "array_arg": 169, "cache_fn": 169, "cach": [169, 174], "deal": [169, 173, 195], "modif": [169, 1811], "briefli": [169, 174, 181], "get_all_arrays_on_dev": 169, "nested_map": 169, "index_nest": 169, "inputs_to_ivy_arrai": 170, "heavili": [170, 172, 195], "facilit": 170, "integer_array_to_float": 170, "handle_cmd_line_arg": [170, 173], "as_vari": [170, 173, 174], "with_out": [170, 173, 174], "instance_method": [170, 174], "test_gradi": 170, "topic": [170, 180, 1811], "suffic": [170, 174], "program": [171, 1808, 1809, 1811, 1814, 1815, 1818], "ration": [171, 176], "speak": 171, "x_nativ": 171, "val_n": 171, "_is_vari": 171, "unspecifi": 171, "predominantli": [171, 175, 194], "support_native_out": [171, 178], "math": [171, 172, 183, 1801, 1809], "mx": 171, "nd": 171, "_wrap_fn": 171, "dim0": 171, "dim1": 171, "maxim": [171, 176, 178, 1808, 1809, 1813, 1814, 1815], "third": [171, 195, 1810, 1811, 1817], "leverag": [171, 1809, 1811], "capabl": [171, 174, 176], "input_arrai": 171, "plai": [172, 174, 183, 1811, 1814], "tf_frontend": 172, "lax": [172, 173, 176, 183, 195], "neither": [172, 176], "fn_tree": [172, 173, 174], "wrong": [172, 176], "carefulli": [172, 1809, 1814], "acceler": [172, 1801, 1809, 1813, 1814, 1815, 1816], "algebra": [172, 1809, 1810, 1811, 1814, 1818], "xla": [172, 195, 1800, 1811], "decompos": 172, "dynamic": 172, "extent": 172, "to_ivy_arrays_and_back": [172, 173], "mimic": 172, "arithmetic_oper": 172, "handle_numpy_cast": 172, "same_kind": 172, "subok": [172, 173, 176], "as_ivy_dtyp": 172, "recov": 172, "obtain": 172, "unhandl": 172, "subclass": [172, 176], "trigonometric_funct": 172, "from_zero_dim_arrays_to_float": 172, "raw_op": 172, "tackl": 172, "map_raw_ops_alia": 172, "unnecessari": [172, 176], "output_typ": 172, "kwargs_to_upd": 172, "implemnt": 172, "pointwise_op": 172, "preferred_element_typ": 172, "conv_general_dil": 172, "finer": 172, "nor": [172, 1815], "margin": 172, "fit": [172, 178, 1807, 1808, 1811], "meet": 172, "criteria": 172, "incorpor": [172, 181, 1811], "omiss": 172, "sensibl": 172, "deem": 172, "reserv": 172, "resum": 172, "sort_complex": 172, "stai": 172, "awai": [172, 1809, 1811], "notifi": 172, "awar": 172, "meantim": 172, "possibli": [172, 174, 195], "straight": [172, 174, 180, 1801], "ahead": [172, 1811], "heavi": [172, 173, 176, 1812], "logicaland": 172, "truth": [172, 174], "np_frontend": 172, "radd": 172, "_init_data": 172, "isinst": [172, 174, 175, 182, 183], "_process_str_data": 172, "check_equ": 172, "_shape": [172, 180], "_dtype": [172, 180], "govern": 172, "promote_types_of_": 172, "_input": 172, "promote_types_of_tensorflow_input": 172, "saniti": 172, "func_wrapp": 172, "handle_numpy_casting_speci": 172, "check_elem_in_list": 172, "equiv": 172, "unsaf": 172, "array_type_test": 172, "routin": [172, 176, 195, 1811], "organis": 172, "watch": 172, "youtub": 172, "seri": [172, 174, 1811, 1813], "jump": 173, "knowledg": 173, "test_frontend_funct": 173, "lift": [173, 1812], "get_dtyp": [173, 174], "dtype_and_valu": [173, 174], "num_positional_arg": [173, 174], "get_shap": [173, 174], "np_frontend_help": 173, "nn": [173, 176, 183, 1801, 1812], "test_jax": 173, "test_jax_lax_oper": 173, "dtype_and_x": [173, 174], "available_dtyp": [173, 174], "test_jax_lax_tan": 173, "input_dtyp": [173, 174], "as_variable_flag": 173, "native_array_flag": 173, "test_numpi": 173, "test_mathematical_funct": 173, "test_np_trigonometric_funct": 173, "test_numpy_tan": 173, "handle_where_and_array_bool": 173, "test_tensorflow": 173, "test_math": 173, "test_tensorflow_tan": 173, "test_torch": 173, "test_non_linear_activation_funct": 173, "min_valu": [173, 174], "max_valu": [173, 174], "with_inplac": 173, "test_torch_leaky_relu": 173, "negative_slop": 173, "_fill_valu": 173, "allow_non": [173, 174], "min_num_dim": [173, 174], "max_num_dim": [173, 174], "min_dim_s": [173, 174], "max_dim_s": 173, "test_jax_lax_ful": 173, "test_from_shape_or_valu": 173, "test_numpy_ful": 173, "test_tf_funct": 173, "test_tensorflow_ful": 173, "test_creation_op": 173, "_requires_grad": 173, "test_torch_ful": 173, "accommod": 173, "walkthrough": 173, "torch_frontend": 173, "gt": [173, 178], "comparison_op": 173, "promote_types_of_torch_input": 173, "test_comparison_op": 173, "dtype_and_input": 173, "allow_inf": [173, 174], "shared_dtyp": 173, "test_torch_great": 173, "has_alias": 173, "all_alias": 173, "test_frontend_instance_method": 173, "frontend_class": 173, "test_jax_devicearrai": 173, "test_jax_instance_add": 173, "test_frontend_array_instance_method": 173, "test_ndarrai": 173, "test_numpy_ndarray_add": 173, "test_frontend_method": 173, "input_dtypes_init": 173, "as_variable_flags_init": 173, "num_positional_args_init": 173, "native_array_flags_init": 173, "all_as_kwargs_np_init": 173, "input_dtypes_method": 173, "as_variable_flags_method": 173, "num_positional_args_method": 173, "native_array_flags_method": 173, "all_as_kwargs_np_method": 173, "class_nam": 173, "method_nam": 173, "test_tensor": 173, "test_tensorflow_instance_add": 173, "1e04": 173, "1e06": 173, "allow_infin": 173, "test_torch_instance_add": 173, "somewhat": [173, 195, 1811], "value_test": 173, "dtype_x": 173, "test_jax_special_add": 173, "ret_gt": 173, "flatten_and_to_np": 173, "zip": [173, 178], "ret_from_gt": 173, "ground_truth_backend": 173, "_arrays_idx_n_dtyp": 173, "test_manipul": [173, 174], "surprisingli": 173, "cat": [173, 176, 178, 183], "closest_relevant_group": 173, "strive": [173, 174, 176, 195, 1813], "cycl": 174, "exhaust": [174, 1808, 1817], "fixtur": 174, "hit": [174, 178], "eleg": [174, 1811], "intellig": [174, 176, 1813], "unexplor": 174, "repeatedli": 174, "upload": 174, "artifact": 174, "impli": 174, "bespok": 174, "_array_or_typ": 174, "standalon": [174, 1800, 1807, 1812, 1817, 1818], "test_default_int_dtyp": 174, "clariti": [174, 176, 1811], "print_hypothesis_exampl": 174, "searchstrategi": 174, "custom_strategi": 174, "sampled_from": 174, "randomis": 174, "simplist": 174, "intricaci": 174, "glanc": 174, "stratigi": 174, "one_of": 174, "datum": 174, "pipe": 174, "overload": 174, "shorthand": 174, "suppos": 174, "scaler": 174, "array_or_scal": 174, "len_of_arrai": 174, "test_add": 174, "keywoard": 174, "gradient_test": 174, "test_gpu_is_avail": 174, "requri": 174, "method_tre": 174, "handle_test": 174, "summara": 174, "pretest": 174, "handle_frontend_test": 174, "slighlti": 174, "handle_method": 174, "handle_frontend_method": 174, "pytet": 174, "snippet": 174, "thankfulli": 174, "seamlessli": 174, "encount": 174, "criterion": 174, "array_valu": 174, "valid_ax": 174, "craft": 174, "hoc": 174, "intersect": [174, 194], "44758124e": 174, "308": 174, "11228": 174, "456": 174, "268": 174, "wherev": 174, "dtype_values_axi": 174, "9622": 174, "28136": 174, "6375": 174, "12720": 174, "21354": 174, "900e": 174, "955e": 174, "exclude_min": 174, "large_abs_safety_factor": 174, "safety_factor_scal": 174, "57384": 174, "25687": 174, "248": 174, "array_dtyp": 174, "min_siz": 174, "max_siz": 174, "array_bool": 174, "na": 174, "test_devic": 174, "array_shap": 174, "common_shap": 174, "test_lay": 174, "size_bound": 174, "reshape_shap": 174, "stand": 174, "fashion": 174, "some_sequ": 174, "allow_nan": 174, "allow_subnorm": 174, "get_bound": 174, "arrays_valu": 174, "36418": 174, "213": 174, "21716926": 174, "none_or_list_of_float": 174, "get_prob": 174, "get_mean_std": 174, "103515625e": 174, "099609375": 174, "probabilist": 174, "get_axi": 174, "number_positional_argu": 174, "unreproduc": 174, "test_valu": 174, "enough": [174, 180, 181, 182], "report": 174, "ivy_np": 174, "valid_float_dtyp": 174, "test_demo": 174, "failing_test": 174, "traceback": 174, "file_nam": [174, 175], "shrink": 174, "prescrib": 174, "closest": [174, 176], "scratch": 174, "databas": 174, "therebi": 174, "test_gelu": 174, "test_fil": 174, "brief": 174, "phase": [174, 195, 1811], "notabl": [174, 1811], "verbos": [174, 178, 1801, 1862], "newer": 174, "max_exampl": 174, "impact": [174, 182, 1813], "deadlin": 174, "weird": 174, "systemat": 174, "safeguard": 174, "inabl": 174, "test_result_typ": 174, "9090909090909091": 174, "judgement": 175, "some_namespac": 175, "some_backend": 175, "another_backend": 175, "refactor": 175, "ongo": 175, "op": [175, 178, 195], "cooler": 175, "something_cool": 175, "clean": [175, 176, 178, 179, 181], "_assert_fill_value_and_dtype_are_compat": 175, "_to_devic": 175, "focus": [175, 194, 1809, 1810, 1811, 1817, 1818], "prior": 175, "older": 175, "grow": [175, 1801, 1811], "unbound": 175, "battl": 175, "face": [176, 178, 1811, 1817], "answer": [176, 180, 195], "contradict": 176, "entail": 176, "sacrif": 176, "dimems": 176, "conv": 176, "jacfwd": 176, "jacrev": 176, "banner": 176, "ravel": 176, "surround": 176, "pointwis": 176, "fuse": 176, "tensorrt": 176, "highli": [176, 1811], "expens": 176, "incredibli": [176, 181, 195, 1814], "six": 176, "__gt__": 176, "price": 176, "pai": 176, "intrus": 176, "x_beta": 176, "equip": 176, "deliber": 176, "priorit": 176, "simplif": 176, "allevi": 176, "ineffici": [176, 195, 1811], "fledg": [178, 179], "syntact": [178, 183], "logspac": 178, "construct": [178, 182, 183, 1809, 1811, 1818], "power_seq": 178, "backend_stack": 178, "cprint": [178, 1861], "_determine_backend_from_arg": 178, "importlib": 178, "import_modul": 178, "_backend_dict": 178, "illustr": [178, 194], "un": 178, "unrol": [178, 181], "lstm": [178, 1811], "cell": 178, "hidden": [178, 182], "recurr": [178, 1811, 1815], "timestep": 178, "x_shape": 178, "input_channel": [178, 182], "x_flat": 178, "wi": 178, "wi_x": 178, "wii_x": 178, "wif_x": 178, "wig_x": 178, "wio_x": 178, "wh": 178, "ht": 178, "ct": 178, "hts_list": 178, "wii_xt": 178, "wif_xt": 178, "wig_xt": 178, "wio_xt": 178, "htm1": 178, "ctm1": 178, "wh_htm1": 178, "whi_htm1": 178, "whf_htm1": 178, "whg_htm1": 178, "who_htm1": 178, "ft": 178, "ot": 178, "reliabl": 178, "sacrific": 178, "hear": 178, "virtu": [178, 1808], "pure_ivi": 178, "compile_graph": [178, 183], "pure_torch": 178, "backbon": [178, 181], "_layer": 178, "random_unifrom": 178, "unclean": 178, "wx": 178, "temp": 178, "ivy_func": 178, "emphas": 178, "torchscript": [178, 1800, 1818], "example_input": 178, "static_argnum": 178, "static_argnam": 178, "jit": [178, 195, 1811], "primit": [179, 195, 1809, 1811], "upcom": 179, "hierarch": [179, 181, 182, 1811], "_init": 180, "_size": 180, "mul": 180, "_devic": 180, "_dev_str": 180, "as_ivy_dev": 180, "_pre_repr": 180, "_post_repr": 180, "framework_str": 180, "noinspect": 180, "pypep8nam": 180, "typeerror": 180, "immut": 180, "claim": 180, "truli": 180, "_native_wrapp": 180, "attributeerror": 180, "genuin": 180, "some_method": 180, "rewritten": 180, "__pow__": 180, "strang": 180, "compartment": 180, "public": [180, 1814], "newshap": 180, "new_shap": 180, "tidi": 180, "shorter": 180, "crystal": 180, "ton": 181, "ado": [181, 182], "soup": 181, "walk": [181, 182], "cnt": 181, "combo": 181, "1000": 181, "3333335": 181, "Or": 181, "grad": [181, 182, 183, 1801], "delimit": 181, "autocomplet": 181, "midwai": 181, "agent": 181, "total_spe": 181, "total_height": 181, "total_width": 181, "ag": 181, "tot": 181, "total_": 181, "total_h": 181, "cnt0": 181, "cnt1": 181, "diff_0": 181, "diff_1": 181, "config0": 181, "config1": 181, "decod": 181, "l0": 181, "decoder__l0": 181, "decoder__l1": 181, "encoder__l0": 181, "encoder__l1": 181, "height": 181, "l0__b": 181, "l0__w": 181, "l1__b": 181, "l1__w": 181, "printabl": 181, "obviou": [181, 1811], "foresight": 181, "untidili": 181, "update_ag": 181, "normalize_img": 181, "img": 181, "img_max": 181, "reduce_max": [181, 1801], "img_min": 181, "reduce_min": [181, 1801], "img_rang": 181, "agent_posit": 181, "agent_veloc": 181, "agent_cam_front_rgb": 181, "agent_cam_front_depth": 181, "agent_cam_rear_rgb": 181, "agent_cam_rear_depth": 181, "agent_cam_lidar": 181, "camera": 181, "front_rgb": 181, "front_depth": 181, "rear_rgb": 181, "rear_depth": 181, "lidar": 181, "rgb": 181, "rear": 181, "veloc": 181, "cam": 181, "cam_max": 181, "cam_min": 181, "cam_rang": 181, "Of": [181, 1816, 1817], "perman": 181, "thread": [181, 1811], "pretti": [181, 1817], "straightforward": 181, "dataload": [181, 193, 1801], "_cnt": 181, "img_": 181, "_dataset_s": 181, "_batch_siz": 181, "_count": [181, 182], "__next__": 181, "filenam": 181, "img_fnam": 181, "fname": 181, "loaded_img": 181, "cv2": 181, "imread": 181, "from_numpi": 181, "loader": [181, 195], "batch_slic": 181, "model": [181, 182, 1800, 1801, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1818], "mymodel": [181, 1801], "linear0": [181, 182, 1801], "linear1": [181, 182, 1801], "x_in": [181, 182, 183, 1801], "loss_fn": [181, 182, 183, 1801], "reduce_mean": [181, 182, 183, 1801], "execute_with_gradi": [181, 182, 183, 195, 1801], "0145": 181, "grad_fn": 181, "addbackward0": 181, "_create_vari": 182, "output_channel": 182, "with_bia": 182, "_input_channel": 182, "_output_channel": 182, "_w_shape": 182, "_b_shape": 182, "_with_bia": 182, "396": 182, "764": 182, "872": 182, "211": 182, "439": 182, "nightmar": 182, "overcom": 182, "fc": 182, "v0": 182, "v1": 182, "key0": 182, "linear3": 182, "v2": 182, "counter": 182, "fed": 182, "weight_initi": 182, "glorotuniform": 182, "bias_initi": 182, "_w_init": 182, "_b_init": 182, "create_vari": 182, "var_shap": 182, "fan_out": 182, "fan_in": 182, "fan_mod": 182, "fan_sum": 182, "misnom": 182, "saw": 182, "vanilla": [182, 1811], "compile_on_next_step": 182, "_beta1": 182, "_beta2": 182, "_epsilon": 182, "_mw": 182, "_vw": 182, "_first_pass": 182, "_should_compil": 182, "_step": 182, "new_v": 182, "_lr": 182, "_inplac": 182, "_stop_gradi": 182, "set_stat": 182, "clamp": 183, "clip_by_valu": 183, "captur": [183, 1812], "sparse_funct": 183, "num_class": 183, "new_axi": 183, "_linear": 183, "jax_graph": 183, "to_backend": 183, "to_ivy_modul": 183, "thinli": 183, "whilst": [183, 1800, 1811], "to_haiku_modul": 183, "hk": 183, "loss_fn_t": 183, "without_apply_rng": 183, "rng": 183, "prngkei": 183, "update_rul": 183, "tree_multimap": 183, "mechan": [193, 195, 1801], "robot": [193, 1801], "perfect": 194, "differenti": [194, 1811], "orient": 194, "pose": 194, "euler": 194, "quaternion": 194, "ivy_mech": 194, "target_facing_rotation_matrix": 194, "polar_to_cartesian_coord": 194, "ordin": 194, "warp": 194, "optic": 194, "voxel": 194, "ivy_vis": 194, "coords_to_voxel_grid": 194, "render_pixel_coord": 194, "neural": [194, 1801, 1807, 1809, 1810, 1811, 1815, 1817, 1818], "radianc": 194, "nerf": 194, "trajectori": 194, "motion": 194, "plan": [194, 1801], "mobil": [194, 1811], "sample_spline_path": 194, "rigidmobil": 194, "sample_bodi": 194, "drone": 194, "sample_link": 194, "openai": 194, "swimmer": 194, "reward": 194, "supervis": 194, "reinforc": 194, "door": [194, 195], "cartpol": 194, "mountain_car": 194, "pendulum": 194, "reacher": 194, "learnt": 194, "ture": 194, "ntm": 194, "egospher": 194, "spatial": 194, "esm": 194, "ivy_memori": 194, "egocentr": 194, "room": 194, "inspir": 194, "doubt": 195, "grate": 195, "probe": 195, "remark": 195, "surpris": 195, "lock": 195, "gold": 195, "dex": 195, "ye": 195, "scan": 195, "tricki": [195, 1800], "predictor": 195, "tight": 195, "driver": 195, "schedul": [195, 1811, 1818], "Will": 195, "ast": 195, "cond": 195, "jacobian": [195, 1811], "checkpoint": 195, "autodiff": 195, "shine": 195, "merci": 195, "autograd": 195, "cluster": [195, 1811], "compet": [195, 1811], "paradigm": [195, 1811], "parallelis": 195, "spmd": 195, "mixtur": 195, "expert": 195, "sophist": 195, "depart": 195, "hundr": 195, "thousand": 195, "deepli": [195, 1811], "broadli": [195, 1817], "supplementari": 195, "reusabl": [195, 1809, 1811], "fanci": [195, 1811], "fusion": [195, 1815], "lose": 195, "vmap": [195, 1811], "pmap": 195, "overhead": [195, 1814], "eventu": 195, "supplement": 195, "backdoor": 195, "callback": 195, "record": [195, 1812], "metric": 195, "outsourc": 195, "nail": 1800, "retain": 1800, "funtion": 1800, "asset": 1800, "functiona": 1800, "scientist": 1800, "deploi": [1800, 1809, 1810, 1811, 1813, 1817], "correl": 1800, "analyz": 1800, "ai": [1801, 1809, 1813], "colab": 1801, "interact": [1801, 1810, 1811, 1816], "sharp": 1801, "favorit": 1801, "jax_concat": 1801, "tf_concat": 1801, "np_concat": 1801, "torch_concat": 1801, "get_devic": 1801, "reduce_prod": 1801, "reduce_sum": 1801, "gradient_imag": 1801, "indices_wher": 1801, "bilinear_resampl": 1801, "stack_imag": 1801, "neural_net": 1801, "floormod": 1801, "articl": 1801, "lenton2021ivi": 1801, "inter": 1801, "lenton": 1801, "daniel": 1801, "pardo": 1801, "fabio": 1801, "falck": 1801, "fabian": 1801, "jame": 1801, "stephen": 1801, "clark": 1801, "ronald": 1801, "journal": 1801, "arxiv": 1801, "preprint": 1801, "2102": 1801, "02886": 1801, "conceptu": [1807, 1812], "broken": [1807, 1811], "tracer": 1807, "infrastructur": [1807, 1813, 1814], "vendor": [1807, 1813], "complimentari": [1807, 1817], "acycl": [1807, 1812], "insert_numb": 1808, "insert_t": 1808, "scaffold": [1809, 1817], "heart": 1809, "toolchain": [1809, 1814], "intermedi": [1809, 1810, 1811, 1812, 1817], "ir": [1809, 1812, 1817], "assembli": [1809, 1816, 1817], "idl": 1809, "middl": 1809, "emit": 1809, "gnu": [1809, 1814], "gcc": [1809, 1816], "broader": 1809, "heterogen": 1809, "aid": 1809, "coprocessor": 1809, "programm": [1809, 1816], "gate": 1809, "onednn": 1809, "complementari": [1809, 1817], "sit": [1809, 1812, 1817], "tandem": 1809, "possess": 1809, "underneath": 1809, "export": [1810, 1817], "khrono": [1810, 1816], "appl": 1810, "coremltool": 1810, "albeit": 1810, "promin": 1811, "abbrevi": 1811, "laboratori": 1811, "proprietari": [1811, 1815, 1816], "mathwork": 1811, "commerci": 1811, "1984": 1811, "plot": 1811, "toolbox": 1811, "mupad": 1811, "simulink": 1811, "graphic": [1811, 1815, 1816], "simul": 1811, "embed": 1811, "million": [1811, 1814], "worldwid": 1811, "scienc": [1811, 1813], "econom": 1811, "2001": 1811, "scientif": 1811, "interpol": 1811, "od": 1811, "solver": 1811, "cython": 1811, "friendli": 1811, "2002": 1811, "lua": 1811, "luajit": 1811, "idiap": 1811, "epfl": 1811, "2005": 1811, "numarrai": 1811, "cpython": 1811, "partli": 1811, "multidimension": 1811, "2007": 1811, "classif": 1811, "regress": [1811, 1818], "forest": 1811, "boost": 1811, "dbscan": 1811, "inbuilt": 1811, "esqu": 1811, "aesara": 1811, "2008": 1811, "datafram": 1811, "critic": [1811, 1817], "2012": 1811, "Its": 1811, "polymorph": 1811, "parallel": [1811, 1815, 1816], "mpi": 1811, "openmp": 1811, "glue": 1811, "jaot": 1811, "nasa": 1811, "cern": 1811, "climat": 1811, "allianc": 1811, "influenti": 1811, "2014": 1811, "analyt": [1811, 1813, 1817], "scala": 1811, "ship": 1811, "forgiv": 1811, "decemb": 1811, "2019": [1811, 1814], "announc": 1811, "transit": 1811, "mainten": 1811, "v7": 1811, "meaning": 1811, "2016": 1811, "imper": 1811, "fast": 1811, "amazon": 1811, "traction": 1811, "cognit": [1811, 1818], "toolkit": [1811, 1812, 1818], "grade": 1811, "realiz": 1811, "feed": [1811, 1812], "dnn": 1811, "cnn": 1811, "rnn": 1811, "stochast": 1811, "sgd": 1811, "backpropag": 1811, "succumb": 1811, "came": 1811, "monitor": 1811, "practition": [1811, 1815, 1816, 1817], "hobbyist": 1811, "tremend": 1811, "ecosystem": 1811, "gear": 1811, "batteri": 1811, "zygot": 1811, "jl": 1811, "workload": 1811, "daggerflux": 1811, "frontier": 1811, "hessian": 1811, "2018": 1811, "lightweight": [1811, 1818], "shortcom": 1811, "eas": 1811, "barrier": 1811, "inexperienc": 1811, "underdevelop": 1811, "fanat": 1811, "ounc": 1811, "infanc": 1811, "emerg": 1811, "nich": 1811, "introduct": 1811, "lite": 1811, "enterpris": 1811, "reinvent": [1811, 1813], "inertia": 1811, "haven": 1811, "creator": [1811, 1813], "paszk": 1811, "hi": 1811, "safeti": 1811, "bulk": 1811, "haskel": 1811, "dataflow": 1812, "distil": 1812, "essenc": [1812, 1817], "enclos": 1812, "scope": [1812, 1816], "trace_modul": 1812, "scriptfunct": 1812, "scriptmodul": 1812, "fake": 1812, "proxi": 1812, "site": 1812, "graphmodul": 1812, "travi": 1813, "oliph": 1813, "leader": 1813, "cornerston": 1813, "numba": 1813, "numfocu": 1813, "pydata": 1813, "confer": 1813, "consult": 1813, "servic": 1813, "expertis": 1813, "devop": 1813, "mlop": 1813, "dashboard": 1813, "startup": 1813, "mlir": [1813, 1814, 1817], "Their": 1813, "held": 1813, "privileg": 1813, "presum": 1813, "llvm": [1813, 1816], "founder": 1813, "tvm": [1813, 1817], "sustain": 1813, "empow": 1813, "har": 1813, "burden": 1813, "benchmark": 1813, "convention": 1814, "precompil": 1814, "executor": 1814, "exploit": 1814, "julia": [1814, 1817], "fsf": 1814, "gpl": 1814, "biggest": [1814, 1817], "nvidia": [1815, 1816], "conduct": 1815, "throughput": 1815, "autotun": 1815, "consumpt": 1815, "gpgpu": 1815, "talk": 1816, "classic": 1816, "sycl": 1816, "dpc": 1816, "processor": 1816, "x86": 1816, "oneapi": 1816, "ia": 1816, "aka": 1816, "xeon": 1816, "gen9": 1816, "xe": 1816, "card": 1816, "arria": 1816, "gx": 1816, "fpga": 1816, "tune": [1816, 1817], "lofti": 1817, "ambit": 1817, "realm": 1817, "bedrock": 1817, "flux": 1817, "bite": 1817, "chew": 1817, "eagerpi": 1817, "tensorli": 1817, "thinc": 1817, "neuropod": 1817, "exhibit": 1817, "emploi": 1817, "fx": 1817, "retrain": 1817, "wider": 1817, "closer": 1817, "greatli": 1817, "challeng": 1817, "modular": 1817, "anywher": 1817, "switch": 1818, "theano": 1818, "plaidml": 1818, "partial_svd": 1818, "tucker_mode_dot": 1818, "excel": 1818, "subsystem": 1818}, "objects": {"ivy": [[13, 0, 0, "-", "_version"], [1861, 0, 0, "-", "verbosity"]], "ivy.array": [[60, 0, 0, "-", "activations"], [62, 0, 0, "-", "array"], [64, 0, 0, "-", "conversions"], [69, 0, 0, "-", "creation"], [71, 0, 0, "-", "data_type"], [73, 0, 0, "-", "device"], [75, 0, 0, "-", "elementwise"], [78, 0, 0, "-", "general"], [80, 0, 0, "-", "gradients"], [82, 0, 0, "-", "image"], [84, 0, 0, "-", "layers"], [86, 0, 0, "-", "linear_algebra"], [88, 0, 0, "-", "losses"], [90, 0, 0, "-", "manipulation"], [92, 0, 0, "-", "norms"], [94, 0, 0, "-", "random"], [96, 0, 0, "-", "searching"], [98, 0, 0, "-", "set"], [100, 0, 0, "-", "sorting"], [102, 0, 0, "-", "statistical"], [104, 0, 0, "-", "utility"], [106, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[61, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[61, 2, 1, "", "gelu"], [61, 2, 1, "", "leaky_relu"], [61, 2, 1, "", "log_softmax"], [61, 2, 1, "", "relu"], [61, 2, 1, "", "sigmoid"], [61, 2, 1, "", "softmax"], [61, 2, 1, "", "softplus"]], "ivy.array.array": [[63, 1, 1, "", "Array"]], "ivy.array.array.Array": [[63, 3, 1, "", "T"], [63, 2, 1, "", "__add__"], [63, 2, 1, "", "__init__"], [63, 2, 1, "", "__le__"], [63, 2, 1, "", "__radd__"], [63, 2, 1, "", "__rrshift__"], [63, 2, 1, "", "__rshift__"], [63, 2, 1, "", "__rsub__"], [63, 2, 1, "", "__sub__"], [63, 3, 1, "", "data"], [63, 3, 1, "", "device"], [63, 3, 1, "", "dtype"], [63, 3, 1, "", "mT"], [63, 3, 1, "", "ndim"], [63, 3, 1, "", "shape"], [63, 3, 1, "", "size"]], "ivy.array.conversions": [[65, 4, 1, "", "args_to_ivy"], [66, 4, 1, "", "args_to_native"], [67, 4, 1, "", "to_ivy"], [68, 4, 1, "", "to_native"]], "ivy.array.creation": [[70, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[70, 2, 1, "", "asarray"], [70, 2, 1, "", "copy_array"], [70, 2, 1, "", "empty_like"], [70, 2, 1, "", "from_dlpack"], [70, 2, 1, "", "full_like"], [70, 2, 1, "", "meshgrid"], [70, 2, 1, "", "native_array"], [70, 2, 1, "", "one_hot"], [70, 2, 1, "", "ones_like"], [70, 2, 1, "", "tril"], [70, 2, 1, "", "triu"], [70, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[72, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[72, 2, 1, "", "astype"], [72, 2, 1, "", "broadcast_arrays"], [72, 2, 1, "", "broadcast_to"], [72, 2, 1, "", "can_cast"], [72, 2, 1, "", "dtype"], [72, 2, 1, "", "finfo"], [72, 2, 1, "", "iinfo"], [72, 2, 1, "", "is_bool_dtype"], [72, 2, 1, "", "is_float_dtype"], [72, 2, 1, "", "is_int_dtype"], [72, 2, 1, "", "is_uint_dtype"], [72, 2, 1, "", "result_type"]], "ivy.array.device": [[74, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[74, 2, 1, "", "dev"], [74, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[76, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[76, 2, 1, "", "abs"], [76, 2, 1, "", "acos"], [76, 2, 1, "", "acosh"], [76, 2, 1, "", "add"], [76, 2, 1, "", "asin"], [76, 2, 1, "", "asinh"], [76, 2, 1, "", "atan"], [76, 2, 1, "", "atan2"], [76, 2, 1, "", "atanh"], [76, 2, 1, "", "bitwise_and"], [76, 2, 1, "", "bitwise_invert"], [76, 2, 1, "", "bitwise_left_shift"], [76, 2, 1, "", "bitwise_or"], [76, 2, 1, "", "bitwise_right_shift"], [76, 2, 1, "", "bitwise_xor"], [76, 2, 1, "", "ceil"], [76, 2, 1, "", "cos"], [76, 2, 1, "", "cosh"], [76, 2, 1, "", "deg2rad"], [76, 2, 1, "", "divide"], [76, 2, 1, "", "equal"], [76, 2, 1, "", "erf"], [76, 2, 1, "", "exp"], [76, 2, 1, "", "expm1"], [76, 2, 1, "", "floor"], [76, 2, 1, "", "floor_divide"], [76, 2, 1, "", "greater"], [76, 2, 1, "", "greater_equal"], [76, 2, 1, "", "isfinite"], [76, 2, 1, "", "isinf"], [76, 2, 1, "", "isnan"], [76, 2, 1, "", "isreal"], [76, 2, 1, "", "less"], [76, 2, 1, "", "less_equal"], [76, 2, 1, "", "log"], [76, 2, 1, "", "log10"], [76, 2, 1, "", "log1p"], [76, 2, 1, "", "log2"], [76, 2, 1, "", "logaddexp"], [76, 2, 1, "", "logical_and"], [76, 2, 1, "", "logical_not"], [76, 2, 1, "", "logical_or"], [76, 2, 1, "", "logical_xor"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "multiply"], [76, 2, 1, "", "negative"], [76, 2, 1, "", "not_equal"], [76, 2, 1, "", "positive"], [76, 2, 1, "", "pow"], [76, 2, 1, "", "rad2deg"], [76, 2, 1, "", "reciprocal"], [76, 2, 1, "", "remainder"], [76, 2, 1, "", "round"], [76, 2, 1, "", "sign"], [76, 2, 1, "", "sin"], [76, 2, 1, "", "sinh"], [76, 2, 1, "", "sqrt"], [76, 2, 1, "", "square"], [76, 2, 1, "", "subtract"], [76, 2, 1, "", "tan"], [76, 2, 1, "", "tanh"], [76, 2, 1, "", "trunc"], [76, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[77, 1, 1, "", "ArrayWithActivationsExperimental"], [77, 1, 1, "", "ArrayWithConversionsExperimental"], [77, 1, 1, "", "ArrayWithCreationExperimental"], [77, 1, 1, "", "ArrayWithData_typeExperimental"], [77, 1, 1, "", "ArrayWithDeviceExperimental"], [77, 1, 1, "", "ArrayWithElementWiseExperimental"], [77, 1, 1, "", "ArrayWithGeneralExperimental"], [77, 1, 1, "", "ArrayWithGradientsExperimental"], [77, 1, 1, "", "ArrayWithImageExperimental"], [77, 1, 1, "", "ArrayWithLayersExperimental"], [77, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [77, 1, 1, "", "ArrayWithLossesExperimental"], [77, 1, 1, "", "ArrayWithManipulationExperimental"], [77, 1, 1, "", "ArrayWithNormsExperimental"], [77, 1, 1, "", "ArrayWithRandomExperimental"], [77, 1, 1, "", "ArrayWithSearchingExperimental"], [77, 1, 1, "", "ArrayWithSetExperimental"], [77, 1, 1, "", "ArrayWithSortingExperimental"], [77, 1, 1, "", "ArrayWithStatisticalExperimental"], [77, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[77, 2, 1, "", "allclose"], [77, 2, 1, "", "count_nonzero"], [77, 2, 1, "", "diff"], [77, 2, 1, "", "exp2"], [77, 2, 1, "", "fix"], [77, 2, 1, "", "float_power"], [77, 2, 1, "", "fmax"], [77, 2, 1, "", "fmod"], [77, 2, 1, "", "gcd"], [77, 2, 1, "", "isclose"], [77, 2, 1, "", "isneginf"], [77, 2, 1, "", "isposinf"], [77, 2, 1, "", "lcm"], [77, 2, 1, "", "logaddexp2"], [77, 2, 1, "", "nan_to_num"], [77, 2, 1, "", "nansum"], [77, 2, 1, "", "nextafter"], [77, 2, 1, "", "signbit"], [77, 2, 1, "", "sinc"], [77, 2, 1, "", "trapz"], [77, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[77, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[77, 2, 1, "", "avg_pool1d"], [77, 2, 1, "", "avg_pool2d"], [77, 2, 1, "", "avg_pool3d"], [77, 2, 1, "", "dct"], [77, 2, 1, "", "max_pool1d"], [77, 2, 1, "", "max_pool2d"], [77, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[77, 2, 1, "", "diagflat"], [77, 2, 1, "", "kron"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[77, 2, 1, "", "atleast_1d"], [77, 2, 1, "", "atleast_2d"], [77, 2, 1, "", "atleast_3d"], [77, 2, 1, "", "dsplit"], [77, 2, 1, "", "dstack"], [77, 2, 1, "", "flatten"], [77, 2, 1, "", "fliplr"], [77, 2, 1, "", "flipud"], [77, 2, 1, "", "heaviside"], [77, 2, 1, "", "hsplit"], [77, 2, 1, "", "hstack"], [77, 2, 1, "", "i0"], [77, 2, 1, "", "moveaxis"], [77, 2, 1, "", "pad"], [77, 2, 1, "", "rot90"], [77, 2, 1, "", "take_along_axis"], [77, 2, 1, "", "top_k"], [77, 2, 1, "", "vsplit"], [77, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[77, 2, 1, "", "dirichlet"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[77, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[77, 2, 1, "", "median"], [77, 2, 1, "", "nanmean"], [77, 2, 1, "", "unravel_index"]], "ivy.array.general": [[79, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[79, 2, 1, "", "all_equal"], [79, 2, 1, "", "array_equal"], [79, 2, 1, "", "assert_supports_inplace"], [79, 2, 1, "", "clip_matrix_norm"], [79, 2, 1, "", "clip_vector_norm"], [79, 2, 1, "", "default"], [79, 2, 1, "", "einops_rearrange"], [79, 2, 1, "", "einops_reduce"], [79, 2, 1, "", "einops_repeat"], [79, 2, 1, "", "exists"], [79, 2, 1, "", "fourier_encode"], [79, 2, 1, "", "gather"], [79, 2, 1, "", "gather_nd"], [79, 2, 1, "", "get_num_dims"], [79, 2, 1, "", "has_nans"], [79, 2, 1, "", "inplace_decrement"], [79, 2, 1, "", "inplace_increment"], [79, 2, 1, "", "inplace_update"], [79, 2, 1, "", "is_array"], [79, 2, 1, "", "is_ivy_array"], [79, 2, 1, "", "is_ivy_container"], [79, 2, 1, "", "is_native_array"], [79, 2, 1, "", "scatter_flat"], [79, 2, 1, "", "scatter_nd"], [79, 2, 1, "", "stable_divide"], [79, 2, 1, "", "stable_pow"], [79, 2, 1, "", "supports_inplace_updates"], [79, 2, 1, "", "to_list"], [79, 2, 1, "", "to_numpy"], [79, 2, 1, "", "to_scalar"], [79, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[81, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[81, 2, 1, "", "adam_step"], [81, 2, 1, "", "adam_update"], [81, 2, 1, "", "gradient_descent_update"], [81, 2, 1, "", "lamb_update"], [81, 2, 1, "", "lars_update"], [81, 2, 1, "", "optimizer_update"], [81, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[83, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[85, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[85, 2, 1, "", "conv1d"], [85, 2, 1, "", "conv1d_transpose"], [85, 2, 1, "", "conv2d"], [85, 2, 1, "", "conv3d"], [85, 2, 1, "", "conv3d_transpose"], [85, 2, 1, "", "depthwise_conv2d"], [85, 2, 1, "", "dropout"], [85, 2, 1, "", "dropout1d"], [85, 2, 1, "", "linear"], [85, 2, 1, "", "lstm_update"], [85, 2, 1, "", "multi_head_attention"], [85, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[87, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[87, 2, 1, "", "cholesky"], [87, 2, 1, "", "cross"], [87, 2, 1, "", "det"], [87, 2, 1, "", "diag"], [87, 2, 1, "", "diagonal"], [87, 2, 1, "", "eigh"], [87, 2, 1, "", "eigvalsh"], [87, 2, 1, "", "inner"], [87, 2, 1, "", "inv"], [87, 2, 1, "", "matmul"], [87, 2, 1, "", "matrix_norm"], [87, 2, 1, "", "matrix_rank"], [87, 2, 1, "", "matrix_transpose"], [87, 2, 1, "", "outer"], [87, 2, 1, "", "pinv"], [87, 2, 1, "", "qr"], [87, 2, 1, "", "slogdet"], [87, 2, 1, "", "solve"], [87, 2, 1, "", "svd"], [87, 2, 1, "", "svdvals"], [87, 2, 1, "", "tensordot"], [87, 2, 1, "", "trace"], [87, 2, 1, "", "vander"], [87, 2, 1, "", "vecdot"], [87, 2, 1, "", "vector_norm"], [87, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[89, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[89, 2, 1, "", "binary_cross_entropy"], [89, 2, 1, "", "cross_entropy"], [89, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[91, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[91, 2, 1, "", "clip"], [91, 2, 1, "", "concat"], [91, 2, 1, "", "constant_pad"], [91, 2, 1, "", "expand_dims"], [91, 2, 1, "", "flip"], [91, 2, 1, "", "permute_dims"], [91, 2, 1, "", "repeat"], [91, 2, 1, "", "reshape"], [91, 2, 1, "", "roll"], [91, 2, 1, "", "split"], [91, 2, 1, "", "squeeze"], [91, 2, 1, "", "stack"], [91, 2, 1, "", "swapaxes"], [91, 2, 1, "", "tile"], [91, 2, 1, "", "unstack"], [91, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[93, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[93, 2, 1, "", "layer_norm"]], "ivy.array.random": [[95, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[95, 2, 1, "", "beta"], [95, 2, 1, "", "gamma"], [95, 2, 1, "", "multinomial"], [95, 2, 1, "", "randint"], [95, 2, 1, "", "random_normal"], [95, 2, 1, "", "random_uniform"], [95, 2, 1, "", "shuffle"]], "ivy.array.searching": [[97, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[97, 2, 1, "", "argmax"], [97, 2, 1, "", "argmin"], [97, 2, 1, "", "argwhere"], [97, 2, 1, "", "nonzero"], [97, 2, 1, "", "where"]], "ivy.array.set": [[99, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[99, 2, 1, "", "unique_all"], [99, 2, 1, "", "unique_counts"], [99, 2, 1, "", "unique_inverse"], [99, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[101, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[101, 2, 1, "", "argsort"], [101, 2, 1, "", "searchsorted"], [101, 2, 1, "", "sort"]], "ivy.array.statistical": [[103, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[103, 2, 1, "", "cumprod"], [103, 2, 1, "", "cumsum"], [103, 2, 1, "", "einsum"], [103, 2, 1, "", "max"], [103, 2, 1, "", "mean"], [103, 2, 1, "", "min"], [103, 2, 1, "", "prod"], [103, 2, 1, "", "std"], [103, 2, 1, "", "sum"], [103, 2, 1, "", "var"]], "ivy.array.utility": [[105, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[105, 2, 1, "", "all"], [105, 2, 1, "", "any"]], "ivy.array.wrapping": [[107, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.container": [[109, 0, 0, "-", "activations"], [111, 0, 0, "-", "base"], [113, 0, 0, "-", "container"], [115, 0, 0, "-", "conversions"], [117, 0, 0, "-", "creation"], [119, 0, 0, "-", "data_type"], [121, 0, 0, "-", "device"], [123, 0, 0, "-", "elementwise"], [126, 0, 0, "-", "general"], [128, 0, 0, "-", "gradients"], [130, 0, 0, "-", "image"], [132, 0, 0, "-", "layers"], [134, 0, 0, "-", "linear_algebra"], [136, 0, 0, "-", "losses"], [138, 0, 0, "-", "manipulation"], [140, 0, 0, "-", "norms"], [142, 0, 0, "-", "random"], [144, 0, 0, "-", "searching"], [146, 0, 0, "-", "set"], [148, 0, 0, "-", "sorting"], [150, 0, 0, "-", "statistical"], [152, 0, 0, "-", "utility"], [154, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[110, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[110, 2, 1, "", "gelu"], [110, 2, 1, "", "leaky_relu"], [110, 2, 1, "", "log_softmax"], [110, 2, 1, "", "relu"], [110, 2, 1, "", "sigmoid"], [110, 2, 1, "", "softmax"], [110, 2, 1, "", "softplus"], [110, 2, 1, "", "static_gelu"], [110, 2, 1, "", "static_leaky_relu"], [110, 2, 1, "", "static_log_softmax"], [110, 2, 1, "", "static_relu"], [110, 2, 1, "", "static_sigmoid"], [110, 2, 1, "", "static_softmax"], [110, 2, 1, "", "static_softplus"]], "ivy.container.base": [[112, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[112, 2, 1, "", "__getitem__"], [112, 2, 1, "", "__init__"], [112, 2, 1, "", "__setitem__"], [112, 2, 1, "", "all_false"], [112, 2, 1, "", "all_key_chains"], [112, 2, 1, "", "all_true"], [112, 2, 1, "", "as_bools"], [112, 2, 1, "", "assert_contains_sub_container"], [112, 2, 1, "", "assert_contains_sub_structure"], [112, 2, 1, "", "assert_identical"], [112, 2, 1, "", "assert_identical_structure"], [112, 2, 1, "", "at_key_chain"], [112, 2, 1, "", "at_key_chains"], [112, 2, 1, "", "at_keys"], [112, 2, 1, "", "combine"], [112, 2, 1, "", "common_key_chains"], [112, 3, 1, "", "config"], [112, 2, 1, "", "cont_inplace_update"], [112, 2, 1, "", "contains_sub_container"], [112, 2, 1, "", "contains_sub_structure"], [112, 2, 1, "", "copy"], [112, 2, 1, "", "create_if_absent"], [112, 2, 1, "", "cutoff_at_depth"], [112, 2, 1, "", "cutoff_at_height"], [112, 2, 1, "", "deep_copy"], [112, 3, 1, "", "dev"], [112, 3, 1, "", "dev_str"], [112, 2, 1, "", "diff"], [112, 2, 1, "", "duplicate_array_keychains"], [112, 2, 1, "", "find_sub_container"], [112, 2, 1, "", "find_sub_structure"], [112, 2, 1, "", "flatten_key_chain"], [112, 2, 1, "", "flatten_key_chains"], [112, 2, 1, "", "format_key_chains"], [112, 2, 1, "", "from_disk_as_hdf5"], [112, 2, 1, "", "from_disk_as_json"], [112, 2, 1, "", "from_disk_as_pickled"], [112, 2, 1, "", "from_flat_list"], [112, 2, 1, "", "h5_file_size"], [112, 2, 1, "", "handle_inplace"], [112, 2, 1, "", "has_key"], [112, 2, 1, "", "has_key_chain"], [112, 2, 1, "", "identical"], [112, 2, 1, "", "identical_array_shapes"], [112, 2, 1, "", "identical_configs"], [112, 2, 1, "", "identical_structure"], [112, 2, 1, "", "if_exists"], [112, 3, 1, "", "ivy"], [112, 2, 1, "", "key_chains_containing"], [112, 2, 1, "", "list_join"], [112, 2, 1, "", "list_stack"], [112, 2, 1, "", "map"], [112, 2, 1, "", "map_conts"], [112, 3, 1, "", "max_depth"], [112, 2, 1, "", "multi_map"], [112, 2, 1, "", "multi_map_in_static_method"], [112, 2, 1, "", "num_arrays"], [112, 2, 1, "", "overwrite_at_key_chain"], [112, 2, 1, "", "overwrite_at_key_chains"], [112, 2, 1, "", "prune_empty"], [112, 2, 1, "", "prune_key_chain"], [112, 2, 1, "", "prune_key_chains"], [112, 2, 1, "", "prune_key_from_key_chains"], [112, 2, 1, "", "prune_keys"], [112, 2, 1, "", "prune_keys_from_key_chains"], [112, 2, 1, "", "reduce"], [112, 2, 1, "", "remove_key_length_limit"], [112, 2, 1, "", "remove_print_limit"], [112, 2, 1, "", "reshape_like"], [112, 2, 1, "", "restructure"], [112, 2, 1, "", "restructure_key_chains"], [112, 2, 1, "", "set_at_key_chain"], [112, 2, 1, "", "set_at_key_chains"], [112, 2, 1, "", "set_at_keys"], [112, 3, 1, "", "shapes"], [112, 3, 1, "", "shared_shape"], [112, 2, 1, "", "show"], [112, 2, 1, "", "show_sub_container"], [112, 2, 1, "", "shuffle_h5_file"], [112, 2, 1, "", "size_ordered_arrays"], [112, 2, 1, "", "slice_keys"], [112, 2, 1, "", "slice_via_key"], [112, 2, 1, "", "sort_by_key"], [112, 2, 1, "", "split_conts"], [112, 2, 1, "", "structural_diff"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_disk_as_hdf5"], [112, 2, 1, "", "to_disk_as_json"], [112, 2, 1, "", "to_disk_as_pickled"], [112, 2, 1, "", "to_flat_list"], [112, 2, 1, "", "to_iterator"], [112, 2, 1, "", "to_iterator_keys"], [112, 2, 1, "", "to_iterator_values"], [112, 2, 1, "", "to_jsonable"], [112, 2, 1, "", "to_nested_list"], [112, 2, 1, "", "to_raw"], [112, 2, 1, "", "trim_key"], [112, 2, 1, "", "try_kc"], [112, 2, 1, "", "unify"], [112, 2, 1, "", "unstack_conts"], [112, 2, 1, "", "update_config"], [112, 2, 1, "", "with_default_key_color"], [112, 2, 1, "", "with_entries_as_lists"], [112, 2, 1, "", "with_ivy_backend"], [112, 2, 1, "", "with_key_length_limit"], [112, 2, 1, "", "with_print_indent"], [112, 2, 1, "", "with_print_limit"], [112, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[114, 1, 1, "", "Container"]], "ivy.container.container.Container": [[114, 2, 1, "", "__add__"], [114, 2, 1, "", "__init__"], [114, 2, 1, "", "__radd__"], [114, 2, 1, "", "__rrshift__"], [114, 2, 1, "", "__rshift__"], [114, 2, 1, "", "__rsub__"], [114, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[116, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[116, 2, 1, "", "static_to_ivy"], [116, 2, 1, "", "static_to_native"], [116, 2, 1, "", "to_ivy"], [116, 2, 1, "", "to_native"]], "ivy.container.creation": [[118, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[118, 2, 1, "", "empty_like"], [118, 2, 1, "", "from_dlpack"], [118, 2, 1, "", "full_like"], [118, 2, 1, "", "meshgrid"], [118, 2, 1, "", "native_array"], [118, 2, 1, "", "one_hot"], [118, 2, 1, "", "ones_like"], [118, 2, 1, "", "static_arange"], [118, 2, 1, "", "static_asarray"], [118, 2, 1, "", "static_empty_like"], [118, 2, 1, "", "static_eye"], [118, 2, 1, "", "static_from_dlpack"], [118, 2, 1, "", "static_full_like"], [118, 2, 1, "", "static_linspace"], [118, 2, 1, "", "static_logspace"], [118, 2, 1, "", "static_meshgrid"], [118, 2, 1, "", "static_native_array"], [118, 2, 1, "", "static_one_hot"], [118, 2, 1, "", "static_ones"], [118, 2, 1, "", "static_ones_like"], [118, 2, 1, "", "static_tril"], [118, 2, 1, "", "static_triu"], [118, 2, 1, "", "static_zeros"], [118, 2, 1, "", "static_zeros_like"], [118, 2, 1, "", "tril"], [118, 2, 1, "", "triu"], [118, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[120, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[120, 2, 1, "", "astype"], [120, 2, 1, "", "broadcast_arrays"], [120, 2, 1, "", "broadcast_to"], [120, 2, 1, "", "can_cast"], [120, 2, 1, "", "dtype"], [120, 2, 1, "", "finfo"], [120, 2, 1, "", "iinfo"], [120, 2, 1, "", "is_bool_dtype"], [120, 2, 1, "", "is_float_dtype"], [120, 2, 1, "", "is_int_dtype"], [120, 2, 1, "", "is_uint_dtype"], [120, 2, 1, "", "result_type"], [120, 2, 1, "", "static_astype"], [120, 2, 1, "", "static_broadcast_arrays"], [120, 2, 1, "", "static_broadcast_to"], [120, 2, 1, "", "static_can_cast"], [120, 2, 1, "", "static_default_float_dtype"], [120, 2, 1, "", "static_dtype"], [120, 2, 1, "", "static_finfo"], [120, 2, 1, "", "static_function_supported_dtypes"], [120, 2, 1, "", "static_function_unsupported_dtypes"], [120, 2, 1, "", "static_iinfo"], [120, 2, 1, "", "static_is_bool_dtype"], [120, 2, 1, "", "static_is_float_dtype"], [120, 2, 1, "", "static_is_int_dtype"], [120, 2, 1, "", "static_is_uint_dtype"], [120, 2, 1, "", "static_result_type"]], "ivy.container.device": [[122, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[122, 2, 1, "", "dev"], [122, 2, 1, "", "static_dev"], [122, 2, 1, "", "static_to_device"], [122, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[124, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[124, 2, 1, "", "abs"], [124, 2, 1, "", "acos"], [124, 2, 1, "", "acosh"], [124, 2, 1, "", "add"], [124, 2, 1, "", "asin"], [124, 2, 1, "", "asinh"], [124, 2, 1, "", "atan"], [124, 2, 1, "", "atan2"], [124, 2, 1, "", "atanh"], [124, 2, 1, "", "bitwise_and"], [124, 2, 1, "", "bitwise_invert"], [124, 2, 1, "", "bitwise_left_shift"], [124, 2, 1, "", "bitwise_or"], [124, 2, 1, "", "bitwise_right_shift"], [124, 2, 1, "", "bitwise_xor"], [124, 2, 1, "", "ceil"], [124, 2, 1, "", "cos"], [124, 2, 1, "", "cosh"], [124, 2, 1, "", "deg2rad"], [124, 2, 1, "", "divide"], [124, 2, 1, "", "equal"], [124, 2, 1, "", "erf"], [124, 2, 1, "", "exp"], [124, 2, 1, "", "expm1"], [124, 2, 1, "", "floor"], [124, 2, 1, "", "floor_divide"], [124, 2, 1, "", "greater"], [124, 2, 1, "", "greater_equal"], [124, 2, 1, "", "isfinite"], [124, 2, 1, "", "isinf"], [124, 2, 1, "", "isnan"], [124, 2, 1, "", "isreal"], [124, 2, 1, "", "less"], [124, 2, 1, "", "less_equal"], [124, 2, 1, "", "log"], [124, 2, 1, "", "log10"], [124, 2, 1, "", "log1p"], [124, 2, 1, "", "log2"], [124, 2, 1, "", "logaddexp"], [124, 2, 1, "", "logical_and"], [124, 2, 1, "", "logical_not"], [124, 2, 1, "", "logical_or"], [124, 2, 1, "", "logical_xor"], [124, 2, 1, "", "maximum"], [124, 2, 1, "", "minimum"], [124, 2, 1, "", "multiply"], [124, 2, 1, "", "negative"], [124, 2, 1, "", "not_equal"], [124, 2, 1, "", "positive"], [124, 2, 1, "", "pow"], [124, 2, 1, "", "rad2deg"], [124, 2, 1, "", "reciprocal"], [124, 2, 1, "", "remainder"], [124, 2, 1, "", "round"], [124, 2, 1, "", "sign"], [124, 2, 1, "", "sin"], [124, 2, 1, "", "sinh"], [124, 2, 1, "", "sqrt"], [124, 2, 1, "", "square"], [124, 2, 1, "", "static_abs"], [124, 2, 1, "", "static_acos"], [124, 2, 1, "", "static_acosh"], [124, 2, 1, "", "static_add"], [124, 2, 1, "", "static_asin"], [124, 2, 1, "", "static_asinh"], [124, 2, 1, "", "static_atan"], [124, 2, 1, "", "static_atan2"], [124, 2, 1, "", "static_atanh"], [124, 2, 1, "", "static_bitwise_and"], [124, 2, 1, "", "static_bitwise_invert"], [124, 2, 1, "", "static_bitwise_left_shift"], [124, 2, 1, "", "static_bitwise_or"], [124, 2, 1, "", "static_bitwise_right_shift"], [124, 2, 1, "", "static_bitwise_xor"], [124, 2, 1, "", "static_ceil"], [124, 2, 1, "", "static_cos"], [124, 2, 1, "", "static_cosh"], [124, 2, 1, "", "static_deg2rad"], [124, 2, 1, "", "static_divide"], [124, 2, 1, "", "static_equal"], [124, 2, 1, "", "static_erf"], [124, 2, 1, "", "static_exp"], [124, 2, 1, "", "static_expm1"], [124, 2, 1, "", "static_floor"], [124, 2, 1, "", "static_floor_divide"], [124, 2, 1, "", "static_greater"], [124, 2, 1, "", "static_greater_equal"], [124, 2, 1, "", "static_isfinite"], [124, 2, 1, "", "static_isinf"], [124, 2, 1, "", "static_isnan"], [124, 2, 1, "", "static_isreal"], [124, 2, 1, "", "static_less"], [124, 2, 1, "", "static_less_equal"], [124, 2, 1, "", "static_log"], [124, 2, 1, "", "static_log10"], [124, 2, 1, "", "static_log1p"], [124, 2, 1, "", "static_log2"], [124, 2, 1, "", "static_logaddexp"], [124, 2, 1, "", "static_logical_and"], [124, 2, 1, "", "static_logical_not"], [124, 2, 1, "", "static_logical_or"], [124, 2, 1, "", "static_logical_xor"], [124, 2, 1, "", "static_maximum"], [124, 2, 1, "", "static_minimum"], [124, 2, 1, "", "static_multiply"], [124, 2, 1, "", "static_negative"], [124, 2, 1, "", "static_not_equal"], [124, 2, 1, "", "static_positive"], [124, 2, 1, "", "static_pow"], [124, 2, 1, "", "static_rad2deg"], [124, 2, 1, "", "static_reciprocal"], [124, 2, 1, "", "static_remainder"], [124, 2, 1, "", "static_round"], [124, 2, 1, "", "static_sign"], [124, 2, 1, "", "static_sin"], [124, 2, 1, "", "static_sinh"], [124, 2, 1, "", "static_sqrt"], [124, 2, 1, "", "static_square"], [124, 2, 1, "", "static_subtract"], [124, 2, 1, "", "static_tan"], [124, 2, 1, "", "static_tanh"], [124, 2, 1, "", "static_trapz"], [124, 2, 1, "", "static_trunc"], [124, 2, 1, "", "static_trunc_divide"], [124, 2, 1, "", "subtract"], [124, 2, 1, "", "tan"], [124, 2, 1, "", "tanh"], [124, 2, 1, "", "trapz"], [124, 2, 1, "", "trunc"], [124, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[125, 1, 1, "", "ContainerWithActivationExperimental"], [125, 1, 1, "", "ContainerWithConversionExperimental"], [125, 1, 1, "", "ContainerWithCreationExperimental"], [125, 1, 1, "", "ContainerWithData_typeExperimental"], [125, 1, 1, "", "ContainerWithDeviceExperimental"], [125, 1, 1, "", "ContainerWithElementWiseExperimental"], [125, 1, 1, "", "ContainerWithGeneralExperimental"], [125, 1, 1, "", "ContainerWithGradientsExperimental"], [125, 1, 1, "", "ContainerWithImageExperimental"], [125, 1, 1, "", "ContainerWithLayersExperimental"], [125, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [125, 1, 1, "", "ContainerWithLossesExperimental"], [125, 1, 1, "", "ContainerWithManipulationExperimental"], [125, 1, 1, "", "ContainerWithNormsExperimental"], [125, 1, 1, "", "ContainerWithRandomExperimental"], [125, 1, 1, "", "ContainerWithSearchingExperimental"], [125, 1, 1, "", "ContainerWithSetExperimental"], [125, 1, 1, "", "ContainerWithSortingExperimental"], [125, 1, 1, "", "ContainerWithStatisticalExperimental"], [125, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[125, 2, 1, "", "hamming_window"], [125, 2, 1, "", "hann_window"], [125, 2, 1, "", "kaiser_bessel_derived_window"], [125, 2, 1, "", "kaiser_window"], [125, 2, 1, "", "static_hamming_window"], [125, 2, 1, "", "static_hann_window"], [125, 2, 1, "", "static_kaiser_bessel_derived_window"], [125, 2, 1, "", "static_kaiser_window"], [125, 2, 1, "", "static_triu_indices"], [125, 2, 1, "", "static_vorbis_window"], [125, 2, 1, "", "triu_indices"], [125, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[125, 2, 1, "", "allclose"], [125, 2, 1, "", "count_nonzero"], [125, 2, 1, "", "diff"], [125, 2, 1, "", "exp2"], [125, 2, 1, "", "fix"], [125, 2, 1, "", "float_power"], [125, 2, 1, "", "fmax"], [125, 2, 1, "", "fmod"], [125, 2, 1, "", "gcd"], [125, 2, 1, "", "isclose"], [125, 2, 1, "", "isneginf"], [125, 2, 1, "", "isposinf"], [125, 2, 1, "", "lcm"], [125, 2, 1, "", "logaddexp2"], [125, 2, 1, "", "nan_to_num"], [125, 2, 1, "", "nansum"], [125, 2, 1, "", "nextafter"], [125, 2, 1, "", "signbit"], [125, 2, 1, "", "sinc"], [125, 2, 1, "", "static_allclose"], [125, 2, 1, "", "static_count_nonzero"], [125, 2, 1, "", "static_diff"], [125, 2, 1, "", "static_exp2"], [125, 2, 1, "", "static_fix"], [125, 2, 1, "", "static_float_power"], [125, 2, 1, "", "static_fmax"], [125, 2, 1, "", "static_fmod"], [125, 2, 1, "", "static_gcd"], [125, 2, 1, "", "static_isclose"], [125, 2, 1, "", "static_isneginf"], [125, 2, 1, "", "static_isposinf"], [125, 2, 1, "", "static_lcm"], [125, 2, 1, "", "static_logaddexp2"], [125, 2, 1, "", "static_nan_to_num"], [125, 2, 1, "", "static_nansum"], [125, 2, 1, "", "static_nextafter"], [125, 2, 1, "", "static_signbit"], [125, 2, 1, "", "static_sinc"], [125, 2, 1, "", "static_zeta"], [125, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[125, 2, 1, "", "isin"], [125, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[125, 2, 1, "", "avg_pool1d"], [125, 2, 1, "", "avg_pool2d"], [125, 2, 1, "", "avg_pool3d"], [125, 2, 1, "", "dct"], [125, 2, 1, "", "max_pool1d"], [125, 2, 1, "", "max_pool2d"], [125, 2, 1, "", "max_pool3d"], [125, 2, 1, "", "static_avg_pool1d"], [125, 2, 1, "", "static_avg_pool2d"], [125, 2, 1, "", "static_avg_pool3d"], [125, 2, 1, "", "static_dct"], [125, 2, 1, "", "static_max_pool1d"], [125, 2, 1, "", "static_max_pool2d"], [125, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[125, 2, 1, "", "diagflat"], [125, 2, 1, "", "kron"], [125, 2, 1, "", "static_diagflat"], [125, 2, 1, "", "static_kron"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[125, 2, 1, "", "atleast_1d"], [125, 2, 1, "", "atleast_2d"], [125, 2, 1, "", "atleast_3d"], [125, 2, 1, "", "dsplit"], [125, 2, 1, "", "dstack"], [125, 2, 1, "", "flatten"], [125, 2, 1, "", "fliplr"], [125, 2, 1, "", "flipud"], [125, 2, 1, "", "heaviside"], [125, 2, 1, "", "hsplit"], [125, 2, 1, "", "hstack"], [125, 2, 1, "", "i0"], [125, 2, 1, "", "moveaxis"], [125, 2, 1, "", "pad"], [125, 2, 1, "", "rot90"], [125, 2, 1, "", "static_atleast_1d"], [125, 2, 1, "", "static_atleast_2d"], [125, 2, 1, "", "static_atleast_3d"], [125, 2, 1, "", "static_dsplit"], [125, 2, 1, "", "static_dstack"], [125, 2, 1, "", "static_flatten"], [125, 2, 1, "", "static_fliplr"], [125, 2, 1, "", "static_flipud"], [125, 2, 1, "", "static_heaviside"], [125, 2, 1, "", "static_hsplit"], [125, 2, 1, "", "static_hstack"], [125, 2, 1, "", "static_i0"], [125, 2, 1, "", "static_moveaxis"], [125, 2, 1, "", "static_pad"], [125, 2, 1, "", "static_rot90"], [125, 2, 1, "", "static_take_along_axis"], [125, 2, 1, "", "static_top_k"], [125, 2, 1, "", "static_vsplit"], [125, 2, 1, "", "static_vstack"], [125, 2, 1, "", "take_along_axis"], [125, 2, 1, "", "top_k"], [125, 2, 1, "", "vsplit"], [125, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[125, 2, 1, "", "dirichlet"], [125, 2, 1, "", "static_dirichlet"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[125, 2, 1, "", "msort"], [125, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[125, 2, 1, "", "median"], [125, 2, 1, "", "nanmean"], [125, 2, 1, "", "static_median"], [125, 2, 1, "", "static_nanmean"], [125, 2, 1, "", "static_unravel_index"], [125, 2, 1, "", "unravel_index"]], "ivy.container.general": [[127, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[127, 2, 1, "", "all_equal"], [127, 2, 1, "", "assert_supports_inplace"], [127, 2, 1, "", "clip_matrix_norm"], [127, 2, 1, "", "clip_vector_norm"], [127, 2, 1, "", "einops_rearrange"], [127, 2, 1, "", "einops_reduce"], [127, 2, 1, "", "einops_repeat"], [127, 2, 1, "", "fourier_encode"], [127, 2, 1, "", "gather"], [127, 2, 1, "", "gather_nd"], [127, 2, 1, "", "get_num_dims"], [127, 2, 1, "", "has_nans"], [127, 2, 1, "", "inplace_decrement"], [127, 2, 1, "", "inplace_increment"], [127, 2, 1, "", "inplace_update"], [127, 2, 1, "", "is_array"], [127, 2, 1, "", "is_ivy_array"], [127, 2, 1, "", "is_ivy_container"], [127, 2, 1, "", "is_native_array"], [127, 2, 1, "", "scatter_flat"], [127, 2, 1, "", "scatter_nd"], [127, 2, 1, "", "stable_divide"], [127, 2, 1, "", "stable_pow"], [127, 2, 1, "", "static_all_equal"], [127, 2, 1, "", "static_assert_supports_inplace"], [127, 2, 1, "", "static_clip_matrix_norm"], [127, 2, 1, "", "static_clip_vector_norm"], [127, 2, 1, "", "static_einops_rearrange"], [127, 2, 1, "", "static_einops_reduce"], [127, 2, 1, "", "static_einops_repeat"], [127, 2, 1, "", "static_fourier_encode"], [127, 2, 1, "", "static_gather"], [127, 2, 1, "", "static_gather_nd"], [127, 2, 1, "", "static_get_num_dims"], [127, 2, 1, "", "static_has_nans"], [127, 2, 1, "", "static_inplace_decrement"], [127, 2, 1, "", "static_inplace_increment"], [127, 2, 1, "", "static_inplace_update"], [127, 2, 1, "", "static_is_array"], [127, 2, 1, "", "static_is_ivy_array"], [127, 2, 1, "", "static_is_ivy_container"], [127, 2, 1, "", "static_is_native_array"], [127, 2, 1, "", "static_scatter_flat"], [127, 2, 1, "", "static_scatter_nd"], [127, 2, 1, "", "static_stable_divide"], [127, 2, 1, "", "static_stable_pow"], [127, 2, 1, "", "static_supports_inplace_updates"], [127, 2, 1, "", "static_to_list"], [127, 2, 1, "", "static_to_numpy"], [127, 2, 1, "", "static_to_scalar"], [127, 2, 1, "", "static_value_is_nan"], [127, 2, 1, "", "supports_inplace_updates"], [127, 2, 1, "", "to_list"], [127, 2, 1, "", "to_numpy"], [127, 2, 1, "", "to_scalar"], [127, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[129, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[129, 2, 1, "", "adam_step"], [129, 2, 1, "", "adam_update"], [129, 2, 1, "", "gradient_descent_update"], [129, 2, 1, "", "lamb_update"], [129, 2, 1, "", "lars_update"], [129, 2, 1, "", "optimizer_update"], [129, 2, 1, "", "static_stop_gradient"], [129, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[131, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[133, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[133, 2, 1, "", "conv1d"], [133, 2, 1, "", "conv1d_transpose"], [133, 2, 1, "", "conv2d"], [133, 2, 1, "", "conv2d_transpose"], [133, 2, 1, "", "conv3d"], [133, 2, 1, "", "conv3d_transpose"], [133, 2, 1, "", "depthwise_conv2d"], [133, 2, 1, "", "dropout"], [133, 2, 1, "", "dropout1d"], [133, 2, 1, "", "linear"], [133, 2, 1, "", "lstm_update"], [133, 2, 1, "", "multi_head_attention"], [133, 2, 1, "", "scaled_dot_product_attention"], [133, 2, 1, "", "static_conv1d"], [133, 2, 1, "", "static_conv1d_transpose"], [133, 2, 1, "", "static_conv2d"], [133, 2, 1, "", "static_conv2d_transpose"], [133, 2, 1, "", "static_conv3d"], [133, 2, 1, "", "static_conv3d_transpose"], [133, 2, 1, "", "static_depthwise_conv2d"], [133, 2, 1, "", "static_dropout"], [133, 2, 1, "", "static_dropout1d"], [133, 2, 1, "", "static_linear"], [133, 2, 1, "", "static_lstm_update"], [133, 2, 1, "", "static_multi_head_attention"], [133, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[135, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[135, 2, 1, "", "cholesky"], [135, 2, 1, "", "cross"], [135, 2, 1, "", "det"], [135, 2, 1, "", "diag"], [135, 2, 1, "", "diagonal"], [135, 2, 1, "", "eigh"], [135, 2, 1, "", "eigvalsh"], [135, 2, 1, "", "inner"], [135, 2, 1, "", "inv"], [135, 2, 1, "", "matmul"], [135, 2, 1, "", "matrix_norm"], [135, 2, 1, "", "matrix_power"], [135, 2, 1, "", "matrix_rank"], [135, 2, 1, "", "matrix_transpose"], [135, 2, 1, "", "outer"], [135, 2, 1, "", "pinv"], [135, 2, 1, "", "qr"], [135, 2, 1, "", "slogdet"], [135, 2, 1, "", "solve"], [135, 2, 1, "", "static_cholesky"], [135, 2, 1, "", "static_cross"], [135, 2, 1, "", "static_det"], [135, 2, 1, "", "static_diag"], [135, 2, 1, "", "static_diagonal"], [135, 2, 1, "", "static_eigh"], [135, 2, 1, "", "static_eigvalsh"], [135, 2, 1, "", "static_inner"], [135, 2, 1, "", "static_inv"], [135, 2, 1, "", "static_matmul"], [135, 2, 1, "", "static_matrix_norm"], [135, 2, 1, "", "static_matrix_power"], [135, 2, 1, "", "static_matrix_rank"], [135, 2, 1, "", "static_matrix_transpose"], [135, 2, 1, "", "static_outer"], [135, 2, 1, "", "static_pinv"], [135, 2, 1, "", "static_qr"], [135, 2, 1, "", "static_slogdet"], [135, 2, 1, "", "static_solve"], [135, 2, 1, "", "static_svd"], [135, 2, 1, "", "static_svdvals"], [135, 2, 1, "", "static_tensordot"], [135, 2, 1, "", "static_trace"], [135, 2, 1, "", "static_vander"], [135, 2, 1, "", "static_vecdot"], [135, 2, 1, "", "static_vector_norm"], [135, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [135, 2, 1, "", "svd"], [135, 2, 1, "", "svdvals"], [135, 2, 1, "", "tensordot"], [135, 2, 1, "", "trace"], [135, 2, 1, "", "vander"], [135, 2, 1, "", "vecdot"], [135, 2, 1, "", "vector_norm"], [135, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[137, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[137, 2, 1, "", "binary_cross_entropy"], [137, 2, 1, "", "cross_entropy"], [137, 2, 1, "", "sparse_cross_entropy"], [137, 2, 1, "", "static_binary_cross_entropy"], [137, 2, 1, "", "static_cross_entropy"], [137, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[139, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[139, 2, 1, "", "clip"], [139, 2, 1, "", "concat"], [139, 2, 1, "", "constant_pad"], [139, 2, 1, "", "expand_dims"], [139, 2, 1, "", "flip"], [139, 2, 1, "", "permute_dims"], [139, 2, 1, "", "repeat"], [139, 2, 1, "", "reshape"], [139, 2, 1, "", "roll"], [139, 2, 1, "", "split"], [139, 2, 1, "", "squeeze"], [139, 2, 1, "", "stack"], [139, 2, 1, "", "static_clip"], [139, 2, 1, "", "static_concat"], [139, 2, 1, "", "static_constant_pad"], [139, 2, 1, "", "static_expand_dims"], [139, 2, 1, "", "static_flip"], [139, 2, 1, "", "static_permute_dims"], [139, 2, 1, "", "static_repeat"], [139, 2, 1, "", "static_reshape"], [139, 2, 1, "", "static_roll"], [139, 2, 1, "", "static_split"], [139, 2, 1, "", "static_squeeze"], [139, 2, 1, "", "static_stack"], [139, 2, 1, "", "static_swapaxes"], [139, 2, 1, "", "static_tile"], [139, 2, 1, "", "static_unstack"], [139, 2, 1, "", "static_zero_pad"], [139, 2, 1, "", "swapaxes"], [139, 2, 1, "", "tile"], [139, 2, 1, "", "unstack"], [139, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[141, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[141, 2, 1, "", "layer_norm"]], "ivy.container.random": [[143, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[143, 2, 1, "", "beta"], [143, 2, 1, "", "multinomial"], [143, 2, 1, "", "randint"], [143, 2, 1, "", "random_normal"], [143, 2, 1, "", "random_uniform"], [143, 2, 1, "", "shuffle"], [143, 2, 1, "", "static_beta"], [143, 2, 1, "", "static_multinomial"], [143, 2, 1, "", "static_randint"], [143, 2, 1, "", "static_random_normal"], [143, 2, 1, "", "static_random_uniform"], [143, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[145, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[145, 2, 1, "", "argmax"], [145, 2, 1, "", "argmin"], [145, 2, 1, "", "argwhere"], [145, 2, 1, "", "nonzero"], [145, 2, 1, "", "static_argmax"], [145, 2, 1, "", "static_argmin"], [145, 2, 1, "", "static_argwhere"], [145, 2, 1, "", "static_nonzero"], [145, 2, 1, "", "static_where"], [145, 2, 1, "", "where"]], "ivy.container.set": [[147, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[147, 2, 1, "", "static_unique_all"], [147, 2, 1, "", "static_unique_counts"], [147, 2, 1, "", "static_unique_inverse"], [147, 2, 1, "", "static_unique_values"], [147, 2, 1, "", "unique_all"], [147, 2, 1, "", "unique_counts"], [147, 2, 1, "", "unique_inverse"], [147, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[149, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[149, 2, 1, "", "argsort"], [149, 2, 1, "", "searchsorted"], [149, 2, 1, "", "sort"], [149, 2, 1, "", "static_argsort"], [149, 2, 1, "", "static_searchsorted"], [149, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[151, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[151, 2, 1, "", "cumprod"], [151, 2, 1, "", "cumsum"], [151, 2, 1, "", "einsum"], [151, 2, 1, "", "max"], [151, 2, 1, "", "mean"], [151, 2, 1, "", "min"], [151, 2, 1, "", "prod"], [151, 2, 1, "", "static_cumprod"], [151, 2, 1, "", "static_cumsum"], [151, 2, 1, "", "static_sum"], [151, 2, 1, "", "static_var"], [151, 2, 1, "", "std"], [151, 2, 1, "", "sum"], [151, 2, 1, "", "var"]], "ivy.container.utility": [[153, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[153, 2, 1, "", "all"], [153, 2, 1, "", "any"], [153, 2, 1, "", "static_all"], [153, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[155, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.verbosity": [[1862, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"cython": 0, "func": [0, 196], "wrapper": [0, 196, 1817, 1818], "from_zero_dim_arrays_to_float": [1, 197], "handle_array_lik": [2, 198], "handle_nan": [3, 199], "handle_nest": [4, 200], "handle_out_argu": [5, 201], "infer_devic": [6, 202], "infer_dtyp": [7, 203], "inputs_to_ivy_arrai": [8, 204], "inputs_to_native_arrai": [9, 205], "integer_arrays_to_float": [10, 206], "outputs_to_ivy_arrai": [11, 207], "to_native_arrays_and_back": [12, 208], "assert": [14, 166], "check_al": 15, "check_all_or_any_fn": 16, "check_ani": 17, "check_elem_in_list": 18, "check_equ": 19, "check_exist": 20, "check_fals": 21, "check_fill_value_and_dtype_are_compat": 22, "check_gather_input_valid": 23, "check_gather_nd_input_valid": 24, "check_great": 25, "check_inplace_sizes_valid": 26, "check_isinst": 27, "check_less": 28, "check_one_way_broadcast": 29, "check_shap": 30, "check_tru": 31, "backend": [32, 159, 162, 175, 178, 195], "handler": [32, 178], "contextmanag": 33, "choose_random_backend": 34, "clear_backend_stack": 35, "current_backend": 36, "fn_name_from_version_specific_fn_nam": 37, "get_backend": 38, "set_backend": 39, "set_backend_to_specific_vers": 40, "set_jax_backend": 41, "set_numpy_backend": 42, "set_tensorflow_backend": 43, "set_torch_backend": 44, "unset_backend": 45, "background": [46, 1801], "ml": [47, 1813, 1817], "explos": 47, "standard": [48, 176, 1808, 1817], "skeptic": 48, "complimentari": 48, "v": [48, 195], "competit": 48, "do": [48, 174], "work": [48, 53, 1807], "The": [48, 57, 172, 180, 195], "arrai": [48, 59, 62, 157, 158, 161, 168, 180, 213, 219, 224, 229, 234, 239, 244, 257, 264, 268, 276, 282, 293, 298, 303, 311, 317, 322, 330, 341, 346, 351, 356, 374, 385, 392, 397, 402, 407, 414, 436, 455, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 609, 614, 619, 624, 629, 634, 639, 644, 649, 654, 659, 664, 669, 674, 679, 684, 689, 694, 699, 704, 709, 714, 719, 724, 729, 734, 739, 744, 749, 754, 760, 765, 770, 775, 780, 787, 792, 797, 802, 807, 812, 817, 823, 828, 833, 838, 842, 847, 852, 857, 862, 867, 872, 877, 882, 887, 892, 898, 911, 916, 921, 926, 933, 938, 943, 948, 961, 966, 971, 976, 981, 986, 991, 996, 1001, 1006, 1011, 1016, 1025, 1030, 1035, 1040, 1045, 1051, 1056, 1060, 1068, 1077, 1082, 1087, 1093, 1100, 1103, 1109, 1114, 1121, 1124, 1129, 1134, 1139, 1142, 1149, 1154, 1166, 1175, 1181, 1186, 1191, 1197, 1202, 1207, 1212, 1222, 1227, 1243, 1248, 1254, 1260, 1265, 1270, 1282, 1289, 1293, 1299, 1304, 1308, 1312, 1318, 1327, 1332, 1337, 1346, 1351, 1359, 1364, 1369, 1377, 1382, 1387, 1392, 1398, 1403, 1408, 1413, 1418, 1423, 1428, 1433, 1438, 1443, 1448, 1457, 1462, 1467, 1472, 1477, 1482, 1487, 1493, 1498, 1507, 1512, 1517, 1522, 1527, 1532, 1537, 1542, 1548, 1553, 1558, 1563, 1568, 1573, 1578, 1583, 1588, 1593, 1598, 1603, 1609, 1614, 1619, 1624, 1651, 1656, 1661, 1666, 1671, 1677, 1683, 1688, 1693, 1698, 1704, 1710, 1715, 1720, 1725, 1730, 1735, 1740, 1746, 1751, 1756, 1760, 1764, 1768, 1772, 1776, 1781, 1786, 1791, 1796, 1808], "api": [48, 55, 57, 157, 160, 161, 175, 178, 180, 182, 183, 1808, 1815, 1817], "why": [49, 174], "unifi": [49, 180, 1813, 1817], "No": [49, 56], "more": [49, 56, 176], "re": [49, 174], "implement": 49, "infinit": 49, "shelf": 49, "life": 49, "builder": [50, 185], "contribut": [51, 1801], "appli": [52, 194], "librari": [52, 194], "introduct": [52, 172, 173], "exampl": [52, 164, 168, 173, 176], "ivi": [52, 55, 56, 57, 158, 161, 164, 166, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 254, 255, 257, 258, 259, 264, 265, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 287, 288, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 364, 365, 369, 370, 371, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 414, 415, 416, 417, 436, 437, 438, 454, 455, 456, 457, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819, 820, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 842, 843, 844, 845, 847, 848, 849, 850, 852, 853, 854, 855, 857, 858, 859, 860, 862, 863, 864, 865, 867, 868, 869, 870, 872, 873, 874, 875, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 898, 899, 900, 901, 903, 904, 905, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1100, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1139, 1140, 1142, 1143, 1144, 1145, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1166, 1167, 1168, 1169, 1175, 1176, 1177, 1178, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1281, 1282, 1283, 1284, 1289, 1290, 1291, 1293, 1294, 1295, 1299, 1300, 1301, 1304, 1305, 1306, 1308, 1309, 1310, 1312, 1313, 1314, 1317, 1318, 1319, 1320, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1651, 1652, 1653, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1730, 1731, 1732, 1733, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1743, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1760, 1761, 1762, 1764, 1765, 1766, 1768, 1769, 1770, 1772, 1773, 1774, 1776, 1777, 1778, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1817], "robot": [52, 191, 194], "build": [53, 178], "doc": 53, "docker": [53, 56, 57], "dockerless": 53, "us": [53, 56, 157, 181], "miniconda": [53, 56], "venv": [53, 56], "document": 53, "pipelin": [53, 161, 174, 195], "make_doc": 53, "sh": 53, "entrypoint": 53, "_make_doc": 53, "generate_src_rst_fil": 53, "py": 53, "sphinx": 53, "correct_built_html_fil": 53, "remove_fil": 53, "help": [54, 57], "resourc": 54, "open": 55, "task": 55, "function": [55, 160, 162, 163, 166, 168, 169, 170, 172, 173, 174, 175, 178, 183, 195], "format": [55, 167, 1810, 1817], "checklist": 55, "frontend": [55, 159, 161, 172, 173, 183], "where": [55, 1702, 1704, 1705, 1706], "place": 55, "experiment": [55, 57, 77, 125, 783], "set": [56, 98, 146, 159, 1707], "up": 56, "clone": 56, "pycharm": [56, 57], "virtual": 56, "environ": 56, "interpret": 56, "window": 56, "maco": 56, "ubuntu": 56, "test": [56, 57, 157, 161, 173, 174], "detail": 56, "hypothesi": [56, 173, 174], "log": [56, 633, 634, 635, 636], "free": 56, "github": [56, 161], "codespac": 56, "pre": [56, 167], "commit": [56, 57, 167], "basic": [57, 172], "get": [57, 217], "todo": 57, "list": 57, "issu": 57, "manag": 57, "your": [57, 174], "fork": 57, "who": 57, "To": 57, "ask": 57, "With": 57, "command": 57, "line": 57, "browser": 57, "pull": [57, 161], "request": [57, 161], "small": 57, "often": 57, "interact": 57, "contain": [57, 108, 113, 160, 181, 214, 216, 220, 222, 225, 227, 230, 232, 235, 237, 240, 242, 245, 247, 255, 259, 269, 271, 274, 277, 279, 283, 285, 288, 291, 294, 296, 299, 301, 304, 306, 309, 312, 314, 316, 318, 321, 323, 326, 329, 331, 342, 344, 347, 349, 352, 354, 357, 359, 365, 369, 371, 375, 377, 380, 383, 386, 388, 393, 395, 398, 400, 403, 405, 408, 410, 415, 417, 438, 454, 456, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 759, 761, 764, 766, 769, 771, 774, 776, 779, 781, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 824, 826, 829, 831, 834, 836, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 899, 901, 903, 905, 907, 909, 912, 914, 917, 919, 922, 924, 927, 929, 934, 936, 939, 941, 944, 946, 949, 951, 953, 955, 957, 959, 962, 964, 967, 969, 972, 974, 977, 979, 982, 984, 987, 989, 992, 994, 997, 999, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1026, 1028, 1031, 1033, 1036, 1038, 1041, 1043, 1046, 1048, 1050, 1052, 1055, 1057, 1063, 1064, 1067, 1069, 1072, 1073, 1076, 1078, 1081, 1083, 1086, 1088, 1094, 1096, 1104, 1106, 1110, 1112, 1115, 1117, 1125, 1127, 1130, 1132, 1135, 1137, 1143, 1145, 1150, 1152, 1155, 1157, 1167, 1169, 1176, 1178, 1182, 1184, 1187, 1189, 1192, 1194, 1198, 1200, 1203, 1205, 1208, 1210, 1213, 1215, 1223, 1225, 1228, 1230, 1244, 1246, 1249, 1251, 1253, 1255, 1259, 1264, 1266, 1269, 1271, 1281, 1283, 1290, 1294, 1300, 1305, 1309, 1313, 1317, 1319, 1328, 1330, 1333, 1335, 1338, 1340, 1342, 1344, 1347, 1349, 1352, 1354, 1360, 1362, 1365, 1367, 1370, 1372, 1378, 1380, 1383, 1385, 1388, 1390, 1393, 1395, 1399, 1401, 1404, 1406, 1409, 1411, 1414, 1416, 1419, 1421, 1424, 1426, 1429, 1431, 1434, 1436, 1439, 1441, 1444, 1446, 1449, 1451, 1453, 1455, 1458, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1492, 1494, 1497, 1499, 1502, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1533, 1535, 1538, 1540, 1543, 1545, 1549, 1551, 1554, 1556, 1559, 1561, 1564, 1566, 1569, 1571, 1574, 1576, 1579, 1581, 1584, 1586, 1589, 1591, 1594, 1596, 1599, 1601, 1604, 1606, 1608, 1610, 1613, 1615, 1618, 1620, 1623, 1625, 1652, 1657, 1659, 1662, 1664, 1667, 1669, 1672, 1674, 1678, 1680, 1684, 1686, 1689, 1691, 1694, 1696, 1699, 1701, 1703, 1705, 1709, 1711, 1714, 1716, 1719, 1721, 1724, 1726, 1731, 1733, 1736, 1738, 1741, 1743, 1747, 1749, 1752, 1754, 1757, 1761, 1765, 1769, 1773, 1777, 1780, 1782, 1785, 1787, 1792, 1794, 1797, 1799], "run": [57, 157, 174], "local": 57, "most": 57, "out": [57, 168, 171], "id": [57, 157], "data": [58, 71, 119, 162, 172, 174, 181, 195, 333], "class": [58, 166, 172, 180, 1819], "activ": [60, 109, 210, 1820], "arraywithactiv": 61, "convers": [64, 115], "args_to_ivi": 65, "args_to_n": 66, "to_ivi": 67, "to_n": 68, "creation": [69, 117, 251], "arraywithcr": 70, "type": [71, 119, 162, 169, 172, 195, 333], "arraywithdatatyp": 72, "devic": [73, 121, 163, 168, 172, 428], "arraywithdevic": 74, "elementwis": [75, 123, 462], "arraywithelementwis": 76, "gener": [78, 126, 174, 176, 1091], "arraywithgener": 79, "gradient": [80, 128, 1286], "arraywithgradi": 81, "imag": [82, 130], "arraywithimag": 83, "layer": [84, 132, 1324, 1835], "arraywithlay": 85, "linear": [86, 134, 1376, 1377, 1378, 1379, 1396, 1845], "algebra": [86, 134, 1396], "arraywithlinearalgebra": 87, "loss": [88, 136, 1530], "arraywithloss": 89, "manipul": [90, 138, 1546], "arraywithmanipul": 91, "norm": [92, 140, 1649, 1850], "arraywithnorm": 93, "random": [94, 142, 1654], "arraywithrandom": 95, "search": [96, 144, 1681], "arraywithsearch": 97, "arraywithset": 99, "sort": [100, 148, 1728, 1739, 1740, 1741, 1742], "arraywithsort": 101, "statist": [102, 150, 1744], "arraywithstatist": 103, "util": [104, 152, 1789], "arraywithutil": 105, "wrap": [106, 154, 170], "add_ivy_array_instance_method": 107, "containerwithactiv": 110, "base": 111, "containerbas": 112, "containerwithconvers": 116, "containerwithcr": 118, "containerwithdatatyp": 120, "containerwithdevic": 122, "containerwithelementwis": 124, "containerwithgener": 127, "containerwithgradi": 129, "containerwithimag": 131, "containerwithlay": 133, "containerwithlinearalgebra": 135, "containerwithloss": 137, "containerwithmanipul": 139, "containerwithnorm": 141, "containerwithrandom": 143, "containerwithsearch": 145, "containerwithset": 147, "containerwithsort": 149, "containerwithstatist": 151, "containerwithutil": 153, "add_ivy_container_instance_method": 155, "deep": 156, "dive": 156, "termin": 157, "regener": 157, "failur": 157, "skip": 157, "nativ": 158, "handl": [158, 166, 195], "version": [159, 175, 195], "support": [159, 162, 172, 195], "instanc": [160, 172, 173, 180], "method": [160, 172, 173, 180, 181], "static": 160, "special": [160, 172, 173], "nestabl": [160, 168, 169], "continu": 161, "integr": [161, 174], "action": 161, "core": 161, "nn": 161, "state": [161, 182, 195], "ci": 161, "push": 161, "schedul": 161, "cron": 161, "job": 161, "dashboard": 161, "modul": [162, 163, 182, 1847, 1848], "promot": [162, 172], "argument": [162, 163, 168, 171, 172], "other": [162, 163], "unsupport": 162, "bug": 162, "superset": [162, 176], "docstr": [164, 165], "tan": [164, 173, 763, 765, 766, 767], "roll": [164, 1587, 1588, 1589, 1590], "add": [164, 173, 478, 479, 480, 481, 1817], "except": 166, "handle_except": 166, "decor": [166, 174], "lint": 167, "check": [167, 195], "hook": 167, "posit": [168, 703, 704, 705, 706], "keyword": 168, "input": 168, "dtype": [168, 368, 369, 370], "number": 168, "oper": [168, 180, 195], "integ": 168, "sequenc": 168, "primari": 169, "composit": [169, 172], "mix": 169, "standalon": 169, "conveni": 169, "inplac": 171, "updat": 171, "copi": 171, "unus": 172, "miss": 172, "complex": 172, "temporari": 172, "rule": 172, "numpi": [172, 1811], "cast": 172, "duplic": [172, 176], "polici": 172, "full": [173, 280], "alia": 173, "helper": [173, 174, 175], "write": 174, "own": 174, "strategi": 174, "we": 174, "need": 174, "how": 174, "effect": 174, "bonu": 174, "extend": [174, 176], "featur": 174, "self": 174, "consist": 174, "explicit": 174, "test_array_funct": 174, "fail": 174, "navig": 175, "code": 175, "categor": 175, "submodul": 175, "design": [175, 177, 1801], "pin": 175, "behaviour": 176, "what": [176, 1817], "i": 176, "A": 176, "non": 176, "when": 176, "too": 176, "much": 176, "balanc": 176, "effici": 176, "block": 178, "graph": [178, 183, 1812, 1817], "compil": [178, 183, 248, 249, 1809, 1814, 1816, 1817], "framework": [179, 1811, 1814, 1817, 1818, 1819], "monkei": 180, "patch": 180, "construct": 181, "represent": 181, "recurs": 181, "built": 181, "ins": 181, "access": 181, "save": 181, "load": 181, "comparison": 181, "custom": [181, 195], "case": 181, "compartment": 181, "configur": 181, "network": [181, 183], "weight": 181, "initi": [182, 1825, 1829], "optim": [182, 1852, 1856], "transpil": 183, "role": 183, "convert": [183, 1823], "model": [183, 190, 195], "ecosystem": 186, "gym": [187, 194], "mech": 188, "memori": [189, 194], "vision": [192, 194], "extens": [193, 1801], "mechan": 194, "faq": 195, "maintain": 195, "dynam": 195, "size": 195, "shape": [195, 1240], "gpu": 195, "deploy": 195, "control": 195, "flow": 195, "auto": 195, "differenti": 195, "replica": 195, "parallel": 195, "altern": 195, "structur": 195, "deseri": 211, "gelu": [212, 213, 214, 215, 1822], "static_gelu": 216, "leaky_relu": [218, 219, 220, 221], "static_leaky_relu": 222, "log_softmax": [223, 224, 225, 226], "static_log_softmax": 227, "relu": [228, 229, 230, 231], "static_relu": 232, "sigmoid": [233, 234, 235, 236], "static_sigmoid": 237, "softmax": [238, 239, 240, 241], "static_softmax": 242, "softplu": [243, 244, 245, 246], "static_softplu": 247, "constant": [250, 1826], "nestedsequ": 252, "arang": [253, 254], "static_arang": 255, "asarrai": [256, 257, 258], "static_asarrai": 259, "asarray_handle_nest": 260, "asarray_infer_devic": 261, "asarray_to_native_arrays_and_back": 262, "copy_arrai": [263, 264, 265], "empti": 266, "empty_lik": [267, 268, 269, 270], "static_empty_lik": 271, "ey": [272, 273], "static_ey": 274, "from_dlpack": [275, 276, 277, 278], "static_from_dlpack": 279, "full_lik": [281, 282, 283, 284], "static_full_lik": 285, "linspac": [286, 287], "static_linspac": 288, "logspac": [289, 290], "static_logspac": 291, "meshgrid": [292, 293, 294, 295], "static_meshgrid": 296, "native_arrai": [297, 298, 299, 300], "static_native_arrai": 301, "one_hot": [302, 303, 304, 305], "static_one_hot": 306, "ones": [307, 308], "static_on": 309, "ones_lik": [310, 311, 312, 313], "static_ones_lik": 314, "tril": [315, 317, 318, 319], "static_tril": 316, "triu": [320, 322, 323, 324], "static_triu": 321, "zero": [325, 327, 1834], "static_zero": 326, "zeros_lik": [328, 330, 331, 332], "static_zeros_lik": 329, "defaultdtyp": 334, "defaultfloatdtyp": 335, "defaultintdtyp": 336, "defaultuintdtyp": 337, "as_ivy_dtyp": 338, "as_native_dtyp": 339, "astyp": [340, 341, 342, 343], "static_astyp": 344, "broadcast_arrai": [345, 346, 347, 348], "static_broadcast_arrai": 349, "broadcast_to": [350, 351, 352, 353], "static_broadcast_to": 354, "can_cast": [355, 356, 357, 358], "static_can_cast": 359, "check_float": 360, "closest_valid_dtyp": 361, "default_dtyp": 362, "default_float_dtyp": [363, 364], "static_default_float_dtyp": 365, "default_int_dtyp": 366, "default_uint_dtyp": 367, "static_dtyp": 371, "dtype_bit": 372, "finfo": [373, 374, 375, 376], "static_finfo": 377, "function_supported_dtyp": [378, 379], "static_function_supported_dtyp": 380, "function_unsupported_dtyp": [381, 382], "static_function_unsupported_dtyp": 383, "iinfo": [384, 385, 386, 387], "static_iinfo": 388, "infer_default_dtyp": 389, "invalid_dtyp": 390, "is_bool_dtyp": [391, 392, 393, 394], "static_is_bool_dtyp": 395, "is_float_dtyp": [396, 397, 398, 399], "static_is_float_dtyp": 400, "is_int_dtyp": [401, 402, 403, 404], "static_is_int_dtyp": 405, "is_uint_dtyp": [406, 407, 408, 409], "static_is_uint_dtyp": 410, "promote_typ": 411, "promote_types_of_input": 412, "result_typ": [413, 414, 415, 416], "static_result_typ": 417, "set_default_dtyp": 418, "set_default_float_dtyp": 419, "set_default_int_dtyp": 420, "set_default_uint_dtyp": 421, "type_promote_arrai": 422, "unset_default_dtyp": 423, "unset_default_float_dtyp": 424, "unset_default_int_dtyp": 425, "unset_default_uint_dtyp": 426, "valid_dtyp": 427, "defaultdevic": 429, "profil": 430, "as_ivy_dev": 431, "as_native_dev": 432, "clear_mem_on_dev": 433, "default_devic": 434, "dev": [435, 436, 437], "static_dev": 438, "dev_util": 439, "function_supported_devic": 440, "function_unsupported_devic": 441, "get_all_ivy_arrays_on_dev": 442, "gpu_is_avail": 443, "num_cpu_cor": 444, "num_gpu": 445, "num_ivy_arrays_on_dev": 446, "percent_used_mem_on_dev": 447, "print_all_ivy_arrays_on_dev": 448, "set_default_devic": 449, "set_split_factor": 450, "split_factor": 451, "split_func_cal": 452, "to_devic": [453, 455, 456, 457], "static_to_devic": 454, "total_mem_on_dev": 458, "tpu_is_avail": 459, "unset_default_devic": 460, "used_mem_on_dev": 461, "ab": [463, 464, 465, 466], "static_ab": 467, "aco": [468, 469, 470, 471], "static_aco": 472, "acosh": [473, 474, 475, 476], "static_acosh": 477, "static_add": 482, "asin": [483, 484, 485, 486], "static_asin": 487, "asinh": [488, 489, 490, 491], "static_asinh": 492, "atan": [493, 494, 495, 496], "static_atan": 497, "atan2": [498, 499, 500, 501], "static_atan2": 502, "atanh": [503, 504, 505, 506], "static_atanh": 507, "bitwise_and": [508, 509, 510, 511], "static_bitwise_and": 512, "bitwise_invert": [513, 514, 515, 516], "static_bitwise_invert": 517, "bitwise_left_shift": [518, 519, 520, 521], "static_bitwise_left_shift": 522, "bitwise_or": [523, 524, 525, 526], "static_bitwise_or": 527, "bitwise_right_shift": [528, 529, 530, 531], "static_bitwise_right_shift": 532, "bitwise_xor": [533, 534, 535, 536], "static_bitwise_xor": 537, "ceil": [538, 539, 540, 541], "static_ceil": 542, "co": [543, 544, 545, 546], "static_co": 547, "cosh": [548, 549, 550, 551], "static_cosh": 552, "deg2rad": [553, 554, 555, 556], "static_deg2rad": 557, "divid": [558, 559, 560, 561], "static_divid": 562, "equal": [563, 564, 565, 566], "static_equ": 567, "erf": [568, 569, 570, 571], "static_erf": 572, "exp": [573, 574, 575, 576], "static_exp": 577, "expm1": [578, 579, 580, 581], "static_expm1": 582, "floor": [583, 584, 585, 586], "static_floor": 587, "floor_divid": [588, 589, 590, 591], "static_floor_divid": 592, "greater": [593, 594, 595, 596], "static_great": 597, "greater_equ": [598, 599, 600, 601], "static_greater_equ": 602, "isfinit": [603, 604, 605, 606], "static_isfinit": 607, "isinf": [608, 609, 610, 611], "static_isinf": 612, "isnan": [613, 614, 615, 616], "static_isnan": 617, "isreal": [618, 619, 620, 621], "static_isr": 622, "less": [623, 624, 625, 626], "static_less": 627, "less_equ": [628, 629, 630, 631], "static_less_equ": 632, "static_log": 637, "log10": [638, 639, 640, 641], "static_log10": 642, "log1p": [643, 644, 645, 646], "static_log1p": 647, "log2": [648, 649, 650, 651], "static_log2": 652, "logaddexp": [653, 654, 655, 656], "static_logaddexp": 657, "logical_and": [658, 659, 660, 661], "static_logical_and": 662, "logical_not": [663, 664, 665, 666], "static_logical_not": 667, "logical_or": [668, 669, 670, 671], "static_logical_or": 672, "logical_xor": [673, 674, 675, 676], "static_logical_xor": 677, "maximum": [678, 679, 680, 681], "static_maximum": 682, "minimum": [683, 684, 685, 686], "static_minimum": 687, "multipli": [688, 689, 690, 691], "static_multipli": 692, "neg": [693, 694, 695, 696], "static_neg": 697, "not_equ": [698, 699, 700, 701], "static_not_equ": 702, "static_posit": 707, "pow": [708, 709, 710, 711], "static_pow": 712, "rad2deg": [713, 714, 715, 716], "static_rad2deg": 717, "reciproc": [718, 719, 720, 721], "static_reciproc": 722, "remaind": [723, 724, 725, 726], "static_remaind": 727, "round": [728, 729, 730, 731], "static_round": 732, "sign": [733, 734, 735, 736], "static_sign": 737, "sin": [738, 739, 740, 741], "static_sin": 742, "sinh": [743, 744, 745, 746], "static_sinh": 747, "sqrt": [748, 749, 750, 751], "static_sqrt": 752, "squar": [753, 754, 755, 756], "static_squar": 757, "subtract": [758, 760, 761, 762], "static_subtract": 759, "static_tan": 764, "tanh": [768, 770, 771, 772], "static_tanh": 769, "trunc": [773, 775, 776, 777], "static_trunc": 774, "trunc_divid": [778, 780, 781, 782], "static_trunc_divid": 779, "nativesparsearrai": 784, "sparsearrai": 785, "allclos": [786, 787, 788, 789], "static_allclos": 790, "atleast_1d": [791, 792, 793, 794], "static_atleast_1d": 795, "atleast_2d": [796, 797, 798, 799], "static_atleast_2d": 800, "atleast_3d": [801, 802, 803, 804], "static_atleast_3d": 805, "avg_pool1d": [806, 807, 808, 809], "static_avg_pool1d": 810, "avg_pool2d": [811, 812, 813, 814], "static_avg_pool2d": 815, "avg_pool3d": [816, 817, 818, 819], "static_avg_pool3d": 820, "beta": 821, "count_nonzero": [822, 823, 824, 825], "static_count_nonzero": 826, "dct": [827, 828, 829, 830], "static_dct": 831, "diagflat": [832, 833, 834, 835], "static_diagflat": 836, "diff": [837, 838, 839], "static_diff": 840, "dirichlet": [841, 842, 843, 844], "static_dirichlet": 845, "dsplit": [846, 847, 848, 849], "static_dsplit": 850, "dstack": [851, 852, 853, 854], "static_dstack": 855, "exp2": [856, 857, 858, 859], "static_exp2": 860, "fix": [861, 862, 863, 864], "static_fix": 865, "flatten": [866, 867, 868, 869], "static_flatten": 870, "fliplr": [871, 872, 873, 874], "static_fliplr": 875, "flipud": [876, 877, 878, 879], "static_flipud": 880, "float_pow": [881, 882, 883, 884], "static_float_pow": 885, "fmax": [886, 887, 888, 889], "static_fmax": 890, "fmod": [891, 892, 893, 894], "static_fmod": 895, "gamma": 896, "gcd": [897, 898, 899, 900], "static_gcd": 901, "hamming_window": [902, 903, 904], "static_hamming_window": 905, "hann_window": [906, 907, 908], "static_hann_window": 909, "heavisid": [910, 911, 912, 913], "static_heavisid": 914, "hsplit": [915, 916, 917, 918], "static_hsplit": 919, "hstack": [920, 921, 922, 923], "static_hstack": 924, "i0": [925, 926, 927, 928], "static_i0": 929, "is_ivy_sparse_arrai": 930, "is_native_sparse_arrai": 931, "isclos": [932, 933, 934, 935], "static_isclos": 936, "isin": [937, 938, 939, 940], "static_isin": 941, "isneginf": [942, 943, 944, 945], "static_isneginf": 946, "isposinf": [947, 948, 949, 950], "static_isposinf": 951, "kaiser_bessel_derived_window": [952, 953, 954], "static_kaiser_bessel_derived_window": 955, "kaiser_window": [956, 957, 958], "static_kaiser_window": 959, "kron": [960, 961, 962, 963], "static_kron": 964, "lcm": [965, 966, 967, 968], "static_lcm": 969, "logaddexp2": [970, 971, 972, 973], "static_logaddexp2": 974, "max_pool1d": [975, 976, 977, 978], "static_max_pool1d": 979, "max_pool2d": [980, 981, 982, 983], "static_max_pool2d": 984, "max_pool3d": [985, 986, 987, 988], "static_max_pool3d": 989, "median": [990, 991, 992, 993], "static_median": 994, "moveaxi": [995, 996, 997, 998], "static_moveaxi": 999, "msort": [1000, 1001, 1002, 1003], "static_msort": 1004, "nan_to_num": [1005, 1006, 1007, 1008], "static_nan_to_num": 1009, "nanmean": [1010, 1011, 1012, 1013], "static_nanmean": 1014, "nansum": [1015, 1016, 1017, 1018], "static_nansum": 1019, "native_sparse_arrai": 1020, "native_sparse_array_to_indices_values_and_shap": 1021, "ndenumer": 1022, "ndindex": 1023, "nextaft": [1024, 1025, 1026, 1027], "static_nextaft": 1028, "pad": [1029, 1030, 1031, 1032], "static_pad": 1033, "rot90": [1034, 1035, 1036, 1037], "static_rot90": 1038, "signbit": [1039, 1040, 1041, 1042], "static_signbit": 1043, "sinc": [1044, 1045, 1046, 1047], "static_sinc": 1048, "take_along_axi": [1049, 1051, 1052, 1053], "static_take_along_axi": 1050, "top_k": [1054, 1056, 1057, 1058], "static_top_k": 1055, "trapz": [1059, 1060, 1061], "triu_indic": [1062, 1064, 1065], "static_triu_indic": 1063, "unravel_index": [1066, 1068, 1069, 1070], "static_unravel_index": 1067, "vorbis_window": [1071, 1073, 1074], "static_vorbis_window": 1072, "vsplit": [1075, 1077, 1078, 1079], "static_vsplit": 1076, "vstack": [1080, 1082, 1083, 1084], "static_vstack": 1081, "zeta": [1085, 1087, 1088, 1089], "static_zeta": 1086, "all_equ": [1092, 1093, 1094, 1095], "static_all_equ": 1096, "arg_info": 1097, "arg_nam": 1098, "array_equ": [1099, 1100, 1101], "assert_supports_inplac": [1102, 1103, 1104, 1105], "static_assert_supports_inplac": 1106, "cache_fn": 1107, "clip_matrix_norm": [1108, 1109, 1110, 1111], "static_clip_matrix_norm": 1112, "clip_vector_norm": [1113, 1114, 1115, 1116], "static_clip_vector_norm": 1117, "container_typ": 1118, "current_backend_str": 1119, "default": [1120, 1121, 1122], "einops_rearrang": [1123, 1124, 1125, 1126], "static_einops_rearrang": 1127, "einops_reduc": [1128, 1129, 1130, 1131], "static_einops_reduc": 1132, "einops_repeat": [1133, 1134, 1135, 1136], "static_einops_repeat": 1137, "exist": [1138, 1139, 1140], "fourier_encod": [1141, 1142, 1143, 1144], "static_fourier_encod": 1145, "function_supported_devices_and_dtyp": 1146, "function_unsupported_devices_and_dtyp": 1147, "gather": [1148, 1149, 1150, 1151], "static_gath": 1152, "gather_nd": [1153, 1154, 1155, 1156], "static_gather_nd": 1157, "get_all_arrays_in_memori": 1158, "get_array_mod": 1159, "get_exception_trace_mod": 1160, "get_item": 1161, "get_min_bas": 1162, "get_min_denomin": 1163, "get_nestable_mod": 1164, "get_num_dim": [1165, 1166, 1167, 1168], "static_get_num_dim": 1169, "get_queue_timeout": 1170, "get_referrers_recurs": 1171, "get_show_func_wrapper_trace_mod": 1172, "get_tmp_dir": 1173, "has_nan": [1174, 1175, 1176, 1177], "static_has_nan": 1178, "inplace_arrays_support": 1179, "inplace_decr": [1180, 1181, 1182, 1183], "static_inplace_decr": 1184, "inplace_incr": [1185, 1186, 1187, 1188], "static_inplace_incr": 1189, "inplace_upd": [1190, 1191, 1192, 1193], "static_inplace_upd": 1194, "inplace_variables_support": 1195, "is_arrai": [1196, 1197, 1198, 1199], "static_is_arrai": 1200, "is_ivy_arrai": [1201, 1202, 1203, 1204], "static_is_ivy_arrai": 1205, "is_ivy_contain": [1206, 1207, 1208, 1209], "static_is_ivy_contain": 1210, "is_native_arrai": [1211, 1212, 1213, 1214], "static_is_native_arrai": 1215, "isscalar": 1216, "match_kwarg": 1217, "multiprocess": 1218, "num_arrays_in_memori": 1219, "print_all_arrays_in_memori": 1220, "scatter_flat": [1221, 1222, 1223, 1224], "static_scatter_flat": 1225, "scatter_nd": [1226, 1227, 1228, 1229], "static_scatter_nd": 1230, "set_array_mod": 1231, "set_exception_trace_mod": 1232, "set_min_bas": 1233, "set_min_denomin": 1234, "set_nestable_mod": 1235, "set_queue_timeout": 1236, "set_shape_array_mod": 1237, "set_show_func_wrapper_trace_mod": 1238, "set_tmp_dir": 1239, "shape_array_mod": 1241, "stable_divid": [1242, 1243, 1244, 1245], "static_stable_divid": 1246, "stable_pow": [1247, 1248, 1249, 1250], "static_stable_pow": 1251, "supports_inplace_upd": [1252, 1254, 1255, 1256], "static_supports_inplace_upd": 1253, "to_ivy_shap": 1257, "to_list": [1258, 1260, 1261], "static_to_list": 1259, "to_native_shap": 1262, "to_numpi": [1263, 1265, 1266, 1267], "static_to_numpi": 1264, "to_scalar": [1268, 1270, 1271, 1272], "static_to_scalar": 1269, "try_else_non": 1273, "unset_array_mod": 1274, "unset_exception_trace_mod": 1275, "unset_nestable_mod": 1276, "unset_queue_timeout": 1277, "unset_shape_array_mod": 1278, "unset_show_func_wrapper_trace_mod": 1279, "value_is_nan": [1280, 1282, 1283, 1284], "static_value_is_nan": 1281, "vmap": 1285, "gradienttrack": 1287, "adam_step": [1288, 1289, 1290, 1291], "adam_upd": [1292, 1293, 1294, 1295], "execute_with_gradi": 1296, "grad": 1297, "gradient_descent_upd": [1298, 1299, 1300, 1301], "jac": 1302, "lamb_upd": [1303, 1304, 1305, 1306], "lars_upd": [1307, 1308, 1309, 1310], "optimizer_upd": [1311, 1312, 1313, 1314], "set_with_grad": 1315, "stop_gradi": [1316, 1318, 1319, 1320], "static_stop_gradi": 1317, "unset_with_grad": 1321, "value_and_grad": 1322, "with_grad": 1323, "conv": 1325, "conv1d": [1326, 1327, 1328, 1329, 1836], "static_conv1d": 1330, "conv1d_transpos": [1331, 1332, 1333, 1334], "static_conv1d_transpos": 1335, "conv2d": [1336, 1337, 1338, 1339, 1838], "static_conv2d": 1340, "conv2d_transpos": [1341, 1342, 1343], "static_conv2d_transpos": 1344, "conv3d": [1345, 1346, 1347, 1348, 1840], "static_conv3d": 1349, "conv3d_transpos": [1350, 1351, 1352, 1353], "static_conv3d_transpos": 1354, "conv_general_dil": 1355, "conv_general_transpos": 1356, "deconv_length": 1357, "depthwise_conv2d": [1358, 1359, 1360, 1361], "static_depthwise_conv2d": 1362, "dropout": [1363, 1364, 1365, 1366, 1843], "static_dropout": 1367, "dropout1d": [1368, 1369, 1370, 1371], "static_dropout1d": 1372, "fft": 1373, "get_x_data_format": 1374, "handle_pad": 1375, "static_linear": 1380, "lstm_updat": [1381, 1382, 1383, 1384], "static_lstm_upd": 1385, "multi_head_attent": [1386, 1387, 1388, 1389], "static_multi_head_attent": 1390, "scaled_dot_product_attent": [1391, 1392, 1393, 1394], "static_scaled_dot_product_attent": 1395, "choleski": [1397, 1398, 1399, 1400], "static_choleski": 1401, "cross": [1402, 1403, 1404, 1405], "static_cross": 1406, "det": [1407, 1408, 1409, 1410], "static_det": 1411, "diag": [1412, 1413, 1414, 1415], "static_diag": 1416, "diagon": [1417, 1418, 1419, 1420], "static_diagon": 1421, "eigh": [1422, 1423, 1424, 1425], "static_eigh": 1426, "eigvalsh": [1427, 1428, 1429, 1430], "static_eigvalsh": 1431, "inner": [1432, 1433, 1434, 1435], "static_inn": 1436, "inv": [1437, 1438, 1439, 1440], "static_inv": 1441, "matmul": [1442, 1443, 1444, 1445], "static_matmul": 1446, "matrix_norm": [1447, 1448, 1449, 1450], "static_matrix_norm": 1451, "matrix_pow": [1452, 1453, 1454], "static_matrix_pow": 1455, "matrix_rank": [1456, 1457, 1458, 1459], "static_matrix_rank": 1460, "matrix_transpos": [1461, 1462, 1463, 1464], "static_matrix_transpos": 1465, "outer": [1466, 1467, 1468, 1469], "static_out": 1470, "pinv": [1471, 1472, 1473, 1474], "static_pinv": 1475, "qr": [1476, 1477, 1478, 1479], "static_qr": 1480, "slogdet": [1481, 1482, 1483, 1484], "static_slogdet": 1485, "solv": [1486, 1487, 1488, 1489], "static_solv": 1490, "svd": [1491, 1493, 1494, 1495], "static_svd": 1492, "svdval": [1496, 1498, 1499, 1500], "static_svdv": 1497, "tensordot": [1501, 1503, 1504], "static_tensordot": 1502, "trace": [1505, 1507, 1508, 1509], "static_trac": 1506, "vander": [1510, 1512, 1513, 1514], "static_vand": 1511, "vecdot": [1515, 1517, 1518, 1519], "static_vecdot": 1516, "vector_norm": [1520, 1522, 1523, 1524], "static_vector_norm": 1521, "vector_to_skew_symmetric_matrix": [1525, 1527, 1528, 1529], "static_vector_to_skew_symmetric_matrix": 1526, "binary_cross_entropi": [1531, 1532, 1533, 1534], "static_binary_cross_entropi": 1535, "cross_entropi": [1536, 1537, 1538, 1539], "static_cross_entropi": 1540, "sparse_cross_entropi": [1541, 1542, 1543, 1544], "static_sparse_cross_entropi": 1545, "clip": [1547, 1548, 1549, 1550], "static_clip": 1551, "concat": [1552, 1553, 1554, 1555], "static_concat": 1556, "constant_pad": [1557, 1558, 1559, 1560], "static_constant_pad": 1561, "expand_dim": [1562, 1563, 1564, 1565], "static_expand_dim": 1566, "flip": [1567, 1568, 1569, 1570], "static_flip": 1571, "permute_dim": [1572, 1573, 1574, 1575], "static_permute_dim": 1576, "repeat": [1577, 1578, 1579, 1580], "static_repeat": 1581, "reshap": [1582, 1583, 1584, 1585], "static_reshap": 1586, "static_rol": 1591, "split": [1592, 1593, 1594, 1595], "static_split": 1596, "squeez": [1597, 1598, 1599, 1600], "static_squeez": 1601, "stack": [1602, 1603, 1604, 1605], "static_stack": 1606, "swapax": [1607, 1609, 1610, 1611], "static_swapax": 1608, "tile": [1612, 1614, 1615, 1616], "static_til": 1613, "unstack": [1617, 1619, 1620, 1621], "static_unstack": 1618, "zero_pad": [1622, 1624, 1625, 1626], "static_zero_pad": 1623, "meta": 1627, "fomaml_step": 1628, "maml_step": 1629, "reptile_step": 1630, "nest": 1631, "all_nested_indic": 1632, "copy_nest": 1633, "index_nest": 1634, "insert_into_nest_at_index": 1635, "insert_into_nest_at_indic": 1636, "map": 1637, "map_nest_at_index": 1638, "map_nest_at_indic": 1639, "multi_index_nest": 1640, "nested_ani": 1641, "nested_argwher": 1642, "nested_map": 1643, "nested_multi_map": 1644, "prune_nest_at_index": 1645, "prune_nest_at_indic": 1646, "set_nest_at_index": 1647, "set_nest_at_indic": 1648, "layer_norm": [1650, 1651, 1652, 1653], "multinomi": [1655, 1656, 1657, 1658], "static_multinomi": 1659, "randint": [1660, 1661, 1662, 1663], "static_randint": 1664, "random_norm": [1665, 1666, 1667, 1668], "static_random_norm": 1669, "random_uniform": [1670, 1671, 1672, 1673], "static_random_uniform": 1674, "seed": 1675, "shuffl": [1676, 1677, 1678, 1679], "static_shuffl": 1680, "argmax": [1682, 1683, 1684, 1685], "static_argmax": 1686, "argmin": [1687, 1688, 1689, 1690], "static_argmin": 1691, "argwher": [1692, 1693, 1694, 1695], "static_argwher": 1696, "nonzero": [1697, 1698, 1699, 1700], "static_nonzero": 1701, "static_wher": 1703, "unique_al": [1708, 1710, 1711, 1712], "static_unique_al": 1709, "unique_count": [1713, 1715, 1716, 1717], "static_unique_count": 1714, "unique_invers": [1718, 1720, 1721, 1722], "static_unique_invers": 1719, "unique_valu": [1723, 1725, 1726, 1727], "static_unique_valu": 1724, "argsort": [1729, 1730, 1731, 1732], "static_argsort": 1733, "searchsort": [1734, 1735, 1736, 1737], "static_searchsort": 1738, "static_sort": 1743, "cumprod": [1745, 1746, 1747, 1748], "static_cumprod": 1749, "cumsum": [1750, 1751, 1752, 1753], "static_cumsum": 1754, "einsum": [1755, 1756, 1757, 1758], "max": [1759, 1760, 1761, 1762], "mean": [1763, 1764, 1765, 1766], "min": [1767, 1768, 1769, 1770], "prod": [1771, 1772, 1773, 1774], "std": [1775, 1776, 1777, 1778], "sum": [1779, 1781, 1782, 1783], "static_sum": 1780, "var": [1784, 1786, 1787, 1788], "static_var": 1785, "all": [1790, 1791, 1792, 1793], "static_al": 1794, "ani": [1795, 1796, 1797, 1798], "static_ani": 1799, "glossari": 1800, "content": 1801, "overview": 1801, "quick": 1801, "start": 1801, "citat": 1801, "inspect": 1804, "add_array_spec": 1805, "fn_array_spec": 1806, "relat": 1807, "infrastructur": [1809, 1817], "llvm": 1809, "mlir": 1809, "oneapi": 1809, "exchang": [1810, 1817], "onnx": 1810, "nnef": 1810, "coreml": 1810, "matlab": 1811, "scipi": 1811, "torch": [1811, 1812], "scikit": 1811, "learn": 1811, "theano": 1811, "panda": 1811, "julia": 1811, "apach": [1811, 1814], "spark": 1811, "mllib": 1811, "caff": 1811, "chainer": 1811, "tensorflow": 1811, "1": 1811, "mxnet": 1811, "cntk": 1811, "pytorch": 1811, "flux": 1811, "jax": 1811, "2": 1811, "dex": 1811, "languag": 1811, "tracer": [1812, 1817], "tf": 1812, "jaxpr": 1812, "jit": 1812, "fx": 1812, "compani": [1813, 1817], "quansight": 1813, "modular": 1813, "octoml": 1813, "multi": [1814, 1817], "vendor": [1814, 1815, 1816, 1817], "tvm": 1814, "xla": 1814, "gcc": 1814, "specif": [1815, 1816, 1817], "tensorrt": 1815, "cuda": 1815, "icc": 1816, "icx": 1816, "nvcc": 1816, "doe": 1817, "eagerpi": 1818, "kera": 1818, "thinc": 1818, "tensorli": 1818, "neuropod": 1818, "geglu": 1821, "to_ivy_modul": 1824, "firstlayersiren": 1827, "glorotuniform": 1828, "kaimingnorm": 1830, "Ones": 1831, "siren": 1832, "uniform": 1833, "conv1dtranspos": 1837, "conv2dtranspos": 1839, "conv3dtranspos": 1841, "depthwiseconv2d": 1842, "lstm": 1844, "multiheadattent": 1846, "newtorchmodul": 1849, "layernorm": 1851, "adam": 1853, "lamb": 1854, "lar": 1855, "sgd": 1857, "sequenti": [1858, 1859], "verbos": 1861, "cprint": 1862}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})