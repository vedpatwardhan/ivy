Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[831,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[387,0,0,"-"],creation_functions:[388,0,0,"-"],data_type_functions:[391,0,0,"-"],data_types:[395,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[389,2,1,""],zeros:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[391,1,1,""],finfo:[393,2,1,""],iinfo:[394,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[391,3,1,""],bits:[391,3,1,""],eps:[391,3,1,""],max:[391,3,1,""],min:[391,3,1,""],smallest_normal:[391,3,1,""]},"ivy.functional.backends.numpy.core":{device:[433,0,0,"-"],general:[435,0,0,"-"],gradients:[469,0,0,"-"],image:[474,0,0,"-"],linear_algebra:[478,0,0,"-"],logic:[482,0,0,"-"],math:[483,0,0,"-"],random:[485,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[434,1,1,""],clear_mem_on_dev:[433,2,1,""],dev:[433,2,1,""],dev_from_str:[433,2,1,""],dev_to_str:[433,2,1,""],gpu_is_available:[433,2,1,""],num_gpus:[433,2,1,""],to_dev:[433,2,1,""],tpu_is_available:[433,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[434,3,1,""],start:[434,3,1,""],stop:[434,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[435,2,1,""],arange:[436,2,1,""],argmax:[437,2,1,""],argmin:[438,2,1,""],array:[439,2,1,""],asarray:[435,2,1,""],astype:[435,2,1,""],cast:[440,2,1,""],clip:[435,2,1,""],compile:[441,2,1,""],concatenate:[442,2,1,""],constant_pad:[435,2,1,""],container_types:[435,2,1,""],copy_array:[435,2,1,""],cumprod:[443,2,1,""],current_framework_str:[435,2,1,""],dtype:[444,2,1,""],dtype_bits:[445,2,1,""],dtype_from_str:[446,2,1,""],dtype_to_str:[447,2,1,""],equal:[435,2,1,""],floor:[435,2,1,""],floormod:[435,2,1,""],full:[448,2,1,""],gather:[449,2,1,""],gather_nd:[450,2,1,""],get_num_dims:[435,2,1,""],identity:[451,2,1,""],indices_where:[452,2,1,""],inplace_arrays_supported:[435,2,1,""],inplace_decrement:[453,2,1,""],inplace_increment:[454,2,1,""],inplace_update:[455,2,1,""],inplace_variables_supported:[435,2,1,""],is_array:[456,2,1,""],linear_resample:[457,2,1,""],linspace:[458,2,1,""],logspace:[459,2,1,""],matmul:[435,2,1,""],meshgrid:[435,2,1,""],multiprocessing:[435,2,1,""],one_hot:[460,2,1,""],ones_like:[461,2,1,""],round:[435,2,1,""],scatter_flat:[462,2,1,""],scatter_nd:[463,2,1,""],shape:[435,2,1,""],split:[464,2,1,""],squeeze:[465,2,1,""],to_list:[435,2,1,""],to_numpy:[435,2,1,""],to_scalar:[435,2,1,""],transpose:[466,2,1,""],unstack:[467,2,1,""],where:[435,2,1,""],zero_pad:[435,2,1,""],zeros_like:[468,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[470,2,1,""],is_variable:[471,2,1,""],stop_gradient:[472,2,1,""],variable:[473,2,1,""],variable_data:[469,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[475,2,1,""],gradient_image:[476,2,1,""],stack_images:[477,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[479,2,1,""],qr:[480,2,1,""],vector_to_skew_symmetric_matrix:[481,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[484,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[486,2,1,""],randint:[485,2,1,""],random_normal:[485,2,1,""],random_uniform:[485,2,1,""],seed:[485,2,1,""],shuffle:[485,2,1,""]},"ivy.functional.ivy":{array_api:[832,0,0,"-"],core:[868,0,0,"-"],nn:[1207,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[833,0,0,"-"],creation_functions:[834,0,0,"-"],data_type_functions:[837,0,0,"-"],data_types:[840,0,0,"-"],elementwise_functions:[841,0,0,"-"],function_and_method_signatures:[854,0,0,"-"],linear_algebra:[855,0,0,"-"],manipulation_functions:[858,0,0,"-"],searching_functions:[860,0,0,"-"],set_functions:[861,0,0,"-"],sorting_functions:[862,0,0,"-"],statistical_functions:[864,0,0,"-"],utility_functions:[865,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[833,4,1,""],nan:[833,4,1,""],pi:[833,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[835,2,1,""],zeros:[836,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[838,2,1,""],iinfo:[839,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[842,2,1,""],bitwise_and:[843,2,1,""],ceil:[844,2,1,""],cos:[845,2,1,""],cosh:[846,2,1,""],isfinite:[847,2,1,""],isnan:[848,2,1,""],less:[849,2,1,""],log1p:[850,2,1,""],log2:[851,2,1,""],logical_not:[852,2,1,""],sqrt:[853,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[856,2,1,""],vector_norm:[857,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[859,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[863,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[866,2,1,""],any:[867,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[869,0,0,"-"],compilation:[908,0,0,"-"],device:[910,0,0,"-"],dtype:[960,0,0,"-"],general:[984,0,0,"-"],gradients:[1081,0,0,"-"],image:[1097,0,0,"-"],linalg:[1104,0,0,"-"],logic:[1112,0,0,"-"],math:[1115,0,0,"-"],meta:[1131,0,0,"-"],multi_node:[1135,0,0,"-"],nest:[1179,0,0,"-"],random:[1191,0,0,"-"],reductions:[1198,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[870,2,1,""],builtin_add:[871,2,1,""],builtin_and:[872,2,1,""],builtin_bool:[873,2,1,""],builtin_contains:[874,2,1,""],builtin_deepcopy:[875,2,1,""],builtin_dir:[876,2,1,""],builtin_eq:[877,2,1,""],builtin_float:[878,2,1,""],builtin_floordiv:[879,2,1,""],builtin_ge:[880,2,1,""],builtin_getattr:[881,2,1,""],builtin_getattribute:[882,2,1,""],builtin_getitem:[883,2,1,""],builtin_gt:[884,2,1,""],builtin_int:[885,2,1,""],builtin_invert:[886,2,1,""],builtin_le:[887,2,1,""],builtin_lt:[888,2,1,""],builtin_mul:[889,2,1,""],builtin_ne:[890,2,1,""],builtin_neg:[891,2,1,""],builtin_or:[892,2,1,""],builtin_pos:[893,2,1,""],builtin_pow:[894,2,1,""],builtin_radd:[895,2,1,""],builtin_rand:[896,2,1,""],builtin_rfloordiv:[897,2,1,""],builtin_rmul:[898,2,1,""],builtin_ror:[899,2,1,""],builtin_rpow:[900,2,1,""],builtin_rsub:[901,2,1,""],builtin_rtruediv:[902,2,1,""],builtin_rxor:[903,2,1,""],builtin_setitem:[904,2,1,""],builtin_sub:[905,2,1,""],builtin_truediv:[906,2,1,""],builtin_xor:[907,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[909,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[910,1,1,""],DevClonedItem:[912,1,1,""],DevClonedIter:[913,1,1,""],DevClonedNest:[914,1,1,""],DevDistItem:[915,1,1,""],DevDistIter:[916,1,1,""],DevDistNest:[917,1,1,""],DevManager:[910,1,1,""],DevMapper:[919,1,1,""],DevMapperMultiProc:[920,1,1,""],MultiDev:[910,1,1,""],MultiDevItem:[922,1,1,""],MultiDevIter:[923,1,1,""],MultiDevNest:[924,1,1,""],Profiler:[925,1,1,""],clear_mem_on_dev:[926,2,1,""],default_device:[927,2,1,""],dev:[928,2,1,""],dev_clone:[929,2,1,""],dev_clone_array:[930,2,1,""],dev_clone_iter:[931,2,1,""],dev_clone_nest:[932,2,1,""],dev_dist:[933,2,1,""],dev_dist_array:[934,2,1,""],dev_dist_iter:[935,2,1,""],dev_dist_nest:[936,2,1,""],dev_from_str:[937,2,1,""],dev_to_str:[938,2,1,""],dev_unify:[939,2,1,""],dev_unify_array:[940,2,1,""],dev_unify_iter:[941,2,1,""],dev_unify_nest:[942,2,1,""],dev_util:[943,2,1,""],get_all_arrays_on_dev:[944,2,1,""],gpu_is_available:[945,2,1,""],num_arrays_on_dev:[946,2,1,""],num_cpu_cores:[947,2,1,""],num_gpus:[948,2,1,""],percent_used_mem_on_dev:[949,2,1,""],print_all_arrays_on_dev:[950,2,1,""],set_default_device:[951,2,1,""],set_split_factor:[952,2,1,""],split_factor:[953,2,1,""],split_func_call:[954,2,1,""],to_dev:[955,2,1,""],total_mem_on_dev:[956,2,1,""],tpu_is_available:[957,2,1,""],unset_default_device:[958,2,1,""],used_mem_on_dev:[959,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[910,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[910,3,1,""],da_tune_step:[910,3,1,""],dim_size:[910,3,1,""],ds_tune_step:[910,3,1,""],map:[910,3,1,""],repeated_config_check:[910,3,1,""],tune_step:[910,3,1,""],tuned:[910,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[919,3,1,""],map:[919,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[920,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[910,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[922,3,1,""],items:[922,3,1,""],keys:[922,3,1,""],shape:[922,3,1,""],values:[922,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[923,3,1,""],at_dev:[923,3,1,""],at_devs:[923,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[924,3,1,""],at_dev:[924,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[925,3,1,""],start:[925,3,1,""],stop:[925,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[960,1,1,""],DefaultFloatDtype:[960,1,1,""],DefaultIntDtype:[960,1,1,""],astype:[960,2,1,""],cast:[964,2,1,""],closest_valid_dtype:[965,2,1,""],convert_dtype:[966,2,1,""],default_dtype:[967,2,1,""],default_float_dtype:[968,2,1,""],default_int_dtype:[969,2,1,""],dtype:[970,2,1,""],dtype_bits:[971,2,1,""],dtype_from_str:[972,2,1,""],dtype_to_str:[973,2,1,""],invalid_dtype:[974,2,1,""],is_float_dtype:[975,2,1,""],is_int_dtype:[976,2,1,""],set_default_dtype:[977,2,1,""],set_default_float_dtype:[978,2,1,""],set_default_int_dtype:[979,2,1,""],unset_default_dtype:[980,2,1,""],unset_default_float_dtype:[981,2,1,""],unset_default_int_dtype:[982,2,1,""],valid_dtype:[983,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[960,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[960,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[960,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1008,2,1,""],abs:[985,2,1,""],all_equal:[986,2,1,""],arange:[987,2,1,""],arg_names:[988,2,1,""],argmax:[989,2,1,""],argmin:[990,2,1,""],array:[991,2,1,""],array_equal:[992,2,1,""],arrays_equal:[993,2,1,""],asarray:[984,2,1,""],assert_supports_inplace:[994,2,1,""],broadcast_to:[995,2,1,""],cache_fn:[996,2,1,""],clip:[997,2,1,""],clip_matrix_norm:[998,2,1,""],clip_vector_norm:[999,2,1,""],concatenate:[1000,2,1,""],constant_pad:[1001,2,1,""],container_types:[1002,2,1,""],copy_array:[1003,2,1,""],cross:[1004,2,1,""],cumprod:[1005,2,1,""],cumsum:[1006,2,1,""],current_framework_str:[1007,2,1,""],einops_rearrange:[1009,2,1,""],einops_reduce:[1010,2,1,""],einops_repeat:[1011,2,1,""],equal:[1012,2,1,""],exists:[1013,2,1,""],expand_dims:[1014,2,1,""],floor:[1015,2,1,""],floormod:[1016,2,1,""],fourier_encode:[1017,2,1,""],full:[1018,2,1,""],gather:[1019,2,1,""],gather_nd:[1020,2,1,""],get_all_arrays_in_memory:[1021,2,1,""],get_min_base:[1022,2,1,""],get_min_denominator:[1023,2,1,""],get_num_dims:[1024,2,1,""],get_referrers_recursive:[1025,2,1,""],has_nans:[1026,2,1,""],identity:[1027,2,1,""],indices_where:[1028,2,1,""],inplace_arrays_supported:[1029,2,1,""],inplace_decrement:[1030,2,1,""],inplace_increment:[1031,2,1,""],inplace_update:[1032,2,1,""],inplace_variables_supported:[1033,2,1,""],is_array:[1034,2,1,""],isinf:[1035,2,1,""],linear_resample:[1036,2,1,""],linspace:[1037,2,1,""],logspace:[1038,2,1,""],match_kwargs:[1039,2,1,""],matmul:[1040,2,1,""],maximum:[1041,2,1,""],meshgrid:[1042,2,1,""],minimum:[1043,2,1,""],multiprocessing:[1044,2,1,""],num_arrays_in_memory:[1045,2,1,""],one_hot:[1046,2,1,""],ones:[1047,2,1,""],ones_like:[1048,2,1,""],print_all_arrays_in_memory:[1049,2,1,""],queue_timeout:[1050,2,1,""],repeat:[1051,2,1,""],reshape:[1052,2,1,""],round:[1053,2,1,""],scatter_flat:[1054,2,1,""],scatter_nd:[1055,2,1,""],set_min_base:[1056,2,1,""],set_min_denominator:[1057,2,1,""],set_queue_timeout:[1058,2,1,""],set_tmp_dir:[1059,2,1,""],shape:[1060,2,1,""],shape_to_tuple:[1061,2,1,""],split:[1062,2,1,""],squeeze:[1063,2,1,""],stable_divide:[1064,2,1,""],stable_pow:[1065,2,1,""],stack:[1066,2,1,""],supports_inplace:[1067,2,1,""],swapaxes:[1068,2,1,""],tile:[1069,2,1,""],tmp_dir:[1070,2,1,""],to_list:[1071,2,1,""],to_numpy:[1072,2,1,""],to_scalar:[1073,2,1,""],transpose:[1074,2,1,""],try_else_none:[1075,2,1,""],unstack:[1076,2,1,""],value_is_nan:[1077,2,1,""],where:[1078,2,1,""],zero_pad:[1079,2,1,""],zeros_like:[1080,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1081,1,1,""],adam_step:[1083,2,1,""],adam_update:[1084,2,1,""],execute_with_gradients:[1085,2,1,""],gradient_descent_update:[1086,2,1,""],is_variable:[1087,2,1,""],lamb_update:[1088,2,1,""],lars_update:[1089,2,1,""],optimizer_update:[1090,2,1,""],set_with_grads:[1091,2,1,""],stop_gradient:[1092,2,1,""],unset_with_grads:[1093,2,1,""],variable:[1094,2,1,""],variable_data:[1095,2,1,""],with_grads:[1096,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1081,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1098,2,1,""],float_img_to_uint8_img:[1099,2,1,""],gradient_image:[1100,2,1,""],random_crop:[1101,2,1,""],stack_images:[1102,2,1,""],uint8_img_to_float_img:[1103,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1105,2,1,""],inv:[1106,2,1,""],matrix_norm:[1107,2,1,""],pinv:[1108,2,1,""],qr:[1109,2,1,""],svd:[1110,2,1,""],vector_to_skew_symmetric_matrix:[1111,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1113,2,1,""],logical_or:[1114,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1116,2,1,""],acosh:[1117,2,1,""],asin:[1118,2,1,""],atan2:[1120,2,1,""],atan:[1119,2,1,""],atanh:[1121,2,1,""],cosh:[1122,2,1,""],divide:[1123,2,1,""],erf:[1124,2,1,""],exp:[1125,2,1,""],log:[1126,2,1,""],sin:[1127,2,1,""],sinh:[1128,2,1,""],tan:[1129,2,1,""],tanh:[1130,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1132,2,1,""],maml_step:[1133,2,1,""],reptile_step:[1134,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1135,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1180,2,1,""],copy_nest:[1181,2,1,""],index_nest:[1182,2,1,""],map:[1183,2,1,""],map_nest_at_index:[1184,2,1,""],map_nest_at_indices:[1185,2,1,""],multi_index_nest:[1186,2,1,""],nested_indices_where:[1187,2,1,""],nested_map:[1188,2,1,""],set_nest_at_index:[1189,2,1,""],set_nest_at_indices:[1190,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1192,2,1,""],randint:[1193,2,1,""],random_normal:[1194,2,1,""],random_uniform:[1195,2,1,""],seed:[1196,2,1,""],shuffle:[1197,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1199,2,1,""],reduce_max:[1200,2,1,""],reduce_mean:[1201,2,1,""],reduce_min:[1202,2,1,""],reduce_prod:[1203,2,1,""],reduce_std:[1204,2,1,""],reduce_sum:[1205,2,1,""],reduce_var:[1206,2,1,""]},"ivy.functional.ivy.nn":{activations:[1208,0,0,"-"],layers:[1216,0,0,"-"],losses:[1229,0,0,"-"],norms:[1233,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1209,2,1,""],leaky_relu:[1210,2,1,""],relu:[1211,2,1,""],sigmoid:[1212,2,1,""],softmax:[1213,2,1,""],softplus:[1214,2,1,""],tanh:[1215,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1217,2,1,""],conv1d_transpose:[1218,2,1,""],conv2d:[1219,2,1,""],conv2d_transpose:[1220,2,1,""],conv3d:[1221,2,1,""],conv3d_transpose:[1222,2,1,""],depthwise_conv2d:[1223,2,1,""],dropout:[1224,2,1,""],linear:[1225,2,1,""],lstm_update:[1226,2,1,""],multi_head_attention:[1227,2,1,""],scaled_dot_product_attention:[1228,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1230,2,1,""],cross_entropy:[1231,2,1,""],sparse_cross_entropy:[1232,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1234,2,1,""]},"ivy.graph_compiler":{compiler:[1235,0,0,"-"],globals:[1238,0,0,"-"],graph:[1241,0,0,"-"],helpers:[1243,0,0,"-"],op_logging:[1244,0,0,"-"],param:[1245,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1236,2,1,""],show_graph:[1237,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1239,2,1,""],log_global_inference_rel_times:[1240,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1241,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1241,3,1,""],add_fn_to_dict:[1241,3,1,""],add_param:[1241,3,1,""],compiled:[1241,3,1,""],connect:[1241,3,1,""],debug_info:[1241,3,1,""],get_param:[1241,3,1,""],get_param_recursive:[1241,3,1,""],include_generators:[1241,3,1,""],increment_param_count:[1241,3,1,""],log_all_ops:[1241,3,1,""],params_all_empty:[1241,3,1,""],save_debug_info:[1241,3,1,""],set_param:[1241,3,1,""],show:[1241,3,1,""],show_debug_info:[1241,3,1,""],update_inference_times:[1241,3,1,""],with_array_caching:[1241,3,1,""]},"ivy.graph_compiler.param":{Param:[1245,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1245,3,1,""],count:[1245,3,1,""],depth:[1245,3,1,""],get:[1245,3,1,""],is_var:[1245,3,1,""],ptype:[1245,3,1,""],set:[1245,3,1,""],set_count:[1245,3,1,""],shape:[1245,3,1,""]},"ivy.stateful":{activations:[1250,0,0,"-"],converters:[1253,0,0,"-"],initializers:[1255,0,0,"-"],layers:[1264,0,0,"-"],module:[1276,0,0,"-"],norms:[1278,0,0,"-"],optimizers:[1280,0,0,"-"],sequential:[1286,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1251,1,1,""],GELU:[1252,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1251,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1252,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1254,2,1,""]},"ivy.stateful.initializers":{Constant:[1255,1,1,""],FirstLayerSiren:[1257,1,1,""],GlorotUniform:[1258,1,1,""],KaimingNormal:[1255,1,1,""],Ones:[1260,1,1,""],Siren:[1261,1,1,""],Uniform:[1255,1,1,""],Zeros:[1263,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1260,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1261,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1263,3,1,""]},"ivy.stateful.layers":{Conv1D:[1265,1,1,""],Conv1DTranspose:[1266,1,1,""],Conv2D:[1267,1,1,""],Conv2DTranspose:[1268,1,1,""],Conv3D:[1269,1,1,""],Conv3DTranspose:[1270,1,1,""],DepthwiseConv2D:[1271,1,1,""],Dropout:[1272,1,1,""],LSTM:[1273,1,1,""],Linear:[1274,1,1,""],MultiHeadAttention:[1275,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1270,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1272,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1273,3,1,""],get_initial_state:[1273,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1274,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1275,3,1,""]},"ivy.stateful.module":{Module:[1277,1,1,""]},"ivy.stateful.module.Module":{__init__:[1277,3,1,""],build:[1277,3,1,""],build_mode:[1277,3,1,""],built:[1277,3,1,""],check_submod_rets:[1277,3,1,""],compile_graph:[1277,3,1,""],compile_on_next_step:[1277,3,1,""],get_mod_key:[1277,3,1,""],mod_depth:[1277,3,1,""],mod_height:[1277,3,1,""],mod_with_top_mod_key_chain:[1277,3,1,""],save_weights:[1277,3,1,""],show_graph:[1277,3,1,""],show_mod_in_top_mod:[1277,3,1,""],show_structure:[1277,3,1,""],show_v_in_top_v:[1277,3,1,""],sub_mods:[1277,3,1,""],track_submod_call_order:[1277,3,1,""],track_submod_rets:[1277,3,1,""],v_with_top_v_key_chains:[1277,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1279,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1279,3,1,""]},"ivy.stateful.optimizers":{Adam:[1281,1,1,""],LAMB:[1282,1,1,""],LARS:[1283,1,1,""],Optimizer:[1284,1,1,""],SGD:[1285,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],state:[1283,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1284,3,1,""],compile_graph:[1284,3,1,""],compile_on_next_step:[1284,3,1,""],set_state:[1284,3,1,""],show_graph:[1284,3,1,""],step:[1284,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1285,3,1,""],set_state:[1285,3,1,""],state:[1285,3,1,""]},"ivy.stateful.sequential":{Sequential:[1287,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1287,3,1,""]},"ivy.verbosity":{cprint:[1292,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1291,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1280,1281,1282],"02886":1247,"100":[1135,1247,1289],"141592653589793":833,"2021":1247,"2102":1247,"360":[841,845,1115,1127,1129],"718281828459045":833,"754":[833,837,838,841,853],"999":[1081,1083,1084,1088,1280,1281,1282],"abstract":[910,925,1247,1280,1284],"boolean":[40,41,841,843,848,852,910,945,957,960,974,983,984,986,992,993,1026,1028,1029,1033,1034,1035,1067,1077,1081,1087,1112,1113,1114,1131,1132,1133,1135],"break":43,"case":[15,18,19,40,41,42,43,841,842,910,949,956,959,984,987,1052,1054,1055,1104,1107,1109,1135,1179,1182,1186,1247,1264,1275,1276,1277,1280,1284,1293],"catch":[984,1008],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,391,433,434,837,839,910,912,913,914,915,916,917,919,920,922,923,924,925,937,938,960,984,988,1039,1081,1095,1135,1179,1181,1188,1229,1231,1232,1241,1245,1247,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],"default":[15,18,19,40,41,42,43,834,835,836,855,856,857,858,859,862,863,865,866,867,908,909,910,919,920,927,928,932,933,934,935,936,939,940,941,942,949,952,953,954,959,960,967,968,969,970,984,986,987,989,990,998,999,1000,1001,1004,1005,1006,1017,1018,1019,1024,1026,1027,1036,1038,1039,1042,1044,1047,1050,1051,1054,1055,1058,1060,1062,1064,1065,1074,1076,1077,1081,1084,1086,1087,1088,1089,1090,1092,1096,1104,1107,1109,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1191,1192,1194,1195,1198,1200,1201,1202,1203,1204,1205,1206,1208,1209,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],"final":[40,41,43,984,1017,1037,1038,1135,1264,1275,1290],"float":[40,41,42,43,833,834,835,836,837,838,841,842,853,855,857,869,888,894,910,919,920,943,949,952,956,959,960,968,975,984,987,998,999,1001,1017,1018,1022,1023,1038,1056,1057,1058,1064,1065,1081,1083,1084,1086,1088,1089,1090,1097,1099,1103,1115,1123,1131,1132,1133,1134,1135,1191,1194,1195,1208,1210,1216,1224,1227,1228,1229,1230,1231,1232,1233,1234,1264,1272,1275,1278,1279,1280,1281,1282,1283,1284,1285],"function":[15,40,41,43,389,390,393,394,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,833,835,836,838,839,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,859,863,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1247,1250,1251,1252,1280,1283,1284,1285,1289,1290,1293],"import":[43,1247,1290,1293],"int":[40,41,42,43,388,389,390,485,834,835,836,837,838,839,855,856,857,858,859,862,863,865,866,867,869,888,894,908,909,910,932,933,934,935,936,939,940,941,942,947,948,954,960,969,971,976,984,989,990,995,1000,1001,1005,1006,1009,1010,1011,1014,1017,1018,1019,1024,1027,1036,1037,1038,1046,1047,1051,1052,1054,1055,1060,1061,1062,1063,1066,1068,1069,1074,1076,1079,1081,1083,1084,1088,1097,1101,1102,1104,1107,1131,1132,1133,1134,1135,1179,1188,1191,1192,1193,1195,1196,1198,1200,1201,1202,1203,1204,1205,1206,1208,1213,1216,1217,1218,1219,1220,1221,1222,1223,1227,1229,1231,1232,1233,1234,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1278,1279],"long":[43,1216,1226],"new":[40,41,43,485,834,835,836,841,846,850,851,960,964,984,985,995,1009,1010,1011,1014,1017,1018,1019,1020,1047,1052,1054,1055,1056,1057,1064,1065,1066,1081,1084,1086,1088,1089,1090,1097,1099,1101,1103,1115,1117,1121,1122,1128,1130,1135,1179,1189,1190,1191,1192,1233,1234,1247,1253,1254,1264,1274,1278,1279,1280,1281,1282,1283,1284,1285,1290,1293],"public":[984,1002],"return":[15,16,17,18,19,40,41,42,43,485,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867,869,888,894,908,909,910,919,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,945,946,948,949,953,954,955,956,957,959,960,964,965,966,967,968,969,970,971,972,973,974,975,976,983,984,985,986,987,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1051,1052,1053,1054,1055,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1247,1253,1254,1264,1273,1274,1280,1284,1289,1290,1293],"short":[43,1216,1226,1247,1293],"static":[40,41,908,909],"super":1135,"true":[40,41,42,435,441,469,472,485,486,841,847,855,857,862,863,865,866,867,908,909,910,984,986,994,996,1013,1017,1026,1028,1077,1078,1081,1084,1086,1087,1088,1089,1090,1092,1104,1107,1131,1132,1133,1134,1135,1179,1180,1187,1191,1192,1198,1200,1201,1202,1203,1204,1205,1206,1208,1209,1216,1224,1229,1230,1231,1232,1235,1236,1237,1241,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],"try":[40,41,984,1075,1135],"var":[40,41,1131,1132,1133,1293],"while":[40,41,42,1135],AND:[841,843,865,866,1112,1113],But:1293,For:[43,841,842,984,987,997,1066,1081,1087,1095,1104,1109,1115,1116,1247,1253,1254,1290,1293],Its:[1115,1119],NOT:[841,852],Not:833,One:[40,41,43,984,1010,1052,1191,1193,1293],Ones:[1247,1255],PRs:43,Such:[984,1002],That:1290,The:[15,16,17,18,19,40,41,42,43,841,842,843,845,847,849,853,855,857,858,859,862,863,865,866,867,869,888,894,908,909,910,919,920,926,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,949,952,953,954,955,956,959,960,964,965,966,971,972,973,974,983,984,987,991,992,995,996,998,999,1000,1001,1003,1004,1007,1008,1012,1017,1019,1020,1027,1030,1031,1032,1034,1036,1038,1040,1042,1044,1047,1048,1051,1052,1054,1055,1056,1057,1058,1061,1062,1063,1064,1065,1066,1069,1077,1080,1081,1083,1084,1086,1088,1089,1090,1092,1095,1097,1099,1101,1103,1104,1107,1109,1110,1115,1116,1118,1119,1123,1124,1125,1126,1127,1129,1131,1132,1133,1134,1135,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1290,1293],There:[43,1247,1290],These:[43,1247],Use:43,Used:[1179,1180,1187,1276,1277],Using:[1247,1248,1293],With:[40,41,1104,1107,1198,1200,1201,1202,1203,1204,1205,1206,1247,1289,1293],__array__:[984,991],__call__:[1264,1275,1276,1277],__del__:1135,__dict__:[1135,1290],__enter__:1135,__exit__:1135,__getitem__:1135,__getstate__:1135,__init__:[40,41,42,43,59,60,81,211,391,392,433,434,514,643,910,911,918,919,920,921,922,923,924,925,960,961,962,963,1081,1082,1135,1139,1146,1241,1242,1245,1246,1247,1250,1251,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],__iter__:1135,__len__:1135,__next__:1135,__pow__:43,__repr__:1135,_assign_vari:1289,_axi:1135,_base:[1179,1180,1187],_compute_node_da_ratio:1135,_compute_node_strs_da:1135,_concat_unify_arrai:1135,_counter:1135,_cur_framework:[43,1135],_da_direct:1135,_da_directions_flip:1135,_da_step_tim:1135,_da_tim:1135,_da_tune_count:1135,_data:1135,_delta_da_dim_s:1135,_delta_sf:1135,_dict:1135,_dim_siz:1135,_first_da_tune_step:1135,_first_ns_tune_step:1135,_fn:1135,_forward:[1247,1289],_get_kalman_param:1293,_get_prior:1293,_get_some_model:1293,_handle_flat_arrays_in_out:43,_index:[1179,1180,1187],_input_queu:1135,_length:1135,_max_depth:1135,_max_node_dim_step_ratio:1135,_max_node_dim_step_s:1135,_max_split_factor_step_s:1135,_mean_unify_arrai:1135,_min_bas:[984,1065,1233,1234,1278,1279],_min_denomin:[984,1064],_min_node_dim_s:1135,_min_sf_tune_step:1135,_min_unit_node_tune_step:1135,_model:1293,_native_wrapp:43,_node_mapp:1135,_node_percent_mem:1135,_node_str:1135,_node_str_da_ratio:1135,_node_strs_da:1135,_node_strs_kei:1135,_node_strs_n:1135,_node_util:1135,_ns_step_tim:1135,_ns_time:1135,_ns_tune_count:1135,_num_nod:1135,_num_work:1135,_observed_config:1135,_output_queu:1135,_paramet:1289,_percent_mem_inc_per_sf:1135,_percent_mem_inc_per_unit_da_dim:1135,_percent_util_inc_per_unit_da_dim:1135,_ret_fn:1135,_safety_factor:1135,_save_dir:1135,_shift_da_split:1135,_shift_n:1135,_slice:1135,_step:[1280,1284],_sum_unify_arrai:1135,_timeout:1135,_tune:1135,_tune_da:1135,_tune_n:1135,_tune_step:1135,_unit_da_tune_count:1135,_unroll_step:1293,_with_node_mappig:1135,_worker:1135,_worker_class:1135,_worker_fn:1135,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,910,919,925,1135,1276,1277,1280,1284],abil:1247,abl:[40,41],about:[837,838,839],abov:[43,1191,1193],above_height:[40,41],abs:[292,435,563,693,855,857,984,1135],absolut:[40,41,984,985],abstractmethod:1135,accept:[15,43,1247],access:[40,41,43,1290],accord:[40,41,837,838,984,1001,1019,1054,1055,1074,1079],accordingli:[855,857,865,866,867],accur:[59,391,433,434,910,922,923,924,925,960,1081,1241,1245,1255,1257,1258,1260,1261,1263],aco:[781,1115],acosh:[781,1115],across:[40,41,910,919,920,929,930,932,933,934,935,936,942,952,953,984,989,990,992,993,1135,1179,1183],act:43,activ:[1209,1210,1211,1212,1213,1214,1215,1247,1251,1252],actual:1290,adam:[1081,1083,1084,1088,1247,1280,1282,1289],adam_step:1081,adam_upd:1081,adapt:[1081,1089,1280,1283],add:[40,41,43,1135,1229,1230,1231,1232,1233,1234,1247,1278,1279,1290],add_fn_to_dict:1241,add_param:1241,added:[43,984,1064,1065,1286,1287],adding:[984,995],addit:[40,41,43,984,1009,1010,1011,1233,1234,1264,1274],address:43,adher:43,adjac:[984,987],adopt:[43,984,1002],affect:[984,987],affin:[1278,1279],after:[841,853,984,1036,1081,1084,1085,1086,1088,1089,1090,1097,1098,1233,1234,1280,1281,1282,1283,1284,1285,1293],after_1:[984,1001,1079],after_n:[984,1001,1079],again:43,against:[40,41,1104,1107,1198,1200,1201,1202,1203,1204,1205,1206],agnost:[43,1247,1289,1290],aim:1293,algebra:1104,algorithm:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271,1293],align:[40,41,43,984,995],aliv:[910,944,946,950,984,1021,1045,1049],all:[15,16,17,18,19,40,41,43,109,234,420,542,671,855,857,858,859,865,908,909,910,919,944,950,984,985,986,992,993,1002,1021,1027,1049,1063,1104,1109,1131,1132,1133,1134,1135,1179,1180,1181,1187,1188,1191,1192,1195,1198,1200,1201,1202,1203,1204,1205,1206,1216,1226,1247,1290,1293],all_depth:[40,41],all_equ:984,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1179,all_tru:[40,41],alloc:[43,910,1135],allow:[984,1037,1038,1039,1276,1277],allow_dupl:[984,1039],alon:[910,949,959,1135,1247],along:[40,41,43,485,855,856,857,858,859,862,863,865,866,867,910,933,934,935,936,939,940,941,942,954,984,1000,1005,1006,1019,1036,1037,1038,1051,1062,1066,1069,1076,1104,1107,1131,1132,1133,1134,1135,1191,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],alongsid:[1289,1290],alpha:[1208,1210],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,910,1135],also:[40,41,43,984,987,1081,1084,1131,1132,1133,1134,1179,1180,1181,1187,1188,1216,1225,1247,1264,1274,1289],altern:1289,alwai:[40,41,43,1081,1087,1092],among:[40,41],amount:[910,956,1135,1247],angl:[1115,1116,1120],ani:[15,16,17,18,19,40,41,43,109,234,420,542,671,865,908,909,910,912,915,919,920,922,931,932,935,936,941,984,986,987,991,1008,1009,1010,1011,1012,1013,1026,1034,1039,1064,1065,1081,1085,1135,1179,1180,1183,1187,1188,1189,1190,1191,1195,1247,1253,1254,1276,1277,1289,1290,1293],anoth:[40,41,43,960,966,1247],another_backend:43,anyth:[43,1293],anywai:43,apart:43,api:[1247,1248],appear:[43,984,1014],append:[40,41,1135],appli:[15,18,19,40,41,841,852,984,1009,1010,1011,1081,1088,1089,1104,1110,1112,1113,1114,1131,1132,1133,1179,1183,1186,1188,1208,1209,1210,1211,1212,1213,1214,1215,1216,1225,1227,1228,1233,1234,1247,1250,1251,1252,1278,1279],applic:[1179,1183,1188,1216,1227,1228,1247,1293],approxim:[43,841,842,850,851,869,894,1208,1209],arang:[129,292,435,485,563,693,984,1037,1038],arbitrari:[40,41,910,939,940,942,1135],arc:[1115,1120],arcco:[1115,1116],arctan:[1115,1119],area:[841,842,1247],arg:[15,16,17,40,41,43,59,63,910,919,932,936,942,954,984,1009,1010,1011,1055,1135,1235,1236,1237,1241,1253,1254,1276,1277],arg_nam:984,arg_stateful_idx:[1235,1236,1237,1241,1276,1277],argmax:[129,435,563,693,984],argmin:[129,435,563,693,984],args_clon:1135,args_dist:1135,args_to_ivi:[15,1247],args_to_n:[15,1247],args_uni:1135,argsort:[106,231,417,539,668,862],argument:[15,16,17,18,19,40,41,42,43,59,63,908,909,910,919,920,932,936,942,984,987,988,996,1008,1039,1055,1115,1116,1135,1179,1183,1253,1254,1276,1277],aris:[1247,1293],arithmet:[43,1198,1201,1204,1206],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:485,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,129,292,435,485,563,693,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867,888,894,910,928,929,930,933,934,935,936,939,940,941,942,944,946,950,954,955,960,964,970,975,976,984,985,986,987,989,990,992,993,994,995,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1024,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1040,1041,1042,1043,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1060,1062,1063,1066,1067,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1083,1084,1087,1088,1092,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1135,1179,1181,1188,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1247,1248,1264,1272,1273,1275,1280,1284,1289,1290],arrang:[984,1009],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,388,389,390,391,393,394,833,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867],array_api_methods_to_test:43,array_builtin:[43,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907],array_equ:[292,693,984],array_lik:[485,984,991],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,984],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1247],arraywithgener:[22,1247],arraywithgradi:[24,1247],arraywithimag:[26,1247],arraywithlinalg:[28,1247],arraywithlog:[30,1247],arraywithmath:[32,1247],arraywithmeta:[34,1247],arraywithrandom:[36,1247],arraywithreduct:[38,1247],arriv:[40,41,42],articl:1247,arxiv:1247,as_arrai:[40,41,984,1024,1060],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[433,435,444,910,928,960,967,968,969,970],as_tensor:435,as_vari:[40,41],as_zero:[40,41],asarrai:[435,984],asin:[781,1115],asinh:[85,396,518,647,841],aspect:[1097,1102],assert:[40,41,984,994,1135],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:984,associ:[43,1104,1111],assum:[1290,1293],astyp:[435,960],asynchron:[40,41,42],at_dev:[40,42,910,923,924],at_kei:[40,41],at_key_chain:[40,41],at_nod:1135,atan2:[781,1115],atan:[781,1115],atanh:[781,1115],attent:[43,1216,1227,1228,1264,1275],attribut:[0,6,40,41,837,838,839,984,1048,1080],audienc:[1247,1290],author:1247,automat:43,avail:[40,41,43,910,945,947,948,957,984,1010,1135],averag:[1081,1083,1084,1088,1131,1132,1133,1198,1201],average_across_step:[1131,1132,1133],avoid:[43,910,1135,1290],axes:[40,41,43,435,466,478,479,855,857,858,859,865,866,867,910,954,984,989,990,1001,1014,1068,1074,1079,1104,1107,1135,1198,1200,1201,1202,1203,1204,1205,1206],axes_length:[40,41,984,1009,1010,1011],axi:[40,41,435,437,438,442,443,449,457,458,459,464,465,467,855,856,857,858,859,862,863,865,866,867,910,912,915,922,933,934,935,936,939,940,941,942,954,984,989,990,1000,1001,1004,1005,1006,1014,1019,1036,1037,1038,1051,1062,1063,1066,1068,1069,1076,1079,1135,1191,1197,1198,1200,1201,1202,1203,1204,1205,1206,1208,1213,1229,1231,1232],axis0:[40,41,984,1068],axis1:[40,41,855,856,984,1068],axis2:[855,856],back:[43,1276,1277,1280,1284],backend:[15,17,19,40,41,388,389,390,391,393,394,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,910,945,948,957,960,966,974,983,984,1029,1033,1081,1084,1086,1088,1089,1090,1095,1135,1247,1248,1253,1254,1280,1281,1282,1283,1284,1285,1289,1290,1293],backend_nam:43,background:[1247,1290],backprop:1293,backward:[865,866,867,1289],band:[984,1017],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,391,433,434,435,459,841,850,851,869,894,910,912,913,914,915,916,917,919,920,922,923,924,925,960,984,1022,1038,1056,1065,1081,1135,1198,1199,1241,1245,1247,1250,1251,1252,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1293],basi:43,batch:[40,41,855,857,910,952,953,984,1017,1027,1097,1101,1104,1110,1131,1132,1133,1134,1135,1216,1225,1233,1234,1278,1279],batch_shap:[435,451,984,1027,1046,1097,1098,1099,1100,1101,1102,1103,1104,1111,1191,1192,1216,1226,1227,1228,1264,1273],batch_siz:[485,486,1135,1191,1192,1216,1217,1218,1219,1220,1221,1222,1223],bayesian:1293,becaus:[43,984,987],becom:[43,984,997,1115,1120,1293],been:[984,1009,1010,1011,1191,1192],befor:[40,41,43,910,954,1131,1132,1133,1135,1179,1188,1198,1200,1201,1202,1203,1204,1205,1206,1216,1227,1228,1293],before_1:[984,1001,1079],before_n:[984,1001,1079],begin:[1179,1180,1187,1290],behaviour:[43,1293],behind:[1081,1084,1086,1088,1089,1090,1247],being:[40,41,43,984,987,1050,1058,1135],believ:43,belong:[40,41],below:[43,1247,1290,1293],below_depth:[40,41],benefit:1247,bernoul:[1216,1224,1264,1272],best:[43,984,1039,1247],beta1:[1081,1083,1084,1088,1280,1281,1282],beta2:[1081,1083,1084,1088,1280,1281,1282],beta:[1233,1234],between:[40,41,42,837,838,984,987,1104,1109,1179,1183,1191,1193,1229,1231,1232,1280,1282],bia:[1216,1225,1226,1264,1265,1266,1267,1268,1269,1270,1271,1274],bias_initi:[1264,1265,1266,1267,1268,1269,1270,1271,1274],bilinear:[1097,1098],bilinear_resampl:[165,346,474,606,766,1097],bilinearli:[1097,1098],binari:[841,843,1229,1230],binary_cross_entropi:1229,bit:[391,837,838,839,960,971,1097,1099,1103,1247],bitwis:[841,843],bitwise_and:[85,215,396,518,647,841],bitwise_oper:[0,7,8],block:[1247,1290],bool:[15,18,19,40,41,42,43,841,847,849,855,857,862,863,865,866,867,869,888,908,909,910,928,941,945,949,954,957,959,960,970,984,986,992,993,1005,1008,1012,1013,1017,1024,1026,1034,1039,1060,1062,1076,1077,1078,1081,1084,1085,1086,1087,1088,1089,1090,1092,1104,1107,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1191,1192,1198,1200,1201,1202,1203,1204,1205,1206,1208,1209,1216,1224,1253,1254,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],both:[43,984,1004],bottom:1247,boundari:[40,41,1191,1195],branch:[43,908,909],brittl:43,broadcast:[40,41,43,841,843,855,857,865,866,867,869,888,894,984,995,1012,1041,1042,1043,1051,1104,1107,1115,1120,1123,1198,1200,1201,1202,1203,1204,1205,1206],broadcast_to:[292,693,984],build:[1135,1247,1264,1275,1276,1277],build_mod:[1264,1275,1276,1277],builder:1247,built:[910,984,987,1135,1264,1275,1276,1277],builtin:43,builtin_ab:[247,869],builtin_add:[247,869],builtin_and:[247,869],builtin_bool:[247,869],builtin_contain:[247,869],builtin_deepcopi:[247,869],builtin_dir:[247,869],builtin_eq:[247,869],builtin_float:[247,869],builtin_floordiv:[247,869],builtin_g:[247,869],builtin_getattr:[247,869],builtin_getattribut:[247,869],builtin_getitem:[247,869],builtin_gt:[247,869],builtin_int:[247,869],builtin_invert:[247,869],builtin_l:[247,869],builtin_lt:[247,551,680,869],builtin_mul:[247,869],builtin_n:[247,869],builtin_neg:[247,869],builtin_or:[247,869],builtin_po:[247,869],builtin_pow:[43,247,869],builtin_radd:[247,869],builtin_rand:[247,869],builtin_rfloordiv:[247,869],builtin_rmul:[247,869],builtin_ror:[247,869],builtin_rpow:[247,869],builtin_rsub:[247,869],builtin_rtruediv:[247,869],builtin_rxor:[247,869],builtin_setitem:[247,869],builtin_some_op:43,builtin_sub:[247,869],builtin_truediv:[247,869],builtin_xor:[247,869],busi:43,bypass:1290,cach:[910,926,984,996],cache_fn:984,calcul:[40,41,42,43,841,842,850,851,853,869,894,1115,1123],call:[43,910,954,984,1050,1058,1075,1081,1085,1135,1179,1180,1183,1187,1264,1275,1276,1277,1280,1284,1290,1293],callabl:[40,41,908,909,910,919,920,954,984,996,1008,1010,1039,1075,1131,1132,1133,1134,1135,1179,1183,1184,1185,1187,1188,1216,1227],can:[43,910,952,953,954,984,1052,1097,1099,1135,1247,1289,1290,1293],cancel_join_thread:1135,cannot:43,captur:1247,cast:[40,41,129,292,435,563,693,960,984,1000,1097,1099,1103],catch_except:[984,1008],categori:43,caus:43,ceil:[85,215,396,518,647,841,984,987],cell:[1216,1226,1264,1273],certain:[40,41,984,987,1037,1038],chain:[40,41,1131,1132,1133,1286,1287],chang:[43,910,984,1052,1135,1179,1181,1188,1247,1289],channel:[984,1017,1097,1099,1100,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],check:[15,16,17,18,19,40,41,43,910,949,959,960,965,974,983,984,994,1013,1026,1034,1067,1077,1081,1087,1135,1179,1180,1187,1247,1290],check_nest:[1179,1187],check_shap:[40,41],check_submod_ret:[1276,1277],check_typ:[40,41],choic:[1247,1290],choleski:[770,1104],choos:[984,1078,1104,1109,1115,1120,1247],choose_random_framework:59,chosen:[40,41,984,987,1078],chunk:[910,952,953,954,1135],chunk_siz:[910,954,1135],circl:[1115,1116,1118],clark:1247,clear:[43,910,926,1135],clear_framework_stack:59,clear_mem_on_dev:[433,685,910],click:1247,clip:[40,41,292,435,693,984,998,999,1041,1043,1247],clip_matrix_norm:984,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,984],clipped_delta:1135,clone:[40,41,910,929,930,931,932,1135],clone_arrai:1135,clone_it:1135,clone_nest:1135,clonedit:1135,cloneditem:1135,clonednest:1135,close:[43,1097,1102,1115,1118,1135,1293],closest:[960,965],closest_valid_dtyp:960,code:[40,41,42,43,485,1247,1248,1289,1290],codebas:[910,952,953,1135,1247,1290,1293],codomain:[841,842,853],colab:1247,collect:[15,40,41,433,435,469,474,478,482,483,485,869,908,910,960,984,1081,1097,1104,1112,1115,1135,1179,1191,1198,1208,1216,1229,1233,1250,1264,1278,1280],color:[40,41,42,1291,1292],column:[984,1027],combin:[40,41,42,1097,1102,1247,1293],combined_batch_s:1135,come:1290,command:1247,comment:43,commit:1293,common:[40,41,43,1115,1120],common_key_chain:[40,41],commun:[43,1247,1290],communuti:43,compar:[40,41,984,986,992,993],comparison_oper:[0,9,10],compat:[43,841,843,855,857,865,866,867,869,888,894,984,1012,1052,1115,1123,1247,1293],compil:[292,435,693,1236,1237,1241,1247,1276,1277,1280,1281,1282,1283,1284,1285],compile_graph:[1235,1247,1276,1277,1280,1284],compile_on_next_step:[1276,1277,1280,1281,1282,1283,1284,1285],complet:[40,41,43,1104,1109,1135],complex:[1290,1293],compon:[984,1004],composit:43,comput:[40,41,841,843,845,849,852,855,857,869,888,910,954,984,998,999,1005,1006,1012,1040,1081,1083,1084,1085,1086,1088,1089,1090,1092,1094,1097,1100,1104,1105,1106,1107,1108,1109,1112,1113,1114,1115,1116,1118,1119,1120,1124,1125,1126,1127,1129,1179,1183,1198,1199,1200,1201,1202,1203,1204,1205,1206,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1229,1230,1231,1232],concat:[40,41,910,939,940,941,942,954,984,1017,1135],concaten:[40,41,129,292,435,563,693,984,1017,1135,1247],concatten:[40,41,910,939,940,941,942,954,1135],condit:[435,908,909,984,1078,1179,1187],conditon:[1179,1187],config:[40,41,1135],config_list:1135,configur:[40,41],conflict:43,conform:43,conjunct:1290,connect:[1241,1264,1274,1275],consid:[40,41,1104,1109,1289,1293],consist:[40,41,910,942,1135,1198,1199,1276,1277,1290],constant:[910,919,920,984,1001,1135,1179,1183,1229,1230,1231,1232,1233,1234,1255,1256,1260,1263,1276,1277,1278,1279,1290],constant_kwarg:1135,constant_pad:[292,435,563,693,984],constitu:[40,41],construct:[984,1069,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],constructor:[40,41,42,984,988,1286,1287],consum:[910,1135],cont_feat_dim:[1216,1227],contaienr:[40,41],contain:[15,18,19,42,43,834,835,836,841,842,843,847,849,850,851,853,855,857,862,863,865,866,867,869,888,894,910,929,933,954,960,964,984,985,989,990,997,998,999,1002,1012,1026,1041,1043,1053,1064,1065,1081,1083,1084,1086,1088,1089,1090,1115,1123,1131,1132,1133,1134,1135,1191,1192,1198,1200,1201,1202,1204,1206,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[435,693,984],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[435,984,1044,1216,1227,1264,1275],context_dim:[1264,1275],contextmanag:[59,60],continu:[43,1135,1290],contract:[40,41,1198,1199],contribut:[1247,1248],contributor:[43,1247],control:1247,conv1d:[196,377,499,823,1216,1247,1264],conv1d_transpos:[196,377,499,823,1216],conv1dtranspos:[1247,1264],conv2d:[196,377,499,632,823,1216,1247,1264],conv2d_transpos:[196,377,499,823,1216],conv2dtranspos:[1247,1264],conv3d:[196,377,499,632,823,1216,1247,1264],conv3d_transpos:[196,377,499,823,1216],conv3dtranspos:[1247,1264],convent:[40,41,1198,1199],conver:[910,926,937,949,956,959,1135],convers:[16,17,18,19,40,41,1135,1247],convert:[15,16,17,18,19,40,41,43,910,937,938,960,966,972,973,984,1061,1072,1073,1097,1099,1103,1104,1111,1135,1179,1181,1188,1247,1254],convert_dtyp:960,convolut:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],cool:43,cooler:43,coordin:[984,1042,1115,1116,1118,1120],copi:[40,41,43,485,984,1003,1135,1179,1181],copy_arrai:[435,693,984],copy_nest:1179,core:[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1247],corner:43,correct:[43,1247,1290],correctli:[40,41,43,1104,1107,1115,1120,1198,1200,1201,1202,1203,1204,1205,1206],correspond:[40,41,43,869,894,984,1000,1191,1192],cos:[85,396,518,647,841,984,1017,1115,1116,1129,1290],cosh:[85,396,518,647,781,841,1115],cosin:[841,845,846,1115,1116,1117,1122],cost:[1081,1083,1084,1086,1088,1089,1090,1131,1132,1133,1134],cost_fn:[1131,1134],could:1293,count:[40,41,858,859,865,866,867,1135,1198,1203,1205,1245],cours:43,cprint:1291,cpu:[40,41,43,910,947,949,955,956,959,984,987,991,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1135,1191,1192,1193,1194,1195,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1289,1290],creat:[40,41,834,835,836,910,919,920,984,987,991,1018,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1071,1080,1081,1094,1135,1191,1192,1193,1194,1195,1247,1248,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],create_if_abs:[40,41],create_vari:1255,creation:[40,41,42,43],creation_funct:[388,389,390,834,835,836],crop:[1097,1101],crop_siz:[1097,1101],cross:[292,693,984,1229,1230,1231,1232],cross_entropi:1229,cuda:[40,41,910,919,938,955,984,987,991,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1135,1191,1192,1193,1194,1195,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],cumprod:[129,292,435,693,984],cumsum:[693,984],cumul:[984,1005,1006],current:[40,41,42,43,910,919,943,944,946,950,960,966,974,983,984,1007,1021,1029,1033,1045,1049,1135,1179,1180,1187,1247,1293],current_framework:59,current_framework_str:[435,693,984,1135],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1241,d_in:[1216,1217,1218,1219,1220,1221,1222],d_out:[1216,1217,1218,1219,1220,1221,1222],da_can_termin:1135,da_dim_s:[910,1135],da_direct:1135,da_tune_step:[910,1135],dai:1293,daniel:1247,data:[40,41,42,43,834,835,836,838,839,841,842,843,847,849,853,855,857,858,859,865,866,867,869,888,894,910,912,913,914,915,916,917,922,923,924,938,960,964,965,966,970,971,972,973,974,975,976,983,984,987,991,1012,1018,1027,1034,1047,1048,1052,1063,1067,1080,1081,1087,1095,1115,1123,1135,1216,1225,1247],data_format:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],data_type_funct:[391,393,394,837,838,839],dataset:[40,41],datatyp:[40,41,960,965,975,976],dcdw:[1081,1083,1084,1086,1088,1089],debug_info:1241,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1081,1088,1089,1280,1282,1283],decay_lambda:[1081,1088,1089,1280,1282,1283],decid:[40,41,1293],decompos:[1104,1105,1109],decomposit:[1104,1105,1109,1110],decor:43,decrement:[984,1030],dedic:[1081,1095,1253,1254],deep:[40,41,1247],deep_copi:[40,41],deeper:[910,932,936,942,1135,1179,1188,1247],deepli:[1179,1181],def:[43,60,81,211,392,514,643,911,918,921,961,962,963,1082,1135,1139,1146,1242,1246,1247,1256,1259,1262,1289,1290,1293],default_dev:43,default_devic:910,default_dtyp:[43,960],default_float_dtyp:960,default_int_dtyp:960,default_key_color:[40,41,42],default_nod:1135,default_rng:485,default_v:[984,1008],defaultdevic:[910,911],defaultdtyp:[960,961],defaultfloatdtyp:[960,962],defaultintdtyp:[960,963],defer:43,defin:[43,984,1004,1046,1048,1080,1191,1193],definit:43,degre:[841,845,1115,1127,1129],del:1135,delai:43,delet:43,delta:[1081,1083,1135,1241],delta_dim_s:1135,delta_percent_mem:1135,delta_sf:1135,delta_util:1135,demo:1247,denomin:[984,1016,1023,1057,1064,1065,1233,1234,1278,1279],denot:43,dens:[1264,1274],depend:[43,841,842,850,851,869,894,984,1078,1104,1110,1247],depth:[40,41,435,460,910,932,936,942,984,1025,1046,1135,1179,1188,1241,1245,1276,1277],depth_cutoff:[40,41],depthwis:[1216,1223,1264,1271],depthwise_conv2d:[196,377,499,632,823,1216],depthwiseconv2d:[1247,1264],deriv:[1081,1083,1084,1086,1088,1089,1090,1179,1181,1188,1247,1276,1280,1284,1286],descend:[862,863,1104,1110],descent:[1081,1086,1280,1285],describ:[40,41,1198,1199],descript:[855,857],design:[1247,1248],desir:[40,41,910,955,960,964,984,987,991,1027,1028,1047,1048,1080,1097,1102,1135,1198,1200,1201,1202,1204,1206],desired_aspect_ratio:[474,477,1097,1102],desired_percent_increas:1135,detail:1293,detect:[40,41,1179,1180,1187],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,841,842,843,847,853,855,857,865,866,867,869,894,910,945,947,948,957,960,964,965,971,974,975,976,983,984,986,987,991,992,993,1026,1029,1033,1034,1067,1077,1081,1087,1115,1123,1131,1132,1133,1134,1135,1216,1227],dev:[40,41,42,43,122,286,433,435,436,439,449,450,451,458,459,460,461,462,463,468,485,486,556,685,910,913,914,916,917,919,920,923,924,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,946,949,950,951,952,953,954,955,956,959,984,987,991,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1081,1096,1191,1192,1193,1194,1195,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],dev_clon:[40,41,910],dev_clone_arrai:910,dev_clone_it:910,dev_clone_nest:910,dev_dist:[40,41,910],dev_dist_arrai:910,dev_dist_it:910,dev_dist_nest:910,dev_from_str:[43,122,286,433,556,685,910],dev_mapp:910,dev_str:[40,41],dev_to_str:[122,286,433,556,685,910],dev_unifi:910,dev_unify_arrai:910,dev_unify_it:910,dev_unify_nest:910,dev_util:910,devclonedit:910,devcloneditem:910,devclonednest:910,devdistit:910,devdistitem:910,devdistnest:910,develop:[43,1247,1290,1293],deviat:[40,41,1191,1194,1198,1204,1233,1234,1278,1279],devic:[21,40,41,43,388,389,390,434,435,448,834,835,836,912,913,914,915,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,984,987,991,1018,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1081,1096,1191,1192,1193,1194,1195,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],devmanag:[910,918],devmapp:[910,920],devmappermultiproc:910,diag:[1104,1110],diagon:[99,224,410,532,661,855,984,1027],dict:[15,16,17,18,19,40,41,42,910,912,915,919,920,922,932,933,934,935,936,984,1009,1010,1011,1039,1131,1132,1133,1135,1179,1181,1182,1183,1186,1188,1253,1254],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,837,838,910,929,930,933,934,1104,1109,1135,1216,1225,1247,1290,1293],differenti:[1247,1290],dilat:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],dim:[40,41,43,984,1046,1097,1098,1102,1104,1110,1135,1264,1275],dim_siz:[40,41,910,1135],dimens:[40,41,42,855,856,857,858,859,865,866,867,910,941,984,995,1000,1004,1009,1010,1011,1014,1017,1024,1036,1046,1051,1052,1062,1063,1066,1074,1076,1097,1101,1104,1107,1110,1131,1132,1133,1134,1135,1191,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1213,1216,1217,1218,1219,1220,1221,1222,1223,1226,1229,1231,1232,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275],dimension:[40,41,485,855,857,865,866,867,984,1062,1063,1104,1110],direct:1135,directli:[43,1179,1188,1290,1293],directori:[984,1059,1070],discord:43,discret:[1229,1231],discuss:43,disk:[40,41,1097,1099],distanc:[984,987],distribut:[40,41,910,929,933,934,935,936,1135,1191,1192,1193,1194,1195,1216,1224,1264,1272,1276,1277],distribute_nest:1135,distributedarrai:[40,41],distrubt:[1229,1231],dive:[1247,1290],divid:[40,41,984,1062,1064,1115],dividend:[1115,1123],divis:[984,1016,1023,1057,1064,1065,1081,1083,1084,1088,1115,1123,1280,1281,1282],divisor:[1081,1083,1084,1088,1115,1123,1280,1281,1282],doc:1247,docstr:43,doe:[40,41,43,984,987,1062,1289],doesn:[1104,1109,1247],doing:43,domain:[841,842,853,1115,1116],don:[43,1247],done:43,door:1293,dot:[1104,1106,1216,1227,1228,1264,1275],down:1289,downscal:[984,998,999],drag:[1247,1293],draw:[1191,1192,1194,1195],drawn:[1191,1192,1193,1194,1195],drop:[1247,1293],dropout:[1216,1247,1264,1275],dropout_r:[1264,1275],ds_tune_step:910,dtype:[40,41,43,129,292,388,389,390,391,393,394,435,436,439,440,448,451,461,468,563,693,834,835,836,837,838,839,964,965,966,967,968,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,987,991,1018,1027,1046,1047,1048,1080],dtype_bit:[129,292,435,563,693,960],dtype_from_str:[43,129,292,435,563,693,960],dtype_in:[435,445,446,447,960,966,971,972,973,974,975,976,983],dtype_to_str:[129,292,435,563,693,960],duplic:[40,41],dure:[40,41,43,908,909,984,1075,1081,1083,1084,1088,1131,1132,1133,1134,1276,1277,1280,1281,1282,1284],dynam:[435,441,908,909],each:[40,41,42,43,841,842,843,847,849,850,851,853,862,863,869,888,894,910,919,920,929,930,931,932,933,934,935,941,953,954,984,985,986,1001,1012,1051,1062,1066,1069,1079,1081,1084,1086,1088,1089,1090,1097,1100,1104,1110,1115,1118,1123,1125,1126,1135,1179,1183,1191,1192,1198,1199,1216,1217,1218,1219,1220,1221,1222,1223,1224,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290],eager:1290,easi:1293,easili:1247,econom:1293,ecosystem:1247,edg:[984,997,1001,1079],effect:[1081,1090],effective_grad:[1081,1090],effici:1293,einop:[40,41,984,1009,1010,1011],einops_rearrang:[40,41,984],einops_reduc:[40,41,984],einops_repeat:[40,41,984],einstein:[40,41,1198,1199],einsum:[40,41,182,365,487,622,803,1198],either:[40,41,43,984,1008,1039,1042,1044,1131,1132,1133,1134,1135,1264,1275,1276,1277,1290],eleg:1135,element:[40,41,43,485,841,842,843,844,845,846,847,849,850,851,852,853,858,859,862,863,865,866,867,869,888,894,910,931,935,941,960,964,984,985,987,989,990,992,993,997,998,999,1005,1006,1012,1015,1016,1027,1028,1041,1043,1051,1053,1062,1073,1078,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1135,1198,1199,1201,1203,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1224,1264,1272],elementwis:[40,41],elementwise_affin:[1278,1279],elementwise_funct:[841,842,843,844,845,846,847,848,849,850,851,852,853],elemtn:[1191,1192],elif:1135,els:[984,994,1008,1013,1135],elsewher:[984,1078],emphas:1247,empti:[40,41,1104,1109,1135],enabl:[40,41,42,43,1247],encapsul:[837,839],encod:[984,1017,1097,1099],end:[984,987,1247,1290],engag:43,ensur:43,entir:[40,41,865,866,867,910,954,1135,1247,1264,1273],entri:[40,41,984,1037,1038,1062,1063],entropi:[1229,1230,1231,1232],enumer:1135,environ:1247,eps:[391,837,838],epsilon:[1081,1083,1084,1088,1229,1230,1231,1232,1233,1234,1278,1279,1280,1281,1282],equal:[40,41,435,563,693,841,845,847,984,986,992,993,1001,1062,1079,1115,1127,1129,1191,1195],equality_matrix:[984,986],equat:[40,41,1198,1199],equival:[855,857,984,987,1115,1129],erf:[483,781,1115],error:[40,41,43,910,984,1063,1115,1124,1135,1208,1209,1276,1277,1280,1284],essenti:43,etc:[40,41,43,910,955,984,987,991,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1135,1191,1192,1193,1194,1195,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1293],euclidean:[855,857],euler:833,evalu:[40,41,841,850,851,865,866,867,984,1042,1179,1180,1187],even:[43,1293],evenli:[40,41,984,987,1037,1038,1062],everi:[43,984,986,1293],exact:[40,41],exampl:[43,908,909,984,997,1066,1104,1109,1247,1289,1290,1293],example_input:[435,441,908,909],exc_tb:1135,exc_typ:1135,exc_val:1135,exce:[984,1043],except:[40,41,44,47,865,866,867,984,987,994,1000,1008,1075,1135],excess_s:1135,excit:[1247,1290],exclud:[59,61,984,987,1191,1195],exclus:[40,41,435,443,456,469,471,984,1005,1034,1081,1087,1191,1193],execut:[43,984,1075,1290],execute_with_gradi:[162,341,469,601,760,1081,1247,1289],exist:[40,41,984,1008,1135,1247,1280,1284,1293],exp:[781,1115],expand:[40,41,984,1014,1017],expand_dim:[40,41,292,693,984,1135],expect:[984,988],explain:[43,1290],explicitli:[43,1264,1273,1275,1276,1277,1290],expon:[43,869,894,984,1065],exponenti:[43,869,894,1115,1124,1125],expos:[984,991,1002],express:[984,1042],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1081,1085],extract:[855,856],eye:[1104,1106],fabian:1247,fabio:1247,factor:[910,919,952,953,954,1081,1083,1084,1088,1089,1104,1110,1135,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271,1280,1281,1282,1283],fail:43,falck:1247,fall:[1276,1277,1280,1284],fallback_to_non_compil:[1276,1277,1280,1284],fals:[15,18,19,40,41,42,59,66,67,68,69,70,433,435,443,444,456,464,467,469,470,471,478,479,841,847,855,857,862,863,865,866,867,910,928,941,949,954,959,960,967,968,969,970,984,986,1005,1008,1013,1017,1024,1034,1039,1060,1062,1076,1078,1081,1084,1085,1086,1087,1088,1089,1090,1104,1107,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1198,1200,1201,1202,1203,1204,1205,1206,1235,1236,1237,1241,1245,1253,1254,1276,1277,1280,1281,1282,1283,1284,1285],fan_in:1255,fan_mod:1255,fan_out:1255,far:[1179,1180,1187,1289],faster:[908,909],favourit:[1247,1289],feasibl:1293,feat_dim:[1216,1227,1228],fed:[910,954,1135],feed:[910,954,1135],few:43,field:1293,file:[40,41,43,984,1059,1070,1276,1277],filepath:[40,41],fill:[40,41,834,835,836,984,1018,1047,1191,1193],fill_valu:[435,448,984,1018],filter:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271,1293],filter_s:[1264,1265,1266],filter_shap:[1264,1267,1268,1269,1270,1271],find:[40,41,43,1293],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,210,211,391,392,513,514,642,643,837],finish:[1247,1293],finit:[841,847],first:[40,41,43,485,841,843,908,909,910,941,984,992,1000,1004,1012,1037,1038,1066,1068,1081,1085,1104,1110,1131,1132,1133,1134,1135,1179,1180,1187,1191,1197,1198,1203,1205,1264,1275,1276,1277,1280,1284,1290,1293],firstlayersiren:[1247,1255],firstli:[1290,1293],fist:[910,954,1135],fit:[40,41,433,435,469,474,478,482,483,485,984,1051,1097,1102],fix:43,fkt:1293,flag:[40,41,43,1081,1087],flat:[40,41,43,984,1051,1054],flat_list:[40,41],flatten:[40,41,855,857,984,1017,1051,1198,1200,1201,1202,1204,1206],flatten_key_chain:[40,41,1276,1277],flexibl:[1247,1290],flip:[40,41,102,227,413,535,664,858],float32:[43,435,451,960,964,972,973,984,987,991,1027,1047,1048,1080],float_dtyp:[960,968,978],float_img_to_uint8_img:1097,floor:[292,435,693,984,1016,1135],floormod:[292,435,693,984],fluid:1293,fname:[1235,1237,1241,1276,1277],folder:[43,1247],follow:[40,41,43,837,839,855,857,910,954,984,1030,1031,1032,1064,1065,1081,1084,1086,1088,1089,1090,1135,1179,1183,1188,1216,1227,1228,1247,1264,1274,1280,1284],followng:[837,838],fomaml_step:1131,forget:[1081,1083,1084,1088,1280,1281,1282],fork:[984,1044,1247,1248],forkserv:[984,1044,1135],form:[15,16,17,18,19,40,41,984,991,1081,1084,1086,1088,1089,1090,1179,1181,1188,1216],format:[40,41,43,910,928,960,964,966,970,984,987,991,1027,1047,1048,1080,1135,1198,1199,1247,1289,1290],format_fn:[40,41],format_key_chain:[40,41],forward:[1276,1277,1280,1284,1289],found:[40,41,42],fourier:[984,1017],fourier_encod:984,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,97,100,101,103,107,110,111,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,170,171,172,176,177,178,179,180,181,183,184,185,186,187,188,189,192,194,195,197,198,199,200,201,202,203,208,209,211,212,213,216,217,218,219,220,221,222,225,226,228,232,235,236,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,533,534,536,540,543,544,552,557,558,559,560,561,562,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,602,603,604,605,607,608,609,611,612,613,614,618,619,620,621,623,624,625,626,627,628,629,633,634,635,640,641,643,644,645,648,649,650,651,652,653,654,655,656,657,658,659,662,663,665,669,672,673,681,686,687,688,689,690,691,692,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,761,762,763,764,765,767,768,769,771,772,773,774,775,776,777,779,780,782,783,784,785,786,787,788,789,790,791,792,793,794,795,797,798,799,800,801,802,804,805,806,807,808,809,810,813,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,835,836,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,859,863,866,867,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1234,1236,1237,1239,1240,1242,1246,1247,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1292,1293],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1135,framewrk:[984,1044],free:43,freed:43,freeli:43,frequenc:[984,1017],from:[40,41,42,43,841,849,853,855,856,858,859,865,866,867,910,919,920,954,960,966,984,1008,1019,1020,1027,1052,1063,1071,1078,1081,1084,1088,1097,1101,1104,1109,1131,1132,1133,1134,1135,1179,1181,1188,1191,1192,1193,1194,1195,1198,1203,1205,1216,1224,1227,1247,1253,1254,1264,1272,1275,1280,1284,1289,1290],from_cal:[1276,1277],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,129,292,435,563,693,837,838,984,1104,1109,1247],full_matric:[1104,1110],fulli:[43,1247,1264,1274,1275,1289],func:[40,41,435,441,469,470,908,909,910,954,984,996,1081,1085,1135],further:[43,1293],furthermor:1293,futur:1293,gain:1255,gamma:[1233,1234],gather:[40,41,129,292,435,563,693,984,1020],gather_nd:[40,41,129,292,435,563,693,984],gauss:[1115,1124],gaussian:[1208,1209],geglu:[1247,1250],gelu:[375,496,812,1208,1247,1250],gener:[23,40,41,43,433,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,485,908,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1087,1191,1193,1195,1196,1247,1280,1284],geometr:[984,1017],get:[40,41,43,837,838,839,910,919,920,928,943,944,949,953,956,959,960,970,971,984,988,1021,1022,1023,1050,1135,1245,1247,1264,1273,1293],get_all_arrays_in_memori:984,get_all_arrays_on_dev:910,get_framework:59,get_initial_st:[1264,1273],get_min_bas:984,get_min_denomin:984,get_mod_kei:[1276,1277],get_num_dim:[435,693,984],get_param:1241,get_param_recurs:1241,get_referrers_recurs:984,getfullargspec:1135,gist:1247,give:[43,862,863,984,1052,1290],given:[40,41,43,834,835,836,858,859,862,863,910,943,949,952,953,954,956,959,960,964,984,987,991,997,1005,1006,1020,1037,1038,1047,1048,1051,1054,1055,1062,1069,1074,1076,1080,1081,1083,1084,1086,1088,1089,1090,1104,1106,1111,1115,1116,1135,1179,1184,1185,1191,1194,1195,1197,1198,1201,1203,1204,1205,1206,1216,1217,1218,1219,1220,1221,1222,1223,1253,1254,1293],global:[40,41,42,910,919,920,927,952,953,954,960,967,968,969,984,1007,1022,1023,1050,1056,1057,1058,1064,1065,1081,1096,1135,1233,1234,1239,1240,1247,1278,1279],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1247,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],good:43,googl:1247,got:[43,1247],gpu0:43,gpu2:43,gpu:[910,945,948,1135],gpu_is_avail:[433,910,1135],grad:[1247,1280,1284,1289],gradient:[25,40,41,470,471,472,473,910,954,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1100,1131,1132,1133,1134,1247,1280,1281,1282,1283,1284,1285,1289,1293],gradient_descent_upd:[1081,1131,1132,1133,1134],gradient_imag:[165,346,474,606,766,1097],gradienttrack:[1081,1082],graph:[1081,1084,1086,1088,1089,1090,1235,1236,1237,1242,1247,1276,1277],graph_compil:[1235,1236,1237,1238,1239,1240,1241,1245],greater:[40,41,984,987,1015,1063,1191,1195],green:[40,41,42,1291,1292],grid:[984,1042],group:[1097,1102],guid:[43,1247,1248,1293],gym:1247,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1293,half:[984,987,1135,1191,1195],hand:1247,handl:[40,41,42,43,908,909,910,926,928,937,938,949,956,959,1081,1084,1086,1088,1089,1090,1135,1280,1281,1282,1283,1284,1285],happen:43,has:[40,41,43,984,1066,1104,1109,1115,1119],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,984],hasattr:1135,have:[40,41,43,837,838,841,842,843,847,849,853,855,857,858,859,865,866,867,869,888,894,984,1000,1004,1009,1010,1011,1012,1018,1066,1081,1087,1095,1104,1110,1115,1123,1135,1247,1289,1290],haven:43,hdf5:[40,41,1276,1277],head:[1216,1227,1264,1275],head_dim:[1264,1275],height:[1097,1102],height_cutoff:[40,41],help:[43,59,391,433,434,910,922,923,924,925,960,1081,1241,1245,1247,1255,1257,1258,1260,1261,1263],helper:1247,here:[43,1247],hidden:[1216,1226,1264,1273],hierarch:[984,1002],hierarchi:[40,41],high:[40,41,485,1191,1193,1195],higher:[1081,1084,1086,1088,1089,1090,1104,1110],highest:[1191,1193],highest_util:1135,highest_util_nod:1135,highli:1247,highlight:1293,highlight_subgraph:[1235,1237,1241],hint:43,hkt:1293,hold:[960,964,984,987,991,1054,1055],host:1247,hot:[984,1046],hour:43,how:[1247,1264,1275,1276,1277,1290,1293],howev:[43,1290],http:1293,hyperbol:[841,842,846,1115,1117,1121,1122,1128,1130,1208,1215],hypothet:[43,1293],icon:1247,idea:1247,ident:[40,41,43,129,292,435,563,693,984],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[833,837,838,841,853],if_exist:[40,41],ignor:[40,41,1280,1284],ignore_key_error:[40,41],ignore_miss:[1280,1284],ignore_non:[40,41],iii:43,iinfo:[80,210,391,513,642,837],imag:[27,475,476,477,984,1036,1098,1099,1100,1101,1102,1103,1216,1217,1218,1219,1220,1222,1223,1247,1293],image_dim:[1097,1101],imkkhk:1293,immedi:[1247,1290,1293],implement:[43,841,842,850,851,869,894,1247,1290,1293],in_featur:[1216,1225],inadvert:43,includ:[40,41,43,855,857,865,866,867,984,987,1026,1064,1065,1077,1179,1180,1191,1195,1264,1274,1275,1278,1279,1289],include_deriv:[1179,1181,1188],include_empti:[40,41],include_gener:[1235,1236,1237,1241,1276,1277],include_inf:[40,41,984,1026,1077],include_nest:[1179,1180],include_self:[40,41],inclus:[43,1191,1193],incom:[1216,1225],increas:[910,932,936,942,984,1001,1014,1079,1135,1179,1188],increasingli:1293,increment:[984,1031,1135],increment_param_count:1241,inde:1247,indent:[40,41,42],independ:[1191,1192],index:[40,41,435,485,984,989,990,1019,1020,1042,1063,1066,1179,1182,1184,1185,1186,1189],index_nest:1179,indic:[40,41,435,449,450,460,462,463,855,857,862,863,984,989,990,1019,1020,1028,1046,1054,1055,1179,1180,1182,1184,1185,1186,1187,1189,1190,1191,1192,1208,1213,1216,1217,1218,1219,1220,1221,1222,1223,1233,1234,1264,1265,1266,1267,1268,1269,1270,1271,1276,1277],indices_wher:[129,292,435,693,984],indistinguish:[841,853],inevit:1293,inf:[40,41,855,857,984,1026,1035,1077,1115,1119],infer:[841,849,855,856,908,909,984,1024,1027,1052,1060,1097,1101,1104,1109,1290,1293],infin:[841,842,847,853,855,857,984,1035],infinit:[841,853],inform:[837,838,839,1081,1092],init_c:[1216,1226],init_h:[1216,1226],init_on_first_step:[1280,1284],initi:[40,41,42,43,59,391,433,434,910,922,923,924,925,960,1081,1135,1216,1226,1241,1245,1247,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1280,1284],initialz:[1276,1277],inner:[1131,1132,1133,1134],inner_batch_fn:[1131,1132,1133],inner_batch_shap:[1216,1225],inner_cost_fn:[1131,1132,1133],inner_grad_step:[1131,1132,1133,1134],inner_learning_r:[1131,1132,1133,1134],inner_optimization_step:[1131,1132,1133,1134],inner_v:[1131,1132,1133],inp:1135,inplac:[40,41,984,994,1029,1033,1067,1081,1084,1086,1088,1089,1090,1253,1254,1280,1281,1282,1283,1284,1285],inplace_arrays_support:[435,984],inplace_decr:[129,292,435,563,693,984],inplace_incr:[129,292,435,563,693,984],inplace_oper:[0,11,12],inplace_upd:[40,41,129,292,435,563,693,984,1253,1254],inplace_variables_support:[435,984],input:[15,18,19,40,41,42,43,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867,908,909,910,919,920,927,928,929,932,933,936,942,954,955,960,964,965,967,968,969,970,971,975,976,984,985,986,989,990,992,993,994,995,997,998,999,1000,1001,1003,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1024,1026,1027,1028,1030,1031,1032,1034,1035,1036,1040,1041,1042,1043,1051,1053,1060,1061,1063,1066,1067,1068,1069,1071,1072,1073,1074,1076,1077,1079,1081,1085,1087,1092,1096,1097,1098,1099,1100,1101,1103,1104,1107,1109,1110,1112,1113,1114,1115,1117,1119,1121,1122,1123,1127,1128,1129,1130,1131,1132,1133,1134,1135,1191,1192,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1233,1234,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279,1290],input_ax:[910,954,1135],input_channel:[1264,1265,1266,1267,1268,1269,1270,1273,1274],input_queu:1135,inputs_split:1135,insert:[984,1014],insid:43,inspect:1135,inspir:1293,instal:1247,instanc:[15,16,17,18,19,40,41,43,485,869,888,894,910,919,1135,1253,1254,1286,1287],instead:[40,41,43,485,1198,1200,1201,1202,1203,1204,1205,1206,1293],int32:43,int64:[960,964,984,987,991,1027,1047,1048,1080],int_dtyp:[960,969,979],integ:[40,41,485,837,839,841,843,844,855,857,865,866,867,960,976,984,987,1015,1053,1062,1191,1193,1196],integr:1247,intend:43,inter:1247,interact:1247,interchang:[40,41,984,1068],interest:1247,interfac:[984,991,1290],intermedi:[40,41],intern:[40,41,910,1081,1095,1135,1179,1180,1187,1188,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1286,1287],interpol:[984,1036],intersect:[1115,1116],interv:[40,41,865,866,867,984,987,997,1037,1038,1115,1118,1191,1195],introduc:1293,inv:[770,1104,1293],invalid:[865,866,867],invalid_dtyp:960,invers:[841,842,1104,1106,1108,1115,1116,1117,1118,1119,1121,1293],invert:[1104,1106,1108],invest:1293,investig:43,invoc:[908,909],irrespect:1247,is_al:1135,is_arrai:[129,292,435,563,693,984,1135],is_float_dtyp:960,is_int_dtyp:960,is_mean:1135,is_sum:1135,is_var:[1241,1245],is_vari:[162,341,469,601,760,1081],isfinit:[85,215,396,518,647,841],isinf:[292,563,693,984],isinst:1135,isnan:[85,215,396,518,647,841],isnumer:1135,issu:[1247,1248],issue_numb:43,item:[15,19,40,41,869,881,882,910,919,920,922,929,931,933,935,941,960,967,984,1002,1025,1064,1065,1135,1179,1183,1184,1185,1188,1189,1190,1247,1276,1277,1289],iter:[15,16,17,18,19,40,41,42,908,909,910,913,914,916,917,919,920,923,924,931,933,934,935,936,941,954,984,986,995,1000,1001,1027,1042,1047,1051,1052,1055,1060,1062,1066,1069,1074,1079,1135,1179,1180,1181,1183,1187,1188],iterbal:[910,931,935,941,1135],its:[485,862,863,910,954,984,1027,1052,1068,1074,1135,1247],itself:[43,1179,1188],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,833,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1245,1247,1248,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1291,1292],ivy_backend:[40,41],ivy_bay:1293,ivy_test:43,ivyfcmodel:1289,ivyh:[40,41,42],ivymodul:[193,820],jame:1247,jax:[43,1081,1087,1247,1293],jax_concat:1247,jnp:1247,join:[40,41,984,1000,1066,1135],journal:1247,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1247,1264,1273,1293],kaimingnorm:[1255,1259],kalman:1293,kalman_filt:1293,kalman_filter_step:1293,kalman_filter_upd:1293,keep:[40,41,910,955,984,1076,1135,1247,1248,1293],keep_inner_v:[1131,1132,1133],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1131,1132,1133],keepdim:[40,41,435,467,478,479,855,857,865,866,867,984,1076,1104,1107,1198,1200,1201,1202,1203,1204,1205,1206],kei:[15,16,17,40,41,42,43,869,874,910,922,984,1002,1131,1132,1133,1135,1179,1182,1186,1216,1227,1228,1247,1253,1254,1264,1275,1280,1284],kept:[40,41,42,1131,1132,1133],kera:1293,kernel:[1216,1226],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,910,919,920,932,936,942,984,988,1009,1010,1011,1039,1135,1179,1183,1276,1277],keyword_color_dict:[40,41,42],kind:[837,838,839,1293],kwarg:[15,16,17,40,41,42,59,63,910,919,932,936,942,984,1039,1135,1235,1236,1237,1241,1253,1254,1276,1277],kwarg_stateful_idx:[1235,1236,1237,1241,1276,1277],kwargs_clon:1135,kwargs_dist:1135,kwargs_uni:1135,label:[43,1229,1230,1231,1232],lamb:[1081,1088,1247,1280],lamb_upd:1081,lambda:[1135,1280,1283,1285,1289],lar:[1081,1088,1089,1247,1280],larger:[837,838,984,997],largest:[40,41,837,838,839,984,989,1015],lars_upd:1081,last:[40,41,858,859,865,866,867,984,987,1004,1036,1062,1066,1104,1107,1110,1198,1203,1205,1208,1213,1216,1226,1264,1274],later:[40,41,984,996],latest:[1264,1273],layer:[1081,1084,1086,1088,1090,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1233,1234,1247,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1293],layer_norm:1233,layernorm:[1247,1278],layerwis:[1081,1089,1280,1283],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1179,1180,1187],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1208,1209,1210],leaky_relu:[812,1208],learn:[841,849,855,856,1081,1084,1086,1088,1089,1090,1104,1109,1131,1132,1133,1134,1191,1197,1247,1280,1281,1282,1283,1284,1285,1290,1293],learnabl:[1233,1234,1278,1279],least:43,leav:[15,18,19,40,41,1179,1180,1181,1187,1188],left:[40,41,43,1104,1107,1198,1200,1201,1202,1203,1204,1205,1206,1247],leftmost:[40,41],len:1135,length:[40,41,42,984,987,1052,1063,1074],lenton2021ivi:1247,lenton:1247,less:[40,41,43,85,215,396,518,647,841,844,855,857,1135,1191,1195],less_util_node_str:1135,let:[1290,1293],level:1247,librari:[1247,1289,1293],lightweight:1247,like:[43,1081,1087,1191,1195,1247,1289,1290,1293],likewis:43,limit:[40,41,42,43,837,838,839,984,997,998,999],linalg:[29,1105,1106,1107,1108,1109,1110,1111,1247],line:43,linear0:[1247,1289],linear1:1247,linear2:1289,linear:[984,1017,1036,1104,1208,1209,1210,1211,1216,1224,1247,1264,1265,1266,1267,1268,1269,1270,1271,1289],linear_algebra:[478,479,480,481,855,856,857],linear_resampl:[129,292,435,563,693,984],linearli:[984,1017],link:[43,1247],linspac:[129,292,435,563,693,984,987],list:[15,18,19,40,41,388,389,390,834,835,836,858,859,865,866,867,910,919,920,929,930,932,933,934,936,939,940,954,984,987,991,993,1042,1061,1062,1071,1076,1131,1132,1133,1135,1179,1180,1181,1183,1187,1188,1216,1217,1218,1219,1220,1221,1222,1223,1247,1248,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271],list_join:[40,41,42],list_stack:[40,41],liter:[855,857],littl:1290,load:[40,41],loaded_kwarg:1135,loader:1247,local:43,local_set:[984,1025],locat:[43,841,848,984,1035,1191,1192],log1p:[85,396,518,647,841],log2:[85,396,518,647,841],log:[781,841,850,984,1038,1115,1135,1229,1230,1231,1232,1247],log_all_op:1241,log_global_inference_abs_tim:[1238,1247],log_global_inference_rel_tim:[1238,1247],logarithm:[841,850,851,1115,1126],logic:[31,841,852,865,866,867,1113,1114,1247],logical_and:[356,778,1112],logical_not:[85,215,396,518,647,841],logical_or:[356,778,1112],logit:[1229,1232],logspac:[129,292,435,563,693,984],look:[43,1290,1293],loop:[1131,1132,1133,1134],loss:[1230,1231,1232,1247,1289],loss_fn:[1247,1289],lot:1290,low:[40,41,485,1191,1193,1195],lower:[40,41,43,984,1041,1191,1195],lower_depth:[1276,1277],lowest:[15,18,19,40,41,1179,1188,1191,1193],lstm:[1216,1226,1247,1264],lstm_updat:[43,1216],machin:[837,838,839,841,849,855,856,1104,1109,1191,1197,1247,1290,1293],made:43,mai:[984,987,1008,1012,1247,1290,1293],main:[984,1027,1247],mainli:1247,maintain:43,make:[43,485,910,1135,1247,1290],maml:[1131,1132,1133],maml_step:1131,manag:[910,1135],manhattan:[855,857],mani:[40,41,43,984,1062,1247],manipulation_funct:[858,859],manner:[15,18,19,40,41,43,1179,1188],manual:[1179,1180,1187,1293],map:[40,41,42,841,848,910,919,984,1035,1135,1179,1184,1185,1188,1264,1275,1289],map_cont:[40,41],map_nest_at_index:1179,map_nest_at_indic:1179,map_sequ:[40,41],mapper:[910,919,920,1135],mark:43,mask:[1216,1227,1228],master:43,match:[40,41,984,1039],match_kwarg:984,math:[33,484,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1135,1247],mathbb:[1104,1111],mathbf:[1104,1111],mathemat:[833,855,857],matmul:[43,292,435,563,693,984,1293],matplotlib:1290,matric:[1216,1225],matrix:[40,41,855,856,984,986,998,1040,1104,1105,1106,1107,1108,1109,1111,1216,1225,1264,1274],matrix_norm:[40,41,169,350,478,610,770,1104],matter:1247,max:[40,41,391,837,838,839,984,998,999,1010,1041,1054,1055,1135,1198,1200,1280,1282],max_batch_s:[40,41],max_chunk_s:[910,954,1135],max_depth:[40,41,910,914,917,924,932,936,942,984,1025,1135,1179,1188],max_dev_dim_step_ratio:910,max_freq:[984,1017],max_length:[40,41],max_node_dim_step_ratio:1135,max_norm:[40,41,984,998,999],max_split_factor_step_s:[910,1135],max_trust_ratio:[1081,1088,1280,1282],maxim:[1247,1290,1293],maximis:1247,maximum:[40,41,42,693,910,932,936,942,954,984,989,997,998,999,1017,1081,1088,1135,1179,1188,1198,1200],mayb:[15,18,19],mdi:1135,mean:[40,41,485,910,939,940,941,942,954,984,1010,1131,1132,1133,1134,1135,1179,1183,1191,1194,1198,1201,1204,1206,1255,1289,1293],measur:[1216,1227,1264,1275],mech:1247,mechan:[1247,1293],medic:1293,member:43,memori:[910,926,949,954,956,959,1135,1216,1226,1247],mention:43,merg:43,merge_with_upstream:43,meshgrid:[292,435,693,984],messag:[1291,1292],meta:[35,1132,1133,1134,1247],method:[40,41,42,43,485,984,991,1002,1042,1054,1055,1081,1088,1089,1135,1179,1180,1187,1188,1247,1264,1275,1276,1277,1290],might:[984,1008,1293],min:[40,41,391,837,838,839,855,857,984,1010,1043,1054,1055,1064,1104,1109,1135,1198,1202],min_bas:[984,1065],min_denomin:[984,1064],min_dev_dim_s:910,min_node_dim_s:1135,min_sf_tune_step:[910,1135],min_unit_dev_tune_step:910,min_unit_node_tune_step:1135,mind:1247,mini:[1233,1234,1278,1279],minimum:[40,41,693,910,960,964,984,987,990,991,997,1022,1023,1056,1057,1064,1065,1135,1198,1202],miss:[1280,1284],ml_framework:[984,987,1104,1109],mod:[984,1016],mod_depth:[1276,1277],mod_height:[1276,1277],mod_with_top_mod_key_chain:[1276,1277],mode:[40,41,478,480,908,909,910,939,940,941,942,954,1104,1109,1110,1135,1290],model:[1247,1289],modul:[40,41,42,59,984,1044,1135,1247,1248,1250,1251,1252,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279,1286,1287,1293],moment:[1081,1083,1084,1088,1280,1281,1282],more:[43,858,859,984,1066,1135,1247,1290,1293],more_util_node_str:1135,most:[40,41,43,1104,1109,1247,1293],move:[40,41,43,910,955,1135],much:[43,1247,1293],multi:[485,984,1044,1216,1227,1264,1275],multi_head_attent:1216,multi_index_nest:1179,multi_map:[40,41],multi_nod:1135,multidev:[910,921,922,923,942],multidevcontain:[40,41],multidevic:[910,919],multidevit:[910,913,916,919,920,924],multidevitem:[910,912,915],multidevnest:[910,914,917],multiheadattent:[1247,1264],multinod:[1135,1139],multinodecontain:1135,multinodeit:1135,multinodeitem:1135,multinodenest:1135,multinomi:[175,360,485,617,796,1191],multipl:[40,41,865,866,867,984,1039,1062,1104,1106,1198,1200,1201,1202,1203,1204,1206,1233,1234,1264,1274,1290],multipli:[40,41,984,1005,1198,1203],multiprocess:[40,41,42,435,693,910,919,984,1135],must:[40,41,42,43,834,835,836,841,842,843,847,849,853,855,857,858,859,865,866,867,869,888,894,910,939,940,941,942,954,984,987,1000,1002,1004,1012,1041,1043,1055,1066,1115,1120,1123,1135,1191,1196,1280,1284],mutabl:[1179,1181,1188],mutlidevic:[910,919],mutlinod:1135,mw_tm1:[1081,1084,1088],mx_concat:1247,mxnet:[43,1247,1293],my_func:43,mymodel:1247,name:[43,908,909,1235,1236,1237,1241,1289],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1290],nan:[40,41,833,841,842,847,848,984,1026,1077],nativ:[15,17,18,19,40,41,43,910,926,928,937,938,949,956,959,960,965,972,973,1135,1247,1248,1253,1254],native_modul:[1253,1254],native_module_class:[1253,1254],nativearrai:[15,18,19,43,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,857,858,859,862,863,865,866,867,869,888,894,910,928,954,955,960,964,970,975,976,984,985,986,987,989,990,991,992,993,995,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1024,1026,1027,1028,1035,1036,1037,1038,1040,1041,1042,1043,1046,1047,1048,1051,1052,1053,1054,1055,1060,1062,1063,1066,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1135,1179,1181,1188],natur:[841,850,1115,1126,1293],ncdhw:[1216,1221,1222,1264,1269,1270],nchw:[1216,1219,1220,1223,1264,1267,1268,1271],ncw:[1216,1217,1218,1264,1265,1266],ndarrai:[43,388,389,390,391,393,394,485,984,1072],ndhwc:[1216,1221,1222,1264,1269,1270],nearest:[984,1053],need:[43,984,998,999,1216,1218,1220,1222,1247,1264,1266,1268,1270,1293],neg:[40,41,841,847,855,857,858,859,865,866,867,1198,1203,1205,1208,1210],negative_slop:1255,neither:1135,nest:[15,16,17,18,19,40,41,42,910,932,936,942,984,991,1071,1131,1132,1133,1135,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1276,1277,1280,1281,1282,1283,1284,1285],nested_indices_wher:1179,nested_map:[1135,1179],network:[1216,1225,1247,1248,1250,1264,1276,1277,1293],neural:[1216,1247,1250,1264,1289],never:43,new_node_percent_mem:1135,new_node_util:1135,new_node_utils_kei:1135,new_std:[1233,1234,1278,1279],newli:[43,908,909,984,995,996],newlin:[40,41,42],newshap:[984,995,1052],next:[837,838,1135,1276,1277,1280,1281,1282,1283,1284,1285],nhwc:[1216,1219,1220,1223,1264,1267,1268,1271],node:[40,41,1179,1180,1187],node_clon:1135,node_dist:1135,node_dist_arrai:1135,node_dist_it:1135,node_in:1135,node_mapp:1135,node_str:1135,node_to_str:1135,node_util:1135,nodedistit:1135,nodedistitem:1135,nodedistnest:1135,nodemanag:[1135,1146],nodemapp:1135,nodemappermultiproc:1135,noinspect:[43,911,961,962,963,1082,1135,1242],non:[40,41,855,857,865,866,867,908,909,960,974,1276,1277,1280,1284,1290],none:[40,41,42,43,59,61,64,388,389,390,433,435,436,439,441,448,449,450,451,458,459,460,461,462,463,464,465,466,468,478,479,485,486,834,835,836,837,838,839,841,849,855,856,857,858,859,865,866,867,908,909,910,919,920,926,927,952,953,954,955,960,967,968,969,984,987,991,1007,1008,1013,1018,1019,1020,1025,1027,1029,1030,1031,1032,1033,1037,1038,1044,1046,1047,1048,1051,1054,1055,1056,1057,1062,1063,1064,1065,1074,1075,1080,1081,1084,1086,1088,1089,1090,1096,1097,1101,1104,1107,1109,1131,1132,1133,1134,1135,1179,1180,1183,1187,1188,1191,1192,1193,1194,1195,1198,1200,1201,1202,1203,1204,1205,1206,1216,1218,1220,1222,1225,1226,1227,1228,1233,1234,1235,1236,1237,1241,1245,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],norm:[40,41,855,857,984,998,999,1104,1107,1234,1247,1279,1280,1282],normal:[1191,1194,1233,1234,1278,1279],normalized_idx:[1233,1234],normalized_shap:[1278,1279],notat:[40,41,1198,1199],note:[43,1104,1109],noth:[40,41,1290],notimplementederror:1135,now:[40,41,910,955,984,985,1135,1247,1264,1275,1276,1277,1289,1290,1293],np_concat:1247,np_finfo:391,ns_tune_step:1135,num:[435,458,459,984,1037,1038],num_arrai:[40,41],num_arrays_in_memori:984,num_arrays_on_dev:910,num_band:[984,1017],num_channel:[1264,1271],num_chunk:1135,num_chunks_floor:1135,num_class:[1191,1192],num_cpu_cor:910,num_gpu:[122,433,910,1135],num_head:[1216,1227,1264,1275],num_kei:[1216,1227,1228],num_lay:[1264,1273],num_or_size_split:[40,41,435,464,984,1062],num_output:1135,num_queri:[1216,1227,1228],num_sampl:[435,457,485,486,984,1036,1097,1098,1191,1192],num_task:[1131,1132,1133,1134],number:[40,41,42,833,837,838,839,841,848,865,866,867,908,909,910,946,947,948,960,971,975,976,984,987,997,1001,1014,1017,1024,1027,1036,1037,1038,1041,1045,1051,1062,1069,1073,1077,1079,1104,1110,1131,1132,1133,1134,1135,1191,1192,1196,1198,1200,1201,1202,1204,1206,1216,1227,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1290,1293],numer:[43,841,847,869,888,894,984,1022,1023,1056,1057,1064,1065,1115,1123,1255],numhead:[1216,1227],numpi:[40,41,43,388,389,390,391,393,394,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,984,1072,1104,1109,1110,1198,1199,1247,1289,1290,1293],nwc:[1216,1217,1218,1264,1265,1266],obj:[40,41],object:[40,41,42,59,391,837,838,839,910,960,964,984,987,991,1081,1179,1182,1184,1185,1186,1189,1190,1191,1197,1241,1245,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1276,1277],object_in:[435,439,984,991],observ:1135,obvious:43,occupi:[837,838,839,984,1054,1055],off:[984,987],offer:1247,offset:[855,856,1233,1234],often:1290,old:[40,41],on_init:[1264,1275,1276,1277],onc:[43,910,954,1135,1191,1192,1247],one:[40,41,43,855,857,858,859,910,939,940,941,942,954,960,966,984,1027,1039,1046,1054,1055,1063,1066,1104,1107,1135,1198,1199,1200,1201,1202,1203,1204,1205,1206,1247,1290,1293],one_hot:[129,435,563,693,984],onearrai:[984,1014],ones:[40,41,77,207,388,510,639,834,984,1027,1046,1048,1247],ones_lik:[129,292,435,563,693,984],ongo:43,onli:[40,41,43,485,858,859,910,1104,1109,1135,1179,1180,1181,1187,1280,1281,1282,1283,1284,1285,1289,1290],onlin:1247,onto:[910,939,940,955,1135,1179,1183,1188],oom:[910,1135],open:[984,987,1191,1195,1247,1293],opencv:1290,oper:[40,41,841,852,984,994,1009,1010,1011,1037,1038,1067,1081,1084,1086,1088,1089,1090,1112,1113,1114,1216,1217,1218,1219,1220,1221,1222,1223,1225,1247,1248],operand:[40,41,841,842,1198,1199],oppos:[984,1017],optim:[910,1081,1084,1086,1088,1089,1090,1131,1132,1133,1134,1135,1247,1281,1282,1283,1285,1289,1293],optimizer_upd:1081,option:[15,18,19,40,41,42,43,388,389,390,834,835,836,855,857,858,859,865,866,867,908,909,910,919,920,928,932,933,934,935,936,939,940,941,942,949,952,953,954,955,959,960,965,970,974,983,984,986,987,989,990,991,998,999,1000,1005,1007,1008,1017,1018,1019,1020,1024,1026,1027,1034,1036,1037,1038,1039,1042,1044,1046,1047,1048,1051,1054,1055,1058,1060,1062,1063,1064,1065,1066,1074,1076,1077,1080,1081,1084,1086,1087,1088,1089,1090,1092,1097,1101,1104,1107,1109,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1191,1192,1198,1200,1201,1202,1203,1204,1205,1206,1208,1209,1213,1216,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290],ord:[855,857,1104,1110],order:[40,41,42,43,855,857,858,859,862,863,1081,1084,1086,1088,1089,1090,1104,1107,1131,1132,1133,1286,1287],ordered_node_util_kei:1135,org:1293,organ:43,origin:[40,41,42,984,1048,1052,1080,1104,1107],other:[40,41,43,869,871,872,877,879,880,884,886,887,888,889,890,892,894,895,896,897,898,899,901,902,903,905,906,907,908,909,984,986,987,1027,1081,1085,1191,1195,1247,1289,1290,1293],other_i:[43,869,888,894],otherwis:[15,16,17,18,19,40,41,841,847,855,857,865,866,867,910,927,960,967,968,969,984,994,1074,1075,1078,1081,1087,1092,1096,1131,1132,1133,1135,1198,1200,1201,1202,1204,1206],our:[43,1247,1293],out:[43,485,869,888,984,987,1115,1119,1216,1224,1226,1247,1264,1272],out_feat_dim:[1216,1227],out_featur:[1216,1224,1225],out_i:[841,847],outdat:1293,outer:[1131,1132,1133,1134],outer_batch_fn:[1131,1132,1133],outer_batch_shap:[1216,1225],outer_cost_fn:[1131,1132,1133],outer_v:[1131,1132,1133],outlin:1290,output:[40,41,43,834,835,836,858,859,910,919,920,954,984,987,996,1018,1027,1051,1069,1081,1085,1115,1120,1135,1191,1193,1194,1195,1216,1218,1220,1222,1224,1226,1227,1228,1247,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275],output_ax:[910,954,1135],output_axi:1135,output_channel:[1264,1265,1266,1267,1268,1269,1270,1273,1274],output_connected_onli:[1235,1237,1241,1276,1277],output_queu:1135,output_shap:[1216,1218,1220,1222,1264,1266,1268,1270],outsid:[984,997],over:[40,41,855,857,865,866,867,1104,1107,1191,1195,1198,1200,1201,1202,1204,1206,1233,1234,1278,1279],overal:1290,overflow:[984,987],overhead:1290,overrid:[984,1046,1048,1080],overriden:[1280,1284],overwrit:[40,41,910,954,1135],overwrite_at_key_chain:[40,41],own:[1247,1290,1293],packag:[43,1290],pad:[984,1001,1017,1079,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],pad_width:[435,984,1001,1079],page:1247,pair:[1216,1228],parallel:[910,919,920,1135],parallelis:[910,919,920,1135],param:[40,41,42,43,435,449,450,841,853,910,954,984,985,1019,1020,1046,1047,1135,1246,1247,1276,1277,1289],paramet:[15,16,17,18,19,40,41,42,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,855,856,857,858,859,862,863,865,866,867,869,888,894,908,909,910,919,920,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,949,952,953,954,955,956,959,960,964,965,966,970,971,972,973,974,975,976,983,984,986,987,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1047,1048,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1092,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],parameter:[1191,1194,1195],params_all_empti:1241,pardo:1247,pars:[984,1002],part:[1081,1084,1086,1088,1089,1090,1115,1119,1247,1276,1277,1290],partial:[40,41,43,1276,1277],particl:1293,particular:[43,1293],pass:[40,41,42,43,910,919,954,960,965,984,996,1081,1095,1131,1132,1133,1135,1253,1254,1276,1277,1280,1284,1286,1287],pattern:[40,41,984,1009,1010,1011],peopl:43,per:[910,1135,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],percent_used_mem_on_dev:910,percent_used_mem_on_nod:1135,percentag:[910,949,1135],perf_count:1135,perform:[40,41,43,862,863,865,866,867,910,984,989,990,1005,1009,1010,1011,1030,1031,1032,1036,1037,1038,1081,1084,1086,1088,1089,1090,1097,1098,1131,1132,1133,1134,1135,1179,1184,1185,1198,1200,1201,1202,1203,1204,1205,1206,1208,1213,1216,1224,1226],period:43,permissable_step:1135,permit:43,permut:[485,984,1068,1074],perpendicular:[984,1004],person:[43,1247],physci:1293,pickl:[40,41,1135],pickle_filepath:[40,41],pid:1241,pinv:[350,770,1104],pip:1247,pipelin:1289,pkk:1293,pkkm1:1293,pkm1km1:1293,place:[40,41,43,834,835,836,910,955,984,1014,1018,1030,1031,1032,1135,1280,1281,1282,1283,1284,1285],placehold:[43,1179,1188],pleas:[43,485,1104,1109],point:[43,833,834,835,836,837,838,841,842,853,855,857,960,975,984,987,1115,1123],popul:[40,41,1191,1192],popular:1293,population_s:[485,486,1191,1192],portabl:[1247,1248],posit:[15,16,17,837,838,841,847,910,932,936,942,984,985,987,1014,1017,1135,1191,1196,1253,1254],possibi:[40,41],possibl:[43,984,1039,1071,1097,1102,1293],post:[1233,1234],post_shap:[40,41],power:[43,869,894,900,984,1022,1056,1065,1255],practic:1247,pre:[910,1135,1247],pre_shap:[40,41],precis:[837,838,841,853],pred:[1229,1230,1231,1232],predict:[1229,1230,1231,1232,1293],preprint:1247,present:[40,41],preserv:[40,41,42,858,859,1081,1092],preserve_typ:[40,41,469,472,1081,1092],press:1247,prevent:[43,1081,1083,1084,1088,1135,1280,1281,1282],prevet:43,previou:[1081,1084,1088],previous:[984,996],prime:1247,print:[40,41,42,910,950,984,1049,1247,1289],print_all_arrays_in_memori:984,print_all_arrays_on_dev:910,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1280,1284],prob:[485,486,1191,1192,1216,1224,1264,1272],probabl:[1191,1192,1216,1224,1264,1272],problem:[43,1293],process:[43,910,919,920,949,959,984,1044,1135],process_specif:[910,949,959,1135],prod:[40,41,984,1010],produc:[910,919,920,1135],product:[40,41,984,1004,1005,1040,1198,1199,1216,1227,1228,1264,1275],profil:[122,286,433,556,685,910,1135],progress:43,project:[1247,1289,1290,1293],promot:[43,841,842,843,853,855,857,869,894,1115,1123],prompt:1247,properli:43,properti:[40,41,391,910,922,1135,1241,1245,1276,1277,1280,1281,1282,1283,1285],provid:[40,41,43,858,859,865,866,867,908,909,910,927,960,967,968,969,974,983,984,1008,1046,1048,1055,1080,1081,1084,1086,1088,1089,1090,1096,1135,1247,1264,1273,1280,1281,1282,1283,1284,1285,1290],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1104,1108],ptype:[1241,1245],pull:[1247,1248],pure:[40,41,1247,1293],purpos:[43,1293],put:1135,pybroadexcept:1135,pyprotectedmemb:[1135,1242],pyshadowingbuiltin:43,pyshadowingnam:[911,961,962,963,1082,1135],python:[40,41,910,949,959,984,987,1135,1247],pytorch:[1081,1084,1086,1088,1089,1090,1104,1109,1247,1280,1281,1282,1283,1284,1285,1289,1290,1293],pyunresolvedrefer:1135,quadrant:[1115,1120],qualiti:43,queri:[40,41,869,883,904,910,943,953,1135,1216,1227,1228,1264,1275],query_dim:[1264,1275],query_kei:[40,41],queue:[40,41,42,910,919,920,984,1050,1058,1135],queue_class:[910,919,920,1135],queue_load_s:[40,41,42],queue_timeout:[40,41,42,984,1135],quick:[485,1247],quickli:[43,1289],radian:[841,845,1115,1116,1118,1120,1127,1129],rai:[1115,1116],rais:[40,41,43,865,866,867,869,894,984,994,1022,1056,1063,1065,1075,1135,1276,1277,1280,1284],ram:[910,949,956,959,1135],randint:[175,360,485,617,796,1191],random:[37,40,41,486,1192,1193,1194,1195,1196,1197,1247],random_crop:1097,random_norm:[175,360,485,617,796,1191],random_uniform:[175,360,485,617,796,1191],randomli:[485,1097,1101,1216,1224,1264,1272],randomness_factor:[1235,1237,1241,1276,1277],rang:[485,984,987,1037,1038,1115,1120,1135,1247,1289,1293],rank:[855,857,865,866,867,984,1001,1076,1079],rate:[1081,1084,1086,1088,1089,1090,1131,1132,1133,1134,1264,1275,1280,1281,1282,1283,1284,1285],rather:[40,41,43,910,954,984,987,1034,1081,1087,1135],ratio:[910,1081,1088,1097,1102,1135,1280,1282],raw:[40,41,1104,1109],raw_delta:1135,reach:[43,910,932,936,942,1135,1179,1188],read:[40,41],readi:[1135,1289],real:[1115,1116,1119],realiti:1290,rearrang:[40,41,984,1009,1011],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1131,1133],receiv:[43,910,919,920,984,988,1039,1135,1264,1274],receivess:[910,1135],receiving_fn:1241,receivng:[1131,1134],recev:[1131,1132,1133],recognit:1293,recommend:1247,rectifi:[1208,1210,1211],recurr:[1216,1226],recurrent_bia:[1216,1226],recurrent_kernel:[1216,1226],recurs:[40,41,1179,1180,1181,1187,1188],redefin:43,reduc:[40,41,865,866,867,910,954,984,1010,1104,1109,1135,1198,1200,1201,1202,1203,1204,1205,1206],reduce_max:[40,41,182,365,487,622,803,1198],reduce_mean:[40,41,182,365,487,622,803,1198,1247,1289],reduce_min:[40,41,182,365,487,622,803,1198],reduce_prod:[40,41,182,365,487,622,803,1198],reduce_std:[40,41,365,1198],reduce_sum:[40,41,182,365,487,622,803,1135,1198],reduce_var:[40,41,182,365,487,622,803,1198],reduct:[39,40,41,435,462,463,865,866,867,984,1010,1054,1055,1199,1200,1201,1202,1203,1204,1205,1206,1247],refactor:43,refer:[43,841,850,865,866,867,1081,1083,1084,1104,1111,1264,1274,1293],reflect:43,reflected_oper:[0,13,14],regard:[910,1135],regardless:[40,41,908,909],register_paramet:1289,reimplement:1293,rel:[858,859,1081,1084,1086,1088,1089,1090],rel_slice_obj:1135,relat:43,relev:[1280,1281,1282,1283,1284,1285],relu:[812,1208,1209,1210,1247,1289],remain:[43,984,1052,1179,1183],remaind:[40,41,984,1016,1062],remov:[40,41,43,984,1063,1131,1132,1133],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,858,859],rep:[984,1069],repeat:[40,41,43,292,693,984,1011,1069,1135,1290],repeated_config_check:[910,1135],repeatedli:[1179,1186],repetit:[40,41,984,1051,1069],replac:[40,41,43,485,486,984,997,1054,1055,1191,1192],repo:[43,1247],repositori:43,repres:[43,841,842,960,966,971,1216,1225],represent:[40,41,42,43,833,837,838,839,841,843,910,937,938,960,966,972,973,984,1061,1071,1135],reptil:[1131,1134],reptile_step:1131,request:[1247,1248],requir:[43,841,853,908,909,960,964,984,987,991,1253,1254],resampl:[984,1036],reserv:43,reshap:[40,41,43,485,693,984],reshape_lik:[40,41],respect:[841,843,849,869,888,984,1012,1081,1083,1084,1085,1086,1088,1089,1090,1104,1109,1115,1123,1131,1132,1133,1134],respond:43,respons:[43,1135],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,841,842,843,847,849,850,852,853,855,857,865,866,867,869,888,894,910,919,984,987,1012,1054,1055,1066,1104,1107,1112,1113,1114,1115,1123,1135,1198,1200,1201,1202,1203,1204,1205,1206,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1247],ret:1135,ret_dict:1135,ret_fn:[910,919,920,1135],retain:[1081,1085],retain_grad:[469,470,1081,1085],retreiv:1135,retrn:[984,1061],return_cont:[40,41],return_dict:[40,41],return_graph:[1235,1236,1237],return_inner_v:[1131,1132,1133,1134],return_sequ:[1264,1273],return_st:[1264,1273],rev:[984,1008],revers:[40,41,858,859,984,1008,1074],review:43,right:[40,41,43],rk_e:1293,robot:1247,ronald:1247,root:[43,841,853],round:[292,435,693,841,853,984,987,1135],row:[984,1027,1191,1192],rule:[43,841,843,853,869,894,984,987,1115,1123],run:[43,910,919,1081,1083,1084,1088,1131,1132,1133,1134,1135,1247,1248,1264,1275,1276,1277],safe:[910,919,1135],safety_factor:[910,1135],same:[15,16,17,40,41,43,841,844,858,859,910,919,920,954,955,960,964,984,985,1000,1015,1016,1019,1020,1046,1048,1053,1054,1055,1066,1080,1081,1087,1092,1104,1110,1115,1119,1131,1132,1133,1135,1198,1199,1216,1217,1218,1219,1220,1221,1222,1223,1247,1264,1265,1266,1267,1268,1269,1270,1271,1289,1293],same_arrai:[40,41],sampl:[984,1036,1097,1098,1191,1192,1194,1195,1216,1224,1247,1264,1272],satisfi:[984,991,1104,1106,1111],save:[40,41,984,1059,1070,1097,1099,1276,1277],save_debug_info:1241,save_dir:[433,434,910,925,1135],save_to_disk:[1235,1237,1241,1276,1277],save_weight:[1276,1277],scalar:[855,857,984,997,1046,1073,1077],scale:[910,952,953,1081,1089,1135,1216,1224,1227,1228,1233,1234,1264,1272,1275,1280,1283],scaled_dot_product_attent:1216,scatter:[984,1046,1054,1055],scatter_flat:[129,292,435,563,693,984],scatter_nd:[129,292,435,563,693,984],scene:[1081,1084,1086,1088,1089,1090],schemat:1247,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,841,843,910,941,984,992,1004,1012,1050,1058,1068,1081,1083,1084,1088,1131,1133,1135,1280,1281,1282],secondli:1293,sector:[841,842],see:[43,59,391,433,434,485,841,843,855,857,865,866,867,869,888,894,910,922,923,924,925,960,984,987,1037,1038,1081,1115,1123,1241,1245,1247,1255,1257,1258,1260,1261,1263],seed:[40,41,175,485,796,1191],seed_valu:[40,41,485,1191,1196],seem:1247,seen_set:[984,1025],select:[984,991,1063,1290,1293],self:[40,41,43,59,391,433,434,869,888,894,910,922,923,924,925,960,1081,1135,1241,1245,1247,1255,1257,1258,1260,1261,1263,1280,1284,1289,1293],self_i:[869,888],sent:1135,seper:[43,984,1017],seq:[40,41,42,1198,1199,1276,1277],sequenc:[15,16,17,40,41,42,43,485,908,909,910,919,920,929,930,931,932,933,934,935,936,939,940,954,960,964,984,987,991,993,995,1000,1001,1027,1039,1042,1047,1051,1052,1055,1062,1066,1069,1074,1079,1081,1085,1097,1101,1102,1104,1107,1135,1179,1190,1191,1193,1195,1198,1200,1201,1202,1203,1204,1205,1206,1216,1217,1218,1219,1220,1221,1222,1223,1233,1234,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1276,1277,1278,1279,1280,1284,1286,1287],sequenti:1247,seri:43,set:[15,18,19,40,41,910,939,940,952,953,954,984,986,1007,1027,1056,1057,1058,1059,1081,1084,1086,1087,1088,1089,1090,1104,1107,1135,1179,1180,1187,1189,1190,1191,1192,1196,1198,1200,1201,1202,1203,1204,1205,1206,1245,1247,1264,1273,1280,1281,1282,1283,1284,1285,1290,1293],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1245,set_debug_mod:44,set_default_devic:910,set_default_dtyp:960,set_default_float_dtyp:960,set_default_int_dtyp:960,set_default_nod:1135,set_exception_debug_mod:44,set_framework:[40,41,43,59,1135,1247,1289,1290,1293],set_ivy_backend:[40,41],set_min_bas:984,set_min_denomin:984,set_nest_at_index:1179,set_nest_at_indic:1179,set_param:1241,set_queue_timeout:984,set_split_factor:[910,1135],set_stat:[1280,1281,1282,1283,1284,1285],set_tmp_dir:984,set_with_grad:1081,setter:1135,sever:1293,sgd:[1247,1280],shape0:1135,shape:[40,41,43,388,389,390,435,448,463,485,693,834,835,836,841,844,858,859,910,922,960,964,984,985,995,1000,1001,1014,1015,1016,1018,1020,1024,1027,1046,1047,1048,1051,1052,1053,1054,1055,1061,1063,1066,1079,1080,1097,1101,1104,1106,1109,1115,1119,1120,1135,1191,1193,1194,1195,1198,1199,1216,1218,1220,1222,1241,1245,1264,1266,1267,1268,1269,1270,1271,1278,1279],shape_slic:[40,41],shape_to_tupl:984,share:[40,41,1247,1290],shift:1135,should:[40,41,42,43,485,841,842,843,847,853,855,857,869,888,894,908,909,910,984,995,996,1002,1046,1052,1081,1084,1086,1088,1089,1090,1115,1123,1135,1198,1199,1247],show:[40,41,1241,1247,1293],show_debug_info:1241,show_graph:[1235,1247,1276,1277,1280,1284],show_mod_in_top_mod:[1276,1277],show_structur:[1276,1277],show_sub_contain:[40,41],show_v:[1276,1277],show_v_in_top_v:[1276,1277],shown:[40,41],shp:1135,shuffl:[40,41,175,485,796,1191],shuffle_h5_fil:[40,41],side:43,sigmoid:[812,1208,1247,1289],signatur:[43,59,391,433,434,435,469,474,478,482,483,485,910,922,923,924,925,960,1081,1241,1245,1255,1257,1258,1260,1261,1263],signific:1293,similar:[43,1216,1227,1264,1275],similarli:[1104,1109],simpl:[43,984,1013,1247,1290,1293],simpler:43,simplest:1290,simpli:[40,41,43,1247,1290,1293],simultan:1247,sin:[781,984,1017,1115,1129,1290],sinco:1290,sine:[841,842,1115,1118,1127,1128],singl:[40,41,908,909,910,919,920,939,940,941,942,984,1063,1073,1077,1097,1102,1135,1191,1194,1195,1198,1200,1201,1202,1203,1204,1205,1206,1247,1290,1293],singleton:[855,857,865,866,867],singular:[1104,1110],sinh:[781,1115],siren:[1247,1255],situat:43,size:[40,41,42,435,462,910,933,934,935,936,952,953,954,984,987,995,1037,1038,1054,1062,1097,1101,1104,1107,1110,1135,1191,1192,1194,1195,1198,1200,1201,1202,1203,1204,1205,1206,1264,1265,1266],size_ordered_arrai:[40,41],skew:[1104,1111],skinv:1293,skip:[40,41],slice:[40,41,862,863,984,1019,1020,1135,1179,1186],slice_kei:[40,41],slice_obj:[40,41,1135],slice_via_kei:[40,41],slide:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],slope:[1208,1210],small:[1229,1230,1231,1232,1233,1234,1247,1278,1279,1290],smaller:[984,997],smallest:[40,41,837,838,839,841,844,984,990],smallest_norm:[391,837,838],softmax:[191,496,812,1208,1216,1227,1228],softplu:[812,1208],solut:43,solv:1293,some:[40,41,43,984,987,1081,1083,1084,1086,1088,1089,1090,1095,1216,1224,1247,1264,1272,1290,1293],some_backend:43,some_namespac:43,someth:[43,1293],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,863,1104,1110,1135],sort_by_kei:[40,41],sorting_funct:[862,863],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,859,862,863,865,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1245,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1291,1292,1293],space:[984,987,1017,1037,1038],spars:[1229,1232],sparse_cross_entropi:1229,spawn:[984,1044],special:[841,842],specif:[40,41,43,910,952,984,1002,1009,1010,1011,1044,1131,1132,1133,1134,1135,1191,1197,1247,1276,1277,1289,1290],specifc:[1191,1192],specifi:[40,41,43,855,856,857,858,859,865,866,867,910,929,930,931,932,933,934,935,936,939,940,944,946,950,953,954,955,960,964,966,984,987,989,990,991,997,1000,1001,1018,1019,1020,1026,1037,1038,1066,1076,1079,1104,1107,1135,1179,1184,1185,1189,1190,1198,1199,1200,1201,1202,1203,1204,1205,1206],split:[40,41,129,292,435,563,693,910,919,933,934,935,936,952,953,954,984,1039,1135],split_arg:1135,split_factor:[910,919,1135],split_func_cal:[910,1135],split_siz:1135,spread:[910,942,1135],sqrt:[85,215,396,518,647,841,855,857],squar:[841,853,984,1027,1104,1106],squeez:[129,292,435,563,693,984],stabil:[862,863,984,1064,1065],stabl:[862,863,984,1022,1023,1056,1057,1064,1065],stable_divid:984,stable_pow:984,stack:[40,41,292,693,984,1097,1102,1179,1180,1187,1264,1273],stack_imag:[165,346,474,606,766,1097],stacked_dim_s:1135,stage:43,standard:[40,41,837,838,1191,1194,1198,1204,1233,1234,1247,1248,1278,1279],start:[40,41,43,433,434,435,436,458,459,485,910,925,984,987,1037,1038,1135,1247,1290],starting_index:[40,41],starting_split_factor:[910,1135],state:[1135,1216,1226,1235,1236,1237,1241,1247,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],statement:1290,static_argnam:[435,441,908,909],static_argnum:[435,441,908,909],std:[485,1191,1194],step:[40,41,435,436,910,984,987,1037,1038,1081,1083,1084,1086,1088,1089,1090,1131,1132,1133,1134,1135,1247,1280,1281,1282,1283,1284,1285,1289,1293],stephen:1247,stick:1247,still:[40,41,43],stochast:[1280,1285],stop:[40,41,433,434,435,436,458,459,910,925,954,984,987,1037,1038,1081,1084,1086,1088,1089,1090,1092,1131,1132,1133,1134,1135,1280,1281,1282,1283,1284,1285],stop_gradi:[40,41,341,469,601,760,910,954,1081,1084,1086,1088,1089,1090,1131,1132,1133,1134,1135,1280,1281,1282,1283,1284,1285],stopiter:1135,store:[40,41,984,1017,1062,1081,1095,1276,1277],store_var:[1276,1277],str:[15,16,17,40,41,42,43,388,389,390,391,393,394,837,838,839,908,909,910,919,920,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,954,960,965,966,971,972,973,974,975,976,983,984,991,1007,1009,1010,1011,1042,1044,1047,1054,1055,1104,1107,1109,1131,1132,1133,1134,1135,1179,1183,1198,1199,1253,1254,1264,1275,1276,1277],str_to_nod:1135,straight:1290,strength:[1247,1293],stride:[1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],string:[40,41,43,910,926,928,937,938,943,949,955,956,959,960,964,970,972,973,974,983,984,987,991,1007,1027,1047,1048,1080,1135,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271,1276,1277],structur:[40,41,42,43,984,1002],structural_diff:[40,41],sub:[40,41,43,910,933,934,939,940,941,942,984,1062,1131,1132,1133,1134,1135],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1135,sub_mod:[1276,1277],sub_modul:[1286,1287],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1247,1248,1278,1279,1286,1287],subsequ:43,subset:43,substr:[40,41],suffici:[1104,1109],suggest:1247,suitabl:[1097,1102],sum:[40,41,435,462,463,855,857,910,939,940,941,942,954,984,1006,1010,1054,1055,1135,1198,1199,1205],summat:[40,41,1198,1199],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,97,100,101,103,107,110,111,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,170,171,172,176,177,178,179,180,181,183,184,185,186,187,188,189,192,194,195,197,198,199,200,201,202,203,208,209,211,212,213,216,217,218,219,220,221,222,225,226,228,232,235,236,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,533,534,536,540,543,544,552,557,558,559,560,561,562,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,602,603,604,605,607,608,609,611,612,613,614,618,619,620,621,623,624,625,626,627,628,629,633,634,635,640,641,643,644,645,648,649,650,651,652,653,654,655,656,657,658,659,662,663,665,669,672,673,681,686,687,688,689,690,691,692,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,761,762,763,764,765,767,768,769,771,772,773,774,775,776,777,779,780,782,783,784,785,786,787,788,789,790,791,792,793,794,795,797,798,799,800,801,802,804,805,806,807,808,809,810,813,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,835,836,838,839,842,843,844,845,846,847,848,849,850,851,852,853,855,856,857,859,863,866,867,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1234,1236,1237,1239,1240,1242,1246,1247,1251,1252,1254,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1292,1293],supports_inplac:984,suppos:1293,sure:43,svd:[350,610,770,1104],swap:[40,41,984,1068],swapax:[40,41,563,693,984,1293],symmetr:[1104,1111],syntax:[433,435,469,474,478,482,483,485],tab:1247,take:[43,984,1036],taken:[43,1198,1200,1201,1202,1204,1206],tan:[781,1115,1119],tangent:[1115,1119,1120,1121,1129,1130,1208,1215],tanh:[781,812,1115,1208],target:[40,41,910,926,929,930,931,932,933,934,935,936,939,940,941,942,955,1135,1247],target_dict:[40,41],task:[43,1131,1132,1133,1134],team:[43,1293],templat:1247,temporari:[984,1059,1070],tensor:[40,41,43,435,462,463,862,863,910,928,960,970,984,987,989,990,995,1037,1038,1041,1043,1046,1047,1048,1052,1054,1055,1062,1080,1135,1191,1192,1193,1216,1224,1226,1247,1264,1272,1274,1280,1281,1282,1283,1284,1285,1289,1290],tensorflow:[43,1104,1109,1216,1218,1220,1222,1247,1264,1266,1268,1270,1290,1293],term:[40,41,43,1216,1226,1247,1264,1274],termcolor:[40,41,42],termin:[40,41,42,1135],test:[43,841,847,865,866,867,960,975,976],test_array_api:43,tf_concat:1247,than:[40,41,43,837,838,841,844,855,857,858,859,910,954,984,987,997,1015,1034,1041,1063,1066,1081,1087,1135,1191,1195,1247,1290],thei:[40,41,43,1115,1120,1131,1132,1133,1191,1192,1247,1286,1287,1290],them:[1247,1293],themselv:[1179,1180],therefor:43,thi:[40,41,42,43,910,932,936,942,949,954,959,984,987,1017,1050,1052,1058,1081,1084,1086,1087,1088,1089,1090,1095,1104,1107,1135,1179,1183,1188,1198,1200,1201,1202,1203,1204,1205,1206,1216,1225,1247,1276,1277,1280,1281,1282,1283,1284,1285,1289,1290,1293],thing:[43,1247],those:[40,41,43,984,997,1081,1095,1104,1110,1135],though:43,thought:43,threshold:[984,1041,1043],through:[40,41,43],tick:43,tickbox:43,tile:[292,563,693,984],time:[43,984,1069,1081,1084,1088,1131,1132,1133,1134,1135,1191,1192,1216,1226,1264,1275,1276,1277,1293],time_chronolog:[1235,1236,1241],time_infer:[1235,1236],timeout:[40,41,42,910,919,920,984,1050,1058,1135],timestep:[1216,1226,1264,1273],timing_fnam:[1235,1236],titl:[43,1247],tmp_dir:984,tmp_dr:[984,1059],to_appli:[40,41],to_clon:[910,1135],to_dev:[40,41,122,286,433,556,685,910],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[910,1135],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1247],to_ivy_modul:[193,820,1247,1253],to_json:[40,41],to_kv_fn:[1216,1227],to_kv_v:[1216,1227],to_list:[40,41,435,693,984],to_multi_dev:[40,41],to_mut:[1179,1181,1188],to_n:[15,40,41,1247],to_nod:1135,to_numpi:[40,41,435,693,984,1247,1289],to_out_fn:[1216,1227],to_out_v:[1216,1227],to_q_fn:[1216,1227],to_q_v:[1216,1227],to_raw:[40,41],to_scalar:[435,693,984],todo:[1135,1247,1248],togeth:[40,41,1286,1287],tool:[1247,1290],top_mod:[1276,1277],topic:1293,torch:[43,908,909,1247,1289,1290,1293],torch_concat:1247,torchfcmodel:1289,total:[40,41,42,910,956,1135],total_mem_on_dev:910,total_mem_on_nod:1135,tpu:[910,957,1135],tpu_is_avail:[433,556,685,910,1135],tpye:[960,971],trace:[40,41,984,1034],track:[43,910,1135,1179,1188,1276,1277],track_submod_call_ord:[1276,1277],track_submod_ret:[1276,1277],trail:[1278,1279],train:[1081,1083,1084,1088,1247,1248],trainabl:[1081,1087,1247,1248,1253,1254,1276,1277,1286],trainer:1247,tran:1293,transform:[1216,1224,1225],transpos:[40,41,129,292,435,693,910,941,984,1135,1216,1218,1220,1222,1264,1266,1268,1270],travers:[15,18,19,40,41,1179,1188],treat:[40,41,908,909],tree_depth:1245,tree_height:1241,tri:[40,41],trigonometr:[841,845,1115,1116,1119,1127],trim_kei:[40,41],trust:[1081,1088,1280,1282],truth:[841,849,852,869,888,984,1012,1112,1113,1114],try_else_non:984,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[910,1135],tune_dev_alloc:910,tune_dev_split:910,tune_node_alloc:1135,tune_node_split:1135,tune_step:[910,1135],tupl:[15,16,17,18,19,40,41,43,388,389,390,834,835,836,855,857,858,859,865,866,867,908,909,984,1001,1017,1018,1061,1079,1135,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1198,1200,1201,1202,1203,1204,1205,1206],tutori:43,two:[40,41,984,987,992,1004,1040,1068,1104,1107,1110],type:[15,18,40,41,42,43,59,393,394,433,434,834,835,836,838,839,841,842,843,844,847,849,853,855,857,858,859,865,866,867,869,888,894,910,922,923,924,925,937,938,942,954,960,964,965,966,970,971,972,973,974,975,976,983,984,985,987,991,1000,1002,1012,1015,1016,1018,1027,1034,1046,1047,1048,1053,1067,1077,1080,1081,1087,1092,1115,1123,1135,1241,1245,1247,1255,1257,1258,1260,1261,1263,1276,1277,1290],types_to_iteratively_nest:[40,41,42],uint8:[1097,1099,1103],uint8_img_to_float_img:1097,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[841,843],underwai:43,unfairli:43,unif:1135,unifi:[40,41,910,939,940,941,942,954,1135,1247],uniform:[40,41,1191,1192,1194,1195,1255,1257,1258,1261,1262],uniformli:[1191,1193,1195],unify_arrai:1135,unify_it:1135,unify_nest:1135,union:[15,18,19,40,41,43,388,389,390,391,393,394,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,852,853,855,857,858,859,862,863,865,866,867,869,888,894,908,909,910,928,933,934,935,936,954,955,960,964,965,966,970,971,972,973,974,975,976,983,984,985,986,987,989,990,991,992,993,995,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1035,1036,1037,1038,1040,1041,1042,1043,1046,1047,1048,1051,1052,1053,1054,1055,1060,1061,1062,1063,1066,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1135,1179,1180,1181,1187,1188],uniqu:[910,919,920,1131,1132,1133,1134,1135,1179,1183],unique_kwarg:1135,unit:[43,910,1115,1116,1118,1135,1208,1209,1210,1211],unitari:[1104,1110],unless:[984,1046,1048,1080],unlik:[910,1135],unnorm:[1191,1192],unpack:[984,1076],unrol:[1216,1226],unset:1290,unset_debug_mod:44,unset_default_devic:910,unset_default_dtyp:960,unset_default_float_dtyp:960,unset_default_int_dtyp:960,unset_framework:[59,1290],unset_with_grad:1081,unstack:[40,41,129,292,435,563,693,984],until:43,unus:[908,909],updat:[40,41,435,462,463,910,919,984,1032,1054,1055,1081,1083,1084,1086,1088,1089,1090,1131,1132,1133,1135,1179,1184,1185,1189,1190,1216,1226,1247,1248,1253,1254,1280,1281,1282,1283,1284,1285,1290,1293],update_backend:[40,41],update_config:[40,41],update_inference_tim:1241,upon:43,upper:[40,41,1191,1195],upper_depth:[1276,1277],upstream:43,usabl:[1247,1293],usag:[910,954,1135],use:[40,41,42,43,485,910,919,920,945,957,984,1051,1064,1065,1104,1109,1135,1216,1227,1233,1234,1247,1278,1279,1290,1293],used:[40,41,43,485,910,919,949,952,953,959,960,971,984,1022,1023,1039,1048,1054,1055,1056,1057,1080,1081,1088,1089,1104,1107,1131,1132,1133,1134,1135,1179,1188,1264,1275,1280,1282,1283,1289,1290],used_dev:[910,919],used_mem_on_dev:910,used_mem_on_nod:1135,used_node_str:1135,used_node_strs_dict:1135,useful:[40,41,910,954,1135,1216,1225,1247,1290],user:[1247,1264,1275,1276,1277,1290,1293],uses:1247,using:[40,41,1081,1083,1084,1179,1182,1186,1198,1199,1216,1224,1228,1247,1264,1272,1289,1290,1293],util:[910,943,1135],utility_funct:[865,866,867],v_with_top_v_key_chain:[1276,1277],val:[40,41,435,453,454,455,869,904,984,1030,1031,1032,1056,1057,1245],valid:[865,866,867,960,965,984,1064,1065,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],valid_dtyp:960,valu:[40,41,435,841,848,849,852,855,857,862,863,869,888,910,922,953,954,984,985,987,989,990,997,998,999,1001,1002,1008,1012,1017,1018,1019,1020,1035,1037,1038,1041,1043,1050,1051,1052,1053,1054,1055,1056,1057,1058,1074,1077,1078,1079,1081,1085,1088,1097,1103,1104,1110,1112,1113,1114,1115,1124,1125,1126,1131,1132,1133,1135,1179,1183,1184,1185,1189,1190,1191,1194,1195,1198,1200,1202,1216,1227,1228,1233,1234,1241,1264,1275,1278,1279,1280,1282],value_is_nan:984,vanilla:[1131,1133],var_shap:1255,variabl:[15,16,17,18,19,40,41,341,469,601,760,984,994,1030,1031,1032,1033,1034,1067,1081,1084,1085,1086,1087,1088,1089,1090,1092,1095,1131,1132,1133,1134,1216,1227,1233,1234,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],variable_data:[469,760,1081],varianc:[40,41,1198,1206,1293],varieti:1290,variou:[43,1247],vector:[40,41,478,481,855,857,984,999,1004,1104,1110,1111,1216,1225,1264,1274],vector_norm:[40,41,99,224,410,532,661,855],vector_to_skew_symmetric_matrix:[169,350,478,610,770,1104],verbos:1292,veri:[43,1247],verifi:43,version:43,via:[1179,1180,1187,1290],view:[1097,1102],vision:1247,visual:1290,volum:[1216,1221],vw_tm1:[1081,1084,1088],wai:[1290,1293],wait:[40,41,42,43],want:[43,1247,1290,1293],warn:[59,66,67,68,69,70],warp:[474,475,1097,1098],watch:1289,websit:43,weight:[1081,1083,1084,1086,1088,1089,1090,1216,1225,1226,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1276,1277,1280,1282,1283],weight_initi:[1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],weights_path:[1276,1277],well:[40,41,984,1026],were:[40,41,1135],what:[43,1247],when:[40,41,42,43,910,984,996,1065,1078,1104,1110,1135,1247,1276,1277,1290,1293],where:[40,41,43,292,435,693,841,848,850,865,866,867,869,894,984,987,995,997,1001,1014,1028,1035,1046,1079,1104,1110,1179,1180,1187,1191,1192],wherea:43,wherebi:[1179,1188],whether:[15,18,19,40,41,42,865,866,867,908,909,910,928,941,945,949,954,957,959,960,970,974,975,976,983,984,986,992,993,1005,1008,1013,1017,1024,1026,1029,1033,1034,1039,1060,1067,1076,1077,1081,1084,1085,1086,1087,1088,1089,1090,1092,1131,1132,1133,1134,1135,1179,1180,1181,1183,1187,1188,1191,1192,1208,1209,1216,1224,1247,1253,1254,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],which:[40,41,42,43,485,834,835,836,837,838,839,855,856,857,858,859,865,866,867,908,909,910,919,920,928,933,934,935,936,939,940,941,942,944,946,950,952,953,954,960,965,970,974,983,984,987,991,1000,1002,1004,1005,1006,1008,1018,1019,1020,1021,1027,1028,1036,1037,1038,1045,1046,1047,1048,1049,1051,1054,1055,1062,1066,1076,1078,1080,1081,1084,1085,1086,1088,1089,1090,1092,1094,1095,1097,1099,1104,1107,1115,1120,1135,1179,1183,1184,1185,1189,1190,1191,1192,1193,1194,1195,1198,1200,1201,1202,1203,1204,1205,1206,1208,1213,1216,1227,1228,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1289,1290],whilst:43,whitespac:[40,41,42],who:43,whose:[43,841,842,858,859,869,894,984,991,996,1198,1199,1200,1201,1202,1204,1206],why:[1247,1248],width:[1097,1102],wiki:1293,wikipedia:1293,window:[1097,1102,1216,1217,1218,1219,1220,1221,1222,1223,1264,1265,1266,1267,1268,1269,1270,1271],wise:[40,41,43,841,843,844,845,849,852,869,888,894,984,997,1012,1015,1016,1041,1043,1053,1081,1084,1086,1088,1090,1112,1113,1114,1115,1116,1118,1119,1120,1123,1124,1125,1126,1127,1129,1208,1209,1210,1211,1212,1213,1214,1215],wish:1290,with_arg_label:[1235,1237,1241,1276,1277],with_array_cach:[1235,1236,1237,1241],with_bia:[1264,1274],with_cal:[984,1008],with_default_key_color:[40,41],with_edge_label:[1235,1237,1241,1276,1277],with_entries_as_list:[40,41],with_grad:[1081,1091,1276,1277],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1135,with_output_label:[1235,1237,1241,1276,1277],with_partial_v:[1276,1277],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,435,464,984,1062,1135],with_to_kv_fn:[1264,1275],with_to_out_fn:[1264,1275],with_to_q_fn:[1264,1275],within:[15,18,19,43,984,987,1104,1110,1191,1195],without:[40,41,43,984,1050,1052,1058,1179,1181,1290],wonder:1247,word:[15,16,17,984,987,1191,1195,1253,1254],work:[43,1289],worker:[910,919,920,1135],worker_class:[910,919,920,1135],worker_kwarg:1135,would:[43,862,863,1208,1213,1247,1290,1293],wrap:[15,40,41,42,43,433,435,469,474,478,482,483,485,984,996,1081,1095,1247],wrapper:43,write:[40,41,43,1247,1248,1293],written:[43,1247,1293],ws_new:[1081,1084,1086,1088,1089,1090],x1_i:[841,843,849,984,1012,1115,1123],x2_i:[841,843,849,984,1012,1115,1123],x_feat_dim:[1216,1227],x_i:[841,842,847,853],x_in:[1247,1289],x_inv:[1104,1106],x_max:[435,984,997],x_min:[435,984,997],x_sub:1135,xkk:1293,xkkm1:1293,xkm1km1:1293,xs0:1135,xs_t:1135,year:[1247,1293],yet:[1179,1188,1293],yield:[984,1078],you:[43,1247,1289,1290,1293],your:[1247,1248,1289,1290,1293],your_awesome_project:1290,yourself:[43,1247],yourslef:43,youtub:43,zero:[40,41,77,207,388,510,639,834,855,857,865,866,867,984,1001,1046,1048,1054,1055,1079,1080,1081,1083,1084,1088,1089,1216,1224,1247,1255,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1280,1281,1282,1283],zero_pad:[292,435,563,693,984],zeros_lik:[129,292,435,563,693,984],zip:1135,zk_e:1293},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1008,"function":[77,80,85,98,102,104,105,106,108,109,207,210,215,223,227,229,230,231,233,234,388,391,396,409,413,415,416,417,419,420,510,513,518,531,535,537,538,539,541,542,639,642,647,660,664,666,667,668,670,671,834,837,841,854,858,860,861,862,864,865],Ones:1260,Using:1290,abs:[293,564,694,985],aco:[782,1116],acosh:[783,1117],activ:[191,375,496,631,812,1208,1250],adam:1281,adam_step:1083,adam_upd:1084,algebra:[99,169,224,350,410,478,532,610,661,770,855],all:[110,235,421,543,672,866],all_equ:986,all_nested_indic:1180,ani:[111,236,422,544,673,867],api:[0,43,75,113,205,238,386,424,508,546,637,675,832],arang:[130,294,436,565,695,987],arg_nam:988,argmax:[131,437,566,696,989],argmin:[132,438,567,697,990],args_to_ivi:16,args_to_n:17,argsort:[107,232,418,540,669,863],arithmet:[1,114,239,425,547,676],arrai:[0,3,43,75,112,113,115,133,205,237,238,240,247,295,386,423,424,426,439,508,545,546,548,568,637,674,675,677,698,832,869,991],array_equ:[296,699,992],arrays_equ:993,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[784,1118],asinh:[86,397,519,648,842],assert_supports_inplac:994,atan2:[786,1120],atan:[785,1119],atanh:[787,1121],attribut:[5,116,241,427,549,678],backend:[43,73],bilinear_resampl:[166,347,475,607,767,1098],binary_cross_entropi:1230,bitwis:[7,117,242,428,550,679],bitwise_and:[87,216,398,520,649,843],broadcast_to:[297,700,995],builder:51,builtin:[112,237,247,423,545,674,869],builtin_ab:[248,870],builtin_add:[249,871],builtin_and:[250,872],builtin_bool:[251,873],builtin_contain:[252,874],builtin_deepcopi:[253,875],builtin_dir:[254,876],builtin_eq:[255,877],builtin_float:[256,878],builtin_floordiv:[257,879],builtin_g:[258,880],builtin_getattr:[259,881],builtin_getattribut:[260,882],builtin_getitem:[261,883],builtin_gt:[262,884],builtin_int:[263,885],builtin_invert:[264,886],builtin_l:[265,887],builtin_lt:[266,552,681,888],builtin_mul:[267,889],builtin_n:[268,890],builtin_neg:[269,891],builtin_or:[270,892],builtin_po:[271,893],builtin_pow:[272,894],builtin_radd:[273,895],builtin_rand:[274,896],builtin_rfloordiv:[275,897],builtin_rmul:[276,898],builtin_ror:[277,899],builtin_rpow:[278,900],builtin_rsub:[279,901],builtin_rtruediv:[280,902],builtin_rxor:[281,903],builtin_setitem:[282,904],builtin_sub:[283,905],builtin_truediv:[284,906],builtin_xor:[285,907],cache_fn:996,cast:[134,298,440,569,701,964],ceil:[88,217,399,521,650,844],choleski:[771,1105],choose_random_framework:61,citat:1247,clear_framework_stack:62,clear_mem_on_dev:[687,926],clip:[299,702,997],clip_matrix_norm:998,clip_vector_norm:999,clone:1150,clone_arrai:1151,clone_it:1152,clone_nest:1153,clonedit:1137,cloneditem:1136,clonednest:1138,closest_valid_dtyp:965,code:1293,comparison:[9,118,243,429,551,680],compil:[300,441,703,908,909,1235],compile_graph:1236,concaten:[135,301,442,570,704,1000],constant:[76,206,387,509,638,833],constant_pad:[302,571,705,1001],contain:[40,41],container_typ:[706,1002],content:1247,contribut:43,conv1d:[197,378,500,824,1217,1265],conv1d_transpos:[198,379,501,825,1218],conv1dtranspos:1266,conv2d:[199,380,502,633,826,1219,1267],conv2d_transpos:[200,381,503,827,1220],conv2dtranspos:1268,conv3d:[201,382,504,634,828,1221,1269],conv3d_transpos:[202,383,505,829,1222],conv3dtranspos:1270,convers:15,convert:[193,820,1253],convert_dtyp:966,copy_arrai:[707,1003],copy_nest:1181,core:[121,246,432,555,684,868],cos:[89,400,522,651,845],cosh:[90,401,523,652,788,846,1122],cprint:1292,creat:43,creation:[77,207,388,510,639,834],cross:[303,708,1004],cross_entropi:1231,cumprod:[136,304,443,709,1005],cumsum:[710,1006],current_framework:63,current_framework_str:[711,1007],data:[80,84,210,214,391,395,513,517,642,646,837,840],debug_mod:45,debugg:44,default_devic:927,default_dtyp:967,default_float_dtyp:968,default_int_dtyp:969,default_nod:1154,depthwise_conv2d:[203,384,506,635,830,1223],depthwiseconv2d:1271,design:43,dev:[124,288,558,688,928],dev_clon:929,dev_clone_arrai:930,dev_clone_it:931,dev_clone_nest:932,dev_dist:933,dev_dist_arrai:934,dev_dist_it:935,dev_dist_nest:936,dev_from_str:[125,289,559,689,937],dev_to_str:[126,290,560,690,938],dev_unifi:939,dev_unify_arrai:940,dev_unify_it:941,dev_unify_nest:942,dev_util:943,devclonedit:913,devcloneditem:912,devclonednest:914,devdistit:916,devdistitem:915,devdistnest:917,devic:[20,122,286,433,556,685,910],devmapp:919,devmappermultiproc:920,diagon:[100,225,411,533,662,856],distribute_nest:1155,divid:1123,document:1247,dropout:[1224,1272],dtype:[137,305,444,572,712,960,970],dtype_bit:[138,306,445,573,713,971],dtype_from_str:[139,307,446,574,714,972],dtype_to_str:[140,308,447,575,715,973],ecosystem:52,einops_rearrang:1009,einops_reduc:1010,einops_repeat:1011,einsum:[183,366,488,623,804,1199],elementwis:[85,215,396,518,647,841],equal:[576,716,1012],erf:[484,789,1124],execute_with_gradi:[163,342,470,602,761,1085],exist:1013,exp:[790,1125],expand_dim:[309,717,1014],finfo:[82,212,393,515,644,838],firstlayersiren:1257,flip:[103,228,414,536,665,859],float_img_to_uint8_img:1099,floor:[310,718,1015],floormod:[311,719,1016],fomaml_step:1132,fork:43,fourier_encod:1017,framework:59,full:[141,312,448,577,720,1018],func:72,gather:[142,313,449,578,721,1019],gather_nd:[143,314,450,579,722,1020],geglu:1251,gelu:[376,497,813,1209,1252],gener:[22,129,292,435,563,693,984],get_all_arrays_in_memori:1021,get_all_arrays_on_dev:944,get_framework:64,get_min_bas:1022,get_min_denomin:1023,get_num_dim:[723,1024],get_referrers_recurs:1025,global:1238,glorotuniform:1258,gpu_is_avail:[945,1156],gradient:[24,162,341,469,601,760,1081],gradient_descent_upd:1086,gradient_imag:[167,348,476,608,768,1100],graph:1241,gym:53,handler:59,has_nan:1026,helper:1243,ident:[144,315,451,580,724,1027],iinfo:[83,213,394,516,645,839],imag:[26,165,346,474,606,766,1097],index_nest:1182,indices_wher:[145,316,452,725,1028],initi:1255,inplac:[11,119,244,430,553,682],inplace_arrays_support:1029,inplace_decr:[146,317,453,581,726,1030],inplace_incr:[147,318,454,582,727,1031],inplace_upd:[148,319,455,583,728,1032],inplace_variables_support:1033,inv:[772,1106],invalid_dtyp:974,is_arrai:[149,320,456,584,729,1034],is_float_dtyp:975,is_int_dtyp:976,is_vari:[164,343,471,603,762,1087],isfinit:[91,218,402,524,653,847],isinf:[321,585,730,1035],isnan:[92,219,403,525,654,848],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,831,1289,1290,1293],ivymodul:[194,821],jax:74,keep:43,lamb:1282,lamb_upd:1088,lar:1283,lars_upd:1089,layer:[196,377,499,632,823,1216,1264],layer_norm:1234,layernorm:1279,leaky_relu:[814,1210],less:[93,220,404,526,655,849],linalg:[28,1104],linear:[99,169,224,350,410,478,532,610,661,770,855,1225,1274],linear_resampl:[150,322,457,586,731,1036],linspac:[151,323,458,587,732,1037],list:43,log1p:[94,405,527,656,850],log2:[95,406,528,657,851],log:[791,1126,1244],log_global_inference_abs_tim:1239,log_global_inference_rel_tim:1240,logic:[30,173,356,482,615,778,1112],logical_and:[357,779,1113],logical_not:[96,221,407,529,658,852],logical_or:[358,780,1114],logspac:[152,324,459,588,733,1038],loss:1229,lstm:1273,lstm_updat:1226,maml_step:1133,manipul:[102,227,413,535,664,858],map:1183,map_nest_at_index:1184,map_nest_at_indic:1185,match_kwarg:1039,math:[32,174,359,483,616,781,1115],matmul:[325,589,734,1040],matrix_norm:[170,351,479,611,773,1107],maximum:[735,1041],mech:54,memori:55,meshgrid:[326,736,1042],meta:[34,1131],method:[98,223,409,531,660,854],minimum:[737,1043],model:56,modul:[1276,1277,1289],multi:1135,multi_head_attent:1227,multi_index_nest:1186,multidevcontain:42,multidevit:923,multidevitem:922,multidevnest:924,multiheadattent:1275,multinodeit:1141,multinodeitem:1140,multinodenest:1142,multinomi:[176,361,486,618,797,1192],multiprocess:[738,1044],mxnet:204,nativ:1289,nest:1179,nested_indices_wher:1187,nested_map:1188,network:1289,next:1247,node:[1135,1157],node_dist:1158,node_dist_arrai:1159,node_dist_it:1160,node_str:1161,node_to_str:1162,node_util:1163,nodedistit:1144,nodedistitem:1143,nodedistnest:1145,nodemapp:1147,nodemappermultiproc:1148,norm:[1233,1278],num_arrays_in_memori:1045,num_arrays_on_dev:946,num_cpu_cor:947,num_gpu:[127,948,1164],numpi:385,nutshel:1247,one_hot:[153,460,590,739,1046],ones:[78,208,389,511,640,835,1047],ones_lik:[154,327,461,591,740,1048],oper:[1,3,7,9,11,13,43,114,115,117,118,119,120,239,240,242,243,244,245,425,426,428,429,430,431,547,548,550,551,553,554,676,677,679,680,682,683],optim:[1280,1284],optimizer_upd:1090,overview:1247,param:1245,percent_used_mem_on_dev:949,percent_used_mem_on_nod:1165,pinv:[352,774,1108],portabl:1293,print_all_arrays_in_memori:1049,print_all_arrays_on_dev:950,profil:[123,287,434,557,686,925,1149],pull:43,queue_timeout:1050,randint:[177,362,619,798,1193],random:[36,175,360,485,617,796,1191],random_crop:1101,random_norm:[178,363,620,799,1194],random_uniform:[179,364,621,800,1195],reduce_max:[184,367,489,624,805,1200],reduce_mean:[185,368,490,625,806,1201],reduce_min:[186,369,491,626,807,1202],reduce_prod:[187,370,492,627,808,1203],reduce_std:[371,1204],reduce_sum:[188,372,493,628,809,1205],reduce_var:[189,373,494,629,810,1206],reduct:[38,182,365,487,622,803,1198],reflect:[13,120,245,431,554,683],relu:[815,1211],repeat:[328,741,1051],reptile_step:1134,request:43,reshap:[742,1052],robot:57,round:[329,743,1053],run:1290,scaled_dot_product_attent:1228,scatter_flat:[155,330,462,592,744,1054],scatter_nd:[156,331,463,593,745,1055],search:[104,229,415,537,666,860],seed:[180,801,1196],sequenti:[1286,1287],set:[105,230,416,538,667,861],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:951,set_default_dtyp:977,set_default_float_dtyp:978,set_default_int_dtyp:979,set_default_nod:1166,set_exception_debug_mod:48,set_framework:65,set_min_bas:1056,set_min_denomin:1057,set_nest_at_index:1189,set_nest_at_indic:1190,set_queue_timeout:1058,set_split_factor:[952,1167],set_tmp_dir:1059,set_with_grad:1091,sgd:1285,shape:[746,1060],shape_to_tupl:1061,show_graph:1237,shuffl:[181,802,1197],sigmoid:[816,1212],signatur:[98,223,409,531,660,854],sin:[792,1127],sinh:[793,1128],siren:1261,softmax:[192,498,817,1213],softplu:[818,1214],sort:[106,231,417,539,668,862],sparse_cross_entropi:1232,split:[157,332,464,594,747,1062],split_factor:[953,1168],split_func_cal:[954,1169],sqrt:[97,222,408,530,659,853],squeez:[158,333,465,595,748,1063],stable_divid:1064,stable_pow:1065,stack:[334,749,1066],stack_imag:[168,349,477,609,769,1102],standard:43,statist:[108,233,419,541,670,864],stop_gradi:[344,472,604,763,1092],str_to_nod:1170,submodul:43,supports_inplac:1067,svd:[354,613,776,1110],swapax:[596,750,1068],tan:[794,1129],tanh:[795,819,1130,1215],tensorflow:507,tile:[335,597,751,1069],tmp_dir:1070,to_dev:[128,291,561,691,955],to_ivi:18,to_ivy_modul:[195,822,1254],to_list:[752,1071],to_n:19,to_nod:1171,to_numpi:[753,1072],to_scalar:[754,1073],todo:43,torch:636,total_mem_on_dev:956,total_mem_on_nod:1172,tpu_is_avail:[562,692,957,1173],train:1289,trainabl:1289,transpos:[159,336,466,755,1074],tree:1247,try_else_non:1075,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,210,214,391,395,513,517,642,646,837,840],uint8_img_to_float_img:1103,unifi:1174,unify_arrai:1175,unify_it:1176,unify_nest:1177,unset_debug_mod:49,unset_default_devic:958,unset_default_dtyp:980,unset_default_float_dtyp:981,unset_default_int_dtyp:982,unset_framework:71,unset_with_grad:1093,unstack:[160,337,467,598,756,1076],updat:43,used_mem_on_dev:959,used_mem_on_nod:1178,util:[109,234,420,542,671,865],valid_dtyp:983,value_is_nan:1077,variabl:[345,473,605,764,1094],variable_data:[765,1095],vector_norm:[101,226,412,534,663,857],vector_to_skew_symmetric_matrix:[172,355,481,614,777,1111],verbos:1291,vision:58,where:[338,757,1078,1247],why:1293,with_grad:1096,wrapper:72,write:1290,your:43,zero:[79,209,390,512,641,836,1263],zero_pad:[339,599,758,1079],zeros_lik:[161,340,468,600,759,1080]}})