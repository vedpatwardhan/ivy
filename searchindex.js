Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[794,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[350,0,0,"-"],creation_functions:[351,0,0,"-"],data_type_functions:[357,0,0,"-"],data_types:[361,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[352,2,1,""],ones:[353,2,1,""],ones_like:[354,2,1,""],tril:[355,2,1,""],zeros:[356,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[357,1,1,""],finfo:[359,2,1,""],iinfo:[360,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[357,3,1,""],bits:[357,3,1,""],eps:[357,3,1,""],max:[357,3,1,""],min:[357,3,1,""],smallest_normal:[357,3,1,""]},"ivy.functional.backends.numpy.core":{device:[401,0,0,"-"],general:[403,0,0,"-"],gradients:[435,0,0,"-"],image:[440,0,0,"-"],linear_algebra:[444,0,0,"-"],logic:[448,0,0,"-"],math:[449,0,0,"-"],random:[451,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[402,1,1,""],clear_mem_on_dev:[401,2,1,""],dev:[401,2,1,""],dev_from_str:[401,2,1,""],dev_to_str:[401,2,1,""],gpu_is_available:[401,2,1,""],num_gpus:[401,2,1,""],to_dev:[401,2,1,""],tpu_is_available:[401,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[402,3,1,""],start:[402,3,1,""],stop:[402,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[403,2,1,""],arange:[404,2,1,""],argmin:[405,2,1,""],array:[406,2,1,""],asarray:[403,2,1,""],astype:[403,2,1,""],cast:[407,2,1,""],clip:[403,2,1,""],compile:[408,2,1,""],concatenate:[409,2,1,""],constant_pad:[403,2,1,""],container_types:[403,2,1,""],copy_array:[403,2,1,""],cumprod:[410,2,1,""],current_framework_str:[403,2,1,""],dtype:[411,2,1,""],dtype_bits:[412,2,1,""],dtype_from_str:[413,2,1,""],dtype_to_str:[414,2,1,""],floor:[403,2,1,""],floormod:[403,2,1,""],full:[415,2,1,""],gather:[416,2,1,""],gather_nd:[417,2,1,""],get_num_dims:[403,2,1,""],identity:[418,2,1,""],indices_where:[419,2,1,""],inplace_arrays_supported:[403,2,1,""],inplace_decrement:[420,2,1,""],inplace_increment:[421,2,1,""],inplace_update:[422,2,1,""],inplace_variables_supported:[403,2,1,""],is_array:[423,2,1,""],linear_resample:[424,2,1,""],linspace:[425,2,1,""],logspace:[426,2,1,""],matmul:[403,2,1,""],meshgrid:[403,2,1,""],multiprocessing:[403,2,1,""],one_hot:[427,2,1,""],round:[403,2,1,""],scatter_flat:[428,2,1,""],scatter_nd:[429,2,1,""],shape:[403,2,1,""],split:[430,2,1,""],squeeze:[431,2,1,""],to_list:[403,2,1,""],to_numpy:[403,2,1,""],to_scalar:[403,2,1,""],transpose:[432,2,1,""],unstack:[433,2,1,""],where:[403,2,1,""],zero_pad:[403,2,1,""],zeros_like:[434,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[436,2,1,""],is_variable:[437,2,1,""],stop_gradient:[438,2,1,""],variable:[439,2,1,""],variable_data:[435,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[441,2,1,""],gradient_image:[442,2,1,""],stack_images:[443,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[445,2,1,""],qr:[446,2,1,""],vector_to_skew_symmetric_matrix:[447,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[450,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[452,2,1,""],randint:[451,2,1,""],random_normal:[451,2,1,""],random_uniform:[451,2,1,""],seed:[451,2,1,""],shuffle:[451,2,1,""]},"ivy.functional.ivy":{array_api:[795,0,0,"-"],core:[844,0,0,"-"],nn:[1139,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[796,0,0,"-"],creation_functions:[797,0,0,"-"],data_type_functions:[803,0,0,"-"],data_types:[806,0,0,"-"],elementwise_functions:[807,0,0,"-"],function_and_method_signatures:[826,0,0,"-"],linear_algebra:[827,0,0,"-"],manipulation_functions:[832,0,0,"-"],searching_functions:[834,0,0,"-"],set_functions:[836,0,0,"-"],sorting_functions:[837,0,0,"-"],statistical_functions:[839,0,0,"-"],utility_functions:[841,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[796,4,1,""],nan:[796,4,1,""],pi:[796,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[798,2,1,""],ones:[799,2,1,""],ones_like:[800,2,1,""],tril:[801,2,1,""],zeros:[802,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[804,2,1,""],iinfo:[805,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[808,2,1,""],asinh:[809,2,1,""],bitwise_and:[810,2,1,""],ceil:[811,2,1,""],cos:[812,2,1,""],cosh:[813,2,1,""],isfinite:[814,2,1,""],isnan:[815,2,1,""],less:[816,2,1,""],less_equal:[817,2,1,""],log10:[818,2,1,""],log1p:[819,2,1,""],log2:[820,2,1,""],logical_not:[821,2,1,""],negative:[822,2,1,""],sin:[823,2,1,""],sqrt:[824,2,1,""],tanh:[825,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[828,2,1,""],slodget:[829,2,1,""],svd:[830,2,1,""],vector_norm:[831,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[833,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[835,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[838,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[840,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[842,2,1,""],any:[843,2,1,""]},"ivy.functional.ivy.core":{compilation:[845,0,0,"-"],device:[847,0,0,"-"],dtype:[897,0,0,"-"],general:[921,0,0,"-"],gradients:[1016,0,0,"-"],image:[1032,0,0,"-"],linalg:[1039,0,0,"-"],logic:[1046,0,0,"-"],math:[1049,0,0,"-"],meta:[1063,0,0,"-"],multi_node:[1067,0,0,"-"],nest:[1111,0,0,"-"],random:[1123,0,0,"-"],reductions:[1130,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[846,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[847,1,1,""],DevClonedItem:[849,1,1,""],DevClonedIter:[850,1,1,""],DevClonedNest:[851,1,1,""],DevDistItem:[852,1,1,""],DevDistIter:[853,1,1,""],DevDistNest:[854,1,1,""],DevManager:[847,1,1,""],DevMapper:[856,1,1,""],DevMapperMultiProc:[857,1,1,""],MultiDev:[847,1,1,""],MultiDevItem:[859,1,1,""],MultiDevIter:[860,1,1,""],MultiDevNest:[861,1,1,""],Profiler:[862,1,1,""],clear_mem_on_dev:[863,2,1,""],default_device:[864,2,1,""],dev:[865,2,1,""],dev_clone:[866,2,1,""],dev_clone_array:[867,2,1,""],dev_clone_iter:[868,2,1,""],dev_clone_nest:[869,2,1,""],dev_dist:[870,2,1,""],dev_dist_array:[871,2,1,""],dev_dist_iter:[872,2,1,""],dev_dist_nest:[873,2,1,""],dev_from_str:[874,2,1,""],dev_to_str:[875,2,1,""],dev_unify:[876,2,1,""],dev_unify_array:[877,2,1,""],dev_unify_iter:[878,2,1,""],dev_unify_nest:[879,2,1,""],dev_util:[880,2,1,""],get_all_arrays_on_dev:[881,2,1,""],gpu_is_available:[882,2,1,""],num_arrays_on_dev:[883,2,1,""],num_cpu_cores:[884,2,1,""],num_gpus:[885,2,1,""],percent_used_mem_on_dev:[886,2,1,""],print_all_arrays_on_dev:[887,2,1,""],set_default_device:[888,2,1,""],set_split_factor:[889,2,1,""],split_factor:[890,2,1,""],split_func_call:[891,2,1,""],to_dev:[892,2,1,""],total_mem_on_dev:[893,2,1,""],tpu_is_available:[894,2,1,""],unset_default_device:[895,2,1,""],used_mem_on_dev:[896,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[847,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[847,3,1,""],da_tune_step:[847,3,1,""],dim_size:[847,3,1,""],ds_tune_step:[847,3,1,""],map:[847,3,1,""],repeated_config_check:[847,3,1,""],tune_step:[847,3,1,""],tuned:[847,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[856,3,1,""],map:[856,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[857,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[847,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[859,3,1,""],items:[859,3,1,""],keys:[859,3,1,""],shape:[859,3,1,""],values:[859,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[860,3,1,""],at_dev:[860,3,1,""],at_devs:[860,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[861,3,1,""],at_dev:[861,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[862,3,1,""],start:[862,3,1,""],stop:[862,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[897,1,1,""],DefaultFloatDtype:[897,1,1,""],DefaultIntDtype:[897,1,1,""],astype:[897,2,1,""],cast:[901,2,1,""],closest_valid_dtype:[902,2,1,""],convert_dtype:[903,2,1,""],default_dtype:[904,2,1,""],default_float_dtype:[905,2,1,""],default_int_dtype:[906,2,1,""],dtype:[907,2,1,""],dtype_bits:[908,2,1,""],dtype_from_str:[909,2,1,""],dtype_to_str:[910,2,1,""],invalid_dtype:[911,2,1,""],is_float_dtype:[912,2,1,""],is_int_dtype:[913,2,1,""],set_default_dtype:[914,2,1,""],set_default_float_dtype:[915,2,1,""],set_default_int_dtype:[916,2,1,""],unset_default_dtype:[917,2,1,""],unset_default_float_dtype:[918,2,1,""],unset_default_int_dtype:[919,2,1,""],valid_dtype:[920,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.general":{"default":[944,2,1,""],abs:[922,2,1,""],all_equal:[923,2,1,""],arange:[924,2,1,""],arg_names:[925,2,1,""],argmin:[926,2,1,""],array:[927,2,1,""],array_equal:[928,2,1,""],arrays_equal:[929,2,1,""],asarray:[921,2,1,""],assert_supports_inplace:[930,2,1,""],broadcast_to:[931,2,1,""],cache_fn:[932,2,1,""],clip:[933,2,1,""],clip_matrix_norm:[934,2,1,""],clip_vector_norm:[935,2,1,""],concatenate:[936,2,1,""],constant_pad:[937,2,1,""],container_types:[938,2,1,""],copy_array:[939,2,1,""],cross:[940,2,1,""],cumprod:[941,2,1,""],cumsum:[942,2,1,""],current_framework_str:[943,2,1,""],einops_rearrange:[945,2,1,""],einops_reduce:[946,2,1,""],einops_repeat:[947,2,1,""],equal:[948,2,1,""],exists:[949,2,1,""],expand_dims:[950,2,1,""],floor:[951,2,1,""],floormod:[952,2,1,""],fourier_encode:[953,2,1,""],full:[954,2,1,""],gather:[955,2,1,""],gather_nd:[956,2,1,""],get_all_arrays_in_memory:[957,2,1,""],get_min_base:[958,2,1,""],get_min_denominator:[959,2,1,""],get_num_dims:[960,2,1,""],get_referrers_recursive:[961,2,1,""],has_nans:[962,2,1,""],identity:[963,2,1,""],indices_where:[964,2,1,""],inplace_arrays_supported:[965,2,1,""],inplace_decrement:[966,2,1,""],inplace_increment:[967,2,1,""],inplace_update:[968,2,1,""],inplace_variables_supported:[969,2,1,""],is_array:[970,2,1,""],isinf:[971,2,1,""],linear_resample:[972,2,1,""],linspace:[973,2,1,""],logspace:[974,2,1,""],match_kwargs:[975,2,1,""],matmul:[976,2,1,""],maximum:[977,2,1,""],meshgrid:[978,2,1,""],minimum:[979,2,1,""],multiprocessing:[980,2,1,""],num_arrays_in_memory:[981,2,1,""],one_hot:[982,2,1,""],ones:[983,2,1,""],print_all_arrays_in_memory:[984,2,1,""],queue_timeout:[985,2,1,""],repeat:[986,2,1,""],reshape:[987,2,1,""],round:[988,2,1,""],scatter_flat:[989,2,1,""],scatter_nd:[990,2,1,""],set_min_base:[991,2,1,""],set_min_denominator:[992,2,1,""],set_queue_timeout:[993,2,1,""],set_tmp_dir:[994,2,1,""],shape:[995,2,1,""],shape_to_tuple:[996,2,1,""],split:[997,2,1,""],squeeze:[998,2,1,""],stable_divide:[999,2,1,""],stable_pow:[1000,2,1,""],stack:[1001,2,1,""],supports_inplace:[1002,2,1,""],swapaxes:[1003,2,1,""],tile:[1004,2,1,""],tmp_dir:[1005,2,1,""],to_list:[1006,2,1,""],to_numpy:[1007,2,1,""],to_scalar:[1008,2,1,""],transpose:[1009,2,1,""],try_else_none:[1010,2,1,""],unstack:[1011,2,1,""],value_is_nan:[1012,2,1,""],where:[1013,2,1,""],zero_pad:[1014,2,1,""],zeros_like:[1015,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1016,1,1,""],adam_step:[1018,2,1,""],adam_update:[1019,2,1,""],execute_with_gradients:[1020,2,1,""],gradient_descent_update:[1021,2,1,""],is_variable:[1022,2,1,""],lamb_update:[1023,2,1,""],lars_update:[1024,2,1,""],optimizer_update:[1025,2,1,""],set_with_grads:[1026,2,1,""],stop_gradient:[1027,2,1,""],unset_with_grads:[1028,2,1,""],variable:[1029,2,1,""],variable_data:[1030,2,1,""],with_grads:[1031,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1016,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1033,2,1,""],float_img_to_uint8_img:[1034,2,1,""],gradient_image:[1035,2,1,""],random_crop:[1036,2,1,""],stack_images:[1037,2,1,""],uint8_img_to_float_img:[1038,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1040,2,1,""],inv:[1041,2,1,""],matrix_norm:[1042,2,1,""],pinv:[1043,2,1,""],qr:[1044,2,1,""],vector_to_skew_symmetric_matrix:[1045,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1047,2,1,""],logical_or:[1048,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1050,2,1,""],asin:[1051,2,1,""],atan2:[1053,2,1,""],atan:[1052,2,1,""],atanh:[1054,2,1,""],cosh:[1055,2,1,""],divide:[1056,2,1,""],erf:[1057,2,1,""],exp:[1058,2,1,""],log:[1059,2,1,""],sinh:[1060,2,1,""],tan:[1061,2,1,""],tanh:[1062,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1064,2,1,""],maml_step:[1065,2,1,""],reptile_step:[1066,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1067,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1112,2,1,""],copy_nest:[1113,2,1,""],index_nest:[1114,2,1,""],map:[1115,2,1,""],map_nest_at_index:[1116,2,1,""],map_nest_at_indices:[1117,2,1,""],multi_index_nest:[1118,2,1,""],nested_indices_where:[1119,2,1,""],nested_map:[1120,2,1,""],set_nest_at_index:[1121,2,1,""],set_nest_at_indices:[1122,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1124,2,1,""],randint:[1125,2,1,""],random_normal:[1126,2,1,""],random_uniform:[1127,2,1,""],seed:[1128,2,1,""],shuffle:[1129,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1131,2,1,""],reduce_max:[1132,2,1,""],reduce_mean:[1133,2,1,""],reduce_min:[1134,2,1,""],reduce_prod:[1135,2,1,""],reduce_std:[1136,2,1,""],reduce_sum:[1137,2,1,""],reduce_var:[1138,2,1,""]},"ivy.functional.ivy.nn":{activations:[1140,0,0,"-"],layers:[1148,0,0,"-"],losses:[1161,0,0,"-"],norms:[1165,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1141,2,1,""],leaky_relu:[1142,2,1,""],relu:[1143,2,1,""],sigmoid:[1144,2,1,""],softmax:[1145,2,1,""],softplus:[1146,2,1,""],tanh:[1147,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1149,2,1,""],conv1d_transpose:[1150,2,1,""],conv2d:[1151,2,1,""],conv2d_transpose:[1152,2,1,""],conv3d:[1153,2,1,""],conv3d_transpose:[1154,2,1,""],depthwise_conv2d:[1155,2,1,""],dropout:[1156,2,1,""],linear:[1157,2,1,""],lstm_update:[1158,2,1,""],multi_head_attention:[1159,2,1,""],scaled_dot_product_attention:[1160,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1162,2,1,""],cross_entropy:[1163,2,1,""],sparse_cross_entropy:[1164,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1166,2,1,""]},"ivy.stateful":{activations:[1170,0,0,"-"],converters:[1173,0,0,"-"],initializers:[1175,0,0,"-"],layers:[1184,0,0,"-"],module:[1196,0,0,"-"],norms:[1198,0,0,"-"],optimizers:[1200,0,0,"-"],sequential:[1206,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1171,1,1,""],GELU:[1172,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1171,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1172,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1174,2,1,""]},"ivy.stateful.initializers":{Constant:[1175,1,1,""],FirstLayerSiren:[1177,1,1,""],GlorotUniform:[1178,1,1,""],KaimingNormal:[1175,1,1,""],Ones:[1180,1,1,""],Siren:[1181,1,1,""],Uniform:[1175,1,1,""],Zeros:[1183,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1175,3,1,""],create_variables:[1175,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1177,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1178,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1175,3,1,""],create_variables:[1175,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1180,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1181,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1175,3,1,""],create_variables:[1175,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1183,3,1,""]},"ivy.stateful.layers":{Conv1D:[1185,1,1,""],Conv1DTranspose:[1186,1,1,""],Conv2D:[1187,1,1,""],Conv2DTranspose:[1188,1,1,""],Conv3D:[1189,1,1,""],Conv3DTranspose:[1190,1,1,""],DepthwiseConv2D:[1191,1,1,""],Dropout:[1192,1,1,""],LSTM:[1193,1,1,""],Linear:[1194,1,1,""],MultiHeadAttention:[1195,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1185,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1186,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1187,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1188,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1189,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1190,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1191,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1192,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1193,3,1,""],get_initial_state:[1193,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1194,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1195,3,1,""]},"ivy.stateful.module":{Module:[1197,1,1,""]},"ivy.stateful.module.Module":{__init__:[1197,3,1,""],build:[1197,3,1,""],build_mode:[1197,3,1,""],built:[1197,3,1,""],check_submod_rets:[1197,3,1,""],get_mod_key:[1197,3,1,""],mod_depth:[1197,3,1,""],mod_height:[1197,3,1,""],mod_with_top_mod_key_chain:[1197,3,1,""],save_weights:[1197,3,1,""],show_mod_in_top_mod:[1197,3,1,""],show_structure:[1197,3,1,""],show_v_in_top_v:[1197,3,1,""],sub_mods:[1197,3,1,""],track_submod_call_order:[1197,3,1,""],track_submod_rets:[1197,3,1,""],v_with_top_v_key_chains:[1197,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1199,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1199,3,1,""]},"ivy.stateful.optimizers":{Adam:[1201,1,1,""],LAMB:[1202,1,1,""],LARS:[1203,1,1,""],Optimizer:[1204,1,1,""],SGD:[1205,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1201,3,1,""],set_state:[1201,3,1,""],state:[1201,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1202,3,1,""],set_state:[1202,3,1,""],state:[1202,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1203,3,1,""],set_state:[1203,3,1,""],state:[1203,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1204,3,1,""],set_state:[1204,3,1,""],step:[1204,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1205,3,1,""],set_state:[1205,3,1,""],state:[1205,3,1,""]},"ivy.stateful.sequential":{Sequential:[1207,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1207,3,1,""]},"ivy.verbosity":{cprint:[1212,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1211,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1200,1201,1202],"02886":1167,"100":[1067,1167,1209],"141592653589793":796,"2021":1167,"2102":1167,"360":[1049,1061],"718281828459045":796,"754":[796,803,804,807,824],"999":[1016,1018,1019,1023,1200,1201,1202],"abstract":[847,862,1167,1200,1204],"boolean":[40,41,807,810,821,847,882,894,897,911,920,921,923,928,929,962,964,965,969,970,971,1002,1012,1016,1022,1046,1047,1048,1063,1064,1065,1067],"break":43,"case":[15,18,19,40,41,42,43,807,808,809,811,812,813,818,820,823,824,847,886,893,896,921,924,987,989,990,1039,1042,1044,1067,1111,1114,1118,1167,1184,1195,1196,1197,1200,1204,1213],"catch":[921,944],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,401,402,803,805,847,849,850,851,852,853,854,856,857,859,860,861,862,874,875,897,921,925,975,1016,1030,1067,1111,1113,1120,1161,1163,1164,1167,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1213],"default":[15,18,19,40,41,42,43,797,798,799,800,801,802,827,828,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,856,857,864,865,869,870,871,872,873,876,877,878,879,886,889,890,891,896,897,904,905,906,907,921,923,924,926,934,935,936,937,940,941,942,953,954,955,960,962,963,972,974,975,978,980,983,985,986,989,990,993,995,997,999,1000,1009,1011,1012,1016,1019,1021,1022,1023,1024,1025,1027,1031,1039,1042,1044,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],"final":[40,41,43,921,953,973,974,1067,1184,1195,1210],"float":[40,41,42,796,797,798,799,802,803,804,807,808,809,811,812,813,818,820,823,824,825,827,831,847,856,857,880,886,889,893,896,897,905,912,921,924,934,935,937,953,954,958,959,974,991,992,993,999,1000,1016,1018,1019,1021,1023,1024,1025,1032,1034,1038,1049,1056,1063,1064,1065,1066,1067,1123,1126,1127,1140,1142,1148,1156,1159,1160,1161,1162,1163,1164,1165,1166,1184,1192,1195,1198,1199,1200,1201,1202,1203,1204,1205],"function":[15,40,41,43,352,353,354,355,356,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,796,798,799,800,801,802,804,805,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,833,835,838,840,842,843,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1170,1171,1172,1200,1203,1204,1205,1209,1210,1213],"import":[43,1167,1210,1213],"int":[40,41,42,43,351,352,353,355,356,451,797,798,799,801,802,803,804,805,827,828,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,869,870,871,872,873,876,877,878,879,884,885,891,897,906,908,913,921,926,931,936,937,941,942,945,946,947,950,953,954,955,960,963,972,973,974,982,983,986,987,989,990,995,996,997,998,1001,1003,1004,1009,1011,1014,1016,1018,1019,1023,1032,1036,1037,1039,1042,1063,1064,1065,1066,1067,1111,1120,1123,1124,1125,1127,1128,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1159,1161,1163,1164,1165,1166,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1198,1199],"long":[43,1148,1158],"new":[40,41,43,451,797,798,799,800,802,807,819,897,901,921,922,931,945,946,947,950,953,954,955,956,983,987,989,990,991,992,999,1000,1001,1016,1019,1021,1023,1024,1025,1032,1034,1036,1038,1049,1054,1055,1060,1062,1067,1111,1121,1122,1123,1124,1165,1166,1167,1173,1174,1184,1194,1198,1199,1200,1201,1202,1203,1204,1205,1210,1213],"public":[921,938],"return":[15,16,17,18,19,40,41,42,43,451,797,798,799,800,801,802,807,808,809,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,827,828,829,830,831,834,835,837,838,839,840,841,842,843,845,846,847,856,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,885,886,890,891,892,893,894,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,986,987,988,989,990,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1173,1174,1184,1193,1194,1200,1204,1209,1210,1213],"short":[43,1148,1158,1167,1213],"static":[40,41,845,846],"super":1067,"true":[40,41,42,403,408,435,438,451,452,807,814,815,821,827,830,831,834,835,837,838,841,842,843,845,846,847,921,923,930,932,949,953,962,964,1012,1013,1016,1019,1021,1022,1023,1024,1025,1027,1039,1042,1063,1064,1065,1066,1067,1111,1112,1119,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1148,1156,1161,1162,1163,1164,1184,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205],"try":[40,41,921,1010,1067],"var":[40,41,1063,1064,1065,1213],"while":[40,41,42,807,821,1067],AND:[807,810,841,842,1046,1047],But:1213,For:[43,807,808,809,811,812,813,818,820,823,824,921,924,933,1001,1016,1022,1030,1039,1044,1049,1050,1167,1173,1174,1210,1213],Its:[1049,1052],NOT:[807,821],Not:796,One:[40,41,43,921,946,987,1123,1125,1213],Ones:[1167,1175],PRs:43,Such:[921,938],That:1210,The:[15,16,17,18,19,40,41,42,43,797,801,807,808,809,810,811,812,813,814,815,816,817,818,820,821,823,824,825,827,828,829,830,831,832,833,837,838,841,842,843,845,846,847,856,857,863,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,886,889,890,891,892,893,896,897,901,902,903,908,909,910,911,920,921,924,927,928,931,932,934,935,936,937,939,940,943,944,948,953,955,956,963,966,967,968,970,972,974,976,978,980,983,986,987,989,990,991,992,993,996,997,998,999,1000,1001,1004,1012,1015,1016,1018,1019,1021,1023,1024,1025,1027,1030,1032,1034,1036,1038,1039,1042,1044,1049,1050,1051,1052,1056,1057,1058,1059,1061,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1210,1213],There:[43,1167,1210],These:[43,1167],Use:43,Used:[1111,1112,1119,1196,1197],Using:[1167,1168,1213],With:[40,41,834,835,1039,1042,1130,1132,1133,1134,1135,1136,1137,1138,1167,1209,1213],__array__:[921,927],__call__:[1184,1195,1196,1197],__del__:1067,__dict__:[1067,1210],__enter__:1067,__exit__:1067,__getitem__:1067,__getstate__:1067,__init__:[40,41,42,43,59,60,84,217,357,358,401,402,483,612,847,848,855,856,857,858,859,860,861,862,897,898,899,900,1016,1017,1067,1071,1078,1167,1170,1171,1172,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1213],__iter__:1067,__len__:1067,__next__:1067,__repr__:1067,_assign_vari:1209,_axi:1067,_base:[1111,1112,1119],_compute_node_da_ratio:1067,_compute_node_strs_da:1067,_concat_unify_arrai:1067,_counter:1067,_cur_framework:[43,1067],_da_direct:1067,_da_directions_flip:1067,_da_step_tim:1067,_da_tim:1067,_da_tune_count:1067,_data:1067,_delta_da_dim_s:1067,_delta_sf:1067,_dict:1067,_dim_siz:1067,_first_da_tune_step:1067,_first_ns_tune_step:1067,_fn:1067,_forward:[1167,1209],_get_kalman_param:1213,_get_prior:1213,_get_some_model:1213,_index:[1111,1112,1119],_input_queu:1067,_length:1067,_max_depth:1067,_max_node_dim_step_ratio:1067,_max_node_dim_step_s:1067,_max_split_factor_step_s:1067,_mean_unify_arrai:1067,_min_bas:[921,1000,1165,1166,1198,1199],_min_denomin:[921,999],_min_node_dim_s:1067,_min_sf_tune_step:1067,_min_unit_node_tune_step:1067,_model:1213,_node_mapp:1067,_node_percent_mem:1067,_node_str:1067,_node_str_da_ratio:1067,_node_strs_da:1067,_node_strs_kei:1067,_node_strs_n:1067,_node_util:1067,_ns_step_tim:1067,_ns_time:1067,_ns_tune_count:1067,_num_nod:1067,_num_work:1067,_observed_config:1067,_output_queu:1067,_paramet:1209,_percent_mem_inc_per_sf:1067,_percent_mem_inc_per_unit_da_dim:1067,_percent_util_inc_per_unit_da_dim:1067,_ret_fn:1067,_safety_factor:1067,_save_dir:1067,_shift_da_split:1067,_shift_n:1067,_slice:1067,_step:[1200,1204],_sum_unify_arrai:1067,_timeout:1067,_tune:1067,_tune_da:1067,_tune_n:1067,_tune_step:1067,_unit_da_tune_count:1067,_unroll_step:1213,_with_node_mappig:1067,_worker:1067,_worker_class:1067,_worker_fn:1067,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,847,856,862,1067,1196,1197,1200,1204],abil:1167,abl:[40,41],about:[803,804,805],abov:[43,797,801,827,828,1123,1125],above_height:[40,41],abs:[257,403,533,663,827,831,921,1067],absolut:[40,41,827,829,921,922],abstractmethod:1067,accept:[15,43,807,821,1167],access:[40,41,43,1210],accord:[40,41,803,804,921,937,955,989,990,1009,1014],accordingli:[827,831,841,842,843],accur:[59,357,401,402,847,859,860,861,862,897,1016,1175,1177,1178,1180,1181,1183],aco:[747,1049],acosh:[88,221,362,487,616,807],across:[40,41,847,856,857,866,867,869,870,871,872,873,879,889,890,921,926,928,929,1067,1111,1115],act:43,activ:[1141,1142,1143,1144,1145,1146,1147,1167,1171,1172],actual:1210,adam:[1016,1018,1019,1023,1167,1200,1202,1209],adam_step:1016,adam_upd:1016,adapt:[1016,1024,1200,1203],add:[40,41,43,1067,1161,1162,1163,1164,1165,1166,1167,1198,1199,1210],added:[43,921,999,1000,1206,1207],adding:[43,921,931],addit:[40,41,43,921,945,946,947,1165,1166,1184,1194],addition:43,address:43,adher:43,adjac:[921,924],adopt:[43,921,938],affect:[921,924],affin:[1198,1199],after:[807,824,921,972,1016,1019,1020,1021,1023,1024,1025,1032,1033,1165,1166,1200,1201,1202,1203,1204,1205,1213],after_1:[921,937,1014],after_n:[921,937,1014],again:43,against:[40,41,834,835,1039,1042,1130,1132,1133,1134,1135,1136,1137,1138],agnost:[43,1167,1209,1210],aim:1213,algebra:1039,algorithm:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191,1213],align:[40,41,43,921,931],aliv:[847,881,883,887,921,957,981,984],all:[15,16,17,18,19,40,41,43,123,247,397,522,651,797,801,827,831,832,833,841,845,846,847,856,881,887,921,922,923,928,929,938,957,963,984,998,1039,1044,1063,1064,1065,1066,1067,1111,1112,1113,1119,1120,1123,1124,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1158,1167,1210,1213],all_depth:[40,41],all_equ:921,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1111,all_tru:[40,41],alloc:[43,797,801,847,1067],allow:[921,973,974,975,1196,1197],allow_dupl:[921,975],alon:[847,886,896,1067,1167],along:[40,41,43,451,827,831,832,833,834,835,837,838,839,840,841,842,843,847,870,871,872,873,876,877,878,879,891,921,936,941,942,955,972,973,974,986,997,1001,1004,1011,1039,1042,1063,1064,1065,1066,1067,1123,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138],alongsid:[1209,1210],alpha:[1140,1142],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,807,811,847,1067],also:[40,41,43,921,924,1016,1019,1063,1064,1065,1066,1111,1112,1113,1119,1120,1148,1157,1167,1184,1194,1209],altern:1209,alwai:[40,41,43,1016,1022,1027],among:[40,41],amount:[847,893,1067,1167],angl:[807,813,825,1049,1050,1053],ani:[15,16,17,18,19,40,41,43,123,247,397,522,651,807,817,841,845,846,847,849,852,856,857,859,868,869,872,873,878,921,923,924,927,944,945,946,947,948,949,962,970,975,999,1000,1016,1020,1067,1111,1112,1115,1119,1120,1121,1122,1123,1127,1167,1173,1174,1196,1197,1209,1210,1213],anoth:[40,41,43,897,903,1167],another_backend:43,anyth:[43,1213],anywai:43,apart:43,api:[1167,1168],appear:[43,921,950],append:[40,41,827,828,1067],appli:[15,18,19,40,41,827,830,921,945,946,947,1016,1023,1024,1046,1047,1048,1063,1064,1065,1111,1115,1118,1120,1140,1141,1142,1143,1144,1145,1146,1147,1148,1157,1159,1160,1165,1166,1167,1170,1171,1172,1198,1199],applic:[1111,1115,1120,1148,1159,1160,1167,1213],appropri:[834,835],approxim:[807,808,809,812,813,818,819,820,823,825,1140,1141],arang:[134,257,403,451,533,663,921,973,974],arbitrari:[40,41,847,876,877,879,1067],arc:[1049,1053],arcco:[1049,1050],arctan:[1049,1052],area:[807,808,809,1167],arg:[15,16,17,40,41,43,59,63,847,856,869,873,879,891,921,945,946,947,990,1067,1173,1174,1196,1197],arg_nam:921,arg_stateful_idx:[1196,1197],argmax:[116,241,390,515,644,834],argmin:[134,403,533,663,921],args_clon:1067,args_dist:1067,args_to_ivi:[15,1167],args_to_n:[15,1167],args_uni:1067,argsort:[119,244,393,518,647,837],argument:[15,16,17,18,19,40,41,42,43,59,63,845,846,847,856,857,869,873,879,921,924,925,932,944,975,990,1049,1050,1067,1111,1115,1173,1174,1196,1197],aris:[1167,1213],arithmet:[1130,1133,1136,1138],arithmetic_oper:[0,1,2],around:[40,41,42],arr:451,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,134,257,403,451,533,663,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,843,847,865,866,867,870,871,872,873,876,877,878,879,881,883,887,891,892,897,901,907,912,913,921,922,923,924,926,928,929,930,931,933,934,935,936,937,939,940,941,942,945,946,947,948,950,951,952,953,954,955,956,957,960,962,963,964,965,966,967,968,970,971,972,973,974,976,977,978,979,981,982,983,984,986,987,988,989,990,995,997,998,1001,1002,1003,1004,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1018,1019,1022,1023,1027,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1111,1113,1120,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1184,1192,1193,1195,1200,1204,1209,1210],arrang:[921,945],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,351,352,353,354,355,356,357,359,360,796,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,843],array_api_methods_to_test:43,array_equ:[257,663,921],array_lik:[451,921,927],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,921],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1167],arraywithgener:[22,1167],arraywithgradi:[24,1167],arraywithimag:[26,1167],arraywithlinalg:[28,1167],arraywithlog:[30,1167],arraywithmath:[32,1167],arraywithmeta:[34,1167],arraywithrandom:[36,1167],arraywithreduct:[38,1167],arriv:[40,41,42],articl:1167,arxiv:1167,as_arrai:[40,41,921,960,995],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[401,403,411,847,865,897,904,905,906,907],as_tensor:403,as_vari:[40,41],as_zero:[40,41],asarrai:[403,921],ascend:[837,838],asin:[747,1049],asinh:[88,362,487,616,807],aspect:[1032,1037],assert:[40,41,921,930,1067],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:921,associ:[43,1039,1045],assum:[807,812,823,1210,1213],astyp:[403,897],asynchron:[40,41,42],at_dev:[40,42,847,860,861],at_kei:[40,41],at_key_chain:[40,41],at_nod:1067,atan2:[747,1049],atan:[747,1049],atanh:[747,1049],attent:[43,1148,1159,1160,1184,1195],attribut:[0,6,40,41,803,804,805,921,1015],audienc:[1167,1210],author:1167,automat:43,avail:[40,41,43,847,882,884,885,894,921,946,1067],averag:[1016,1018,1019,1023,1063,1064,1065,1130,1133],average_across_step:[1063,1064,1065],avoid:[43,847,1067,1210],axes:[40,41,43,403,432,444,445,827,831,832,833,834,835,839,840,841,842,843,847,891,921,926,937,950,1003,1009,1014,1039,1042,1067,1130,1132,1133,1134,1135,1136,1137,1138],axes_length:[40,41,921,945,946,947],axi:[40,41,403,405,409,410,416,424,425,426,430,431,433,827,828,831,832,833,834,835,837,838,839,840,841,842,843,847,849,852,859,870,871,872,873,876,877,878,879,891,921,926,936,937,940,941,942,950,955,972,973,974,986,997,998,1001,1003,1004,1011,1014,1067,1123,1129,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1161,1163,1164],axis0:[40,41,921,1003],axis1:[40,41,827,828,921,1003],axis2:[827,828],back:[43,1196,1197,1200,1204],backend:[15,17,19,40,41,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,847,882,885,894,897,903,911,920,921,965,969,1016,1019,1021,1023,1024,1025,1030,1067,1167,1168,1173,1174,1200,1201,1202,1203,1204,1205,1209,1210,1213],backend_nam:43,background:[1167,1210],backprop:1213,backward:[841,842,843,1209],band:[921,953],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,401,402,403,426,807,818,819,820,847,849,850,851,852,853,854,856,857,859,860,861,862,897,921,958,974,991,1000,1016,1067,1130,1131,1167,1170,1171,1172,1175,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1213],basi:43,batch:[40,41,827,830,831,847,889,890,921,953,963,1032,1036,1063,1064,1065,1066,1067,1148,1157,1165,1166,1198,1199],batch_shap:[403,418,921,963,982,1032,1033,1034,1035,1036,1037,1038,1039,1045,1123,1124,1148,1158,1159,1160,1184,1193],batch_siz:[451,452,1067,1123,1124,1148,1149,1150,1151,1152,1153,1154,1155],bayesian:1213,becaus:[43,921,924],becom:[43,921,933,1049,1053,1213],been:[921,945,946,947,1123,1124],befor:[40,41,43,847,891,1063,1064,1065,1067,1111,1120,1130,1132,1133,1134,1135,1136,1137,1138,1148,1159,1160,1213],before_1:[921,937,1014],before_n:[921,937,1014],begin:[1111,1112,1119,1210],behaviour:[43,1213],behind:[1016,1019,1021,1023,1024,1025,1167],being:[40,41,43,921,924,985,993,1067],believ:43,belong:[40,41],below:[43,797,801,827,828,1167,1210,1213],below_depth:[40,41],benefit:1167,bernoul:[1148,1156,1184,1192],best:[43,921,975,1167],beta1:[1016,1018,1019,1023,1200,1201,1202],beta2:[1016,1018,1019,1023,1200,1201,1202],beta:[1165,1166],between:[40,41,42,803,804,921,924,1039,1044,1111,1115,1123,1125,1161,1163,1164,1200,1202],bia:[1148,1157,1158,1184,1185,1186,1187,1188,1189,1190,1191,1194],bias_initi:[1184,1185,1186,1187,1188,1189,1190,1191,1194],bilinear:[1032,1033],bilinear_resampl:[168,310,440,573,733,1032],bilinearli:[1032,1033],binari:[807,810,1161,1162],binary_cross_entropi:1161,bit:[357,803,804,805,897,908,1032,1034,1038,1167],bitwis:[807,810],bitwise_and:[88,221,362,487,616,807],bitwise_oper:[0,7,8],block:[1167,1210],bool:[15,18,19,40,41,42,43,807,814,815,816,817,821,827,830,831,834,835,837,838,839,840,841,842,843,845,846,847,865,878,882,886,891,894,896,897,907,921,923,928,929,941,944,948,949,953,960,962,970,975,995,997,1011,1012,1013,1016,1019,1020,1021,1022,1023,1024,1025,1027,1039,1042,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1148,1156,1173,1174,1184,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205],both:[43,921,940],bottom:1167,boundari:[40,41,1123,1127],branch:[43,845,846],brittl:43,broadcast:[40,41,807,810,816,817,827,831,834,835,841,842,843,921,931,948,977,978,979,986,1039,1042,1049,1053,1056,1130,1132,1133,1134,1135,1136,1137,1138],broadcast_to:[257,663,921],build:[1067,1167,1184,1195,1196,1197],build_mod:[1184,1195,1196,1197],builder:[43,1167],built:[847,921,924,1067,1184,1195,1196,1197],busi:43,bypass:1210,cach:[847,863,921,932],cache_fn:921,calcul:[40,41,42,807,808,809,812,813,818,819,820,823,824,825,1049,1056],call:[43,847,891,921,985,993,1010,1016,1020,1067,1111,1112,1115,1119,1184,1195,1196,1197,1200,1204,1210,1213],callabl:[40,41,845,846,847,856,857,891,921,932,944,946,975,1010,1063,1064,1065,1066,1067,1111,1115,1116,1117,1119,1120,1148,1159],can:[43,847,889,890,891,921,987,1032,1034,1067,1167,1209,1210,1213],cancel_join_thread:1067,cannot:43,captur:1167,cast:[40,41,134,257,403,533,663,897,921,936,1032,1034,1038],catch_except:[921,944],categori:43,caus:43,ceil:[88,221,362,487,616,807,921,924],cell:[1148,1158,1184,1193],certain:[40,41,921,924,973,974],chain:[40,41,1063,1064,1065,1206,1207],chang:[43,847,921,987,1067,1111,1113,1120,1167,1209],channel:[921,953,1032,1034,1035,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194],check:[15,16,17,18,19,40,41,43,847,886,896,897,902,911,920,921,930,949,962,970,1002,1012,1016,1022,1067,1111,1112,1119,1167,1210],check_nest:[1111,1119],check_shap:[40,41],check_submod_ret:[1196,1197],check_typ:[40,41],choic:[1167,1210],choleski:[737,1039],choos:[807,821,921,1013,1039,1044,1049,1053,1167],choose_random_framework:59,chosen:[40,41,921,924,1013],chunk:[847,889,890,891,1067],chunk_siz:[847,891,1067],circl:[1049,1050,1051],clark:1167,clear:[43,847,863,1067],clear_framework_stack:59,clear_mem_on_dev:[401,655,847],click:1167,clip:[40,41,257,403,663,921,934,935,977,979,1167],clip_matrix_norm:921,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,921],clipped_delta:1067,clone:[40,41,847,866,867,868,869,1067],clone_arrai:1067,clone_it:1067,clone_nest:1067,clonedit:1067,cloneditem:1067,clonednest:1067,close:[43,1032,1037,1049,1051,1067,1213],closest:[807,811,897,902],closest_valid_dtyp:897,code:[40,41,42,43,451,1167,1168,1209,1210],codebas:[847,889,890,1067,1167,1210,1213],codomain:[807,808,809,812,813,818,820,823,824,825],colab:1167,collect:[15,40,41,401,403,435,440,444,448,449,451,845,847,897,921,1016,1032,1039,1046,1049,1067,1111,1123,1130,1140,1148,1161,1165,1170,1184,1198,1200],color:[40,41,42,1211,1212],column:[921,963],combin:[40,41,42,1032,1037,1167,1213],combined_batch_s:1067,come:1210,command:1167,comment:43,commit:1213,common:[40,41,43,1049,1053],common_key_chain:[40,41],commun:[43,1167,1210],communuti:43,compar:[40,41,837,838,921,923,928,929],comparison_oper:[0,9,10],compat:[807,810,816,817,827,831,841,842,843,921,948,987,1049,1056,1167,1213],compil:[257,403,663,1196,1197,1200,1201,1202,1203,1204,1205],compile_on_next_step:[1196,1197,1200,1201,1202,1203,1204,1205],complet:[40,41,43,1039,1044,1067],complex:[1210,1213],compliant:[807,821],compon:[921,940],composit:43,comput:[40,41,807,810,816,817,821,822,827,829,831,839,840,847,891,921,934,935,941,942,948,976,1016,1018,1019,1020,1021,1023,1024,1025,1027,1029,1032,1035,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1057,1058,1059,1061,1111,1115,1130,1131,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1157,1159,1161,1162,1163,1164],concat:[40,41,847,876,877,878,879,891,921,953,1067],concaten:[40,41,134,257,403,533,663,921,953,1067,1167],concatten:[40,41,847,876,877,878,879,891,1067],condit:[403,845,846,921,1013,1111,1119],conditon:[1111,1119],config:[40,41,1067],config_list:1067,configur:[40,41],conflict:43,conform:43,conjunct:1210,connect:[1184,1194,1195],consid:[40,41,807,821,1039,1044,1209,1213],consist:[40,41,847,879,1067,1130,1131,1196,1197,1210],constant:[847,856,857,921,937,1067,1111,1115,1161,1162,1163,1164,1165,1166,1175,1176,1180,1183,1196,1197,1198,1199,1210],constant_kwarg:1067,constant_pad:[257,403,533,663,921],constitu:[40,41],construct:[921,1004,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209],constructor:[40,41,42,921,925,1206,1207],consum:[847,1067],cont_feat_dim:[1148,1159],contaienr:[40,41],contain:[15,18,19,42,797,799,801,802,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,831,839,840,841,842,843,847,866,870,891,897,901,921,922,926,933,934,935,938,948,962,977,979,988,999,1000,1016,1018,1019,1021,1023,1024,1025,1049,1056,1063,1064,1065,1066,1067,1123,1124,1130,1132,1133,1134,1136,1138,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[403,663,921],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[403,921,980,1148,1159,1184,1195],context_dim:[1184,1195],contextmanag:[59,60],continu:[43,1067,1210],contract:[40,41,1130,1131],contribut:[1167,1168],contributor:[43,1167],control:1167,conv1d:[199,340,465,786,1148,1167,1184],conv1d_transpos:[199,340,465,786,1148],conv1dtranspos:[1167,1184],conv2d:[199,340,465,598,786,1148,1167,1184],conv2d_transpos:[199,340,465,786,1148],conv2dtranspos:[1167,1184],conv3d:[199,340,465,598,786,1148,1167,1184],conv3d_transpos:[199,340,465,786,1148],conv3dtranspos:[1167,1184],convent:[40,41,1130,1131],conver:[847,863,874,886,893,896,1067],convers:[16,17,18,19,40,41,1067,1167],convert:[15,16,17,18,19,40,41,43,847,874,875,897,903,909,910,921,996,1007,1008,1032,1034,1038,1039,1045,1067,1111,1113,1120,1167,1174],convert_dtyp:897,convolut:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],cool:43,cooler:43,coordin:[921,978,1049,1050,1051,1053],copi:[40,41,43,451,921,939,1067,1111,1113],copy_arrai:[403,663,921],copy_nest:1111,core:[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1167],corner:43,correct:[43,1167,1210],correctli:[40,41,43,834,835,1039,1042,1049,1053,1130,1132,1133,1134,1135,1136,1137,1138],correspond:[40,41,921,936,1123,1124],cos:[88,362,487,616,807,921,953,1049,1050,1061,1210],cosh:[88,362,487,616,747,807,1049],cosin:[807,808,812,813,1049,1050,1055],cost:[1016,1018,1019,1021,1023,1024,1025,1063,1064,1065,1066],cost_fn:[1063,1066],could:1213,count:[40,41,832,833,841,842,843,1067,1130,1135,1137],cours:43,cprint:1211,cpu:[40,41,43,847,884,886,892,893,896,921,924,927,955,956,963,973,974,982,983,989,990,1015,1067,1123,1124,1125,1126,1127,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207,1209,1210],creat:[40,41,797,798,799,800,802,847,856,857,921,924,927,954,955,956,963,973,974,982,983,989,990,1006,1015,1016,1029,1067,1123,1124,1125,1126,1127,1167,1168,1173,1174,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1213],create_if_abs:[40,41],create_vari:1175,creation:[40,41,42,43],creation_funct:[351,352,353,354,355,356,797,798,799,800,801,802],crop:[1032,1036],crop_siz:[1032,1036],cross:[257,663,921,1161,1162,1163,1164],cross_entropi:1161,cuda:[40,41,847,856,875,892,921,924,927,955,956,963,973,974,982,983,989,990,1015,1067,1123,1124,1125,1126,1127,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207],cumprod:[134,257,403,663,921],cumsum:[663,921],cumul:[921,941,942],current:[40,41,42,43,847,856,880,881,883,887,897,903,911,920,921,943,957,965,969,981,984,1067,1111,1112,1119,1167,1213],current_framework:59,current_framework_str:[403,663,921,1067],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1148,1149,1150,1151,1152,1153,1154],d_out:[1148,1149,1150,1151,1152,1153,1154],da_can_termin:1067,da_dim_s:[847,1067],da_direct:1067,da_tune_step:[847,1067],dai:1213,daniel:1167,data:[40,41,42,43,797,798,799,800,801,802,804,805,807,808,809,810,811,812,813,814,815,816,817,818,820,821,823,824,825,827,828,831,832,833,837,838,841,842,843,847,849,850,851,852,853,854,859,860,861,875,897,901,902,903,907,908,909,910,911,912,913,920,921,924,927,948,954,963,970,983,987,998,1002,1015,1016,1022,1030,1049,1056,1067,1148,1157,1167],data_format:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],data_type_funct:[357,359,360,803,804,805],dataset:[40,41],datatyp:[40,41,897,902,912,913],dcdw:[1016,1018,1019,1021,1023,1024],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1016,1023,1024,1200,1202,1203],decay_lambda:[1016,1023,1024,1200,1202,1203],decid:[40,41,1213],decompos:[1039,1040,1044],decomposit:[827,830,1039,1040,1044],decrement:[921,966],dedic:[1016,1030,1173,1174],deep:[40,41,1167],deep_copi:[40,41],deeper:[847,869,873,879,1067,1111,1120,1167],deepli:[1111,1113],def:[43,60,84,217,358,483,612,848,855,858,898,899,900,1017,1067,1071,1078,1167,1176,1179,1182,1209,1210,1213],default_dev:43,default_devic:847,default_dtyp:[43,897],default_float_dtyp:897,default_int_dtyp:897,default_key_color:[40,41,42],default_nod:1067,default_rng:451,default_v:[921,944],defaultdevic:[847,848],defaultdtyp:[897,898],defaultfloatdtyp:[897,899],defaultintdtyp:[897,900],defin:[43,921,940,982,1015,1123,1125],definit:43,degre:[1049,1061],del:1067,delai:43,delet:43,delta:[1016,1018,1067],delta_dim_s:1067,delta_percent_mem:1067,delta_sf:1067,delta_util:1067,demo:1167,denomin:[921,952,959,992,999,1000,1165,1166,1198,1199],denot:43,dens:[1184,1194],depend:[807,808,809,812,813,818,819,820,823,825,827,830,837,838,921,1013,1167],depth:[40,41,403,427,847,869,873,879,921,961,982,1067,1111,1120,1196,1197],depth_cutoff:[40,41],depthwis:[1148,1155,1184,1191],depthwise_conv2d:[199,340,465,598,786,1148],depthwiseconv2d:[1167,1184],deriv:[797,800,1016,1018,1019,1021,1023,1024,1025,1111,1113,1120,1167,1196,1200,1204,1206],descend:[827,830,837,838],descent:[1016,1021,1200,1205],describ:[40,41,1130,1131],descript:[827,831],design:[1167,1168],desir:[40,41,847,892,897,901,921,924,927,963,964,983,1015,1032,1037,1067,1130,1132,1133,1134,1136,1138],desired_aspect_ratio:[440,443,1032,1037],desired_percent_increas:1067,detail:1213,detect:[40,41,1111,1112,1119],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,807,808,809,810,812,813,814,815,818,820,823,824,827,828,829,831,841,842,843,847,882,884,885,894,897,901,902,908,911,912,913,920,921,923,924,927,928,929,962,965,969,970,1002,1012,1016,1022,1049,1056,1063,1064,1065,1066,1067,1148,1159],dev:[40,41,42,43,127,251,351,354,401,403,404,406,416,417,418,425,426,427,428,429,434,451,452,526,655,797,800,847,850,851,853,854,856,857,860,861,863,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,886,887,888,889,890,891,892,893,896,921,924,927,955,956,963,973,974,982,983,989,990,1015,1016,1031,1123,1124,1125,1126,1127,1173,1174,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207],dev_clon:[40,41,847],dev_clone_arrai:847,dev_clone_it:847,dev_clone_nest:847,dev_dist:[40,41,847],dev_dist_arrai:847,dev_dist_it:847,dev_dist_nest:847,dev_from_str:[43,127,251,401,526,655,847],dev_mapp:847,dev_str:[40,41],dev_to_str:[127,251,401,526,655,847],dev_unifi:847,dev_unify_arrai:847,dev_unify_it:847,dev_unify_nest:847,dev_util:847,devclonedit:847,devcloneditem:847,devclonednest:847,devdistit:847,devdistitem:847,devdistnest:847,develop:[43,1167,1210,1213],deviat:[40,41,1123,1126,1130,1136,1165,1166,1198,1199],devic:[21,40,41,43,351,352,353,356,402,403,415,797,798,799,800,801,802,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,921,924,927,954,955,956,963,973,974,982,983,989,990,1015,1016,1031,1123,1124,1125,1126,1127,1167,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207],devmanag:[847,855],devmapp:[847,857],devmappermultiproc:847,diag:[827,830],diagon:[109,234,383,508,637,797,801,827,921,963],dict:[15,16,17,18,19,40,41,42,847,849,852,856,857,859,869,870,871,872,873,921,945,946,947,975,1063,1064,1065,1067,1111,1113,1114,1115,1118,1120,1173,1174],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,803,804,847,866,867,870,871,1039,1044,1067,1148,1157,1167,1210,1213],differenti:[1167,1210],dilat:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],dim:[40,41,827,830,921,982,1032,1033,1037,1067,1184,1195],dim_siz:[40,41,847,1067],dimens:[40,41,42,797,801,827,828,830,831,832,833,834,835,841,842,843,847,878,921,931,936,940,945,946,947,950,953,960,972,982,986,987,997,998,1001,1009,1011,1032,1036,1039,1042,1063,1064,1065,1066,1067,1123,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1158,1161,1163,1164,1184,1185,1186,1187,1188,1189,1190,1191,1194,1195],dimension:[40,41,451,827,830,831,841,842,843,921,997,998],direct:1067,directli:[43,1111,1120,1210,1213],directori:[921,994,1005],discord:43,discret:[1161,1163],discuss:43,disk:[40,41,1032,1034],distanc:[921,924],distribut:[40,41,847,866,870,871,872,873,1067,1123,1124,1125,1126,1127,1148,1156,1184,1192,1196,1197],distribute_nest:1067,distributedarrai:[40,41],distrubt:[1161,1163],dive:[1167,1210],divid:[40,41,921,997,999,1049],dividend:[1049,1056],divis:[921,952,959,992,999,1000,1016,1018,1019,1023,1049,1056,1200,1201,1202],divisor:[1016,1018,1019,1023,1049,1056,1200,1201,1202],doc:1167,docstr:43,document:43,doe:[40,41,43,921,924,997,1209],doesn:[1039,1044,1167],doing:43,domain:[807,808,809,812,813,818,820,823,824,825,1049,1050],don:[43,1167],done:43,door:1213,dot:[1039,1041,1148,1159,1160,1184,1195],down:1209,downscal:[921,934,935],drag:[1167,1213],draw:[1123,1124,1126,1127],drawn:[1123,1124,1125,1126,1127],drop:[1167,1213],dropout:[1148,1167,1184,1195],dropout_r:[1184,1195],ds_tune_step:847,dtype:[40,41,43,134,257,351,352,353,354,356,357,359,360,403,404,406,407,415,418,434,533,663,797,798,799,800,802,803,804,805,834,835,901,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,924,927,954,963,982,983,1015],dtype_bit:[134,257,403,533,663,897],dtype_from_str:[43,134,257,403,533,663,897],dtype_in:[403,412,413,414,897,903,908,909,910,911,912,913,920],dtype_to_str:[134,257,403,533,663,897],duplic:[40,41,43],dure:[40,41,43,845,846,921,1010,1016,1018,1019,1023,1063,1064,1065,1066,1196,1197,1200,1201,1202,1204],dynam:[43,403,408,845,846],each:[40,41,42,43,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,830,847,856,857,866,867,868,869,870,871,872,878,890,891,921,922,923,937,948,986,997,1001,1004,1014,1016,1019,1021,1023,1024,1025,1032,1035,1049,1051,1056,1058,1059,1067,1111,1115,1123,1124,1130,1131,1148,1149,1150,1151,1152,1153,1154,1155,1156,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210],eager:1210,easi:1213,easili:1167,econom:1213,ecosystem:1167,edg:[921,933,937,1014],effect:[1016,1025],effective_grad:[1016,1025],effici:1213,einop:[40,41,921,945,946,947],einops_rearrang:[40,41,921],einops_reduc:[40,41,921],einops_repeat:[40,41,921],einstein:[40,41,1130,1131],einsum:[40,41,185,328,453,588,766,1130],either:[40,41,43,807,818,820,823,921,944,975,978,980,1063,1064,1065,1066,1067,1184,1195,1196,1197,1210],eleg:1067,element:[40,41,451,797,801,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,832,833,839,840,841,842,843,847,868,872,878,897,901,921,922,924,926,928,929,933,934,935,941,942,948,951,952,963,964,977,979,986,988,997,1008,1013,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1130,1131,1133,1135,1137,1140,1141,1142,1143,1144,1145,1146,1147,1148,1156,1184,1192],elementwis:[40,41],elementwise_affin:[1198,1199],elementwise_funct:[807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825],elemtn:[1123,1124],elif:1067,els:[43,921,930,944,949,1067],elsewher:[921,1013],emphas:1167,empti:[40,41,77,210,351,476,605,797,841,842,843,1039,1044,1067],enabl:[40,41,42,43,1167],encapsul:[803,805],encod:[921,953,1032,1034],end:[921,924,1167,1210],engag:43,ensur:43,entir:[40,41,841,842,843,847,891,1067,1167,1184,1193],entri:[40,41,921,973,974,997,998],entropi:[1161,1162,1163,1164],enumer:1067,environ:1167,eps:[357,803,804],epsilon:[1016,1018,1019,1023,1161,1162,1163,1164,1165,1166,1198,1199,1200,1201,1202],equal:[40,41,88,362,487,616,807,814,827,828,837,838,921,923,928,929,937,997,1014,1049,1061,1123,1127],equality_matrix:[921,923],equat:[40,41,1130,1131],equival:[807,821,827,831,921,924,1049,1061],erf:[449,747,1049],error:[40,41,43,847,921,998,1049,1057,1067,1140,1141,1196,1197,1200,1204],etc:[40,41,43,847,892,921,924,927,955,956,963,973,974,982,983,989,990,1015,1067,1123,1124,1125,1126,1127,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207,1213],euclidean:[827,831],euler:796,evalu:[40,41,807,818,819,820,822,841,842,843,921,978,1111,1112,1119],even:[43,1213],evenli:[40,41,921,924,973,974,997],everi:[43,921,923,1213],exact:[40,41],exampl:[43,845,846,921,933,1001,1039,1044,1167,1209,1210,1213],example_input:[403,408,845,846],exc_tb:1067,exc_typ:1067,exc_val:1067,exce:[921,979],except:[40,41,44,47,841,842,843,921,924,930,936,944,1010,1067],excess_s:1067,excit:[1167,1210],exclud:[59,61,921,924,1123,1127],exclus:[40,41,403,410,423,435,437,921,941,970,1016,1022,1123,1125],execut:[43,921,1010,1210],execute_with_gradi:[165,305,435,568,727,1016,1167,1209],exist:[40,41,921,944,1067,1167,1200,1204,1213],exp:[747,1049],expand:[40,41,921,950,953],expand_dim:[40,41,257,663,921,1067],expect:[921,925],explain:[43,1210],explicitli:[43,1184,1193,1195,1196,1197,1210],expon:[921,1000],exponenti:[1049,1057,1058],expos:[921,927,938],express:[807,812,823,921,978],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1016,1020],eye:[1039,1041],fabian:1167,fabio:1167,factor:[827,830,847,856,889,890,891,1016,1018,1019,1023,1024,1067,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191,1200,1201,1202,1203],fail:43,falck:1167,fall:[1196,1197,1200,1204],fallback_to_non_compil:[1196,1197,1200,1204],fals:[15,18,19,40,41,42,59,66,67,68,69,70,401,403,410,411,423,430,433,435,436,437,444,445,807,814,815,821,827,831,834,835,837,838,839,840,841,842,843,847,865,878,886,891,896,897,904,905,906,907,921,923,941,944,949,953,960,970,975,995,997,1011,1013,1016,1019,1020,1021,1022,1023,1024,1025,1039,1042,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1130,1132,1133,1134,1135,1136,1137,1138,1173,1174,1196,1197,1200,1201,1202,1203,1204,1205],fan_in:1175,fan_mod:1175,fan_out:1175,far:[1111,1112,1119,1209],faster:[845,846],favourit:[1167,1209],feasibl:1213,feat_dim:[1148,1159,1160],fed:[847,891,1067],feed:[847,891,1067],few:43,field:1213,file:[40,41,43,921,994,1005,1196,1197],filepath:[40,41],fill:[40,41,797,798,799,800,802,921,954,983,1123,1125],fill_valu:[403,415,921,954],filter:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191,1213],filter_s:[1184,1185,1186],filter_shap:[1184,1187,1188,1189,1190,1191],find:[40,41,43,1213],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,216,217,357,358,482,483,611,612,803],finish:[1167,1213],finit:[807,814],first:[40,41,43,451,807,810,816,817,827,828,830,845,846,847,878,921,928,936,940,948,973,974,1001,1003,1016,1020,1063,1064,1065,1066,1067,1111,1112,1119,1123,1129,1130,1135,1137,1184,1195,1196,1197,1200,1204,1210,1213],firstlayersiren:[1167,1175],firstli:[1210,1213],fist:[847,891,1067],fit:[40,41,401,403,435,440,444,448,449,451,921,986,1032,1037],fix:43,fkt:1213,flag:[40,41,43,1016,1022],flat:[40,41,921,986,989],flat_list:[40,41],flatten:[40,41,827,831,834,835,921,953,986,1130,1132,1133,1134,1136,1138],flatten_key_chain:[40,41,1196,1197],flexibl:[1167,1210],flip:[40,41,114,239,388,513,642,832],float32:[43,403,418,897,901,909,910,921,924,927,963,983,1015],float_dtyp:[897,905,915],float_img_to_uint8_img:1032,floor:[257,403,663,921,952,1067],floormod:[257,403,663,921],fluid:1213,folder:[43,1167],follow:[40,41,43,803,805,827,831,847,891,921,966,967,968,999,1000,1016,1019,1021,1023,1024,1025,1067,1111,1115,1120,1148,1159,1160,1167,1184,1194,1200,1204],followng:[803,804],fomaml_step:1063,forget:[1016,1018,1019,1023,1200,1201,1202],fork:[921,980,1167,1168],forkserv:[921,980,1067],form:[15,16,17,18,19,40,41,797,801,827,828,921,927,1016,1019,1021,1023,1024,1025,1111,1113,1120,1148],format:[40,41,43,847,865,897,901,903,907,921,924,927,963,983,1015,1067,1130,1131,1167,1209,1210],format_fn:[40,41],format_key_chain:[40,41],forward:[1196,1197,1200,1204,1209],found:[40,41,42],fourier:[921,953],fourier_encod:921,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,117,120,122,124,125,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,179,180,181,182,183,184,186,187,188,189,190,191,192,195,197,198,200,201,202,203,204,205,206,211,212,213,214,215,217,218,219,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,240,242,245,248,249,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,339,341,342,343,344,345,346,347,352,353,354,355,356,358,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,384,385,386,387,389,391,394,396,398,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,478,479,480,481,483,484,485,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,509,510,511,512,514,516,519,521,523,524,527,528,529,530,531,532,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,606,607,608,609,610,612,613,614,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,638,639,640,641,643,645,648,650,652,653,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,728,729,730,731,732,734,735,736,738,739,740,741,742,743,745,746,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,765,767,768,769,770,771,772,773,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,798,799,800,801,802,804,805,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,828,829,830,831,833,835,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1166,1167,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1212,1213],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1067,framewrk:[921,980],free:43,freed:43,freeli:43,frequenc:[921,953],from:[40,41,42,43,797,800,807,824,827,828,832,833,839,840,841,842,843,847,856,857,891,897,903,921,944,955,956,963,987,998,1006,1013,1016,1019,1023,1032,1036,1039,1044,1063,1064,1065,1066,1067,1111,1113,1120,1123,1124,1125,1126,1127,1130,1135,1137,1148,1156,1159,1167,1173,1174,1184,1192,1195,1200,1204,1209,1210],from_cal:[1196,1197],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,134,257,403,533,663,803,804,921,1039,1044,1167],full_matric:[827,830],fulli:[43,1167,1184,1194,1195,1209],func:[40,41,403,408,435,436,845,846,847,891,921,932,1016,1020,1067],further:[43,1213],furthermor:1213,futur:1213,gain:1175,gamma:[1165,1166],gather:[40,41,134,257,403,533,663,921,956],gather_nd:[40,41,134,257,403,533,663,921],gauss:[1049,1057],gaussian:[1140,1141],geglu:[1167,1170],gelu:[338,462,775,1140,1167,1170],gener:[23,40,41,43,401,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,451,845,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1022,1123,1125,1127,1128,1167,1200,1204],geometr:[921,953],get:[40,41,43,803,804,805,847,856,857,865,880,881,886,890,893,896,897,907,908,921,925,957,958,959,985,1067,1167,1184,1193,1213],get_all_arrays_in_memori:921,get_all_arrays_on_dev:847,get_framework:59,get_initial_st:[1184,1193],get_min_bas:921,get_min_denomin:921,get_mod_kei:[1196,1197],get_num_dim:[403,663,921],get_referrers_recurs:921,getfullargspec:1067,gist:1167,give:[43,921,987,1210],given:[40,41,43,797,798,832,833,847,880,886,889,890,891,893,896,897,901,921,924,927,933,941,942,956,973,974,983,986,989,990,997,1004,1009,1011,1015,1016,1018,1019,1021,1023,1024,1025,1039,1041,1045,1049,1050,1067,1111,1116,1117,1123,1126,1127,1129,1130,1133,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1173,1174,1213],global:[40,41,42,847,856,857,864,889,890,891,897,904,905,906,921,943,958,959,985,991,992,993,999,1000,1016,1031,1067,1165,1166,1198,1199],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1167,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194],good:43,googl:1167,got:[43,1167],gpu0:43,gpu2:43,gpu:[847,882,885,1067],gpu_is_avail:[401,847,1067],grad:[1167,1200,1204,1209],gradient:[25,40,41,436,437,438,439,847,891,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1035,1063,1064,1065,1066,1167,1200,1201,1202,1203,1204,1205,1209,1213],gradient_descent_upd:[1016,1063,1064,1065,1066],gradient_imag:[168,310,440,573,733,1032],gradienttrack:[1016,1017],graph:[1016,1019,1021,1023,1024,1025,1196,1197],greater:[40,41,921,924,951,998,1123,1127],green:[40,41,42,1211,1212],grid:[921,978],group:[1032,1037],guid:[43,1167,1168,1213],gym:1167,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1213,half:[921,924,1067,1123,1127],hand:1167,handl:[40,41,42,43,845,846,847,863,865,874,875,886,893,896,1016,1019,1021,1023,1024,1025,1067,1200,1201,1202,1203,1204,1205],happen:43,has:[40,41,43,827,829,834,835,921,1001,1039,1044,1049,1052],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,921],hasattr:1067,have:[40,41,43,797,798,799,800,801,802,803,804,807,808,809,810,811,812,813,814,815,816,817,818,820,821,823,824,825,827,828,830,831,832,833,834,835,837,838,841,842,843,921,936,940,945,946,947,948,954,1001,1016,1022,1030,1049,1056,1067,1167,1209,1210],haven:43,hdf5:[40,41,1196,1197],head:[1148,1159,1184,1195],head_dim:[1184,1195],height:[1032,1037],height_cutoff:[40,41],help:[43,59,357,401,402,847,859,860,861,862,897,1016,1167,1175,1177,1178,1180,1181,1183],here:[43,1167],hidden:[1148,1158,1184,1193],hierarch:[921,938],hierarchi:[40,41],high:[40,41,451,1123,1125,1127],higher:[827,830,1016,1019,1021,1023,1024,1025],highest:[1123,1125],highest_util:1067,highest_util_nod:1067,highli:1167,highlight:1213,hint:43,hkt:1213,hold:[897,901,921,924,927,989,990],host:1167,hot:[921,982],hour:43,how:[1167,1184,1195,1196,1197,1210,1213],howev:[43,1210],http:1213,hyperbol:[807,808,809,813,825,1049,1054,1055,1060,1062,1140,1147],hypothet:[43,1213],icon:1167,idea:1167,ident:[40,41,43,134,257,403,533,663,921],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[796,803,804,807,824],if_exist:[40,41],ignor:[40,41,1200,1204],ignore_key_error:[40,41],ignore_miss:[1200,1204],ignore_non:[40,41],iii:43,iinfo:[83,216,357,482,611,803],imag:[27,441,442,443,921,972,1033,1034,1035,1036,1037,1038,1148,1149,1150,1151,1152,1154,1155,1167,1213],image_dim:[1032,1036],imkkhk:1213,immedi:[1167,1210,1213],implement:[43,807,808,809,812,813,818,819,820,823,825,837,838,1167,1210,1213],in_featur:[1148,1157],inadvert:43,includ:[40,41,43,827,831,841,842,843,921,924,962,999,1000,1012,1111,1112,1123,1127,1184,1194,1195,1198,1199,1209],include_deriv:[1111,1113,1120],include_empti:[40,41],include_inf:[40,41,921,962,1012],include_nest:[1111,1112],include_self:[40,41],inclus:[43,1123,1125],incom:[1148,1157],increas:[847,869,873,879,921,937,950,1014,1067,1111,1120],increasingli:1213,increment:[921,967,1067],inde:1167,indent:[40,41,42],independ:[1123,1124],index:[40,41,403,451,834,835,837,838,921,926,955,956,978,998,1001,1111,1114,1116,1117,1118,1121],index_nest:1111,indic:[40,41,403,416,417,427,428,429,827,831,834,835,837,838,921,926,955,956,964,982,989,990,1111,1112,1114,1116,1117,1118,1119,1121,1122,1123,1124,1140,1145,1148,1149,1150,1151,1152,1153,1154,1155,1165,1166,1184,1185,1186,1187,1188,1189,1190,1191,1196,1197],indices_wher:[134,257,403,663,921],indistinguish:[807,824],inevit:1213,inf:[40,41,827,831,921,962,971,1012,1049,1052],infer:[797,800,839,840,845,846,921,960,963,987,995,1032,1036,1039,1044,1210,1213],infin:[807,808,809,811,812,813,814,818,820,823,824,825,827,831,841,842,843,921,971],infinit:[807,824],inform:[803,804,805,1016,1027],init_c:[1148,1158],init_h:[1148,1158],init_on_first_step:[1200,1204],initi:[40,41,42,43,59,357,401,402,847,859,860,861,862,897,1016,1067,1148,1158,1167,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1200,1204],initialz:[1196,1197],inner:[1063,1064,1065,1066],inner_batch_fn:[1063,1064,1065],inner_batch_shap:[1148,1157],inner_cost_fn:[1063,1064,1065],inner_grad_step:[1063,1064,1065,1066],inner_learning_r:[1063,1064,1065,1066],inner_optimization_step:[1063,1064,1065,1066],inner_v:[1063,1064,1065],innermost:[797,801,827,828],inp:1067,inplac:[40,41,921,930,965,969,1002,1016,1019,1021,1023,1024,1025,1173,1174,1200,1201,1202,1203,1204,1205],inplace_arrays_support:[403,921],inplace_decr:[134,257,403,533,663,921],inplace_incr:[134,257,403,533,663,921],inplace_oper:[0,11,12],inplace_upd:[40,41,134,257,403,533,663,921,1173,1174],inplace_variables_support:[403,921],input:[15,18,19,40,41,42,43,797,800,801,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,830,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,856,857,864,865,866,869,870,873,879,891,892,897,901,902,904,905,906,907,908,912,913,921,922,923,926,928,929,930,931,933,934,935,936,937,939,941,942,944,945,946,947,948,949,950,951,952,953,960,962,963,964,966,967,968,970,971,972,976,977,978,979,986,988,995,996,998,1001,1002,1003,1004,1006,1007,1008,1009,1011,1012,1014,1016,1020,1022,1027,1031,1032,1033,1034,1035,1036,1038,1039,1042,1044,1046,1047,1048,1049,1052,1054,1055,1056,1060,1061,1062,1063,1064,1065,1066,1067,1123,1124,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1165,1166,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1198,1199,1210],input_ax:[847,891,1067],input_channel:[1184,1185,1186,1187,1188,1189,1190,1193,1194],input_queu:1067,inputs_split:1067,insert:[834,835,921,950],insid:43,inspect:1067,inspir:1213,instal:1167,instanc:[15,16,17,18,19,40,41,43,451,847,856,1067,1173,1174,1206,1207],instead:[40,41,43,451,1130,1132,1133,1134,1135,1136,1137,1138,1213],int32:43,int64:[897,901,921,924,927,963,983,1015],int_dtyp:[897,906,916],integ:[40,41,451,803,805,807,810,811,827,831,841,842,843,897,913,921,924,951,988,997,1123,1125,1128],integr:1167,intend:43,inter:1167,interact:1167,interchang:[40,41,921,1003],interest:1167,interfac:[921,927,1210],intermedi:[40,41],intern:[40,41,847,1016,1030,1067,1111,1112,1119,1120,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1206,1207],interpol:[921,972],intersect:[1049,1050],interv:[40,41,841,842,843,921,924,933,973,974,1049,1051,1123,1127],introduc:1213,inv:[737,1039,1213],invalid:[841,842,843],invalid_dtyp:897,invers:[807,808,809,1039,1041,1043,1049,1050,1051,1052,1054,1213],invert:[1039,1041,1043],invest:1213,investig:43,invoc:[845,846],irrespect:1167,is_al:1067,is_arrai:[134,257,403,533,663,921,1067],is_float_dtyp:897,is_int_dtyp:897,is_mean:1067,is_sum:1067,is_vari:[165,305,435,568,727,1016],isfinit:[88,221,362,487,616,807],isinf:[257,533,663,921],isinst:1067,isnan:[88,221,362,487,616,807],isnumer:1067,issu:[1167,1168],issue_numb:43,item:[15,19,40,41,847,856,857,859,866,868,870,872,878,897,904,921,938,961,999,1000,1067,1111,1115,1116,1117,1120,1121,1122,1167,1196,1197,1209],iter:[15,16,17,18,19,40,41,42,845,846,847,850,851,853,854,856,857,860,861,868,870,871,872,873,878,891,921,923,931,936,937,963,978,983,986,987,990,995,997,1001,1004,1009,1014,1067,1111,1112,1113,1115,1119,1120],iterbal:[847,868,872,878,1067],its:[451,847,891,921,963,987,1003,1009,1067,1167],itself:[1111,1120],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,796,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1211,1212],ivy_backend:[40,41],ivy_bay:1213,ivy_test:43,ivyfcmodel:1209,ivyh:[40,41,42],ivymodul:[196,783],jame:1167,jax:[43,1016,1022,1167,1213],jax_concat:1167,jnp:1167,join:[40,41,921,936,1001,1067],journal:1167,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1167,1184,1193,1213],kaimingnorm:[1175,1179],kalman:1213,kalman_filt:1213,kalman_filter_step:1213,kalman_filter_upd:1213,keep:[40,41,847,892,921,1011,1067,1167,1168,1213],keep_inner_v:[1063,1064,1065],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1063,1064,1065],keepdim:[40,41,403,433,444,445,827,831,834,835,839,840,841,842,843,921,1011,1039,1042,1130,1132,1133,1134,1135,1136,1137,1138],kei:[15,16,17,40,41,42,43,847,859,921,938,1063,1064,1065,1067,1111,1114,1118,1148,1159,1160,1167,1173,1174,1184,1195,1200,1204],kept:[40,41,42,1063,1064,1065],kera:1213,kernel:[1148,1158],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,847,856,857,869,873,879,921,925,945,946,947,975,1067,1111,1115,1196,1197],keyword_color_dict:[40,41,42],kind:[803,804,805,1213],kwarg:[15,16,17,40,41,42,59,63,847,856,869,873,879,921,975,1067,1173,1174,1196,1197],kwarg_stateful_idx:[1196,1197],kwargs_clon:1067,kwargs_dist:1067,kwargs_uni:1067,label:[43,1161,1162,1163,1164],lamb:[1016,1023,1167,1200],lamb_upd:1016,lambda:[1067,1200,1203,1205,1209],lar:[1016,1023,1024,1167,1200],larger:[803,804,921,933],largest:[40,41,803,804,805,921,951],lars_upd:1016,last:[40,41,827,828,830,832,833,837,838,841,842,843,921,924,940,972,997,1001,1039,1042,1130,1135,1137,1140,1145,1148,1158,1184,1194],later:[40,41,921,932],latest:[1184,1193],layer:[1016,1019,1021,1023,1025,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1165,1166,1167,1175,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207,1213],layer_norm:1165,layernorm:[1167,1198],layerwis:[1016,1024,1200,1203],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1111,1112,1119],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1140,1141,1142],leaky_relu:[775,1140],learn:[839,840,1016,1019,1021,1023,1024,1025,1039,1044,1063,1064,1065,1066,1123,1129,1167,1200,1201,1202,1203,1204,1205,1210,1213],learnabl:[1165,1166,1198,1199],least:43,leav:[15,18,19,40,41,1111,1112,1113,1119,1120],left:[40,41,43,834,835,1039,1042,1130,1132,1133,1134,1135,1136,1137,1138,1167],leftmost:[40,41],len:1067,length:[40,41,42,921,924,987,998,1009],lenton2021ivi:1167,lenton:1167,less:[40,41,43,88,221,362,487,616,807,808,811,818,820,824,827,831,1067,1123,1127],less_equ:[88,362,487,616,807],less_util_node_str:1067,let:[1210,1213],level:1167,librari:[807,821,1167,1209,1213],lightweight:1167,like:[43,1016,1022,1123,1127,1167,1209,1210,1213],likewis:43,limit:[40,41,42,43,803,804,805,921,933,934,935],linalg:[29,1040,1041,1042,1043,1044,1045,1167],line:43,linear0:[1167,1209],linear1:1167,linear2:1209,linear:[921,953,972,1039,1140,1141,1142,1143,1148,1156,1167,1184,1185,1186,1187,1188,1189,1190,1191,1209],linear_algebra:[444,445,446,447,827,828,829,830,831],linear_resampl:[134,257,403,533,663,921],linearli:[921,953],link:[43,1167],linspac:[134,257,403,533,663,921,924],list:[15,18,19,40,41,351,352,353,356,797,798,799,802,832,833,841,842,843,847,856,857,866,867,869,870,871,873,876,877,891,921,924,927,929,978,996,997,1006,1011,1063,1064,1065,1067,1111,1112,1113,1115,1119,1120,1148,1149,1150,1151,1152,1153,1154,1155,1167,1168,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191],list_join:[40,41,42],list_stack:[40,41],liter:[827,831],littl:1210,load:[40,41],loaded_kwarg:1067,loader:1167,local:43,local_set:[921,961],locat:[43,921,971,1123,1124],log10:[88,362,487,616,807],log1p:[88,362,487,616,807],log2:[88,362,487,616,807],log:[747,807,819,827,829,921,974,1049,1067,1161,1162,1163,1164],logarithm:[807,818,819,820,827,829,1049,1059],logdet:[827,829],logic:[31,807,821,841,842,843,1047,1048,1167],logical_and:[319,744,1046],logical_not:[88,221,362,487,616,807],logical_or:[319,744,1046],logit:[1161,1164],logspac:[134,257,403,533,663,921],look:[43,1210,1213],loop:[1063,1064,1065,1066],loss:[1162,1163,1164,1167,1209],loss_fn:[1167,1209],lot:1210,low:[40,41,451,1123,1125,1127],lower:[40,41,43,797,801,921,977,1123,1127],lower_depth:[1196,1197],lowest:[15,18,19,40,41,1111,1120,1123,1125],lstm:[1148,1158,1167,1184],lstm_updat:[43,1148],machin:[803,804,805,839,840,1039,1044,1123,1129,1167,1210,1213],made:43,mai:[807,817,821,837,838,921,924,944,948,1167,1210,1213],main:[797,801,827,828,921,963,1167],mainli:1167,maintain:[43,837,838],make:[43,451,847,1067,1167,1210],maml:[1063,1064,1065],maml_step:1063,manag:[847,1067],manhattan:[827,831],mani:[40,41,43,921,997,1167],manipulation_funct:[832,833],manner:[15,18,19,40,41,43,1111,1120],manual:[1111,1112,1119,1213],map:[40,41,42,847,856,921,971,1067,1111,1116,1117,1120,1184,1195,1209],map_cont:[40,41],map_nest_at_index:1111,map_nest_at_indic:1111,map_sequ:[40,41],mapper:[847,856,857,1067],mark:43,mask:[1148,1159,1160],master:43,match:[40,41,921,975],match_kwarg:921,math:[33,450,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1067,1167],mathbb:[1039,1045],mathbf:[1039,1045],mathemat:[796,827,831],matmul:[43,257,403,533,663,921,1213],matplotlib:1210,matric:[797,801,827,828,1148,1157],matrix:[40,41,797,801,827,828,921,923,934,976,1039,1040,1041,1042,1043,1044,1045,1148,1157,1184,1194],matrix_norm:[40,41,172,314,444,577,737,1039],matter:1167,max:[40,41,357,803,804,805,921,934,935,946,977,989,990,1067,1130,1132,1200,1202],max_batch_s:[40,41],max_chunk_s:[847,891,1067],max_depth:[40,41,847,851,854,861,869,873,879,921,961,1067,1111,1120],max_dev_dim_step_ratio:847,max_freq:[921,953],max_length:[40,41],max_node_dim_step_ratio:1067,max_norm:[40,41,921,934,935],max_split_factor_step_s:[847,1067],max_trust_ratio:[1016,1023,1200,1202],maxim:[1167,1210,1213],maximis:1167,maximum:[40,41,42,663,834,835,847,869,873,879,891,921,933,934,935,953,1016,1023,1067,1111,1120,1130,1132],mayb:[15,18,19],mdi:1067,mean:[40,41,451,847,876,877,878,879,891,921,946,1063,1064,1065,1066,1067,1111,1115,1123,1126,1130,1133,1136,1138,1175,1209,1213],measur:[1148,1159,1184,1195],mech:1167,mechan:[1167,1213],medic:1213,member:43,memori:[847,863,886,891,893,896,1067,1148,1158,1167],mention:43,merg:43,merge_with_upstream:43,meshgrid:[257,403,663,921],messag:[1211,1212],meta:[35,1064,1065,1066,1167],method:[40,41,42,43,451,921,927,938,978,989,990,1016,1023,1024,1067,1111,1112,1119,1120,1167,1184,1195,1196,1197,1210],might:[921,944,1213],min:[40,41,121,357,395,520,649,803,804,805,827,831,839,921,946,979,989,990,999,1039,1044,1067,1130,1134],min_bas:[921,1000],min_denomin:[921,999],min_dev_dim_s:847,min_node_dim_s:1067,min_sf_tune_step:[847,1067],min_unit_dev_tune_step:847,min_unit_node_tune_step:1067,mind:1167,mini:[1165,1166,1198,1199],minimum:[40,41,663,839,840,847,897,901,921,924,926,927,933,958,959,991,992,999,1000,1067,1130,1134],miss:[1200,1204],ml_framework:[921,924,1039,1044],mod:[921,952],mod_depth:[1196,1197],mod_height:[1196,1197],mod_with_top_mod_key_chain:[1196,1197],mode:[40,41,444,446,827,830,845,846,847,876,877,878,879,891,1039,1044,1067,1210],model:[1167,1209],modul:[40,41,42,59,921,980,1067,1167,1168,1170,1171,1172,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1198,1199,1206,1207,1213],moment:[1016,1018,1019,1023,1200,1201,1202],more:[43,832,833,921,1001,1067,1167,1210,1213],more_util_node_str:1067,most:[40,41,1039,1044,1167,1213],move:[40,41,43,847,892,1067],much:[43,1167,1213],multi:[451,921,980,1148,1159,1184,1195],multi_head_attent:1148,multi_index_nest:1111,multi_map:[40,41],multi_nod:1067,multidev:[847,858,859,860,879],multidevcontain:[40,41],multidevic:[847,856],multidevit:[847,850,853,856,857,861],multidevitem:[847,849,852],multidevnest:[847,851,854],multiheadattent:[1167,1184],multinod:[1067,1071],multinodecontain:1067,multinodeit:1067,multinodeitem:1067,multinodenest:1067,multinomi:[178,323,451,583,759,1123],multipl:[40,41,841,842,843,921,975,997,1039,1041,1130,1132,1133,1134,1135,1136,1138,1165,1166,1184,1194,1210],multipli:[40,41,921,941,1130,1135],multiprocess:[40,41,42,403,663,847,856,921,1067],must:[40,41,42,43,797,798,799,800,801,802,807,808,809,810,811,812,813,814,816,817,818,820,821,823,824,825,827,828,831,832,833,837,838,839,840,841,842,843,847,876,877,878,879,891,921,924,936,938,940,948,977,979,990,1001,1049,1053,1056,1067,1123,1128,1200,1204],mutabl:[1111,1113,1120],mutlidevic:[847,856],mutlinod:1067,mw_tm1:[1016,1019,1023],mx_concat:1167,mxn:[797,801,827,828],mxnet:[1167,1213],my_func:43,mymodel:1167,name:[43,845,846,1209],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1210],nan:[40,41,43,796,807,808,809,811,812,813,814,815,818,820,823,824,841,842,843,921,962,1012],nativ:[15,17,18,19,40,41,43,847,863,865,874,875,886,893,896,897,902,909,910,1067,1167,1168,1173,1174],native_modul:[1173,1174],native_module_class:[1173,1174],nativearrai:[15,18,19,43,797,800,801,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,829,830,831,832,833,834,835,837,838,839,840,841,842,843,847,865,891,892,897,901,907,912,913,921,922,923,924,926,927,928,929,931,933,934,935,936,937,939,940,941,942,945,946,947,948,950,951,952,953,955,956,960,962,963,964,971,972,973,974,976,977,978,979,982,983,986,987,988,989,990,995,997,998,1001,1003,1004,1006,1007,1008,1009,1011,1012,1013,1014,1015,1067,1111,1113,1120],natur:[807,819,827,829,1049,1059,1213],ncdhw:[1148,1153,1154,1184,1189,1190],nchw:[1148,1151,1152,1155,1184,1187,1188,1191],ncw:[1148,1149,1150,1184,1185,1186],ndarrai:[351,352,353,354,355,356,357,359,360,451,921,1007],ndhwc:[1148,1153,1154,1184,1189,1190],nearest:[921,988],need:[43,921,934,935,1148,1150,1152,1154,1167,1184,1186,1188,1190,1213],neg:[40,41,88,221,362,487,616,807,814,827,831,832,833,841,842,843,1130,1135,1137,1140,1142],negative_slop:1175,neither:1067,nest:[15,16,17,18,19,40,41,42,847,869,873,879,921,927,1006,1063,1064,1065,1067,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1196,1197,1200,1201,1202,1203,1204,1205],nested_indices_wher:1111,nested_map:[1067,1111],network:[1148,1157,1167,1168,1170,1184,1196,1197,1213],neural:[1148,1167,1170,1184,1209],never:43,new_node_percent_mem:1067,new_node_util:1067,new_node_utils_kei:1067,new_std:[1165,1166,1198,1199],newli:[43,845,846,921,931,932],newlin:[40,41,42],newshap:[921,931,987],next:[803,804,1067,1196,1197,1200,1201,1202,1203,1204,1205],nhwc:[1148,1151,1152,1155,1184,1187,1188,1191],node:[40,41,1111,1112,1119],node_clon:1067,node_dist:1067,node_dist_arrai:1067,node_dist_it:1067,node_in:1067,node_mapp:1067,node_str:1067,node_to_str:1067,node_util:1067,nodedistit:1067,nodedistitem:1067,nodedistnest:1067,nodemanag:[1067,1078],nodemapp:1067,nodemappermultiproc:1067,noinspect:[848,898,899,900,1017,1067],non:[40,41,807,821,827,831,841,842,843,845,846,897,911,1196,1197,1200,1204,1210],none:[40,41,42,43,59,61,64,351,352,353,354,356,401,403,404,406,408,415,416,417,418,425,426,427,428,429,430,431,432,434,444,445,451,452,797,798,799,800,802,803,804,805,827,831,832,833,834,835,839,840,841,842,843,845,846,847,856,857,863,864,889,890,891,892,897,904,905,906,921,924,927,943,944,949,954,955,956,961,963,965,966,967,968,969,973,974,980,982,983,986,989,990,991,992,997,998,999,1000,1009,1010,1015,1016,1019,1021,1023,1024,1025,1031,1032,1036,1039,1042,1044,1063,1064,1065,1066,1067,1111,1112,1115,1119,1120,1123,1124,1125,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1150,1152,1154,1157,1158,1159,1160,1165,1166,1173,1174,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],norm:[40,41,827,831,921,934,935,1039,1042,1166,1167,1199,1200,1202],normal:[1123,1126,1165,1166,1198,1199],normalized_idx:[1165,1166],normalized_shap:[1198,1199],notat:[40,41,1130,1131],note:[43,1039,1044],noth:[40,41,1210],notimplementederror:1067,now:[40,41,43,847,892,921,922,1067,1167,1184,1195,1196,1197,1209,1210,1213],np_concat:1167,np_finfo:357,ns_tune_step:1067,num:[403,425,426,921,973,974],num_arrai:[40,41],num_arrays_in_memori:921,num_arrays_on_dev:847,num_band:[921,953],num_channel:[1184,1191],num_chunk:1067,num_chunks_floor:1067,num_class:[1123,1124],num_cpu_cor:847,num_gpu:[127,401,847,1067],num_head:[1148,1159,1184,1195],num_kei:[1148,1159,1160],num_lay:[1184,1193],num_or_size_split:[40,41,403,430,921,997],num_output:1067,num_queri:[1148,1159,1160],num_sampl:[403,424,451,452,921,972,1032,1033,1123,1124],num_task:[1063,1064,1065,1066],number:[40,41,42,796,803,804,805,807,811,827,829,830,841,842,843,845,846,847,883,884,885,897,908,912,913,921,924,933,937,950,953,960,963,972,973,974,977,981,986,997,1004,1008,1012,1014,1063,1064,1065,1066,1067,1123,1124,1128,1130,1132,1133,1134,1136,1138,1148,1159,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1210,1213],numer:[43,807,811,814,815,816,821,822,921,958,959,991,992,999,1000,1049,1056,1175],numhead:[1148,1159],numpi:[40,41,43,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,827,830,921,1007,1039,1044,1130,1131,1167,1209,1210,1213],nwc:[1148,1149,1150,1184,1185,1186],obj:[40,41],object:[40,41,42,59,357,803,804,847,897,901,921,924,927,1016,1111,1114,1116,1117,1118,1121,1122,1123,1129,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197],object_in:[403,406,921,927],observ:1067,obvious:43,occupi:[803,804,805,921,989,990],off:[827,828,921,924],offer:1167,offset:[827,828,1165,1166],often:1210,old:[40,41],on_init:[1184,1195,1196,1197],onc:[43,847,891,1067,1123,1124,1167],one:[40,41,43,827,831,832,833,834,835,847,876,877,878,879,891,897,903,921,963,975,982,989,990,998,1001,1039,1042,1067,1130,1131,1132,1133,1134,1135,1136,1137,1138,1167,1210,1213],one_hot:[134,403,533,663,921],onearrai:[921,950],ones:[40,41,77,210,351,476,605,797,800,921,963,982,1167],ones_lik:[77,210,351,476,605,797],ongo:43,onli:[40,41,43,451,807,821,832,833,847,1039,1044,1067,1111,1112,1113,1119,1200,1201,1202,1203,1204,1205,1209,1210],onlin:[43,1167],onto:[847,876,877,892,1067,1111,1115,1120],oom:[847,1067],open:[921,924,1123,1127,1167,1213],opencv:1210,oper:[40,41,43,921,930,945,946,947,973,974,1002,1016,1019,1021,1023,1024,1025,1046,1047,1048,1148,1149,1150,1151,1152,1153,1154,1155,1157],operand:[40,41,807,808,809,811,812,813,818,820,823,824,1130,1131],oppos:[921,953],optim:[847,1016,1019,1021,1023,1024,1025,1063,1064,1065,1066,1067,1167,1201,1202,1203,1205,1209,1213],optimizer_upd:1016,option:[15,18,19,40,41,42,43,351,352,353,354,356,797,798,799,800,802,827,831,832,833,834,835,839,840,841,842,843,845,846,847,856,857,865,869,870,871,872,873,876,877,878,879,886,889,890,891,892,896,897,902,907,911,920,921,923,924,926,927,934,935,936,941,943,944,953,954,955,956,960,962,963,970,972,973,974,975,978,980,982,983,986,989,990,993,995,997,998,999,1000,1001,1009,1011,1012,1015,1016,1019,1021,1022,1023,1024,1025,1027,1032,1036,1039,1042,1044,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1130,1132,1133,1134,1135,1136,1137,1138,1140,1141,1145,1148,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210],ord:[827,830,831],order:[40,41,42,43,827,831,832,833,837,838,1016,1019,1021,1023,1024,1025,1039,1042,1063,1064,1065,1206,1207],ordered_node_util_kei:1067,org:1213,organ:43,origin:[40,41,42,921,987,1015,1039,1042],other:[40,41,43,845,846,921,923,924,963,1016,1020,1123,1127,1167,1209,1210,1213],otherwis:[15,16,17,18,19,40,41,807,814,815,827,831,834,835,841,842,843,847,864,897,904,905,906,921,930,1009,1010,1013,1016,1022,1027,1031,1063,1064,1065,1067,1130,1132,1133,1134,1136,1138],our:[43,1167,1213],out:[43,451,797,799,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,818,819,820,821,823,824,827,828,829,831,832,833,834,835,837,838,841,842,843,921,924,1049,1052,1148,1156,1158,1167,1184,1192],out_feat_dim:[1148,1159],out_featur:[1148,1156,1157],out_i:[807,814,815],outdat:1213,outer:[1063,1064,1065,1066],outer_batch_fn:[1063,1064,1065],outer_batch_shap:[1148,1157],outer_cost_fn:[1063,1064,1065],outer_v:[1063,1064,1065],outlin:1210,output:[40,41,43,797,798,799,800,802,832,833,847,856,857,891,921,924,932,954,963,986,1004,1016,1020,1049,1053,1067,1123,1125,1126,1127,1148,1150,1152,1154,1156,1158,1159,1160,1167,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195],output_ax:[847,891,1067],output_axi:1067,output_channel:[1184,1185,1186,1187,1188,1189,1190,1193,1194],output_queu:1067,output_shap:[1148,1150,1152,1154,1184,1186,1188,1190],outsid:[921,933],over:[40,41,827,831,841,842,843,1039,1042,1123,1127,1130,1132,1133,1134,1136,1138,1165,1166,1198,1199],overal:1210,overflow:[921,924],overhead:1210,overrid:[921,982,1015],overriden:[1200,1204],overwrit:[40,41,847,891,1067],overwrite_at_key_chain:[40,41],own:[1167,1210,1213],packag:[43,1210],pad:[921,937,953,1014,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],pad_width:[403,921,937,1014],page:1167,pair:[1148,1160],parallel:[847,856,857,1067],parallelis:[847,856,857,1067],param:[40,41,42,403,416,417,797,798,800,834,835,839,840,847,891,921,922,955,956,982,983,1067,1196,1197,1209],paramet:[15,16,17,18,19,40,41,42,43,797,798,800,807,817,822,825,827,828,830,839,840,845,846,847,856,857,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,886,889,890,891,892,893,896,897,901,902,903,907,908,909,910,911,912,913,920,921,923,924,926,927,928,929,930,931,932,933,934,935,936,937,939,940,941,942,944,945,946,947,948,949,950,951,952,953,954,955,956,960,962,963,964,966,967,968,970,971,972,973,974,975,976,977,978,979,980,983,986,987,988,989,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1027,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209],parameter:[1123,1126,1127],pardo:1167,pars:[921,938],part:[797,801,1016,1019,1021,1023,1024,1025,1049,1052,1167,1196,1197,1210],partial:[40,41,43,1196,1197],particl:1213,particular:[43,1213],pass:[40,41,42,43,847,856,891,897,902,921,932,1016,1030,1063,1064,1065,1067,1173,1174,1196,1197,1200,1204,1206,1207],pattern:[40,41,921,945,946,947],peopl:43,per:[847,1067,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],percent_used_mem_on_dev:847,percent_used_mem_on_nod:1067,percentag:[847,886,1067],perf_count:1067,perform:[40,41,43,841,842,843,847,921,926,941,945,946,947,966,967,968,972,973,974,1016,1019,1021,1023,1024,1025,1032,1033,1063,1064,1065,1066,1067,1111,1116,1117,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1156,1158],period:43,permissable_step:1067,permit:43,permut:[451,921,1003,1009],perpendicular:[921,940],person:[43,1167],physci:1213,pickl:[40,41,1067],pickle_filepath:[40,41],pinv:[314,737,1039],pip:1167,pipelin:1209,pkk:1213,pkkm1:1213,pkm1km1:1213,place:[40,41,43,797,798,799,800,802,847,892,921,950,954,966,967,968,1067,1200,1201,1202,1203,1204,1205],placehold:[43,1111,1120],pleas:[43,451,1039,1044],point:[43,796,797,798,799,802,803,804,807,808,809,811,812,813,818,820,823,824,825,827,831,897,912,921,924,1049,1056],popul:[40,41,1123,1124],popular:1213,population_s:[451,452,1123,1124],portabl:[1167,1168],posit:[15,16,17,803,804,807,814,841,842,843,847,869,873,879,921,922,924,950,953,1067,1123,1128,1173,1174],possibi:[40,41],possibl:[43,921,975,1006,1032,1037,1213],post:[1165,1166],post_shap:[40,41],power:[921,958,991,1000,1175],practic:1167,pre:[847,1067,1167],pre_shap:[40,41],precis:[803,804,807,824],pred:[1161,1162,1163,1164],predict:[1161,1162,1163,1164,1213],preprint:1167,present:[40,41],preserv:[40,41,42,832,833,1016,1027],preserve_typ:[40,41,435,438,1016,1027],press:1167,prevent:[43,1016,1018,1019,1023,1067,1200,1201,1202],prevet:43,previou:[1016,1019,1023],previous:[921,932],prime:1167,print:[40,41,42,847,887,921,984,1167,1209],print_all_arrays_in_memori:921,print_all_arrays_on_dev:847,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1200,1204],prob:[451,452,1123,1124,1148,1156,1184,1192],probabl:[1123,1124,1148,1156,1184,1192],problem:[43,1213],process:[43,847,856,857,886,896,921,980,1067],process_specif:[847,886,896,1067],prod:[40,41,921,946],produc:[847,856,857,1067],product:[40,41,921,940,941,976,1130,1131,1148,1159,1160,1184,1195],profil:[127,251,401,526,655,847,1067],progress:43,project:[1167,1209,1210,1213],promot:[807,808,809,810,812,813,818,820,823,824,827,831,1049,1056],prompt:1167,properti:[40,41,357,847,859,1067,1196,1197,1200,1201,1202,1203,1205],provid:[40,41,43,832,833,834,835,841,842,843,845,846,847,864,897,904,905,906,911,920,921,944,982,990,1015,1016,1019,1021,1023,1024,1025,1031,1067,1167,1184,1193,1200,1201,1202,1203,1204,1205,1210],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1039,1043],pull:[1167,1168],pure:[40,41,1167,1213],purpos:[43,1213],put:1067,pybroadexcept:1067,pyprotectedmemb:1067,pyshadowingnam:[848,898,899,900,1017,1067],python:[40,41,847,886,896,921,924,1067,1167],pytorch:[1016,1019,1021,1023,1024,1025,1039,1044,1167,1200,1201,1202,1203,1204,1205,1209,1210,1213],pyunresolvedrefer:1067,quadrant:[1049,1053],qualiti:43,queri:[40,41,847,880,890,1067,1148,1159,1160,1184,1195],query_dim:[1184,1195],query_kei:[40,41],queue:[40,41,42,847,856,857,921,985,993,1067],queue_class:[847,856,857,1067],queue_load_s:[40,41,42],queue_timeout:[40,41,42,921,1067],quick:[451,1167],quickli:[43,1209],radian:[807,812,823,1049,1050,1051,1053,1061],rai:[1049,1050],rais:[40,41,841,842,843,921,930,958,991,998,1000,1010,1067,1196,1197,1200,1204],ram:[847,886,893,896,1067],randint:[178,323,451,583,759,1123],random:[37,40,41,452,1124,1125,1126,1127,1128,1129,1167],random_crop:1032,random_norm:[178,323,451,583,759,1123],random_uniform:[178,323,451,583,759,1123],randomli:[451,1032,1036,1148,1156,1184,1192],rang:[451,921,924,973,974,1049,1053,1067,1167,1209,1213],rank:[827,831,841,842,843,921,937,1011,1014],rate:[1016,1019,1021,1023,1024,1025,1063,1064,1065,1066,1184,1195,1200,1201,1202,1203,1204,1205],rather:[40,41,43,847,891,921,924,970,1016,1022,1067],ratio:[847,1016,1023,1032,1037,1067,1200,1202],raw:[40,41,1039,1044],raw_delta:1067,reach:[43,847,869,873,879,1067,1111,1120],read:[40,41],readi:[1067,1209],real:[1049,1050,1052],realiti:1210,rearrang:[40,41,921,945,947],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1063,1065],receiv:[43,847,856,857,921,925,975,1067,1184,1194],receivess:[847,1067],receivng:[1063,1066],recev:[1063,1064,1065],recognit:1213,recommend:[807,821,1167],rectifi:[1140,1142,1143],recurr:[1148,1158],recurrent_bia:[1148,1158],recurrent_kernel:[1148,1158],recurs:[40,41,1111,1112,1113,1119,1120],reduc:[40,41,834,835,841,842,843,847,891,921,946,1039,1044,1067,1130,1132,1133,1134,1135,1136,1137,1138],reduce_max:[40,41,185,328,453,588,766,1130],reduce_mean:[40,41,185,328,453,588,766,1130,1167,1209],reduce_min:[40,41,185,328,453,588,766,1130],reduce_prod:[40,41,185,328,453,588,766,1130],reduce_std:[40,41,328,1130],reduce_sum:[40,41,185,328,453,588,766,1067,1130],reduce_var:[40,41,185,328,453,588,766,1130],reduct:[39,40,41,403,428,429,841,842,843,921,946,989,990,1131,1132,1133,1134,1135,1136,1137,1138,1167],refactor:43,refer:[43,807,819,841,842,843,1016,1018,1019,1039,1045,1184,1194,1213],reflect:43,reflected_oper:[0,13,14],regard:[847,1067],regardless:[40,41,845,846],register_paramet:1209,reimplement:1213,rel:[827,828,832,833,837,838,1016,1019,1021,1023,1024,1025],rel_slice_obj:1067,relat:43,relev:[1200,1201,1202,1203,1204,1205],relu:[775,1140,1141,1142,1167,1209],remain:[43,921,987,1111,1115],remaind:[40,41,921,952,997],remov:[40,41,43,827,828,834,835,921,998,1063,1064,1065],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,832,833],rep:[921,1004],repeat:[40,41,43,257,663,921,947,1004,1067,1210],repeated_config_check:[847,1067],repeatedli:[1111,1118],repetit:[40,41,921,986,1004],replac:[40,41,43,451,452,921,933,989,990,1123,1124],repo:[43,1167],repositori:43,repres:[43,807,808,809,813,825,827,829,897,903,908,1148,1157],represent:[40,41,42,43,796,803,804,805,807,810,847,874,875,897,903,909,910,921,996,1006,1067],reptil:[1063,1066],reptile_step:1063,request:[1167,1168],requir:[43,807,824,845,846,897,901,921,924,927,1173,1174],resampl:[921,972],reserv:43,reshap:[40,41,451,663,921],reshape_lik:[40,41],respect:[807,810,816,817,921,948,1016,1018,1019,1020,1021,1023,1024,1025,1039,1044,1049,1056,1063,1064,1065,1066],respond:43,respons:[43,1067],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,827,828,831,834,835,841,842,843,847,856,921,924,948,989,990,1001,1039,1042,1046,1047,1048,1049,1056,1067,1130,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1167],ret:1067,ret_dict:1067,ret_fn:[847,856,857,1067],retain:[1016,1020],retain_grad:[435,436,1016,1020],retreiv:1067,retrn:[921,996],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1063,1064,1065,1066],return_sequ:[1184,1193],return_st:[1184,1193],rev:[921,944],revers:[40,41,832,833,921,944,1009],review:43,right:[40,41,43],rk_e:1213,robot:1167,ronald:1167,root:[43,807,824],round:[257,403,663,807,811,824,921,924,1067],row:[921,963,1123,1124],rule:[921,924,1049,1056],run:[43,847,856,1016,1018,1019,1023,1063,1064,1065,1066,1067,1167,1168,1184,1195,1196,1197],safe:[847,856,1067],safety_factor:[847,1067],same:[15,16,17,40,41,43,797,800,801,807,811,827,828,830,832,833,834,835,837,838,847,856,857,891,892,897,901,921,922,936,951,952,955,956,982,988,989,990,1001,1015,1016,1022,1027,1049,1052,1063,1064,1065,1067,1130,1131,1148,1149,1150,1151,1152,1153,1154,1155,1167,1184,1185,1186,1187,1188,1189,1190,1191,1209,1213],same_arrai:[40,41],sampl:[921,972,1032,1033,1123,1124,1126,1127,1148,1156,1167,1184,1192],satisfi:[921,927,1039,1041,1045],save:[40,41,921,994,1005,1032,1034,1196,1197],save_dir:[401,402,847,862,1067],save_weight:[1196,1197],scalar:[827,831,921,933,982,1008,1012],scale:[847,889,890,1016,1024,1067,1148,1156,1159,1160,1165,1166,1184,1192,1195,1200,1203],scaled_dot_product_attent:1148,scatter:[921,982,989,990],scatter_flat:[134,257,403,533,663,921],scatter_nd:[134,257,403,533,663,921],scene:[1016,1019,1021,1023,1024,1025],schemat:1167,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[834,835],second:[40,41,807,810,816,817,827,828,847,878,921,928,940,948,985,993,1003,1016,1018,1019,1023,1063,1065,1067,1200,1201,1202],secondli:1213,sector:[807,808,809],see:[59,357,401,402,451,807,810,816,827,831,841,842,843,847,859,860,861,862,897,921,924,973,974,1016,1049,1056,1167,1175,1177,1178,1180,1181,1183],seed:[40,41,178,451,759,1123],seed_valu:[40,41,451,1123,1128],seem:1167,seen_set:[921,961],select:[921,927,998,1210,1213],self:[40,41,59,357,401,402,847,859,860,861,862,897,1016,1067,1167,1175,1177,1178,1180,1181,1183,1200,1204,1209,1213],sent:1067,seper:[43,921,953],seq:[40,41,42,1130,1131,1196,1197],sequenc:[15,16,17,40,41,42,43,451,845,846,847,856,857,866,867,868,869,870,871,872,873,876,877,891,897,901,921,924,927,929,931,936,937,963,975,978,983,986,987,990,997,1001,1004,1009,1014,1016,1020,1032,1036,1037,1039,1042,1067,1111,1122,1123,1125,1127,1130,1132,1133,1134,1135,1136,1137,1138,1148,1149,1150,1151,1152,1153,1154,1155,1165,1166,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1193,1196,1197,1198,1199,1200,1204,1206,1207],sequenti:1167,seri:43,set:[15,18,19,40,41,834,835,837,838,847,876,877,889,890,891,921,923,943,963,991,992,993,994,1016,1019,1021,1022,1023,1024,1025,1039,1042,1067,1111,1112,1119,1121,1122,1123,1124,1128,1130,1132,1133,1134,1135,1136,1137,1138,1167,1184,1193,1200,1201,1202,1203,1204,1205,1210,1213],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:847,set_default_dtyp:897,set_default_float_dtyp:897,set_default_int_dtyp:897,set_default_nod:1067,set_exception_debug_mod:44,set_framework:[40,41,43,59,1067,1167,1209,1210,1213],set_ivy_backend:[40,41],set_min_bas:921,set_min_denomin:921,set_nest_at_index:1111,set_nest_at_indic:1111,set_queue_timeout:921,set_split_factor:[847,1067],set_stat:[1200,1201,1202,1203,1204,1205],set_tmp_dir:921,set_with_grad:1016,setter:1067,sever:1213,sgd:[1167,1200],shape0:1067,shape:[40,41,43,351,352,353,356,403,415,429,451,663,797,798,799,800,801,802,827,828,832,833,834,835,837,838,847,859,897,901,921,922,931,936,937,950,951,952,954,956,960,963,982,983,986,987,988,989,990,996,998,1001,1014,1015,1032,1036,1039,1041,1044,1049,1052,1053,1067,1123,1125,1126,1127,1130,1131,1148,1150,1152,1154,1184,1186,1187,1188,1189,1190,1191,1198,1199],shape_slic:[40,41],shape_to_tupl:921,share:[40,41,1167,1210],shift:1067,should:[40,41,42,43,451,797,801,807,808,809,810,811,812,813,814,815,816,818,820,821,823,824,825,827,828,831,834,835,845,846,847,921,931,932,938,982,987,1016,1019,1021,1023,1024,1025,1049,1056,1067,1130,1131,1167],show:[40,41,1167,1213],show_mod_in_top_mod:[1196,1197],show_structur:[1196,1197],show_sub_contain:[40,41],show_v:[1196,1197],show_v_in_top_v:[1196,1197],shown:[40,41],shp:1067,shuffl:[40,41,178,451,759,1123],shuffle_h5_fil:[40,41],side:43,sigmoid:[775,1140,1167,1209],sign:[827,829],signatur:[43,59,357,401,402,403,435,440,444,448,449,451,847,859,860,861,862,897,1016,1175,1177,1178,1180,1181,1183],signific:1213,similar:[43,1148,1159,1184,1195],similarli:[1039,1044],simpl:[43,921,949,1167,1210,1213],simpler:43,simplest:1210,simpli:[40,41,43,1167,1210,1213],simultan:1167,sin:[88,221,362,487,616,807,921,953,1049,1061,1210],sinco:1210,sine:[807,809,823,1049,1051,1060],singl:[40,41,845,846,847,856,857,876,877,878,879,921,998,1008,1012,1032,1037,1067,1123,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1167,1210,1213],singleton:[827,831,841,842,843],singular:[827,830],sinh:[747,1049],siren:[1167,1175],situat:43,size:[40,41,42,403,428,827,828,830,834,835,841,842,843,847,870,871,872,873,889,890,891,921,924,931,973,974,989,997,1032,1036,1039,1042,1067,1123,1124,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1184,1185,1186],size_ordered_arrai:[40,41],skew:[1039,1045],skinv:1213,skip:[40,41],slice:[40,41,921,955,956,1067,1111,1118],slice_kei:[40,41],slice_obj:[40,41,1067],slice_via_kei:[40,41],slide:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],slodget:827,slogdet:[109,234,383,508,637],slope:[1140,1142],small:[1161,1162,1163,1164,1165,1166,1167,1198,1199,1210],smaller:[921,933],smallest:[40,41,803,804,805,807,811,921,926],smallest_norm:[357,803,804],softmax:[194,462,775,1140,1148,1159,1160],softplu:[775,1140],solut:43,solv:1213,some:[40,41,43,921,924,1016,1018,1019,1021,1023,1024,1025,1030,1148,1156,1167,1184,1192,1210,1213],some_backend:43,some_namespac:43,someth:[43,1213],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,827,830,838,1067],sort_by_kei:[40,41],sorting_funct:[837,838],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1211,1212,1213],space:[921,924,953,973,974],spars:[1161,1164],sparse_cross_entropi:1161,spawn:[921,980],special:[43,807,808,809,811,812,813,818,820,823,824],specif:[40,41,43,807,821,847,889,921,938,945,946,947,980,1063,1064,1065,1066,1067,1123,1129,1167,1196,1197,1209,1210],specifc:[1123,1124],specifi:[40,41,797,798,799,801,802,827,828,831,832,833,834,835,837,838,841,842,843,847,866,867,868,869,870,871,872,873,876,877,881,883,887,890,891,892,897,901,903,921,924,926,927,933,936,937,954,955,956,962,973,974,1001,1011,1014,1039,1042,1067,1111,1116,1117,1121,1122,1130,1131,1132,1133,1134,1135,1136,1137,1138],sphinx:43,split:[40,41,134,257,403,533,663,847,856,870,871,872,873,889,890,891,921,975,1067],split_arg:1067,split_factor:[847,856,1067],split_func_cal:[847,1067],split_siz:1067,spread:[847,879,1067],sqrt:[88,221,362,487,616,807,827,831],squar:[807,824,827,829,921,963,1039,1041],squeez:[134,257,403,533,663,921],stabil:[837,838,921,999,1000],stabl:[837,838,921,958,959,991,992,999,1000],stable_divid:921,stable_pow:921,stack:[40,41,257,663,797,801,827,828,921,1032,1037,1111,1112,1119,1184,1193],stack_imag:[168,310,440,573,733,1032],stacked_dim_s:1067,stage:43,standard:[40,41,803,804,1123,1126,1130,1136,1165,1166,1167,1168,1198,1199],start:[40,41,43,401,402,403,404,425,426,451,847,862,921,924,973,974,1067,1167,1210],starting_index:[40,41],starting_split_factor:[847,1067],state:[1067,1148,1158,1167,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209],statement:1210,static_argnam:[403,408,845,846],static_argnum:[403,408,845,846],statistical_funct:[839,840],std:[451,1123,1126],step:[40,41,403,404,847,921,924,973,974,1016,1018,1019,1021,1023,1024,1025,1063,1064,1065,1066,1067,1167,1200,1201,1202,1203,1204,1205,1209,1213],stephen:1167,stick:1167,still:[40,41,43],stochast:[1200,1205],stop:[40,41,401,402,403,404,425,426,847,862,891,921,924,973,974,1016,1019,1021,1023,1024,1025,1027,1063,1064,1065,1066,1067,1200,1201,1202,1203,1204,1205],stop_gradi:[40,41,305,435,568,727,847,891,1016,1019,1021,1023,1024,1025,1063,1064,1065,1066,1067,1200,1201,1202,1203,1204,1205],stopiter:1067,store:[40,41,921,953,997,1016,1030,1196,1197],store_var:[1196,1197],str:[15,16,17,40,41,42,43,351,352,353,354,356,357,359,360,797,800,803,804,805,845,846,847,856,857,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,891,897,902,903,908,909,910,911,912,913,920,921,927,943,945,946,947,978,980,983,989,990,1039,1042,1044,1063,1064,1065,1066,1067,1111,1115,1130,1131,1173,1174,1184,1195,1196,1197],str_to_nod:1067,straight:1210,strength:[1167,1213],stride:[1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],string:[40,41,43,847,863,865,874,875,880,886,892,893,896,897,901,907,909,910,911,920,921,924,927,943,963,983,1015,1067,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191,1196,1197],structur:[40,41,42,43,921,938],structural_diff:[40,41],style:43,sub:[40,41,43,827,828,847,870,871,876,877,878,879,921,997,1063,1064,1065,1066,1067],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1067,sub_mod:[1196,1197],sub_modul:[1206,1207],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1167,1168,1198,1199,1206,1207],subsequ:43,subset:43,substr:[40,41],suffici:[1039,1044],suggest:1167,suitabl:[1032,1037],sum:[40,41,403,428,429,827,831,847,876,877,878,879,891,921,942,946,989,990,1067,1130,1131,1137],summat:[40,41,1130,1131],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,117,120,122,124,125,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,179,180,181,182,183,184,186,187,188,189,190,191,192,195,197,198,200,201,202,203,204,205,206,211,212,213,214,215,217,218,219,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,240,242,245,248,249,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,339,341,342,343,344,345,346,347,352,353,354,355,356,358,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,384,385,386,387,389,391,394,396,398,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,478,479,480,481,483,484,485,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,509,510,511,512,514,516,519,521,523,524,527,528,529,530,531,532,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,606,607,608,609,610,612,613,614,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,638,639,640,641,643,645,648,650,652,653,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,728,729,730,731,732,734,735,736,738,739,740,741,742,743,745,746,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,765,767,768,769,770,771,772,773,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,798,799,800,801,802,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,833,835,838,840,842,843,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1166,1167,1171,1172,1174,1176,1177,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1212,1213],supports_inplac:921,suppos:1213,sure:43,svd:[109,234,383,508,637,827],swap:[40,41,921,1003],swapax:[40,41,533,663,921,1213],symmetr:[1039,1045],syntax:[401,403,435,440,444,448,449,451],tab:1167,take:[43,921,972],taken:[43,827,828,1130,1132,1133,1134,1136,1138],tan:[747,1049,1052],tangent:[807,825,1049,1052,1053,1054,1061,1062,1140,1147],tanh:[88,221,362,487,616,775,807,1049,1140],target:[40,41,847,863,866,867,868,869,870,871,872,873,876,877,878,879,892,1067,1167],target_dict:[40,41],task:[43,1063,1064,1065,1066],team:[43,1213],templat:1167,temporari:[921,994,1005],tensor:[40,41,43,403,428,429,847,865,897,907,921,924,926,931,973,974,977,979,982,983,987,989,990,997,1015,1067,1123,1124,1125,1148,1156,1158,1167,1184,1192,1194,1200,1201,1202,1203,1204,1205,1209,1210],tensorflow:[43,1039,1044,1148,1150,1152,1154,1167,1184,1186,1188,1190,1210,1213],term:[40,41,43,1148,1158,1167,1184,1194],termcolor:[40,41,42],termin:[40,41,42,1067],test:[43,807,814,815,841,842,843,897,912,913],test_array_api:43,tf_concat:1167,than:[40,41,43,803,804,807,808,811,818,820,824,827,831,832,833,847,891,921,924,933,951,970,977,998,1001,1016,1022,1067,1123,1127,1167,1210],thei:[40,41,1049,1053,1063,1064,1065,1123,1124,1167,1206,1207,1210],them:[1167,1213],themselv:[1111,1112],therefor:43,thi:[40,41,42,43,807,821,827,829,834,835,847,869,873,879,886,891,896,921,924,953,985,987,993,1016,1019,1021,1022,1023,1024,1025,1030,1039,1042,1067,1111,1115,1120,1130,1132,1133,1134,1135,1136,1137,1138,1148,1157,1167,1196,1197,1200,1201,1202,1203,1204,1205,1209,1210,1213],thing:[43,1167],those:[40,41,43,827,830,921,933,1016,1030,1067],though:43,thought:43,threshold:[921,977,979],through:[40,41,43],tick:43,tickbox:43,tile:[257,533,663,921],time:[43,921,1004,1016,1019,1023,1063,1064,1065,1066,1067,1123,1124,1148,1158,1184,1195,1196,1197,1213],timeout:[40,41,42,847,856,857,921,985,993,1067],timestep:[1148,1158,1184,1193],titl:[43,1167],tmp_dir:921,tmp_dr:[921,994],to_appli:[40,41],to_clon:[847,1067],to_dev:[40,41,127,251,401,526,655,847],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[847,1067],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1167],to_ivy_modul:[196,783,1167,1173],to_json:[40,41],to_kv_fn:[1148,1159],to_kv_v:[1148,1159],to_list:[40,41,403,663,921],to_multi_dev:[40,41],to_mut:[1111,1113,1120],to_n:[15,40,41,1167],to_nod:1067,to_numpi:[40,41,403,663,921,1167,1209],to_out_fn:[1148,1159],to_out_v:[1148,1159],to_q_fn:[1148,1159],to_q_v:[1148,1159],to_raw:[40,41],to_scalar:[403,663,921],todo:[1067,1167,1168],togeth:[40,41,1206,1207],tool:[1167,1210],top_mod:[1196,1197],topic:1213,torch:[43,845,846,1167,1209,1210,1213],torch_concat:1167,torchfcmodel:1209,total:[40,41,42,847,893,1067],total_mem_on_dev:847,total_mem_on_nod:1067,tpu:[847,894,1067],tpu_is_avail:[401,526,655,847,1067],trace:[40,41,921,970],track:[43,847,1067,1111,1120,1196,1197],track_submod_call_ord:[1196,1197],track_submod_ret:[1196,1197],trail:[1198,1199],train:[1016,1018,1019,1023,1167,1168],trainabl:[1016,1022,1167,1168,1173,1174,1196,1197,1206],trainer:1167,tran:1213,transform:[1148,1156,1157],transpos:[40,41,134,257,403,663,847,878,921,1067,1148,1150,1152,1154,1184,1186,1188,1190],travers:[15,18,19,40,41,1111,1120],treat:[40,41,845,846],tri:[40,41],triangular:[797,801],trigonometr:[1049,1050,1052],tril:[77,210,351,476,605,797],trim_kei:[40,41],trust:[1016,1023,1200,1202],truth:[807,816,817,921,948,1046,1047,1048],try_else_non:921,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[847,1067],tune_dev_alloc:847,tune_dev_split:847,tune_node_alloc:1067,tune_node_split:1067,tune_step:[847,1067],tupl:[15,16,17,18,19,40,41,43,351,352,353,356,797,798,799,802,827,830,831,832,833,839,840,841,842,843,845,846,921,937,953,954,996,1014,1067,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1125,1130,1132,1133,1134,1135,1136,1137,1138],tutori:43,two:[40,41,797,801,827,828,829,830,921,924,928,940,976,1003,1039,1042],type:[15,18,40,41,42,43,59,359,360,401,402,797,798,799,800,801,802,804,805,807,808,809,810,811,812,813,814,815,816,817,818,820,821,823,824,825,827,828,831,832,833,837,838,841,842,843,847,859,860,861,862,874,875,879,891,897,901,902,903,907,908,909,910,911,912,913,920,921,922,924,927,936,938,948,951,952,954,963,970,982,983,988,1002,1012,1015,1016,1022,1027,1049,1056,1067,1167,1175,1177,1178,1180,1181,1183,1196,1197,1210],types_to_iteratively_nest:[40,41,42],uint8:[1032,1034,1038],uint8_img_to_float_img:1032,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[807,810],underwai:43,unecessari:43,unfairli:43,unif:1067,unifi:[40,41,847,876,877,878,879,891,1067,1167],uniform:[40,41,1123,1124,1126,1127,1175,1177,1178,1181,1182],uniformli:[1123,1125,1127],unify_arrai:1067,unify_it:1067,unify_nest:1067,uniniti:[797,798],union:[15,18,19,40,41,43,351,352,353,354,356,357,359,360,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,829,830,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,865,870,871,872,873,891,892,897,901,902,903,907,908,909,910,911,912,913,920,921,922,923,924,926,927,928,929,931,933,934,935,936,937,939,940,941,942,945,946,947,948,950,951,952,953,954,955,956,960,962,963,964,971,972,973,974,976,977,978,979,982,983,986,987,988,989,990,995,996,997,998,1001,1003,1004,1006,1007,1008,1009,1011,1012,1013,1014,1015,1067,1111,1112,1113,1119,1120],uniqu:[847,856,857,1063,1064,1065,1066,1067,1111,1115],unique_kwarg:1067,unit:[43,847,1049,1050,1051,1067,1140,1141,1142,1143],unitari:[827,830],unless:[921,982,1015],unlik:[847,1067],unnorm:[1123,1124],unpack:[921,1011],unrol:[1148,1158],unset:1210,unset_debug_mod:44,unset_default_devic:847,unset_default_dtyp:897,unset_default_float_dtyp:897,unset_default_int_dtyp:897,unset_framework:[59,1210],unset_with_grad:1016,unstack:[40,41,134,257,403,533,663,921],until:43,unus:[845,846],updat:[40,41,403,428,429,847,856,921,968,989,990,1016,1018,1019,1021,1023,1024,1025,1063,1064,1065,1067,1111,1116,1117,1121,1122,1148,1158,1167,1168,1173,1174,1200,1201,1202,1203,1204,1205,1210,1213],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1123,1127],upper_depth:[1196,1197],upstream:43,usabl:[1167,1213],usag:[847,891,1067],use:[40,41,42,43,451,847,856,857,882,894,921,986,999,1000,1039,1044,1067,1148,1159,1165,1166,1167,1198,1199,1210,1213],used:[40,41,43,451,827,828,847,856,886,889,890,896,897,908,921,958,959,975,989,990,991,992,1015,1016,1023,1024,1039,1042,1063,1064,1065,1066,1067,1111,1120,1184,1195,1200,1202,1203,1209,1210],used_dev:[847,856],used_mem_on_dev:847,used_mem_on_nod:1067,used_node_str:1067,used_node_strs_dict:1067,useful:[40,41,847,891,1067,1148,1157,1167,1210],user:[1167,1184,1195,1196,1197,1210,1213],uses:1167,using:[40,41,43,1016,1018,1019,1111,1114,1118,1130,1131,1148,1156,1160,1167,1184,1192,1209,1210,1213],util:[847,880,1067],utility_funct:[841,842,843],v_with_top_v_key_chain:[1196,1197],val:[40,41,403,420,421,422,921,966,967,968,991,992],valid:[841,842,843,897,902,921,999,1000,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],valid_dtyp:897,valu:[40,41,403,807,811,816,817,827,829,830,831,834,835,837,838,839,840,847,859,890,891,921,922,924,926,933,934,935,937,938,944,948,953,954,955,956,971,973,974,977,979,985,986,987,988,989,990,991,992,993,1009,1012,1013,1014,1016,1020,1023,1032,1038,1046,1047,1048,1049,1057,1058,1059,1063,1064,1065,1067,1111,1115,1116,1117,1121,1122,1123,1126,1127,1130,1132,1134,1148,1159,1160,1165,1166,1184,1195,1198,1199,1200,1202],value_is_nan:921,vanilla:[1063,1065],var_shap:1175,variabl:[15,16,17,18,19,40,41,305,435,568,727,921,930,966,967,968,969,970,1002,1016,1019,1020,1021,1022,1023,1024,1025,1027,1030,1063,1064,1065,1066,1148,1159,1165,1166,1173,1174,1175,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],variable_data:[435,727,1016],varianc:[40,41,1130,1138,1213],varieti:1210,variou:[43,1167],vector:[40,41,444,447,827,830,831,921,935,940,1039,1045,1148,1157,1184,1194],vector_norm:[40,41,109,234,383,508,637,827],vector_to_skew_symmetric_matrix:[172,314,444,577,737,1039],verbos:1212,veri:[43,1167],verifi:43,via:[1111,1112,1119,1210],view:[1032,1037],vision:1167,visual:1210,volum:[1148,1153],vw_tm1:[1016,1019,1023],wai:[1210,1213],wait:[40,41,42,43],want:[43,1167,1210,1213],warn:[59,66,67,68,69,70],warp:[440,441,1032,1033],watch:1209,websit:43,weight:[1016,1018,1019,1021,1023,1024,1025,1148,1157,1158,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1196,1197,1200,1202,1203],weight_initi:[1184,1185,1186,1187,1188,1189,1190,1191,1193,1194],weights_path:[1196,1197],well:[40,41,921,962],were:[40,41,1067],what:[43,1167],when:[40,41,42,43,827,830,847,921,932,1000,1013,1067,1167,1196,1197,1210,1213],where:[40,41,43,257,403,663,807,819,827,830,841,842,843,921,924,931,933,937,950,964,971,982,1014,1111,1112,1119,1123,1124],wherea:43,wherebi:[1111,1120],whether:[15,18,19,40,41,42,807,815,841,842,843,845,846,847,865,878,882,886,891,894,896,897,907,911,912,913,920,921,923,928,929,941,944,949,953,960,962,965,969,970,975,995,1002,1011,1012,1016,1019,1020,1021,1022,1023,1024,1025,1027,1063,1064,1065,1066,1067,1111,1112,1113,1115,1119,1120,1123,1124,1140,1141,1148,1156,1167,1173,1174,1184,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205],which:[40,41,42,43,451,797,798,799,800,801,802,803,804,805,827,828,831,832,833,834,835,837,838,839,840,841,842,843,845,846,847,856,857,865,870,871,872,873,876,877,878,879,881,883,887,889,890,891,897,902,907,911,920,921,924,927,936,938,940,941,942,944,954,955,956,957,963,964,972,973,974,981,982,983,984,986,989,990,997,1001,1011,1013,1015,1016,1019,1020,1021,1023,1024,1025,1027,1029,1030,1032,1034,1039,1042,1049,1053,1067,1111,1115,1116,1117,1121,1122,1123,1124,1125,1126,1127,1130,1132,1133,1134,1135,1136,1137,1138,1140,1145,1148,1159,1160,1167,1173,1174,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1207,1209,1210],whilst:43,whitespac:[40,41,42],who:43,whose:[797,801,807,808,809,812,813,823,825,827,828,832,833,921,927,932,1130,1131,1132,1133,1134,1136,1138],why:[1167,1168],width:[1032,1037],wiki:1213,wikipedia:1213,window:[1032,1037,1148,1149,1150,1151,1152,1153,1154,1155,1184,1185,1186,1187,1188,1189,1190,1191],wise:[40,41,807,810,816,817,821,921,933,948,951,952,977,979,988,1016,1019,1021,1023,1025,1046,1047,1048,1049,1050,1051,1052,1053,1056,1057,1058,1059,1061,1140,1141,1142,1143,1144,1145,1146,1147],wish:1210,with_bia:[1184,1194],with_cal:[921,944],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1016,1026],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1067,with_partial_v:[1196,1197],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,403,430,921,997,1067],with_to_kv_fn:[1184,1195],with_to_out_fn:[1184,1195],with_to_q_fn:[1184,1195],within:[15,18,19,43,827,830,921,924,1123,1127],without:[40,41,43,921,985,987,993,1111,1113,1210],wonder:1167,word:[15,16,17,921,924,1123,1127,1173,1174],work:[43,1209],worker:[847,856,857,1067],worker_class:[847,856,857,1067],worker_kwarg:1067,would:[43,1140,1145,1167,1210,1213],wrap:[15,40,41,42,43,401,403,435,440,444,448,449,451,921,932,1016,1030,1167],write:[40,41,43,1167,1168,1213],written:[43,1167,1213],ws_new:[1016,1019,1021,1023,1024,1025],x1_i:[807,810,816,817,921,948,1049,1056],x2_i:[807,810,816,817,921,948,1049,1056],x_feat_dim:[1148,1159],x_i:[807,808,809,811,812,813,814,815,818,820,821,823,824,825],x_in:[1167,1209],x_inv:[1039,1041],x_max:[403,921,933],x_min:[403,921,933],x_sub:1067,xkk:1213,xkkm1:1213,xkm1km1:1213,xs0:1067,xs_t:1067,year:[1167,1213],yet:[1111,1120,1213],yield:[921,1013],you:[43,1167,1209,1210,1213],your:[1167,1168,1209,1210,1213],your_awesome_project:1210,yourself:[43,1167],yourslef:43,youtub:43,zero:[40,41,77,210,351,476,605,797,798,801,807,821,827,831,841,842,843,921,937,982,989,990,1014,1015,1016,1018,1019,1023,1024,1148,1156,1167,1175,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1200,1201,1202,1203],zero_pad:[257,403,533,663,921],zeros_lik:[134,257,403,533,663,921],zip:1067,zk_e:1213},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":944,"function":[77,83,88,108,114,116,118,119,121,123,210,216,221,233,239,241,243,244,246,247,351,357,362,382,388,390,392,393,395,397,476,482,487,507,513,515,517,518,520,522,605,611,616,636,642,644,646,647,649,651,797,803,807,826,832,834,836,837,839,841],Ones:1180,Using:1210,abs:[258,534,664,922],aco:[748,1050],acosh:[89,222,363,488,617,808],activ:[194,338,462,597,775,1140,1170],adam:1201,adam_step:1018,adam_upd:1019,algebra:[109,172,234,314,383,444,508,577,637,737,827],all:[124,248,398,523,652,842],all_equ:923,all_nested_indic:1112,ani:[125,249,399,524,653,843],api:[0,43,75,208,349,474,603,795],arang:[135,259,404,535,665,924],arg_nam:925,argmax:[117,242,391,516,645,835],argmin:[136,405,536,666,926],args_to_ivi:16,args_to_n:17,argsort:[120,245,394,519,648,838],arithmet:1,arrai:[0,3,43,75,137,208,260,349,406,474,537,603,667,795,927],array_equ:[261,668,928],arrays_equ:929,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[749,1051],asinh:[90,364,489,618,809],assert_supports_inplac:930,atan2:[751,1053],atan:[750,1052],atanh:[752,1054],attribut:5,backend:[43,73],bilinear_resampl:[169,311,441,574,734,1033],binary_cross_entropi:1162,bitwis:7,bitwise_and:[91,223,365,490,619,810],broadcast_to:[262,669,931],builder:51,cache_fn:932,cast:[138,263,407,538,670,901],ceil:[92,224,366,491,620,811],choleski:[738,1040],choose_random_framework:61,citat:1167,clear_framework_stack:62,clear_mem_on_dev:[657,863],clip:[264,671,933],clip_matrix_norm:934,clip_vector_norm:935,clone:1082,clone_arrai:1083,clone_it:1084,clone_nest:1085,clonedit:1069,cloneditem:1068,clonednest:1070,closest_valid_dtyp:902,code:1213,comparison:9,compil:[265,408,672,845,846],concaten:[139,266,409,539,673,936],constant:[76,209,350,475,604,796],constant_pad:[267,540,674,937],contain:[40,41],container_typ:[675,938],content:1167,contribut:43,conv1d:[200,341,466,787,1149,1185],conv1d_transpos:[201,342,467,788,1150],conv1dtranspos:1186,conv2d:[202,343,468,599,789,1151,1187],conv2d_transpos:[203,344,469,790,1152],conv2dtranspos:1188,conv3d:[204,345,470,600,791,1153,1189],conv3d_transpos:[205,346,471,792,1154],conv3dtranspos:1190,convers:15,convert:[196,783,1173],convert_dtyp:903,copy_arrai:[676,939],copy_nest:1113,core:[126,250,400,525,654,844],cos:[93,367,492,621,812],cosh:[94,368,493,622,753,813,1055],cprint:1212,creat:43,creation:[77,210,351,476,605,797],cross:[268,677,940],cross_entropi:1163,cumprod:[140,269,410,678,941],cumsum:[679,942],current_framework:63,current_framework_str:[680,943],data:[83,87,216,220,357,361,482,486,611,615,803,806],debug_mod:45,debugg:44,default_devic:864,default_dtyp:904,default_float_dtyp:905,default_int_dtyp:906,default_nod:1086,depthwise_conv2d:[206,347,472,601,793,1155],depthwiseconv2d:1191,design:43,dev:[129,253,528,658,865],dev_clon:866,dev_clone_arrai:867,dev_clone_it:868,dev_clone_nest:869,dev_dist:870,dev_dist_arrai:871,dev_dist_it:872,dev_dist_nest:873,dev_from_str:[130,254,529,659,874],dev_to_str:[131,255,530,660,875],dev_unifi:876,dev_unify_arrai:877,dev_unify_it:878,dev_unify_nest:879,dev_util:880,devclonedit:850,devcloneditem:849,devclonednest:851,devdistit:853,devdistitem:852,devdistnest:854,devic:[20,127,251,401,526,655,847],devmapp:856,devmappermultiproc:857,diagon:[110,235,384,509,638,828],distribute_nest:1087,divid:1056,document:1167,dropout:[1156,1192],dtype:[141,270,411,541,681,897,907],dtype_bit:[142,271,412,542,682,908],dtype_from_str:[143,272,413,543,683,909],dtype_to_str:[144,273,414,544,684,910],ecosystem:52,einops_rearrang:945,einops_reduc:946,einops_repeat:947,einsum:[186,329,454,589,767,1131],elementwis:[88,221,362,487,616,807],empti:[78,211,352,477,606,798],equal:[95,369,494,623,948],erf:[450,754,1057],execute_with_gradi:[166,306,436,569,728,1020],exist:949,exp:[755,1058],expand_dim:[274,685,950],finfo:[85,218,359,484,613,804],firstlayersiren:1177,flip:[115,240,389,514,643,833],float_img_to_uint8_img:1034,floor:[275,686,951],floormod:[276,687,952],fomaml_step:1064,fork:43,fourier_encod:953,framework:59,full:[145,277,415,545,688,954],func:72,gather:[146,278,416,546,689,955],gather_nd:[147,279,417,547,690,956],geglu:1171,gelu:[339,463,776,1141,1172],gener:[22,134,257,403,533,663,921],get_all_arrays_in_memori:957,get_all_arrays_on_dev:881,get_framework:64,get_min_bas:958,get_min_denomin:959,get_num_dim:[691,960],get_referrers_recurs:961,glorotuniform:1178,gpu_is_avail:[882,1088],gradient:[24,165,305,435,568,727,1016],gradient_descent_upd:1021,gradient_imag:[170,312,442,575,735,1035],gym:53,handler:59,has_nan:962,ident:[148,280,418,548,692,963],iinfo:[86,219,360,485,614,805],imag:[26,168,310,440,573,733,1032],index_nest:1114,indices_wher:[149,281,419,693,964],initi:1175,inplac:11,inplace_arrays_support:965,inplace_decr:[150,282,420,549,694,966],inplace_incr:[151,283,421,550,695,967],inplace_upd:[152,284,422,551,696,968],inplace_variables_support:969,inv:[739,1041],invalid_dtyp:911,is_arrai:[153,285,423,552,697,970],is_float_dtyp:912,is_int_dtyp:913,is_vari:[167,307,437,570,729,1022],isfinit:[96,225,370,495,624,814],isinf:[286,553,698,971],isnan:[97,226,371,496,625,815],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,794,1209,1210,1213],ivymodul:[197,784],jax:74,keep:43,lamb:1202,lamb_upd:1023,lar:1203,lars_upd:1024,layer:[199,340,465,598,786,1148,1184],layer_norm:1166,layernorm:1199,leaky_relu:[777,1142],less:[98,227,372,497,626,816],less_equ:[99,373,498,627,817],linalg:[28,1039],linear:[109,172,234,314,383,444,508,577,637,737,827,1157,1194],linear_resampl:[154,287,424,554,699,972],linspac:[155,288,425,555,700,973],list:43,log10:[100,374,499,628,818],log1p:[101,375,500,629,819],log2:[102,376,501,630,820],log:[756,1059],logic:[30,176,319,448,581,744,1046],logical_and:[320,745,1047],logical_not:[103,228,377,502,631,821],logical_or:[321,746,1048],logspac:[156,289,426,556,701,974],loss:1161,lstm:1193,lstm_updat:1158,maml_step:1065,manipul:[114,239,388,513,642,832],map:1115,map_nest_at_index:1116,map_nest_at_indic:1117,match_kwarg:975,math:[32,177,322,449,582,747,1049],matmul:[290,557,702,976],matrix_norm:[173,315,445,578,740,1042],maximum:[703,977],mech:54,memori:55,meshgrid:[291,704,978],meta:[34,1063],method:[108,233,382,507,636,826],min:[122,396,521,650,840],minimum:[705,979],model:56,modul:[1196,1197,1209],multi:1067,multi_head_attent:1159,multi_index_nest:1118,multidevcontain:42,multidevit:860,multidevitem:859,multidevnest:861,multiheadattent:1195,multinodeit:1073,multinodeitem:1072,multinodenest:1074,multinomi:[179,324,452,584,760,1124],multiprocess:[706,980],mxnet:207,nativ:1209,neg:[104,229,378,503,632,822],nest:1111,nested_indices_wher:1119,nested_map:1120,network:1209,next:1167,node:[1067,1089],node_dist:1090,node_dist_arrai:1091,node_dist_it:1092,node_str:1093,node_to_str:1094,node_util:1095,nodedistit:1076,nodedistitem:1075,nodedistnest:1077,nodemapp:1079,nodemappermultiproc:1080,norm:[1165,1198],num_arrays_in_memori:981,num_arrays_on_dev:883,num_cpu_cor:884,num_gpu:[132,885,1096],numpi:348,nutshel:1167,one_hot:[157,427,558,707,982],ones:[79,212,353,478,607,799,983],ones_lik:[80,213,354,479,608,800],oper:[1,3,7,9,11,13],optim:[1200,1204],optimizer_upd:1025,overview:1167,percent_used_mem_on_dev:886,percent_used_mem_on_nod:1097,pinv:[316,741,1043],portabl:1213,print_all_arrays_in_memori:984,print_all_arrays_on_dev:887,profil:[128,252,402,527,656,862,1081],pull:43,queue_timeout:985,randint:[180,325,585,761,1125],random:[36,178,323,451,583,759,1123],random_crop:1036,random_norm:[181,326,586,762,1126],random_uniform:[182,327,587,763,1127],reduce_max:[187,330,455,590,768,1132],reduce_mean:[188,331,456,591,769,1133],reduce_min:[189,332,457,592,770,1134],reduce_prod:[190,333,458,593,771,1135],reduce_std:[334,1136],reduce_sum:[191,335,459,594,772,1137],reduce_var:[192,336,460,595,773,1138],reduct:[38,185,328,453,588,766,1130],reflect:13,relu:[778,1143],repeat:[292,708,986],reptile_step:1066,request:43,reshap:[709,987],robot:57,round:[293,710,988],run:1210,scaled_dot_product_attent:1160,scatter_flat:[158,294,428,559,711,989],scatter_nd:[159,295,429,560,712,990],search:[116,241,390,515,644,834],seed:[183,764,1128],sequenti:[1206,1207],set:[118,243,392,517,646,836],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:888,set_default_dtyp:914,set_default_float_dtyp:915,set_default_int_dtyp:916,set_default_nod:1098,set_exception_debug_mod:48,set_framework:65,set_min_bas:991,set_min_denomin:992,set_nest_at_index:1121,set_nest_at_indic:1122,set_queue_timeout:993,set_split_factor:[889,1099],set_tmp_dir:994,set_with_grad:1026,sgd:1205,shape:[713,995],shape_to_tupl:996,shuffl:[184,765,1129],sigmoid:[779,1144],signatur:[108,233,382,507,636,826],sin:[105,230,379,504,633,823],sinh:[757,1060],siren:1181,slodget:829,slogdet:[111,236,385,510,639],softmax:[195,464,780,1145],softplu:[781,1146],sort:[119,244,393,518,647,837],sparse_cross_entropi:1164,split:[160,296,430,561,714,997],split_factor:[890,1100],split_func_cal:[891,1101],sqrt:[106,231,380,505,634,824],squeez:[161,297,431,562,715,998],stable_divid:999,stable_pow:1000,stack:[298,716,1001],stack_imag:[171,313,443,576,736,1037],standard:43,statist:[121,246,395,520,649,839],stop_gradi:[308,438,571,730,1027],str_to_nod:1102,submodul:43,supports_inplac:1002,svd:[112,237,386,511,640,830],swapax:[563,717,1003],tan:[758,1061],tanh:[107,232,381,506,635,782,825,1062,1147],tensorflow:473,tile:[299,564,718,1004],tmp_dir:1005,to_dev:[133,256,531,661,892],to_ivi:18,to_ivy_modul:[198,785,1174],to_list:[719,1006],to_n:19,to_nod:1103,to_numpi:[720,1007],to_scalar:[721,1008],todo:43,torch:602,total_mem_on_dev:893,total_mem_on_nod:1104,tpu_is_avail:[532,662,894,1105],train:1209,trainabl:1209,transpos:[162,300,432,722,1009],tree:1167,tril:[81,214,355,480,609,801],try_else_non:1010,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,216,220,357,361,482,486,611,615,803,806],uint8_img_to_float_img:1038,unifi:1106,unify_arrai:1107,unify_it:1108,unify_nest:1109,unset_debug_mod:49,unset_default_devic:895,unset_default_dtyp:917,unset_default_float_dtyp:918,unset_default_int_dtyp:919,unset_framework:71,unset_with_grad:1028,unstack:[163,301,433,565,723,1011],updat:43,used_mem_on_dev:896,used_mem_on_nod:1110,util:[123,247,397,522,651,841],valid_dtyp:920,value_is_nan:1012,variabl:[309,439,572,731,1029],variable_data:[732,1030],vector_norm:[113,238,387,512,641,831],vector_to_skew_symmetric_matrix:[175,318,447,580,743,1045],verbos:1211,vision:58,where:[302,724,1013,1167],why:1213,with_grad:1031,wrapper:72,write:1210,your:43,zero:[82,215,356,481,610,802,1183],zero_pad:[303,566,725,1014],zeros_lik:[164,304,434,567,726,1015]}})