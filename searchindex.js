Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[849,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[394,0,0,"-"],creation_functions:[395,0,0,"-"],data_type_functions:[399,0,0,"-"],data_types:[403,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[396,2,1,""],tril:[397,2,1,""],zeros:[398,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[399,1,1,""],finfo:[401,2,1,""],iinfo:[402,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[399,3,1,""],bits:[399,3,1,""],eps:[399,3,1,""],max:[399,3,1,""],min:[399,3,1,""],smallest_normal:[399,3,1,""]},"ivy.functional.backends.numpy.core":{device:[446,0,0,"-"],general:[448,0,0,"-"],gradients:[481,0,0,"-"],image:[486,0,0,"-"],linear_algebra:[490,0,0,"-"],logic:[494,0,0,"-"],math:[495,0,0,"-"],random:[497,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[447,1,1,""],clear_mem_on_dev:[446,2,1,""],dev:[446,2,1,""],dev_from_str:[446,2,1,""],dev_to_str:[446,2,1,""],gpu_is_available:[446,2,1,""],num_gpus:[446,2,1,""],to_dev:[446,2,1,""],tpu_is_available:[446,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[447,3,1,""],start:[447,3,1,""],stop:[447,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[448,2,1,""],arange:[449,2,1,""],argmin:[450,2,1,""],array:[451,2,1,""],asarray:[448,2,1,""],astype:[448,2,1,""],cast:[452,2,1,""],clip:[448,2,1,""],compile:[453,2,1,""],concatenate:[454,2,1,""],constant_pad:[448,2,1,""],container_types:[448,2,1,""],copy_array:[448,2,1,""],cumprod:[455,2,1,""],current_framework_str:[448,2,1,""],dtype:[456,2,1,""],dtype_bits:[457,2,1,""],dtype_from_str:[458,2,1,""],dtype_to_str:[459,2,1,""],floor:[448,2,1,""],floormod:[448,2,1,""],full:[460,2,1,""],gather:[461,2,1,""],gather_nd:[462,2,1,""],get_num_dims:[448,2,1,""],identity:[463,2,1,""],indices_where:[464,2,1,""],inplace_arrays_supported:[448,2,1,""],inplace_decrement:[465,2,1,""],inplace_increment:[466,2,1,""],inplace_update:[467,2,1,""],inplace_variables_supported:[448,2,1,""],is_array:[468,2,1,""],linear_resample:[469,2,1,""],linspace:[470,2,1,""],logspace:[471,2,1,""],matmul:[448,2,1,""],meshgrid:[448,2,1,""],multiprocessing:[448,2,1,""],one_hot:[472,2,1,""],ones_like:[473,2,1,""],round:[448,2,1,""],scatter_flat:[474,2,1,""],scatter_nd:[475,2,1,""],shape:[448,2,1,""],split:[476,2,1,""],squeeze:[477,2,1,""],to_list:[448,2,1,""],to_numpy:[448,2,1,""],to_scalar:[448,2,1,""],transpose:[478,2,1,""],unstack:[479,2,1,""],where:[448,2,1,""],zero_pad:[448,2,1,""],zeros_like:[480,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[482,2,1,""],is_variable:[483,2,1,""],stop_gradient:[484,2,1,""],variable:[485,2,1,""],variable_data:[481,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[487,2,1,""],gradient_image:[488,2,1,""],stack_images:[489,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[491,2,1,""],qr:[492,2,1,""],vector_to_skew_symmetric_matrix:[493,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[496,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[498,2,1,""],randint:[497,2,1,""],random_normal:[497,2,1,""],random_uniform:[497,2,1,""],seed:[497,2,1,""],shuffle:[497,2,1,""]},"ivy.functional.ivy":{array_api:[850,0,0,"-"],core:[891,0,0,"-"],nn:[1228,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[851,0,0,"-"],creation_functions:[852,0,0,"-"],data_type_functions:[856,0,0,"-"],data_types:[859,0,0,"-"],elementwise_functions:[860,0,0,"-"],function_and_method_signatures:[874,0,0,"-"],linear_algebra:[875,0,0,"-"],manipulation_functions:[879,0,0,"-"],searching_functions:[881,0,0,"-"],set_functions:[883,0,0,"-"],sorting_functions:[884,0,0,"-"],statistical_functions:[886,0,0,"-"],utility_functions:[888,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[851,4,1,""],nan:[851,4,1,""],pi:[851,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[853,2,1,""],tril:[854,2,1,""],zeros:[855,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[857,2,1,""],iinfo:[858,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[861,2,1,""],bitwise_and:[862,2,1,""],ceil:[863,2,1,""],cos:[864,2,1,""],cosh:[865,2,1,""],isfinite:[866,2,1,""],isnan:[867,2,1,""],less:[868,2,1,""],less_equal:[869,2,1,""],log1p:[870,2,1,""],log2:[871,2,1,""],logical_not:[872,2,1,""],sqrt:[873,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[876,2,1,""],svd:[877,2,1,""],vector_norm:[878,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[880,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[882,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[885,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[887,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[889,2,1,""],any:[890,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[892,0,0,"-"],compilation:[931,0,0,"-"],device:[933,0,0,"-"],dtype:[983,0,0,"-"],general:[1007,0,0,"-"],gradients:[1103,0,0,"-"],image:[1119,0,0,"-"],linalg:[1126,0,0,"-"],logic:[1133,0,0,"-"],math:[1136,0,0,"-"],meta:[1152,0,0,"-"],multi_node:[1156,0,0,"-"],nest:[1200,0,0,"-"],random:[1212,0,0,"-"],reductions:[1219,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[893,2,1,""],builtin_add:[894,2,1,""],builtin_and:[895,2,1,""],builtin_bool:[896,2,1,""],builtin_contains:[897,2,1,""],builtin_deepcopy:[898,2,1,""],builtin_dir:[899,2,1,""],builtin_eq:[900,2,1,""],builtin_float:[901,2,1,""],builtin_floordiv:[902,2,1,""],builtin_ge:[903,2,1,""],builtin_getattr:[904,2,1,""],builtin_getattribute:[905,2,1,""],builtin_getitem:[906,2,1,""],builtin_gt:[907,2,1,""],builtin_int:[908,2,1,""],builtin_invert:[909,2,1,""],builtin_le:[910,2,1,""],builtin_lt:[911,2,1,""],builtin_mul:[912,2,1,""],builtin_ne:[913,2,1,""],builtin_neg:[914,2,1,""],builtin_or:[915,2,1,""],builtin_pos:[916,2,1,""],builtin_pow:[917,2,1,""],builtin_radd:[918,2,1,""],builtin_rand:[919,2,1,""],builtin_rfloordiv:[920,2,1,""],builtin_rmul:[921,2,1,""],builtin_ror:[922,2,1,""],builtin_rpow:[923,2,1,""],builtin_rsub:[924,2,1,""],builtin_rtruediv:[925,2,1,""],builtin_rxor:[926,2,1,""],builtin_setitem:[927,2,1,""],builtin_sub:[928,2,1,""],builtin_truediv:[929,2,1,""],builtin_xor:[930,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[932,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[933,1,1,""],DevClonedItem:[935,1,1,""],DevClonedIter:[936,1,1,""],DevClonedNest:[937,1,1,""],DevDistItem:[938,1,1,""],DevDistIter:[939,1,1,""],DevDistNest:[940,1,1,""],DevManager:[933,1,1,""],DevMapper:[942,1,1,""],DevMapperMultiProc:[943,1,1,""],MultiDev:[933,1,1,""],MultiDevItem:[945,1,1,""],MultiDevIter:[946,1,1,""],MultiDevNest:[947,1,1,""],Profiler:[948,1,1,""],clear_mem_on_dev:[949,2,1,""],default_device:[950,2,1,""],dev:[951,2,1,""],dev_clone:[952,2,1,""],dev_clone_array:[953,2,1,""],dev_clone_iter:[954,2,1,""],dev_clone_nest:[955,2,1,""],dev_dist:[956,2,1,""],dev_dist_array:[957,2,1,""],dev_dist_iter:[958,2,1,""],dev_dist_nest:[959,2,1,""],dev_from_str:[960,2,1,""],dev_to_str:[961,2,1,""],dev_unify:[962,2,1,""],dev_unify_array:[963,2,1,""],dev_unify_iter:[964,2,1,""],dev_unify_nest:[965,2,1,""],dev_util:[966,2,1,""],get_all_arrays_on_dev:[967,2,1,""],gpu_is_available:[968,2,1,""],num_arrays_on_dev:[969,2,1,""],num_cpu_cores:[970,2,1,""],num_gpus:[971,2,1,""],percent_used_mem_on_dev:[972,2,1,""],print_all_arrays_on_dev:[973,2,1,""],set_default_device:[974,2,1,""],set_split_factor:[975,2,1,""],split_factor:[976,2,1,""],split_func_call:[977,2,1,""],to_dev:[978,2,1,""],total_mem_on_dev:[979,2,1,""],tpu_is_available:[980,2,1,""],unset_default_device:[981,2,1,""],used_mem_on_dev:[982,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[933,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[933,3,1,""],da_tune_step:[933,3,1,""],dim_size:[933,3,1,""],ds_tune_step:[933,3,1,""],map:[933,3,1,""],repeated_config_check:[933,3,1,""],tune_step:[933,3,1,""],tuned:[933,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[942,3,1,""],map:[942,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[943,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[945,3,1,""],items:[945,3,1,""],keys:[945,3,1,""],shape:[945,3,1,""],values:[945,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[946,3,1,""],at_dev:[946,3,1,""],at_devs:[946,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[947,3,1,""],at_dev:[947,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[948,3,1,""],start:[948,3,1,""],stop:[948,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[983,1,1,""],DefaultFloatDtype:[983,1,1,""],DefaultIntDtype:[983,1,1,""],astype:[983,2,1,""],cast:[987,2,1,""],closest_valid_dtype:[988,2,1,""],convert_dtype:[989,2,1,""],default_dtype:[990,2,1,""],default_float_dtype:[991,2,1,""],default_int_dtype:[992,2,1,""],dtype:[993,2,1,""],dtype_bits:[994,2,1,""],dtype_from_str:[995,2,1,""],dtype_to_str:[996,2,1,""],invalid_dtype:[997,2,1,""],is_float_dtype:[998,2,1,""],is_int_dtype:[999,2,1,""],set_default_dtype:[1000,2,1,""],set_default_float_dtype:[1001,2,1,""],set_default_int_dtype:[1002,2,1,""],unset_default_dtype:[1003,2,1,""],unset_default_float_dtype:[1004,2,1,""],unset_default_int_dtype:[1005,2,1,""],valid_dtype:[1006,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1030,2,1,""],abs:[1008,2,1,""],all_equal:[1009,2,1,""],arange:[1010,2,1,""],arg_names:[1011,2,1,""],argmin:[1012,2,1,""],array:[1013,2,1,""],array_equal:[1014,2,1,""],arrays_equal:[1015,2,1,""],asarray:[1007,2,1,""],assert_supports_inplace:[1016,2,1,""],broadcast_to:[1017,2,1,""],cache_fn:[1018,2,1,""],clip:[1019,2,1,""],clip_matrix_norm:[1020,2,1,""],clip_vector_norm:[1021,2,1,""],concatenate:[1022,2,1,""],constant_pad:[1023,2,1,""],container_types:[1024,2,1,""],copy_array:[1025,2,1,""],cross:[1026,2,1,""],cumprod:[1027,2,1,""],cumsum:[1028,2,1,""],current_framework_str:[1029,2,1,""],einops_rearrange:[1031,2,1,""],einops_reduce:[1032,2,1,""],einops_repeat:[1033,2,1,""],equal:[1034,2,1,""],exists:[1035,2,1,""],expand_dims:[1036,2,1,""],floor:[1037,2,1,""],floormod:[1038,2,1,""],fourier_encode:[1039,2,1,""],full:[1040,2,1,""],gather:[1041,2,1,""],gather_nd:[1042,2,1,""],get_all_arrays_in_memory:[1043,2,1,""],get_min_base:[1044,2,1,""],get_min_denominator:[1045,2,1,""],get_num_dims:[1046,2,1,""],get_referrers_recursive:[1047,2,1,""],has_nans:[1048,2,1,""],identity:[1049,2,1,""],indices_where:[1050,2,1,""],inplace_arrays_supported:[1051,2,1,""],inplace_decrement:[1052,2,1,""],inplace_increment:[1053,2,1,""],inplace_update:[1054,2,1,""],inplace_variables_supported:[1055,2,1,""],is_array:[1056,2,1,""],isinf:[1057,2,1,""],linear_resample:[1058,2,1,""],linspace:[1059,2,1,""],logspace:[1060,2,1,""],match_kwargs:[1061,2,1,""],matmul:[1062,2,1,""],maximum:[1063,2,1,""],meshgrid:[1064,2,1,""],minimum:[1065,2,1,""],multiprocessing:[1066,2,1,""],num_arrays_in_memory:[1067,2,1,""],one_hot:[1068,2,1,""],ones:[1069,2,1,""],ones_like:[1070,2,1,""],print_all_arrays_in_memory:[1071,2,1,""],queue_timeout:[1072,2,1,""],repeat:[1073,2,1,""],reshape:[1074,2,1,""],round:[1075,2,1,""],scatter_flat:[1076,2,1,""],scatter_nd:[1077,2,1,""],set_min_base:[1078,2,1,""],set_min_denominator:[1079,2,1,""],set_queue_timeout:[1080,2,1,""],set_tmp_dir:[1081,2,1,""],shape:[1082,2,1,""],shape_to_tuple:[1083,2,1,""],split:[1084,2,1,""],squeeze:[1085,2,1,""],stable_divide:[1086,2,1,""],stable_pow:[1087,2,1,""],stack:[1088,2,1,""],supports_inplace:[1089,2,1,""],swapaxes:[1090,2,1,""],tile:[1091,2,1,""],tmp_dir:[1092,2,1,""],to_list:[1093,2,1,""],to_numpy:[1094,2,1,""],to_scalar:[1095,2,1,""],transpose:[1096,2,1,""],try_else_none:[1097,2,1,""],unstack:[1098,2,1,""],value_is_nan:[1099,2,1,""],where:[1100,2,1,""],zero_pad:[1101,2,1,""],zeros_like:[1102,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1103,1,1,""],adam_step:[1105,2,1,""],adam_update:[1106,2,1,""],execute_with_gradients:[1107,2,1,""],gradient_descent_update:[1108,2,1,""],is_variable:[1109,2,1,""],lamb_update:[1110,2,1,""],lars_update:[1111,2,1,""],optimizer_update:[1112,2,1,""],set_with_grads:[1113,2,1,""],stop_gradient:[1114,2,1,""],unset_with_grads:[1115,2,1,""],variable:[1116,2,1,""],variable_data:[1117,2,1,""],with_grads:[1118,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1103,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1120,2,1,""],float_img_to_uint8_img:[1121,2,1,""],gradient_image:[1122,2,1,""],random_crop:[1123,2,1,""],stack_images:[1124,2,1,""],uint8_img_to_float_img:[1125,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1127,2,1,""],inv:[1128,2,1,""],matrix_norm:[1129,2,1,""],pinv:[1130,2,1,""],qr:[1131,2,1,""],vector_to_skew_symmetric_matrix:[1132,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1134,2,1,""],logical_or:[1135,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1137,2,1,""],acosh:[1138,2,1,""],asin:[1139,2,1,""],atan2:[1141,2,1,""],atan:[1140,2,1,""],atanh:[1142,2,1,""],cosh:[1143,2,1,""],divide:[1144,2,1,""],erf:[1145,2,1,""],exp:[1146,2,1,""],log:[1147,2,1,""],sin:[1148,2,1,""],sinh:[1149,2,1,""],tan:[1150,2,1,""],tanh:[1151,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1153,2,1,""],maml_step:[1154,2,1,""],reptile_step:[1155,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1156,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1201,2,1,""],copy_nest:[1202,2,1,""],index_nest:[1203,2,1,""],map:[1204,2,1,""],map_nest_at_index:[1205,2,1,""],map_nest_at_indices:[1206,2,1,""],multi_index_nest:[1207,2,1,""],nested_indices_where:[1208,2,1,""],nested_map:[1209,2,1,""],set_nest_at_index:[1210,2,1,""],set_nest_at_indices:[1211,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1213,2,1,""],randint:[1214,2,1,""],random_normal:[1215,2,1,""],random_uniform:[1216,2,1,""],seed:[1217,2,1,""],shuffle:[1218,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1220,2,1,""],reduce_max:[1221,2,1,""],reduce_mean:[1222,2,1,""],reduce_min:[1223,2,1,""],reduce_prod:[1224,2,1,""],reduce_std:[1225,2,1,""],reduce_sum:[1226,2,1,""],reduce_var:[1227,2,1,""]},"ivy.functional.ivy.nn":{activations:[1229,0,0,"-"],layers:[1237,0,0,"-"],losses:[1250,0,0,"-"],norms:[1254,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1230,2,1,""],leaky_relu:[1231,2,1,""],relu:[1232,2,1,""],sigmoid:[1233,2,1,""],softmax:[1234,2,1,""],softplus:[1235,2,1,""],tanh:[1236,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1238,2,1,""],conv1d_transpose:[1239,2,1,""],conv2d:[1240,2,1,""],conv2d_transpose:[1241,2,1,""],conv3d:[1242,2,1,""],conv3d_transpose:[1243,2,1,""],depthwise_conv2d:[1244,2,1,""],dropout:[1245,2,1,""],linear:[1246,2,1,""],lstm_update:[1247,2,1,""],multi_head_attention:[1248,2,1,""],scaled_dot_product_attention:[1249,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1251,2,1,""],cross_entropy:[1252,2,1,""],sparse_cross_entropy:[1253,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1255,2,1,""]},"ivy.stateful":{activations:[1259,0,0,"-"],converters:[1262,0,0,"-"],initializers:[1264,0,0,"-"],layers:[1273,0,0,"-"],module:[1285,0,0,"-"],norms:[1287,0,0,"-"],optimizers:[1289,0,0,"-"],sequential:[1295,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1260,1,1,""],GELU:[1261,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1260,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1261,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1263,2,1,""]},"ivy.stateful.initializers":{Constant:[1264,1,1,""],FirstLayerSiren:[1266,1,1,""],GlorotUniform:[1267,1,1,""],KaimingNormal:[1264,1,1,""],Ones:[1269,1,1,""],Siren:[1270,1,1,""],Uniform:[1264,1,1,""],Zeros:[1272,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1266,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1267,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1269,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1270,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1264,3,1,""],create_variables:[1264,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1272,3,1,""]},"ivy.stateful.layers":{Conv1D:[1274,1,1,""],Conv1DTranspose:[1275,1,1,""],Conv2D:[1276,1,1,""],Conv2DTranspose:[1277,1,1,""],Conv3D:[1278,1,1,""],Conv3DTranspose:[1279,1,1,""],DepthwiseConv2D:[1280,1,1,""],Dropout:[1281,1,1,""],LSTM:[1282,1,1,""],Linear:[1283,1,1,""],MultiHeadAttention:[1284,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1279,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1281,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1282,3,1,""],get_initial_state:[1282,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1283,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1284,3,1,""]},"ivy.stateful.module":{Module:[1286,1,1,""]},"ivy.stateful.module.Module":{__init__:[1286,3,1,""],build:[1286,3,1,""],build_mode:[1286,3,1,""],built:[1286,3,1,""],check_submod_rets:[1286,3,1,""],get_mod_key:[1286,3,1,""],mod_depth:[1286,3,1,""],mod_height:[1286,3,1,""],mod_with_top_mod_key_chain:[1286,3,1,""],save_weights:[1286,3,1,""],show_mod_in_top_mod:[1286,3,1,""],show_structure:[1286,3,1,""],show_v_in_top_v:[1286,3,1,""],sub_mods:[1286,3,1,""],track_submod_call_order:[1286,3,1,""],track_submod_rets:[1286,3,1,""],v_with_top_v_key_chains:[1286,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1288,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1288,3,1,""]},"ivy.stateful.optimizers":{Adam:[1290,1,1,""],LAMB:[1291,1,1,""],LARS:[1292,1,1,""],Optimizer:[1293,1,1,""],SGD:[1294,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1290,3,1,""],set_state:[1290,3,1,""],state:[1290,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1291,3,1,""],set_state:[1291,3,1,""],state:[1291,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1292,3,1,""],set_state:[1292,3,1,""],state:[1292,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1293,3,1,""],set_state:[1293,3,1,""],step:[1293,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],state:[1294,3,1,""]},"ivy.stateful.sequential":{Sequential:[1296,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1296,3,1,""]},"ivy.verbosity":{cprint:[1301,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1300,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1289,1290,1291],"02886":1256,"100":[1156,1256,1298],"141592653589793":851,"2021":1256,"2102":1256,"360":[1136,1148,1150],"718281828459045":851,"754":[851,856,857,860,873],"999":[1103,1105,1106,1110,1289,1290,1291],"abstract":[933,948,1256,1289,1293],"boolean":[40,41,860,862,872,892,910,933,968,980,983,997,1006,1007,1009,1014,1015,1048,1050,1051,1055,1056,1057,1089,1099,1103,1109,1133,1134,1135,1152,1153,1154,1156],"break":43,"case":[15,18,19,40,41,42,43,860,861,863,864,865,871,873,933,972,979,982,1007,1010,1074,1076,1077,1126,1129,1131,1156,1200,1203,1207,1256,1273,1284,1285,1286,1289,1293,1302],"catch":[1007,1030],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,399,446,447,856,858,933,935,936,937,938,939,940,942,943,945,946,947,948,960,961,983,1007,1011,1061,1103,1117,1156,1200,1202,1209,1250,1252,1253,1256,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],"default":[15,18,19,40,41,42,43,852,853,854,855,875,876,878,879,880,881,882,884,885,886,887,888,889,890,931,932,933,942,943,950,951,955,956,957,958,959,962,963,964,965,972,975,976,977,982,983,990,991,992,993,1007,1009,1010,1012,1020,1021,1022,1023,1026,1027,1028,1039,1040,1041,1046,1048,1049,1058,1060,1061,1064,1066,1069,1072,1073,1076,1077,1080,1082,1084,1086,1087,1096,1098,1099,1103,1106,1108,1109,1110,1111,1112,1114,1118,1126,1129,1131,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1212,1213,1215,1216,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1234,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],"final":[40,41,43,1007,1039,1059,1060,1156,1273,1284,1299],"float":[40,41,42,43,851,852,853,855,856,857,860,861,863,864,865,871,873,875,878,892,910,911,917,933,942,943,966,972,975,979,982,983,991,998,1007,1010,1020,1021,1023,1039,1040,1044,1045,1060,1078,1079,1080,1086,1087,1103,1105,1106,1108,1110,1111,1112,1119,1121,1125,1136,1144,1152,1153,1154,1155,1156,1212,1215,1216,1229,1231,1237,1245,1248,1249,1250,1251,1252,1253,1254,1255,1273,1281,1284,1287,1288,1289,1290,1291,1292,1293,1294],"function":[15,40,41,43,396,397,398,401,402,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,851,853,854,855,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,882,885,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1259,1260,1261,1289,1292,1293,1294,1298,1299,1302],"import":[43,1256,1299,1302],"int":[40,41,42,43,395,396,397,398,497,852,853,854,855,856,857,858,875,876,878,879,880,881,882,884,885,886,887,888,889,890,892,910,911,917,931,932,933,955,956,957,958,959,962,963,964,965,970,971,977,983,992,994,999,1007,1012,1017,1022,1023,1027,1028,1031,1032,1033,1036,1039,1040,1041,1046,1049,1058,1059,1060,1068,1069,1073,1074,1076,1077,1082,1083,1084,1085,1088,1090,1091,1096,1098,1101,1103,1105,1106,1110,1119,1123,1124,1126,1129,1152,1153,1154,1155,1156,1200,1209,1212,1213,1214,1216,1217,1219,1221,1222,1223,1224,1225,1226,1227,1229,1234,1237,1238,1239,1240,1241,1242,1243,1244,1248,1250,1252,1253,1254,1255,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1287,1288],"long":[43,1237,1247],"new":[40,41,43,497,852,853,855,860,870,983,987,1007,1008,1017,1031,1032,1033,1036,1039,1040,1041,1042,1069,1074,1076,1077,1078,1079,1086,1087,1088,1103,1106,1108,1110,1111,1112,1119,1121,1123,1125,1136,1138,1142,1143,1149,1151,1156,1200,1210,1211,1212,1213,1254,1255,1256,1262,1263,1273,1283,1287,1288,1289,1290,1291,1292,1293,1294,1299,1302],"public":[1007,1024],"return":[15,16,17,18,19,40,41,42,43,497,852,853,854,855,860,861,862,863,864,865,866,867,868,869,871,872,873,875,876,877,878,881,882,884,885,886,887,888,889,890,892,910,911,917,931,932,933,942,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,968,969,971,972,976,977,978,979,980,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1006,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1073,1074,1075,1076,1077,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1262,1263,1273,1282,1283,1289,1293,1298,1299,1302],"short":[43,1237,1247,1256,1302],"static":[40,41,931,932],"super":1156,"true":[40,41,42,448,453,481,484,497,498,860,866,867,872,875,877,878,881,882,884,885,888,889,890,931,932,933,1007,1009,1016,1018,1035,1039,1048,1050,1099,1100,1103,1106,1108,1109,1110,1111,1112,1114,1126,1129,1152,1153,1154,1155,1156,1200,1201,1208,1212,1213,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1237,1245,1250,1251,1252,1253,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],"try":[40,41,1007,1097,1156],"var":[40,41,1152,1153,1154,1302],"while":[40,41,42,860,872,1156],AND:[860,862,888,889,1133,1134],But:1302,For:[43,860,861,863,864,865,871,873,1007,1010,1019,1088,1103,1109,1117,1126,1131,1136,1137,1256,1262,1263,1299,1302],Its:[1136,1140],NOT:[860,872],Not:851,One:[40,41,43,1007,1032,1074,1212,1214,1302],Ones:[1256,1264],PRs:43,Such:[1007,1024],That:1299,The:[15,16,17,18,19,40,41,42,43,852,854,860,861,862,863,864,865,866,867,868,869,871,872,873,875,876,877,878,879,880,884,885,888,889,890,892,910,911,917,931,932,933,942,943,949,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,972,975,976,977,978,979,982,983,987,988,989,994,995,996,997,1006,1007,1010,1013,1014,1017,1018,1020,1021,1022,1023,1025,1026,1029,1030,1034,1039,1041,1042,1049,1052,1053,1054,1056,1058,1060,1062,1064,1066,1069,1070,1073,1074,1076,1077,1078,1079,1080,1083,1084,1085,1086,1087,1088,1091,1099,1102,1103,1105,1106,1108,1110,1111,1112,1114,1117,1119,1121,1123,1125,1126,1129,1131,1136,1137,1139,1140,1144,1145,1146,1147,1148,1150,1152,1153,1154,1155,1156,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1299,1302],There:[43,1256,1299],These:[43,1256],Use:43,Used:[1200,1201,1208,1285,1286],Using:[1256,1257,1302],With:[40,41,881,882,1126,1129,1219,1221,1222,1223,1224,1225,1226,1227,1256,1298,1302],__array__:[1007,1013],__call__:[1273,1284,1285,1286],__del__:1156,__dict__:[1156,1299],__enter__:1156,__exit__:1156,__getitem__:1156,__getstate__:1156,__init__:[40,41,42,43,59,60,82,217,399,400,446,447,527,659,933,934,941,942,943,944,945,946,947,948,983,984,985,986,1103,1104,1156,1160,1167,1256,1259,1260,1261,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],__iter__:1156,__len__:1156,__next__:1156,__pow__:43,__repr__:1156,_assign_vari:1298,_axi:1156,_base:[1200,1201,1208],_compute_node_da_ratio:1156,_compute_node_strs_da:1156,_concat_unify_arrai:1156,_counter:1156,_cur_framework:[43,1156],_da_direct:1156,_da_directions_flip:1156,_da_step_tim:1156,_da_tim:1156,_da_tune_count:1156,_data:1156,_delta_da_dim_s:1156,_delta_sf:1156,_dict:1156,_dim_siz:1156,_first_da_tune_step:1156,_first_ns_tune_step:1156,_fn:1156,_forward:[1256,1298],_get_kalman_param:1302,_get_prior:1302,_get_some_model:1302,_handle_flat_arrays_in_out:43,_index:[1200,1201,1208],_input_queu:1156,_length:1156,_max_depth:1156,_max_node_dim_step_ratio:1156,_max_node_dim_step_s:1156,_max_split_factor_step_s:1156,_mean_unify_arrai:1156,_min_bas:[1007,1087,1254,1255,1287,1288],_min_denomin:[1007,1086],_min_node_dim_s:1156,_min_sf_tune_step:1156,_min_unit_node_tune_step:1156,_model:1302,_native_wrapp:43,_node_mapp:1156,_node_percent_mem:1156,_node_str:1156,_node_str_da_ratio:1156,_node_strs_da:1156,_node_strs_kei:1156,_node_strs_n:1156,_node_util:1156,_ns_step_tim:1156,_ns_time:1156,_ns_tune_count:1156,_num_nod:1156,_num_work:1156,_observed_config:1156,_output_queu:1156,_paramet:1298,_percent_mem_inc_per_sf:1156,_percent_mem_inc_per_unit_da_dim:1156,_percent_util_inc_per_unit_da_dim:1156,_ret_fn:1156,_safety_factor:1156,_save_dir:1156,_shift_da_split:1156,_shift_n:1156,_slice:1156,_step:[1289,1293],_sum_unify_arrai:1156,_timeout:1156,_tune:1156,_tune_da:1156,_tune_n:1156,_tune_step:1156,_unit_da_tune_count:1156,_unroll_step:1302,_with_node_mappig:1156,_worker:1156,_worker_class:1156,_worker_fn:1156,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,933,942,948,1156,1285,1286,1289,1293],abil:1256,abl:[40,41],about:[856,857,858],abov:[43,852,854,875,876,1212,1214],above_height:[40,41],abs:[300,448,581,714,875,878,1007,1156],absolut:[40,41,1007,1008],abstractmethod:1156,accept:[15,43,860,872,1256],access:[40,41,43,1299],accord:[40,41,856,857,1007,1023,1041,1076,1077,1096,1101],accordingli:[875,878,888,889,890],accur:[59,399,446,447,933,945,946,947,948,983,1103,1264,1266,1267,1269,1270,1272],aco:[799,1136],acosh:[799,1136],across:[40,41,933,942,943,952,953,955,956,957,958,959,965,975,976,1007,1012,1014,1015,1156,1200,1204],act:43,activ:[1230,1231,1232,1233,1234,1235,1236,1256,1260,1261],actual:1299,adam:[1103,1105,1106,1110,1256,1289,1291,1298],adam_step:1103,adam_upd:1103,adapt:[1103,1111,1289,1292],add:[40,41,43,1156,1250,1251,1252,1253,1254,1255,1256,1287,1288,1299],added:[43,1007,1086,1087,1295,1296],adding:[43,1007,1017],addit:[40,41,43,1007,1031,1032,1033,1254,1255,1273,1283],addition:43,address:43,adher:43,adjac:[1007,1010],adopt:[43,1007,1024],affect:[1007,1010],affin:[1287,1288],after:[860,873,1007,1058,1103,1106,1107,1108,1110,1111,1112,1119,1120,1254,1255,1289,1290,1291,1292,1293,1294,1302],after_1:[1007,1023,1101],after_n:[1007,1023,1101],again:43,against:[40,41,881,882,1126,1129,1219,1221,1222,1223,1224,1225,1226,1227],agnost:[43,1256,1298,1299],aim:1302,algebra:1126,algorithm:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280,1302],align:[40,41,43,1007,1017],aliv:[933,967,969,973,1007,1043,1067,1071],all:[15,16,17,18,19,40,41,43,115,242,433,560,692,852,854,875,878,879,880,888,931,932,933,942,967,973,1007,1008,1009,1014,1015,1024,1043,1049,1071,1085,1126,1131,1152,1153,1154,1155,1156,1200,1201,1202,1208,1209,1212,1213,1216,1219,1221,1222,1223,1224,1225,1226,1227,1237,1247,1256,1299,1302],all_depth:[40,41],all_equ:1007,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1200,all_tru:[40,41],alloc:[43,852,854,933,1156],allow:[1007,1059,1060,1061,1285,1286],allow_dupl:[1007,1061],alon:[933,972,982,1156,1256],along:[40,41,43,497,875,878,879,880,881,882,884,885,886,887,888,889,890,933,956,957,958,959,962,963,964,965,977,1007,1022,1027,1028,1041,1058,1059,1060,1073,1084,1088,1091,1098,1126,1129,1152,1153,1154,1155,1156,1212,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227],alongsid:[1298,1299],alpha:[1229,1231],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,860,863,933,1156],also:[40,41,43,1007,1010,1103,1106,1152,1153,1154,1155,1200,1201,1202,1208,1209,1237,1246,1256,1273,1283,1298],altern:1298,alwai:[40,41,43,1103,1109,1114],among:[40,41],amount:[933,979,1156,1256],angl:[860,865,1136,1137,1141],ani:[15,16,17,18,19,40,41,43,115,242,433,560,692,860,869,888,931,932,933,935,938,942,943,945,954,955,958,959,964,1007,1009,1010,1013,1030,1031,1032,1033,1034,1035,1048,1056,1061,1086,1087,1103,1107,1156,1200,1201,1204,1208,1209,1210,1211,1212,1216,1256,1262,1263,1285,1286,1298,1299,1302],anoth:[40,41,43,983,989,1256],another_backend:43,anyth:[43,1302],anywai:43,apart:43,api:[1256,1257],appear:[43,1007,1036],append:[40,41,875,876,1156],appli:[15,18,19,40,41,875,877,1007,1031,1032,1033,1103,1110,1111,1133,1134,1135,1152,1153,1154,1200,1204,1207,1209,1229,1230,1231,1232,1233,1234,1235,1236,1237,1246,1248,1249,1254,1255,1256,1259,1260,1261,1287,1288],applic:[1200,1204,1209,1237,1248,1249,1256,1302],appropri:[881,882],approxim:[43,860,861,864,865,870,871,892,917,1229,1230],arang:[135,300,448,497,581,714,1007,1059,1060],arbitrari:[40,41,933,962,963,965,1156],arc:[1136,1141],arcco:[1136,1137],arctan:[1136,1140],area:[860,861,1256],arg:[15,16,17,40,41,43,59,63,933,942,955,959,965,977,1007,1031,1032,1033,1077,1156,1262,1263,1285,1286],arg_nam:1007,arg_stateful_idx:[1285,1286],argmax:[108,236,426,553,685,881],argmin:[135,448,581,714,1007],args_clon:1156,args_dist:1156,args_to_ivi:[15,1256],args_to_n:[15,1256],args_uni:1156,argsort:[111,239,429,556,688,884],argument:[15,16,17,18,19,40,41,42,43,59,63,931,932,933,942,943,955,959,965,1007,1010,1011,1018,1030,1061,1077,1136,1137,1156,1200,1204,1262,1263,1285,1286],aris:[1256,1302],arithmet:[43,1219,1222,1225,1227],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:497,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,300,448,497,581,714,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,910,911,917,933,951,952,953,956,957,958,959,962,963,964,965,967,969,973,977,978,983,987,993,998,999,1007,1008,1009,1010,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1025,1026,1027,1028,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1046,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1062,1063,1064,1065,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1082,1084,1085,1088,1089,1090,1091,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1105,1106,1109,1110,1114,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1156,1200,1202,1209,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1273,1281,1282,1284,1289,1293,1298,1299],arrang:[1007,1031],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,395,396,397,398,399,401,402,851,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890],array_api_methods_to_test:43,array_builtin:[43,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930],array_equ:[300,714,1007],array_lik:[497,1007,1013],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1007],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1256],arraywithgener:[22,1256],arraywithgradi:[24,1256],arraywithimag:[26,1256],arraywithlinalg:[28,1256],arraywithlog:[30,1256],arraywithmath:[32,1256],arraywithmeta:[34,1256],arraywithrandom:[36,1256],arraywithreduct:[38,1256],arriv:[40,41,42],articl:1256,arxiv:1256,as_arrai:[40,41,1007,1046,1082],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[446,448,456,933,951,983,990,991,992,993],as_tensor:448,as_vari:[40,41],as_zero:[40,41],asarrai:[448,1007],ascend:[884,885],asin:[799,1136],asinh:[86,404,531,663,860],aspect:[1119,1124],assert:[40,41,1007,1016,1156],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1007,associ:[43,1126,1132],assum:[860,864,1299,1302],astyp:[448,983],asynchron:[40,41,42],at_dev:[40,42,933,946,947],at_kei:[40,41],at_key_chain:[40,41],at_nod:1156,atan2:[799,1136],atan:[799,1136],atanh:[799,1136],attent:[43,1237,1248,1249,1273,1284],attribut:[0,6,40,41,856,857,858,1007,1070,1102],audienc:[1256,1299],author:1256,automat:43,avail:[40,41,43,933,968,970,971,980,1007,1032,1156],averag:[1103,1105,1106,1110,1152,1153,1154,1219,1222],average_across_step:[1152,1153,1154],avoid:[43,933,1156,1299],axes:[40,41,43,448,478,490,491,875,878,879,880,881,882,886,887,888,889,890,933,977,1007,1012,1023,1036,1090,1096,1101,1126,1129,1156,1219,1221,1222,1223,1224,1225,1226,1227],axes_length:[40,41,1007,1031,1032,1033],axi:[40,41,448,450,454,455,461,469,470,471,476,477,479,875,876,878,879,880,881,882,884,885,886,887,888,889,890,933,935,938,945,956,957,958,959,962,963,964,965,977,1007,1012,1022,1023,1026,1027,1028,1036,1041,1058,1059,1060,1073,1084,1085,1088,1090,1091,1098,1101,1156,1212,1218,1219,1221,1222,1223,1224,1225,1226,1227,1229,1234,1250,1252,1253],axis0:[40,41,1007,1090],axis1:[40,41,875,876,1007,1090],axis2:[875,876],back:[43,1285,1286,1289,1293],backend:[15,17,19,40,41,395,396,397,398,399,401,402,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,495,496,497,498,933,968,971,980,983,989,997,1006,1007,1051,1055,1103,1106,1108,1110,1111,1112,1117,1156,1256,1257,1262,1263,1289,1290,1291,1292,1293,1294,1298,1299,1302],backend_nam:43,background:[1256,1299],backprop:1302,backward:[888,889,890,1298],band:[1007,1039],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,399,446,447,448,471,860,870,871,892,917,933,935,936,937,938,939,940,942,943,945,946,947,948,983,1007,1044,1060,1078,1087,1103,1156,1219,1220,1256,1259,1260,1261,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1302],basi:43,batch:[40,41,875,877,878,933,975,976,1007,1039,1049,1119,1123,1152,1153,1154,1155,1156,1237,1246,1254,1255,1287,1288],batch_shap:[448,463,1007,1049,1068,1119,1120,1121,1122,1123,1124,1125,1126,1132,1212,1213,1237,1247,1248,1249,1273,1282],batch_siz:[497,498,1156,1212,1213,1237,1238,1239,1240,1241,1242,1243,1244],bayesian:1302,becaus:[43,1007,1010],becom:[43,1007,1019,1136,1141,1302],been:[1007,1031,1032,1033,1212,1213],befor:[40,41,43,933,977,1152,1153,1154,1156,1200,1209,1219,1221,1222,1223,1224,1225,1226,1227,1237,1248,1249,1302],before_1:[1007,1023,1101],before_n:[1007,1023,1101],begin:[1200,1201,1208,1299],behaviour:[43,1302],behind:[1103,1106,1108,1110,1111,1112,1256],being:[40,41,43,1007,1010,1072,1080,1156],believ:43,belong:[40,41],below:[43,852,854,875,876,1256,1299,1302],below_depth:[40,41],benefit:1256,bernoul:[1237,1245,1273,1281],best:[43,1007,1061,1256],beta1:[1103,1105,1106,1110,1289,1290,1291],beta2:[1103,1105,1106,1110,1289,1290,1291],beta:[1254,1255],between:[40,41,42,856,857,1007,1010,1126,1131,1200,1204,1212,1214,1250,1252,1253,1289,1291],bia:[1237,1246,1247,1273,1274,1275,1276,1277,1278,1279,1280,1283],bias_initi:[1273,1274,1275,1276,1277,1278,1279,1280,1283],bilinear:[1119,1120],bilinear_resampl:[170,354,486,622,785,1119],bilinearli:[1119,1120],binari:[860,862,1250,1251],binary_cross_entropi:1250,bit:[399,856,857,858,983,994,1119,1121,1125,1256],bitwis:[860,862],bitwise_and:[86,221,404,531,663,860],bitwise_oper:[0,7,8],block:[1256,1299],bool:[15,18,19,40,41,42,43,860,866,867,868,869,872,875,877,878,881,882,884,885,886,887,888,889,890,892,911,931,932,933,951,964,968,972,977,980,982,983,993,1007,1009,1014,1015,1027,1030,1034,1035,1039,1046,1048,1056,1061,1082,1084,1098,1099,1100,1103,1106,1107,1108,1109,1110,1111,1112,1114,1126,1129,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1212,1213,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1237,1245,1262,1263,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],both:[43,1007,1026],bottom:1256,boundari:[40,41,1212,1216],branch:[43,931,932],brittl:43,broadcast:[40,41,43,860,862,868,869,875,878,881,882,888,889,890,892,910,911,917,1007,1017,1034,1063,1064,1065,1073,1126,1129,1136,1141,1144,1219,1221,1222,1223,1224,1225,1226,1227],broadcast_to:[300,714,1007],build:[1156,1256,1273,1284,1285,1286],build_mod:[1273,1284,1285,1286],builder:[43,1256],built:[933,1007,1010,1156,1273,1284,1285,1286],builtin:43,builtin_ab:[255,892],builtin_add:[255,892],builtin_and:[255,892],builtin_bool:[255,892],builtin_contain:[255,892],builtin_deepcopi:[255,892],builtin_dir:[255,892],builtin_eq:[255,892],builtin_float:[255,892],builtin_floordiv:[255,892],builtin_g:[255,892],builtin_getattr:[255,892],builtin_getattribut:[255,892],builtin_getitem:[255,892],builtin_gt:[255,892],builtin_int:[255,892],builtin_invert:[255,892],builtin_l:[255,892],builtin_lt:[255,569,701,892],builtin_mul:[255,892],builtin_n:[255,892],builtin_neg:[255,892],builtin_or:[255,892],builtin_po:[255,892],builtin_pow:[43,255,892],builtin_radd:[255,892],builtin_rand:[255,892],builtin_rfloordiv:[255,892],builtin_rmul:[255,892],builtin_ror:[255,892],builtin_rpow:[255,892],builtin_rsub:[255,892],builtin_rtruediv:[255,892],builtin_rxor:[255,892],builtin_setitem:[255,892],builtin_some_op:43,builtin_sub:[255,892],builtin_truediv:[255,892],builtin_xor:[255,892],busi:43,bypass:1299,cach:[933,949,1007,1018],cache_fn:1007,calcul:[40,41,42,43,860,861,864,865,870,871,873,892,910,917,1136,1144],call:[43,933,977,1007,1072,1080,1097,1103,1107,1156,1200,1201,1204,1208,1273,1284,1285,1286,1289,1293,1299,1302],callabl:[40,41,931,932,933,942,943,977,1007,1018,1030,1032,1061,1097,1152,1153,1154,1155,1156,1200,1204,1205,1206,1208,1209,1237,1248],can:[43,933,975,976,977,1007,1074,1119,1121,1156,1256,1298,1299,1302],cancel_join_thread:1156,cannot:43,captur:1256,cast:[40,41,135,300,448,581,714,983,1007,1022,1119,1121,1125],catch_except:[1007,1030],categori:43,caus:43,ceil:[86,221,404,531,663,860,1007,1010],cell:[1237,1247,1273,1282],certain:[40,41,1007,1010,1059,1060],chain:[40,41,1152,1153,1154,1295,1296],chang:[43,933,1007,1074,1156,1200,1202,1209,1256,1298],channel:[1007,1039,1119,1121,1122,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],check:[15,16,17,18,19,40,41,43,933,972,982,983,988,997,1006,1007,1016,1035,1048,1056,1089,1099,1103,1109,1156,1200,1201,1208,1256,1299],check_nest:[1200,1208],check_shap:[40,41],check_submod_ret:[1285,1286],check_typ:[40,41],choic:[1256,1299],choleski:[789,1126],choos:[860,872,1007,1100,1126,1131,1136,1141,1256],choose_random_framework:59,chosen:[40,41,1007,1010,1100],chunk:[933,975,976,977,1156],chunk_siz:[933,977,1156],circl:[1136,1137,1139],clark:1256,clear:[43,933,949,1156],clear_framework_stack:59,clear_mem_on_dev:[446,706,933],click:1256,clip:[40,41,300,448,714,1007,1020,1021,1063,1065,1256],clip_matrix_norm:1007,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1007],clipped_delta:1156,clone:[40,41,933,952,953,954,955,1156],clone_arrai:1156,clone_it:1156,clone_nest:1156,clonedit:1156,cloneditem:1156,clonednest:1156,close:[43,1119,1124,1136,1139,1156,1302],closest:[860,863,983,988],closest_valid_dtyp:983,code:[40,41,42,43,497,1256,1257,1298,1299],codebas:[933,975,976,1156,1256,1299,1302],codomain:[860,861,864,865,871,873],colab:1256,collect:[15,40,41,446,448,481,486,490,494,495,497,892,931,933,983,1007,1103,1119,1126,1133,1136,1156,1200,1212,1219,1229,1237,1250,1254,1259,1273,1287,1289],color:[40,41,42,1300,1301],column:[1007,1049],combin:[40,41,42,1119,1124,1256,1302],combined_batch_s:1156,come:1299,command:1256,comment:43,commit:1302,common:[40,41,43,1136,1141],common_key_chain:[40,41],commun:[43,1256,1299],communuti:43,compar:[40,41,884,885,892,910,1007,1009,1014,1015],comparison_oper:[0,9,10],compat:[43,860,862,868,869,875,878,888,889,890,892,910,911,917,1007,1034,1074,1136,1144,1256,1302],compil:[300,448,714,1285,1286,1289,1290,1291,1292,1293,1294],compile_on_next_step:[1285,1286,1289,1290,1291,1292,1293,1294],complet:[40,41,43,1126,1131,1156],complex:[1299,1302],compliant:[860,872],compon:[1007,1026],composit:43,comput:[40,41,860,862,868,869,872,875,878,886,887,892,911,933,977,1007,1020,1021,1027,1028,1034,1062,1103,1105,1106,1107,1108,1110,1111,1112,1114,1116,1119,1122,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1139,1140,1141,1145,1146,1147,1148,1150,1200,1204,1219,1220,1221,1222,1223,1224,1225,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1246,1248,1250,1251,1252,1253],concat:[40,41,933,962,963,964,965,977,1007,1039,1156],concaten:[40,41,135,300,448,581,714,1007,1039,1156,1256],concatten:[40,41,933,962,963,964,965,977,1156],condit:[448,931,932,1007,1100,1200,1208],conditon:[1200,1208],config:[40,41,1156],config_list:1156,configur:[40,41],conflict:43,conform:43,conjunct:1299,connect:[1273,1283,1284],consid:[40,41,860,872,1126,1131,1298,1302],consist:[40,41,933,965,1156,1219,1220,1285,1286,1299],constant:[933,942,943,1007,1023,1156,1200,1204,1250,1251,1252,1253,1254,1255,1264,1265,1269,1272,1285,1286,1287,1288,1299],constant_kwarg:1156,constant_pad:[300,448,581,714,1007],constitu:[40,41],construct:[1007,1091,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],constructor:[40,41,42,1007,1011,1295,1296],consum:[933,1156],cont_feat_dim:[1237,1248],contaienr:[40,41],contain:[15,18,19,42,43,852,853,854,855,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,886,887,888,889,890,892,910,911,917,933,952,956,977,983,987,1007,1008,1012,1019,1020,1021,1024,1034,1048,1063,1065,1075,1086,1087,1103,1105,1106,1108,1110,1111,1112,1136,1144,1152,1153,1154,1155,1156,1212,1213,1219,1221,1222,1223,1225,1227,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[448,714,1007],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[448,1007,1066,1237,1248,1273,1284],context_dim:[1273,1284],contextmanag:[59,60],continu:[43,1156,1299],contract:[40,41,1219,1220],contribut:[1256,1257],contributor:[43,1256],control:1256,conv1d:[201,384,511,841,1237,1256,1273],conv1d_transpos:[201,384,511,841,1237],conv1dtranspos:[1256,1273],conv2d:[201,384,511,647,841,1237,1256,1273],conv2d_transpos:[201,384,511,841,1237],conv2dtranspos:[1256,1273],conv3d:[201,384,511,647,841,1237,1256,1273],conv3d_transpos:[201,384,511,841,1237],conv3dtranspos:[1256,1273],convent:[40,41,1219,1220],conver:[933,949,960,972,979,982,1156],convers:[16,17,18,19,40,41,1156,1256],convert:[15,16,17,18,19,40,41,43,933,960,961,983,989,995,996,1007,1083,1094,1095,1119,1121,1125,1126,1132,1156,1200,1202,1209,1256,1263],convert_dtyp:983,convolut:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],cool:43,cooler:43,coordin:[1007,1064,1136,1137,1139,1141],copi:[40,41,43,497,1007,1025,1156,1200,1202],copy_arrai:[448,714,1007],copy_nest:1200,core:[446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,495,496,497,498,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1256],corner:43,correct:[43,1256,1299],correctli:[40,41,43,881,882,1126,1129,1136,1141,1219,1221,1222,1223,1224,1225,1226,1227],correspond:[40,41,43,892,917,1007,1022,1212,1213],cos:[86,404,531,663,860,1007,1039,1136,1137,1150,1299],cosh:[86,404,531,663,799,860,1136],cosin:[860,864,865,1136,1137,1138,1143],cost:[1103,1105,1106,1108,1110,1111,1112,1152,1153,1154,1155],cost_fn:[1152,1155],could:1302,count:[40,41,879,880,888,889,890,1156,1219,1224,1226],cours:43,cprint:1300,cpu:[40,41,43,933,970,972,978,979,982,1007,1010,1013,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1102,1156,1212,1213,1214,1215,1216,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1298,1299],creat:[40,41,852,853,855,933,942,943,1007,1010,1013,1040,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1093,1102,1103,1116,1156,1212,1213,1214,1215,1216,1256,1257,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1302],create_if_abs:[40,41],create_vari:1264,creation:[40,41,42,43],creation_funct:[395,396,397,398,852,853,854,855],crop:[1119,1123],crop_siz:[1119,1123],cross:[300,714,1007,1250,1251,1252,1253],cross_entropi:1250,cuda:[40,41,933,942,961,978,1007,1010,1013,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1102,1156,1212,1213,1214,1215,1216,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],cumprod:[135,300,448,714,1007],cumsum:[714,1007],cumul:[1007,1027,1028],current:[40,41,42,43,933,942,966,967,969,973,983,989,997,1006,1007,1029,1043,1051,1055,1067,1071,1156,1200,1201,1208,1256,1302],current_framework:59,current_framework_str:[448,714,1007,1156],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1237,1238,1239,1240,1241,1242,1243],d_out:[1237,1238,1239,1240,1241,1242,1243],da_can_termin:1156,da_dim_s:[933,1156],da_direct:1156,da_tune_step:[933,1156],dai:1302,daniel:1256,data:[40,41,42,43,852,853,854,855,857,858,860,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,884,885,888,889,890,892,910,911,917,933,935,936,937,938,939,940,945,946,947,961,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1010,1013,1034,1040,1049,1056,1069,1070,1074,1085,1089,1102,1103,1109,1117,1136,1144,1156,1237,1246,1256],data_format:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],data_type_funct:[399,401,402,856,857,858],dataset:[40,41],datatyp:[40,41,983,988,998,999],dcdw:[1103,1105,1106,1108,1110,1111],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1103,1110,1111,1289,1291,1292],decay_lambda:[1103,1110,1111,1289,1291,1292],decid:[40,41,1302],decompos:[1126,1127,1131],decomposit:[875,877,1126,1127,1131],decor:43,decrement:[1007,1052],dedic:[1103,1117,1262,1263],deep:[40,41,1256],deep_copi:[40,41],deeper:[933,955,959,965,1156,1200,1209,1256],deepli:[1200,1202],def:[43,60,82,217,400,527,659,934,941,944,984,985,986,1104,1156,1160,1167,1256,1265,1268,1271,1298,1299,1302],default_dev:43,default_devic:933,default_dtyp:[43,983],default_float_dtyp:983,default_int_dtyp:983,default_key_color:[40,41,42],default_nod:1156,default_rng:497,default_v:[1007,1030],defaultdevic:[933,934],defaultdtyp:[983,984],defaultfloatdtyp:[983,985],defaultintdtyp:[983,986],defer:43,defin:[43,1007,1026,1068,1070,1102,1212,1214],definit:43,degre:[1136,1148,1150],del:1156,delai:43,delet:43,delta:[1103,1105,1156],delta_dim_s:1156,delta_percent_mem:1156,delta_sf:1156,delta_util:1156,demo:1256,denomin:[1007,1038,1045,1079,1086,1087,1254,1255,1287,1288],denot:43,dens:[1273,1283],depend:[43,860,861,864,865,870,871,875,877,884,885,892,917,1007,1100,1256],depth:[40,41,448,472,933,955,959,965,1007,1047,1068,1156,1200,1209,1285,1286],depth_cutoff:[40,41],depthwis:[1237,1244,1273,1280],depthwise_conv2d:[201,384,511,647,841,1237],depthwiseconv2d:[1256,1273],deriv:[1103,1105,1106,1108,1110,1111,1112,1200,1202,1209,1256,1285,1289,1293,1295],descend:[875,877,884,885],descent:[1103,1108,1289,1294],describ:[40,41,1219,1220],descript:[875,878],design:[1256,1257],desir:[40,41,933,978,983,987,1007,1010,1013,1049,1050,1069,1070,1102,1119,1124,1156,1219,1221,1222,1223,1225,1227],desired_aspect_ratio:[486,489,1119,1124],desired_percent_increas:1156,detail:1302,detect:[40,41,1200,1201,1208],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,860,861,862,864,865,866,867,871,873,875,876,878,888,889,890,892,917,933,968,970,971,980,983,987,988,994,997,998,999,1006,1007,1009,1010,1013,1014,1015,1048,1051,1055,1056,1089,1099,1103,1109,1136,1144,1152,1153,1154,1155,1156,1237,1248],dev:[40,41,42,43,128,294,446,448,449,451,461,462,463,470,471,472,473,474,475,480,497,498,574,706,933,936,937,939,940,942,943,946,947,949,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,972,973,974,975,976,977,978,979,982,1007,1010,1013,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1102,1103,1118,1212,1213,1214,1215,1216,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],dev_clon:[40,41,933],dev_clone_arrai:933,dev_clone_it:933,dev_clone_nest:933,dev_dist:[40,41,933],dev_dist_arrai:933,dev_dist_it:933,dev_dist_nest:933,dev_from_str:[43,128,294,446,574,706,933],dev_mapp:933,dev_str:[40,41],dev_to_str:[128,294,446,574,706,933],dev_unifi:933,dev_unify_arrai:933,dev_unify_it:933,dev_unify_nest:933,dev_util:933,devclonedit:933,devcloneditem:933,devclonednest:933,devdistit:933,devdistitem:933,devdistnest:933,develop:[43,1256,1299,1302],deviat:[40,41,1212,1215,1219,1225,1254,1255,1287,1288],devic:[21,40,41,43,395,396,398,447,448,460,852,853,854,855,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,1007,1010,1013,1040,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1102,1103,1118,1212,1213,1214,1215,1216,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296],devmanag:[933,941],devmapp:[933,943],devmappermultiproc:933,diag:[875,877],diagon:[102,230,420,547,679,852,854,875,1007,1049],dict:[15,16,17,18,19,40,41,42,933,935,938,942,943,945,955,956,957,958,959,1007,1031,1032,1033,1061,1152,1153,1154,1156,1200,1202,1203,1204,1207,1209,1262,1263],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,856,857,933,952,953,956,957,1126,1131,1156,1237,1246,1256,1299,1302],differenti:[1256,1299],dilat:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],dim:[40,41,43,875,877,1007,1068,1119,1120,1124,1156,1273,1284],dim_siz:[40,41,933,1156],dimens:[40,41,42,852,854,875,876,877,878,879,880,881,882,888,889,890,933,964,1007,1017,1022,1026,1031,1032,1033,1036,1039,1046,1058,1068,1073,1074,1084,1085,1088,1096,1098,1119,1123,1126,1129,1152,1153,1154,1155,1156,1212,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1234,1237,1238,1239,1240,1241,1242,1243,1244,1247,1250,1252,1253,1273,1274,1275,1276,1277,1278,1279,1280,1283,1284],dimension:[40,41,497,875,877,878,888,889,890,1007,1084,1085],direct:1156,directli:[43,1200,1209,1299,1302],directori:[1007,1081,1092],discord:43,discret:[1250,1252],discuss:43,disk:[40,41,1119,1121],distanc:[1007,1010],distribut:[40,41,933,952,956,957,958,959,1156,1212,1213,1214,1215,1216,1237,1245,1273,1281,1285,1286],distribute_nest:1156,distributedarrai:[40,41],distrubt:[1250,1252],dive:[1256,1299],divid:[40,41,1007,1084,1086,1136],dividend:[1136,1144],divis:[1007,1038,1045,1079,1086,1087,1103,1105,1106,1110,1136,1144,1289,1290,1291],divisor:[1103,1105,1106,1110,1136,1144,1289,1290,1291],doc:1256,docstr:43,document:43,doe:[40,41,43,1007,1010,1084,1298],doesn:[1126,1131,1256],doing:43,domain:[860,861,864,865,871,873,1136,1137],don:[43,1256],done:43,door:1302,dot:[1126,1128,1237,1248,1249,1273,1284],down:1298,downscal:[1007,1020,1021],drag:[1256,1302],draw:[1212,1213,1215,1216],drawn:[1212,1213,1214,1215,1216],drop:[1256,1302],dropout:[1237,1256,1273,1284],dropout_r:[1273,1284],ds_tune_step:933,dtype:[40,41,43,135,300,395,396,398,399,401,402,448,449,451,452,460,463,473,480,581,714,852,853,855,856,857,858,881,882,987,988,989,990,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1010,1013,1040,1049,1068,1069,1070,1102],dtype_bit:[135,300,448,581,714,983],dtype_from_str:[43,135,300,448,581,714,983],dtype_in:[448,457,458,459,983,989,994,995,996,997,998,999,1006],dtype_to_str:[135,300,448,581,714,983],duplic:[40,41,43],dure:[40,41,43,931,932,1007,1097,1103,1105,1106,1110,1152,1153,1154,1155,1285,1286,1289,1290,1291,1293],dynam:[43,448,453,931,932],each:[40,41,42,43,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,877,892,911,917,933,942,943,952,953,954,955,956,957,958,964,976,977,1007,1008,1009,1023,1034,1073,1084,1088,1091,1101,1103,1106,1108,1110,1111,1112,1119,1122,1136,1139,1144,1146,1147,1156,1200,1204,1212,1213,1219,1220,1237,1238,1239,1240,1241,1242,1243,1244,1245,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1299],eager:1299,easi:1302,easili:1256,econom:1302,ecosystem:1256,edg:[1007,1019,1023,1101],effect:[1103,1112],effective_grad:[1103,1112],effici:1302,einop:[40,41,1007,1031,1032,1033],einops_rearrang:[40,41,1007],einops_reduc:[40,41,1007],einops_repeat:[40,41,1007],einstein:[40,41,1219,1220],einsum:[40,41,187,372,499,637,821,1219],either:[40,41,43,860,871,1007,1030,1061,1064,1066,1152,1153,1154,1155,1156,1273,1284,1285,1286,1299],eleg:1156,element:[40,41,43,497,852,854,860,861,862,863,864,865,866,867,868,869,870,871,872,873,879,880,886,887,888,889,890,892,910,911,917,933,954,958,964,983,987,1007,1008,1010,1012,1014,1015,1019,1020,1021,1027,1028,1034,1037,1038,1049,1050,1063,1065,1073,1075,1084,1095,1100,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1156,1219,1220,1222,1224,1226,1229,1230,1231,1232,1233,1234,1235,1236,1237,1245,1273,1281],elementwis:[40,41,892,910],elementwise_affin:[1287,1288],elementwise_funct:[860,861,862,863,864,865,866,867,868,869,870,871,872,873],elemtn:[1212,1213],elif:1156,els:[43,1007,1016,1030,1035,1156],elsewher:[1007,1100],emphas:1256,empti:[40,41,888,889,890,1126,1131,1156],enabl:[40,41,42,43,1256],encapsul:[856,858],encod:[1007,1039,1119,1121],end:[1007,1010,1256,1299],engag:43,ensur:43,entir:[40,41,888,889,890,933,977,1156,1256,1273,1282],entri:[40,41,1007,1059,1060,1084,1085],entropi:[1250,1251,1252,1253],enumer:1156,environ:1256,eps:[399,856,857],epsilon:[1103,1105,1106,1110,1250,1251,1252,1253,1254,1255,1287,1288,1289,1290,1291],equal:[40,41,86,404,531,663,860,866,875,876,884,885,1007,1009,1014,1015,1023,1084,1101,1136,1148,1150,1212,1216],equality_matrix:[1007,1009],equat:[40,41,1219,1220],equival:[860,872,875,878,1007,1010,1136,1150],erf:[495,799,1136],error:[40,41,43,933,1007,1085,1136,1145,1156,1229,1230,1285,1286,1289,1293],essenti:43,etc:[40,41,43,933,978,1007,1010,1013,1041,1042,1049,1059,1060,1068,1069,1070,1076,1077,1102,1156,1212,1213,1214,1215,1216,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1302],euclidean:[875,878],euler:851,evalu:[40,41,860,870,871,888,889,890,1007,1064,1200,1201,1208],even:[43,1302],evenli:[40,41,1007,1010,1059,1060,1084],everi:[43,1007,1009,1302],exact:[40,41],exampl:[43,931,932,1007,1019,1088,1126,1131,1256,1298,1299,1302],example_input:[448,453,931,932],exc_tb:1156,exc_typ:1156,exc_val:1156,exce:[1007,1065],except:[40,41,44,47,888,889,890,1007,1010,1016,1022,1030,1097,1156],excess_s:1156,excit:[1256,1299],exclud:[59,61,1007,1010,1212,1216],exclus:[40,41,448,455,468,481,483,1007,1027,1056,1103,1109,1212,1214],execut:[43,1007,1097,1299],execute_with_gradi:[167,349,481,617,779,1103,1256,1298],exist:[40,41,1007,1030,1156,1256,1289,1293,1302],exp:[799,1136],expand:[40,41,1007,1036,1039],expand_dim:[40,41,300,714,1007,1156],expect:[1007,1011],explain:[43,1299],explicitli:[43,1273,1282,1284,1285,1286,1299],expon:[43,892,917,1007,1087],exponenti:[43,892,917,1136,1145,1146],expos:[1007,1013,1024],express:[860,864,1007,1064],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1103,1107],eye:[1126,1128],fabian:1256,fabio:1256,factor:[875,877,933,942,975,976,977,1103,1105,1106,1110,1111,1156,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280,1289,1290,1291,1292],fail:43,falck:1256,fall:[1285,1286,1289,1293],fallback_to_non_compil:[1285,1286,1289,1293],fals:[15,18,19,40,41,42,59,66,67,68,69,70,446,448,455,456,468,476,479,481,482,483,490,491,860,866,867,872,875,878,881,882,884,885,886,887,888,889,890,933,951,964,972,977,982,983,990,991,992,993,1007,1009,1027,1030,1035,1039,1046,1056,1061,1082,1084,1098,1100,1103,1106,1107,1108,1109,1110,1111,1112,1126,1129,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1219,1221,1222,1223,1224,1225,1226,1227,1262,1263,1285,1286,1289,1290,1291,1292,1293,1294],fan_in:1264,fan_mod:1264,fan_out:1264,far:[1200,1201,1208,1298],faster:[931,932],favourit:[1256,1298],feasibl:1302,feat_dim:[1237,1248,1249],fed:[933,977,1156],feed:[933,977,1156],few:43,field:1302,file:[40,41,43,1007,1081,1092,1285,1286],filepath:[40,41],fill:[40,41,852,853,855,1007,1040,1069,1212,1214],fill_valu:[448,460,1007,1040],filter:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280,1302],filter_s:[1273,1274,1275],filter_shap:[1273,1276,1277,1278,1279,1280],find:[40,41,43,1302],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,216,217,399,400,526,527,658,659,856],finish:[1256,1302],finit:[860,866],first:[40,41,43,497,860,862,868,869,875,876,877,892,910,931,932,933,964,1007,1014,1022,1026,1034,1059,1060,1088,1090,1103,1107,1152,1153,1154,1155,1156,1200,1201,1208,1212,1218,1219,1224,1226,1273,1284,1285,1286,1289,1293,1299,1302],firstlayersiren:[1256,1264],firstli:[1299,1302],fist:[933,977,1156],fit:[40,41,446,448,481,486,490,494,495,497,1007,1073,1119,1124],fix:43,fkt:1302,flag:[40,41,43,1103,1109],flat:[40,41,43,1007,1073,1076],flat_list:[40,41],flatten:[40,41,875,878,881,882,1007,1039,1073,1219,1221,1222,1223,1225,1227],flatten_key_chain:[40,41,1285,1286],flexibl:[1256,1299],flip:[40,41,106,234,424,551,683,879],float32:[43,448,463,983,987,995,996,1007,1010,1013,1049,1069,1070,1102],float_dtyp:[983,991,1001],float_img_to_uint8_img:1119,floor:[300,448,714,1007,1038,1156],floormod:[300,448,714,1007],fluid:1302,folder:[43,1256],follow:[40,41,43,856,858,875,878,933,977,1007,1052,1053,1054,1086,1087,1103,1106,1108,1110,1111,1112,1156,1200,1204,1209,1237,1248,1249,1256,1273,1283,1289,1293],followng:[856,857],fomaml_step:1152,forget:[1103,1105,1106,1110,1289,1290,1291],fork:[1007,1066,1256,1257],forkserv:[1007,1066,1156],form:[15,16,17,18,19,40,41,852,854,875,876,1007,1013,1103,1106,1108,1110,1111,1112,1200,1202,1209,1237],format:[40,41,43,933,951,983,987,989,993,1007,1010,1013,1049,1069,1070,1102,1156,1219,1220,1256,1298,1299],format_fn:[40,41],format_key_chain:[40,41],forward:[1285,1286,1289,1293,1298],found:[40,41,42],fourier:[1007,1039],fourier_encod:1007,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,107,109,112,114,116,117,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,217,218,219,222,223,224,225,226,227,228,231,232,233,235,237,240,243,244,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,355,356,357,359,360,361,362,364,365,368,369,370,371,373,374,375,376,377,378,379,380,383,385,386,387,388,389,390,391,396,397,398,400,401,402,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,423,425,427,430,432,434,435,447,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,487,488,489,491,492,493,496,498,500,501,502,503,504,505,506,509,510,512,513,514,515,516,517,518,523,524,525,527,528,529,532,533,534,535,536,537,538,539,540,541,542,543,544,545,548,549,550,552,554,557,559,561,562,570,575,576,577,578,579,580,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,618,619,620,621,623,624,625,627,628,629,633,634,635,636,638,639,640,641,642,643,644,648,649,650,655,656,657,659,660,661,664,665,666,667,668,669,670,671,672,673,674,675,676,677,680,681,682,684,686,689,691,693,694,702,707,708,709,710,711,712,713,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,780,781,782,783,784,786,787,788,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,822,823,824,825,826,827,828,831,832,833,834,835,836,837,839,840,842,843,844,845,846,847,848,853,854,855,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,876,877,878,880,882,885,886,887,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1252,1253,1255,1256,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299,1301,1302],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1156,framewrk:[1007,1066],free:43,freed:43,freeli:43,frequenc:[1007,1039],from:[40,41,42,43,860,873,875,876,879,880,886,887,888,889,890,933,942,943,977,983,989,1007,1030,1041,1042,1049,1074,1085,1093,1100,1103,1106,1110,1119,1123,1126,1131,1152,1153,1154,1155,1156,1200,1202,1209,1212,1213,1214,1215,1216,1219,1224,1226,1237,1245,1248,1256,1262,1263,1273,1281,1284,1289,1293,1298,1299],from_cal:[1285,1286],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,135,300,448,581,714,856,857,1007,1126,1131,1256],full_matric:[875,877],fulli:[43,1256,1273,1283,1284,1298],func:[40,41,448,453,481,482,931,932,933,977,1007,1018,1103,1107,1156],further:[43,1302],furthermor:1302,futur:1302,gain:1264,gamma:[1254,1255],gather:[40,41,135,300,448,581,714,1007,1042],gather_nd:[40,41,135,300,448,581,714,1007],gauss:[1136,1145],gaussian:[1229,1230],geglu:[1256,1259],gelu:[382,508,830,1229,1256,1259],gener:[23,40,41,43,446,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,497,931,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1109,1212,1214,1216,1217,1256,1289,1293],geometr:[1007,1039],get:[40,41,43,856,857,858,933,942,943,951,966,967,972,976,979,982,983,993,994,1007,1011,1043,1044,1045,1072,1156,1256,1273,1282,1302],get_all_arrays_in_memori:1007,get_all_arrays_on_dev:933,get_framework:59,get_initial_st:[1273,1282],get_min_bas:1007,get_min_denomin:1007,get_mod_kei:[1285,1286],get_num_dim:[448,714,1007],get_referrers_recurs:1007,getfullargspec:1156,gist:1256,give:[43,1007,1074,1299],given:[40,41,43,879,880,933,966,972,975,976,977,979,982,983,987,1007,1010,1013,1019,1027,1028,1042,1059,1060,1069,1070,1073,1076,1077,1084,1091,1096,1098,1102,1103,1105,1106,1108,1110,1111,1112,1126,1128,1132,1136,1137,1156,1200,1205,1206,1212,1215,1216,1218,1219,1222,1224,1225,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1262,1263,1302],global:[40,41,42,933,942,943,950,975,976,977,983,990,991,992,1007,1029,1044,1045,1072,1078,1079,1080,1086,1087,1103,1118,1156,1254,1255,1287,1288],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1256,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],good:43,googl:1256,got:[43,1256],gpu0:43,gpu2:43,gpu:[933,968,971,1156],gpu_is_avail:[446,933,1156],grad:[1256,1289,1293,1298],gradient:[25,40,41,482,483,484,485,933,977,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1122,1152,1153,1154,1155,1256,1289,1290,1291,1292,1293,1294,1298,1302],gradient_descent_upd:[1103,1152,1153,1154,1155],gradient_imag:[170,354,486,622,785,1119],gradienttrack:[1103,1104],graph:[1103,1106,1108,1110,1111,1112,1285,1286],greater:[40,41,1007,1010,1037,1085,1212,1216],green:[40,41,42,1300,1301],grid:[1007,1064],group:[1119,1124],guid:[43,1256,1257,1302],gym:1256,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1302,half:[1007,1010,1156,1212,1216],hand:1256,handl:[40,41,42,43,931,932,933,949,951,960,961,972,979,982,1103,1106,1108,1110,1111,1112,1156,1289,1290,1291,1292,1293,1294],happen:43,has:[40,41,43,881,882,1007,1088,1126,1131,1136,1140],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1007],hasattr:1156,have:[40,41,43,852,853,854,855,856,857,860,861,862,863,864,865,866,867,868,869,871,872,873,875,876,877,878,879,880,881,882,884,885,888,889,890,892,910,911,917,1007,1022,1026,1031,1032,1033,1034,1040,1088,1103,1109,1117,1136,1144,1156,1256,1298,1299],haven:43,hdf5:[40,41,1285,1286],head:[1237,1248,1273,1284],head_dim:[1273,1284],height:[1119,1124],height_cutoff:[40,41],help:[43,59,399,446,447,933,945,946,947,948,983,1103,1256,1264,1266,1267,1269,1270,1272],here:[43,1256],hidden:[1237,1247,1273,1282],hierarch:[1007,1024],hierarchi:[40,41],high:[40,41,497,1212,1214,1216],higher:[875,877,1103,1106,1108,1110,1111,1112],highest:[1212,1214],highest_util:1156,highest_util_nod:1156,highli:1256,highlight:1302,hint:43,hkt:1302,hold:[983,987,1007,1010,1013,1076,1077],host:1256,hot:[1007,1068],hour:43,how:[1256,1273,1284,1285,1286,1299,1302],howev:[43,1299],http:1302,hyperbol:[860,861,865,1136,1138,1142,1143,1149,1151,1229,1236],hypothet:[43,1302],icon:1256,idea:1256,ident:[40,41,43,135,300,448,581,714,1007],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[851,856,857,860,873],if_exist:[40,41],ignor:[40,41,1289,1293],ignore_key_error:[40,41],ignore_miss:[1289,1293],ignore_non:[40,41],iii:43,iinfo:[81,216,399,526,658,856],imag:[27,487,488,489,1007,1058,1120,1121,1122,1123,1124,1125,1237,1238,1239,1240,1241,1243,1244,1256,1302],image_dim:[1119,1123],imkkhk:1302,immedi:[1256,1299,1302],implement:[43,860,861,864,865,870,871,884,885,892,917,1256,1299,1302],in_featur:[1237,1246],inadvert:43,includ:[40,41,43,875,878,888,889,890,1007,1010,1048,1086,1087,1099,1200,1201,1212,1216,1273,1283,1284,1287,1288,1298],include_deriv:[1200,1202,1209],include_empti:[40,41],include_inf:[40,41,1007,1048,1099],include_nest:[1200,1201],include_self:[40,41],inclus:[43,1212,1214],incom:[1237,1246],increas:[933,955,959,965,1007,1023,1036,1101,1156,1200,1209],increasingli:1302,increment:[1007,1053,1156],inde:1256,indent:[40,41,42],independ:[1212,1213],index:[40,41,448,497,881,882,884,885,1007,1012,1041,1042,1064,1085,1088,1200,1203,1205,1206,1207,1210],index_nest:1200,indic:[40,41,448,461,462,472,474,475,875,878,881,882,884,885,1007,1012,1041,1042,1050,1068,1076,1077,1200,1201,1203,1205,1206,1207,1208,1210,1211,1212,1213,1229,1234,1237,1238,1239,1240,1241,1242,1243,1244,1254,1255,1273,1274,1275,1276,1277,1278,1279,1280,1285,1286],indices_wher:[135,300,448,714,1007],indistinguish:[860,873],inevit:1302,inf:[40,41,875,878,1007,1048,1057,1099,1136,1140],infer:[886,887,931,932,1007,1046,1049,1074,1082,1119,1123,1126,1131,1299,1302],infin:[860,861,863,864,865,866,871,873,875,878,888,889,890,1007,1057],infinit:[860,873],inform:[856,857,858,1103,1114],init_c:[1237,1247],init_h:[1237,1247],init_on_first_step:[1289,1293],initi:[40,41,42,43,59,399,446,447,933,945,946,947,948,983,1103,1156,1237,1247,1256,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1289,1293],initialz:[1285,1286],inner:[1152,1153,1154,1155],inner_batch_fn:[1152,1153,1154],inner_batch_shap:[1237,1246],inner_cost_fn:[1152,1153,1154],inner_grad_step:[1152,1153,1154,1155],inner_learning_r:[1152,1153,1154,1155],inner_optimization_step:[1152,1153,1154,1155],inner_v:[1152,1153,1154],innermost:[852,854,875,876],inp:1156,inplac:[40,41,1007,1016,1051,1055,1089,1103,1106,1108,1110,1111,1112,1262,1263,1289,1290,1291,1292,1293,1294],inplace_arrays_support:[448,1007],inplace_decr:[135,300,448,581,714,1007],inplace_incr:[135,300,448,581,714,1007],inplace_oper:[0,11,12],inplace_upd:[40,41,135,300,448,581,714,1007,1262,1263],inplace_variables_support:[448,1007],input:[15,18,19,40,41,42,43,852,854,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,931,932,933,942,943,950,951,952,955,956,959,965,977,978,983,987,988,990,991,992,993,994,998,999,1007,1008,1009,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1025,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1046,1048,1049,1050,1052,1053,1054,1056,1057,1058,1062,1063,1064,1065,1073,1075,1082,1083,1085,1088,1089,1090,1091,1093,1094,1095,1096,1098,1099,1101,1103,1107,1109,1114,1118,1119,1120,1121,1122,1123,1125,1126,1129,1131,1133,1134,1135,1136,1138,1140,1142,1143,1144,1148,1149,1150,1151,1152,1153,1154,1155,1156,1212,1213,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1254,1255,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287,1288,1299],input_ax:[933,977,1156],input_channel:[1273,1274,1275,1276,1277,1278,1279,1282,1283],input_queu:1156,inputs_split:1156,insert:[881,882,1007,1036],insid:43,inspect:1156,inspir:1302,instal:1256,instanc:[15,16,17,18,19,40,41,43,497,892,910,911,917,933,942,1156,1262,1263,1295,1296],instead:[40,41,43,497,1219,1221,1222,1223,1224,1225,1226,1227,1302],int32:43,int64:[983,987,1007,1010,1013,1049,1069,1070,1102],int_dtyp:[983,992,1002],integ:[40,41,497,856,858,860,862,863,875,878,888,889,890,983,999,1007,1010,1037,1075,1084,1212,1214,1217],integr:1256,intend:43,inter:1256,interact:1256,interchang:[40,41,1007,1090],interest:1256,interfac:[1007,1013,1299],intermedi:[40,41],intern:[40,41,933,1103,1117,1156,1200,1201,1208,1209,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1295,1296],interpol:[1007,1058],intersect:[1136,1137],interv:[40,41,888,889,890,1007,1010,1019,1059,1060,1136,1139,1212,1216],introduc:1302,inv:[789,1126,1302],invalid:[888,889,890],invalid_dtyp:983,invers:[860,861,1126,1128,1130,1136,1137,1138,1139,1140,1142,1302],invert:[1126,1128,1130],invest:1302,investig:43,invoc:[931,932],irrespect:1256,is_al:1156,is_arrai:[135,300,448,581,714,1007,1156],is_float_dtyp:983,is_int_dtyp:983,is_mean:1156,is_sum:1156,is_vari:[167,349,481,617,779,1103],isfinit:[86,221,404,531,663,860],isinf:[300,581,714,1007],isinst:1156,isnan:[86,221,404,531,663,860],isnumer:1156,issu:[1256,1257],issue_numb:43,item:[15,19,40,41,892,904,905,933,942,943,945,952,954,956,958,964,983,990,1007,1024,1047,1086,1087,1156,1200,1204,1205,1206,1209,1210,1211,1256,1285,1286,1298],iter:[15,16,17,18,19,40,41,42,931,932,933,936,937,939,940,942,943,946,947,954,956,957,958,959,964,977,1007,1009,1017,1022,1023,1049,1064,1069,1073,1074,1077,1082,1084,1088,1091,1096,1101,1156,1200,1201,1202,1204,1208,1209],iterbal:[933,954,958,964,1156],its:[497,933,977,1007,1049,1074,1090,1096,1156,1256],itself:[43,1200,1209],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,395,396,397,398,399,401,402,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,851,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1300,1301],ivy_backend:[40,41],ivy_bay:1302,ivy_test:43,ivyfcmodel:1298,ivyh:[40,41,42],ivymodul:[198,838],jame:1256,jax:[43,1103,1109,1256,1302],jax_concat:1256,jnp:1256,join:[40,41,1007,1022,1088,1156],journal:1256,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1256,1273,1282,1302],kaimingnorm:[1264,1268],kalman:1302,kalman_filt:1302,kalman_filter_step:1302,kalman_filter_upd:1302,keep:[40,41,933,978,1007,1098,1156,1256,1257,1302],keep_inner_v:[1152,1153,1154],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1152,1153,1154],keepdim:[40,41,448,479,490,491,875,878,881,882,886,887,888,889,890,1007,1098,1126,1129,1219,1221,1222,1223,1224,1225,1226,1227],kei:[15,16,17,40,41,42,43,892,897,933,945,1007,1024,1152,1153,1154,1156,1200,1203,1207,1237,1248,1249,1256,1262,1263,1273,1284,1289,1293],kept:[40,41,42,1152,1153,1154],kera:1302,kernel:[1237,1247],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,933,942,943,955,959,965,1007,1011,1031,1032,1033,1061,1156,1200,1204,1285,1286],keyword_color_dict:[40,41,42],kind:[856,857,858,1302],kwarg:[15,16,17,40,41,42,59,63,933,942,955,959,965,1007,1061,1156,1262,1263,1285,1286],kwarg_stateful_idx:[1285,1286],kwargs_clon:1156,kwargs_dist:1156,kwargs_uni:1156,label:[43,1250,1251,1252,1253],lamb:[1103,1110,1256,1289],lamb_upd:1103,lambda:[1156,1289,1292,1294,1298],lar:[1103,1110,1111,1256,1289],larger:[856,857,1007,1019],largest:[40,41,856,857,858,1007,1037],lars_upd:1103,last:[40,41,875,876,877,879,880,884,885,888,889,890,1007,1010,1026,1058,1084,1088,1126,1129,1219,1224,1226,1229,1234,1237,1247,1273,1283],later:[40,41,1007,1018],latest:[1273,1282],layer:[1103,1106,1108,1110,1112,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1254,1255,1256,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1302],layer_norm:1254,layernorm:[1256,1287],layerwis:[1103,1111,1289,1292],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1200,1201,1208],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1229,1230,1231],leaky_relu:[830,1229],learn:[886,887,1103,1106,1108,1110,1111,1112,1126,1131,1152,1153,1154,1155,1212,1218,1256,1289,1290,1291,1292,1293,1294,1299,1302],learnabl:[1254,1255,1287,1288],least:43,leav:[15,18,19,40,41,1200,1201,1202,1208,1209],left:[40,41,43,881,882,1126,1129,1219,1221,1222,1223,1224,1225,1226,1227,1256],leftmost:[40,41],len:1156,length:[40,41,42,1007,1010,1074,1085,1096],lenton2021ivi:1256,lenton:1256,less:[40,41,43,86,221,404,531,663,860,863,871,873,875,878,1156,1212,1216],less_equ:[86,404,531,663,860],less_util_node_str:1156,let:[1299,1302],level:1256,librari:[860,872,1256,1298,1302],lightweight:1256,like:[43,1103,1109,1212,1216,1256,1298,1299,1302],likewis:43,limit:[40,41,42,43,856,857,858,1007,1019,1020,1021],linalg:[29,1127,1128,1129,1130,1131,1132,1256],line:43,linear0:[1256,1298],linear1:1256,linear2:1298,linear:[1007,1039,1058,1126,1229,1230,1231,1232,1237,1245,1256,1273,1274,1275,1276,1277,1278,1279,1280,1298],linear_algebra:[490,491,492,493,875,876,877,878],linear_resampl:[135,300,448,581,714,1007],linearli:[1007,1039],link:[43,1256],linspac:[135,300,448,581,714,1007,1010],list:[15,18,19,40,41,395,396,398,852,853,855,879,880,888,889,890,933,942,943,952,953,955,956,957,959,962,963,977,1007,1010,1013,1015,1064,1083,1084,1093,1098,1152,1153,1154,1156,1200,1201,1202,1204,1208,1209,1237,1238,1239,1240,1241,1242,1243,1244,1256,1257,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280],list_join:[40,41,42],list_stack:[40,41],liter:[875,878],littl:1299,load:[40,41],loaded_kwarg:1156,loader:1256,local:43,local_set:[1007,1047],locat:[43,1007,1057,1212,1213],log1p:[86,404,531,663,860],log2:[86,404,531,663,860],log:[799,860,870,1007,1060,1136,1156,1250,1251,1252,1253],logarithm:[860,870,871,1136,1147],logic:[31,860,872,888,889,890,1134,1135,1256],logical_and:[363,796,1133],logical_not:[86,221,404,531,663,860],logical_or:[363,796,1133],logit:[1250,1253],logspac:[135,300,448,581,714,1007],look:[43,1299,1302],loop:[1152,1153,1154,1155],loss:[1251,1252,1253,1256,1298],loss_fn:[1256,1298],lot:1299,low:[40,41,497,1212,1214,1216],lower:[40,41,43,852,854,1007,1063,1212,1216],lower_depth:[1285,1286],lowest:[15,18,19,40,41,1200,1209,1212,1214],lstm:[1237,1247,1256,1273],lstm_updat:[43,1237],machin:[856,857,858,886,887,1126,1131,1212,1218,1256,1299,1302],made:43,mai:[860,869,872,884,885,1007,1010,1030,1034,1256,1299,1302],main:[852,854,875,876,1007,1049,1256],mainli:1256,maintain:[43,884,885],make:[43,497,933,1156,1256,1299],maml:[1152,1153,1154],maml_step:1152,manag:[933,1156],manhattan:[875,878],mani:[40,41,43,1007,1084,1256],manipulation_funct:[879,880],manner:[15,18,19,40,41,43,1200,1209],manual:[1200,1201,1208,1302],map:[40,41,42,933,942,1007,1057,1156,1200,1205,1206,1209,1273,1284,1298],map_cont:[40,41],map_nest_at_index:1200,map_nest_at_indic:1200,map_sequ:[40,41],mapper:[933,942,943,1156],mark:43,mask:[1237,1248,1249],master:43,match:[40,41,1007,1061],match_kwarg:1007,math:[33,496,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1156,1256],mathbb:[1126,1132],mathbf:[1126,1132],mathemat:[851,875,878],matmul:[43,300,448,581,714,1007,1302],matplotlib:1299,matric:[852,854,875,876,1237,1246],matrix:[40,41,852,854,875,876,1007,1009,1020,1062,1126,1127,1128,1129,1130,1131,1132,1237,1246,1273,1283],matrix_norm:[40,41,174,358,490,626,789,1126],matter:1256,max:[40,41,399,856,857,858,1007,1020,1021,1032,1063,1076,1077,1156,1219,1221,1289,1291],max_batch_s:[40,41],max_chunk_s:[933,977,1156],max_depth:[40,41,933,937,940,947,955,959,965,1007,1047,1156,1200,1209],max_dev_dim_step_ratio:933,max_freq:[1007,1039],max_length:[40,41],max_node_dim_step_ratio:1156,max_norm:[40,41,1007,1020,1021],max_split_factor_step_s:[933,1156],max_trust_ratio:[1103,1110,1289,1291],maxim:[1256,1299,1302],maximis:1256,maximum:[40,41,42,714,881,882,933,955,959,965,977,1007,1019,1020,1021,1039,1103,1110,1156,1200,1209,1219,1221],mayb:[15,18,19],mdi:1156,mean:[40,41,497,933,962,963,964,965,977,1007,1032,1152,1153,1154,1155,1156,1200,1204,1212,1215,1219,1222,1225,1227,1264,1298,1302],measur:[1237,1248,1273,1284],mech:1256,mechan:[1256,1302],medic:1302,member:43,memori:[933,949,972,977,979,982,1156,1237,1247,1256],mention:43,merg:43,merge_with_upstream:43,meshgrid:[300,448,714,1007],messag:[1300,1301],meta:[35,1153,1154,1155,1256],method:[40,41,42,43,497,1007,1013,1024,1064,1076,1077,1103,1110,1111,1156,1200,1201,1208,1209,1256,1273,1284,1285,1286,1299],might:[1007,1030,1302],min:[40,41,113,399,431,558,690,856,857,858,875,878,886,1007,1032,1065,1076,1077,1086,1126,1131,1156,1219,1223],min_bas:[1007,1087],min_denomin:[1007,1086],min_dev_dim_s:933,min_node_dim_s:1156,min_sf_tune_step:[933,1156],min_unit_dev_tune_step:933,min_unit_node_tune_step:1156,mind:1256,mini:[1254,1255,1287,1288],minimum:[40,41,714,886,887,933,983,987,1007,1010,1012,1013,1019,1044,1045,1078,1079,1086,1087,1156,1219,1223],miss:[1289,1293],ml_framework:[1007,1010,1126,1131],mod:[1007,1038],mod_depth:[1285,1286],mod_height:[1285,1286],mod_with_top_mod_key_chain:[1285,1286],mode:[40,41,490,492,875,877,931,932,933,962,963,964,965,977,1126,1131,1156,1299],model:[1256,1298],modul:[40,41,42,59,1007,1066,1156,1256,1257,1259,1260,1261,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287,1288,1295,1296,1302],moment:[1103,1105,1106,1110,1289,1290,1291],more:[43,879,880,1007,1088,1156,1256,1299,1302],more_util_node_str:1156,most:[40,41,43,1126,1131,1256,1302],move:[40,41,43,933,978,1156],much:[43,1256,1302],multi:[497,1007,1066,1237,1248,1273,1284],multi_head_attent:1237,multi_index_nest:1200,multi_map:[40,41],multi_nod:1156,multidev:[933,944,945,946,965],multidevcontain:[40,41],multidevic:[933,942],multidevit:[933,936,939,942,943,947],multidevitem:[933,935,938],multidevnest:[933,937,940],multiheadattent:[1256,1273],multinod:[1156,1160],multinodecontain:1156,multinodeit:1156,multinodeitem:1156,multinodenest:1156,multinomi:[180,367,497,632,814,1212],multipl:[40,41,888,889,890,1007,1061,1084,1126,1128,1219,1221,1222,1223,1224,1225,1227,1254,1255,1273,1283,1299],multipli:[40,41,1007,1027,1219,1224],multiprocess:[40,41,42,448,714,933,942,1007,1156],must:[40,41,42,43,852,853,854,855,860,861,862,863,864,865,866,868,869,871,872,873,875,876,878,879,880,884,885,886,887,888,889,890,892,910,911,917,933,962,963,964,965,977,1007,1010,1022,1024,1026,1034,1063,1065,1077,1088,1136,1141,1144,1156,1212,1217,1289,1293],mutabl:[1200,1202,1209],mutlidevic:[933,942],mutlinod:1156,mw_tm1:[1103,1106,1110],mx_concat:1256,mxn:[852,854,875,876],mxnet:[43,1256,1302],my_func:43,mymodel:1256,name:[43,931,932,1298],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1299],nan:[40,41,43,851,860,861,863,864,865,866,867,871,873,888,889,890,1007,1048,1099],nativ:[15,17,18,19,40,41,43,933,949,951,960,961,972,979,982,983,988,995,996,1156,1256,1257,1262,1263],native_modul:[1262,1263],native_module_class:[1262,1263],nativearrai:[15,18,19,43,852,854,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,877,878,879,880,881,882,884,885,886,887,888,889,890,892,910,911,917,933,951,977,978,983,987,993,998,999,1007,1008,1009,1010,1012,1013,1014,1015,1017,1019,1020,1021,1022,1023,1025,1026,1027,1028,1031,1032,1033,1034,1036,1037,1038,1039,1041,1042,1046,1048,1049,1050,1057,1058,1059,1060,1062,1063,1064,1065,1068,1069,1070,1073,1074,1075,1076,1077,1082,1084,1085,1088,1090,1091,1093,1094,1095,1096,1098,1099,1100,1101,1102,1156,1200,1202,1209],natur:[860,870,1136,1147,1302],ncdhw:[1237,1242,1243,1273,1278,1279],nchw:[1237,1240,1241,1244,1273,1276,1277,1280],ncw:[1237,1238,1239,1273,1274,1275],ndarrai:[43,395,396,397,398,399,401,402,497,1007,1094],ndhwc:[1237,1242,1243,1273,1278,1279],nearest:[1007,1075],need:[43,1007,1020,1021,1237,1239,1241,1243,1256,1273,1275,1277,1279,1302],neg:[40,41,860,866,875,878,879,880,888,889,890,1219,1224,1226,1229,1231],negative_slop:1264,neither:1156,nest:[15,16,17,18,19,40,41,42,933,955,959,965,1007,1013,1093,1152,1153,1154,1156,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1285,1286,1289,1290,1291,1292,1293,1294],nested_indices_wher:1200,nested_map:[1156,1200],network:[1237,1246,1256,1257,1259,1273,1285,1286,1302],neural:[1237,1256,1259,1273,1298],never:43,new_node_percent_mem:1156,new_node_util:1156,new_node_utils_kei:1156,new_std:[1254,1255,1287,1288],newli:[43,931,932,1007,1017,1018],newlin:[40,41,42],newshap:[1007,1017,1074],next:[856,857,1156,1285,1286,1289,1290,1291,1292,1293,1294],nhwc:[1237,1240,1241,1244,1273,1276,1277,1280],node:[40,41,1200,1201,1208],node_clon:1156,node_dist:1156,node_dist_arrai:1156,node_dist_it:1156,node_in:1156,node_mapp:1156,node_str:1156,node_to_str:1156,node_util:1156,nodedistit:1156,nodedistitem:1156,nodedistnest:1156,nodemanag:[1156,1167],nodemapp:1156,nodemappermultiproc:1156,noinspect:[43,934,984,985,986,1104,1156],non:[40,41,860,872,875,878,888,889,890,931,932,983,997,1285,1286,1289,1293,1299],none:[40,41,42,43,59,61,64,395,396,398,446,448,449,451,453,460,461,462,463,470,471,472,473,474,475,476,477,478,480,490,491,497,498,852,853,855,856,857,858,875,878,879,880,881,882,886,887,888,889,890,931,932,933,942,943,949,950,975,976,977,978,983,990,991,992,1007,1010,1013,1029,1030,1035,1040,1041,1042,1047,1049,1051,1052,1053,1054,1055,1059,1060,1066,1068,1069,1070,1073,1076,1077,1078,1079,1084,1085,1086,1087,1096,1097,1102,1103,1106,1108,1110,1111,1112,1118,1119,1123,1126,1129,1131,1152,1153,1154,1155,1156,1200,1201,1204,1208,1209,1212,1213,1214,1215,1216,1219,1221,1222,1223,1224,1225,1226,1227,1237,1239,1241,1243,1246,1247,1248,1249,1254,1255,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],norm:[40,41,875,878,1007,1020,1021,1126,1129,1255,1256,1288,1289,1291],normal:[1212,1215,1254,1255,1287,1288],normalized_idx:[1254,1255],normalized_shap:[1287,1288],notat:[40,41,1219,1220],note:[43,1126,1131],noth:[40,41,1299],notimplementederror:1156,now:[40,41,43,933,978,1007,1008,1156,1256,1273,1284,1285,1286,1298,1299,1302],np_concat:1256,np_finfo:399,ns_tune_step:1156,num:[448,470,471,1007,1059,1060],num_arrai:[40,41],num_arrays_in_memori:1007,num_arrays_on_dev:933,num_band:[1007,1039],num_channel:[1273,1280],num_chunk:1156,num_chunks_floor:1156,num_class:[1212,1213],num_cpu_cor:933,num_gpu:[128,446,933,1156],num_head:[1237,1248,1273,1284],num_kei:[1237,1248,1249],num_lay:[1273,1282],num_or_size_split:[40,41,448,476,1007,1084],num_output:1156,num_queri:[1237,1248,1249],num_sampl:[448,469,497,498,1007,1058,1119,1120,1212,1213],num_task:[1152,1153,1154,1155],number:[40,41,42,851,856,857,858,860,863,875,877,888,889,890,931,932,933,969,970,971,983,994,998,999,1007,1010,1019,1023,1036,1039,1046,1049,1058,1059,1060,1063,1067,1073,1084,1091,1095,1099,1101,1152,1153,1154,1155,1156,1212,1213,1217,1219,1221,1222,1223,1225,1227,1237,1248,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1299,1302],numer:[43,860,863,866,867,868,872,892,911,917,1007,1044,1045,1078,1079,1086,1087,1136,1144,1264],numhead:[1237,1248],numpi:[40,41,43,395,396,397,398,399,401,402,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,875,877,1007,1094,1126,1131,1219,1220,1256,1298,1299,1302],nwc:[1237,1238,1239,1273,1274,1275],obj:[40,41],object:[40,41,42,59,399,856,857,933,983,987,1007,1010,1013,1103,1200,1203,1205,1206,1207,1210,1211,1212,1218,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286],object_in:[448,451,1007,1013],observ:1156,obvious:43,occupi:[856,857,858,1007,1076,1077],off:[875,876,1007,1010],offer:1256,offset:[875,876,1254,1255],often:1299,old:[40,41],on_init:[1273,1284,1285,1286],onc:[43,933,977,1156,1212,1213,1256],one:[40,41,43,875,878,879,880,881,882,933,962,963,964,965,977,983,989,1007,1049,1061,1068,1076,1077,1085,1088,1126,1129,1156,1219,1220,1221,1222,1223,1224,1225,1226,1227,1256,1299,1302],one_hot:[135,448,581,714,1007],onearrai:[1007,1036],ones:[40,41,77,212,395,522,654,852,1007,1049,1068,1070,1256],ones_lik:[135,300,448,581,714,1007],ongo:43,onli:[40,41,43,497,860,872,879,880,933,1126,1131,1156,1200,1201,1202,1208,1289,1290,1291,1292,1293,1294,1298,1299],onlin:[43,1256],onto:[933,962,963,978,1156,1200,1204,1209],oom:[933,1156],open:[1007,1010,1212,1216,1256,1302],opencv:1299,oper:[40,41,1007,1016,1031,1032,1033,1059,1060,1089,1103,1106,1108,1110,1111,1112,1133,1134,1135,1237,1238,1239,1240,1241,1242,1243,1244,1246,1256,1257],operand:[40,41,860,861,863,864,865,871,873,1219,1220],oppos:[1007,1039],optim:[933,1103,1106,1108,1110,1111,1112,1152,1153,1154,1155,1156,1256,1290,1291,1292,1294,1298,1302],optimizer_upd:1103,option:[15,18,19,40,41,42,43,395,396,398,852,853,855,875,878,879,880,881,882,886,887,888,889,890,931,932,933,942,943,951,955,956,957,958,959,962,963,964,965,972,975,976,977,978,982,983,988,993,997,1006,1007,1009,1010,1012,1013,1020,1021,1022,1027,1029,1030,1039,1040,1041,1042,1046,1048,1049,1056,1058,1059,1060,1061,1064,1066,1068,1069,1070,1073,1076,1077,1080,1082,1084,1085,1086,1087,1088,1096,1098,1099,1102,1103,1106,1108,1109,1110,1111,1112,1114,1119,1123,1126,1129,1131,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1212,1213,1219,1221,1222,1223,1224,1225,1226,1227,1229,1230,1234,1237,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1299],ord:[875,877,878],order:[40,41,42,43,875,878,879,880,884,885,1103,1106,1108,1110,1111,1112,1126,1129,1152,1153,1154,1295,1296],ordered_node_util_kei:1156,org:1302,organ:43,origin:[40,41,42,1007,1070,1074,1102,1126,1129],other:[40,41,43,892,894,895,900,902,903,907,909,910,911,912,913,915,917,918,919,920,921,922,924,925,926,928,929,930,931,932,1007,1009,1010,1049,1103,1107,1212,1216,1256,1298,1299,1302],other_i:[43,892,911,917],otherwis:[15,16,17,18,19,40,41,860,866,867,875,878,881,882,888,889,890,933,950,983,990,991,992,1007,1016,1096,1097,1100,1103,1109,1114,1118,1152,1153,1154,1156,1219,1221,1222,1223,1225,1227],our:[43,1256,1302],out:[43,497,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,870,871,872,873,875,876,878,879,880,881,882,884,885,888,889,890,892,911,1007,1010,1136,1140,1237,1245,1247,1256,1273,1281],out_feat_dim:[1237,1248],out_featur:[1237,1245,1246],out_i:[860,866,867],outdat:1302,outer:[1152,1153,1154,1155],outer_batch_fn:[1152,1153,1154],outer_batch_shap:[1237,1246],outer_cost_fn:[1152,1153,1154],outer_v:[1152,1153,1154],outlin:1299,output:[40,41,43,852,853,855,879,880,933,942,943,977,1007,1010,1018,1040,1049,1073,1091,1103,1107,1136,1141,1156,1212,1214,1215,1216,1237,1239,1241,1243,1245,1247,1248,1249,1256,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284],output_ax:[933,977,1156],output_axi:1156,output_channel:[1273,1274,1275,1276,1277,1278,1279,1282,1283],output_queu:1156,output_shap:[1237,1239,1241,1243,1273,1275,1277,1279],outsid:[1007,1019],over:[40,41,875,878,888,889,890,1126,1129,1212,1216,1219,1221,1222,1223,1225,1227,1254,1255,1287,1288],overal:1299,overflow:[1007,1010],overhead:1299,overrid:[1007,1068,1070,1102],overriden:[1289,1293],overwrit:[40,41,933,977,1156],overwrite_at_key_chain:[40,41],own:[1256,1299,1302],packag:[43,1299],pad:[1007,1023,1039,1101,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],pad_width:[448,1007,1023,1101],page:1256,pair:[1237,1249],parallel:[933,942,943,1156],parallelis:[933,942,943,1156],param:[40,41,42,448,461,462,881,882,886,887,933,977,1007,1008,1041,1042,1068,1069,1156,1285,1286,1298],paramet:[15,16,17,18,19,40,41,42,43,860,869,875,876,877,886,887,892,910,911,917,931,932,933,942,943,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,972,975,976,977,978,979,982,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1046,1048,1049,1050,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1069,1070,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1114,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],parameter:[1212,1215,1216],pardo:1256,pars:[1007,1024],part:[852,854,1103,1106,1108,1110,1111,1112,1136,1140,1256,1285,1286,1299],partial:[40,41,43,1285,1286],particl:1302,particular:[43,1302],pass:[40,41,42,43,933,942,977,983,988,1007,1018,1103,1117,1152,1153,1154,1156,1262,1263,1285,1286,1289,1293,1295,1296],pattern:[40,41,1007,1031,1032,1033],peopl:43,per:[933,1156,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],percent_used_mem_on_dev:933,percent_used_mem_on_nod:1156,percentag:[933,972,1156],perf_count:1156,perform:[40,41,43,888,889,890,933,1007,1012,1027,1031,1032,1033,1052,1053,1054,1058,1059,1060,1103,1106,1108,1110,1111,1112,1119,1120,1152,1153,1154,1155,1156,1200,1205,1206,1219,1221,1222,1223,1224,1225,1226,1227,1229,1234,1237,1245,1247],period:43,permissable_step:1156,permit:43,permut:[497,1007,1090,1096],perpendicular:[1007,1026],person:[43,1256],physci:1302,pickl:[40,41,1156],pickle_filepath:[40,41],pinv:[358,789,1126],pip:1256,pipelin:1298,pkk:1302,pkkm1:1302,pkm1km1:1302,place:[40,41,43,852,853,855,933,978,1007,1036,1040,1052,1053,1054,1156,1289,1290,1291,1292,1293,1294],placehold:[43,1200,1209],pleas:[43,497,1126,1131],point:[43,851,852,853,855,856,857,860,861,863,864,865,871,873,875,878,983,998,1007,1010,1136,1144],popul:[40,41,1212,1213],popular:1302,population_s:[497,498,1212,1213],portabl:[1256,1257],posit:[15,16,17,856,857,860,866,888,889,890,933,955,959,965,1007,1008,1010,1036,1039,1156,1212,1217,1262,1263],possibi:[40,41],possibl:[43,1007,1061,1093,1119,1124,1302],post:[1254,1255],post_shap:[40,41],power:[43,892,917,923,1007,1044,1078,1087,1264],practic:1256,pre:[933,1156,1256],pre_shap:[40,41],precis:[856,857,860,873],pred:[1250,1251,1252,1253],predict:[1250,1251,1252,1253,1302],preprint:1256,present:[40,41],preserv:[40,41,42,879,880,1103,1114],preserve_typ:[40,41,481,484,1103,1114],press:1256,prevent:[43,1103,1105,1106,1110,1156,1289,1290,1291],prevet:43,previou:[1103,1106,1110],previous:[1007,1018],prime:1256,print:[40,41,42,933,973,1007,1071,1256,1298],print_all_arrays_in_memori:1007,print_all_arrays_on_dev:933,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1289,1293],prob:[497,498,1212,1213,1237,1245,1273,1281],probabl:[1212,1213,1237,1245,1273,1281],problem:[43,1302],process:[43,933,942,943,972,982,1007,1066,1156],process_specif:[933,972,982,1156],prod:[40,41,1007,1032],produc:[933,942,943,1156],product:[40,41,1007,1026,1027,1062,1219,1220,1237,1248,1249,1273,1284],profil:[128,294,446,574,706,933,1156],progress:43,project:[1256,1298,1299,1302],promot:[43,860,861,862,864,865,871,873,875,878,892,917,1136,1144],prompt:1256,properli:43,properti:[40,41,399,933,945,1156,1285,1286,1289,1290,1291,1292,1294],provid:[40,41,43,879,880,881,882,888,889,890,931,932,933,950,983,990,991,992,997,1006,1007,1030,1068,1070,1077,1102,1103,1106,1108,1110,1111,1112,1118,1156,1256,1273,1282,1289,1290,1291,1292,1293,1294,1299],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1126,1130],pull:[1256,1257],pure:[40,41,1256,1302],purpos:[43,1302],put:1156,pybroadexcept:1156,pyprotectedmemb:1156,pyshadowingbuiltin:43,pyshadowingnam:[934,984,985,986,1104,1156],python:[40,41,933,972,982,1007,1010,1156,1256],pytorch:[1103,1106,1108,1110,1111,1112,1126,1131,1256,1289,1290,1291,1292,1293,1294,1298,1299,1302],pyunresolvedrefer:1156,quadrant:[1136,1141],qualiti:43,queri:[40,41,892,906,927,933,966,976,1156,1237,1248,1249,1273,1284],query_dim:[1273,1284],query_kei:[40,41],queue:[40,41,42,933,942,943,1007,1072,1080,1156],queue_class:[933,942,943,1156],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1007,1156],quick:[497,1256],quickli:[43,1298],radian:[860,864,1136,1137,1139,1141,1148,1150],rai:[1136,1137],rais:[40,41,43,888,889,890,892,917,1007,1016,1044,1078,1085,1087,1097,1156,1285,1286,1289,1293],ram:[933,972,979,982,1156],randint:[180,367,497,632,814,1212],random:[37,40,41,498,1213,1214,1215,1216,1217,1218,1256],random_crop:1119,random_norm:[180,367,497,632,814,1212],random_uniform:[180,367,497,632,814,1212],randomli:[497,1119,1123,1237,1245,1273,1281],rang:[497,1007,1010,1059,1060,1136,1141,1156,1256,1298,1302],rank:[875,878,888,889,890,1007,1023,1098,1101],rate:[1103,1106,1108,1110,1111,1112,1152,1153,1154,1155,1273,1284,1289,1290,1291,1292,1293,1294],rather:[40,41,43,933,977,1007,1010,1056,1103,1109,1156],ratio:[933,1103,1110,1119,1124,1156,1289,1291],raw:[40,41,1126,1131],raw_delta:1156,reach:[43,933,955,959,965,1156,1200,1209],read:[40,41],readi:[1156,1298],real:[1136,1137,1140],realiti:1299,rearrang:[40,41,1007,1031,1033],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1152,1154],receiv:[43,933,942,943,1007,1011,1061,1156,1273,1283],receivess:[933,1156],receivng:[1152,1155],recev:[1152,1153,1154],recognit:1302,recommend:[860,872,1256],rectifi:[1229,1231,1232],recurr:[1237,1247],recurrent_bia:[1237,1247],recurrent_kernel:[1237,1247],recurs:[40,41,1200,1201,1202,1208,1209],redefin:43,reduc:[40,41,881,882,888,889,890,933,977,1007,1032,1126,1131,1156,1219,1221,1222,1223,1224,1225,1226,1227],reduce_max:[40,41,187,372,499,637,821,1219],reduce_mean:[40,41,187,372,499,637,821,1219,1256,1298],reduce_min:[40,41,187,372,499,637,821,1219],reduce_prod:[40,41,187,372,499,637,821,1219],reduce_std:[40,41,372,1219],reduce_sum:[40,41,187,372,499,637,821,1156,1219],reduce_var:[40,41,187,372,499,637,821,1219],reduct:[39,40,41,448,474,475,888,889,890,1007,1032,1076,1077,1220,1221,1222,1223,1224,1225,1226,1227,1256],refactor:43,refer:[43,860,870,888,889,890,1103,1105,1106,1126,1132,1273,1283,1302],reflect:43,reflected_oper:[0,13,14],regard:[933,1156],regardless:[40,41,931,932],register_paramet:1298,reimplement:1302,rel:[875,876,879,880,884,885,1103,1106,1108,1110,1111,1112],rel_slice_obj:1156,relat:43,relev:[1289,1290,1291,1292,1293,1294],relu:[830,1229,1230,1231,1256,1298],remain:[43,1007,1074,1200,1204],remaind:[40,41,1007,1038,1084],remov:[40,41,43,875,876,881,882,1007,1085,1152,1153,1154],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,879,880],rep:[1007,1091],repeat:[40,41,43,300,714,1007,1033,1091,1156,1299],repeated_config_check:[933,1156],repeatedli:[1200,1207],repetit:[40,41,1007,1073,1091],replac:[40,41,43,497,498,1007,1019,1076,1077,1212,1213],repo:[43,1256],repositori:43,repres:[43,860,861,865,983,989,994,1237,1246],represent:[40,41,42,43,851,856,857,858,860,862,933,960,961,983,989,995,996,1007,1083,1093,1156],reptil:[1152,1155],reptile_step:1152,request:[1256,1257],requir:[43,860,873,931,932,983,987,1007,1010,1013,1262,1263],resampl:[1007,1058],reserv:43,reshap:[40,41,43,497,714,1007],reshape_lik:[40,41],respect:[860,862,868,869,892,911,1007,1034,1103,1105,1106,1107,1108,1110,1111,1112,1126,1131,1136,1144,1152,1153,1154,1155],respond:43,respons:[43,1156],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,881,882,888,889,890,892,910,911,917,933,942,1007,1010,1034,1076,1077,1088,1126,1129,1133,1134,1135,1136,1144,1156,1219,1221,1222,1223,1224,1225,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1256],ret:1156,ret_dict:1156,ret_fn:[933,942,943,1156],retain:[1103,1107],retain_grad:[481,482,1103,1107],retreiv:1156,retrn:[1007,1083],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1152,1153,1154,1155],return_sequ:[1273,1282],return_st:[1273,1282],rev:[1007,1030],revers:[40,41,879,880,1007,1030,1096],review:43,right:[40,41,43],rk_e:1302,robot:1256,ronald:1256,root:[43,860,873],round:[300,448,714,860,863,873,1007,1010,1156],row:[1007,1049,1212,1213],rule:[43,892,917,1007,1010,1136,1144],run:[43,933,942,1103,1105,1106,1110,1152,1153,1154,1155,1156,1256,1257,1273,1284,1285,1286],safe:[933,942,1156],safety_factor:[933,1156],same:[15,16,17,40,41,43,852,854,860,863,875,876,877,879,880,881,882,884,885,933,942,943,977,978,983,987,1007,1008,1022,1037,1038,1041,1042,1068,1070,1075,1076,1077,1088,1102,1103,1109,1114,1136,1140,1152,1153,1154,1156,1219,1220,1237,1238,1239,1240,1241,1242,1243,1244,1256,1273,1274,1275,1276,1277,1278,1279,1280,1298,1302],same_arrai:[40,41],sampl:[1007,1058,1119,1120,1212,1213,1215,1216,1237,1245,1256,1273,1281],satisfi:[1007,1013,1126,1128,1132],save:[40,41,1007,1081,1092,1119,1121,1285,1286],save_dir:[446,447,933,948,1156],save_weight:[1285,1286],scalar:[875,878,1007,1019,1068,1095,1099],scale:[933,975,976,1103,1111,1156,1237,1245,1248,1249,1254,1255,1273,1281,1284,1289,1292],scaled_dot_product_attent:1237,scatter:[1007,1068,1076,1077],scatter_flat:[135,300,448,581,714,1007],scatter_nd:[135,300,448,581,714,1007],scene:[1103,1106,1108,1110,1111,1112],schemat:1256,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[881,882],second:[40,41,860,862,868,869,875,876,933,964,1007,1014,1026,1034,1072,1080,1090,1103,1105,1106,1110,1152,1154,1156,1289,1290,1291],secondli:1302,sector:[860,861],see:[43,59,399,446,447,497,860,862,868,875,878,888,889,890,892,910,911,917,933,945,946,947,948,983,1007,1010,1059,1060,1103,1136,1144,1256,1264,1266,1267,1269,1270,1272],seed:[40,41,180,497,814,1212],seed_valu:[40,41,497,1212,1217],seem:1256,seen_set:[1007,1047],select:[1007,1013,1085,1299,1302],self:[40,41,43,59,399,446,447,892,911,917,933,945,946,947,948,983,1103,1156,1256,1264,1266,1267,1269,1270,1272,1289,1293,1298,1302],self_i:[892,911],sent:1156,seper:[43,1007,1039],seq:[40,41,42,1219,1220,1285,1286],sequenc:[15,16,17,40,41,42,43,497,931,932,933,942,943,952,953,954,955,956,957,958,959,962,963,977,983,987,1007,1010,1013,1015,1017,1022,1023,1049,1061,1064,1069,1073,1074,1077,1084,1088,1091,1096,1101,1103,1107,1119,1123,1124,1126,1129,1156,1200,1211,1212,1214,1216,1219,1221,1222,1223,1224,1225,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1254,1255,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1285,1286,1287,1288,1289,1293,1295,1296],sequenti:1256,seri:43,set:[15,18,19,40,41,881,882,884,885,933,962,963,975,976,977,1007,1009,1029,1049,1078,1079,1080,1081,1103,1106,1108,1109,1110,1111,1112,1126,1129,1156,1200,1201,1208,1210,1211,1212,1213,1217,1219,1221,1222,1223,1224,1225,1226,1227,1256,1273,1282,1289,1290,1291,1292,1293,1294,1299,1302],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:933,set_default_dtyp:983,set_default_float_dtyp:983,set_default_int_dtyp:983,set_default_nod:1156,set_exception_debug_mod:44,set_framework:[40,41,43,59,1156,1256,1298,1299,1302],set_ivy_backend:[40,41],set_min_bas:1007,set_min_denomin:1007,set_nest_at_index:1200,set_nest_at_indic:1200,set_queue_timeout:1007,set_split_factor:[933,1156],set_stat:[1289,1290,1291,1292,1293,1294],set_tmp_dir:1007,set_with_grad:1103,setter:1156,sever:1302,sgd:[1256,1289],shape0:1156,shape:[40,41,43,395,396,398,448,460,475,497,714,852,853,854,855,875,876,879,880,881,882,884,885,933,945,983,987,1007,1008,1017,1022,1023,1036,1037,1038,1040,1042,1046,1049,1068,1069,1070,1073,1074,1075,1076,1077,1083,1085,1088,1101,1102,1119,1123,1126,1128,1131,1136,1140,1141,1156,1212,1214,1215,1216,1219,1220,1237,1239,1241,1243,1273,1275,1276,1277,1278,1279,1280,1287,1288],shape_slic:[40,41],shape_to_tupl:1007,share:[40,41,1256,1299],shift:1156,should:[40,41,42,43,497,852,854,860,861,862,863,864,865,866,867,868,871,872,873,875,876,878,881,882,892,910,911,917,931,932,933,1007,1017,1018,1024,1068,1074,1103,1106,1108,1110,1111,1112,1136,1144,1156,1219,1220,1256],show:[40,41,1256,1302],show_mod_in_top_mod:[1285,1286],show_structur:[1285,1286],show_sub_contain:[40,41],show_v:[1285,1286],show_v_in_top_v:[1285,1286],shown:[40,41],shp:1156,shuffl:[40,41,180,497,814,1212],shuffle_h5_fil:[40,41],side:43,sigmoid:[830,1229,1256,1298],signatur:[43,59,399,446,447,448,481,486,490,494,495,497,933,945,946,947,948,983,1103,1264,1266,1267,1269,1270,1272],signific:1302,similar:[43,1237,1248,1273,1284],similarli:[1126,1131],simpl:[43,1007,1035,1256,1299,1302],simpler:43,simplest:1299,simpli:[40,41,43,1256,1299,1302],simultan:1256,sin:[799,1007,1039,1136,1150,1299],sinco:1299,sine:[860,861,1136,1139,1148,1149],singl:[40,41,931,932,933,942,943,962,963,964,965,1007,1085,1095,1099,1119,1124,1156,1212,1215,1216,1219,1221,1222,1223,1224,1225,1226,1227,1256,1299,1302],singleton:[875,878,888,889,890],singular:[875,877],sinh:[799,1136],siren:[1256,1264],situat:43,size:[40,41,42,448,474,875,876,877,881,882,888,889,890,933,956,957,958,959,975,976,977,1007,1010,1017,1059,1060,1076,1084,1119,1123,1126,1129,1156,1212,1213,1215,1216,1219,1221,1222,1223,1224,1225,1226,1227,1273,1274,1275],size_ordered_arrai:[40,41],skew:[1126,1132],skinv:1302,skip:[40,41],slice:[40,41,1007,1041,1042,1156,1200,1207],slice_kei:[40,41],slice_obj:[40,41,1156],slice_via_kei:[40,41],slide:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],slope:[1229,1231],small:[1250,1251,1252,1253,1254,1255,1256,1287,1288,1299],smaller:[1007,1019],smallest:[40,41,856,857,858,860,863,1007,1012],smallest_norm:[399,856,857],softmax:[196,508,830,1229,1237,1248,1249],softplu:[830,1229],solut:43,solv:1302,some:[40,41,43,1007,1010,1103,1105,1106,1108,1110,1111,1112,1117,1237,1245,1256,1273,1281,1299,1302],some_backend:43,some_namespac:43,someth:[43,1302],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,875,877,885,1156],sort_by_kei:[40,41],sorting_funct:[884,885],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,395,396,397,398,399,401,402,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,495,496,497,498,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1300,1301,1302],space:[1007,1010,1039,1059,1060],spars:[1250,1253],sparse_cross_entropi:1250,spawn:[1007,1066],special:[43,860,861,863,864,865,871,873],specif:[40,41,43,860,872,933,975,1007,1024,1031,1032,1033,1066,1152,1153,1154,1155,1156,1212,1218,1256,1285,1286,1298,1299],specifc:[1212,1213],specifi:[40,41,43,852,853,854,855,875,876,878,879,880,881,882,884,885,888,889,890,933,952,953,954,955,956,957,958,959,962,963,967,969,973,976,977,978,983,987,989,1007,1010,1012,1013,1019,1022,1023,1040,1041,1042,1048,1059,1060,1088,1098,1101,1126,1129,1156,1200,1205,1206,1210,1211,1219,1220,1221,1222,1223,1224,1225,1226,1227],sphinx:43,split:[40,41,135,300,448,581,714,933,942,956,957,958,959,975,976,977,1007,1061,1156],split_arg:1156,split_factor:[933,942,1156],split_func_cal:[933,1156],split_siz:1156,spread:[933,965,1156],sqrt:[86,221,404,531,663,860,875,878],squar:[860,873,1007,1049,1126,1128],squeez:[135,300,448,581,714,1007],stabil:[884,885,1007,1086,1087],stabl:[884,885,1007,1044,1045,1078,1079,1086,1087],stable_divid:1007,stable_pow:1007,stack:[40,41,300,714,852,854,875,876,1007,1119,1124,1200,1201,1208,1273,1282],stack_imag:[170,354,486,622,785,1119],stacked_dim_s:1156,stage:43,standard:[40,41,856,857,1212,1215,1219,1225,1254,1255,1256,1257,1287,1288],start:[40,41,43,446,447,448,449,470,471,497,933,948,1007,1010,1059,1060,1156,1256,1299],starting_index:[40,41],starting_split_factor:[933,1156],state:[1156,1237,1247,1256,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298],statement:1299,static_argnam:[448,453,931,932],static_argnum:[448,453,931,932],statistical_funct:[886,887],std:[497,1212,1215],step:[40,41,448,449,933,1007,1010,1059,1060,1103,1105,1106,1108,1110,1111,1112,1152,1153,1154,1155,1156,1256,1289,1290,1291,1292,1293,1294,1298,1302],stephen:1256,stick:1256,still:[40,41,43],stochast:[1289,1294],stop:[40,41,446,447,448,449,470,471,933,948,977,1007,1010,1059,1060,1103,1106,1108,1110,1111,1112,1114,1152,1153,1154,1155,1156,1289,1290,1291,1292,1293,1294],stop_gradi:[40,41,349,481,617,779,933,977,1103,1106,1108,1110,1111,1112,1152,1153,1154,1155,1156,1289,1290,1291,1292,1293,1294],stopiter:1156,store:[40,41,1007,1039,1084,1103,1117,1285,1286],store_var:[1285,1286],str:[15,16,17,40,41,42,43,395,396,398,399,401,402,856,857,858,931,932,933,942,943,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,977,983,988,989,994,995,996,997,998,999,1006,1007,1013,1029,1031,1032,1033,1064,1066,1069,1076,1077,1126,1129,1131,1152,1153,1154,1155,1156,1200,1204,1219,1220,1262,1263,1273,1284,1285,1286],str_to_nod:1156,straight:1299,strength:[1256,1302],stride:[1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],string:[40,41,43,933,949,951,960,961,966,972,978,979,982,983,987,993,995,996,997,1006,1007,1010,1013,1029,1049,1069,1070,1102,1156,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280,1285,1286],structur:[40,41,42,43,1007,1024],structural_diff:[40,41],style:43,sub:[40,41,43,875,876,933,956,957,962,963,964,965,1007,1084,1152,1153,1154,1155,1156],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1156,sub_mod:[1285,1286],sub_modul:[1295,1296],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1256,1257,1287,1288,1295,1296],subsequ:43,subset:43,substr:[40,41],suffici:[1126,1131],suggest:1256,suitabl:[1119,1124],sum:[40,41,448,474,475,875,878,933,962,963,964,965,977,1007,1028,1032,1076,1077,1156,1219,1220,1226],summat:[40,41,1219,1220],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,107,109,112,114,116,117,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,217,218,219,222,223,224,225,226,227,228,231,232,233,235,237,240,243,244,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,355,356,357,359,360,361,362,364,365,368,369,370,371,373,374,375,376,377,378,379,380,383,385,386,387,388,389,390,391,396,397,398,400,401,402,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,423,425,427,430,432,434,435,447,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,487,488,489,491,492,493,496,498,500,501,502,503,504,505,506,509,510,512,513,514,515,516,517,518,523,524,525,527,528,529,532,533,534,535,536,537,538,539,540,541,542,543,544,545,548,549,550,552,554,557,559,561,562,570,575,576,577,578,579,580,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,618,619,620,621,623,624,625,627,628,629,633,634,635,636,638,639,640,641,642,643,644,648,649,650,655,656,657,659,660,661,664,665,666,667,668,669,670,671,672,673,674,675,676,677,680,681,682,684,686,689,691,693,694,702,707,708,709,710,711,712,713,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,780,781,782,783,784,786,787,788,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,822,823,824,825,826,827,828,831,832,833,834,835,836,837,839,840,842,843,844,845,846,847,848,853,854,855,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,882,885,887,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1252,1253,1255,1256,1260,1261,1263,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299,1301,1302],supports_inplac:1007,suppos:1302,sure:43,svd:[102,230,420,547,679,875],swap:[40,41,1007,1090],swapax:[40,41,581,714,1007,1302],symmetr:[1126,1132],syntax:[446,448,481,486,490,494,495,497],tab:1256,take:[43,1007,1058],taken:[43,875,876,1219,1221,1222,1223,1225,1227],tan:[799,1136,1140],tangent:[1136,1140,1141,1142,1150,1151,1229,1236],tanh:[799,830,1136,1229],target:[40,41,933,949,952,953,954,955,956,957,958,959,962,963,964,965,978,1156,1256],target_dict:[40,41],task:[43,1152,1153,1154,1155],team:[43,1302],templat:1256,temporari:[1007,1081,1092],tensor:[40,41,43,448,474,475,933,951,983,993,1007,1010,1012,1017,1059,1060,1063,1065,1068,1069,1070,1074,1076,1077,1084,1102,1156,1212,1213,1214,1237,1245,1247,1256,1273,1281,1283,1289,1290,1291,1292,1293,1294,1298,1299],tensorflow:[43,1126,1131,1237,1239,1241,1243,1256,1273,1275,1277,1279,1299,1302],term:[40,41,43,1237,1247,1256,1273,1283],termcolor:[40,41,42],termin:[40,41,42,1156],test:[43,860,866,867,888,889,890,983,998,999],test_array_api:43,tf_concat:1256,than:[40,41,43,856,857,860,863,871,873,875,878,879,880,933,977,1007,1010,1019,1037,1056,1063,1085,1088,1103,1109,1156,1212,1216,1256,1299],thei:[40,41,43,1136,1141,1152,1153,1154,1212,1213,1256,1295,1296,1299],them:[1256,1302],themselv:[1200,1201],therefor:43,thi:[40,41,42,43,860,872,881,882,933,955,959,965,972,977,982,1007,1010,1039,1072,1074,1080,1103,1106,1108,1109,1110,1111,1112,1117,1126,1129,1156,1200,1204,1209,1219,1221,1222,1223,1224,1225,1226,1227,1237,1246,1256,1285,1286,1289,1290,1291,1292,1293,1294,1298,1299,1302],thing:[43,1256],those:[40,41,43,875,877,1007,1019,1103,1117,1156],though:43,thought:43,threshold:[1007,1063,1065],through:[40,41,43],tick:43,tickbox:43,tile:[300,581,714,1007],time:[43,1007,1091,1103,1106,1110,1152,1153,1154,1155,1156,1212,1213,1237,1247,1273,1284,1285,1286,1302],timeout:[40,41,42,933,942,943,1007,1072,1080,1156],timestep:[1237,1247,1273,1282],titl:[43,1256],tmp_dir:1007,tmp_dr:[1007,1081],to_appli:[40,41],to_clon:[933,1156],to_dev:[40,41,128,294,446,574,706,933],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[933,1156],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1256],to_ivy_modul:[198,838,1256,1262],to_json:[40,41],to_kv_fn:[1237,1248],to_kv_v:[1237,1248],to_list:[40,41,448,714,1007],to_multi_dev:[40,41],to_mut:[1200,1202,1209],to_n:[15,40,41,1256],to_nod:1156,to_numpi:[40,41,448,714,1007,1256,1298],to_out_fn:[1237,1248],to_out_v:[1237,1248],to_q_fn:[1237,1248],to_q_v:[1237,1248],to_raw:[40,41],to_scalar:[448,714,1007],todo:[1156,1256,1257],togeth:[40,41,1295,1296],tool:[1256,1299],top_mod:[1285,1286],topic:1302,torch:[43,931,932,1256,1298,1299,1302],torch_concat:1256,torchfcmodel:1298,total:[40,41,42,933,979,1156],total_mem_on_dev:933,total_mem_on_nod:1156,tpu:[933,980,1156],tpu_is_avail:[446,574,706,933,1156],tpye:[983,994],trace:[40,41,1007,1056],track:[43,933,1156,1200,1209,1285,1286],track_submod_call_ord:[1285,1286],track_submod_ret:[1285,1286],trail:[1287,1288],train:[1103,1105,1106,1110,1256,1257],trainabl:[1103,1109,1256,1257,1262,1263,1285,1286,1295],trainer:1256,tran:1302,transform:[1237,1245,1246],transpos:[40,41,135,300,448,714,933,964,1007,1156,1237,1239,1241,1243,1273,1275,1277,1279],travers:[15,18,19,40,41,1200,1209],treat:[40,41,931,932],tri:[40,41],triangular:[852,854],trigonometr:[1136,1137,1140,1148],tril:[77,212,395,522,654,852],trim_kei:[40,41],trust:[1103,1110,1289,1291],truth:[860,868,869,892,910,911,1007,1034,1133,1134,1135],try_else_non:1007,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[933,1156],tune_dev_alloc:933,tune_dev_split:933,tune_node_alloc:1156,tune_node_split:1156,tune_step:[933,1156],tupl:[15,16,17,18,19,40,41,43,395,396,398,852,853,855,875,877,878,879,880,886,887,888,889,890,931,932,1007,1023,1039,1040,1083,1101,1156,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1214,1219,1221,1222,1223,1224,1225,1226,1227],tutori:43,two:[40,41,852,854,875,876,877,1007,1010,1014,1026,1062,1090,1126,1129],type:[15,18,40,41,42,43,59,401,402,446,447,852,853,854,855,857,858,860,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,884,885,888,889,890,892,910,911,917,933,945,946,947,948,960,961,965,977,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1008,1010,1013,1022,1024,1034,1037,1038,1040,1049,1056,1068,1069,1070,1075,1089,1099,1102,1103,1109,1114,1136,1144,1156,1256,1264,1266,1267,1269,1270,1272,1285,1286,1299],types_to_iteratively_nest:[40,41,42],uint8:[1119,1121,1125],uint8_img_to_float_img:1119,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[860,862],underwai:43,unecessari:43,unfairli:43,unif:1156,unifi:[40,41,933,962,963,964,965,977,1156,1256],uniform:[40,41,1212,1213,1215,1216,1264,1266,1267,1270,1271],uniformli:[1212,1214,1216],unify_arrai:1156,unify_it:1156,unify_nest:1156,union:[15,18,19,40,41,43,395,396,398,399,401,402,852,853,854,855,856,857,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,877,878,879,880,881,882,884,885,886,887,888,889,890,892,910,911,917,931,932,933,951,956,957,958,959,977,978,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1008,1009,1010,1012,1013,1014,1015,1017,1019,1020,1021,1022,1023,1025,1026,1027,1028,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1046,1048,1049,1050,1057,1058,1059,1060,1062,1063,1064,1065,1068,1069,1070,1073,1074,1075,1076,1077,1082,1083,1084,1085,1088,1090,1091,1093,1094,1095,1096,1098,1099,1100,1101,1102,1156,1200,1201,1202,1208,1209],uniqu:[933,942,943,1152,1153,1154,1155,1156,1200,1204],unique_kwarg:1156,unit:[43,933,1136,1137,1139,1156,1229,1230,1231,1232],unitari:[875,877],unless:[1007,1068,1070,1102],unlik:[933,1156],unnorm:[1212,1213],unpack:[1007,1098],unrol:[1237,1247],unset:1299,unset_debug_mod:44,unset_default_devic:933,unset_default_dtyp:983,unset_default_float_dtyp:983,unset_default_int_dtyp:983,unset_framework:[59,1299],unset_with_grad:1103,unstack:[40,41,135,300,448,581,714,1007],until:43,unus:[931,932],updat:[40,41,448,474,475,933,942,1007,1054,1076,1077,1103,1105,1106,1108,1110,1111,1112,1152,1153,1154,1156,1200,1205,1206,1210,1211,1237,1247,1256,1257,1262,1263,1289,1290,1291,1292,1293,1294,1299,1302],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1212,1216],upper_depth:[1285,1286],upstream:43,usabl:[1256,1302],usag:[933,977,1156],use:[40,41,42,43,497,933,942,943,968,980,1007,1073,1086,1087,1126,1131,1156,1237,1248,1254,1255,1256,1287,1288,1299,1302],used:[40,41,43,497,875,876,933,942,972,975,976,982,983,994,1007,1044,1045,1061,1070,1076,1077,1078,1079,1102,1103,1110,1111,1126,1129,1152,1153,1154,1155,1156,1200,1209,1273,1284,1289,1291,1292,1298,1299],used_dev:[933,942],used_mem_on_dev:933,used_mem_on_nod:1156,used_node_str:1156,used_node_strs_dict:1156,useful:[40,41,933,977,1156,1237,1246,1256,1299],user:[1256,1273,1284,1285,1286,1299,1302],uses:1256,using:[40,41,43,1103,1105,1106,1200,1203,1207,1219,1220,1237,1245,1249,1256,1273,1281,1298,1299,1302],util:[933,966,1156],utility_funct:[888,889,890],v_with_top_v_key_chain:[1285,1286],val:[40,41,448,465,466,467,892,927,1007,1052,1053,1054,1078,1079],valid:[888,889,890,983,988,1007,1086,1087,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],valid_dtyp:983,valu:[40,41,448,860,863,868,869,875,877,878,881,882,884,885,886,887,892,910,911,933,945,976,977,1007,1008,1010,1012,1019,1020,1021,1023,1024,1030,1034,1039,1040,1041,1042,1057,1059,1060,1063,1065,1072,1073,1074,1075,1076,1077,1078,1079,1080,1096,1099,1100,1101,1103,1107,1110,1119,1125,1133,1134,1135,1136,1145,1146,1147,1152,1153,1154,1156,1200,1204,1205,1206,1210,1211,1212,1215,1216,1219,1221,1223,1237,1248,1249,1254,1255,1273,1284,1287,1288,1289,1291],value_is_nan:1007,vanilla:[1152,1154],var_shap:1264,variabl:[15,16,17,18,19,40,41,349,481,617,779,1007,1016,1052,1053,1054,1055,1056,1089,1103,1106,1107,1108,1109,1110,1111,1112,1114,1117,1152,1153,1154,1155,1237,1248,1254,1255,1262,1263,1264,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],variable_data:[481,779,1103],varianc:[40,41,1219,1227,1302],varieti:1299,variou:[43,1256],vector:[40,41,490,493,875,877,878,1007,1021,1026,1126,1132,1237,1246,1273,1283],vector_norm:[40,41,102,230,420,547,679,875],vector_to_skew_symmetric_matrix:[174,358,490,626,789,1126],verbos:1301,veri:[43,1256],verifi:43,version:43,via:[1200,1201,1208,1299],view:[1119,1124],vision:1256,visual:1299,volum:[1237,1242],vw_tm1:[1103,1106,1110],wai:[1299,1302],wait:[40,41,42,43],want:[43,1256,1299,1302],warn:[59,66,67,68,69,70],warp:[486,487,1119,1120],watch:1298,websit:43,weight:[1103,1105,1106,1108,1110,1111,1112,1237,1246,1247,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1289,1291,1292],weight_initi:[1273,1274,1275,1276,1277,1278,1279,1280,1282,1283],weights_path:[1285,1286],well:[40,41,1007,1048],were:[40,41,1156],what:[43,1256],when:[40,41,42,43,875,877,933,1007,1018,1087,1100,1156,1256,1285,1286,1299,1302],where:[40,41,43,300,448,714,860,870,875,877,888,889,890,892,917,1007,1010,1017,1019,1023,1036,1050,1057,1068,1101,1200,1201,1208,1212,1213],wherea:43,wherebi:[1200,1209],whether:[15,18,19,40,41,42,860,867,888,889,890,931,932,933,951,964,968,972,977,980,982,983,993,997,998,999,1006,1007,1009,1014,1015,1027,1030,1035,1039,1046,1048,1051,1055,1056,1061,1082,1089,1098,1099,1103,1106,1107,1108,1109,1110,1111,1112,1114,1152,1153,1154,1155,1156,1200,1201,1202,1204,1208,1209,1212,1213,1229,1230,1237,1245,1256,1262,1263,1273,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294],which:[40,41,42,43,497,852,853,854,855,856,857,858,875,876,878,879,880,881,882,884,885,886,887,888,889,890,931,932,933,942,943,951,956,957,958,959,962,963,964,965,967,969,973,975,976,977,983,988,993,997,1006,1007,1010,1013,1022,1024,1026,1027,1028,1030,1040,1041,1042,1043,1049,1050,1058,1059,1060,1067,1068,1069,1070,1071,1073,1076,1077,1084,1088,1098,1100,1102,1103,1106,1107,1108,1110,1111,1112,1114,1116,1117,1119,1121,1126,1129,1136,1141,1156,1200,1204,1205,1206,1210,1211,1212,1213,1214,1215,1216,1219,1221,1222,1223,1224,1225,1226,1227,1229,1234,1237,1248,1249,1256,1262,1263,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1295,1296,1298,1299],whilst:43,whitespac:[40,41,42],who:43,whose:[43,852,854,860,861,864,865,875,876,879,880,892,910,917,1007,1013,1018,1219,1220,1221,1222,1223,1225,1227],why:[1256,1257],width:[1119,1124],wiki:1302,wikipedia:1302,window:[1119,1124,1237,1238,1239,1240,1241,1242,1243,1244,1273,1274,1275,1276,1277,1278,1279,1280],wise:[40,41,43,860,862,868,869,872,892,910,911,917,1007,1019,1034,1037,1038,1063,1065,1075,1103,1106,1108,1110,1112,1133,1134,1135,1136,1137,1139,1140,1141,1144,1145,1146,1147,1148,1150,1229,1230,1231,1232,1233,1234,1235,1236],wish:1299,with_bia:[1273,1283],with_cal:[1007,1030],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1103,1113],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1156,with_partial_v:[1285,1286],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,448,476,1007,1084,1156],with_to_kv_fn:[1273,1284],with_to_out_fn:[1273,1284],with_to_q_fn:[1273,1284],within:[15,18,19,43,875,877,1007,1010,1212,1216],without:[40,41,43,1007,1072,1074,1080,1200,1202,1299],wonder:1256,word:[15,16,17,1007,1010,1212,1216,1262,1263],work:[43,1298],worker:[933,942,943,1156],worker_class:[933,942,943,1156],worker_kwarg:1156,would:[43,1229,1234,1256,1299,1302],wrap:[15,40,41,42,43,446,448,481,486,490,494,495,497,1007,1018,1103,1117,1256],wrapper:43,write:[40,41,43,1256,1257,1302],written:[43,1256,1302],ws_new:[1103,1106,1108,1110,1111,1112],x1_i:[860,862,868,869,1007,1034,1136,1144],x2_i:[860,862,868,869,1007,1034,1136,1144],x_feat_dim:[1237,1248],x_i:[860,861,863,864,865,866,867,871,872,873],x_in:[1256,1298],x_inv:[1126,1128],x_max:[448,1007,1019],x_min:[448,1007,1019],x_sub:1156,xkk:1302,xkkm1:1302,xkm1km1:1302,xs0:1156,xs_t:1156,year:[1256,1302],yet:[1200,1209,1302],yield:[1007,1100],you:[43,1256,1298,1299,1302],your:[1256,1257,1298,1299,1302],your_awesome_project:1299,yourself:[43,1256],yourslef:43,youtub:43,zero:[40,41,77,212,395,522,654,852,854,860,872,875,878,888,889,890,1007,1023,1068,1070,1076,1077,1101,1102,1103,1105,1106,1110,1111,1237,1245,1256,1264,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1289,1290,1291,1292],zero_pad:[300,448,581,714,1007],zeros_lik:[135,300,448,581,714,1007],zip:1156,zk_e:1302},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1030,"function":[77,81,86,101,106,108,110,111,113,115,212,216,221,229,234,236,238,239,241,242,395,399,404,419,424,426,428,429,431,433,522,526,531,546,551,553,555,556,558,560,654,658,663,678,683,685,687,688,690,692,852,856,860,874,879,881,883,884,886,888],Ones:1269,Using:1299,abs:[301,582,715,1008],aco:[800,1137],acosh:[801,1138],activ:[196,382,508,646,830,1229,1259],adam:1290,adam_step:1105,adam_upd:1106,algebra:[102,174,230,358,420,490,547,626,679,789,875],all:[116,243,434,561,693,889],all_equ:1009,all_nested_indic:1201,ani:[117,244,435,562,694,890],api:[0,43,75,119,210,246,393,437,520,564,652,696,850],arang:[136,302,449,583,716,1010],arg_nam:1011,argmax:[109,237,427,554,686,882],argmin:[137,450,584,717,1012],args_to_ivi:16,args_to_n:17,argsort:[112,240,430,557,689,885],arithmet:[1,120,247,438,565,697],arrai:[0,3,43,75,118,119,121,138,210,245,246,248,255,303,393,436,437,439,451,520,563,564,566,585,652,695,696,698,718,850,892,1013],array_equ:[304,719,1014],arrays_equ:1015,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[802,1139],asinh:[87,405,532,664,861],assert_supports_inplac:1016,atan2:[804,1141],atan:[803,1140],atanh:[805,1142],attribut:[5,122,249,440,567,699],backend:[43,73],bilinear_resampl:[171,355,487,623,786,1120],binary_cross_entropi:1251,bitwis:[7,123,250,441,568,700],bitwise_and:[88,222,406,533,665,862],broadcast_to:[305,720,1017],builder:51,builtin:[118,245,255,436,563,695,892],builtin_ab:[256,893],builtin_add:[257,894],builtin_and:[258,895],builtin_bool:[259,896],builtin_contain:[260,897],builtin_deepcopi:[261,898],builtin_dir:[262,899],builtin_eq:[263,900],builtin_float:[264,901],builtin_floordiv:[265,902],builtin_g:[266,903],builtin_getattr:[267,904],builtin_getattribut:[268,905],builtin_getitem:[269,906],builtin_gt:[270,907],builtin_int:[271,908],builtin_invert:[272,909],builtin_l:[273,910],builtin_lt:[274,570,702,911],builtin_mul:[275,912],builtin_n:[276,913],builtin_neg:[277,914],builtin_or:[278,915],builtin_po:[279,916],builtin_pow:[280,917],builtin_radd:[281,918],builtin_rand:[282,919],builtin_rfloordiv:[283,920],builtin_rmul:[284,921],builtin_ror:[285,922],builtin_rpow:[286,923],builtin_rsub:[287,924],builtin_rtruediv:[288,925],builtin_rxor:[289,926],builtin_setitem:[290,927],builtin_sub:[291,928],builtin_truediv:[292,929],builtin_xor:[293,930],cache_fn:1018,cast:[139,306,452,586,721,987],ceil:[89,223,407,534,666,863],choleski:[790,1127],choose_random_framework:61,citat:1256,clear_framework_stack:62,clear_mem_on_dev:[708,949],clip:[307,722,1019],clip_matrix_norm:1020,clip_vector_norm:1021,clone:1171,clone_arrai:1172,clone_it:1173,clone_nest:1174,clonedit:1158,cloneditem:1157,clonednest:1159,closest_valid_dtyp:988,code:1302,comparison:[9,124,251,442,569,701],compil:[308,453,723,931,932],concaten:[140,309,454,587,724,1022],constant:[76,211,394,521,653,851],constant_pad:[310,588,725,1023],contain:[40,41],container_typ:[726,1024],content:1256,contribut:43,conv1d:[202,385,512,842,1238,1274],conv1d_transpos:[203,386,513,843,1239],conv1dtranspos:1275,conv2d:[204,387,514,648,844,1240,1276],conv2d_transpos:[205,388,515,845,1241],conv2dtranspos:1277,conv3d:[206,389,516,649,846,1242,1278],conv3d_transpos:[207,390,517,847,1243],conv3dtranspos:1279,convers:15,convert:[198,838,1262],convert_dtyp:989,copy_arrai:[727,1025],copy_nest:1202,core:[127,254,445,573,705,891],cos:[90,408,535,667,864],cosh:[91,409,536,668,806,865,1143],cprint:1301,creat:43,creation:[77,212,395,522,654,852],cross:[311,728,1026],cross_entropi:1252,cumprod:[141,312,455,729,1027],cumsum:[730,1028],current_framework:63,current_framework_str:[731,1029],data:[81,85,216,220,399,403,526,530,658,662,856,859],debug_mod:45,debugg:44,default_devic:950,default_dtyp:990,default_float_dtyp:991,default_int_dtyp:992,default_nod:1175,depthwise_conv2d:[208,391,518,650,848,1244],depthwiseconv2d:1280,design:43,dev:[130,296,576,709,951],dev_clon:952,dev_clone_arrai:953,dev_clone_it:954,dev_clone_nest:955,dev_dist:956,dev_dist_arrai:957,dev_dist_it:958,dev_dist_nest:959,dev_from_str:[131,297,577,710,960],dev_to_str:[132,298,578,711,961],dev_unifi:962,dev_unify_arrai:963,dev_unify_it:964,dev_unify_nest:965,dev_util:966,devclonedit:936,devcloneditem:935,devclonednest:937,devdistit:939,devdistitem:938,devdistnest:940,devic:[20,128,294,446,574,706,933],devmapp:942,devmappermultiproc:943,diagon:[103,231,421,548,680,876],distribute_nest:1176,divid:1144,document:1256,dropout:[1245,1281],dtype:[142,313,456,589,732,983,993],dtype_bit:[143,314,457,590,733,994],dtype_from_str:[144,315,458,591,734,995],dtype_to_str:[145,316,459,592,735,996],ecosystem:52,einops_rearrang:1031,einops_reduc:1032,einops_repeat:1033,einsum:[188,373,500,638,822,1220],elementwis:[86,221,404,531,663,860],equal:[92,410,537,669,1034],erf:[496,807,1145],execute_with_gradi:[168,350,482,618,780,1107],exist:1035,exp:[808,1146],expand_dim:[317,736,1036],finfo:[83,218,401,528,660,857],firstlayersiren:1266,flip:[107,235,425,552,684,880],float_img_to_uint8_img:1121,floor:[318,737,1037],floormod:[319,738,1038],fomaml_step:1153,fork:43,fourier_encod:1039,framework:59,full:[146,320,460,593,739,1040],func:72,gather:[147,321,461,594,740,1041],gather_nd:[148,322,462,595,741,1042],geglu:1260,gelu:[383,509,831,1230,1261],gener:[22,135,300,448,581,714,1007],get_all_arrays_in_memori:1043,get_all_arrays_on_dev:967,get_framework:64,get_min_bas:1044,get_min_denomin:1045,get_num_dim:[742,1046],get_referrers_recurs:1047,glorotuniform:1267,gpu_is_avail:[968,1177],gradient:[24,167,349,481,617,779,1103],gradient_descent_upd:1108,gradient_imag:[172,356,488,624,787,1122],gym:53,handler:59,has_nan:1048,ident:[149,323,463,596,743,1049],iinfo:[84,219,402,529,661,858],imag:[26,170,354,486,622,785,1119],index_nest:1203,indices_wher:[150,324,464,744,1050],initi:1264,inplac:[11,125,252,443,571,703],inplace_arrays_support:1051,inplace_decr:[151,325,465,597,745,1052],inplace_incr:[152,326,466,598,746,1053],inplace_upd:[153,327,467,599,747,1054],inplace_variables_support:1055,inv:[791,1128],invalid_dtyp:997,is_arrai:[154,328,468,600,748,1056],is_float_dtyp:998,is_int_dtyp:999,is_vari:[169,351,483,619,781,1109],isfinit:[93,224,411,538,670,866],isinf:[329,601,749,1057],isnan:[94,225,412,539,671,867],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,849,1298,1299,1302],ivymodul:[199,839],jax:74,keep:43,lamb:1291,lamb_upd:1110,lar:1292,lars_upd:1111,layer:[201,384,511,647,841,1237,1273],layer_norm:1255,layernorm:1288,leaky_relu:[832,1231],less:[95,226,413,540,672,868],less_equ:[96,414,541,673,869],linalg:[28,1126],linear:[102,174,230,358,420,490,547,626,679,789,875,1246,1283],linear_resampl:[155,330,469,602,750,1058],linspac:[156,331,470,603,751,1059],list:43,log1p:[97,415,542,674,870],log2:[98,416,543,675,871],log:[809,1147],logic:[30,178,363,494,630,796,1133],logical_and:[364,797,1134],logical_not:[99,227,417,544,676,872],logical_or:[365,798,1135],logspac:[157,332,471,604,752,1060],loss:1250,lstm:1282,lstm_updat:1247,maml_step:1154,manipul:[106,234,424,551,683,879],map:1204,map_nest_at_index:1205,map_nest_at_indic:1206,match_kwarg:1061,math:[32,179,366,495,631,799,1136],matmul:[333,605,753,1062],matrix_norm:[175,359,491,627,792,1129],maximum:[754,1063],mech:54,memori:55,meshgrid:[334,755,1064],meta:[34,1152],method:[101,229,419,546,678,874],min:[114,432,559,691,887],minimum:[756,1065],model:56,modul:[1285,1286,1298],multi:1156,multi_head_attent:1248,multi_index_nest:1207,multidevcontain:42,multidevit:946,multidevitem:945,multidevnest:947,multiheadattent:1284,multinodeit:1162,multinodeitem:1161,multinodenest:1163,multinomi:[181,368,498,633,815,1213],multiprocess:[757,1066],mxnet:209,nativ:1298,nest:1200,nested_indices_wher:1208,nested_map:1209,network:1298,next:1256,node:[1156,1178],node_dist:1179,node_dist_arrai:1180,node_dist_it:1181,node_str:1182,node_to_str:1183,node_util:1184,nodedistit:1165,nodedistitem:1164,nodedistnest:1166,nodemapp:1168,nodemappermultiproc:1169,norm:[1254,1287],num_arrays_in_memori:1067,num_arrays_on_dev:969,num_cpu_cor:970,num_gpu:[133,971,1185],numpi:392,nutshel:1256,one_hot:[158,472,606,758,1068],ones:[78,213,396,523,655,853,1069],ones_lik:[159,335,473,607,759,1070],oper:[1,3,7,9,11,13,43,120,121,123,124,125,126,247,248,250,251,252,253,438,439,441,442,443,444,565,566,568,569,571,572,697,698,700,701,703,704],optim:[1289,1293],optimizer_upd:1112,overview:1256,percent_used_mem_on_dev:972,percent_used_mem_on_nod:1186,pinv:[360,793,1130],portabl:1302,print_all_arrays_in_memori:1071,print_all_arrays_on_dev:973,profil:[129,295,447,575,707,948,1170],pull:43,queue_timeout:1072,randint:[182,369,634,816,1214],random:[36,180,367,497,632,814,1212],random_crop:1123,random_norm:[183,370,635,817,1215],random_uniform:[184,371,636,818,1216],reduce_max:[189,374,501,639,823,1221],reduce_mean:[190,375,502,640,824,1222],reduce_min:[191,376,503,641,825,1223],reduce_prod:[192,377,504,642,826,1224],reduce_std:[378,1225],reduce_sum:[193,379,505,643,827,1226],reduce_var:[194,380,506,644,828,1227],reduct:[38,187,372,499,637,821,1219],reflect:[13,126,253,444,572,704],relu:[833,1232],repeat:[336,760,1073],reptile_step:1155,request:43,reshap:[761,1074],robot:57,round:[337,762,1075],run:1299,scaled_dot_product_attent:1249,scatter_flat:[160,338,474,608,763,1076],scatter_nd:[161,339,475,609,764,1077],search:[108,236,426,553,685,881],seed:[185,819,1217],sequenti:[1295,1296],set:[110,238,428,555,687,883],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:974,set_default_dtyp:1000,set_default_float_dtyp:1001,set_default_int_dtyp:1002,set_default_nod:1187,set_exception_debug_mod:48,set_framework:65,set_min_bas:1078,set_min_denomin:1079,set_nest_at_index:1210,set_nest_at_indic:1211,set_queue_timeout:1080,set_split_factor:[975,1188],set_tmp_dir:1081,set_with_grad:1113,sgd:1294,shape:[765,1082],shape_to_tupl:1083,shuffl:[186,820,1218],sigmoid:[834,1233],signatur:[101,229,419,546,678,874],sin:[810,1148],sinh:[811,1149],siren:1270,softmax:[197,510,835,1234],softplu:[836,1235],sort:[111,239,429,556,688,884],sparse_cross_entropi:1253,split:[162,340,476,610,766,1084],split_factor:[976,1189],split_func_cal:[977,1190],sqrt:[100,228,418,545,677,873],squeez:[163,341,477,611,767,1085],stable_divid:1086,stable_pow:1087,stack:[342,768,1088],stack_imag:[173,357,489,625,788,1124],standard:43,statist:[113,241,431,558,690,886],stop_gradi:[352,484,620,782,1114],str_to_nod:1191,submodul:43,supports_inplac:1089,svd:[104,232,422,549,681,877],swapax:[612,769,1090],tan:[812,1150],tanh:[813,837,1151,1236],tensorflow:519,tile:[343,613,770,1091],tmp_dir:1092,to_dev:[134,299,579,712,978],to_ivi:18,to_ivy_modul:[200,840,1263],to_list:[771,1093],to_n:19,to_nod:1192,to_numpi:[772,1094],to_scalar:[773,1095],todo:43,torch:651,total_mem_on_dev:979,total_mem_on_nod:1193,tpu_is_avail:[580,713,980,1194],train:1298,trainabl:1298,transpos:[164,344,478,774,1096],tree:1256,tril:[79,214,397,524,656,854],try_else_non:1097,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,216,220,399,403,526,530,658,662,856,859],uint8_img_to_float_img:1125,unifi:1195,unify_arrai:1196,unify_it:1197,unify_nest:1198,unset_debug_mod:49,unset_default_devic:981,unset_default_dtyp:1003,unset_default_float_dtyp:1004,unset_default_int_dtyp:1005,unset_framework:71,unset_with_grad:1115,unstack:[165,345,479,614,775,1098],updat:43,used_mem_on_dev:982,used_mem_on_nod:1199,util:[115,242,433,560,692,888],valid_dtyp:1006,value_is_nan:1099,variabl:[353,485,621,783,1116],variable_data:[784,1117],vector_norm:[105,233,423,550,682,878],vector_to_skew_symmetric_matrix:[177,362,493,629,795,1132],verbos:1300,vision:58,where:[346,776,1100,1256],why:1302,with_grad:1118,wrapper:72,write:1299,your:43,zero:[80,215,398,525,657,855,1272],zero_pad:[347,615,777,1101],zeros_lik:[166,348,480,616,778,1102]}})