Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[839,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[440,0,0,"-"],general:[442,0,0,"-"],gradients:[475,0,0,"-"],image:[480,0,0,"-"],linear_algebra:[484,0,0,"-"],logic:[488,0,0,"-"],math:[489,0,0,"-"],random:[491,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[441,1,1,""],clear_mem_on_dev:[440,2,1,""],dev:[440,2,1,""],dev_from_str:[440,2,1,""],dev_to_str:[440,2,1,""],gpu_is_available:[440,2,1,""],num_gpus:[440,2,1,""],to_dev:[440,2,1,""],tpu_is_available:[440,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[441,3,1,""],start:[441,3,1,""],stop:[441,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[442,2,1,""],arange:[443,2,1,""],argmin:[444,2,1,""],array:[445,2,1,""],asarray:[442,2,1,""],astype:[442,2,1,""],cast:[446,2,1,""],clip:[442,2,1,""],compile:[447,2,1,""],concatenate:[448,2,1,""],constant_pad:[442,2,1,""],container_types:[442,2,1,""],copy_array:[442,2,1,""],cumprod:[449,2,1,""],current_framework_str:[442,2,1,""],dtype:[450,2,1,""],dtype_bits:[451,2,1,""],dtype_from_str:[452,2,1,""],dtype_to_str:[453,2,1,""],equal:[442,2,1,""],floor:[442,2,1,""],floormod:[442,2,1,""],full:[454,2,1,""],gather:[455,2,1,""],gather_nd:[456,2,1,""],get_num_dims:[442,2,1,""],identity:[457,2,1,""],indices_where:[458,2,1,""],inplace_arrays_supported:[442,2,1,""],inplace_decrement:[459,2,1,""],inplace_increment:[460,2,1,""],inplace_update:[461,2,1,""],inplace_variables_supported:[442,2,1,""],is_array:[462,2,1,""],linear_resample:[463,2,1,""],linspace:[464,2,1,""],logspace:[465,2,1,""],matmul:[442,2,1,""],meshgrid:[442,2,1,""],multiprocessing:[442,2,1,""],one_hot:[466,2,1,""],ones_like:[467,2,1,""],round:[442,2,1,""],scatter_flat:[468,2,1,""],scatter_nd:[469,2,1,""],shape:[442,2,1,""],split:[470,2,1,""],squeeze:[471,2,1,""],to_list:[442,2,1,""],to_numpy:[442,2,1,""],to_scalar:[442,2,1,""],transpose:[472,2,1,""],unstack:[473,2,1,""],where:[442,2,1,""],zero_pad:[442,2,1,""],zeros_like:[474,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[476,2,1,""],is_variable:[477,2,1,""],stop_gradient:[478,2,1,""],variable:[479,2,1,""],variable_data:[475,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[481,2,1,""],gradient_image:[482,2,1,""],stack_images:[483,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[485,2,1,""],qr:[486,2,1,""],vector_to_skew_symmetric_matrix:[487,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[490,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[492,2,1,""],randint:[491,2,1,""],random_normal:[491,2,1,""],random_uniform:[491,2,1,""],seed:[491,2,1,""],shuffle:[491,2,1,""]},"ivy.functional.ivy":{array_api:[840,0,0,"-"],core:[879,0,0,"-"],nn:[1216,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[841,0,0,"-"],creation_functions:[842,0,0,"-"],data_type_functions:[846,0,0,"-"],data_types:[849,0,0,"-"],elementwise_functions:[850,0,0,"-"],function_and_method_signatures:[863,0,0,"-"],linear_algebra:[864,0,0,"-"],manipulation_functions:[868,0,0,"-"],searching_functions:[870,0,0,"-"],set_functions:[872,0,0,"-"],sorting_functions:[873,0,0,"-"],statistical_functions:[875,0,0,"-"],utility_functions:[876,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[841,4,1,""],nan:[841,4,1,""],pi:[841,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[843,2,1,""],tril:[844,2,1,""],zeros:[845,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[847,2,1,""],iinfo:[848,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[851,2,1,""],bitwise_and:[852,2,1,""],ceil:[853,2,1,""],cos:[854,2,1,""],cosh:[855,2,1,""],isfinite:[856,2,1,""],isnan:[857,2,1,""],less:[858,2,1,""],log1p:[859,2,1,""],log2:[860,2,1,""],logical_not:[861,2,1,""],sqrt:[862,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[865,2,1,""],svd:[866,2,1,""],vector_norm:[867,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[869,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[871,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[874,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[877,2,1,""],any:[878,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[880,0,0,"-"],compilation:[919,0,0,"-"],device:[921,0,0,"-"],dtype:[971,0,0,"-"],general:[995,0,0,"-"],gradients:[1091,0,0,"-"],image:[1107,0,0,"-"],linalg:[1114,0,0,"-"],logic:[1121,0,0,"-"],math:[1124,0,0,"-"],meta:[1140,0,0,"-"],multi_node:[1144,0,0,"-"],nest:[1188,0,0,"-"],random:[1200,0,0,"-"],reductions:[1207,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[881,2,1,""],builtin_add:[882,2,1,""],builtin_and:[883,2,1,""],builtin_bool:[884,2,1,""],builtin_contains:[885,2,1,""],builtin_deepcopy:[886,2,1,""],builtin_dir:[887,2,1,""],builtin_eq:[888,2,1,""],builtin_float:[889,2,1,""],builtin_floordiv:[890,2,1,""],builtin_ge:[891,2,1,""],builtin_getattr:[892,2,1,""],builtin_getattribute:[893,2,1,""],builtin_getitem:[894,2,1,""],builtin_gt:[895,2,1,""],builtin_int:[896,2,1,""],builtin_invert:[897,2,1,""],builtin_le:[898,2,1,""],builtin_lt:[899,2,1,""],builtin_mul:[900,2,1,""],builtin_ne:[901,2,1,""],builtin_neg:[902,2,1,""],builtin_or:[903,2,1,""],builtin_pos:[904,2,1,""],builtin_pow:[905,2,1,""],builtin_radd:[906,2,1,""],builtin_rand:[907,2,1,""],builtin_rfloordiv:[908,2,1,""],builtin_rmul:[909,2,1,""],builtin_ror:[910,2,1,""],builtin_rpow:[911,2,1,""],builtin_rsub:[912,2,1,""],builtin_rtruediv:[913,2,1,""],builtin_rxor:[914,2,1,""],builtin_setitem:[915,2,1,""],builtin_sub:[916,2,1,""],builtin_truediv:[917,2,1,""],builtin_xor:[918,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[920,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[921,1,1,""],DevClonedItem:[923,1,1,""],DevClonedIter:[924,1,1,""],DevClonedNest:[925,1,1,""],DevDistItem:[926,1,1,""],DevDistIter:[927,1,1,""],DevDistNest:[928,1,1,""],DevManager:[921,1,1,""],DevMapper:[930,1,1,""],DevMapperMultiProc:[931,1,1,""],MultiDev:[921,1,1,""],MultiDevItem:[933,1,1,""],MultiDevIter:[934,1,1,""],MultiDevNest:[935,1,1,""],Profiler:[936,1,1,""],clear_mem_on_dev:[937,2,1,""],default_device:[938,2,1,""],dev:[939,2,1,""],dev_clone:[940,2,1,""],dev_clone_array:[941,2,1,""],dev_clone_iter:[942,2,1,""],dev_clone_nest:[943,2,1,""],dev_dist:[944,2,1,""],dev_dist_array:[945,2,1,""],dev_dist_iter:[946,2,1,""],dev_dist_nest:[947,2,1,""],dev_from_str:[948,2,1,""],dev_to_str:[949,2,1,""],dev_unify:[950,2,1,""],dev_unify_array:[951,2,1,""],dev_unify_iter:[952,2,1,""],dev_unify_nest:[953,2,1,""],dev_util:[954,2,1,""],get_all_arrays_on_dev:[955,2,1,""],gpu_is_available:[956,2,1,""],num_arrays_on_dev:[957,2,1,""],num_cpu_cores:[958,2,1,""],num_gpus:[959,2,1,""],percent_used_mem_on_dev:[960,2,1,""],print_all_arrays_on_dev:[961,2,1,""],set_default_device:[962,2,1,""],set_split_factor:[963,2,1,""],split_factor:[964,2,1,""],split_func_call:[965,2,1,""],to_dev:[966,2,1,""],total_mem_on_dev:[967,2,1,""],tpu_is_available:[968,2,1,""],unset_default_device:[969,2,1,""],used_mem_on_dev:[970,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[921,3,1,""],da_tune_step:[921,3,1,""],dim_size:[921,3,1,""],ds_tune_step:[921,3,1,""],map:[921,3,1,""],repeated_config_check:[921,3,1,""],tune_step:[921,3,1,""],tuned:[921,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[930,3,1,""],map:[930,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[933,3,1,""],items:[933,3,1,""],keys:[933,3,1,""],shape:[933,3,1,""],values:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[934,3,1,""],at_dev:[934,3,1,""],at_devs:[934,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[935,3,1,""],at_dev:[935,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[936,3,1,""],start:[936,3,1,""],stop:[936,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[971,1,1,""],DefaultFloatDtype:[971,1,1,""],DefaultIntDtype:[971,1,1,""],astype:[971,2,1,""],cast:[975,2,1,""],closest_valid_dtype:[976,2,1,""],convert_dtype:[977,2,1,""],default_dtype:[978,2,1,""],default_float_dtype:[979,2,1,""],default_int_dtype:[980,2,1,""],dtype:[981,2,1,""],dtype_bits:[982,2,1,""],dtype_from_str:[983,2,1,""],dtype_to_str:[984,2,1,""],invalid_dtype:[985,2,1,""],is_float_dtype:[986,2,1,""],is_int_dtype:[987,2,1,""],set_default_dtype:[988,2,1,""],set_default_float_dtype:[989,2,1,""],set_default_int_dtype:[990,2,1,""],unset_default_dtype:[991,2,1,""],unset_default_float_dtype:[992,2,1,""],unset_default_int_dtype:[993,2,1,""],valid_dtype:[994,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1018,2,1,""],abs:[996,2,1,""],all_equal:[997,2,1,""],arange:[998,2,1,""],arg_names:[999,2,1,""],argmin:[1000,2,1,""],array:[1001,2,1,""],array_equal:[1002,2,1,""],arrays_equal:[1003,2,1,""],asarray:[995,2,1,""],assert_supports_inplace:[1004,2,1,""],broadcast_to:[1005,2,1,""],cache_fn:[1006,2,1,""],clip:[1007,2,1,""],clip_matrix_norm:[1008,2,1,""],clip_vector_norm:[1009,2,1,""],concatenate:[1010,2,1,""],constant_pad:[1011,2,1,""],container_types:[1012,2,1,""],copy_array:[1013,2,1,""],cross:[1014,2,1,""],cumprod:[1015,2,1,""],cumsum:[1016,2,1,""],current_framework_str:[1017,2,1,""],einops_rearrange:[1019,2,1,""],einops_reduce:[1020,2,1,""],einops_repeat:[1021,2,1,""],equal:[1022,2,1,""],exists:[1023,2,1,""],expand_dims:[1024,2,1,""],floor:[1025,2,1,""],floormod:[1026,2,1,""],fourier_encode:[1027,2,1,""],full:[1028,2,1,""],gather:[1029,2,1,""],gather_nd:[1030,2,1,""],get_all_arrays_in_memory:[1031,2,1,""],get_min_base:[1032,2,1,""],get_min_denominator:[1033,2,1,""],get_num_dims:[1034,2,1,""],get_referrers_recursive:[1035,2,1,""],has_nans:[1036,2,1,""],identity:[1037,2,1,""],indices_where:[1038,2,1,""],inplace_arrays_supported:[1039,2,1,""],inplace_decrement:[1040,2,1,""],inplace_increment:[1041,2,1,""],inplace_update:[1042,2,1,""],inplace_variables_supported:[1043,2,1,""],is_array:[1044,2,1,""],isinf:[1045,2,1,""],linear_resample:[1046,2,1,""],linspace:[1047,2,1,""],logspace:[1048,2,1,""],match_kwargs:[1049,2,1,""],matmul:[1050,2,1,""],maximum:[1051,2,1,""],meshgrid:[1052,2,1,""],minimum:[1053,2,1,""],multiprocessing:[1054,2,1,""],num_arrays_in_memory:[1055,2,1,""],one_hot:[1056,2,1,""],ones:[1057,2,1,""],ones_like:[1058,2,1,""],print_all_arrays_in_memory:[1059,2,1,""],queue_timeout:[1060,2,1,""],repeat:[1061,2,1,""],reshape:[1062,2,1,""],round:[1063,2,1,""],scatter_flat:[1064,2,1,""],scatter_nd:[1065,2,1,""],set_min_base:[1066,2,1,""],set_min_denominator:[1067,2,1,""],set_queue_timeout:[1068,2,1,""],set_tmp_dir:[1069,2,1,""],shape:[1070,2,1,""],shape_to_tuple:[1071,2,1,""],split:[1072,2,1,""],squeeze:[1073,2,1,""],stable_divide:[1074,2,1,""],stable_pow:[1075,2,1,""],stack:[1076,2,1,""],supports_inplace:[1077,2,1,""],swapaxes:[1078,2,1,""],tile:[1079,2,1,""],tmp_dir:[1080,2,1,""],to_list:[1081,2,1,""],to_numpy:[1082,2,1,""],to_scalar:[1083,2,1,""],transpose:[1084,2,1,""],try_else_none:[1085,2,1,""],unstack:[1086,2,1,""],value_is_nan:[1087,2,1,""],where:[1088,2,1,""],zero_pad:[1089,2,1,""],zeros_like:[1090,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1091,1,1,""],adam_step:[1093,2,1,""],adam_update:[1094,2,1,""],execute_with_gradients:[1095,2,1,""],gradient_descent_update:[1096,2,1,""],is_variable:[1097,2,1,""],lamb_update:[1098,2,1,""],lars_update:[1099,2,1,""],optimizer_update:[1100,2,1,""],set_with_grads:[1101,2,1,""],stop_gradient:[1102,2,1,""],unset_with_grads:[1103,2,1,""],variable:[1104,2,1,""],variable_data:[1105,2,1,""],with_grads:[1106,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1091,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1108,2,1,""],float_img_to_uint8_img:[1109,2,1,""],gradient_image:[1110,2,1,""],random_crop:[1111,2,1,""],stack_images:[1112,2,1,""],uint8_img_to_float_img:[1113,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1115,2,1,""],inv:[1116,2,1,""],matrix_norm:[1117,2,1,""],pinv:[1118,2,1,""],qr:[1119,2,1,""],vector_to_skew_symmetric_matrix:[1120,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1122,2,1,""],logical_or:[1123,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1125,2,1,""],acosh:[1126,2,1,""],asin:[1127,2,1,""],atan2:[1129,2,1,""],atan:[1128,2,1,""],atanh:[1130,2,1,""],cosh:[1131,2,1,""],divide:[1132,2,1,""],erf:[1133,2,1,""],exp:[1134,2,1,""],log:[1135,2,1,""],sin:[1136,2,1,""],sinh:[1137,2,1,""],tan:[1138,2,1,""],tanh:[1139,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1141,2,1,""],maml_step:[1142,2,1,""],reptile_step:[1143,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1144,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1189,2,1,""],copy_nest:[1190,2,1,""],index_nest:[1191,2,1,""],map:[1192,2,1,""],map_nest_at_index:[1193,2,1,""],map_nest_at_indices:[1194,2,1,""],multi_index_nest:[1195,2,1,""],nested_indices_where:[1196,2,1,""],nested_map:[1197,2,1,""],set_nest_at_index:[1198,2,1,""],set_nest_at_indices:[1199,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1201,2,1,""],randint:[1202,2,1,""],random_normal:[1203,2,1,""],random_uniform:[1204,2,1,""],seed:[1205,2,1,""],shuffle:[1206,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1208,2,1,""],reduce_max:[1209,2,1,""],reduce_mean:[1210,2,1,""],reduce_min:[1211,2,1,""],reduce_prod:[1212,2,1,""],reduce_std:[1213,2,1,""],reduce_sum:[1214,2,1,""],reduce_var:[1215,2,1,""]},"ivy.functional.ivy.nn":{activations:[1217,0,0,"-"],layers:[1225,0,0,"-"],losses:[1238,0,0,"-"],norms:[1242,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1218,2,1,""],leaky_relu:[1219,2,1,""],relu:[1220,2,1,""],sigmoid:[1221,2,1,""],softmax:[1222,2,1,""],softplus:[1223,2,1,""],tanh:[1224,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1226,2,1,""],conv1d_transpose:[1227,2,1,""],conv2d:[1228,2,1,""],conv2d_transpose:[1229,2,1,""],conv3d:[1230,2,1,""],conv3d_transpose:[1231,2,1,""],depthwise_conv2d:[1232,2,1,""],dropout:[1233,2,1,""],linear:[1234,2,1,""],lstm_update:[1235,2,1,""],multi_head_attention:[1236,2,1,""],scaled_dot_product_attention:[1237,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1239,2,1,""],cross_entropy:[1240,2,1,""],sparse_cross_entropy:[1241,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1243,2,1,""]},"ivy.stateful":{activations:[1247,0,0,"-"],converters:[1250,0,0,"-"],initializers:[1252,0,0,"-"],layers:[1261,0,0,"-"],module:[1273,0,0,"-"],norms:[1275,0,0,"-"],optimizers:[1277,0,0,"-"],sequential:[1283,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1248,1,1,""],GELU:[1249,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1248,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1249,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1251,2,1,""]},"ivy.stateful.initializers":{Constant:[1252,1,1,""],FirstLayerSiren:[1254,1,1,""],GlorotUniform:[1255,1,1,""],KaimingNormal:[1252,1,1,""],Ones:[1257,1,1,""],Siren:[1258,1,1,""],Uniform:[1252,1,1,""],Zeros:[1260,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1252,3,1,""],create_variables:[1252,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1260,3,1,""]},"ivy.stateful.layers":{Conv1D:[1262,1,1,""],Conv1DTranspose:[1263,1,1,""],Conv2D:[1264,1,1,""],Conv2DTranspose:[1265,1,1,""],Conv3D:[1266,1,1,""],Conv3DTranspose:[1267,1,1,""],DepthwiseConv2D:[1268,1,1,""],Dropout:[1269,1,1,""],LSTM:[1270,1,1,""],Linear:[1271,1,1,""],MultiHeadAttention:[1272,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1267,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1269,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1270,3,1,""],get_initial_state:[1270,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1271,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1272,3,1,""]},"ivy.stateful.module":{Module:[1274,1,1,""]},"ivy.stateful.module.Module":{__init__:[1274,3,1,""],build:[1274,3,1,""],build_mode:[1274,3,1,""],built:[1274,3,1,""],check_submod_rets:[1274,3,1,""],get_mod_key:[1274,3,1,""],mod_depth:[1274,3,1,""],mod_height:[1274,3,1,""],mod_with_top_mod_key_chain:[1274,3,1,""],save_weights:[1274,3,1,""],show_mod_in_top_mod:[1274,3,1,""],show_structure:[1274,3,1,""],show_v_in_top_v:[1274,3,1,""],sub_mods:[1274,3,1,""],track_submod_call_order:[1274,3,1,""],track_submod_rets:[1274,3,1,""],v_with_top_v_key_chains:[1274,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1276,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1276,3,1,""]},"ivy.stateful.optimizers":{Adam:[1278,1,1,""],LAMB:[1279,1,1,""],LARS:[1280,1,1,""],Optimizer:[1281,1,1,""],SGD:[1282,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],step:[1281,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.sequential":{Sequential:[1284,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1284,3,1,""]},"ivy.verbosity":{cprint:[1289,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1288,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1277,1278,1279],"02886":1244,"100":[1144,1244,1286],"141592653589793":841,"2021":1244,"2102":1244,"360":[1124,1136,1138],"718281828459045":841,"754":[841,846,847,850,862],"999":[1091,1093,1094,1098,1277,1278,1279],"abstract":[921,936,1244,1277,1281],"boolean":[40,41,850,852,861,921,956,968,971,985,994,995,997,1002,1003,1036,1038,1039,1043,1044,1045,1077,1087,1091,1097,1121,1122,1123,1140,1141,1142,1144],"break":43,"case":[15,18,19,40,41,42,43,850,851,853,854,855,860,862,921,960,967,970,995,998,1062,1064,1065,1114,1117,1119,1144,1188,1191,1195,1244,1261,1272,1273,1274,1277,1281,1290],"catch":[995,1018],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,440,441,846,848,921,923,924,925,926,927,928,930,931,933,934,935,936,948,949,971,995,999,1049,1091,1105,1144,1188,1190,1197,1238,1240,1241,1244,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],"default":[15,18,19,40,41,42,43,842,843,844,845,864,865,867,868,869,870,871,873,874,876,877,878,919,920,921,930,931,938,939,943,944,945,946,947,950,951,952,953,960,963,964,965,970,971,978,979,980,981,995,997,998,1000,1008,1009,1010,1011,1014,1015,1016,1027,1028,1029,1034,1036,1037,1046,1048,1049,1052,1054,1057,1060,1061,1064,1065,1068,1070,1072,1074,1075,1084,1086,1087,1091,1094,1096,1097,1098,1099,1100,1102,1106,1114,1117,1119,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1222,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],"final":[40,41,43,995,1027,1047,1048,1144,1261,1272,1287],"float":[40,41,42,43,841,842,843,845,846,847,850,851,853,854,855,860,862,864,867,880,899,905,921,930,931,954,960,963,967,970,971,979,986,995,998,1008,1009,1011,1027,1028,1032,1033,1048,1066,1067,1068,1074,1075,1091,1093,1094,1096,1098,1099,1100,1107,1109,1113,1124,1132,1140,1141,1142,1143,1144,1200,1203,1204,1217,1219,1225,1233,1236,1237,1238,1239,1240,1241,1242,1243,1261,1269,1272,1275,1276,1277,1278,1279,1280,1281,1282],"function":[15,40,41,43,393,394,395,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,841,843,844,845,847,848,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,869,871,874,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1247,1248,1249,1277,1280,1281,1282,1286,1287,1290],"import":[43,1244,1287,1290],"int":[40,41,42,43,392,393,394,395,491,842,843,844,845,846,847,848,864,865,867,868,869,870,871,873,874,876,877,878,880,899,905,919,920,921,943,944,945,946,947,950,951,952,953,958,959,965,971,980,982,987,995,1000,1005,1010,1011,1015,1016,1019,1020,1021,1024,1027,1028,1029,1034,1037,1046,1047,1048,1056,1057,1061,1062,1064,1065,1070,1071,1072,1073,1076,1078,1079,1084,1086,1089,1091,1093,1094,1098,1107,1111,1112,1114,1117,1140,1141,1142,1143,1144,1188,1197,1200,1201,1202,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1236,1238,1240,1241,1242,1243,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1275,1276],"long":[43,1225,1235],"new":[40,41,43,491,842,843,845,850,859,971,975,995,996,1005,1019,1020,1021,1024,1027,1028,1029,1030,1057,1062,1064,1065,1066,1067,1074,1075,1076,1091,1094,1096,1098,1099,1100,1107,1109,1111,1113,1124,1126,1130,1131,1137,1139,1144,1188,1198,1199,1200,1201,1242,1243,1244,1250,1251,1261,1271,1275,1276,1277,1278,1279,1280,1281,1282,1287,1290],"public":[995,1012],"return":[15,16,17,18,19,40,41,42,43,491,842,843,844,845,850,851,852,853,854,855,856,857,858,860,861,862,864,865,866,867,870,871,873,874,876,877,878,880,899,905,919,920,921,930,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,959,960,964,965,966,967,968,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1061,1062,1063,1064,1065,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1250,1251,1261,1270,1271,1277,1281,1286,1287,1290],"short":[43,1225,1235,1244,1290],"static":[40,41,919,920],"super":1144,"true":[40,41,42,442,447,475,478,491,492,850,856,857,861,864,866,867,870,871,873,874,876,877,878,919,920,921,995,997,1004,1006,1023,1027,1036,1038,1087,1088,1091,1094,1096,1097,1098,1099,1100,1102,1114,1117,1140,1141,1142,1143,1144,1188,1189,1196,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1225,1233,1238,1239,1240,1241,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],"try":[40,41,995,1085,1144],"var":[40,41,1140,1141,1142,1290],"while":[40,41,42,850,861,1144],AND:[850,852,876,877,1121,1122],But:1290,For:[43,850,851,853,854,855,860,862,995,998,1007,1076,1091,1097,1105,1114,1119,1124,1125,1244,1250,1251,1287,1290],Its:[1124,1128],NOT:[850,861],Not:841,One:[40,41,43,995,1020,1062,1200,1202,1290],Ones:[1244,1252],PRs:43,Such:[995,1012],That:1287,The:[15,16,17,18,19,40,41,42,43,842,844,850,851,852,853,854,855,856,857,858,860,861,862,864,865,866,867,868,869,873,874,876,877,878,880,899,905,919,920,921,930,931,937,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,960,963,964,965,966,967,970,971,975,976,977,982,983,984,985,994,995,998,1001,1002,1005,1006,1008,1009,1010,1011,1013,1014,1017,1018,1022,1027,1029,1030,1037,1040,1041,1042,1044,1046,1048,1050,1052,1054,1057,1058,1061,1062,1064,1065,1066,1067,1068,1071,1072,1073,1074,1075,1076,1079,1087,1090,1091,1093,1094,1096,1098,1099,1100,1102,1105,1107,1109,1111,1113,1114,1117,1119,1124,1125,1127,1128,1132,1133,1134,1135,1136,1138,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1287,1290],There:[43,1244,1287],These:[43,1244],Use:43,Used:[1188,1189,1196,1273,1274],Using:[1244,1245,1290],With:[40,41,870,871,1114,1117,1207,1209,1210,1211,1212,1213,1214,1215,1244,1286,1290],__array__:[995,1001],__call__:[1261,1272,1273,1274],__del__:1144,__dict__:[1144,1287],__enter__:1144,__exit__:1144,__getitem__:1144,__getstate__:1144,__init__:[40,41,42,43,59,60,82,214,396,397,440,441,521,651,921,922,929,930,931,932,933,934,935,936,971,972,973,974,1091,1092,1144,1148,1155,1244,1247,1248,1249,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],__iter__:1144,__len__:1144,__next__:1144,__pow__:43,__repr__:1144,_assign_vari:1286,_axi:1144,_base:[1188,1189,1196],_compute_node_da_ratio:1144,_compute_node_strs_da:1144,_concat_unify_arrai:1144,_counter:1144,_cur_framework:[43,1144],_da_direct:1144,_da_directions_flip:1144,_da_step_tim:1144,_da_tim:1144,_da_tune_count:1144,_data:1144,_delta_da_dim_s:1144,_delta_sf:1144,_dict:1144,_dim_siz:1144,_first_da_tune_step:1144,_first_ns_tune_step:1144,_fn:1144,_forward:[1244,1286],_get_kalman_param:1290,_get_prior:1290,_get_some_model:1290,_handle_flat_arrays_in_out:43,_index:[1188,1189,1196],_input_queu:1144,_length:1144,_max_depth:1144,_max_node_dim_step_ratio:1144,_max_node_dim_step_s:1144,_max_split_factor_step_s:1144,_mean_unify_arrai:1144,_min_bas:[995,1075,1242,1243,1275,1276],_min_denomin:[995,1074],_min_node_dim_s:1144,_min_sf_tune_step:1144,_min_unit_node_tune_step:1144,_model:1290,_native_wrapp:43,_node_mapp:1144,_node_percent_mem:1144,_node_str:1144,_node_str_da_ratio:1144,_node_strs_da:1144,_node_strs_kei:1144,_node_strs_n:1144,_node_util:1144,_ns_step_tim:1144,_ns_time:1144,_ns_tune_count:1144,_num_nod:1144,_num_work:1144,_observed_config:1144,_output_queu:1144,_paramet:1286,_percent_mem_inc_per_sf:1144,_percent_mem_inc_per_unit_da_dim:1144,_percent_util_inc_per_unit_da_dim:1144,_ret_fn:1144,_safety_factor:1144,_save_dir:1144,_shift_da_split:1144,_shift_n:1144,_slice:1144,_step:[1277,1281],_sum_unify_arrai:1144,_timeout:1144,_tune:1144,_tune_da:1144,_tune_n:1144,_tune_step:1144,_unit_da_tune_count:1144,_unroll_step:1290,_with_node_mappig:1144,_worker:1144,_worker_class:1144,_worker_fn:1144,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,921,930,936,1144,1273,1274,1277,1281],abil:1244,abl:[40,41],about:[846,847,848],abov:[43,842,844,864,865,1200,1202],above_height:[40,41],abs:[297,442,572,703,864,867,995,1144],absolut:[40,41,995,996],abstractmethod:1144,accept:[15,43,850,861,1244],access:[40,41,43,1287],accord:[40,41,846,847,995,1011,1029,1064,1065,1084,1089],accordingli:[864,867,876,877,878],accur:[59,396,440,441,921,933,934,935,936,971,1091,1252,1254,1255,1257,1258,1260],aco:[789,1124],acosh:[789,1124],across:[40,41,921,930,931,940,941,943,944,945,946,947,953,963,964,995,1000,1002,1003,1144,1188,1192],act:43,activ:[1218,1219,1220,1221,1222,1223,1224,1244,1248,1249],actual:1287,adam:[1091,1093,1094,1098,1244,1277,1279,1286],adam_step:1091,adam_upd:1091,adapt:[1091,1099,1277,1280],add:[40,41,43,1144,1238,1239,1240,1241,1242,1243,1244,1275,1276,1287],added:[43,995,1074,1075,1283,1284],adding:[43,995,1005],addit:[40,41,43,995,1019,1020,1021,1242,1243,1261,1271],addition:43,address:43,adher:43,adjac:[995,998],adopt:[43,995,1012],affect:[995,998],affin:[1275,1276],after:[850,862,995,1046,1091,1094,1095,1096,1098,1099,1100,1107,1108,1242,1243,1277,1278,1279,1280,1281,1282,1290],after_1:[995,1011,1089],after_n:[995,1011,1089],again:43,against:[40,41,870,871,1114,1117,1207,1209,1210,1211,1212,1213,1214,1215],agnost:[43,1244,1286,1287],aim:1290,algebra:1114,algorithm:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268,1290],align:[40,41,43,995,1005],aliv:[921,955,957,961,995,1031,1055,1059],all:[15,16,17,18,19,40,41,43,112,239,427,551,681,842,844,864,867,868,869,876,919,920,921,930,955,961,995,996,997,1002,1003,1012,1031,1037,1059,1073,1114,1119,1140,1141,1142,1143,1144,1188,1189,1190,1196,1197,1200,1201,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1235,1244,1287,1290],all_depth:[40,41],all_equ:995,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1188,all_tru:[40,41],alloc:[43,842,844,921,1144],allow:[995,1047,1048,1049,1273,1274],allow_dupl:[995,1049],alon:[921,960,970,1144,1244],along:[40,41,43,491,864,867,868,869,870,871,873,874,876,877,878,921,944,945,946,947,950,951,952,953,965,995,1010,1015,1016,1029,1046,1047,1048,1061,1072,1076,1079,1086,1114,1117,1140,1141,1142,1143,1144,1200,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],alongsid:[1286,1287],alpha:[1217,1219],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,850,853,921,1144],also:[40,41,43,995,998,1091,1094,1140,1141,1142,1143,1188,1189,1190,1196,1197,1225,1234,1244,1261,1271,1286],altern:1286,alwai:[40,41,43,1091,1097,1102],among:[40,41],amount:[921,967,1144,1244],angl:[850,855,1124,1125,1129],ani:[15,16,17,18,19,40,41,43,112,239,427,551,681,876,919,920,921,923,926,930,931,933,942,943,946,947,952,995,997,998,1001,1018,1019,1020,1021,1022,1023,1036,1044,1049,1074,1075,1091,1095,1144,1188,1189,1192,1196,1197,1198,1199,1200,1204,1244,1250,1251,1273,1274,1286,1287,1290],anoth:[40,41,43,971,977,1244],another_backend:43,anyth:[43,1290],anywai:43,apart:43,api:[1244,1245],appear:[43,995,1024],append:[40,41,864,865,1144],appli:[15,18,19,40,41,864,866,995,1019,1020,1021,1091,1098,1099,1121,1122,1123,1140,1141,1142,1188,1192,1195,1197,1217,1218,1219,1220,1221,1222,1223,1224,1225,1234,1236,1237,1242,1243,1244,1247,1248,1249,1275,1276],applic:[1188,1192,1197,1225,1236,1237,1244,1290],appropri:[870,871],approxim:[43,850,851,854,855,859,860,880,905,1217,1218],arang:[132,297,442,491,572,703,995,1047,1048],arbitrari:[40,41,921,950,951,953,1144],arc:[1124,1129],arcco:[1124,1125],arctan:[1124,1128],area:[850,851,1244],arg:[15,16,17,40,41,43,59,63,921,930,943,947,953,965,995,1019,1020,1021,1065,1144,1250,1251,1273,1274],arg_nam:995,arg_stateful_idx:[1273,1274],argmax:[106,233,421,545,675,870],argmin:[132,442,572,703,995],args_clon:1144,args_dist:1144,args_to_ivi:[15,1244],args_to_n:[15,1244],args_uni:1144,argsort:[109,236,424,548,678,873],argument:[15,16,17,18,19,40,41,42,43,59,63,919,920,921,930,931,943,947,953,995,998,999,1006,1018,1049,1065,1124,1125,1144,1188,1192,1250,1251,1273,1274],aris:[1244,1290],arithmet:[43,1207,1210,1213,1215],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:491,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,132,297,442,491,572,703,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878,899,905,921,939,940,941,944,945,946,947,950,951,952,953,955,957,961,965,966,971,975,981,986,987,995,996,997,998,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1034,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1048,1050,1051,1052,1053,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1070,1072,1073,1076,1077,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1093,1094,1097,1098,1102,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1188,1190,1197,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1261,1269,1270,1272,1277,1281,1286,1287],arrang:[995,1019],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878],array_api_methods_to_test:43,array_builtin:[43,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918],array_equ:[297,703,995],array_lik:[491,995,1001],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,995],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1244],arraywithgener:[22,1244],arraywithgradi:[24,1244],arraywithimag:[26,1244],arraywithlinalg:[28,1244],arraywithlog:[30,1244],arraywithmath:[32,1244],arraywithmeta:[34,1244],arraywithrandom:[36,1244],arraywithreduct:[38,1244],arriv:[40,41,42],articl:1244,arxiv:1244,as_arrai:[40,41,995,1034,1070],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[440,442,450,921,939,971,978,979,980,981],as_tensor:442,as_vari:[40,41],as_zero:[40,41],asarrai:[442,995],ascend:[873,874],asin:[789,1124],asinh:[86,401,525,655,850],aspect:[1107,1112],assert:[40,41,995,1004,1144],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:995,associ:[43,1114,1120],assum:[850,854,1287,1290],astyp:[442,971],asynchron:[40,41,42],at_dev:[40,42,921,934,935],at_kei:[40,41],at_key_chain:[40,41],at_nod:1144,atan2:[789,1124],atan:[789,1124],atanh:[789,1124],attent:[43,1225,1236,1237,1261,1272],attribut:[0,6,40,41,846,847,848,995,1058,1090],audienc:[1244,1287],author:1244,automat:43,avail:[40,41,43,921,956,958,959,968,995,1020,1144],averag:[1091,1093,1094,1098,1140,1141,1142,1207,1210],average_across_step:[1140,1141,1142],avoid:[43,921,1144,1287],axes:[40,41,43,442,472,484,485,864,867,868,869,870,871,876,877,878,921,965,995,1000,1011,1024,1078,1084,1089,1114,1117,1144,1207,1209,1210,1211,1212,1213,1214,1215],axes_length:[40,41,995,1019,1020,1021],axi:[40,41,442,444,448,449,455,463,464,465,470,471,473,864,865,867,868,869,870,871,873,874,876,877,878,921,923,926,933,944,945,946,947,950,951,952,953,965,995,1000,1010,1011,1014,1015,1016,1024,1029,1046,1047,1048,1061,1072,1073,1076,1078,1079,1086,1089,1144,1200,1206,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1238,1240,1241],axis0:[40,41,995,1078],axis1:[40,41,864,865,995,1078],axis2:[864,865],back:[43,1273,1274,1277,1281],backend:[15,17,19,40,41,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,921,956,959,968,971,977,985,994,995,1039,1043,1091,1094,1096,1098,1099,1100,1105,1144,1244,1245,1250,1251,1277,1278,1279,1280,1281,1282,1286,1287,1290],backend_nam:43,background:[1244,1287],backprop:1290,backward:[876,877,878,1286],band:[995,1027],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,440,441,442,465,850,859,860,880,905,921,923,924,925,926,927,928,930,931,933,934,935,936,971,995,1032,1048,1066,1075,1091,1144,1207,1208,1244,1247,1248,1249,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1290],basi:43,batch:[40,41,864,866,867,921,963,964,995,1027,1037,1107,1111,1140,1141,1142,1143,1144,1225,1234,1242,1243,1275,1276],batch_shap:[442,457,995,1037,1056,1107,1108,1109,1110,1111,1112,1113,1114,1120,1200,1201,1225,1235,1236,1237,1261,1270],batch_siz:[491,492,1144,1200,1201,1225,1226,1227,1228,1229,1230,1231,1232],bayesian:1290,becaus:[43,995,998],becom:[43,995,1007,1124,1129,1290],been:[995,1019,1020,1021,1200,1201],befor:[40,41,43,921,965,1140,1141,1142,1144,1188,1197,1207,1209,1210,1211,1212,1213,1214,1215,1225,1236,1237,1290],before_1:[995,1011,1089],before_n:[995,1011,1089],begin:[1188,1189,1196,1287],behaviour:[43,1290],behind:[1091,1094,1096,1098,1099,1100,1244],being:[40,41,43,995,998,1060,1068,1144],believ:43,belong:[40,41],below:[43,842,844,864,865,1244,1287,1290],below_depth:[40,41],benefit:1244,bernoul:[1225,1233,1261,1269],best:[43,995,1049,1244],beta1:[1091,1093,1094,1098,1277,1278,1279],beta2:[1091,1093,1094,1098,1277,1278,1279],beta:[1242,1243],between:[40,41,42,846,847,995,998,1114,1119,1188,1192,1200,1202,1238,1240,1241,1277,1279],bia:[1225,1234,1235,1261,1262,1263,1264,1265,1266,1267,1268,1271],bias_initi:[1261,1262,1263,1264,1265,1266,1267,1268,1271],bilinear:[1107,1108],bilinear_resampl:[167,351,480,614,775,1107],bilinearli:[1107,1108],binari:[850,852,1238,1239],binary_cross_entropi:1238,bit:[396,846,847,848,971,982,1107,1109,1113,1244],bitwis:[850,852],bitwise_and:[86,218,401,525,655,850],bitwise_oper:[0,7,8],block:[1244,1287],bool:[15,18,19,40,41,42,43,850,856,857,858,861,864,866,867,870,871,873,874,876,877,878,880,899,919,920,921,939,952,956,960,965,968,970,971,981,995,997,1002,1003,1015,1018,1022,1023,1027,1034,1036,1044,1049,1070,1072,1086,1087,1088,1091,1094,1095,1096,1097,1098,1099,1100,1102,1114,1117,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1225,1233,1250,1251,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],both:[43,995,1014],bottom:1244,boundari:[40,41,1200,1204],branch:[43,919,920],brittl:43,broadcast:[40,41,43,850,852,858,864,867,870,871,876,877,878,880,899,905,995,1005,1022,1051,1052,1053,1061,1114,1117,1124,1129,1132,1207,1209,1210,1211,1212,1213,1214,1215],broadcast_to:[297,703,995],build:[1144,1244,1261,1272,1273,1274],build_mod:[1261,1272,1273,1274],builder:[43,1244],built:[921,995,998,1144,1261,1272,1273,1274],builtin:43,builtin_ab:[252,880],builtin_add:[252,880],builtin_and:[252,880],builtin_bool:[252,880],builtin_contain:[252,880],builtin_deepcopi:[252,880],builtin_dir:[252,880],builtin_eq:[252,880],builtin_float:[252,880],builtin_floordiv:[252,880],builtin_g:[252,880],builtin_getattr:[252,880],builtin_getattribut:[252,880],builtin_getitem:[252,880],builtin_gt:[252,880],builtin_int:[252,880],builtin_invert:[252,880],builtin_l:[252,880],builtin_lt:[252,560,690,880],builtin_mul:[252,880],builtin_n:[252,880],builtin_neg:[252,880],builtin_or:[252,880],builtin_po:[252,880],builtin_pow:[43,252,880],builtin_radd:[252,880],builtin_rand:[252,880],builtin_rfloordiv:[252,880],builtin_rmul:[252,880],builtin_ror:[252,880],builtin_rpow:[252,880],builtin_rsub:[252,880],builtin_rtruediv:[252,880],builtin_rxor:[252,880],builtin_setitem:[252,880],builtin_some_op:43,builtin_sub:[252,880],builtin_truediv:[252,880],builtin_xor:[252,880],busi:43,bypass:1287,cach:[921,937,995,1006],cache_fn:995,calcul:[40,41,42,43,850,851,854,855,859,860,862,880,905,1124,1132],call:[43,921,965,995,1060,1068,1085,1091,1095,1144,1188,1189,1192,1196,1261,1272,1273,1274,1277,1281,1287,1290],callabl:[40,41,919,920,921,930,931,965,995,1006,1018,1020,1049,1085,1140,1141,1142,1143,1144,1188,1192,1193,1194,1196,1197,1225,1236],can:[43,921,963,964,965,995,1062,1107,1109,1144,1244,1286,1287,1290],cancel_join_thread:1144,cannot:43,captur:1244,cast:[40,41,132,297,442,572,703,971,995,1010,1107,1109,1113],catch_except:[995,1018],categori:43,caus:43,ceil:[86,218,401,525,655,850,995,998],cell:[1225,1235,1261,1270],certain:[40,41,995,998,1047,1048],chain:[40,41,1140,1141,1142,1283,1284],chang:[43,921,995,1062,1144,1188,1190,1197,1244,1286],channel:[995,1027,1107,1109,1110,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],check:[15,16,17,18,19,40,41,43,921,960,970,971,976,985,994,995,1004,1023,1036,1044,1077,1087,1091,1097,1144,1188,1189,1196,1244,1287],check_nest:[1188,1196],check_shap:[40,41],check_submod_ret:[1273,1274],check_typ:[40,41],choic:[1244,1287],choleski:[779,1114],choos:[850,861,995,1088,1114,1119,1124,1129,1244],choose_random_framework:59,chosen:[40,41,995,998,1088],chunk:[921,963,964,965,1144],chunk_siz:[921,965,1144],circl:[1124,1125,1127],clark:1244,clear:[43,921,937,1144],clear_framework_stack:59,clear_mem_on_dev:[440,695,921],click:1244,clip:[40,41,297,442,703,995,1008,1009,1051,1053,1244],clip_matrix_norm:995,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,995],clipped_delta:1144,clone:[40,41,921,940,941,942,943,1144],clone_arrai:1144,clone_it:1144,clone_nest:1144,clonedit:1144,cloneditem:1144,clonednest:1144,close:[43,1107,1112,1124,1127,1144,1290],closest:[850,853,971,976],closest_valid_dtyp:971,code:[40,41,42,43,491,1244,1245,1286,1287],codebas:[921,963,964,1144,1244,1287,1290],codomain:[850,851,854,855,860,862],colab:1244,collect:[15,40,41,440,442,475,480,484,488,489,491,880,919,921,971,995,1091,1107,1114,1121,1124,1144,1188,1200,1207,1217,1225,1238,1242,1247,1261,1275,1277],color:[40,41,42,1288,1289],column:[995,1037],combin:[40,41,42,1107,1112,1244,1290],combined_batch_s:1144,come:1287,command:1244,comment:43,commit:1290,common:[40,41,43,1124,1129],common_key_chain:[40,41],commun:[43,1244,1287],communuti:43,compar:[40,41,873,874,995,997,1002,1003],comparison_oper:[0,9,10],compat:[43,850,852,858,864,867,876,877,878,880,899,905,995,1022,1062,1124,1132,1244,1290],compil:[297,442,703,1273,1274,1277,1278,1279,1280,1281,1282],compile_on_next_step:[1273,1274,1277,1278,1279,1280,1281,1282],complet:[40,41,43,1114,1119,1144],complex:[1287,1290],compliant:[850,861],compon:[995,1014],composit:43,comput:[40,41,850,852,858,861,864,867,880,899,921,965,995,1008,1009,1015,1016,1022,1050,1091,1093,1094,1095,1096,1098,1099,1100,1102,1104,1107,1110,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1127,1128,1129,1133,1134,1135,1136,1138,1188,1192,1207,1208,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1238,1239,1240,1241],concat:[40,41,921,950,951,952,953,965,995,1027,1144],concaten:[40,41,132,297,442,572,703,995,1027,1144,1244],concatten:[40,41,921,950,951,952,953,965,1144],condit:[442,919,920,995,1088,1188,1196],conditon:[1188,1196],config:[40,41,1144],config_list:1144,configur:[40,41],conflict:43,conform:43,conjunct:1287,connect:[1261,1271,1272],consid:[40,41,850,861,1114,1119,1286,1290],consist:[40,41,921,953,1144,1207,1208,1273,1274,1287],constant:[921,930,931,995,1011,1144,1188,1192,1238,1239,1240,1241,1242,1243,1252,1253,1257,1260,1273,1274,1275,1276,1287],constant_kwarg:1144,constant_pad:[297,442,572,703,995],constitu:[40,41],construct:[995,1079,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],constructor:[40,41,42,995,999,1283,1284],consum:[921,1144],cont_feat_dim:[1225,1236],contaienr:[40,41],contain:[15,18,19,42,43,842,843,844,845,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,867,876,877,878,880,899,905,921,940,944,965,971,975,995,996,1000,1007,1008,1009,1012,1022,1036,1051,1053,1063,1074,1075,1091,1093,1094,1096,1098,1099,1100,1124,1132,1140,1141,1142,1143,1144,1200,1201,1207,1209,1210,1211,1213,1215,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[442,703,995],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[442,995,1054,1225,1236,1261,1272],context_dim:[1261,1272],contextmanag:[59,60],continu:[43,1144,1287],contract:[40,41,1207,1208],contribut:[1244,1245],contributor:[43,1244],control:1244,conv1d:[198,381,505,831,1225,1244,1261],conv1d_transpos:[198,381,505,831,1225],conv1dtranspos:[1244,1261],conv2d:[198,381,505,639,831,1225,1244,1261],conv2d_transpos:[198,381,505,831,1225],conv2dtranspos:[1244,1261],conv3d:[198,381,505,639,831,1225,1244,1261],conv3d_transpos:[198,381,505,831,1225],conv3dtranspos:[1244,1261],convent:[40,41,1207,1208],conver:[921,937,948,960,967,970,1144],convers:[16,17,18,19,40,41,1144,1244],convert:[15,16,17,18,19,40,41,43,921,948,949,971,977,983,984,995,1071,1082,1083,1107,1109,1113,1114,1120,1144,1188,1190,1197,1244,1251],convert_dtyp:971,convolut:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],cool:43,cooler:43,coordin:[995,1052,1124,1125,1127,1129],copi:[40,41,43,491,995,1013,1144,1188,1190],copy_arrai:[442,703,995],copy_nest:1188,core:[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1244],corner:43,correct:[43,1244,1287],correctli:[40,41,43,870,871,1114,1117,1124,1129,1207,1209,1210,1211,1212,1213,1214,1215],correspond:[40,41,43,880,905,995,1010,1200,1201],cos:[86,401,525,655,850,995,1027,1124,1125,1138,1287],cosh:[86,401,525,655,789,850,1124],cosin:[850,854,855,1124,1125,1126,1131],cost:[1091,1093,1094,1096,1098,1099,1100,1140,1141,1142,1143],cost_fn:[1140,1143],could:1290,count:[40,41,868,869,876,877,878,1144,1207,1212,1214],cours:43,cprint:1288,cpu:[40,41,43,921,958,960,966,967,970,995,998,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1144,1200,1201,1202,1203,1204,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1286,1287],creat:[40,41,842,843,845,921,930,931,995,998,1001,1028,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1081,1090,1091,1104,1144,1200,1201,1202,1203,1204,1244,1245,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1290],create_if_abs:[40,41],create_vari:1252,creation:[40,41,42,43],creation_funct:[392,393,394,395,842,843,844,845],crop:[1107,1111],crop_siz:[1107,1111],cross:[297,703,995,1238,1239,1240,1241],cross_entropi:1238,cuda:[40,41,921,930,949,966,995,998,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1144,1200,1201,1202,1203,1204,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],cumprod:[132,297,442,703,995],cumsum:[703,995],cumul:[995,1015,1016],current:[40,41,42,43,921,930,954,955,957,961,971,977,985,994,995,1017,1031,1039,1043,1055,1059,1144,1188,1189,1196,1244,1290],current_framework:59,current_framework_str:[442,703,995,1144],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1225,1226,1227,1228,1229,1230,1231],d_out:[1225,1226,1227,1228,1229,1230,1231],da_can_termin:1144,da_dim_s:[921,1144],da_direct:1144,da_tune_step:[921,1144],dai:1290,daniel:1244,data:[40,41,42,43,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,860,861,862,864,865,867,868,869,873,874,876,877,878,880,899,905,921,923,924,925,926,927,928,933,934,935,949,971,975,976,977,981,982,983,984,985,986,987,994,995,998,1001,1022,1028,1037,1044,1057,1058,1062,1073,1077,1090,1091,1097,1105,1124,1132,1144,1225,1234,1244],data_format:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],data_type_funct:[396,398,399,846,847,848],dataset:[40,41],datatyp:[40,41,971,976,986,987],dcdw:[1091,1093,1094,1096,1098,1099],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1091,1098,1099,1277,1279,1280],decay_lambda:[1091,1098,1099,1277,1279,1280],decid:[40,41,1290],decompos:[1114,1115,1119],decomposit:[864,866,1114,1115,1119],decor:43,decrement:[995,1040],dedic:[1091,1105,1250,1251],deep:[40,41,1244],deep_copi:[40,41],deeper:[921,943,947,953,1144,1188,1197,1244],deepli:[1188,1190],def:[43,60,82,214,397,521,651,922,929,932,972,973,974,1092,1144,1148,1155,1244,1253,1256,1259,1286,1287,1290],default_dev:43,default_devic:921,default_dtyp:[43,971],default_float_dtyp:971,default_int_dtyp:971,default_key_color:[40,41,42],default_nod:1144,default_rng:491,default_v:[995,1018],defaultdevic:[921,922],defaultdtyp:[971,972],defaultfloatdtyp:[971,973],defaultintdtyp:[971,974],defer:43,defin:[43,995,1014,1056,1058,1090,1200,1202],definit:43,degre:[1124,1136,1138],del:1144,delai:43,delet:43,delta:[1091,1093,1144],delta_dim_s:1144,delta_percent_mem:1144,delta_sf:1144,delta_util:1144,demo:1244,denomin:[995,1026,1033,1067,1074,1075,1242,1243,1275,1276],denot:43,dens:[1261,1271],depend:[43,850,851,854,855,859,860,864,866,873,874,880,905,995,1088,1244],depth:[40,41,442,466,921,943,947,953,995,1035,1056,1144,1188,1197,1273,1274],depth_cutoff:[40,41],depthwis:[1225,1232,1261,1268],depthwise_conv2d:[198,381,505,639,831,1225],depthwiseconv2d:[1244,1261],deriv:[1091,1093,1094,1096,1098,1099,1100,1188,1190,1197,1244,1273,1277,1281,1283],descend:[864,866,873,874],descent:[1091,1096,1277,1282],describ:[40,41,1207,1208],descript:[864,867],design:[1244,1245],desir:[40,41,921,966,971,975,995,998,1001,1037,1038,1057,1058,1090,1107,1112,1144,1207,1209,1210,1211,1213,1215],desired_aspect_ratio:[480,483,1107,1112],desired_percent_increas:1144,detail:1290,detect:[40,41,1188,1189,1196],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,850,851,852,854,855,856,857,860,862,864,865,867,876,877,878,880,905,921,956,958,959,968,971,975,976,982,985,986,987,994,995,997,998,1001,1002,1003,1036,1039,1043,1044,1077,1087,1091,1097,1124,1132,1140,1141,1142,1143,1144,1225,1236],dev:[40,41,42,43,125,291,440,442,443,445,455,456,457,464,465,466,467,468,469,474,491,492,565,695,921,924,925,927,928,930,931,934,935,937,938,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,957,960,961,962,963,964,965,966,967,970,995,998,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1091,1106,1200,1201,1202,1203,1204,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],dev_clon:[40,41,921],dev_clone_arrai:921,dev_clone_it:921,dev_clone_nest:921,dev_dist:[40,41,921],dev_dist_arrai:921,dev_dist_it:921,dev_dist_nest:921,dev_from_str:[43,125,291,440,565,695,921],dev_mapp:921,dev_str:[40,41],dev_to_str:[125,291,440,565,695,921],dev_unifi:921,dev_unify_arrai:921,dev_unify_it:921,dev_unify_nest:921,dev_util:921,devclonedit:921,devcloneditem:921,devclonednest:921,devdistit:921,devdistitem:921,devdistnest:921,develop:[43,1244,1287,1290],deviat:[40,41,1200,1203,1207,1213,1242,1243,1275,1276],devic:[21,40,41,43,392,393,395,441,442,454,842,843,844,845,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,995,998,1001,1028,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1091,1106,1200,1201,1202,1203,1204,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284],devmanag:[921,929],devmapp:[921,931],devmappermultiproc:921,diag:[864,866],diagon:[100,227,415,539,669,842,844,864,995,1037],dict:[15,16,17,18,19,40,41,42,921,923,926,930,931,933,943,944,945,946,947,995,1019,1020,1021,1049,1140,1141,1142,1144,1188,1190,1191,1192,1195,1197,1250,1251],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,846,847,921,940,941,944,945,1114,1119,1144,1225,1234,1244,1287,1290],differenti:[1244,1287],dilat:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],dim:[40,41,43,864,866,995,1056,1107,1108,1112,1144,1261,1272],dim_siz:[40,41,921,1144],dimens:[40,41,42,842,844,864,865,866,867,868,869,870,871,876,877,878,921,952,995,1005,1010,1014,1019,1020,1021,1024,1027,1034,1046,1056,1061,1062,1072,1073,1076,1084,1086,1107,1111,1114,1117,1140,1141,1142,1143,1144,1200,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1235,1238,1240,1241,1261,1262,1263,1264,1265,1266,1267,1268,1271,1272],dimension:[40,41,491,864,866,867,876,877,878,995,1072,1073],direct:1144,directli:[43,1188,1197,1287,1290],directori:[995,1069,1080],discord:43,discret:[1238,1240],discuss:43,disk:[40,41,1107,1109],distanc:[995,998],distribut:[40,41,921,940,944,945,946,947,1144,1200,1201,1202,1203,1204,1225,1233,1261,1269,1273,1274],distribute_nest:1144,distributedarrai:[40,41],distrubt:[1238,1240],dive:[1244,1287],divid:[40,41,995,1072,1074,1124],dividend:[1124,1132],divis:[995,1026,1033,1067,1074,1075,1091,1093,1094,1098,1124,1132,1277,1278,1279],divisor:[1091,1093,1094,1098,1124,1132,1277,1278,1279],doc:1244,docstr:43,document:43,doe:[40,41,43,995,998,1072,1286],doesn:[1114,1119,1244],doing:43,domain:[850,851,854,855,860,862,1124,1125],don:[43,1244],done:43,door:1290,dot:[1114,1116,1225,1236,1237,1261,1272],down:1286,downscal:[995,1008,1009],drag:[1244,1290],draw:[1200,1201,1203,1204],drawn:[1200,1201,1202,1203,1204],drop:[1244,1290],dropout:[1225,1244,1261,1272],dropout_r:[1261,1272],ds_tune_step:921,dtype:[40,41,43,132,297,392,393,395,396,398,399,442,443,445,446,454,457,467,474,572,703,842,843,845,846,847,848,870,871,975,976,977,978,979,980,982,983,984,985,986,987,988,989,990,991,992,993,994,995,998,1001,1028,1037,1056,1057,1058,1090],dtype_bit:[132,297,442,572,703,971],dtype_from_str:[43,132,297,442,572,703,971],dtype_in:[442,451,452,453,971,977,982,983,984,985,986,987,994],dtype_to_str:[132,297,442,572,703,971],duplic:[40,41,43],dure:[40,41,43,919,920,995,1085,1091,1093,1094,1098,1140,1141,1142,1143,1273,1274,1277,1278,1279,1281],dynam:[43,442,447,919,920],each:[40,41,42,43,850,851,852,853,854,855,856,857,858,859,860,861,862,864,866,880,899,905,921,930,931,940,941,942,943,944,945,946,952,964,965,995,996,997,1011,1022,1061,1072,1076,1079,1089,1091,1094,1096,1098,1099,1100,1107,1110,1124,1127,1132,1134,1135,1144,1188,1192,1200,1201,1207,1208,1225,1226,1227,1228,1229,1230,1231,1232,1233,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287],eager:1287,easi:1290,easili:1244,econom:1290,ecosystem:1244,edg:[995,1007,1011,1089],effect:[1091,1100],effective_grad:[1091,1100],effici:1290,einop:[40,41,995,1019,1020,1021],einops_rearrang:[40,41,995],einops_reduc:[40,41,995],einops_repeat:[40,41,995],einstein:[40,41,1207,1208],einsum:[40,41,184,369,493,629,811,1207],either:[40,41,43,850,860,995,1018,1049,1052,1054,1140,1141,1142,1143,1144,1261,1272,1273,1274,1287],eleg:1144,element:[40,41,43,491,842,844,850,851,852,853,854,855,856,857,858,859,860,861,862,868,869,876,877,878,880,899,905,921,942,946,952,971,975,995,996,998,1000,1002,1003,1007,1008,1009,1015,1016,1022,1025,1026,1037,1038,1051,1053,1061,1063,1072,1083,1088,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1207,1208,1210,1212,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1233,1261,1269],elementwis:[40,41],elementwise_affin:[1275,1276],elementwise_funct:[850,851,852,853,854,855,856,857,858,859,860,861,862],elemtn:[1200,1201],elif:1144,els:[43,995,1004,1018,1023,1144],elsewher:[995,1088],emphas:1244,empti:[40,41,876,877,878,1114,1119,1144],enabl:[40,41,42,43,1244],encapsul:[846,848],encod:[995,1027,1107,1109],end:[995,998,1244,1287],engag:43,ensur:43,entir:[40,41,876,877,878,921,965,1144,1244,1261,1270],entri:[40,41,995,1047,1048,1072,1073],entropi:[1238,1239,1240,1241],enumer:1144,environ:1244,eps:[396,846,847],epsilon:[1091,1093,1094,1098,1238,1239,1240,1241,1242,1243,1275,1276,1277,1278,1279],equal:[40,41,442,572,703,850,856,864,865,873,874,995,997,1002,1003,1011,1072,1089,1124,1136,1138,1200,1204],equality_matrix:[995,997],equat:[40,41,1207,1208],equival:[850,861,864,867,995,998,1124,1138],erf:[489,789,1124],error:[40,41,43,921,995,1073,1124,1133,1144,1217,1218,1273,1274,1277,1281],essenti:43,etc:[40,41,43,921,966,995,998,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1144,1200,1201,1202,1203,1204,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1290],euclidean:[864,867],euler:841,evalu:[40,41,850,859,860,876,877,878,995,1052,1188,1189,1196],even:[43,1290],evenli:[40,41,995,998,1047,1048,1072],everi:[43,995,997,1290],exact:[40,41],exampl:[43,919,920,995,1007,1076,1114,1119,1244,1286,1287,1290],example_input:[442,447,919,920],exc_tb:1144,exc_typ:1144,exc_val:1144,exce:[995,1053],except:[40,41,44,47,876,877,878,995,998,1004,1010,1018,1085,1144],excess_s:1144,excit:[1244,1287],exclud:[59,61,995,998,1200,1204],exclus:[40,41,442,449,462,475,477,995,1015,1044,1091,1097,1200,1202],execut:[43,995,1085,1287],execute_with_gradi:[164,346,475,609,769,1091,1244,1286],exist:[40,41,995,1018,1144,1244,1277,1281,1290],exp:[789,1124],expand:[40,41,995,1024,1027],expand_dim:[40,41,297,703,995,1144],expect:[995,999],explain:[43,1287],explicitli:[43,1261,1270,1272,1273,1274,1287],expon:[43,880,905,995,1075],exponenti:[43,880,905,1124,1133,1134],expos:[995,1001,1012],express:[850,854,995,1052],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1091,1095],eye:[1114,1116],fabian:1244,fabio:1244,factor:[864,866,921,930,963,964,965,1091,1093,1094,1098,1099,1144,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268,1277,1278,1279,1280],fail:43,falck:1244,fall:[1273,1274,1277,1281],fallback_to_non_compil:[1273,1274,1277,1281],fals:[15,18,19,40,41,42,59,66,67,68,69,70,440,442,449,450,462,470,473,475,476,477,484,485,850,856,857,861,864,867,870,871,873,874,876,877,878,921,939,952,960,965,970,971,978,979,980,981,995,997,1015,1018,1023,1027,1034,1044,1049,1070,1072,1086,1088,1091,1094,1095,1096,1097,1098,1099,1100,1114,1117,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1207,1209,1210,1211,1212,1213,1214,1215,1250,1251,1273,1274,1277,1278,1279,1280,1281,1282],fan_in:1252,fan_mod:1252,fan_out:1252,far:[1188,1189,1196,1286],faster:[919,920],favourit:[1244,1286],feasibl:1290,feat_dim:[1225,1236,1237],fed:[921,965,1144],feed:[921,965,1144],few:43,field:1290,file:[40,41,43,995,1069,1080,1273,1274],filepath:[40,41],fill:[40,41,842,843,845,995,1028,1057,1200,1202],fill_valu:[442,454,995,1028],filter:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268,1290],filter_s:[1261,1262,1263],filter_shap:[1261,1264,1265,1266,1267,1268],find:[40,41,43,1290],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,213,214,396,397,520,521,650,651,846],finish:[1244,1290],finit:[850,856],first:[40,41,43,491,850,852,858,864,865,866,919,920,921,952,995,1002,1010,1014,1022,1047,1048,1076,1078,1091,1095,1140,1141,1142,1143,1144,1188,1189,1196,1200,1206,1207,1212,1214,1261,1272,1273,1274,1277,1281,1287,1290],firstlayersiren:[1244,1252],firstli:[1287,1290],fist:[921,965,1144],fit:[40,41,440,442,475,480,484,488,489,491,995,1061,1107,1112],fix:43,fkt:1290,flag:[40,41,43,1091,1097],flat:[40,41,43,995,1061,1064],flat_list:[40,41],flatten:[40,41,864,867,870,871,995,1027,1061,1207,1209,1210,1211,1213,1215],flatten_key_chain:[40,41,1273,1274],flexibl:[1244,1287],flip:[40,41,104,231,419,543,673,868],float32:[43,442,457,971,975,983,984,995,998,1001,1037,1057,1058,1090],float_dtyp:[971,979,989],float_img_to_uint8_img:1107,floor:[297,442,703,995,1026,1144],floormod:[297,442,703,995],fluid:1290,folder:[43,1244],follow:[40,41,43,846,848,864,867,921,965,995,1040,1041,1042,1074,1075,1091,1094,1096,1098,1099,1100,1144,1188,1192,1197,1225,1236,1237,1244,1261,1271,1277,1281],followng:[846,847],fomaml_step:1140,forget:[1091,1093,1094,1098,1277,1278,1279],fork:[995,1054,1244,1245],forkserv:[995,1054,1144],form:[15,16,17,18,19,40,41,842,844,864,865,995,1001,1091,1094,1096,1098,1099,1100,1188,1190,1197,1225],format:[40,41,43,921,939,971,975,977,981,995,998,1001,1037,1057,1058,1090,1144,1207,1208,1244,1286,1287],format_fn:[40,41],format_key_chain:[40,41],forward:[1273,1274,1277,1281,1286],found:[40,41,42],fourier:[995,1027],fourier_encod:995,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,105,107,110,113,114,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,214,215,216,219,220,221,222,223,224,225,228,229,230,232,234,237,240,241,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,352,353,354,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,420,422,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,540,541,542,544,546,549,552,553,561,566,567,568,569,570,571,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,625,626,627,628,630,631,632,633,634,635,636,640,641,642,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,672,674,676,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,776,777,778,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,847,848,851,852,853,854,855,856,857,858,859,860,861,862,865,866,867,869,871,874,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1243,1244,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1289,1290],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1144,framewrk:[995,1054],free:43,freed:43,freeli:43,frequenc:[995,1027],from:[40,41,42,43,850,862,864,865,868,869,876,877,878,921,930,931,965,971,977,995,1018,1029,1030,1037,1062,1073,1081,1088,1091,1094,1098,1107,1111,1114,1119,1140,1141,1142,1143,1144,1188,1190,1197,1200,1201,1202,1203,1204,1207,1212,1214,1225,1233,1236,1244,1250,1251,1261,1269,1272,1277,1281,1286,1287],from_cal:[1273,1274],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,132,297,442,572,703,846,847,995,1114,1119,1244],full_matric:[864,866],fulli:[43,1244,1261,1271,1272,1286],func:[40,41,442,447,475,476,919,920,921,965,995,1006,1091,1095,1144],further:[43,1290],furthermor:1290,futur:1290,gain:1252,gamma:[1242,1243],gather:[40,41,132,297,442,572,703,995,1030],gather_nd:[40,41,132,297,442,572,703,995],gauss:[1124,1133],gaussian:[1217,1218],geglu:[1244,1247],gelu:[379,502,820,1217,1244,1247],gener:[23,40,41,43,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,491,919,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1097,1200,1202,1204,1205,1244,1277,1281],geometr:[995,1027],get:[40,41,43,846,847,848,921,930,931,939,954,955,960,964,967,970,971,981,982,995,999,1031,1032,1033,1060,1144,1244,1261,1270,1290],get_all_arrays_in_memori:995,get_all_arrays_on_dev:921,get_framework:59,get_initial_st:[1261,1270],get_min_bas:995,get_min_denomin:995,get_mod_kei:[1273,1274],get_num_dim:[442,703,995],get_referrers_recurs:995,getfullargspec:1144,gist:1244,give:[43,995,1062,1287],given:[40,41,43,868,869,921,954,960,963,964,965,967,970,971,975,995,998,1001,1007,1015,1016,1030,1047,1048,1057,1058,1061,1064,1065,1072,1079,1084,1086,1090,1091,1093,1094,1096,1098,1099,1100,1114,1116,1120,1124,1125,1144,1188,1193,1194,1200,1203,1204,1206,1207,1210,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1250,1251,1290],global:[40,41,42,921,930,931,938,963,964,965,971,978,979,980,995,1017,1032,1033,1060,1066,1067,1068,1074,1075,1091,1106,1144,1242,1243,1275,1276],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1244,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],good:43,googl:1244,got:[43,1244],gpu0:43,gpu2:43,gpu:[921,956,959,1144],gpu_is_avail:[440,921,1144],grad:[1244,1277,1281,1286],gradient:[25,40,41,476,477,478,479,921,965,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1110,1140,1141,1142,1143,1244,1277,1278,1279,1280,1281,1282,1286,1290],gradient_descent_upd:[1091,1140,1141,1142,1143],gradient_imag:[167,351,480,614,775,1107],gradienttrack:[1091,1092],graph:[1091,1094,1096,1098,1099,1100,1273,1274],greater:[40,41,995,998,1025,1073,1200,1204],green:[40,41,42,1288,1289],grid:[995,1052],group:[1107,1112],guid:[43,1244,1245,1290],gym:1244,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1290,half:[995,998,1144,1200,1204],hand:1244,handl:[40,41,42,43,919,920,921,937,939,948,949,960,967,970,1091,1094,1096,1098,1099,1100,1144,1277,1278,1279,1280,1281,1282],happen:43,has:[40,41,43,870,871,995,1076,1114,1119,1124,1128],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,995],hasattr:1144,have:[40,41,43,842,843,844,845,846,847,850,851,852,853,854,855,856,857,858,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878,880,899,905,995,1010,1014,1019,1020,1021,1022,1028,1076,1091,1097,1105,1124,1132,1144,1244,1286,1287],haven:43,hdf5:[40,41,1273,1274],head:[1225,1236,1261,1272],head_dim:[1261,1272],height:[1107,1112],height_cutoff:[40,41],help:[43,59,396,440,441,921,933,934,935,936,971,1091,1244,1252,1254,1255,1257,1258,1260],here:[43,1244],hidden:[1225,1235,1261,1270],hierarch:[995,1012],hierarchi:[40,41],high:[40,41,491,1200,1202,1204],higher:[864,866,1091,1094,1096,1098,1099,1100],highest:[1200,1202],highest_util:1144,highest_util_nod:1144,highli:1244,highlight:1290,hint:43,hkt:1290,hold:[971,975,995,998,1001,1064,1065],host:1244,hot:[995,1056],hour:43,how:[1244,1261,1272,1273,1274,1287,1290],howev:[43,1287],http:1290,hyperbol:[850,851,855,1124,1126,1130,1131,1137,1139,1217,1224],hypothet:[43,1290],icon:1244,idea:1244,ident:[40,41,43,132,297,442,572,703,995],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[841,846,847,850,862],if_exist:[40,41],ignor:[40,41,1277,1281],ignore_key_error:[40,41],ignore_miss:[1277,1281],ignore_non:[40,41],iii:43,iinfo:[81,213,396,520,650,846],imag:[27,481,482,483,995,1046,1108,1109,1110,1111,1112,1113,1225,1226,1227,1228,1229,1231,1232,1244,1290],image_dim:[1107,1111],imkkhk:1290,immedi:[1244,1287,1290],implement:[43,850,851,854,855,859,860,873,874,880,905,1244,1287,1290],in_featur:[1225,1234],inadvert:43,includ:[40,41,43,864,867,876,877,878,995,998,1036,1074,1075,1087,1188,1189,1200,1204,1261,1271,1272,1275,1276,1286],include_deriv:[1188,1190,1197],include_empti:[40,41],include_inf:[40,41,995,1036,1087],include_nest:[1188,1189],include_self:[40,41],inclus:[43,1200,1202],incom:[1225,1234],increas:[921,943,947,953,995,1011,1024,1089,1144,1188,1197],increasingli:1290,increment:[995,1041,1144],inde:1244,indent:[40,41,42],independ:[1200,1201],index:[40,41,442,491,870,871,873,874,995,1000,1029,1030,1052,1073,1076,1188,1191,1193,1194,1195,1198],index_nest:1188,indic:[40,41,442,455,456,466,468,469,864,867,870,871,873,874,995,1000,1029,1030,1038,1056,1064,1065,1188,1189,1191,1193,1194,1195,1196,1198,1199,1200,1201,1217,1222,1225,1226,1227,1228,1229,1230,1231,1232,1242,1243,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274],indices_wher:[132,297,442,703,995],indistinguish:[850,862],inevit:1290,inf:[40,41,864,867,995,1036,1045,1087,1124,1128],infer:[919,920,995,1034,1037,1062,1070,1107,1111,1114,1119,1287,1290],infin:[850,851,853,854,855,856,860,862,864,867,876,877,878,995,1045],infinit:[850,862],inform:[846,847,848,1091,1102],init_c:[1225,1235],init_h:[1225,1235],init_on_first_step:[1277,1281],initi:[40,41,42,43,59,396,440,441,921,933,934,935,936,971,1091,1144,1225,1235,1244,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1277,1281],initialz:[1273,1274],inner:[1140,1141,1142,1143],inner_batch_fn:[1140,1141,1142],inner_batch_shap:[1225,1234],inner_cost_fn:[1140,1141,1142],inner_grad_step:[1140,1141,1142,1143],inner_learning_r:[1140,1141,1142,1143],inner_optimization_step:[1140,1141,1142,1143],inner_v:[1140,1141,1142],innermost:[842,844,864,865],inp:1144,inplac:[40,41,995,1004,1039,1043,1077,1091,1094,1096,1098,1099,1100,1250,1251,1277,1278,1279,1280,1281,1282],inplace_arrays_support:[442,995],inplace_decr:[132,297,442,572,703,995],inplace_incr:[132,297,442,572,703,995],inplace_oper:[0,11,12],inplace_upd:[40,41,132,297,442,572,703,995,1250,1251],inplace_variables_support:[442,995],input:[15,18,19,40,41,42,43,842,844,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878,919,920,921,930,931,938,939,940,943,944,947,953,965,966,971,975,976,978,979,980,981,982,986,987,995,996,997,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1050,1051,1052,1053,1061,1063,1070,1071,1073,1076,1077,1078,1079,1081,1082,1083,1084,1086,1087,1089,1091,1095,1097,1102,1106,1107,1108,1109,1110,1111,1113,1114,1117,1119,1121,1122,1123,1124,1126,1128,1130,1131,1132,1136,1137,1138,1139,1140,1141,1142,1143,1144,1200,1201,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1242,1243,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276,1287],input_ax:[921,965,1144],input_channel:[1261,1262,1263,1264,1265,1266,1267,1270,1271],input_queu:1144,inputs_split:1144,insert:[870,871,995,1024],insid:43,inspect:1144,inspir:1290,instal:1244,instanc:[15,16,17,18,19,40,41,43,491,880,899,905,921,930,1144,1250,1251,1283,1284],instead:[40,41,43,491,1207,1209,1210,1211,1212,1213,1214,1215,1290],int32:43,int64:[971,975,995,998,1001,1037,1057,1058,1090],int_dtyp:[971,980,990],integ:[40,41,491,846,848,850,852,853,864,867,876,877,878,971,987,995,998,1025,1063,1072,1200,1202,1205],integr:1244,intend:43,inter:1244,interact:1244,interchang:[40,41,995,1078],interest:1244,interfac:[995,1001,1287],intermedi:[40,41],intern:[40,41,921,1091,1105,1144,1188,1189,1196,1197,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1283,1284],interpol:[995,1046],intersect:[1124,1125],interv:[40,41,876,877,878,995,998,1007,1047,1048,1124,1127,1200,1204],introduc:1290,inv:[779,1114,1290],invalid:[876,877,878],invalid_dtyp:971,invers:[850,851,1114,1116,1118,1124,1125,1126,1127,1128,1130,1290],invert:[1114,1116,1118],invest:1290,investig:43,invoc:[919,920],irrespect:1244,is_al:1144,is_arrai:[132,297,442,572,703,995,1144],is_float_dtyp:971,is_int_dtyp:971,is_mean:1144,is_sum:1144,is_vari:[164,346,475,609,769,1091],isfinit:[86,218,401,525,655,850],isinf:[297,572,703,995],isinst:1144,isnan:[86,218,401,525,655,850],isnumer:1144,issu:[1244,1245],issue_numb:43,item:[15,19,40,41,880,892,893,921,930,931,933,940,942,944,946,952,971,978,995,1012,1035,1074,1075,1144,1188,1192,1193,1194,1197,1198,1199,1244,1273,1274,1286],iter:[15,16,17,18,19,40,41,42,919,920,921,924,925,927,928,930,931,934,935,942,944,945,946,947,952,965,995,997,1005,1010,1011,1037,1052,1057,1061,1062,1065,1070,1072,1076,1079,1084,1089,1144,1188,1189,1190,1192,1196,1197],iterbal:[921,942,946,952,1144],its:[491,921,965,995,1037,1062,1078,1084,1144,1244],itself:[43,1188,1197],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1288,1289],ivy_backend:[40,41],ivy_bay:1290,ivy_test:43,ivyfcmodel:1286,ivyh:[40,41,42],ivymodul:[195,828],jame:1244,jax:[43,1091,1097,1244,1290],jax_concat:1244,jnp:1244,join:[40,41,995,1010,1076,1144],journal:1244,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1244,1261,1270,1290],kaimingnorm:[1252,1256],kalman:1290,kalman_filt:1290,kalman_filter_step:1290,kalman_filter_upd:1290,keep:[40,41,921,966,995,1086,1144,1244,1245,1290],keep_inner_v:[1140,1141,1142],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1140,1141,1142],keepdim:[40,41,442,473,484,485,864,867,870,871,876,877,878,995,1086,1114,1117,1207,1209,1210,1211,1212,1213,1214,1215],kei:[15,16,17,40,41,42,43,880,885,921,933,995,1012,1140,1141,1142,1144,1188,1191,1195,1225,1236,1237,1244,1250,1251,1261,1272,1277,1281],kept:[40,41,42,1140,1141,1142],kera:1290,kernel:[1225,1235],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,921,930,931,943,947,953,995,999,1019,1020,1021,1049,1144,1188,1192,1273,1274],keyword_color_dict:[40,41,42],kind:[846,847,848,1290],kwarg:[15,16,17,40,41,42,59,63,921,930,943,947,953,995,1049,1144,1250,1251,1273,1274],kwarg_stateful_idx:[1273,1274],kwargs_clon:1144,kwargs_dist:1144,kwargs_uni:1144,label:[43,1238,1239,1240,1241],lamb:[1091,1098,1244,1277],lamb_upd:1091,lambda:[1144,1277,1280,1282,1286],lar:[1091,1098,1099,1244,1277],larger:[846,847,995,1007],largest:[40,41,846,847,848,995,1025],lars_upd:1091,last:[40,41,864,865,866,868,869,873,874,876,877,878,995,998,1014,1046,1072,1076,1114,1117,1207,1212,1214,1217,1222,1225,1235,1261,1271],later:[40,41,995,1006],latest:[1261,1270],layer:[1091,1094,1096,1098,1100,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1242,1243,1244,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1290],layer_norm:1242,layernorm:[1244,1275],layerwis:[1091,1099,1277,1280],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1188,1189,1196],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1217,1218,1219],leaky_relu:[820,1217],learn:[1091,1094,1096,1098,1099,1100,1114,1119,1140,1141,1142,1143,1200,1206,1244,1277,1278,1279,1280,1281,1282,1287,1290],learnabl:[1242,1243,1275,1276],least:43,leav:[15,18,19,40,41,1188,1189,1190,1196,1197],left:[40,41,43,870,871,1114,1117,1207,1209,1210,1211,1212,1213,1214,1215,1244],leftmost:[40,41],len:1144,length:[40,41,42,995,998,1062,1073,1084],lenton2021ivi:1244,lenton:1244,less:[40,41,43,86,218,401,525,655,850,853,860,862,864,867,1144,1200,1204],less_util_node_str:1144,let:[1287,1290],level:1244,librari:[850,861,1244,1286,1290],lightweight:1244,like:[43,1091,1097,1200,1204,1244,1286,1287,1290],likewis:43,limit:[40,41,42,43,846,847,848,995,1007,1008,1009],linalg:[29,1115,1116,1117,1118,1119,1120,1244],line:43,linear0:[1244,1286],linear1:1244,linear2:1286,linear:[995,1027,1046,1114,1217,1218,1219,1220,1225,1233,1244,1261,1262,1263,1264,1265,1266,1267,1268,1286],linear_algebra:[484,485,486,487,864,865,866,867],linear_resampl:[132,297,442,572,703,995],linearli:[995,1027],link:[43,1244],linspac:[132,297,442,572,703,995,998],list:[15,18,19,40,41,392,393,395,842,843,845,868,869,876,877,878,921,930,931,940,941,943,944,945,947,950,951,965,995,998,1001,1003,1052,1071,1072,1081,1086,1140,1141,1142,1144,1188,1189,1190,1192,1196,1197,1225,1226,1227,1228,1229,1230,1231,1232,1244,1245,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268],list_join:[40,41,42],list_stack:[40,41],liter:[864,867],littl:1287,load:[40,41],loaded_kwarg:1144,loader:1244,local:43,local_set:[995,1035],locat:[43,995,1045,1200,1201],log1p:[86,401,525,655,850],log2:[86,401,525,655,850],log:[789,850,859,995,1048,1124,1144,1238,1239,1240,1241],logarithm:[850,859,860,1124,1135],logic:[31,850,861,876,877,878,1122,1123,1244],logical_and:[360,786,1121],logical_not:[86,218,401,525,655,850],logical_or:[360,786,1121],logit:[1238,1241],logspac:[132,297,442,572,703,995],look:[43,1287,1290],loop:[1140,1141,1142,1143],loss:[1239,1240,1241,1244,1286],loss_fn:[1244,1286],lot:1287,low:[40,41,491,1200,1202,1204],lower:[40,41,43,842,844,995,1051,1200,1204],lower_depth:[1273,1274],lowest:[15,18,19,40,41,1188,1197,1200,1202],lstm:[1225,1235,1244,1261],lstm_updat:[43,1225],machin:[846,847,848,1114,1119,1200,1206,1244,1287,1290],made:43,mai:[850,861,873,874,995,998,1018,1022,1244,1287,1290],main:[842,844,864,865,995,1037,1244],mainli:1244,maintain:[43,873,874],make:[43,491,921,1144,1244,1287],maml:[1140,1141,1142],maml_step:1140,manag:[921,1144],manhattan:[864,867],mani:[40,41,43,995,1072,1244],manipulation_funct:[868,869],manner:[15,18,19,40,41,43,1188,1197],manual:[1188,1189,1196,1290],map:[40,41,42,921,930,995,1045,1144,1188,1193,1194,1197,1261,1272,1286],map_cont:[40,41],map_nest_at_index:1188,map_nest_at_indic:1188,map_sequ:[40,41],mapper:[921,930,931,1144],mark:43,mask:[1225,1236,1237],master:43,match:[40,41,995,1049],match_kwarg:995,math:[33,490,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1244],mathbb:[1114,1120],mathbf:[1114,1120],mathemat:[841,864,867],matmul:[43,297,442,572,703,995,1290],matplotlib:1287,matric:[842,844,864,865,1225,1234],matrix:[40,41,842,844,864,865,995,997,1008,1050,1114,1115,1116,1117,1118,1119,1120,1225,1234,1261,1271],matrix_norm:[40,41,171,355,484,618,779,1114],matter:1244,max:[40,41,396,846,847,848,995,1008,1009,1020,1051,1064,1065,1144,1207,1209,1277,1279],max_batch_s:[40,41],max_chunk_s:[921,965,1144],max_depth:[40,41,921,925,928,935,943,947,953,995,1035,1144,1188,1197],max_dev_dim_step_ratio:921,max_freq:[995,1027],max_length:[40,41],max_node_dim_step_ratio:1144,max_norm:[40,41,995,1008,1009],max_split_factor_step_s:[921,1144],max_trust_ratio:[1091,1098,1277,1279],maxim:[1244,1287,1290],maximis:1244,maximum:[40,41,42,703,870,871,921,943,947,953,965,995,1007,1008,1009,1027,1091,1098,1144,1188,1197,1207,1209],mayb:[15,18,19],mdi:1144,mean:[40,41,491,921,950,951,952,953,965,995,1020,1140,1141,1142,1143,1144,1188,1192,1200,1203,1207,1210,1213,1215,1252,1286,1290],measur:[1225,1236,1261,1272],mech:1244,mechan:[1244,1290],medic:1290,member:43,memori:[921,937,960,965,967,970,1144,1225,1235,1244],mention:43,merg:43,merge_with_upstream:43,meshgrid:[297,442,703,995],messag:[1288,1289],meta:[35,1141,1142,1143,1244],method:[40,41,42,43,491,995,1001,1012,1052,1064,1065,1091,1098,1099,1144,1188,1189,1196,1197,1244,1261,1272,1273,1274,1287],might:[995,1018,1290],min:[40,41,396,846,847,848,864,867,995,1020,1053,1064,1065,1074,1114,1119,1144,1207,1211],min_bas:[995,1075],min_denomin:[995,1074],min_dev_dim_s:921,min_node_dim_s:1144,min_sf_tune_step:[921,1144],min_unit_dev_tune_step:921,min_unit_node_tune_step:1144,mind:1244,mini:[1242,1243,1275,1276],minimum:[40,41,703,921,971,975,995,998,1000,1001,1007,1032,1033,1066,1067,1074,1075,1144,1207,1211],miss:[1277,1281],ml_framework:[995,998,1114,1119],mod:[995,1026],mod_depth:[1273,1274],mod_height:[1273,1274],mod_with_top_mod_key_chain:[1273,1274],mode:[40,41,484,486,864,866,919,920,921,950,951,952,953,965,1114,1119,1144,1287],model:[1244,1286],modul:[40,41,42,59,995,1054,1144,1244,1245,1247,1248,1249,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276,1283,1284,1290],moment:[1091,1093,1094,1098,1277,1278,1279],more:[43,868,869,995,1076,1144,1244,1287,1290],more_util_node_str:1144,most:[40,41,43,1114,1119,1244,1290],move:[40,41,43,921,966,1144],much:[43,1244,1290],multi:[491,995,1054,1225,1236,1261,1272],multi_head_attent:1225,multi_index_nest:1188,multi_map:[40,41],multi_nod:1144,multidev:[921,932,933,934,953],multidevcontain:[40,41],multidevic:[921,930],multidevit:[921,924,927,930,931,935],multidevitem:[921,923,926],multidevnest:[921,925,928],multiheadattent:[1244,1261],multinod:[1144,1148],multinodecontain:1144,multinodeit:1144,multinodeitem:1144,multinodenest:1144,multinomi:[177,364,491,624,804,1200],multipl:[40,41,876,877,878,995,1049,1072,1114,1116,1207,1209,1210,1211,1212,1213,1215,1242,1243,1261,1271,1287],multipli:[40,41,995,1015,1207,1212],multiprocess:[40,41,42,442,703,921,930,995,1144],must:[40,41,42,43,842,843,844,845,850,851,852,853,854,855,856,858,860,861,862,864,865,867,868,869,873,874,876,877,878,880,899,905,921,950,951,952,953,965,995,998,1010,1012,1014,1022,1051,1053,1065,1076,1124,1129,1132,1144,1200,1205,1277,1281],mutabl:[1188,1190,1197],mutlidevic:[921,930],mutlinod:1144,mw_tm1:[1091,1094,1098],mx_concat:1244,mxn:[842,844,864,865],mxnet:[43,1244,1290],my_func:43,mymodel:1244,name:[43,919,920,1286],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1287],nan:[40,41,43,841,850,851,853,854,855,856,857,860,862,876,877,878,995,1036,1087],nativ:[15,17,18,19,40,41,43,921,937,939,948,949,960,967,970,971,976,983,984,1144,1244,1245,1250,1251],native_modul:[1250,1251],native_module_class:[1250,1251],nativearrai:[15,18,19,43,842,844,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,866,867,868,869,870,871,873,874,876,877,878,880,899,905,921,939,965,966,971,975,981,986,987,995,996,997,998,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1034,1036,1037,1038,1045,1046,1047,1048,1050,1051,1052,1053,1056,1057,1058,1061,1062,1063,1064,1065,1070,1072,1073,1076,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1144,1188,1190,1197],natur:[850,859,1124,1135,1290],ncdhw:[1225,1230,1231,1261,1266,1267],nchw:[1225,1228,1229,1232,1261,1264,1265,1268],ncw:[1225,1226,1227,1261,1262,1263],ndarrai:[43,392,393,394,395,396,398,399,491,995,1082],ndhwc:[1225,1230,1231,1261,1266,1267],nearest:[995,1063],need:[43,995,1008,1009,1225,1227,1229,1231,1244,1261,1263,1265,1267,1290],neg:[40,41,850,856,864,867,868,869,876,877,878,1207,1212,1214,1217,1219],negative_slop:1252,neither:1144,nest:[15,16,17,18,19,40,41,42,921,943,947,953,995,1001,1081,1140,1141,1142,1144,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1273,1274,1277,1278,1279,1280,1281,1282],nested_indices_wher:1188,nested_map:[1144,1188],network:[1225,1234,1244,1245,1247,1261,1273,1274,1290],neural:[1225,1244,1247,1261,1286],never:43,new_node_percent_mem:1144,new_node_util:1144,new_node_utils_kei:1144,new_std:[1242,1243,1275,1276],newli:[43,919,920,995,1005,1006],newlin:[40,41,42],newshap:[995,1005,1062],next:[846,847,1144,1273,1274,1277,1278,1279,1280,1281,1282],nhwc:[1225,1228,1229,1232,1261,1264,1265,1268],node:[40,41,1188,1189,1196],node_clon:1144,node_dist:1144,node_dist_arrai:1144,node_dist_it:1144,node_in:1144,node_mapp:1144,node_str:1144,node_to_str:1144,node_util:1144,nodedistit:1144,nodedistitem:1144,nodedistnest:1144,nodemanag:[1144,1155],nodemapp:1144,nodemappermultiproc:1144,noinspect:[43,922,972,973,974,1092,1144],non:[40,41,850,861,864,867,876,877,878,919,920,971,985,1273,1274,1277,1281,1287],none:[40,41,42,43,59,61,64,392,393,395,440,442,443,445,447,454,455,456,457,464,465,466,467,468,469,470,471,472,474,484,485,491,492,842,843,845,846,847,848,864,867,868,869,870,871,876,877,878,919,920,921,930,931,937,938,963,964,965,966,971,978,979,980,995,998,1001,1017,1018,1023,1028,1029,1030,1035,1037,1039,1040,1041,1042,1043,1047,1048,1054,1056,1057,1058,1061,1064,1065,1066,1067,1072,1073,1074,1075,1084,1085,1090,1091,1094,1096,1098,1099,1100,1106,1107,1111,1114,1117,1119,1140,1141,1142,1143,1144,1188,1189,1192,1196,1197,1200,1201,1202,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1227,1229,1231,1234,1235,1236,1237,1242,1243,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],norm:[40,41,864,867,995,1008,1009,1114,1117,1243,1244,1276,1277,1279],normal:[1200,1203,1242,1243,1275,1276],normalized_idx:[1242,1243],normalized_shap:[1275,1276],notat:[40,41,1207,1208],note:[43,1114,1119],noth:[40,41,1287],notimplementederror:1144,now:[40,41,43,921,966,995,996,1144,1244,1261,1272,1273,1274,1286,1287,1290],np_concat:1244,np_finfo:396,ns_tune_step:1144,num:[442,464,465,995,1047,1048],num_arrai:[40,41],num_arrays_in_memori:995,num_arrays_on_dev:921,num_band:[995,1027],num_channel:[1261,1268],num_chunk:1144,num_chunks_floor:1144,num_class:[1200,1201],num_cpu_cor:921,num_gpu:[125,440,921,1144],num_head:[1225,1236,1261,1272],num_kei:[1225,1236,1237],num_lay:[1261,1270],num_or_size_split:[40,41,442,470,995,1072],num_output:1144,num_queri:[1225,1236,1237],num_sampl:[442,463,491,492,995,1046,1107,1108,1200,1201],num_task:[1140,1141,1142,1143],number:[40,41,42,841,846,847,848,850,853,864,866,876,877,878,919,920,921,957,958,959,971,982,986,987,995,998,1007,1011,1024,1027,1034,1037,1046,1047,1048,1051,1055,1061,1072,1079,1083,1087,1089,1140,1141,1142,1143,1144,1200,1201,1205,1207,1209,1210,1211,1213,1215,1225,1236,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1287,1290],numer:[43,850,853,856,857,858,861,880,899,905,995,1032,1033,1066,1067,1074,1075,1124,1132,1252],numhead:[1225,1236],numpi:[40,41,43,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,864,866,995,1082,1114,1119,1207,1208,1244,1286,1287,1290],nwc:[1225,1226,1227,1261,1262,1263],obj:[40,41],object:[40,41,42,59,396,846,847,921,971,975,995,998,1001,1091,1188,1191,1193,1194,1195,1198,1199,1200,1206,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274],object_in:[442,445,995,1001],observ:1144,obvious:43,occupi:[846,847,848,995,1064,1065],off:[864,865,995,998],offer:1244,offset:[864,865,1242,1243],often:1287,old:[40,41],on_init:[1261,1272,1273,1274],onc:[43,921,965,1144,1200,1201,1244],one:[40,41,43,864,867,868,869,870,871,921,950,951,952,953,965,971,977,995,1037,1049,1056,1064,1065,1073,1076,1114,1117,1144,1207,1208,1209,1210,1211,1212,1213,1214,1215,1244,1287,1290],one_hot:[132,442,572,703,995],onearrai:[995,1024],ones:[40,41,77,209,392,516,646,842,995,1037,1056,1058,1244],ones_lik:[132,297,442,572,703,995],ongo:43,onli:[40,41,43,491,850,861,868,869,921,1114,1119,1144,1188,1189,1190,1196,1277,1278,1279,1280,1281,1282,1286,1287],onlin:[43,1244],onto:[921,950,951,966,1144,1188,1192,1197],oom:[921,1144],open:[995,998,1200,1204,1244,1290],opencv:1287,oper:[40,41,995,1004,1019,1020,1021,1047,1048,1077,1091,1094,1096,1098,1099,1100,1121,1122,1123,1225,1226,1227,1228,1229,1230,1231,1232,1234,1244,1245],operand:[40,41,850,851,853,854,855,860,862,1207,1208],oppos:[995,1027],optim:[921,1091,1094,1096,1098,1099,1100,1140,1141,1142,1143,1144,1244,1278,1279,1280,1282,1286,1290],optimizer_upd:1091,option:[15,18,19,40,41,42,43,392,393,395,842,843,845,864,867,868,869,870,871,876,877,878,919,920,921,930,931,939,943,944,945,946,947,950,951,952,953,960,963,964,965,966,970,971,976,981,985,994,995,997,998,1000,1001,1008,1009,1010,1015,1017,1018,1027,1028,1029,1030,1034,1036,1037,1044,1046,1047,1048,1049,1052,1054,1056,1057,1058,1061,1064,1065,1068,1070,1072,1073,1074,1075,1076,1084,1086,1087,1090,1091,1094,1096,1097,1098,1099,1100,1102,1107,1111,1114,1117,1119,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1222,1225,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1287],ord:[864,866,867],order:[40,41,42,43,864,867,868,869,873,874,1091,1094,1096,1098,1099,1100,1114,1117,1140,1141,1142,1283,1284],ordered_node_util_kei:1144,org:1290,organ:43,origin:[40,41,42,995,1058,1062,1090,1114,1117],other:[40,41,43,880,882,883,888,890,891,895,897,898,899,900,901,903,905,906,907,908,909,910,912,913,914,916,917,918,919,920,995,997,998,1037,1091,1095,1200,1204,1244,1286,1287,1290],other_i:[43,880,899,905],otherwis:[15,16,17,18,19,40,41,850,856,857,864,867,870,871,876,877,878,921,938,971,978,979,980,995,1004,1084,1085,1088,1091,1097,1102,1106,1140,1141,1142,1144,1207,1209,1210,1211,1213,1215],our:[43,1244,1290],out:[43,491,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,867,868,869,870,871,873,874,876,877,878,880,899,995,998,1124,1128,1225,1233,1235,1244,1261,1269],out_feat_dim:[1225,1236],out_featur:[1225,1233,1234],out_i:[850,856,857],outdat:1290,outer:[1140,1141,1142,1143],outer_batch_fn:[1140,1141,1142],outer_batch_shap:[1225,1234],outer_cost_fn:[1140,1141,1142],outer_v:[1140,1141,1142],outlin:1287,output:[40,41,43,842,843,845,868,869,921,930,931,965,995,998,1006,1028,1037,1061,1079,1091,1095,1124,1129,1144,1200,1202,1203,1204,1225,1227,1229,1231,1233,1235,1236,1237,1244,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272],output_ax:[921,965,1144],output_axi:1144,output_channel:[1261,1262,1263,1264,1265,1266,1267,1270,1271],output_queu:1144,output_shap:[1225,1227,1229,1231,1261,1263,1265,1267],outsid:[995,1007],over:[40,41,864,867,876,877,878,1114,1117,1200,1204,1207,1209,1210,1211,1213,1215,1242,1243,1275,1276],overal:1287,overflow:[995,998],overhead:1287,overrid:[995,1056,1058,1090],overriden:[1277,1281],overwrit:[40,41,921,965,1144],overwrite_at_key_chain:[40,41],own:[1244,1287,1290],packag:[43,1287],pad:[995,1011,1027,1089,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],pad_width:[442,995,1011,1089],page:1244,pair:[1225,1237],parallel:[921,930,931,1144],parallelis:[921,930,931,1144],param:[40,41,42,442,455,456,870,871,921,965,995,996,1029,1030,1056,1057,1144,1273,1274,1286],paramet:[15,16,17,18,19,40,41,42,43,864,865,866,880,899,905,919,920,921,930,931,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,960,963,964,965,966,967,970,971,975,976,977,981,982,983,984,985,986,987,994,995,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1057,1058,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1102,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],parameter:[1200,1203,1204],pardo:1244,pars:[995,1012],part:[842,844,1091,1094,1096,1098,1099,1100,1124,1128,1244,1273,1274,1287],partial:[40,41,43,1273,1274],particl:1290,particular:[43,1290],pass:[40,41,42,43,921,930,965,971,976,995,1006,1091,1105,1140,1141,1142,1144,1250,1251,1273,1274,1277,1281,1283,1284],pattern:[40,41,995,1019,1020,1021],peopl:43,per:[921,1144,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],percent_used_mem_on_dev:921,percent_used_mem_on_nod:1144,percentag:[921,960,1144],perf_count:1144,perform:[40,41,43,876,877,878,921,995,1000,1015,1019,1020,1021,1040,1041,1042,1046,1047,1048,1091,1094,1096,1098,1099,1100,1107,1108,1140,1141,1142,1143,1144,1188,1193,1194,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1233,1235],period:43,permissable_step:1144,permit:43,permut:[491,995,1078,1084],perpendicular:[995,1014],person:[43,1244],physci:1290,pickl:[40,41,1144],pickle_filepath:[40,41],pinv:[355,779,1114],pip:1244,pipelin:1286,pkk:1290,pkkm1:1290,pkm1km1:1290,place:[40,41,43,842,843,845,921,966,995,1024,1028,1040,1041,1042,1144,1277,1278,1279,1280,1281,1282],placehold:[43,1188,1197],pleas:[43,491,1114,1119],point:[43,841,842,843,845,846,847,850,851,853,854,855,860,862,864,867,971,986,995,998,1124,1132],popul:[40,41,1200,1201],popular:1290,population_s:[491,492,1200,1201],portabl:[1244,1245],posit:[15,16,17,846,847,850,856,876,877,878,921,943,947,953,995,996,998,1024,1027,1144,1200,1205,1250,1251],possibi:[40,41],possibl:[43,995,1049,1081,1107,1112,1290],post:[1242,1243],post_shap:[40,41],power:[43,880,905,911,995,1032,1066,1075,1252],practic:1244,pre:[921,1144,1244],pre_shap:[40,41],precis:[846,847,850,862],pred:[1238,1239,1240,1241],predict:[1238,1239,1240,1241,1290],preprint:1244,present:[40,41],preserv:[40,41,42,868,869,1091,1102],preserve_typ:[40,41,475,478,1091,1102],press:1244,prevent:[43,1091,1093,1094,1098,1144,1277,1278,1279],prevet:43,previou:[1091,1094,1098],previous:[995,1006],prime:1244,print:[40,41,42,921,961,995,1059,1244,1286],print_all_arrays_in_memori:995,print_all_arrays_on_dev:921,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1277,1281],prob:[491,492,1200,1201,1225,1233,1261,1269],probabl:[1200,1201,1225,1233,1261,1269],problem:[43,1290],process:[43,921,930,931,960,970,995,1054,1144],process_specif:[921,960,970,1144],prod:[40,41,995,1020],produc:[921,930,931,1144],product:[40,41,995,1014,1015,1050,1207,1208,1225,1236,1237,1261,1272],profil:[125,291,440,565,695,921,1144],progress:43,project:[1244,1286,1287,1290],promot:[43,850,851,852,854,855,860,862,864,867,880,905,1124,1132],prompt:1244,properli:43,properti:[40,41,396,921,933,1144,1273,1274,1277,1278,1279,1280,1282],provid:[40,41,43,868,869,870,871,876,877,878,919,920,921,938,971,978,979,980,985,994,995,1018,1056,1058,1065,1090,1091,1094,1096,1098,1099,1100,1106,1144,1244,1261,1270,1277,1278,1279,1280,1281,1282,1287],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1114,1118],pull:[1244,1245],pure:[40,41,1244,1290],purpos:[43,1290],put:1144,pybroadexcept:1144,pyprotectedmemb:1144,pyshadowingbuiltin:43,pyshadowingnam:[922,972,973,974,1092,1144],python:[40,41,921,960,970,995,998,1144,1244],pytorch:[1091,1094,1096,1098,1099,1100,1114,1119,1244,1277,1278,1279,1280,1281,1282,1286,1287,1290],pyunresolvedrefer:1144,quadrant:[1124,1129],qualiti:43,queri:[40,41,880,894,915,921,954,964,1144,1225,1236,1237,1261,1272],query_dim:[1261,1272],query_kei:[40,41],queue:[40,41,42,921,930,931,995,1060,1068,1144],queue_class:[921,930,931,1144],queue_load_s:[40,41,42],queue_timeout:[40,41,42,995,1144],quick:[491,1244],quickli:[43,1286],radian:[850,854,1124,1125,1127,1129,1136,1138],rai:[1124,1125],rais:[40,41,43,876,877,878,880,905,995,1004,1032,1066,1073,1075,1085,1144,1273,1274,1277,1281],ram:[921,960,967,970,1144],randint:[177,364,491,624,804,1200],random:[37,40,41,492,1201,1202,1203,1204,1205,1206,1244],random_crop:1107,random_norm:[177,364,491,624,804,1200],random_uniform:[177,364,491,624,804,1200],randomli:[491,1107,1111,1225,1233,1261,1269],rang:[491,995,998,1047,1048,1124,1129,1144,1244,1286,1290],rank:[864,867,876,877,878,995,1011,1086,1089],rate:[1091,1094,1096,1098,1099,1100,1140,1141,1142,1143,1261,1272,1277,1278,1279,1280,1281,1282],rather:[40,41,43,921,965,995,998,1044,1091,1097,1144],ratio:[921,1091,1098,1107,1112,1144,1277,1279],raw:[40,41,1114,1119],raw_delta:1144,reach:[43,921,943,947,953,1144,1188,1197],read:[40,41],readi:[1144,1286],real:[1124,1125,1128],realiti:1287,rearrang:[40,41,995,1019,1021],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1140,1142],receiv:[43,921,930,931,995,999,1049,1144,1261,1271],receivess:[921,1144],receivng:[1140,1143],recev:[1140,1141,1142],recognit:1290,recommend:[850,861,1244],rectifi:[1217,1219,1220],recurr:[1225,1235],recurrent_bia:[1225,1235],recurrent_kernel:[1225,1235],recurs:[40,41,1188,1189,1190,1196,1197],redefin:43,reduc:[40,41,870,871,876,877,878,921,965,995,1020,1114,1119,1144,1207,1209,1210,1211,1212,1213,1214,1215],reduce_max:[40,41,184,369,493,629,811,1207],reduce_mean:[40,41,184,369,493,629,811,1207,1244,1286],reduce_min:[40,41,184,369,493,629,811,1207],reduce_prod:[40,41,184,369,493,629,811,1207],reduce_std:[40,41,369,1207],reduce_sum:[40,41,184,369,493,629,811,1144,1207],reduce_var:[40,41,184,369,493,629,811,1207],reduct:[39,40,41,442,468,469,876,877,878,995,1020,1064,1065,1208,1209,1210,1211,1212,1213,1214,1215,1244],refactor:43,refer:[43,850,859,876,877,878,1091,1093,1094,1114,1120,1261,1271,1290],reflect:43,reflected_oper:[0,13,14],regard:[921,1144],regardless:[40,41,919,920],register_paramet:1286,reimplement:1290,rel:[864,865,868,869,873,874,1091,1094,1096,1098,1099,1100],rel_slice_obj:1144,relat:43,relev:[1277,1278,1279,1280,1281,1282],relu:[820,1217,1218,1219,1244,1286],remain:[43,995,1062,1188,1192],remaind:[40,41,995,1026,1072],remov:[40,41,43,864,865,870,871,995,1073,1140,1141,1142],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,868,869],rep:[995,1079],repeat:[40,41,43,297,703,995,1021,1079,1144,1287],repeated_config_check:[921,1144],repeatedli:[1188,1195],repetit:[40,41,995,1061,1079],replac:[40,41,43,491,492,995,1007,1064,1065,1200,1201],repo:[43,1244],repositori:43,repres:[43,850,851,855,971,977,982,1225,1234],represent:[40,41,42,43,841,846,847,848,850,852,921,948,949,971,977,983,984,995,1071,1081,1144],reptil:[1140,1143],reptile_step:1140,request:[1244,1245],requir:[43,850,862,919,920,971,975,995,998,1001,1250,1251],resampl:[995,1046],reserv:43,reshap:[40,41,43,491,703,995],reshape_lik:[40,41],respect:[850,852,858,880,899,995,1022,1091,1093,1094,1095,1096,1098,1099,1100,1114,1119,1124,1132,1140,1141,1142,1143],respond:43,respons:[43,1144],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,867,870,871,876,877,878,880,899,905,921,930,995,998,1022,1064,1065,1076,1114,1117,1121,1122,1123,1124,1132,1144,1207,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1244],ret:1144,ret_dict:1144,ret_fn:[921,930,931,1144],retain:[1091,1095],retain_grad:[475,476,1091,1095],retreiv:1144,retrn:[995,1071],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1140,1141,1142,1143],return_sequ:[1261,1270],return_st:[1261,1270],rev:[995,1018],revers:[40,41,868,869,995,1018,1084],review:43,right:[40,41,43],rk_e:1290,robot:1244,ronald:1244,root:[43,850,862],round:[297,442,703,850,853,862,995,998,1144],row:[995,1037,1200,1201],rule:[43,880,905,995,998,1124,1132],run:[43,921,930,1091,1093,1094,1098,1140,1141,1142,1143,1144,1244,1245,1261,1272,1273,1274],safe:[921,930,1144],safety_factor:[921,1144],same:[15,16,17,40,41,43,842,844,850,853,864,865,866,868,869,870,871,873,874,921,930,931,965,966,971,975,995,996,1010,1025,1026,1029,1030,1056,1058,1063,1064,1065,1076,1090,1091,1097,1102,1124,1128,1140,1141,1142,1144,1207,1208,1225,1226,1227,1228,1229,1230,1231,1232,1244,1261,1262,1263,1264,1265,1266,1267,1268,1286,1290],same_arrai:[40,41],sampl:[995,1046,1107,1108,1200,1201,1203,1204,1225,1233,1244,1261,1269],satisfi:[995,1001,1114,1116,1120],save:[40,41,995,1069,1080,1107,1109,1273,1274],save_dir:[440,441,921,936,1144],save_weight:[1273,1274],scalar:[864,867,995,1007,1056,1083,1087],scale:[921,963,964,1091,1099,1144,1225,1233,1236,1237,1242,1243,1261,1269,1272,1277,1280],scaled_dot_product_attent:1225,scatter:[995,1056,1064,1065],scatter_flat:[132,297,442,572,703,995],scatter_nd:[132,297,442,572,703,995],scene:[1091,1094,1096,1098,1099,1100],schemat:1244,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[870,871],second:[40,41,850,852,858,864,865,921,952,995,1002,1014,1022,1060,1068,1078,1091,1093,1094,1098,1140,1142,1144,1277,1278,1279],secondli:1290,sector:[850,851],see:[43,59,396,440,441,491,850,852,858,864,867,876,877,878,880,899,905,921,933,934,935,936,971,995,998,1047,1048,1091,1124,1132,1244,1252,1254,1255,1257,1258,1260],seed:[40,41,177,491,804,1200],seed_valu:[40,41,491,1200,1205],seem:1244,seen_set:[995,1035],select:[995,1001,1073,1287,1290],self:[40,41,43,59,396,440,441,880,899,905,921,933,934,935,936,971,1091,1144,1244,1252,1254,1255,1257,1258,1260,1277,1281,1286,1290],self_i:[880,899],sent:1144,seper:[43,995,1027],seq:[40,41,42,1207,1208,1273,1274],sequenc:[15,16,17,40,41,42,43,491,919,920,921,930,931,940,941,942,943,944,945,946,947,950,951,965,971,975,995,998,1001,1003,1005,1010,1011,1037,1049,1052,1057,1061,1062,1065,1072,1076,1079,1084,1089,1091,1095,1107,1111,1112,1114,1117,1144,1188,1199,1200,1202,1204,1207,1209,1210,1211,1212,1213,1214,1215,1225,1226,1227,1228,1229,1230,1231,1232,1242,1243,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1273,1274,1275,1276,1277,1281,1283,1284],sequenti:1244,seri:43,set:[15,18,19,40,41,870,871,873,874,921,950,951,963,964,965,995,997,1017,1037,1066,1067,1068,1069,1091,1094,1096,1097,1098,1099,1100,1114,1117,1144,1188,1189,1196,1198,1199,1200,1201,1205,1207,1209,1210,1211,1212,1213,1214,1215,1244,1261,1270,1277,1278,1279,1280,1281,1282,1287,1290],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:921,set_default_dtyp:971,set_default_float_dtyp:971,set_default_int_dtyp:971,set_default_nod:1144,set_exception_debug_mod:44,set_framework:[40,41,43,59,1144,1244,1286,1287,1290],set_ivy_backend:[40,41],set_min_bas:995,set_min_denomin:995,set_nest_at_index:1188,set_nest_at_indic:1188,set_queue_timeout:995,set_split_factor:[921,1144],set_stat:[1277,1278,1279,1280,1281,1282],set_tmp_dir:995,set_with_grad:1091,setter:1144,sever:1290,sgd:[1244,1277],shape0:1144,shape:[40,41,43,392,393,395,442,454,469,491,703,842,843,844,845,864,865,868,869,870,871,873,874,921,933,971,975,995,996,1005,1010,1011,1024,1025,1026,1028,1030,1034,1037,1056,1057,1058,1061,1062,1063,1064,1065,1071,1073,1076,1089,1090,1107,1111,1114,1116,1119,1124,1128,1129,1144,1200,1202,1203,1204,1207,1208,1225,1227,1229,1231,1261,1263,1264,1265,1266,1267,1268,1275,1276],shape_slic:[40,41],shape_to_tupl:995,share:[40,41,1244,1287],shift:1144,should:[40,41,42,43,491,842,844,850,851,852,853,854,855,856,857,858,860,861,862,864,865,867,870,871,880,899,905,919,920,921,995,1005,1006,1012,1056,1062,1091,1094,1096,1098,1099,1100,1124,1132,1144,1207,1208,1244],show:[40,41,1244,1290],show_mod_in_top_mod:[1273,1274],show_structur:[1273,1274],show_sub_contain:[40,41],show_v:[1273,1274],show_v_in_top_v:[1273,1274],shown:[40,41],shp:1144,shuffl:[40,41,177,491,804,1200],shuffle_h5_fil:[40,41],side:43,sigmoid:[820,1217,1244,1286],signatur:[43,59,396,440,441,442,475,480,484,488,489,491,921,933,934,935,936,971,1091,1252,1254,1255,1257,1258,1260],signific:1290,similar:[43,1225,1236,1261,1272],similarli:[1114,1119],simpl:[43,995,1023,1244,1287,1290],simpler:43,simplest:1287,simpli:[40,41,43,1244,1287,1290],simultan:1244,sin:[789,995,1027,1124,1138,1287],sinco:1287,sine:[850,851,1124,1127,1136,1137],singl:[40,41,919,920,921,930,931,950,951,952,953,995,1073,1083,1087,1107,1112,1144,1200,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1244,1287,1290],singleton:[864,867,876,877,878],singular:[864,866],sinh:[789,1124],siren:[1244,1252],situat:43,size:[40,41,42,442,468,864,865,866,870,871,876,877,878,921,944,945,946,947,963,964,965,995,998,1005,1047,1048,1064,1072,1107,1111,1114,1117,1144,1200,1201,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1261,1262,1263],size_ordered_arrai:[40,41],skew:[1114,1120],skinv:1290,skip:[40,41],slice:[40,41,995,1029,1030,1144,1188,1195],slice_kei:[40,41],slice_obj:[40,41,1144],slice_via_kei:[40,41],slide:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],slope:[1217,1219],small:[1238,1239,1240,1241,1242,1243,1244,1275,1276,1287],smaller:[995,1007],smallest:[40,41,846,847,848,850,853,995,1000],smallest_norm:[396,846,847],softmax:[193,502,820,1217,1225,1236,1237],softplu:[820,1217],solut:43,solv:1290,some:[40,41,43,995,998,1091,1093,1094,1096,1098,1099,1100,1105,1225,1233,1244,1261,1269,1287,1290],some_backend:43,some_namespac:43,someth:[43,1290],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,864,866,874,1144],sort_by_kei:[40,41],sorting_funct:[873,874],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,873,874,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1288,1289,1290],space:[995,998,1027,1047,1048],spars:[1238,1241],sparse_cross_entropi:1238,spawn:[995,1054],special:[43,850,851,853,854,855,860,862],specif:[40,41,43,850,861,921,963,995,1012,1019,1020,1021,1054,1140,1141,1142,1143,1144,1200,1206,1244,1273,1274,1286,1287],specifc:[1200,1201],specifi:[40,41,43,842,843,844,845,864,865,867,868,869,870,871,873,874,876,877,878,921,940,941,942,943,944,945,946,947,950,951,955,957,961,964,965,966,971,975,977,995,998,1000,1001,1007,1010,1011,1028,1029,1030,1036,1047,1048,1076,1086,1089,1114,1117,1144,1188,1193,1194,1198,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215],sphinx:43,split:[40,41,132,297,442,572,703,921,930,944,945,946,947,963,964,965,995,1049,1144],split_arg:1144,split_factor:[921,930,1144],split_func_cal:[921,1144],split_siz:1144,spread:[921,953,1144],sqrt:[86,218,401,525,655,850,864,867],squar:[850,862,995,1037,1114,1116],squeez:[132,297,442,572,703,995],stabil:[873,874,995,1074,1075],stabl:[873,874,995,1032,1033,1066,1067,1074,1075],stable_divid:995,stable_pow:995,stack:[40,41,297,703,842,844,864,865,995,1107,1112,1188,1189,1196,1261,1270],stack_imag:[167,351,480,614,775,1107],stacked_dim_s:1144,stage:43,standard:[40,41,846,847,1200,1203,1207,1213,1242,1243,1244,1245,1275,1276],start:[40,41,43,440,441,442,443,464,465,491,921,936,995,998,1047,1048,1144,1244,1287],starting_index:[40,41],starting_split_factor:[921,1144],state:[1144,1225,1235,1244,1247,1248,1249,1250,1251,1252,1254,1255,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286],statement:1287,static_argnam:[442,447,919,920],static_argnum:[442,447,919,920],std:[491,1200,1203],step:[40,41,442,443,921,995,998,1047,1048,1091,1093,1094,1096,1098,1099,1100,1140,1141,1142,1143,1144,1244,1277,1278,1279,1280,1281,1282,1286,1290],stephen:1244,stick:1244,still:[40,41,43],stochast:[1277,1282],stop:[40,41,440,441,442,443,464,465,921,936,965,995,998,1047,1048,1091,1094,1096,1098,1099,1100,1102,1140,1141,1142,1143,1144,1277,1278,1279,1280,1281,1282],stop_gradi:[40,41,346,475,609,769,921,965,1091,1094,1096,1098,1099,1100,1140,1141,1142,1143,1144,1277,1278,1279,1280,1281,1282],stopiter:1144,store:[40,41,995,1027,1072,1091,1105,1273,1274],store_var:[1273,1274],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,846,847,848,919,920,921,930,931,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,965,971,976,977,982,983,984,985,986,987,994,995,1001,1017,1019,1020,1021,1052,1054,1057,1064,1065,1114,1117,1119,1140,1141,1142,1143,1144,1188,1192,1207,1208,1250,1251,1261,1272,1273,1274],str_to_nod:1144,straight:1287,strength:[1244,1290],stride:[1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],string:[40,41,43,921,937,939,948,949,954,960,966,967,970,971,975,981,983,984,985,994,995,998,1001,1017,1037,1057,1058,1090,1144,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274],structur:[40,41,42,43,995,1012],structural_diff:[40,41],style:43,sub:[40,41,43,864,865,921,944,945,950,951,952,953,995,1072,1140,1141,1142,1143,1144],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1144,sub_mod:[1273,1274],sub_modul:[1283,1284],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1244,1245,1275,1276,1283,1284],subsequ:43,subset:43,substr:[40,41],suffici:[1114,1119],suggest:1244,suitabl:[1107,1112],sum:[40,41,442,468,469,864,867,921,950,951,952,953,965,995,1016,1020,1064,1065,1144,1207,1208,1214],summat:[40,41,1207,1208],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,105,107,110,113,114,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,214,215,216,219,220,221,222,223,224,225,228,229,230,232,234,237,240,241,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,352,353,354,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,420,422,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,540,541,542,544,546,549,552,553,561,566,567,568,569,570,571,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,625,626,627,628,630,631,632,633,634,635,636,640,641,642,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,672,674,676,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,776,777,778,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,869,871,874,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1243,1244,1248,1249,1251,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1289,1290],supports_inplac:995,suppos:1290,sure:43,svd:[100,227,415,539,669,864],swap:[40,41,995,1078],swapax:[40,41,572,703,995,1290],symmetr:[1114,1120],syntax:[440,442,475,480,484,488,489,491],tab:1244,take:[43,995,1046],taken:[43,864,865,1207,1209,1210,1211,1213,1215],tan:[789,1124,1128],tangent:[1124,1128,1129,1130,1138,1139,1217,1224],tanh:[789,820,1124,1217],target:[40,41,921,937,940,941,942,943,944,945,946,947,950,951,952,953,966,1144,1244],target_dict:[40,41],task:[43,1140,1141,1142,1143],team:[43,1290],templat:1244,temporari:[995,1069,1080],tensor:[40,41,43,442,468,469,921,939,971,981,995,998,1000,1005,1047,1048,1051,1053,1056,1057,1058,1062,1064,1065,1072,1090,1144,1200,1201,1202,1225,1233,1235,1244,1261,1269,1271,1277,1278,1279,1280,1281,1282,1286,1287],tensorflow:[43,1114,1119,1225,1227,1229,1231,1244,1261,1263,1265,1267,1287,1290],term:[40,41,43,1225,1235,1244,1261,1271],termcolor:[40,41,42],termin:[40,41,42,1144],test:[43,850,856,857,876,877,878,971,986,987],test_array_api:43,tf_concat:1244,than:[40,41,43,846,847,850,853,860,862,864,867,868,869,921,965,995,998,1007,1025,1044,1051,1073,1076,1091,1097,1144,1200,1204,1244,1287],thei:[40,41,43,1124,1129,1140,1141,1142,1200,1201,1244,1283,1284,1287],them:[1244,1290],themselv:[1188,1189],therefor:43,thi:[40,41,42,43,850,861,870,871,921,943,947,953,960,965,970,995,998,1027,1060,1062,1068,1091,1094,1096,1097,1098,1099,1100,1105,1114,1117,1144,1188,1192,1197,1207,1209,1210,1211,1212,1213,1214,1215,1225,1234,1244,1273,1274,1277,1278,1279,1280,1281,1282,1286,1287,1290],thing:[43,1244],those:[40,41,43,864,866,995,1007,1091,1105,1144],though:43,thought:43,threshold:[995,1051,1053],through:[40,41,43],tick:43,tickbox:43,tile:[297,572,703,995],time:[43,995,1079,1091,1094,1098,1140,1141,1142,1143,1144,1200,1201,1225,1235,1261,1272,1273,1274,1290],timeout:[40,41,42,921,930,931,995,1060,1068,1144],timestep:[1225,1235,1261,1270],titl:[43,1244],tmp_dir:995,tmp_dr:[995,1069],to_appli:[40,41],to_clon:[921,1144],to_dev:[40,41,125,291,440,565,695,921],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[921,1144],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1244],to_ivy_modul:[195,828,1244,1250],to_json:[40,41],to_kv_fn:[1225,1236],to_kv_v:[1225,1236],to_list:[40,41,442,703,995],to_multi_dev:[40,41],to_mut:[1188,1190,1197],to_n:[15,40,41,1244],to_nod:1144,to_numpi:[40,41,442,703,995,1244,1286],to_out_fn:[1225,1236],to_out_v:[1225,1236],to_q_fn:[1225,1236],to_q_v:[1225,1236],to_raw:[40,41],to_scalar:[442,703,995],todo:[1144,1244,1245],togeth:[40,41,1283,1284],tool:[1244,1287],top_mod:[1273,1274],topic:1290,torch:[43,919,920,1244,1286,1287,1290],torch_concat:1244,torchfcmodel:1286,total:[40,41,42,921,967,1144],total_mem_on_dev:921,total_mem_on_nod:1144,tpu:[921,968,1144],tpu_is_avail:[440,565,695,921,1144],tpye:[971,982],trace:[40,41,995,1044],track:[43,921,1144,1188,1197,1273,1274],track_submod_call_ord:[1273,1274],track_submod_ret:[1273,1274],trail:[1275,1276],train:[1091,1093,1094,1098,1244,1245],trainabl:[1091,1097,1244,1245,1250,1251,1273,1274,1283],trainer:1244,tran:1290,transform:[1225,1233,1234],transpos:[40,41,132,297,442,703,921,952,995,1144,1225,1227,1229,1231,1261,1263,1265,1267],travers:[15,18,19,40,41,1188,1197],treat:[40,41,919,920],tri:[40,41],triangular:[842,844],trigonometr:[1124,1125,1128,1136],tril:[77,209,392,516,646,842],trim_kei:[40,41],trust:[1091,1098,1277,1279],truth:[850,858,880,899,995,1022,1121,1122,1123],try_else_non:995,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[921,1144],tune_dev_alloc:921,tune_dev_split:921,tune_node_alloc:1144,tune_node_split:1144,tune_step:[921,1144],tupl:[15,16,17,18,19,40,41,43,392,393,395,842,843,845,864,866,867,868,869,876,877,878,919,920,995,1011,1027,1028,1071,1089,1144,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1202,1207,1209,1210,1211,1212,1213,1214,1215],tutori:43,two:[40,41,842,844,864,865,866,995,998,1002,1014,1050,1078,1114,1117],type:[15,18,40,41,42,43,59,398,399,440,441,842,843,844,845,847,848,850,851,852,853,854,855,856,857,858,860,861,862,864,865,867,868,869,873,874,876,877,878,880,899,905,921,933,934,935,936,948,949,953,965,971,975,976,977,981,982,983,984,985,986,987,994,995,996,998,1001,1010,1012,1022,1025,1026,1028,1037,1044,1056,1057,1058,1063,1077,1087,1090,1091,1097,1102,1124,1132,1144,1244,1252,1254,1255,1257,1258,1260,1273,1274,1287],types_to_iteratively_nest:[40,41,42],uint8:[1107,1109,1113],uint8_img_to_float_img:1107,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[850,852],underwai:43,unecessari:43,unfairli:43,unif:1144,unifi:[40,41,921,950,951,952,953,965,1144,1244],uniform:[40,41,1200,1201,1203,1204,1252,1254,1255,1258,1259],uniformli:[1200,1202,1204],unify_arrai:1144,unify_it:1144,unify_nest:1144,union:[15,18,19,40,41,43,392,393,395,396,398,399,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,864,866,867,868,869,870,871,873,874,876,877,878,880,899,905,919,920,921,939,944,945,946,947,965,966,971,975,976,977,981,982,983,984,985,986,987,994,995,996,997,998,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1045,1046,1047,1048,1050,1051,1052,1053,1056,1057,1058,1061,1062,1063,1064,1065,1070,1071,1072,1073,1076,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1144,1188,1189,1190,1196,1197],uniqu:[921,930,931,1140,1141,1142,1143,1144,1188,1192],unique_kwarg:1144,unit:[43,921,1124,1125,1127,1144,1217,1218,1219,1220],unitari:[864,866],unless:[995,1056,1058,1090],unlik:[921,1144],unnorm:[1200,1201],unpack:[995,1086],unrol:[1225,1235],unset:1287,unset_debug_mod:44,unset_default_devic:921,unset_default_dtyp:971,unset_default_float_dtyp:971,unset_default_int_dtyp:971,unset_framework:[59,1287],unset_with_grad:1091,unstack:[40,41,132,297,442,572,703,995],until:43,unus:[919,920],updat:[40,41,442,468,469,921,930,995,1042,1064,1065,1091,1093,1094,1096,1098,1099,1100,1140,1141,1142,1144,1188,1193,1194,1198,1199,1225,1235,1244,1245,1250,1251,1277,1278,1279,1280,1281,1282,1287,1290],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1200,1204],upper_depth:[1273,1274],upstream:43,usabl:[1244,1290],usag:[921,965,1144],use:[40,41,42,43,491,921,930,931,956,968,995,1061,1074,1075,1114,1119,1144,1225,1236,1242,1243,1244,1275,1276,1287,1290],used:[40,41,43,491,864,865,921,930,960,963,964,970,971,982,995,1032,1033,1049,1058,1064,1065,1066,1067,1090,1091,1098,1099,1114,1117,1140,1141,1142,1143,1144,1188,1197,1261,1272,1277,1279,1280,1286,1287],used_dev:[921,930],used_mem_on_dev:921,used_mem_on_nod:1144,used_node_str:1144,used_node_strs_dict:1144,useful:[40,41,921,965,1144,1225,1234,1244,1287],user:[1244,1261,1272,1273,1274,1287,1290],uses:1244,using:[40,41,43,1091,1093,1094,1188,1191,1195,1207,1208,1225,1233,1237,1244,1261,1269,1286,1287,1290],util:[921,954,1144],utility_funct:[876,877,878],v_with_top_v_key_chain:[1273,1274],val:[40,41,442,459,460,461,880,915,995,1040,1041,1042,1066,1067],valid:[876,877,878,971,976,995,1074,1075,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],valid_dtyp:971,valu:[40,41,442,850,853,858,864,866,867,870,871,873,874,880,899,921,933,964,965,995,996,998,1000,1007,1008,1009,1011,1012,1018,1022,1027,1028,1029,1030,1045,1047,1048,1051,1053,1060,1061,1062,1063,1064,1065,1066,1067,1068,1084,1087,1088,1089,1091,1095,1098,1107,1113,1121,1122,1123,1124,1133,1134,1135,1140,1141,1142,1144,1188,1192,1193,1194,1198,1199,1200,1203,1204,1207,1209,1211,1225,1236,1237,1242,1243,1261,1272,1275,1276,1277,1279],value_is_nan:995,vanilla:[1140,1142],var_shap:1252,variabl:[15,16,17,18,19,40,41,346,475,609,769,995,1004,1040,1041,1042,1043,1044,1077,1091,1094,1095,1096,1097,1098,1099,1100,1102,1105,1140,1141,1142,1143,1225,1236,1242,1243,1250,1251,1252,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],variable_data:[475,769,1091],varianc:[40,41,1207,1215,1290],varieti:1287,variou:[43,1244],vector:[40,41,484,487,864,866,867,995,1009,1014,1114,1120,1225,1234,1261,1271],vector_norm:[40,41,100,227,415,539,669,864],vector_to_skew_symmetric_matrix:[171,355,484,618,779,1114],verbos:1289,veri:[43,1244],verifi:43,version:43,via:[1188,1189,1196,1287],view:[1107,1112],vision:1244,visual:1287,volum:[1225,1230],vw_tm1:[1091,1094,1098],wai:[1287,1290],wait:[40,41,42,43],want:[43,1244,1287,1290],warn:[59,66,67,68,69,70],warp:[480,481,1107,1108],watch:1286,websit:43,weight:[1091,1093,1094,1096,1098,1099,1100,1225,1234,1235,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1277,1279,1280],weight_initi:[1261,1262,1263,1264,1265,1266,1267,1268,1270,1271],weights_path:[1273,1274],well:[40,41,995,1036],were:[40,41,1144],what:[43,1244],when:[40,41,42,43,864,866,921,995,1006,1075,1088,1144,1244,1273,1274,1287,1290],where:[40,41,43,297,442,703,850,859,864,866,876,877,878,880,905,995,998,1005,1007,1011,1024,1038,1045,1056,1089,1188,1189,1196,1200,1201],wherea:43,wherebi:[1188,1197],whether:[15,18,19,40,41,42,850,857,876,877,878,919,920,921,939,952,956,960,965,968,970,971,981,985,986,987,994,995,997,1002,1003,1015,1018,1023,1027,1034,1036,1039,1043,1044,1049,1070,1077,1086,1087,1091,1094,1095,1096,1097,1098,1099,1100,1102,1140,1141,1142,1143,1144,1188,1189,1190,1192,1196,1197,1200,1201,1217,1218,1225,1233,1244,1250,1251,1261,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],which:[40,41,42,43,491,842,843,844,845,846,847,848,864,865,867,868,869,870,871,873,874,876,877,878,919,920,921,930,931,939,944,945,946,947,950,951,952,953,955,957,961,963,964,965,971,976,981,985,994,995,998,1001,1010,1012,1014,1015,1016,1018,1028,1029,1030,1031,1037,1038,1046,1047,1048,1055,1056,1057,1058,1059,1061,1064,1065,1072,1076,1086,1088,1090,1091,1094,1095,1096,1098,1099,1100,1102,1104,1105,1107,1109,1114,1117,1124,1129,1144,1188,1192,1193,1194,1198,1199,1200,1201,1202,1203,1204,1207,1209,1210,1211,1212,1213,1214,1215,1217,1222,1225,1236,1237,1244,1250,1251,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1286,1287],whilst:43,whitespac:[40,41,42],who:43,whose:[43,842,844,850,851,854,855,864,865,868,869,880,905,995,1001,1006,1207,1208,1209,1210,1211,1213,1215],why:[1244,1245],width:[1107,1112],wiki:1290,wikipedia:1290,window:[1107,1112,1225,1226,1227,1228,1229,1230,1231,1232,1261,1262,1263,1264,1265,1266,1267,1268],wise:[40,41,43,850,852,858,861,880,899,905,995,1007,1022,1025,1026,1051,1053,1063,1091,1094,1096,1098,1100,1121,1122,1123,1124,1125,1127,1128,1129,1132,1133,1134,1135,1136,1138,1217,1218,1219,1220,1221,1222,1223,1224],wish:1287,with_bia:[1261,1271],with_cal:[995,1018],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1091,1101],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1144,with_partial_v:[1273,1274],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,442,470,995,1072,1144],with_to_kv_fn:[1261,1272],with_to_out_fn:[1261,1272],with_to_q_fn:[1261,1272],within:[15,18,19,43,864,866,995,998,1200,1204],without:[40,41,43,995,1060,1062,1068,1188,1190,1287],wonder:1244,word:[15,16,17,995,998,1200,1204,1250,1251],work:[43,1286],worker:[921,930,931,1144],worker_class:[921,930,931,1144],worker_kwarg:1144,would:[43,1217,1222,1244,1287,1290],wrap:[15,40,41,42,43,440,442,475,480,484,488,489,491,995,1006,1091,1105,1244],wrapper:43,write:[40,41,43,1244,1245,1290],written:[43,1244,1290],ws_new:[1091,1094,1096,1098,1099,1100],x1_i:[850,852,858,995,1022,1124,1132],x2_i:[850,852,858,995,1022,1124,1132],x_feat_dim:[1225,1236],x_i:[850,851,853,854,855,856,857,860,861,862],x_in:[1244,1286],x_inv:[1114,1116],x_max:[442,995,1007],x_min:[442,995,1007],x_sub:1144,xkk:1290,xkkm1:1290,xkm1km1:1290,xs0:1144,xs_t:1144,year:[1244,1290],yet:[1188,1197,1290],yield:[995,1088],you:[43,1244,1286,1287,1290],your:[1244,1245,1286,1287,1290],your_awesome_project:1287,yourself:[43,1244],yourslef:43,youtub:43,zero:[40,41,77,209,392,516,646,842,844,850,861,864,867,876,877,878,995,1011,1056,1058,1064,1065,1089,1090,1091,1093,1094,1098,1099,1225,1233,1244,1252,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1277,1278,1279,1280],zero_pad:[297,442,572,703,995],zeros_lik:[132,297,442,572,703,995],zip:1144,zk_e:1290},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1018,"function":[77,81,86,99,104,106,108,109,111,112,209,213,218,226,231,233,235,236,238,239,392,396,401,414,419,421,423,424,426,427,516,520,525,538,543,545,547,548,550,551,646,650,655,668,673,675,677,678,680,681,842,846,850,863,868,870,872,873,875,876],Ones:1257,Using:1287,abs:[298,573,704,996],aco:[790,1125],acosh:[791,1126],activ:[193,379,502,638,820,1217,1247],adam:1278,adam_step:1093,adam_upd:1094,algebra:[100,171,227,355,415,484,539,618,669,779,864],all:[113,240,428,552,682,877],all_equ:997,all_nested_indic:1189,ani:[114,241,429,553,683,878],api:[0,43,75,116,207,243,390,431,514,555,644,685,840],arang:[133,299,443,574,705,998],arg_nam:999,argmax:[107,234,422,546,676,871],argmin:[134,444,575,706,1000],args_to_ivi:16,args_to_n:17,argsort:[110,237,425,549,679,874],arithmet:[1,117,244,432,556,686],arrai:[0,3,43,75,115,116,118,135,207,242,243,245,252,300,390,430,431,433,445,514,554,555,557,576,644,684,685,687,707,840,880,1001],array_equ:[301,708,1002],arrays_equ:1003,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[792,1127],asinh:[87,402,526,656,851],assert_supports_inplac:1004,atan2:[794,1129],atan:[793,1128],atanh:[795,1130],attribut:[5,119,246,434,558,688],backend:[43,73],bilinear_resampl:[168,352,481,615,776,1108],binary_cross_entropi:1239,bitwis:[7,120,247,435,559,689],bitwise_and:[88,219,403,527,657,852],broadcast_to:[302,709,1005],builder:51,builtin:[115,242,252,430,554,684,880],builtin_ab:[253,881],builtin_add:[254,882],builtin_and:[255,883],builtin_bool:[256,884],builtin_contain:[257,885],builtin_deepcopi:[258,886],builtin_dir:[259,887],builtin_eq:[260,888],builtin_float:[261,889],builtin_floordiv:[262,890],builtin_g:[263,891],builtin_getattr:[264,892],builtin_getattribut:[265,893],builtin_getitem:[266,894],builtin_gt:[267,895],builtin_int:[268,896],builtin_invert:[269,897],builtin_l:[270,898],builtin_lt:[271,561,691,899],builtin_mul:[272,900],builtin_n:[273,901],builtin_neg:[274,902],builtin_or:[275,903],builtin_po:[276,904],builtin_pow:[277,905],builtin_radd:[278,906],builtin_rand:[279,907],builtin_rfloordiv:[280,908],builtin_rmul:[281,909],builtin_ror:[282,910],builtin_rpow:[283,911],builtin_rsub:[284,912],builtin_rtruediv:[285,913],builtin_rxor:[286,914],builtin_setitem:[287,915],builtin_sub:[288,916],builtin_truediv:[289,917],builtin_xor:[290,918],cache_fn:1006,cast:[136,303,446,577,710,975],ceil:[89,220,404,528,658,853],choleski:[780,1115],choose_random_framework:61,citat:1244,clear_framework_stack:62,clear_mem_on_dev:[697,937],clip:[304,711,1007],clip_matrix_norm:1008,clip_vector_norm:1009,clone:1159,clone_arrai:1160,clone_it:1161,clone_nest:1162,clonedit:1146,cloneditem:1145,clonednest:1147,closest_valid_dtyp:976,code:1290,comparison:[9,121,248,436,560,690],compil:[305,447,712,919,920],concaten:[137,306,448,578,713,1010],constant:[76,208,391,515,645,841],constant_pad:[307,579,714,1011],contain:[40,41],container_typ:[715,1012],content:1244,contribut:43,conv1d:[199,382,506,832,1226,1262],conv1d_transpos:[200,383,507,833,1227],conv1dtranspos:1263,conv2d:[201,384,508,640,834,1228,1264],conv2d_transpos:[202,385,509,835,1229],conv2dtranspos:1265,conv3d:[203,386,510,641,836,1230,1266],conv3d_transpos:[204,387,511,837,1231],conv3dtranspos:1267,convers:15,convert:[195,828,1250],convert_dtyp:977,copy_arrai:[716,1013],copy_nest:1190,core:[124,251,439,564,694,879],cos:[90,405,529,659,854],cosh:[91,406,530,660,796,855,1131],cprint:1289,creat:43,creation:[77,209,392,516,646,842],cross:[308,717,1014],cross_entropi:1240,cumprod:[138,309,449,718,1015],cumsum:[719,1016],current_framework:63,current_framework_str:[720,1017],data:[81,85,213,217,396,400,520,524,650,654,846,849],debug_mod:45,debugg:44,default_devic:938,default_dtyp:978,default_float_dtyp:979,default_int_dtyp:980,default_nod:1163,depthwise_conv2d:[205,388,512,642,838,1232],depthwiseconv2d:1268,design:43,dev:[127,293,567,698,939],dev_clon:940,dev_clone_arrai:941,dev_clone_it:942,dev_clone_nest:943,dev_dist:944,dev_dist_arrai:945,dev_dist_it:946,dev_dist_nest:947,dev_from_str:[128,294,568,699,948],dev_to_str:[129,295,569,700,949],dev_unifi:950,dev_unify_arrai:951,dev_unify_it:952,dev_unify_nest:953,dev_util:954,devclonedit:924,devcloneditem:923,devclonednest:925,devdistit:927,devdistitem:926,devdistnest:928,devic:[20,125,291,440,565,695,921],devmapp:930,devmappermultiproc:931,diagon:[101,228,416,540,670,865],distribute_nest:1164,divid:1132,document:1244,dropout:[1233,1269],dtype:[139,310,450,580,721,971,981],dtype_bit:[140,311,451,581,722,982],dtype_from_str:[141,312,452,582,723,983],dtype_to_str:[142,313,453,583,724,984],ecosystem:52,einops_rearrang:1019,einops_reduc:1020,einops_repeat:1021,einsum:[185,370,494,630,812,1208],elementwis:[86,218,401,525,655,850],equal:[584,725,1022],erf:[490,797,1133],execute_with_gradi:[165,347,476,610,770,1095],exist:1023,exp:[798,1134],expand_dim:[314,726,1024],finfo:[83,215,398,522,652,847],firstlayersiren:1254,flip:[105,232,420,544,674,869],float_img_to_uint8_img:1109,floor:[315,727,1025],floormod:[316,728,1026],fomaml_step:1141,fork:43,fourier_encod:1027,framework:59,full:[143,317,454,585,729,1028],func:72,gather:[144,318,455,586,730,1029],gather_nd:[145,319,456,587,731,1030],geglu:1248,gelu:[380,503,821,1218,1249],gener:[22,132,297,442,572,703,995],get_all_arrays_in_memori:1031,get_all_arrays_on_dev:955,get_framework:64,get_min_bas:1032,get_min_denomin:1033,get_num_dim:[732,1034],get_referrers_recurs:1035,glorotuniform:1255,gpu_is_avail:[956,1165],gradient:[24,164,346,475,609,769,1091],gradient_descent_upd:1096,gradient_imag:[169,353,482,616,777,1110],gym:53,handler:59,has_nan:1036,ident:[146,320,457,588,733,1037],iinfo:[84,216,399,523,653,848],imag:[26,167,351,480,614,775,1107],index_nest:1191,indices_wher:[147,321,458,734,1038],initi:1252,inplac:[11,122,249,437,562,692],inplace_arrays_support:1039,inplace_decr:[148,322,459,589,735,1040],inplace_incr:[149,323,460,590,736,1041],inplace_upd:[150,324,461,591,737,1042],inplace_variables_support:1043,inv:[781,1116],invalid_dtyp:985,is_arrai:[151,325,462,592,738,1044],is_float_dtyp:986,is_int_dtyp:987,is_vari:[166,348,477,611,771,1097],isfinit:[92,221,407,531,661,856],isinf:[326,593,739,1045],isnan:[93,222,408,532,662,857],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,839,1286,1287,1290],ivymodul:[196,829],jax:74,keep:43,lamb:1279,lamb_upd:1098,lar:1280,lars_upd:1099,layer:[198,381,505,639,831,1225,1261],layer_norm:1243,layernorm:1276,leaky_relu:[822,1219],less:[94,223,409,533,663,858],linalg:[28,1114],linear:[100,171,227,355,415,484,539,618,669,779,864,1234,1271],linear_resampl:[152,327,463,594,740,1046],linspac:[153,328,464,595,741,1047],list:43,log1p:[95,410,534,664,859],log2:[96,411,535,665,860],log:[799,1135],logic:[30,175,360,488,622,786,1121],logical_and:[361,787,1122],logical_not:[97,224,412,536,666,861],logical_or:[362,788,1123],logspac:[154,329,465,596,742,1048],loss:1238,lstm:1270,lstm_updat:1235,maml_step:1142,manipul:[104,231,419,543,673,868],map:1192,map_nest_at_index:1193,map_nest_at_indic:1194,match_kwarg:1049,math:[32,176,363,489,623,789,1124],matmul:[330,597,743,1050],matrix_norm:[172,356,485,619,782,1117],maximum:[744,1051],mech:54,memori:55,meshgrid:[331,745,1052],meta:[34,1140],method:[99,226,414,538,668,863],minimum:[746,1053],model:56,modul:[1273,1274,1286],multi:1144,multi_head_attent:1236,multi_index_nest:1195,multidevcontain:42,multidevit:934,multidevitem:933,multidevnest:935,multiheadattent:1272,multinodeit:1150,multinodeitem:1149,multinodenest:1151,multinomi:[178,365,492,625,805,1201],multiprocess:[747,1054],mxnet:206,nativ:1286,nest:1188,nested_indices_wher:1196,nested_map:1197,network:1286,next:1244,node:[1144,1166],node_dist:1167,node_dist_arrai:1168,node_dist_it:1169,node_str:1170,node_to_str:1171,node_util:1172,nodedistit:1153,nodedistitem:1152,nodedistnest:1154,nodemapp:1156,nodemappermultiproc:1157,norm:[1242,1275],num_arrays_in_memori:1055,num_arrays_on_dev:957,num_cpu_cor:958,num_gpu:[130,959,1173],numpi:389,nutshel:1244,one_hot:[155,466,598,748,1056],ones:[78,210,393,517,647,843,1057],ones_lik:[156,332,467,599,749,1058],oper:[1,3,7,9,11,13,43,117,118,120,121,122,123,244,245,247,248,249,250,432,433,435,436,437,438,556,557,559,560,562,563,686,687,689,690,692,693],optim:[1277,1281],optimizer_upd:1100,overview:1244,percent_used_mem_on_dev:960,percent_used_mem_on_nod:1174,pinv:[357,783,1118],portabl:1290,print_all_arrays_in_memori:1059,print_all_arrays_on_dev:961,profil:[126,292,441,566,696,936,1158],pull:43,queue_timeout:1060,randint:[179,366,626,806,1202],random:[36,177,364,491,624,804,1200],random_crop:1111,random_norm:[180,367,627,807,1203],random_uniform:[181,368,628,808,1204],reduce_max:[186,371,495,631,813,1209],reduce_mean:[187,372,496,632,814,1210],reduce_min:[188,373,497,633,815,1211],reduce_prod:[189,374,498,634,816,1212],reduce_std:[375,1213],reduce_sum:[190,376,499,635,817,1214],reduce_var:[191,377,500,636,818,1215],reduct:[38,184,369,493,629,811,1207],reflect:[13,123,250,438,563,693],relu:[823,1220],repeat:[333,750,1061],reptile_step:1143,request:43,reshap:[751,1062],robot:57,round:[334,752,1063],run:1287,scaled_dot_product_attent:1237,scatter_flat:[157,335,468,600,753,1064],scatter_nd:[158,336,469,601,754,1065],search:[106,233,421,545,675,870],seed:[182,809,1205],sequenti:[1283,1284],set:[108,235,423,547,677,872],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:962,set_default_dtyp:988,set_default_float_dtyp:989,set_default_int_dtyp:990,set_default_nod:1175,set_exception_debug_mod:48,set_framework:65,set_min_bas:1066,set_min_denomin:1067,set_nest_at_index:1198,set_nest_at_indic:1199,set_queue_timeout:1068,set_split_factor:[963,1176],set_tmp_dir:1069,set_with_grad:1101,sgd:1282,shape:[755,1070],shape_to_tupl:1071,shuffl:[183,810,1206],sigmoid:[824,1221],signatur:[99,226,414,538,668,863],sin:[800,1136],sinh:[801,1137],siren:1258,softmax:[194,504,825,1222],softplu:[826,1223],sort:[109,236,424,548,678,873],sparse_cross_entropi:1241,split:[159,337,470,602,756,1072],split_factor:[964,1177],split_func_cal:[965,1178],sqrt:[98,225,413,537,667,862],squeez:[160,338,471,603,757,1073],stable_divid:1074,stable_pow:1075,stack:[339,758,1076],stack_imag:[170,354,483,617,778,1112],standard:43,statist:[111,238,426,550,680,875],stop_gradi:[349,478,612,772,1102],str_to_nod:1179,submodul:43,supports_inplac:1077,svd:[102,229,417,541,671,866],swapax:[604,759,1078],tan:[802,1138],tanh:[803,827,1139,1224],tensorflow:513,tile:[340,605,760,1079],tmp_dir:1080,to_dev:[131,296,570,701,966],to_ivi:18,to_ivy_modul:[197,830,1251],to_list:[761,1081],to_n:19,to_nod:1180,to_numpi:[762,1082],to_scalar:[763,1083],todo:43,torch:643,total_mem_on_dev:967,total_mem_on_nod:1181,tpu_is_avail:[571,702,968,1182],train:1286,trainabl:1286,transpos:[161,341,472,764,1084],tree:1244,tril:[79,211,394,518,648,844],try_else_non:1085,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,213,217,396,400,520,524,650,654,846,849],uint8_img_to_float_img:1113,unifi:1183,unify_arrai:1184,unify_it:1185,unify_nest:1186,unset_debug_mod:49,unset_default_devic:969,unset_default_dtyp:991,unset_default_float_dtyp:992,unset_default_int_dtyp:993,unset_framework:71,unset_with_grad:1103,unstack:[162,342,473,606,765,1086],updat:43,used_mem_on_dev:970,used_mem_on_nod:1187,util:[112,239,427,551,681,876],valid_dtyp:994,value_is_nan:1087,variabl:[350,479,613,773,1104],variable_data:[774,1105],vector_norm:[103,230,418,542,672,867],vector_to_skew_symmetric_matrix:[174,359,487,621,785,1120],verbos:1288,vision:58,where:[343,766,1088,1244],why:1290,with_grad:1106,wrapper:72,write:1287,your:43,zero:[80,212,395,519,649,845,1260],zero_pad:[344,607,767,1089],zeros_lik:[163,345,474,608,768,1090]}})