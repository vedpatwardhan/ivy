Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/all","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/all","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/all","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/all","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/all","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/finfo","functional/ivy/core/dtype/iinfo","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isfinite","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/all","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/all.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/all.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/all.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/all.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/all.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/finfo.rst","functional/ivy/core/dtype/iinfo.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isfinite.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/all.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[709,0,0,"-"]},"ivy.functional.backends.numpy":{array_api:[340,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[341,0,0,"-"],creation_functions:[342,0,0,"-"],data_type_functions:[343,0,0,"-"],data_types:[344,0,0,"-"],elementwise_functions:[345,0,0,"-"],function_and_method_signatures:[346,0,0,"-"],linear_algebra_extension:[347,0,0,"-"],linear_algebra_functions:[348,0,0,"-"],manipulation_functions:[349,0,0,"-"],searching_functions:[350,0,0,"-"],set_functions:[351,0,0,"-"],sorting_functions:[352,0,0,"-"],statistical_functions:[353,0,0,"-"],utility_functions:[354,0,0,"-"]},"ivy.functional.backends.numpy.core":{device:[356,0,0,"-"],general:[358,0,0,"-"],gradients:[396,0,0,"-"],image:[401,0,0,"-"],linalg:[405,0,0,"-"],logic:[408,0,0,"-"],math:[409,0,0,"-"],random:[411,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[357,1,1,""],clear_mem_on_dev:[356,2,1,""],dev:[356,2,1,""],dev_from_str:[356,2,1,""],dev_to_str:[356,2,1,""],gpu_is_available:[356,2,1,""],num_gpus:[356,2,1,""],to_dev:[356,2,1,""],tpu_is_available:[356,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[357,3,1,""],start:[357,3,1,""],stop:[357,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[358,2,1,""],arange:[359,2,1,""],argmax:[360,2,1,""],argmin:[361,2,1,""],argsort:[358,2,1,""],array:[362,2,1,""],asarray:[358,2,1,""],astype:[358,2,1,""],cast:[363,2,1,""],ceil:[358,2,1,""],clip:[358,2,1,""],compile:[364,2,1,""],concatenate:[365,2,1,""],constant_pad:[358,2,1,""],container_types:[358,2,1,""],copy_array:[358,2,1,""],cumprod:[366,2,1,""],current_framework_str:[358,2,1,""],dtype:[367,2,1,""],dtype_bits:[368,2,1,""],dtype_from_str:[369,2,1,""],dtype_to_str:[370,2,1,""],equal:[358,2,1,""],flip:[371,2,1,""],floor:[358,2,1,""],floormod:[358,2,1,""],full:[372,2,1,""],gather:[373,2,1,""],gather_nd:[374,2,1,""],get_num_dims:[358,2,1,""],identity:[375,2,1,""],indices_where:[376,2,1,""],inplace_arrays_supported:[358,2,1,""],inplace_decrement:[377,2,1,""],inplace_increment:[378,2,1,""],inplace_update:[379,2,1,""],inplace_variables_supported:[358,2,1,""],is_array:[380,2,1,""],isfinite:[381,2,1,""],linear_resample:[382,2,1,""],linspace:[383,2,1,""],logspace:[384,2,1,""],matmul:[358,2,1,""],meshgrid:[358,2,1,""],multiprocessing:[358,2,1,""],one_hot:[385,2,1,""],ones:[386,2,1,""],ones_like:[387,2,1,""],round:[358,2,1,""],scatter_flat:[388,2,1,""],scatter_nd:[389,2,1,""],shape:[358,2,1,""],split:[390,2,1,""],squeeze:[391,2,1,""],to_list:[358,2,1,""],to_numpy:[358,2,1,""],to_scalar:[358,2,1,""],transpose:[392,2,1,""],unstack:[393,2,1,""],where:[358,2,1,""],zero_pad:[358,2,1,""],zeros:[394,2,1,""],zeros_like:[395,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[397,2,1,""],is_variable:[398,2,1,""],stop_gradient:[399,2,1,""],variable:[400,2,1,""],variable_data:[396,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[402,2,1,""],gradient_image:[403,2,1,""],stack_images:[404,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[406,2,1,""],vector_to_skew_symmetric_matrix:[407,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[410,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[412,2,1,""],randint:[411,2,1,""],random_normal:[411,2,1,""],random_uniform:[411,2,1,""],seed:[411,2,1,""],shuffle:[411,2,1,""]},"ivy.functional.ivy":{array_api:[710,0,0,"-"],core:[725,0,0,"-"],nn:[1076,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[711,0,0,"-"],creation_functions:[712,0,0,"-"],data_type_functions:[713,0,0,"-"],data_types:[714,0,0,"-"],elementwise_functions:[715,0,0,"-"],function_and_method_signatures:[716,0,0,"-"],linear_algebra_extension:[717,0,0,"-"],linear_algebra_functions:[718,0,0,"-"],manipulation_functions:[719,0,0,"-"],searching_functions:[720,0,0,"-"],set_functions:[721,0,0,"-"],sorting_functions:[722,0,0,"-"],statistical_functions:[723,0,0,"-"],utility_functions:[724,0,0,"-"]},"ivy.functional.ivy.core":{array_builtins:[726,0,0,"-"],compilation:[765,0,0,"-"],device:[767,0,0,"-"],dtype:[817,0,0,"-"],general:[843,0,0,"-"],gradients:[946,0,0,"-"],image:[962,0,0,"-"],linalg:[969,0,0,"-"],logic:[977,0,0,"-"],math:[981,0,0,"-"],meta:[999,0,0,"-"],multi_node:[1003,0,0,"-"],nest:[1047,0,0,"-"],random:[1059,0,0,"-"],reductions:[1066,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[727,2,1,""],builtin_add:[728,2,1,""],builtin_and:[729,2,1,""],builtin_bool:[730,2,1,""],builtin_contains:[731,2,1,""],builtin_deepcopy:[732,2,1,""],builtin_dir:[733,2,1,""],builtin_eq:[734,2,1,""],builtin_float:[735,2,1,""],builtin_floordiv:[736,2,1,""],builtin_ge:[737,2,1,""],builtin_getattr:[738,2,1,""],builtin_getattribute:[739,2,1,""],builtin_getitem:[740,2,1,""],builtin_gt:[741,2,1,""],builtin_int:[742,2,1,""],builtin_invert:[743,2,1,""],builtin_le:[744,2,1,""],builtin_lt:[745,2,1,""],builtin_mul:[746,2,1,""],builtin_ne:[747,2,1,""],builtin_neg:[748,2,1,""],builtin_or:[749,2,1,""],builtin_pos:[750,2,1,""],builtin_pow:[751,2,1,""],builtin_radd:[752,2,1,""],builtin_rand:[753,2,1,""],builtin_rfloordiv:[754,2,1,""],builtin_rmul:[755,2,1,""],builtin_ror:[756,2,1,""],builtin_rpow:[757,2,1,""],builtin_rsub:[758,2,1,""],builtin_rtruediv:[759,2,1,""],builtin_rxor:[760,2,1,""],builtin_setitem:[761,2,1,""],builtin_sub:[762,2,1,""],builtin_truediv:[763,2,1,""],builtin_xor:[764,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[766,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[767,1,1,""],DevClonedItem:[769,1,1,""],DevClonedIter:[770,1,1,""],DevClonedNest:[771,1,1,""],DevDistItem:[772,1,1,""],DevDistIter:[773,1,1,""],DevDistNest:[774,1,1,""],DevManager:[767,1,1,""],DevMapper:[776,1,1,""],DevMapperMultiProc:[777,1,1,""],MultiDev:[767,1,1,""],MultiDevItem:[779,1,1,""],MultiDevIter:[780,1,1,""],MultiDevNest:[781,1,1,""],Profiler:[782,1,1,""],clear_mem_on_dev:[783,2,1,""],default_device:[784,2,1,""],dev:[785,2,1,""],dev_clone:[786,2,1,""],dev_clone_array:[787,2,1,""],dev_clone_iter:[788,2,1,""],dev_clone_nest:[789,2,1,""],dev_dist:[790,2,1,""],dev_dist_array:[791,2,1,""],dev_dist_iter:[792,2,1,""],dev_dist_nest:[793,2,1,""],dev_from_str:[794,2,1,""],dev_to_str:[795,2,1,""],dev_unify:[796,2,1,""],dev_unify_array:[797,2,1,""],dev_unify_iter:[798,2,1,""],dev_unify_nest:[799,2,1,""],dev_util:[800,2,1,""],get_all_arrays_on_dev:[801,2,1,""],gpu_is_available:[802,2,1,""],num_arrays_on_dev:[803,2,1,""],num_cpu_cores:[804,2,1,""],num_gpus:[805,2,1,""],percent_used_mem_on_dev:[806,2,1,""],print_all_arrays_on_dev:[807,2,1,""],set_default_device:[808,2,1,""],set_split_factor:[809,2,1,""],split_factor:[810,2,1,""],split_func_call:[811,2,1,""],to_dev:[812,2,1,""],total_mem_on_dev:[813,2,1,""],tpu_is_available:[814,2,1,""],unset_default_device:[815,2,1,""],used_mem_on_dev:[816,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[767,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[767,3,1,""],da_tune_step:[767,3,1,""],dim_size:[767,3,1,""],ds_tune_step:[767,3,1,""],map:[767,3,1,""],repeated_config_check:[767,3,1,""],tune_step:[767,3,1,""],tuned:[767,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[776,3,1,""],map:[776,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[777,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[767,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[779,3,1,""],items:[779,3,1,""],keys:[779,3,1,""],shape:[779,3,1,""],values:[779,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[780,3,1,""],at_dev:[780,3,1,""],at_devs:[780,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[781,3,1,""],at_dev:[781,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[782,3,1,""],start:[782,3,1,""],stop:[782,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[817,1,1,""],DefaultFloatDtype:[817,1,1,""],DefaultIntDtype:[817,1,1,""],astype:[817,2,1,""],cast:[821,2,1,""],closest_valid_dtype:[822,2,1,""],convert_dtype:[823,2,1,""],default_dtype:[824,2,1,""],default_float_dtype:[825,2,1,""],default_int_dtype:[826,2,1,""],dtype:[827,2,1,""],dtype_bits:[828,2,1,""],dtype_from_str:[829,2,1,""],dtype_to_str:[830,2,1,""],finfo:[831,2,1,""],iinfo:[832,2,1,""],invalid_dtype:[833,2,1,""],is_float_dtype:[834,2,1,""],is_int_dtype:[835,2,1,""],set_default_dtype:[836,2,1,""],set_default_float_dtype:[837,2,1,""],set_default_int_dtype:[838,2,1,""],unset_default_dtype:[839,2,1,""],unset_default_float_dtype:[840,2,1,""],unset_default_int_dtype:[841,2,1,""],valid_dtype:[842,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[817,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[817,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[817,3,1,""]},"ivy.functional.ivy.core.general":{"default":[869,2,1,""],abs:[844,2,1,""],all_equal:[845,2,1,""],arange:[846,2,1,""],arg_names:[847,2,1,""],argmax:[848,2,1,""],argmin:[849,2,1,""],argsort:[850,2,1,""],array:[851,2,1,""],array_equal:[852,2,1,""],arrays_equal:[853,2,1,""],asarray:[843,2,1,""],assert_supports_inplace:[854,2,1,""],broadcast_to:[855,2,1,""],cache_fn:[856,2,1,""],ceil:[857,2,1,""],clip:[858,2,1,""],clip_matrix_norm:[859,2,1,""],clip_vector_norm:[860,2,1,""],concatenate:[861,2,1,""],constant_pad:[862,2,1,""],container_types:[863,2,1,""],copy_array:[864,2,1,""],cross:[865,2,1,""],cumprod:[866,2,1,""],cumsum:[867,2,1,""],current_framework_str:[868,2,1,""],einops_rearrange:[870,2,1,""],einops_reduce:[871,2,1,""],einops_repeat:[872,2,1,""],equal:[873,2,1,""],exists:[874,2,1,""],expand_dims:[875,2,1,""],flip:[876,2,1,""],floor:[877,2,1,""],floormod:[878,2,1,""],fourier_encode:[879,2,1,""],full:[880,2,1,""],gather:[881,2,1,""],gather_nd:[882,2,1,""],get_all_arrays_in_memory:[883,2,1,""],get_min_base:[884,2,1,""],get_min_denominator:[885,2,1,""],get_num_dims:[886,2,1,""],get_referrers_recursive:[887,2,1,""],has_nans:[888,2,1,""],identity:[889,2,1,""],indices_where:[890,2,1,""],inplace_arrays_supported:[891,2,1,""],inplace_decrement:[892,2,1,""],inplace_increment:[893,2,1,""],inplace_update:[894,2,1,""],inplace_variables_supported:[895,2,1,""],is_array:[896,2,1,""],isfinite:[897,2,1,""],isinf:[898,2,1,""],isnan:[899,2,1,""],linear_resample:[900,2,1,""],linspace:[901,2,1,""],logspace:[902,2,1,""],match_kwargs:[903,2,1,""],matmul:[904,2,1,""],maximum:[905,2,1,""],meshgrid:[906,2,1,""],minimum:[907,2,1,""],multiprocessing:[908,2,1,""],num_arrays_in_memory:[909,2,1,""],one_hot:[910,2,1,""],ones:[911,2,1,""],ones_like:[912,2,1,""],print_all_arrays_in_memory:[913,2,1,""],queue_timeout:[914,2,1,""],repeat:[915,2,1,""],reshape:[916,2,1,""],round:[917,2,1,""],scatter_flat:[918,2,1,""],scatter_nd:[919,2,1,""],set_min_base:[920,2,1,""],set_min_denominator:[921,2,1,""],set_queue_timeout:[922,2,1,""],set_tmp_dir:[923,2,1,""],shape:[924,2,1,""],shape_to_tuple:[925,2,1,""],split:[926,2,1,""],squeeze:[927,2,1,""],stable_divide:[928,2,1,""],stable_pow:[929,2,1,""],stack:[930,2,1,""],supports_inplace:[931,2,1,""],swapaxes:[932,2,1,""],tile:[933,2,1,""],tmp_dir:[934,2,1,""],to_list:[935,2,1,""],to_numpy:[936,2,1,""],to_scalar:[937,2,1,""],transpose:[938,2,1,""],try_else_none:[939,2,1,""],unstack:[940,2,1,""],value_is_nan:[941,2,1,""],where:[942,2,1,""],zero_pad:[943,2,1,""],zeros:[944,2,1,""],zeros_like:[945,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[946,1,1,""],adam_step:[948,2,1,""],adam_update:[949,2,1,""],execute_with_gradients:[950,2,1,""],gradient_descent_update:[951,2,1,""],is_variable:[952,2,1,""],lamb_update:[953,2,1,""],lars_update:[954,2,1,""],optimizer_update:[955,2,1,""],set_with_grads:[956,2,1,""],stop_gradient:[957,2,1,""],unset_with_grads:[958,2,1,""],variable:[959,2,1,""],variable_data:[960,2,1,""],with_grads:[961,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[946,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[963,2,1,""],float_img_to_uint8_img:[964,2,1,""],gradient_image:[965,2,1,""],random_crop:[966,2,1,""],stack_images:[967,2,1,""],uint8_img_to_float_img:[968,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[970,2,1,""],inv:[971,2,1,""],matrix_norm:[972,2,1,""],pinv:[973,2,1,""],svd:[974,2,1,""],vector_norm:[975,2,1,""],vector_to_skew_symmetric_matrix:[976,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[978,2,1,""],logical_not:[979,2,1,""],logical_or:[980,2,1,""]},"ivy.functional.ivy.core.math":{acos:[982,2,1,""],acosh:[983,2,1,""],asin:[984,2,1,""],asinh:[985,2,1,""],atan2:[987,2,1,""],atan:[986,2,1,""],atanh:[988,2,1,""],cos:[989,2,1,""],cosh:[990,2,1,""],divide:[991,2,1,""],erf:[992,2,1,""],exp:[993,2,1,""],log:[994,2,1,""],sin:[995,2,1,""],sinh:[996,2,1,""],tan:[997,2,1,""],tanh:[998,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1000,2,1,""],maml_step:[1001,2,1,""],reptile_step:[1002,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1003,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1048,2,1,""],copy_nest:[1049,2,1,""],index_nest:[1050,2,1,""],map:[1051,2,1,""],map_nest_at_index:[1052,2,1,""],map_nest_at_indices:[1053,2,1,""],multi_index_nest:[1054,2,1,""],nested_indices_where:[1055,2,1,""],nested_map:[1056,2,1,""],set_nest_at_index:[1057,2,1,""],set_nest_at_indices:[1058,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1060,2,1,""],randint:[1061,2,1,""],random_normal:[1062,2,1,""],random_uniform:[1063,2,1,""],seed:[1064,2,1,""],shuffle:[1065,2,1,""]},"ivy.functional.ivy.core.reductions":{all:[1067,2,1,""],einsum:[1068,2,1,""],reduce_max:[1069,2,1,""],reduce_mean:[1070,2,1,""],reduce_min:[1071,2,1,""],reduce_prod:[1072,2,1,""],reduce_std:[1073,2,1,""],reduce_sum:[1074,2,1,""],reduce_var:[1075,2,1,""]},"ivy.functional.ivy.nn":{activations:[1077,0,0,"-"],layers:[1085,0,0,"-"],losses:[1098,0,0,"-"],norms:[1102,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1078,2,1,""],leaky_relu:[1079,2,1,""],relu:[1080,2,1,""],sigmoid:[1081,2,1,""],softmax:[1082,2,1,""],softplus:[1083,2,1,""],tanh:[1084,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1086,2,1,""],conv1d_transpose:[1087,2,1,""],conv2d:[1088,2,1,""],conv2d_transpose:[1089,2,1,""],conv3d:[1090,2,1,""],conv3d_transpose:[1091,2,1,""],depthwise_conv2d:[1092,2,1,""],dropout:[1093,2,1,""],linear:[1094,2,1,""],lstm_update:[1095,2,1,""],multi_head_attention:[1096,2,1,""],scaled_dot_product_attention:[1097,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1099,2,1,""],cross_entropy:[1100,2,1,""],sparse_cross_entropy:[1101,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1103,2,1,""]},"ivy.graph_compiler":{compiler:[1104,0,0,"-"],globals:[1107,0,0,"-"],graph:[1110,0,0,"-"],helpers:[1112,0,0,"-"],op_logging:[1113,0,0,"-"],param:[1114,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1105,2,1,""],show_graph:[1106,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1108,2,1,""],log_global_inference_rel_times:[1109,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1110,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1110,3,1,""],add_fn_to_dict:[1110,3,1,""],add_param:[1110,3,1,""],compiled:[1110,3,1,""],connect:[1110,3,1,""],debug_info:[1110,3,1,""],get_param:[1110,3,1,""],get_param_recursive:[1110,3,1,""],include_generators:[1110,3,1,""],increment_param_count:[1110,3,1,""],log_all_ops:[1110,3,1,""],params_all_empty:[1110,3,1,""],save_debug_info:[1110,3,1,""],set_param:[1110,3,1,""],show:[1110,3,1,""],show_debug_info:[1110,3,1,""],update_inference_times:[1110,3,1,""],with_array_caching:[1110,3,1,""]},"ivy.graph_compiler.param":{Param:[1114,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1114,3,1,""],count:[1114,3,1,""],depth:[1114,3,1,""],get:[1114,3,1,""],is_var:[1114,3,1,""],ptype:[1114,3,1,""],set:[1114,3,1,""],set_count:[1114,3,1,""],shape:[1114,3,1,""]},"ivy.stateful":{activations:[1119,0,0,"-"],converters:[1122,0,0,"-"],initializers:[1124,0,0,"-"],layers:[1133,0,0,"-"],module:[1145,0,0,"-"],norms:[1147,0,0,"-"],optimizers:[1149,0,0,"-"],sequential:[1155,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1120,1,1,""],GELU:[1121,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1120,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1121,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1123,2,1,""]},"ivy.stateful.initializers":{Constant:[1124,1,1,""],FirstLayerSiren:[1126,1,1,""],GlorotUniform:[1127,1,1,""],KaimingNormal:[1124,1,1,""],Ones:[1129,1,1,""],Siren:[1130,1,1,""],Uniform:[1124,1,1,""],Zeros:[1132,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1124,3,1,""],create_variables:[1124,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1126,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1127,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1124,3,1,""],create_variables:[1124,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1129,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1130,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1124,3,1,""],create_variables:[1124,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1132,3,1,""]},"ivy.stateful.layers":{Conv1D:[1134,1,1,""],Conv1DTranspose:[1135,1,1,""],Conv2D:[1136,1,1,""],Conv2DTranspose:[1137,1,1,""],Conv3D:[1138,1,1,""],Conv3DTranspose:[1139,1,1,""],DepthwiseConv2D:[1140,1,1,""],Dropout:[1141,1,1,""],LSTM:[1142,1,1,""],Linear:[1143,1,1,""],MultiHeadAttention:[1144,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1134,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1135,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1136,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1137,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1138,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1139,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1140,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1141,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1142,3,1,""],get_initial_state:[1142,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1143,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1144,3,1,""]},"ivy.stateful.module":{Module:[1146,1,1,""]},"ivy.stateful.module.Module":{__init__:[1146,3,1,""],build:[1146,3,1,""],build_mode:[1146,3,1,""],built:[1146,3,1,""],check_submod_rets:[1146,3,1,""],compile_graph:[1146,3,1,""],compile_on_next_step:[1146,3,1,""],get_mod_key:[1146,3,1,""],mod_depth:[1146,3,1,""],mod_height:[1146,3,1,""],mod_with_top_mod_key_chain:[1146,3,1,""],save_weights:[1146,3,1,""],show_graph:[1146,3,1,""],show_mod_in_top_mod:[1146,3,1,""],show_structure:[1146,3,1,""],show_v_in_top_v:[1146,3,1,""],sub_mods:[1146,3,1,""],track_submod_call_order:[1146,3,1,""],track_submod_rets:[1146,3,1,""],v_with_top_v_key_chains:[1146,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1148,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1148,3,1,""]},"ivy.stateful.optimizers":{Adam:[1150,1,1,""],LAMB:[1151,1,1,""],LARS:[1152,1,1,""],Optimizer:[1153,1,1,""],SGD:[1154,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1150,3,1,""],set_state:[1150,3,1,""],state:[1150,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1151,3,1,""],set_state:[1151,3,1,""],state:[1151,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1152,3,1,""],set_state:[1152,3,1,""],state:[1152,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1153,3,1,""],compile_graph:[1153,3,1,""],compile_on_next_step:[1153,3,1,""],set_state:[1153,3,1,""],show_graph:[1153,3,1,""],step:[1153,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1154,3,1,""],set_state:[1154,3,1,""],state:[1154,3,1,""]},"ivy.stateful.sequential":{Sequential:[1156,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1156,3,1,""]},"ivy.verbosity":{cprint:[1161,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1160,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1149,1150,1151],"02886":1116,"100":[1003,1116,1158],"2021":1116,"2102":1116,"360":[981,989,995,997],"999":[946,948,949,953,1149,1150,1151],"abstract":[767,782,1116,1149,1153],"boolean":[40,41,767,802,814,817,833,842,843,845,852,853,888,890,891,895,896,898,899,931,941,946,952,977,978,979,980,999,1000,1001,1003],"case":[15,18,19,40,41,42,43,767,806,813,816,843,846,916,918,919,969,972,975,1003,1047,1050,1054,1116,1133,1144,1145,1146,1149,1153,1162],"catch":[843,869],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,356,357,767,769,770,771,772,773,774,776,777,779,780,781,782,794,795,817,843,847,903,911,946,960,1003,1047,1049,1056,1098,1100,1101,1110,1114,1116,1119,1120,1121,1122,1123,1124,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1162],"default":[15,18,19,40,41,42,43,765,766,767,776,777,784,785,789,790,791,792,793,796,797,798,799,806,809,810,811,816,817,824,825,826,827,843,845,846,848,849,850,859,860,861,862,865,866,867,876,879,880,881,886,888,889,900,902,903,906,908,911,914,915,918,919,922,924,926,928,929,938,940,941,944,946,949,951,952,953,954,955,957,961,969,972,975,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1059,1060,1062,1063,1066,1067,1069,1070,1071,1072,1073,1074,1075,1077,1078,1082,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],"final":[40,41,843,879,901,902,1003,1133,1144,1159],"float":[40,41,42,43,726,751,767,776,777,800,806,809,813,816,817,825,831,834,843,846,859,860,862,879,880,884,885,902,920,921,922,928,929,946,948,949,951,953,954,955,962,964,968,981,991,999,1000,1001,1002,1003,1059,1062,1063,1077,1079,1085,1093,1096,1097,1098,1099,1100,1101,1102,1103,1133,1141,1144,1147,1148,1149,1150,1151,1152,1153,1154],"function":[15,40,41,43,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1116,1119,1120,1121,1149,1152,1153,1154,1158,1159,1162],"import":[1116,1159,1162],"int":[40,41,42,43,411,726,751,765,766,767,789,790,791,792,793,796,797,798,799,804,805,811,817,826,828,835,843,848,849,850,855,861,862,866,867,870,871,872,875,876,879,880,881,886,889,900,901,902,910,911,915,916,918,919,924,925,926,927,930,932,933,938,940,943,944,946,948,949,953,962,966,967,969,972,975,999,1000,1001,1002,1003,1047,1056,1059,1060,1061,1063,1064,1066,1069,1070,1071,1072,1073,1074,1075,1077,1082,1085,1086,1087,1088,1089,1090,1091,1092,1096,1098,1100,1101,1102,1103,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1147,1148],"long":[1085,1095],"new":[40,41,43,411,817,821,843,844,855,870,871,872,875,879,880,881,882,911,916,918,919,920,921,928,929,930,944,946,949,951,953,954,955,962,964,966,968,981,983,985,988,990,996,998,1003,1047,1057,1058,1059,1060,1102,1103,1116,1122,1123,1133,1143,1147,1148,1149,1150,1151,1152,1153,1154,1159,1162],"public":[843,863],"return":[15,16,17,18,19,40,41,42,43,411,726,751,765,766,767,776,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,802,803,805,806,810,811,812,813,814,816,817,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,915,916,917,918,919,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,957,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1059,1060,1061,1062,1063,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1116,1122,1123,1133,1142,1143,1149,1153,1158,1159,1162],"short":[1085,1095,1116,1162],"static":[40,41,765,766],"super":1003,"true":[40,41,42,358,364,396,399,411,412,765,766,767,843,845,854,856,874,879,888,890,897,941,942,946,949,951,952,953,954,955,957,969,972,975,999,1000,1001,1002,1003,1047,1048,1055,1059,1060,1066,1067,1069,1070,1071,1072,1073,1074,1075,1077,1078,1085,1093,1098,1099,1100,1101,1104,1105,1106,1110,1133,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154],"try":[40,41,843,939,1003],"var":[40,41,999,1000,1001,1162],"while":[40,41,42,1003],AND:[977,978,1066,1067],But:1162,For:[43,843,846,858,930,946,952,960,981,982,1116,1122,1123,1159,1162],Its:[981,986],NOT:[977,979],One:[40,41,843,871,916,1059,1061,1162],Ones:[1116,1124],Such:[843,863],That:1159,The:[15,16,17,18,19,40,41,42,43,726,751,765,766,767,776,777,783,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,806,809,810,811,812,813,816,817,821,822,823,828,829,830,833,842,843,846,850,851,852,855,856,859,860,861,862,864,865,868,869,873,876,879,881,882,889,892,893,894,896,897,900,902,904,906,908,911,912,915,916,918,919,920,921,922,925,926,927,928,929,930,933,941,944,945,946,948,949,951,953,954,955,957,960,962,964,966,968,969,972,974,981,982,984,986,989,991,992,993,994,995,997,999,1000,1001,1002,1003,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1066,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1116,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1159,1162],There:[43,1116,1159],These:[43,1116],Used:[1047,1048,1055,1145,1146],Using:[1116,1117,1162],With:[40,41,969,972,975,1066,1069,1070,1071,1072,1073,1074,1075,1116,1158,1162],__array__:[843,851],__call__:[1133,1144,1145,1146],__del__:1003,__dict__:[1003,1159],__enter__:1003,__exit__:1003,__getitem__:1003,__getstate__:1003,__init__:[40,41,42,59,60,356,357,767,768,775,776,777,778,779,780,781,782,817,818,819,820,946,947,1003,1007,1014,1110,1111,1114,1115,1116,1119,1120,1121,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1162],__iter__:1003,__len__:1003,__next__:1003,__pow__:43,__repr__:1003,_assign_vari:1158,_axi:1003,_base:[1047,1048,1055],_compute_node_da_ratio:1003,_compute_node_strs_da:1003,_concat_unify_arrai:1003,_counter:1003,_cur_framework:[43,1003],_da_direct:1003,_da_directions_flip:1003,_da_step_tim:1003,_da_tim:1003,_da_tune_count:1003,_data:[43,1003],_delta_da_dim_s:1003,_delta_sf:1003,_dict:1003,_dim_siz:1003,_first_da_tune_step:1003,_first_ns_tune_step:1003,_fn:1003,_forward:[1116,1158],_get_kalman_param:1162,_get_prior:1162,_get_some_model:1162,_handle_flat_arrays_in_out:43,_index:[1047,1048,1055],_input_queu:1003,_length:1003,_max_depth:1003,_max_node_dim_step_ratio:1003,_max_node_dim_step_s:1003,_max_split_factor_step_s:1003,_mean_unify_arrai:1003,_min_bas:[843,929,1102,1103,1147,1148],_min_denomin:[843,928],_min_node_dim_s:1003,_min_sf_tune_step:1003,_min_unit_node_tune_step:1003,_model:1162,_native_wrapp:43,_node_mapp:1003,_node_percent_mem:1003,_node_str:1003,_node_str_da_ratio:1003,_node_strs_da:1003,_node_strs_kei:1003,_node_strs_n:1003,_node_util:1003,_ns_step_tim:1003,_ns_time:1003,_ns_tune_count:1003,_num_nod:1003,_num_work:1003,_observed_config:1003,_output_queu:1003,_paramet:1158,_percent_mem_inc_per_sf:1003,_percent_mem_inc_per_unit_da_dim:1003,_percent_util_inc_per_unit_da_dim:1003,_ret_fn:1003,_safety_factor:1003,_save_dir:1003,_shift_da_split:1003,_shift_n:1003,_slice:1003,_step:[1149,1153],_sum_unify_arrai:1003,_timeout:1003,_tune:1003,_tune_da:1003,_tune_n:1003,_tune_step:1003,_unit_da_tune_count:1003,_unroll_step:1162,_with_node_mappig:1003,_worker:1003,_worker_class:1003,_worker_fn:1003,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,767,776,782,1003,1145,1146,1149,1153],abil:1116,abl:[40,41],about:[817,831,832],abov:[1059,1061],above_height:[40,41],abs:[239,358,458,561,843,1003],absolut:[40,41,843,844],abstractmethod:1003,accept:[15,1116],access:[40,41,1159],accord:[40,41,843,862,881,918,919,938,943],accordingli:[1066,1067],accur:[59,356,357,767,779,780,781,782,817,946,1110,1114,1124,1126,1127,1129,1130,1132],aco:[656,981],acosh:[656,981],across:[40,41,767,776,777,786,787,789,790,791,792,793,799,809,810,843,848,849,852,853,1003,1047,1051],activ:[1078,1079,1080,1081,1082,1083,1084,1116,1120,1121],actual:1159,adam:[946,948,949,953,1116,1149,1151,1158],adam_step:946,adam_upd:946,adapt:[946,954,1149,1152],add:[40,41,43,1003,1098,1099,1100,1101,1102,1103,1116,1147,1148,1159],add_fn_to_dict:1110,add_param:1110,added:[843,928,929,1155,1156],adding:[843,855],addit:[40,41,43,843,870,871,872,1102,1103,1133,1143],adher:43,adjac:[843,846],adopt:[843,863],affect:[843,846],affin:[1147,1148],after:[843,900,946,949,950,951,953,954,955,962,963,1102,1103,1149,1150,1151,1152,1153,1154,1162],after_1:[843,862,943],after_n:[843,862,943],again:43,against:[40,41,969,972,975,1066,1069,1070,1071,1072,1073,1074,1075],agnost:[1116,1158,1159],aim:1162,algebra:[405,969],algorithm:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140,1162],align:[40,41,43,843,855],aliv:[767,801,803,807,843,883,909,913],all:[15,16,17,18,19,40,41,43,154,318,413,521,680,765,766,767,776,801,807,843,844,845,852,853,863,876,883,889,913,927,999,1000,1001,1002,1003,1047,1048,1049,1055,1056,1059,1060,1063,1066,1069,1070,1071,1072,1073,1074,1075,1085,1095,1116,1159,1162],all_depth:[40,41],all_equ:843,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1047,all_tru:[40,41],alloc:[767,1003],allow:[843,901,902,903,1145,1146],allow_dupl:[843,903],alon:[767,806,816,1003,1116],along:[40,41,411,767,790,791,792,793,796,797,798,799,811,843,850,861,866,867,876,881,900,901,902,915,926,930,933,940,969,972,975,999,1000,1001,1002,1003,1059,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075],alongsid:[1158,1159],alpha:[1077,1079],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,767,1003],also:[40,41,43,843,846,946,949,999,1000,1001,1002,1047,1048,1049,1055,1056,1085,1094,1133,1143,1158],altern:1158,alwai:[40,41,43,946,952,957],among:[40,41],amount:[767,813,1003,1116],angl:[981,982,987],ani:[15,16,17,18,19,40,41,765,766,767,769,772,776,777,779,788,789,792,793,798,843,845,846,851,869,870,871,872,873,874,888,896,903,928,929,946,950,1003,1047,1048,1051,1055,1056,1057,1058,1059,1063,1116,1122,1123,1145,1146,1158,1159,1162],anoth:[40,41,817,823,1116],anyth:1162,apart:43,api:[1116,1117],appear:[843,875],append:[40,41,1003],appli:[15,18,19,40,41,843,870,871,872,946,953,954,969,974,977,978,979,980,999,1000,1001,1047,1051,1054,1056,1077,1078,1079,1080,1081,1082,1083,1084,1085,1094,1096,1097,1102,1103,1116,1119,1120,1121,1147,1148],applic:[1047,1051,1056,1085,1096,1097,1116,1162],approxim:[43,726,751,1077,1078],arang:[98,239,358,411,458,561,843,901,902],arbitrari:[40,41,767,796,797,799,1003],arc:[981,987],arcco:[981,982],arctan:[981,986],area:1116,arg:[15,16,17,40,41,59,63,767,776,789,793,799,811,843,870,871,872,919,1003,1104,1105,1106,1110,1122,1123,1145,1146],arg_nam:843,arg_stateful_idx:[1104,1105,1106,1110,1145,1146],argmax:[98,358,458,561,843],argmin:[98,358,458,561,843],args_clon:1003,args_dist:1003,args_to_ivi:[15,1116],args_to_n:[15,1116],args_uni:1003,argsort:[358,561,843],argument:[15,16,17,18,19,40,41,42,43,59,63,765,766,767,776,777,789,793,799,843,846,847,856,869,903,919,981,982,1003,1047,1051,1122,1123,1145,1146],aris:[1116,1162],arithmet:[43,1066,1070,1073,1075],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:411,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,98,239,358,411,458,561,751,767,785,786,787,790,791,792,793,796,797,798,799,801,803,807,811,812,817,821,827,831,832,834,835,843,844,845,846,848,849,850,852,853,854,855,857,858,859,860,861,862,864,865,866,867,870,871,872,873,875,876,877,878,879,880,881,882,883,886,888,889,890,891,892,893,894,896,897,898,899,900,901,902,904,905,906,907,909,910,911,912,913,915,916,917,918,919,924,926,927,930,931,932,933,935,936,937,938,940,941,942,943,944,945,946,948,949,952,953,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,1003,1047,1049,1056,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1116,1117,1133,1141,1142,1144,1149,1153,1158,1159],arrang:[843,870],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43],array_builtin:[726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764],array_equ:[239,561,843],array_lik:[411,843,851],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,843],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1116],arraywithgener:[22,1116],arraywithgradi:[24,1116],arraywithimag:[26,1116],arraywithlinalg:[28,1116],arraywithlog:[30,1116],arraywithmath:[32,1116],arraywithmeta:[34,1116],arraywithrandom:[36,1116],arraywithreduct:[38,1116],arriv:[40,41,42],articl:1116,arxiv:1116,as_arrai:[40,41,843,886,924],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[356,358,367,767,785,817,824,825,826,827],as_tensor:358,as_vari:[40,41],as_zero:[40,41],asarrai:[358,843],asin:[656,981],asinh:[656,981],aspect:[962,967],assert:[40,41,843,854,1003],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:843,associ:[43,969,976],assum:[1159,1162],astyp:[358,817],asynchron:[40,41,42],at_dev:[40,42,767,780,781],at_kei:[40,41],at_key_chain:[40,41],at_nod:1003,atan2:[656,981],atan:[656,981],atanh:[656,981],attent:[1085,1096,1097,1133,1144],attribut:[0,6,40,41,843,912,945],audienc:[1116,1159],author:1116,avail:[40,41,767,802,804,805,814,843,871,1003],averag:[946,948,949,953,999,1000,1001,1066,1070],average_across_step:[999,1000,1001],avoid:[767,1003,1159],axes:[40,41,358,392,405,406,767,811,843,848,849,862,875,876,932,938,943,969,972,975,1003,1066,1067,1069,1070,1071,1072,1073,1074,1075],axes_length:[40,41,843,870,871,872],axi:[40,41,358,360,361,365,366,371,373,382,383,384,390,391,393,767,769,772,779,790,791,792,793,796,797,798,799,811,843,848,849,850,861,862,865,866,867,875,876,881,900,901,902,915,926,927,930,932,933,940,943,969,975,1003,1059,1065,1066,1067,1069,1070,1071,1072,1073,1074,1075,1077,1082,1098,1100,1101],axis0:[40,41,843,932],axis1:[40,41,843,932],back:[1145,1146,1149,1153],backend:[15,17,19,40,41,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,767,802,805,814,817,823,833,842,843,891,895,946,949,951,953,954,955,960,1003,1116,1117,1122,1123,1149,1150,1151,1152,1153,1154,1158,1159,1162],background:[1116,1159],backprop:1162,backward:[1066,1067,1158],band:[843,879],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,356,357,358,384,726,751,767,769,770,771,772,773,774,776,777,779,780,781,782,817,843,884,902,920,929,946,1003,1066,1068,1110,1114,1116,1119,1120,1121,1124,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1162],batch:[40,41,767,809,810,843,876,879,889,962,966,969,974,999,1000,1001,1002,1003,1085,1094,1102,1103,1147,1148],batch_shap:[358,371,375,843,876,889,910,962,963,964,965,966,967,968,969,976,1059,1060,1085,1095,1096,1097,1133,1142],batch_siz:[411,412,1003,1059,1060,1085,1086,1087,1088,1089,1090,1091,1092],bayesian:1162,becaus:[843,846],becom:[843,858,981,987,1162],been:[843,870,871,872,1059,1060],befor:[40,41,767,811,999,1000,1001,1003,1047,1056,1066,1069,1070,1071,1072,1073,1074,1075,1085,1096,1097,1162],before_1:[843,862,943],before_n:[843,862,943],begin:[1047,1048,1055,1159],behaviour:1162,behind:[946,949,951,953,954,955,1116],being:[40,41,843,846,914,922,1003],belong:[40,41],below:[43,1116,1159,1162],below_depth:[40,41],benefit:1116,bernoul:[1085,1093,1133,1141],best:[843,903,1116],beta1:[946,948,949,953,1149,1150,1151],beta2:[946,948,949,953,1149,1150,1151],beta:[1102,1103],between:[40,41,42,843,846,1047,1051,1059,1061,1098,1100,1101,1149,1151],bia:[1085,1094,1095,1133,1134,1135,1136,1137,1138,1139,1140,1143],bias_initi:[1133,1134,1135,1136,1137,1138,1139,1140,1143],bilinear:[962,963],bilinear_resampl:[138,299,401,506,641,962],bilinearli:[962,963],binari:[1098,1099],binary_cross_entropi:1098,bit:[817,828,962,964,968,1116],bitwise_oper:[0,7,8],block:[1116,1159],bool:[15,18,19,40,41,42,765,766,767,785,798,802,806,811,814,816,817,827,843,845,852,853,866,869,873,874,879,886,888,896,897,903,924,926,940,941,942,946,949,950,951,952,953,954,955,957,969,972,975,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1059,1060,1066,1069,1070,1071,1072,1073,1074,1075,1077,1078,1085,1093,1122,1123,1133,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154],both:[843,865],bottom:1116,boundari:[40,41,1059,1063],branch:[765,766],broadcast:[40,41,43,726,751,843,855,873,905,906,907,915,969,972,975,981,987,991,1066,1067,1069,1070,1071,1072,1073,1074,1075],broadcast_to:[239,561,843],build:[1003,1116,1133,1144,1145,1146],build_mod:[1133,1144,1145,1146],builder:1116,built:[767,843,846,1003,1133,1144,1145,1146],builtin:43,builtin_ab:[194,726],builtin_add:[194,726],builtin_and:[194,726],builtin_bool:[194,726],builtin_contain:[194,726],builtin_deepcopi:[194,726],builtin_dir:[194,726],builtin_eq:[194,726],builtin_float:[194,726],builtin_floordiv:[194,726],builtin_g:[194,726],builtin_getattr:[194,726],builtin_getattribut:[194,726],builtin_getitem:[194,726],builtin_gt:[194,726],builtin_int:[194,726],builtin_invert:[194,726],builtin_l:[194,726],builtin_lt:[194,726],builtin_mul:[194,726],builtin_n:[194,726],builtin_neg:[194,726],builtin_or:[194,726],builtin_po:[194,726],builtin_pow:[43,194,726],builtin_radd:[194,726],builtin_rand:[194,726],builtin_rfloordiv:[194,726],builtin_rmul:[194,726],builtin_ror:[194,726],builtin_rpow:[194,726],builtin_rsub:[194,726],builtin_rtruediv:[194,726],builtin_rxor:[194,726],builtin_setitem:[194,726],builtin_some_op:43,builtin_sub:[194,726],builtin_truediv:[194,726],builtin_xor:[194,726],bypass:1159,cach:[767,783,843,856],cache_fn:843,calcul:[40,41,42,43,726,751,981,991],call:[767,811,843,914,922,939,946,950,1003,1047,1048,1051,1055,1133,1144,1145,1146,1149,1153,1159,1162],callabl:[40,41,765,766,767,776,777,811,843,856,869,871,903,939,999,1000,1001,1002,1003,1047,1051,1052,1053,1055,1056,1085,1096],can:[767,809,810,811,843,916,962,964,1003,1116,1158,1159,1162],cancel_join_thread:1003,captur:1116,cast:[40,41,98,239,358,458,561,817,843,861,962,964,968],catch_except:[843,869],categori:43,ceil:[239,358,561,843,846],cell:[1085,1095,1133,1142],certain:[40,41,843,846,901,902],chain:[40,41,999,1000,1001,1155,1156],chang:[767,843,916,1003,1047,1049,1056,1116,1158],channel:[843,879,962,964,965,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143],check:[15,16,17,18,19,40,41,767,806,816,817,822,833,842,843,854,874,888,896,931,941,946,952,1003,1047,1048,1055,1116,1159],check_nest:[1047,1055],check_shap:[40,41],check_submod_ret:[1145,1146],check_typ:[40,41],choic:[1116,1159],choleski:[645,969],choos:[843,942,981,987,1116],choose_random_framework:59,chosen:[40,41,843,846,942],chunk:[767,809,810,811,1003],chunk_siz:[767,811,1003],circl:[981,982,984],clark:1116,clear:[767,783,1003],clear_framework_stack:59,clear_mem_on_dev:[356,553,767],click:1116,clip:[40,41,239,358,561,843,859,860,905,907,1116],clip_matrix_norm:843,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,843],clipped_delta:1003,clone:[40,41,767,786,787,788,789,1003],clone_arrai:1003,clone_it:1003,clone_nest:1003,clonedit:1003,cloneditem:1003,clonednest:1003,close:[962,967,981,984,1003,1162],closest:[817,822],closest_valid_dtyp:817,code:[40,41,42,43,411,1116,1117,1158,1159],codebas:[767,809,810,1003,1116,1159,1162],collect:[15,40,41,356,358,396,401,405,408,409,411,726,765,767,817,843,946,962,969,977,981,1003,1047,1059,1066,1077,1085,1098,1102,1119,1133,1147,1149],color:[40,41,42,1160,1161],column:[843,889],combin:[40,41,42,962,967,1116,1162],combined_batch_s:1003,come:1159,command:1116,commit:1162,common:[40,41,981,987],common_key_chain:[40,41],commun:[1116,1159],compar:[40,41,843,845,852,853],comparison_oper:[0,9,10],compat:[43,726,751,843,873,916,981,991,1066,1067,1116,1162],compil:[239,358,561,1105,1106,1110,1116,1145,1146,1149,1150,1151,1152,1153,1154],compile_graph:[1104,1116,1145,1146,1149,1153],compile_on_next_step:[1145,1146,1149,1150,1151,1152,1153,1154],complet:[40,41,1003],complex:[1159,1162],compon:[843,865],comput:[40,41,767,811,843,859,860,866,867,873,904,946,948,949,950,951,953,954,955,957,959,962,965,969,970,971,972,973,975,977,978,979,980,981,982,984,986,987,989,992,993,994,995,997,1047,1051,1066,1068,1069,1070,1071,1072,1073,1074,1075,1085,1086,1087,1088,1089,1090,1091,1092,1094,1096,1098,1099,1100,1101],concat:[40,41,767,796,797,798,799,811,843,879,1003],concaten:[40,41,98,239,358,458,561,843,879,1003,1116],concatten:[40,41,767,796,797,798,799,811,1003],condit:[358,765,766,843,942,1047,1055],conditon:[1047,1055],config:[40,41,1003],config_list:1003,configur:[40,41],conjunct:1159,connect:[1110,1133,1143,1144],consid:[40,41,969,975,1158,1162],consist:[40,41,767,799,1003,1066,1068,1145,1146,1159],constant:[767,776,777,843,862,1003,1047,1051,1098,1099,1100,1101,1102,1103,1124,1125,1129,1132,1145,1146,1147,1148,1159],constant_kwarg:1003,constant_pad:[239,358,458,561,843],constitu:[40,41],construct:[843,933,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158],constructor:[40,41,42,843,847,1155,1156],consum:[767,1003],cont_feat_dim:[1085,1096],contaienr:[40,41],contain:[15,18,19,42,43,726,751,767,786,790,811,817,821,843,844,848,849,850,858,859,860,863,873,888,897,905,907,917,928,929,946,948,949,951,953,954,955,981,991,999,1000,1001,1002,1003,1059,1060,1066,1069,1070,1071,1073,1075,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[358,561,843],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[358,843,908,1085,1096,1133,1144],context_dim:[1133,1144],contextmanag:[59,60],continu:[1003,1159],contract:[40,41,1066,1068],contribut:[1116,1117],contributor:1116,control:1116,conv1d:[169,331,426,701,1085,1116,1133],conv1d_transpos:[169,331,426,701,1085],conv1dtranspos:[1116,1133],conv2d:[169,331,426,532,701,1085,1116,1133],conv2d_transpos:[169,331,426,701,1085],conv2dtranspos:[1116,1133],conv3d:[169,331,426,532,701,1085,1116,1133],conv3d_transpos:[169,331,426,701,1085],conv3dtranspos:[1116,1133],convent:[40,41,1066,1068],conver:[767,783,794,806,813,816,1003],convers:[16,17,18,19,40,41,1003,1116],convert:[15,16,17,18,19,40,41,767,794,795,817,823,829,830,843,925,936,937,962,964,968,969,976,1003,1047,1049,1056,1116,1123],convert_dtyp:817,convolut:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],cool:43,cooler:43,coordin:[843,906,981,982,984,987],copi:[40,41,411,843,864,1003,1047,1049],copy_arrai:[358,561,843],copy_nest:1047,core:[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1116],correct:[43,1116,1159],correctli:[40,41,969,972,975,981,987,1066,1069,1070,1071,1072,1073,1074,1075],correspond:[40,41,43,726,751,843,861,1059,1060],cos:[656,843,879,981,982,997,1159],cosh:[656,981],cosin:[981,982,983,989,990],cost:[946,948,949,951,953,954,955,999,1000,1001,1002],cost_fn:[999,1002],could:1162,count:[40,41,1003,1066,1067,1072,1074,1114],cprint:1160,cpu:[40,41,767,804,806,812,813,816,843,846,851,881,882,889,901,902,910,911,912,918,919,944,945,1003,1059,1060,1061,1062,1063,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156,1158,1159],creat:[40,41,767,776,777,843,846,851,880,881,882,889,901,902,910,911,912,918,919,935,944,945,946,959,1003,1059,1060,1061,1062,1063,1116,1122,1123,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1162],create_if_abs:[40,41],create_vari:1124,creation:[40,41,42],crop:[962,966],crop_siz:[962,966],cross:[239,561,843,1098,1099,1100,1101],cross_entropi:1098,cuda:[40,41,767,776,795,812,843,846,851,881,882,889,901,902,910,911,912,918,919,944,945,1003,1059,1060,1061,1062,1063,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156],cumprod:[98,239,358,561,843],cumsum:[561,843],cumul:[843,866,867],current:[40,41,42,767,776,800,801,803,807,817,823,833,842,843,868,883,891,895,909,913,1003,1047,1048,1055,1116,1162],current_framework:59,current_framework_str:[358,561,843,1003],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1110,d_in:[1085,1086,1087,1088,1089,1090,1091],d_out:[1085,1086,1087,1088,1089,1090,1091],da_can_termin:1003,da_dim_s:[767,1003],da_direct:1003,da_tune_step:[767,1003],dai:1162,daniel:1116,data:[40,41,42,43,726,751,767,769,770,771,772,773,774,779,780,781,795,817,821,822,823,827,828,829,830,831,832,833,834,835,842,843,846,851,873,880,889,896,897,911,912,916,927,931,944,945,946,952,960,981,991,1003,1085,1094,1116],data_format:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],dataset:[40,41],datatyp:[40,41,817,822,834,835],dcdw:[946,948,949,951,953,954],debug_info:1110,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[946,953,954,1149,1151,1152],decay_lambda:[946,953,954,1149,1151,1152],decid:[40,41,1162],decompos:[969,970],decomposit:[969,970,974],decor:43,decrement:[843,892],dedic:[946,960,1122,1123],deep:[40,41,1116],deep_copi:[40,41],deeper:[767,789,793,799,1003,1047,1056,1116],deepli:[1047,1049],def:[43,60,768,775,778,818,819,820,947,1003,1007,1014,1111,1115,1116,1125,1128,1131,1158,1159,1162],default_dev:43,default_devic:767,default_dtyp:[43,817],default_float_dtyp:817,default_int_dtyp:817,default_key_color:[40,41,42],default_nod:1003,default_rng:411,default_v:[843,869],defaultdevic:[767,768],defaultdtyp:[817,818],defaultfloatdtyp:[817,819],defaultintdtyp:[817,820],defer:43,defin:[43,843,865,910,912,945,1059,1061],degre:[981,989,995,997],del:1003,delta:[946,948,1003,1110],delta_dim_s:1003,delta_percent_mem:1003,delta_sf:1003,delta_util:1003,demo:1116,denomin:[843,878,885,921,928,929,1102,1103,1147,1148],dens:[1133,1143],depend:[43,726,751,843,942,969,974,1116],depth:[40,41,358,385,767,789,793,799,843,887,910,1003,1047,1056,1110,1114,1145,1146],depth_cutoff:[40,41],depthwis:[1085,1092,1133,1140],depthwise_conv2d:[169,331,426,532,701,1085],depthwiseconv2d:[1116,1133],deriv:[946,948,949,951,953,954,955,1047,1049,1056,1116,1145,1149,1153,1155],descend:[969,974],descent:[946,951,1149,1154],describ:[40,41,1066,1068],desir:[40,41,767,812,817,821,843,846,851,889,890,911,912,944,945,962,967,1003,1066,1069,1070,1071,1073,1075],desired_aspect_ratio:[401,404,962,967],desired_percent_increas:1003,detail:1162,detect:[40,41,1047,1048,1055],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,726,751,767,802,804,805,814,817,821,822,828,833,834,835,842,843,845,846,851,852,853,888,891,895,896,897,931,941,946,952,981,991,999,1000,1001,1002,1003,1066,1067,1085,1096],dev:[40,41,42,43,91,233,356,358,359,362,373,374,375,383,384,385,386,387,388,389,394,395,411,412,451,553,767,770,771,773,774,776,777,780,781,783,784,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,803,806,807,808,809,810,811,812,813,816,843,846,851,881,882,889,901,902,910,911,912,918,919,944,945,946,961,1059,1060,1061,1062,1063,1122,1123,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156],dev_clon:[40,41,767],dev_clone_arrai:767,dev_clone_it:767,dev_clone_nest:767,dev_dist:[40,41,767],dev_dist_arrai:767,dev_dist_it:767,dev_dist_nest:767,dev_from_str:[43,91,233,356,451,553,767],dev_mapp:767,dev_str:[40,41],dev_to_str:[91,233,356,451,553,767],dev_unifi:767,dev_unify_arrai:767,dev_unify_it:767,dev_unify_nest:767,dev_util:767,devclonedit:767,devcloneditem:767,devclonednest:767,devdistit:767,devdistitem:767,devdistnest:767,develop:[1116,1159,1162],deviat:[40,41,1059,1062,1066,1073,1102,1103,1147,1148],devic:[21,40,41,43,357,358,372,769,770,771,772,773,774,776,777,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,843,846,851,880,881,882,889,901,902,910,911,912,918,919,944,945,946,961,1059,1060,1061,1062,1063,1116,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156],devmanag:[767,775],devmapp:[767,777],devmappermultiproc:767,diag:[969,974],diagon:[843,889],dict:[15,16,17,18,19,40,41,42,767,769,772,776,777,779,789,790,791,792,793,843,870,871,872,903,999,1000,1001,1003,1047,1049,1050,1051,1054,1056,1122,1123],dict_in:[40,41,42],dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,767,786,787,790,791,1003,1085,1094,1116,1159,1162],differenti:[1116,1159],dilat:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],dim:[40,41,43,843,910,962,963,967,969,974,1003,1133,1144],dim_siz:[40,41,767,1003],dimens:[40,41,42,767,798,843,855,861,865,870,871,872,875,879,886,900,910,915,916,926,927,930,938,940,962,966,969,972,974,975,999,1000,1001,1002,1003,1059,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1082,1085,1086,1087,1088,1089,1090,1091,1092,1095,1098,1100,1101,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144],dimension:[40,41,411,843,926,927,969,974],direct:1003,directli:[1047,1056,1159,1162],directori:[843,923,934],discret:[1098,1100],disk:[40,41,962,964],distanc:[843,846],distribut:[40,41,767,786,790,791,792,793,1003,1059,1060,1061,1062,1063,1085,1093,1133,1141,1145,1146],distribute_nest:1003,distributedarrai:[40,41],distrubt:[1098,1100],dive:[1116,1159],divid:[40,41,843,926,928,981],dividend:[981,991],divis:[843,878,885,921,928,929,946,948,949,953,981,991,1149,1150,1151],divisor:[946,948,949,953,981,991,1149,1150,1151],doc:1116,docstr:43,doe:[40,41,43,843,846,926,1158],doesn:1116,domain:[981,982],don:1116,door:1162,dot:[969,971,1085,1096,1097,1133,1144],down:1158,downscal:[843,859,860],drag:[1116,1162],draw:[1059,1060,1062,1063],drawn:[1059,1060,1061,1062,1063],drop:[1116,1162],dropout:[1085,1116,1133,1144],dropout_r:[1133,1144],ds_tune_step:767,dtype:[40,41,43,98,239,358,359,362,363,372,375,386,387,394,395,458,561,821,822,823,824,825,826,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,846,851,880,889,910,911,912,944,945],dtype_bit:[98,239,358,458,561,817],dtype_from_str:[43,98,239,358,458,561,817],dtype_in:[358,368,369,370,817,823,828,829,830,833,834,835,842],dtype_to_str:[98,239,358,458,561,817],duplic:[40,41],dure:[40,41,765,766,843,939,946,948,949,953,999,1000,1001,1002,1145,1146,1149,1150,1151,1153],dynam:[358,364,765,766],each:[40,41,42,43,726,751,767,776,777,786,787,788,789,790,791,792,798,810,811,843,844,845,850,862,873,897,915,926,930,933,943,946,949,951,953,954,955,962,965,969,974,981,984,991,993,994,1003,1047,1051,1059,1060,1066,1068,1085,1086,1087,1088,1089,1090,1091,1092,1093,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1159],eager:1159,easi:1162,easili:1116,econom:1162,ecosystem:1116,edg:[843,858,862,943],effect:[946,955],effective_grad:[946,955],effici:1162,einop:[40,41,843,870,871,872],einops_rearrang:[40,41,843],einops_reduc:[40,41,843],einops_repeat:[40,41,843],einstein:[40,41,1066,1068],einsum:[40,41,154,318,413,521,680,1066],either:[40,41,843,869,903,906,908,999,1000,1001,1002,1003,1133,1144,1145,1146,1159],eleg:1003,element:[40,41,43,411,726,751,767,788,792,798,817,821,843,844,846,848,849,850,852,853,857,858,859,860,866,867,873,876,877,878,889,890,897,905,907,915,917,926,937,942,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,1003,1066,1067,1068,1070,1072,1074,1077,1078,1079,1080,1081,1082,1083,1084,1085,1093,1133,1141],elementwis:[40,41],elementwise_affin:[1147,1148],elemtn:[1059,1060],elif:1003,els:[843,854,869,874,1003],elsewher:[843,942],emphas:1116,empti:[40,41,1003],enabl:[40,41,42,1116],encod:[843,879,962,964],end:[843,846,1116,1159],entir:[40,41,767,811,1003,1066,1067,1116,1133,1142],entri:[40,41,843,876,901,902,926,927],entropi:[1098,1099,1100,1101],enumer:1003,environ:1116,epsilon:[946,948,949,953,1098,1099,1100,1101,1102,1103,1147,1148,1149,1150,1151],equal:[40,41,358,458,561,843,845,852,853,862,897,926,943,981,989,995,997,1059,1063],equality_matrix:[843,845],equat:[40,41,1066,1068],equival:[843,846,981,997],erf:[409,656,981],error:[40,41,767,843,927,981,992,1003,1077,1078,1145,1146,1149,1153],essenti:43,etc:[40,41,767,812,843,846,851,881,882,889,901,902,910,911,912,918,919,944,945,1003,1059,1060,1061,1062,1063,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156,1162],evalu:[40,41,843,906,1047,1048,1055,1066,1067],even:1162,evenli:[40,41,843,846,901,902,926],everi:[843,845,1162],exact:[40,41],exampl:[43,765,766,843,858,930,1116,1158,1159,1162],example_input:[358,364,765,766],exc_tb:1003,exc_typ:1003,exc_val:1003,exce:[843,907],except:[40,41,44,47,843,846,854,861,869,939,1003,1066,1067],excess_s:1003,excit:[1116,1159],exclud:[59,61,843,846,1059,1063],exclus:[40,41,358,366,380,396,398,843,866,896,946,952,1059,1061],execut:[843,939,1159],execute_with_gradi:[135,294,396,501,635,946,1116,1158],exist:[40,41,843,869,1003,1116,1149,1153,1162],exp:[656,981],expand:[40,41,843,875,879],expand_dim:[40,41,239,561,843,1003],expect:[843,847],explain:1159,explicitli:[1133,1142,1144,1145,1146,1159],expon:[43,726,751,843,929],exponenti:[43,726,751,981,992,993],expos:[843,851,863],express:[843,906],exsit:[40,41],extra:[40,41,42,946,950],eye:[969,971],fabian:1116,fabio:1116,factor:[767,776,809,810,811,946,948,949,953,954,969,974,1003,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140,1149,1150,1151,1152],falck:1116,fall:[1145,1146,1149,1153],fallback_to_non_compil:[1145,1146,1149,1153],fals:[15,18,19,40,41,42,59,66,67,68,69,70,356,358,366,367,380,390,393,396,397,398,405,406,767,785,798,806,811,816,817,824,825,826,827,843,845,866,869,874,879,886,896,897,903,924,926,940,942,946,949,950,951,952,953,954,955,969,972,975,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1066,1067,1069,1070,1071,1072,1073,1074,1075,1104,1105,1106,1110,1114,1122,1123,1145,1146,1149,1150,1151,1152,1153,1154],fan_in:1124,fan_mod:1124,fan_out:1124,far:[1047,1048,1055,1158],faster:[765,766],favourit:[1116,1158],feasibl:1162,feat_dim:[1085,1096,1097],fed:[767,811,1003],feed:[767,811,1003],field:1162,file:[40,41,43,843,923,934,1145,1146],filepath:[40,41],fill:[40,41,843,880,911,944,1059,1061],fill_valu:[358,372,843,880],filter:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140,1162],filter_s:[1133,1134,1135],filter_shap:[1133,1136,1137,1138,1139,1140],find:[40,41,1162],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:817,finish:[1116,1162],finit:[843,897],first:[40,41,411,765,766,767,798,843,852,861,865,873,901,902,930,932,946,950,969,974,999,1000,1001,1002,1003,1047,1048,1055,1059,1065,1066,1072,1074,1133,1144,1145,1146,1149,1153,1159,1162],firstlayersiren:[1116,1124],firstli:[1159,1162],fist:[767,811,1003],fit:[40,41,356,358,396,401,405,408,409,411,843,915,962,967],fkt:1162,flag:[40,41,946,952],flat:[40,41,43,843,915,918],flat_list:[40,41],flatten:[40,41,843,879,915,969,975,1066,1069,1070,1071,1073,1075],flatten_key_chain:[40,41,1145,1146],flexibl:[1116,1159],flip:[40,41,98,239,358,458,561,843],float32:[358,375,817,821,829,830,843,846,851,889,911,912,944,945],float_dtyp:[817,825,837],float_img_to_uint8_img:962,floor:[239,358,561,843,878,1003],floormod:[239,358,561,843],fluid:1162,fname:[1104,1106,1110,1145,1146],folder:1116,follow:[40,41,43,767,811,843,892,893,894,928,929,946,949,951,953,954,955,1003,1047,1051,1056,1085,1096,1097,1116,1133,1143,1149,1153],fomaml_step:999,forget:[946,948,949,953,1149,1150,1151],fork:[843,908],forkserv:[843,908,1003],form:[15,16,17,18,19,40,41,843,851,946,949,951,953,954,955,1047,1049,1056,1085],format:[40,41,43,767,785,817,821,823,827,843,846,851,889,911,912,944,945,1003,1066,1068,1116,1158,1159],format_fn:[40,41],format_key_chain:[40,41],forward:[1145,1146,1149,1153,1158],found:[40,41,42],fourier:[843,879],fourier_encod:843,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,140,141,143,144,148,149,150,151,152,153,155,156,157,158,159,160,161,162,165,167,168,170,171,172,173,174,175,176,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,300,301,302,304,305,306,307,309,310,311,314,315,316,317,319,320,321,322,323,324,325,326,327,330,332,333,334,335,336,337,338,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,402,403,404,406,407,410,412,414,415,416,417,418,419,420,421,424,425,427,428,429,430,431,432,433,452,453,454,455,456,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,503,504,505,507,508,509,511,512,513,517,518,519,520,522,523,524,525,526,527,528,529,533,534,535,554,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,636,637,638,639,640,642,643,644,646,647,648,649,650,651,653,654,655,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,674,675,676,677,678,679,681,682,683,684,685,686,687,688,691,692,693,694,695,696,697,699,700,702,703,704,705,706,707,708,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,972,973,974,975,976,978,979,980,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1099,1100,1101,1103,1105,1106,1108,1109,1111,1115,1116,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1161,1162],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1003,framewrk:[843,908],frequenc:[843,879],from:[40,41,42,43,767,776,777,811,817,823,843,869,876,881,882,889,916,927,935,942,946,949,953,962,966,999,1000,1001,1002,1003,1047,1049,1056,1059,1060,1061,1062,1063,1066,1067,1072,1074,1085,1093,1096,1116,1122,1123,1133,1141,1144,1149,1153,1158,1159],from_cal:[1145,1146],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[98,239,358,458,561,843,1116],full_matric:[969,974],fulli:[1116,1133,1143,1144,1158],func:[40,41,358,364,396,397,765,766,767,811,843,856,946,950,1003],further:1162,furthermor:1162,futur:1162,gain:1124,gamma:[1102,1103],gather:[40,41,98,239,358,458,561,843,882],gather_nd:[40,41,98,239,358,458,561,843],gauss:[981,992],gaussian:[1077,1078],geglu:[1116,1119],gelu:[329,423,690,1077,1116,1119],gener:[23,40,41,356,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,411,765,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,952,1059,1061,1063,1064,1116,1149,1153],geometr:[843,879],get:[40,41,767,776,777,785,800,801,806,810,813,816,817,827,828,831,832,843,847,883,884,885,914,1003,1114,1116,1133,1142,1162],get_all_arrays_in_memori:843,get_all_arrays_on_dev:767,get_framework:59,get_initial_st:[1133,1142],get_min_bas:843,get_min_denomin:843,get_mod_kei:[1145,1146],get_num_dim:[358,561,843],get_param:1110,get_param_recurs:1110,get_referrers_recurs:843,getfullargspec:1003,gist:1116,give:[843,850,916,1159],given:[40,41,43,767,800,806,809,810,811,813,816,817,821,843,846,850,851,858,866,867,876,882,901,902,911,912,915,918,919,926,933,938,940,944,945,946,948,949,951,953,954,955,969,971,976,981,982,1003,1047,1052,1053,1059,1062,1063,1065,1066,1070,1072,1073,1074,1075,1085,1086,1087,1088,1089,1090,1091,1092,1122,1123,1162],global:[40,41,42,767,776,777,784,809,810,811,817,824,825,826,843,868,884,885,914,920,921,922,928,929,946,961,1003,1102,1103,1108,1109,1116,1147,1148],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1116,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143],got:1116,gpu:[767,802,805,1003],gpu_is_avail:[356,767,1003],grad:[1116,1149,1153,1158],gradient:[25,40,41,397,398,399,400,767,811,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,965,999,1000,1001,1002,1116,1149,1150,1151,1152,1153,1154,1158,1162],gradient_descent_upd:[946,999,1000,1001,1002],gradient_imag:[138,299,401,506,641,962],gradienttrack:[946,947],graph:[946,949,951,953,954,955,1104,1105,1106,1111,1116,1145,1146],graph_compil:[1104,1105,1106,1107,1108,1109,1110,1114],greater:[40,41,843,846,877,927,1059,1063],green:[40,41,42,1160,1161],grid:[843,906],group:[962,967],guid:[1116,1117,1162],gym:1116,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1162,half:[843,846,1003,1059,1063],hand:1116,handl:[40,41,42,43,765,766,767,783,785,794,795,806,813,816,946,949,951,953,954,955,1003,1149,1150,1151,1152,1153,1154],has:[40,41,843,930,981,986],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,843],hasattr:1003,have:[40,41,43,726,751,843,861,865,870,871,872,873,880,897,930,946,952,960,969,974,981,991,1003,1116,1158,1159],hdf5:[40,41,1145,1146],head:[1085,1096,1133,1144],head_dim:[1133,1144],height:[962,967],height_cutoff:[40,41],help:[59,356,357,767,779,780,781,782,817,946,1110,1114,1116,1124,1126,1127,1129,1130,1132],helper:1116,here:[43,1116],hidden:[1085,1095,1133,1142],hierarch:[843,863],hierarchi:[40,41],high:[40,41,411,1059,1061,1063],higher:[946,949,951,953,954,955,969,974],highest:[1059,1061],highest_util:1003,highest_util_nod:1003,highli:1116,highlight:1162,highlight_subgraph:[1104,1106,1110],hint:43,hkt:1162,hold:[817,821,843,846,851,918,919],host:1116,hot:[843,910],how:[1116,1133,1144,1145,1146,1159,1162],howev:[43,1159],http:1162,hyperbol:[981,983,985,988,990,996,998,1077,1084],hypothet:1162,icon:1116,idea:1116,ident:[40,41,43,98,239,358,458,561,843],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],if_exist:[40,41],ignor:[40,41,1149,1153],ignore_key_error:[40,41],ignore_miss:[1149,1153],ignore_non:[40,41],iinfo:817,imag:[27,402,403,404,843,900,963,964,965,966,967,968,1085,1086,1087,1088,1089,1091,1092,1116,1162],image_dim:[962,966],imkkhk:1162,immedi:[1116,1159,1162],implement:[43,726,751,1116,1159,1162],in_featur:[1085,1094],includ:[40,41,843,846,888,928,929,941,1047,1048,1059,1063,1066,1067,1133,1143,1144,1147,1148,1158],include_deriv:[1047,1049,1056],include_empti:[40,41],include_gener:[1104,1105,1106,1110,1145,1146],include_inf:[40,41,843,888,941],include_nest:[1047,1048],include_self:[40,41],inclus:[1059,1061],incom:[1085,1094],increas:[767,789,793,799,843,862,875,943,1003,1047,1056],increasingli:1162,increment:[843,893,1003],increment_param_count:1110,inde:1116,indent:[40,41,42],independ:[1059,1060],index:[40,41,358,411,843,848,849,881,882,906,927,930,1047,1050,1052,1053,1054,1057],index_nest:1047,indic:[40,41,358,373,374,385,388,389,843,848,849,850,881,882,890,910,918,919,1047,1048,1050,1052,1053,1054,1055,1057,1058,1059,1060,1077,1082,1085,1086,1087,1088,1089,1090,1091,1092,1102,1103,1133,1134,1135,1136,1137,1138,1139,1140,1145,1146],indices_wher:[98,239,358,561,843],inevit:1162,inf:[40,41,843,888,898,941,981,986],infer:[765,766,843,876,886,889,916,924,962,966,1159,1162],infin:[843,897,898],inform:[817,831,832,946,957],init_c:[1085,1095],init_h:[1085,1095],init_on_first_step:[1149,1153],initi:[40,41,42,59,356,357,767,779,780,781,782,817,946,1003,1085,1095,1110,1114,1116,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1149,1153],initialz:[1145,1146],inner:[999,1000,1001,1002],inner_batch_fn:[999,1000,1001],inner_batch_shap:[1085,1094],inner_cost_fn:[999,1000,1001],inner_grad_step:[999,1000,1001,1002],inner_learning_r:[999,1000,1001,1002],inner_optimization_step:[999,1000,1001,1002],inner_v:[999,1000,1001],inp:1003,inplac:[40,41,843,854,891,895,931,946,949,951,953,954,955,1122,1123,1149,1150,1151,1152,1153,1154],inplace_arrays_support:[358,843],inplace_decr:[98,239,358,458,561,843],inplace_incr:[98,239,358,458,561,843],inplace_oper:[0,11,12],inplace_upd:[40,41,98,239,358,458,561,843,1122,1123],inplace_variables_support:[358,843],input:[15,18,19,40,41,42,43,765,766,767,776,777,784,785,786,789,790,793,799,811,812,817,821,822,824,825,826,827,828,834,835,843,844,845,848,849,850,852,853,854,855,857,858,859,860,861,862,864,866,867,869,870,871,872,873,874,875,876,877,878,879,886,888,889,890,892,893,894,896,897,898,899,900,904,905,906,907,915,917,924,925,927,930,931,932,933,935,936,937,938,940,941,943,946,950,952,957,961,962,963,964,965,966,968,969,972,974,975,977,978,979,980,981,983,985,986,988,989,990,991,995,996,997,998,999,1000,1001,1002,1003,1059,1060,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1102,1103,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1159],input_ax:[767,811,1003],input_channel:[1133,1134,1135,1136,1137,1138,1139,1142,1143],input_queu:1003,inputs_split:1003,insert:[843,875],inspect:1003,inspir:1162,instal:1116,instanc:[15,16,17,18,19,40,41,43,411,726,751,767,776,1003,1122,1123,1155,1156],instead:[40,41,411,1066,1069,1070,1071,1072,1073,1074,1075,1162],int64:[817,821,843,846,851,889,911,912,944,945],int_dtyp:[817,826,838],integ:[40,41,411,817,832,835,843,846,857,877,917,926,969,975,1059,1061,1064,1066,1067],integr:1116,inter:1116,interchang:[40,41,843,932],interest:1116,interfac:[843,851,1159],intermedi:[40,41],intern:[40,41,767,946,960,1003,1047,1048,1055,1056,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1155,1156],interpol:[843,900],intersect:[981,982],interv:[40,41,843,846,858,901,902,981,984,1059,1063,1066,1067],introduc:1162,inv:[645,969,1162],invalid:[1066,1067],invalid_dtyp:817,invers:[969,971,973,981,982,983,984,985,986,988,1162],invert:[969,971,973],invest:1162,invoc:[765,766],irrespect:1116,is_al:1003,is_arrai:[98,239,358,458,561,843,1003],is_float_dtyp:817,is_int_dtyp:817,is_mean:1003,is_sum:1003,is_var:[1110,1114],is_vari:[135,294,396,501,635,946],isfinit:[98,239,358,458,561,843],isinf:[239,458,561,843],isinst:1003,isnan:[239,458,561,843],isnumer:1003,item:[15,19,40,41,726,738,739,767,776,777,779,786,788,790,792,798,817,824,843,863,887,928,929,1003,1047,1051,1052,1053,1056,1057,1058,1116,1145,1146,1158],iter:[15,16,17,18,19,40,41,42,765,766,767,770,771,773,774,776,777,780,781,788,790,791,792,793,798,811,843,845,855,861,862,876,889,906,911,915,916,919,924,926,930,933,938,943,944,1003,1047,1048,1049,1051,1055,1056],iterbal:[767,788,792,798,1003],its:[411,767,811,843,850,889,916,932,938,1003,1116],itself:[43,1047,1056],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1114,1116,1117,1119,1120,1121,1122,1123,1124,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1160,1161],ivy_backend:[40,41],ivy_bay:1162,ivyfcmodel:1158,ivyh:[40,41,42],ivymodul:[166,698],jame:1116,jax:[946,952,1116,1162],jax_concat:1116,jnp:1116,join:[40,41,843,861,930,1003],journal:1116,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[1116,1133,1142,1162],kaimingnorm:[1124,1128],kalman:1162,kalman_filt:1162,kalman_filter_step:1162,kalman_filter_upd:1162,keep:[40,41,767,812,843,940,1003,1116,1162],keep_inner_v:[999,1000,1001],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[999,1000,1001],keepdim:[40,41,358,393,405,406,843,940,969,972,975,1066,1067,1069,1070,1071,1072,1073,1074,1075],kei:[15,16,17,40,41,42,726,731,767,779,843,863,999,1000,1001,1003,1047,1050,1054,1085,1096,1097,1116,1122,1123,1133,1144,1149,1153],kept:[40,41,42,999,1000,1001],kera:1162,kernel:[1085,1095],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,767,776,777,789,793,799,843,847,870,871,872,903,1003,1047,1051,1145,1146],keyword_color_dict:[40,41,42],kind:[817,831,832,1162],kwarg:[15,16,17,40,41,42,59,63,767,776,789,793,799,843,903,1003,1104,1105,1106,1110,1122,1123,1145,1146],kwarg_stateful_idx:[1104,1105,1106,1110,1145,1146],kwargs_clon:1003,kwargs_dist:1003,kwargs_uni:1003,label:[1098,1099,1100,1101],lamb:[946,953,1116,1149],lamb_upd:946,lambda:[1003,1149,1152,1154,1158],lar:[946,953,954,1116,1149],larger:[843,858],largest:[40,41,843,848,877],lars_upd:946,last:[40,41,843,846,865,900,926,930,969,972,974,1066,1067,1072,1074,1077,1082,1085,1095,1133,1143],later:[40,41,843,856],latest:[1133,1142],layer:[946,949,951,953,955,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1102,1103,1116,1124,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156,1162],layer_norm:1102,layernorm:[1116,1147],layerwis:[946,954,1149,1152],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1047,1048,1055],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1077,1078,1079],leaky_relu:[690,1077],learn:[946,949,951,953,954,955,999,1000,1001,1002,1059,1065,1116,1149,1150,1151,1152,1153,1154,1159,1162],learnabl:[1102,1103,1147,1148],leav:[15,18,19,40,41,1047,1048,1049,1055,1056],left:[40,41,969,972,975,1066,1069,1070,1071,1072,1073,1074,1075,1116],leftmost:[40,41],len:1003,length:[40,41,42,843,846,916,927,938],lenton2021ivi:1116,lenton:1116,less:[40,41,843,857,1003,1059,1063],less_util_node_str:1003,let:[1159,1162],level:1116,librari:[1116,1158,1162],lightweight:1116,like:[43,946,952,1059,1063,1116,1158,1159,1162],limit:[40,41,42,817,831,832,843,858,859,860],linalg:[29,406,407,970,971,972,973,974,975,976,1116],linear0:[1116,1158],linear1:1116,linear2:1158,linear:[405,843,879,900,969,1077,1078,1079,1080,1085,1093,1116,1133,1134,1135,1136,1137,1138,1139,1140,1158],linear_resampl:[98,239,358,458,561,843],linearli:[843,879],link:1116,linspac:[98,239,358,458,561,843,846],list:[15,18,19,40,41,767,776,777,786,787,789,790,791,793,796,797,811,843,846,851,853,906,925,926,935,940,999,1000,1001,1003,1047,1048,1049,1051,1055,1056,1085,1086,1087,1088,1089,1090,1091,1092,1116,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140],list_join:[40,41,42],list_stack:[40,41],littl:1159,load:[40,41],loaded_kwarg:1003,loader:1116,local_set:[843,887],locat:[843,898,899,1059,1060],log:[656,843,902,981,1003,1098,1099,1100,1101,1116],log_all_op:1110,log_global_inference_abs_tim:[1107,1116],log_global_inference_rel_tim:[1107,1116],logarithm:[981,994],logic:[31,978,979,980,1066,1067,1116],logical_and:[308,652,977],logical_not:[308,652,977],logical_or:[308,652,977],logit:[1098,1101],logspac:[98,239,358,458,561,843],look:[43,1159,1162],loop:[999,1000,1001,1002],loss:[1099,1100,1101,1116,1158],loss_fn:[1116,1158],lot:1159,low:[40,41,411,1059,1061,1063],lower:[40,41,843,905,1059,1063],lower_depth:[1145,1146],lowest:[15,18,19,40,41,1047,1056,1059,1061],lstm:[1085,1095,1116,1133],lstm_updat:1085,machin:[817,831,832,1059,1065,1116,1159,1162],mai:[843,846,869,873,1116,1159,1162],main:[843,889,1116],mainli:1116,make:[411,767,1003,1116,1159],maml:[999,1000,1001],maml_step:999,manag:[767,1003],mani:[40,41,843,926,1116],manner:[15,18,19,40,41,1047,1056],manual:[1047,1048,1055,1162],map:[40,41,42,767,776,843,898,899,1003,1047,1052,1053,1056,1133,1144,1158],map_cont:[40,41],map_nest_at_index:1047,map_nest_at_indic:1047,map_sequ:[40,41],mapper:[767,776,777,1003],mask:[1085,1096,1097],match:[40,41,843,903],match_kwarg:843,math:[33,410,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,1003,1116],mathbb:[969,976],mathbf:[969,976],matmul:[239,358,458,561,843,1162],matplotlib:1159,matric:[1085,1094],matrix:[40,41,843,845,859,904,969,970,971,972,973,976,1085,1094,1133,1143],matrix_norm:[40,41,142,303,405,510,645,969],matter:1116,max:[40,41,843,859,860,871,905,918,919,1003,1066,1069,1149,1151],max_batch_s:[40,41],max_chunk_s:[767,811,1003],max_depth:[40,41,767,771,774,781,789,793,799,843,887,1003,1047,1056],max_dev_dim_step_ratio:767,max_freq:[843,879],max_length:[40,41],max_node_dim_step_ratio:1003,max_norm:[40,41,843,859,860],max_split_factor_step_s:[767,1003],max_trust_ratio:[946,953,1149,1151],maxim:[1116,1159,1162],maximis:1116,maximum:[40,41,42,561,767,789,793,799,811,843,848,858,859,860,879,946,953,1003,1047,1056,1066,1069],mayb:[15,18,19],mdi:1003,mean:[40,41,411,767,796,797,798,799,811,843,871,999,1000,1001,1002,1003,1047,1051,1059,1062,1066,1070,1073,1075,1124,1158,1162],measur:[1085,1096,1133,1144],mech:1116,mechan:[1116,1162],medic:1162,memori:[767,783,806,811,813,816,1003,1085,1095,1116],meshgrid:[239,358,561,843],messag:[1160,1161],meta:[35,1000,1001,1002,1116],method:[40,41,42,43,411,843,851,863,906,918,919,946,953,954,1003,1047,1048,1055,1056,1116,1133,1144,1145,1146,1159],might:[843,869,1162],min:[40,41,843,871,907,918,919,928,1003,1066,1071],min_bas:[843,929],min_denomin:[843,928],min_dev_dim_s:767,min_node_dim_s:1003,min_sf_tune_step:[767,1003],min_unit_dev_tune_step:767,min_unit_node_tune_step:1003,mind:1116,mini:[1102,1103,1147,1148],minimum:[40,41,561,767,817,821,843,846,849,851,858,884,885,920,921,928,929,1003,1066,1071],miss:[1149,1153],ml_framework:[843,846],mod:[843,878],mod_depth:[1145,1146],mod_height:[1145,1146],mod_with_top_mod_key_chain:[1145,1146],mode:[40,41,765,766,767,796,797,798,799,811,969,974,1003,1159],model:[1116,1158],modul:[40,41,42,59,843,908,1003,1116,1117,1119,1120,1121,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1155,1156,1162],moment:[946,948,949,953,1149,1150,1151],more:[43,843,930,1003,1116,1159,1162],more_util_node_str:1003,most:[40,41,43,1116,1162],move:[40,41,767,812,1003],much:[1116,1162],multi:[411,843,908,1085,1096,1133,1144],multi_head_attent:1085,multi_index_nest:1047,multi_map:[40,41],multi_nod:1003,multidev:[767,778,779,780,799],multidevcontain:[40,41],multidevic:[767,776],multidevit:[767,770,773,776,777,781],multidevitem:[767,769,772],multidevnest:[767,771,774],multiheadattent:[1116,1133],multinod:[1003,1007],multinodecontain:1003,multinodeit:1003,multinodeitem:1003,multinodenest:1003,multinomi:[147,313,411,516,673,1059],multipl:[40,41,843,903,926,969,971,1066,1067,1069,1070,1071,1072,1073,1075,1102,1103,1133,1143,1159],multipli:[40,41,843,866,1066,1072],multiprocess:[40,41,42,358,561,767,776,843,1003],must:[40,41,42,43,726,751,767,796,797,798,799,811,843,846,861,863,865,873,897,905,907,919,930,981,987,991,1003,1059,1064,1066,1067,1149,1153],mutabl:[1047,1049,1056],mutlidevic:[767,776],mutlinod:1003,mw_tm1:[946,949,953],mx_concat:1116,mxnet:[43,1116,1162],my_func:43,mymodel:1116,name:[765,766,1104,1105,1106,1110,1158],namespac:1159,nan:[40,41,843,888,897,899,941],nativ:[15,17,18,19,40,41,767,783,785,794,795,806,813,816,817,822,829,830,1003,1116,1117,1122,1123],native_modul:[1122,1123],native_module_class:[1122,1123],nativearrai:[15,18,19,43,726,751,767,785,811,812,817,821,827,831,832,834,835,843,844,845,846,848,849,850,851,852,853,855,857,858,859,860,861,862,864,865,866,867,870,871,872,873,875,876,877,878,879,881,882,886,888,889,890,897,898,899,900,901,902,904,905,906,907,910,911,912,915,916,917,918,919,924,926,927,930,932,933,935,936,937,938,940,941,942,943,944,945,1003,1047,1049,1056],natur:[981,994,1162],ncdhw:[1085,1090,1091,1133,1138,1139],nchw:[1085,1088,1089,1092,1133,1136,1137,1140],ncw:[1085,1086,1087,1133,1134,1135],ndarrai:[411,843,936],ndhwc:[1085,1090,1091,1133,1138,1139],nearest:[843,917],need:[43,843,859,860,1085,1087,1089,1091,1116,1133,1135,1137,1139,1162],neg:[40,41,843,897,1066,1067,1072,1074,1077,1079],negative_slop:1124,neither:1003,nest:[15,16,17,18,19,40,41,42,767,789,793,799,843,851,935,999,1000,1001,1003,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1145,1146,1149,1150,1151,1152,1153,1154],nested_indices_wher:1047,nested_map:[1003,1047],network:[1085,1094,1116,1117,1119,1133,1145,1146,1162],neural:[1085,1116,1119,1133,1158],new_node_percent_mem:1003,new_node_util:1003,new_node_utils_kei:1003,new_std:[1102,1103,1147,1148],newli:[765,766,843,855,856],newlin:[40,41,42],newshap:[843,855,916],next:[1003,1145,1146,1149,1150,1151,1152,1153,1154],nhwc:[1085,1088,1089,1092,1133,1136,1137,1140],node:[40,41,1047,1048,1055],node_clon:1003,node_dist:1003,node_dist_arrai:1003,node_dist_it:1003,node_in:1003,node_mapp:1003,node_str:1003,node_to_str:1003,node_util:1003,nodedistit:1003,nodedistitem:1003,nodedistnest:1003,nodemanag:[1003,1014],nodemapp:1003,nodemappermultiproc:1003,noinspect:[43,768,818,819,820,947,1003,1111],non:[40,41,765,766,817,833,1145,1146,1149,1153,1159],none:[40,41,42,43,59,61,64,356,358,359,362,364,371,372,373,374,375,383,384,385,386,387,388,389,390,391,392,394,395,405,406,411,412,765,766,767,776,777,783,784,809,810,811,812,817,824,825,826,831,832,843,846,851,868,869,874,876,880,881,882,887,889,891,892,893,894,895,901,902,908,910,911,912,915,918,919,920,921,926,927,928,929,938,939,944,945,946,949,951,953,954,955,961,962,966,969,972,975,999,1000,1001,1002,1003,1047,1048,1051,1055,1056,1059,1060,1061,1062,1063,1066,1067,1069,1070,1071,1072,1073,1074,1075,1085,1087,1089,1091,1094,1095,1096,1097,1102,1103,1104,1105,1106,1110,1114,1122,1123,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],norm:[40,41,843,859,860,969,972,975,1103,1116,1148,1149,1151],normal:[1059,1062,1102,1103,1147,1148],normalized_idx:[1102,1103],normalized_shap:[1147,1148],notat:[40,41,1066,1068],noth:[40,41,1159],notimpl:43,notimplementederror:1003,now:[40,41,767,812,843,844,1003,1116,1133,1144,1145,1146,1158,1159,1162],np_concat:1116,ns_tune_step:1003,num:[358,383,384,843,901,902],num_arrai:[40,41],num_arrays_in_memori:843,num_arrays_on_dev:767,num_band:[843,879],num_channel:[1133,1140],num_chunk:1003,num_chunks_floor:1003,num_class:[1059,1060],num_cpu_cor:767,num_gpu:[91,356,767,1003],num_head:[1085,1096,1133,1144],num_kei:[1085,1096,1097],num_lay:[1133,1142],num_or_size_split:[40,41,358,390,843,926],num_output:1003,num_queri:[1085,1096,1097],num_sampl:[358,382,411,412,843,900,962,963,1059,1060],num_task:[999,1000,1001,1002],number:[40,41,42,765,766,767,803,804,805,817,828,834,835,843,846,858,862,875,879,886,889,899,900,901,902,905,909,915,926,933,937,941,943,969,974,999,1000,1001,1002,1003,1059,1060,1064,1066,1067,1069,1070,1071,1073,1075,1085,1096,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1159,1162],numer:[43,726,751,843,884,885,920,921,928,929,981,991,1124],numhead:[1085,1096],numpi:[40,41,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,843,936,969,974,1066,1068,1116,1158,1159,1162],nwc:[1085,1086,1087,1133,1134,1135],obj:[40,41],object:[40,41,42,59,767,817,821,831,832,843,846,851,946,1047,1050,1052,1053,1054,1057,1058,1059,1065,1110,1114,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1145,1146],object_in:[358,362,843,851],observ:1003,occupi:[843,918,919],off:[843,846],offer:1116,offset:[1102,1103],often:1159,old:[40,41],on_init:[1133,1144,1145,1146],onc:[767,811,1003,1059,1060,1116],one:[40,41,43,767,796,797,798,799,811,817,823,843,889,903,910,918,919,927,930,969,972,975,1003,1066,1068,1069,1070,1071,1072,1073,1074,1075,1116,1159,1162],one_hot:[98,358,458,561,843],onearrai:[843,875],ones:[40,41,98,239,358,458,561,843,889,910,912,1116],ones_lik:[98,239,358,458,561,843],onli:[40,41,411,767,1003,1047,1048,1049,1055,1149,1150,1151,1152,1153,1154,1158,1159],onlin:1116,onto:[767,796,797,812,1003,1047,1051,1056],oom:[767,1003],open:[843,846,1059,1063,1116,1162],opencv:1159,oper:[40,41,843,854,870,871,872,901,902,931,946,949,951,953,954,955,977,978,979,980,1085,1086,1087,1088,1089,1090,1091,1092,1094,1116,1117],operand:[40,41,1066,1068],oppos:[843,879],optim:[767,946,949,951,953,954,955,999,1000,1001,1002,1003,1116,1150,1151,1152,1154,1158,1162],optimizer_upd:946,option:[15,18,19,40,41,42,43,765,766,767,776,777,785,789,790,791,792,793,796,797,798,799,806,809,810,811,812,816,817,822,827,833,842,843,845,846,848,849,850,851,859,860,861,866,868,869,876,879,880,881,882,886,888,889,896,900,901,902,903,906,908,910,911,912,915,918,919,922,924,926,927,928,929,930,938,940,941,944,945,946,949,951,952,953,954,955,957,962,966,969,972,975,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1059,1060,1066,1069,1070,1071,1072,1073,1074,1075,1077,1078,1082,1085,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1159],ord:[843,876,969,974],order:[40,41,42,843,850,946,949,951,953,954,955,969,972,975,999,1000,1001,1155,1156],ordered_node_util_kei:1003,org:1162,origin:[40,41,42,843,912,916,945,969,972,975],other:[40,41,43,726,728,729,734,736,737,741,743,744,745,746,747,749,751,752,753,754,755,756,758,759,760,762,763,764,765,766,843,845,846,889,946,950,1059,1063,1116,1158,1159,1162],other_i:[43,726,751],otherwis:[15,16,17,18,19,40,41,767,784,817,824,825,826,843,854,897,938,939,942,946,952,957,961,999,1000,1001,1003,1066,1067,1069,1070,1071,1073,1075],our:[1116,1162],out:[411,817,831,832,843,846,981,986,1085,1093,1095,1116,1133,1141],out_feat_dim:[1085,1096],out_featur:[1085,1093,1094],out_i:[843,897],outdat:1162,outer:[999,1000,1001,1002],outer_batch_fn:[999,1000,1001],outer_batch_shap:[1085,1094],outer_cost_fn:[999,1000,1001],outer_v:[999,1000,1001],outlin:1159,output:[40,41,767,776,777,811,843,846,856,880,889,915,933,946,950,981,987,1003,1059,1061,1062,1063,1085,1087,1089,1091,1093,1095,1096,1097,1116,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144],output_ax:[767,811,1003],output_axi:1003,output_channel:[1133,1134,1135,1136,1137,1138,1139,1142,1143],output_connected_onli:[1104,1106,1110,1145,1146],output_queu:1003,output_shap:[1085,1087,1089,1091,1133,1135,1137,1139],outsid:[843,858],over:[40,41,843,876,969,972,975,1059,1063,1066,1067,1069,1070,1071,1073,1075,1102,1103,1147,1148],overal:1159,overflow:[843,846],overhead:1159,overrid:[843,910,912,945],overriden:[1149,1153],overwrit:[40,41,767,811,1003],overwrite_at_key_chain:[40,41],own:[1116,1159,1162],packag:1159,pad:[843,862,879,943,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],pad_width:[358,843,862,943],page:1116,pair:[1085,1097],parallel:[767,776,777,1003],parallelis:[767,776,777,1003],param:[40,41,42,43,358,373,374,767,811,843,844,881,882,910,911,944,1003,1115,1116,1145,1146,1158],paramet:[15,16,17,18,19,40,41,42,726,751,765,766,767,776,777,783,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,806,809,810,811,812,813,816,817,821,822,823,827,828,829,830,831,832,833,834,835,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,864,865,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,888,889,890,892,893,894,896,897,898,899,900,901,902,903,904,905,906,907,908,911,912,915,916,917,918,919,920,921,922,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158],parameter:[1059,1062,1063],params_all_empti:1110,pardo:1116,pars:[843,863],part:[946,949,951,953,954,955,981,986,1116,1145,1146,1159],partial:[40,41,1145,1146],particl:1162,particular:1162,pass:[40,41,42,767,776,811,817,822,843,856,946,960,999,1000,1001,1003,1122,1123,1145,1146,1149,1153,1155,1156],pattern:[40,41,843,870,871,872],per:[767,1003,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],percent_used_mem_on_dev:767,percent_used_mem_on_nod:1003,percentag:[767,806,1003],perf_count:1003,perform:[40,41,767,843,848,849,850,866,870,871,872,892,893,894,900,901,902,946,949,951,953,954,955,962,963,999,1000,1001,1002,1003,1047,1052,1053,1066,1067,1069,1070,1071,1072,1073,1074,1075,1077,1082,1085,1093,1095],permissable_step:1003,permut:[411,843,932,938],perpendicular:[843,865],person:1116,physci:1162,pickl:[40,41,1003],pickle_filepath:[40,41],pid:1110,pinv:[303,645,969],pip:1116,pipelin:1158,pkk:1162,pkkm1:1162,pkm1km1:1162,place:[40,41,43,767,812,843,875,880,892,893,894,1003,1149,1150,1151,1152,1153,1154],placehold:[1047,1056],pleas:411,point:[817,831,834,843,846,981,991],popul:[40,41,1059,1060],popular:1162,population_s:[411,412,1059,1060],portabl:[1116,1117],posit:[15,16,17,767,789,793,799,843,844,846,875,879,897,1003,1059,1064,1122,1123],possibi:[40,41],possibl:[843,903,935,962,967,1162],post:[1102,1103],post_shap:[40,41],power:[43,726,751,757,843,884,920,929,1124],practic:1116,pre:[767,1003,1116],pre_shap:[40,41],pred:[1098,1099,1100,1101],predict:[1098,1099,1100,1101,1162],preprint:1116,present:[40,41],preserv:[40,41,42,843,876,946,957],preserve_typ:[40,41,396,399,946,957],press:1116,prevent:[946,948,949,953,1003,1149,1150,1151],previou:[946,949,953],previous:[843,856],prime:1116,print:[40,41,42,767,807,843,913,1116,1158],print_all_arrays_in_memori:843,print_all_arrays_on_dev:767,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1149,1153],prob:[411,412,1059,1060,1085,1093,1133,1141],probabl:[1059,1060,1085,1093,1133,1141],problem:1162,process:[767,776,777,806,816,843,908,1003],process_specif:[767,806,816,1003],prod:[40,41,843,871],produc:[767,776,777,1003],product:[40,41,843,865,866,904,1066,1068,1085,1096,1097,1133,1144],profil:[91,233,356,451,553,767,1003],project:[1116,1158,1159,1162],promot:[43,726,751,981,991],prompt:1116,properli:43,properti:[40,41,767,779,1003,1110,1114,1145,1146,1149,1150,1151,1152,1154],provid:[40,41,43,765,766,767,784,817,824,825,826,833,842,843,869,910,912,919,945,946,949,951,953,954,955,961,1003,1066,1067,1116,1133,1142,1149,1150,1151,1152,1153,1154,1159],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[969,973],ptype:[1110,1114],pure:[40,41,1116,1162],purpos:1162,put:1003,pybroadexcept:1003,pyprotectedmemb:[1003,1111],pyshadowingbuiltin:43,pyshadowingnam:[768,818,819,820,947,1003],python:[40,41,767,806,816,843,846,1003,1116],pytorch:[946,949,951,953,954,955,1116,1149,1150,1151,1152,1153,1154,1158,1159,1162],pyunresolvedrefer:1003,quadrant:[981,987],queri:[40,41,726,740,761,767,800,810,1003,1085,1096,1097,1133,1144],query_dim:[1133,1144],query_kei:[40,41],queue:[40,41,42,767,776,777,843,914,922,1003],queue_class:[767,776,777,1003],queue_load_s:[40,41,42],queue_timeout:[40,41,42,843,1003],quick:[411,1116],quickli:1158,radian:[981,982,984,987,989,995,997],rai:[981,982],rais:[40,41,43,726,751,843,854,884,920,927,929,939,1003,1066,1067,1145,1146,1149,1153],ram:[767,806,813,816,1003],randint:[147,313,411,516,673,1059],random:[37,40,41,412,1060,1061,1062,1063,1064,1065,1116],random_crop:962,random_norm:[147,313,411,516,673,1059],random_uniform:[147,313,411,516,673,1059],randomli:[411,962,966,1085,1093,1133,1141],randomness_factor:[1104,1106,1110,1145,1146],rang:[411,843,846,901,902,981,987,1003,1116,1158,1162],rank:[843,862,940,943,1066,1067],rate:[946,949,951,953,954,955,999,1000,1001,1002,1133,1144,1149,1150,1151,1152,1153,1154],rather:[40,41,767,811,843,846,896,946,952,1003],ratio:[767,946,953,962,967,1003,1149,1151],raw:[40,41],raw_delta:1003,reach:[767,789,793,799,1003,1047,1056],read:[40,41],readi:[1003,1158],real:[981,982,986],realiti:1159,rearrang:[40,41,843,870,872],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[999,1001],receiv:[767,776,777,843,847,903,1003,1133,1143],receivess:[767,1003],receiving_fn:1110,receivng:[999,1002],recev:[999,1000,1001],recognit:1162,recommend:1116,rectifi:[1077,1079,1080],recurr:[1085,1095],recurrent_bia:[1085,1095],recurrent_kernel:[1085,1095],recurs:[40,41,1047,1048,1049,1055,1056],redefin:43,reduc:[40,41,767,811,843,871,1003,1066,1067,1069,1070,1071,1072,1073,1074,1075],reduce_max:[40,41,154,318,413,521,680,1066],reduce_mean:[40,41,154,318,413,521,680,1066,1116,1158],reduce_min:[40,41,154,318,413,521,680,1066],reduce_prod:[40,41,154,318,413,521,680,1066],reduce_std:[40,41,318,1066],reduce_sum:[40,41,154,318,413,521,680,1003,1066],reduce_var:[40,41,154,318,413,521,680,1066],reduct:[39,40,41,358,388,389,843,871,918,919,1067,1068,1069,1070,1071,1072,1073,1074,1075,1116],refer:[946,948,949,969,976,1066,1067,1133,1143,1162],reflected_oper:[0,13,14],regard:[767,1003],regardless:[40,41,765,766],register_paramet:1158,reimplement:1162,rel:[946,949,951,953,954,955],rel_slice_obj:1003,relev:[1149,1150,1151,1152,1153,1154],relu:[690,1077,1078,1079,1116,1158],remain:[43,843,916,1047,1051],remaind:[40,41,843,878,926],remov:[40,41,843,927,999,1000,1001],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,843,876],rep:[843,933],repeat:[40,41,239,561,843,872,933,1003,1159],repeated_config_check:[767,1003],repeatedli:[1047,1054],repetit:[40,41,843,915,933],replac:[40,41,43,411,412,843,858,918,919,1059,1060],repo:1116,repres:[817,823,828,1085,1094],represent:[40,41,42,767,794,795,817,823,829,830,843,925,935,1003],reptil:[999,1002],reptile_step:999,requir:[43,765,766,817,821,843,846,851,1122,1123],res:43,resampl:[843,900],reshap:[40,41,43,411,561,843],reshape_lik:[40,41],respect:[843,873,946,948,949,950,951,953,954,955,981,991,999,1000,1001,1002],respons:1003,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,726,751,767,776,843,846,873,897,918,919,930,969,972,975,977,978,979,980,981,991,1003,1066,1067,1069,1070,1071,1072,1073,1074,1075,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1116],ret:1003,ret_dict:1003,ret_fn:[767,776,777,1003],retain:[946,950],retain_grad:[396,397,946,950],retreiv:1003,retrn:[843,925],return_cont:[40,41],return_dict:[40,41],return_graph:[1104,1105,1106],return_inner_v:[999,1000,1001,1002],return_sequ:[1133,1142],return_st:[1133,1142],rev:[843,869],revers:[40,41,843,869,876,938],right:[40,41],rk_e:1162,robot:1116,ronald:1116,round:[239,358,561,843,846,1003],row:[843,889,1059,1060],rule:[43,726,751,843,846,981,991],run:[767,776,946,948,949,953,999,1000,1001,1002,1003,1116,1117,1133,1144,1145,1146],safe:[767,776,1003],safety_factor:[767,1003],same:[15,16,17,40,41,43,767,776,777,811,812,817,821,843,844,857,861,877,878,881,882,910,912,917,918,919,930,945,946,952,957,969,974,981,986,999,1000,1001,1003,1066,1068,1085,1086,1087,1088,1089,1090,1091,1092,1116,1133,1134,1135,1136,1137,1138,1139,1140,1158,1162],same_arrai:[40,41],sampl:[843,900,962,963,1059,1060,1062,1063,1085,1093,1116,1133,1141],satisfi:[843,851,969,971,976],save:[40,41,843,923,934,962,964,1145,1146],save_debug_info:1110,save_dir:[356,357,767,782,1003],save_to_disk:[1104,1106,1110,1145,1146],save_weight:[1145,1146],scalar:[843,858,910,937,941],scale:[767,809,810,946,954,1003,1085,1093,1096,1097,1102,1103,1133,1141,1144,1149,1152],scaled_dot_product_attent:1085,scatter:[843,910,918,919],scatter_flat:[98,239,358,458,561,843],scatter_nd:[98,239,358,458,561,843],scene:[946,949,951,953,954,955],schemat:1116,screen:[40,41],search:[15,18,19,40,41],second:[40,41,767,798,843,852,865,873,914,922,932,946,948,949,953,999,1001,1003,1149,1150,1151],secondli:1162,see:[43,59,356,357,411,726,751,767,779,780,781,782,817,843,846,901,902,946,981,991,1066,1067,1110,1114,1116,1124,1126,1127,1129,1130,1132],seed:[40,41,147,411,673,1059],seed_valu:[40,41,411,1059,1064],seem:1116,seen_set:[843,887],select:[843,851,927,1159,1162],self:[40,41,43,59,356,357,726,751,767,779,780,781,782,817,946,1003,1110,1114,1116,1124,1126,1127,1129,1130,1132,1149,1153,1158,1162],sent:1003,seper:[843,879],seq:[40,41,42,1066,1068,1145,1146],sequenc:[15,16,17,40,41,42,411,765,766,767,776,777,786,787,788,789,790,791,792,793,796,797,811,817,821,843,846,851,853,855,861,862,876,889,903,906,911,915,916,919,926,930,933,938,943,944,946,950,962,966,967,969,972,975,1003,1047,1058,1059,1061,1063,1066,1069,1070,1071,1072,1073,1074,1075,1085,1086,1087,1088,1089,1090,1091,1092,1102,1103,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1142,1145,1146,1147,1148,1149,1153,1155,1156],sequenti:1116,set:[15,18,19,40,41,767,796,797,809,810,811,843,845,868,889,920,921,922,923,946,949,951,952,953,954,955,969,972,975,1003,1047,1048,1055,1057,1058,1059,1060,1064,1066,1069,1070,1071,1072,1073,1074,1075,1114,1116,1133,1142,1149,1150,1151,1152,1153,1154,1159,1162],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1114,set_debug_mod:44,set_default_devic:767,set_default_dtyp:817,set_default_float_dtyp:817,set_default_int_dtyp:817,set_default_nod:1003,set_exception_debug_mod:44,set_framework:[40,41,59,1003,1116,1158,1159,1162],set_ivy_backend:[40,41],set_min_bas:843,set_min_denomin:843,set_nest_at_index:1047,set_nest_at_indic:1047,set_param:1110,set_queue_timeout:843,set_split_factor:[767,1003],set_stat:[1149,1150,1151,1152,1153,1154],set_tmp_dir:843,set_with_grad:946,setter:1003,sever:1162,sgd:[1116,1149],shape0:1003,shape:[40,41,358,372,386,389,394,411,561,767,779,817,821,843,844,855,857,861,862,875,876,877,878,880,882,886,889,910,911,912,915,916,917,918,919,925,927,930,943,944,945,962,966,969,971,981,986,987,1003,1059,1061,1062,1063,1066,1068,1085,1087,1089,1091,1110,1114,1133,1135,1136,1137,1138,1139,1140,1147,1148],shape_slic:[40,41],shape_to_tupl:843,share:[40,41,1116,1159],shift:1003,should:[40,41,42,43,411,726,751,765,766,767,843,855,856,863,910,916,946,949,951,953,954,955,981,991,1003,1066,1068,1116],show:[40,41,1110,1116,1162],show_debug_info:1110,show_graph:[1104,1116,1145,1146,1149,1153],show_mod_in_top_mod:[1145,1146],show_structur:[1145,1146],show_sub_contain:[40,41],show_v:[1145,1146],show_v_in_top_v:[1145,1146],shown:[40,41],shp:1003,shuffl:[40,41,147,411,673,1059],shuffle_h5_fil:[40,41],sigmoid:[690,1077,1116,1158],signatur:[43,59,356,357,358,396,401,405,408,409,411,767,779,780,781,782,817,946,1110,1114,1124,1126,1127,1129,1130,1132],signific:1162,similar:[1085,1096,1133,1144],simpl:[43,843,874,1116,1159,1162],simplest:1159,simpli:[40,41,43,1116,1159,1162],simultan:1116,sin:[656,843,879,981,997,1159],sinco:1159,sine:[981,984,985,995,996],singl:[40,41,765,766,767,776,777,796,797,798,799,843,927,937,941,962,967,1003,1059,1062,1063,1066,1069,1070,1071,1072,1073,1074,1075,1116,1159,1162],singleton:[1066,1067],singular:[969,974],sinh:[656,981],siren:[1116,1124],size:[40,41,42,358,388,767,790,791,792,793,809,810,811,843,846,855,901,902,918,926,962,966,969,972,974,975,1003,1059,1060,1062,1063,1066,1069,1070,1071,1072,1073,1074,1075,1133,1134,1135],size_ordered_arrai:[40,41],skew:[969,976],skinv:1162,skip:[40,41],slice:[40,41,843,850,881,882,1003,1047,1054],slice_kei:[40,41],slice_obj:[40,41,1003],slice_via_kei:[40,41],slide:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],slope:[1077,1079],small:[1098,1099,1100,1101,1102,1103,1116,1147,1148,1159],smaller:[843,858],smallest:[40,41,843,849,857],softmax:[164,423,690,1077,1085,1096,1097],softplu:[690,1077],solv:1162,some:[40,41,43,843,846,946,948,949,951,953,954,955,960,1085,1093,1116,1133,1141,1159,1162],someth:[43,1162],something_cool:43,somewher:[40,41],sort:[40,41,42,843,850,969,974,1003],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1114,1119,1120,1121,1122,1123,1124,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1160,1161,1162],space:[843,846,879,901,902],spars:[1098,1101],sparse_cross_entropi:1098,spawn:[843,908],specif:[40,41,43,767,809,843,863,870,871,872,908,999,1000,1001,1002,1003,1059,1065,1116,1145,1146,1158,1159],specifc:[1059,1060],specifi:[40,41,43,767,786,787,788,789,790,791,792,793,796,797,801,803,807,810,811,812,817,821,823,843,846,848,849,851,858,861,862,880,881,882,888,901,902,930,940,943,969,972,975,1003,1047,1052,1053,1057,1058,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075],split:[40,41,98,239,358,458,561,767,776,790,791,792,793,809,810,811,843,903,1003],split_arg:1003,split_factor:[767,776,1003],split_func_cal:[767,1003],split_siz:1003,spread:[767,799,1003],squar:[843,889,969,971],squeez:[98,239,358,458,561,843],stabil:[843,928,929],stabl:[843,884,885,920,921,928,929],stable_divid:843,stable_pow:843,stack:[40,41,239,561,843,962,967,1047,1048,1055,1133,1142],stack_imag:[138,299,401,506,641,962],stacked_dim_s:1003,standard:[40,41,43,1059,1062,1066,1073,1102,1103,1147,1148],start:[40,41,356,357,358,359,383,384,411,767,782,843,846,901,902,1003,1116,1159],starting_index:[40,41],starting_split_factor:[767,1003],state:[1003,1085,1095,1104,1105,1106,1110,1116,1119,1120,1121,1122,1123,1124,1126,1127,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158],statement:1159,static_argnam:[358,364,765,766],static_argnum:[358,364,765,766],std:[411,1059,1062],step:[40,41,358,359,767,843,846,901,902,946,948,949,951,953,954,955,999,1000,1001,1002,1003,1116,1149,1150,1151,1152,1153,1154,1158,1162],stephen:1116,stick:1116,still:[40,41],stochast:[1149,1154],stop:[40,41,356,357,358,359,383,384,767,782,811,843,846,901,902,946,949,951,953,954,955,957,999,1000,1001,1002,1003,1149,1150,1151,1152,1153,1154],stop_gradi:[40,41,294,396,501,635,767,811,946,949,951,953,954,955,999,1000,1001,1002,1003,1149,1150,1151,1152,1153,1154],stopiter:1003,store:[40,41,843,879,926,946,960,1145,1146],store_var:[1145,1146],str:[15,16,17,40,41,42,43,765,766,767,776,777,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,811,817,822,823,828,829,830,831,832,833,834,835,842,843,851,868,870,871,872,906,908,911,918,919,969,972,975,999,1000,1001,1002,1003,1047,1051,1066,1068,1122,1123,1133,1144,1145,1146],str_to_nod:1003,straight:1159,strength:[1116,1162],stride:[1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],string:[40,41,767,783,785,794,795,800,806,812,813,816,817,821,827,829,830,833,842,843,846,851,868,889,911,912,944,945,1003,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140,1145,1146],structur:[40,41,42,843,863],structural_diff:[40,41],sub:[40,41,767,790,791,796,797,798,799,843,926,999,1000,1001,1002,1003],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1003,sub_mod:[1145,1146],sub_modul:[1155,1156],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[43,1147,1148,1155,1156],substr:[40,41],suggest:1116,suitabl:[962,967],sum:[40,41,358,388,389,767,796,797,798,799,811,843,867,871,918,919,1003,1066,1068,1074],summat:[40,41,1066,1068],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,140,141,143,144,148,149,150,151,152,153,155,156,157,158,159,160,161,162,165,167,168,170,171,172,173,174,175,176,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,300,301,302,304,305,306,307,309,310,311,314,315,316,317,319,320,321,322,323,324,325,326,327,330,332,333,334,335,336,337,338,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,402,403,404,406,407,410,412,414,415,416,417,418,419,420,421,424,425,427,428,429,430,431,432,433,452,453,454,455,456,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,503,504,505,507,508,509,511,512,513,517,518,519,520,522,523,524,525,526,527,528,529,533,534,535,554,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,636,637,638,639,640,642,643,644,646,647,648,649,650,651,653,654,655,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,674,675,676,677,678,679,681,682,683,684,685,686,687,688,691,692,693,694,695,696,697,699,700,702,703,704,705,706,707,708,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,766,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,972,973,974,975,976,978,979,980,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1099,1100,1101,1103,1105,1106,1108,1109,1111,1115,1116,1120,1121,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1161,1162],supports_inplac:843,suppos:1162,svd:[303,510,645,969],swap:[40,41,843,932],swapax:[40,41,458,561,843,1162],symmetr:[969,976],syntax:[356,358,396,401,405,408,409,411],tab:1116,take:[843,900],taken:[1066,1069,1070,1071,1073,1075],tan:[656,981,986],tangent:[981,986,987,988,997,998,1077,1084],tanh:[656,690,981,1077],target:[40,41,767,783,786,787,788,789,790,791,792,793,796,797,798,799,812,1003,1116],target_dict:[40,41],task:[999,1000,1001,1002],team:1162,templat:1116,temporari:[843,923,934],tensor:[40,41,43,358,388,389,767,785,817,827,843,846,848,849,850,855,901,902,905,907,910,911,912,916,918,919,926,944,945,1003,1059,1060,1061,1085,1093,1095,1116,1133,1141,1143,1149,1150,1151,1152,1153,1154,1158,1159],tensorflow:[1085,1087,1089,1091,1116,1133,1135,1137,1139,1159,1162],term:[40,41,1085,1095,1116,1133,1143],termcolor:[40,41,42],termin:[40,41,42,1003],test:[817,834,835,843,897,1066,1067],tf_concat:1116,than:[40,41,767,811,843,846,857,858,877,896,905,927,930,946,952,1003,1059,1063,1116,1159],thei:[40,41,43,981,987,999,1000,1001,1059,1060,1116,1155,1156,1159],them:[1116,1162],themselv:[1047,1048],therefor:43,thi:[40,41,42,43,767,789,793,799,806,811,816,843,846,879,914,916,922,946,949,951,952,953,954,955,960,969,972,975,1003,1047,1051,1056,1066,1069,1070,1071,1072,1073,1074,1075,1085,1094,1116,1145,1146,1149,1150,1151,1152,1153,1154,1158,1159,1162],thing:1116,those:[40,41,843,858,946,960,969,974,1003],threshold:[843,905,907],through:[40,41],tile:[239,458,561,843],time:[843,933,946,949,953,999,1000,1001,1002,1003,1059,1060,1085,1095,1133,1144,1145,1146,1162],time_chronolog:[1104,1105,1110],time_infer:[1104,1105],timeout:[40,41,42,767,776,777,843,914,922,1003],timestep:[1085,1095,1133,1142],timing_fnam:[1104,1105],titl:1116,tmp_dir:843,tmp_dr:[843,923],to_appli:[40,41],to_clon:[767,1003],to_dev:[40,41,91,233,356,451,553,767],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[767,1003],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,43,1116],to_ivy_modul:[166,698,1116,1122],to_json:[40,41],to_kv_fn:[1085,1096],to_kv_v:[1085,1096],to_list:[40,41,358,561,843],to_multi_dev:[40,41],to_mut:[1047,1049,1056],to_n:[15,40,41,43,1116],to_nod:1003,to_numpi:[40,41,358,561,843,1116,1158],to_out_fn:[1085,1096],to_out_v:[1085,1096],to_q_fn:[1085,1096],to_q_v:[1085,1096],to_raw:[40,41],to_scalar:[358,561,843],todo:1003,togeth:[40,41,1155,1156],tool:[1116,1159],top_mod:[1145,1146],topic:1162,torch:[43,765,766,1116,1158,1159,1162],torch_concat:1116,torchfcmodel:1158,total:[40,41,42,767,813,1003],total_mem_on_dev:767,total_mem_on_nod:1003,tpu:[767,814,1003],tpu_is_avail:[356,451,553,767,1003],tpye:[817,828],trace:[40,41,843,896],track:[767,1003,1047,1056,1145,1146],track_submod_call_ord:[1145,1146],track_submod_ret:[1145,1146],trail:[1147,1148],train:[946,948,949,953,1116,1117],trainabl:[946,952,1116,1117,1122,1123,1145,1146,1155],trainer:1116,tran:1162,transform:[1085,1093,1094],transpos:[40,41,98,239,358,561,767,798,843,1003,1085,1087,1089,1091,1133,1135,1137,1139],travers:[15,18,19,40,41,1047,1056],treat:[40,41,765,766],tree_depth:1114,tree_height:1110,tri:[40,41],trigonometr:[981,982,986,989,995],trim_kei:[40,41],trust:[946,953,1149,1151],truth:[843,873,977,978,979,980],try_else_non:843,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[767,1003],tune_dev_alloc:767,tune_dev_split:767,tune_node_alloc:1003,tune_node_split:1003,tune_step:[767,1003],tupl:[15,16,17,18,19,40,41,765,766,843,862,879,880,925,943,1003,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1061,1066,1067,1069,1070,1071,1072,1073,1074,1075],two:[40,41,843,846,852,865,904,932,969,972,974],type:[15,18,40,41,42,43,59,356,357,726,751,767,779,780,781,782,794,795,799,811,817,821,822,823,827,828,829,830,831,832,833,834,835,842,843,844,846,851,857,861,863,873,877,878,880,889,896,897,910,911,912,917,931,941,944,945,946,952,957,981,991,1003,1110,1114,1116,1124,1126,1127,1129,1130,1132,1145,1146,1159],types_to_iteratively_nest:[40,41,42],uint8:[962,964,968],uint8_img_to_float_img:962,unchang:[15,16,17,18,19],unif:1003,unifi:[40,41,767,796,797,798,799,811,1003,1116],uniform:[40,41,1059,1060,1062,1063,1124,1126,1127,1130,1131],uniformli:[1059,1061,1063],unify_arrai:1003,unify_it:1003,unify_nest:1003,union:[15,18,19,40,41,43,726,751,765,766,767,785,790,791,792,793,811,812,817,821,822,823,827,828,829,830,831,832,833,834,835,842,843,844,845,846,848,849,850,851,852,853,855,857,858,859,860,861,862,864,865,866,867,870,871,872,873,875,876,877,878,879,880,881,882,886,888,889,890,897,898,899,900,901,902,904,905,906,907,910,911,912,915,916,917,918,919,924,925,926,927,930,932,933,935,936,937,938,940,941,942,943,944,945,1003,1047,1048,1049,1055,1056],uniqu:[767,776,777,999,1000,1001,1002,1003,1047,1051],unique_kwarg:1003,unit:[767,981,982,984,1003,1077,1078,1079,1080],unitari:[969,974],unless:[843,910,912,945],unlik:[767,1003],unnorm:[1059,1060],unpack:[843,940],unrol:[1085,1095],unset:1159,unset_debug_mod:44,unset_default_devic:767,unset_default_dtyp:817,unset_default_float_dtyp:817,unset_default_int_dtyp:817,unset_framework:[59,1159],unset_with_grad:946,unstack:[40,41,98,239,358,458,561,843],unus:[765,766],updat:[40,41,358,388,389,767,776,843,894,918,919,946,948,949,951,953,954,955,999,1000,1001,1003,1047,1052,1053,1057,1058,1085,1095,1122,1123,1149,1150,1151,1152,1153,1154,1159,1162],update_backend:[40,41],update_config:[40,41],update_inference_tim:1110,upper:[40,41,1059,1063],upper_depth:[1145,1146],usabl:[1116,1162],usag:[767,811,1003],use:[40,41,42,43,411,767,776,777,802,814,843,915,928,929,1003,1085,1096,1102,1103,1116,1147,1148,1159,1162],used:[40,41,43,411,767,776,806,809,810,816,817,828,843,884,885,903,912,918,919,920,921,945,946,953,954,969,972,999,1000,1001,1002,1003,1047,1056,1133,1144,1149,1151,1152,1158,1159],used_dev:[767,776],used_mem_on_dev:767,used_mem_on_nod:1003,used_node_str:1003,used_node_strs_dict:1003,useful:[40,41,767,811,1003,1085,1094,1116,1159],user:[1116,1133,1144,1145,1146,1159,1162],uses:1116,using:[40,41,946,948,949,1047,1050,1054,1066,1068,1085,1093,1097,1116,1133,1141,1158,1159,1162],util:[767,800,1003],v_with_top_v_key_chain:[1145,1146],val:[40,41,358,377,378,379,726,761,843,892,893,894,920,921,1114],valid:[817,822,843,928,929,1066,1067,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],valid_dtyp:817,valu:[40,41,358,767,779,810,811,843,844,846,848,849,850,858,859,860,862,863,869,873,879,880,881,882,898,899,901,902,905,907,914,915,916,917,918,919,920,921,922,938,941,942,943,946,950,953,962,968,969,974,977,978,979,980,981,992,993,994,999,1000,1001,1003,1047,1051,1052,1053,1057,1058,1059,1062,1063,1066,1069,1071,1085,1096,1097,1102,1103,1110,1133,1144,1147,1148,1149,1151],value_is_nan:843,vanilla:[999,1001],var_shap:1124,variabl:[15,16,17,18,19,40,41,294,396,501,635,843,854,892,893,894,895,896,931,946,949,950,951,952,953,954,955,957,960,999,1000,1001,1002,1085,1096,1102,1103,1122,1123,1124,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],variable_data:[396,635,946],varianc:[40,41,1066,1075,1162],varieti:1159,variou:1116,vector:[40,41,405,407,843,860,865,969,974,975,976,1085,1094,1133,1143],vector_norm:[40,41,969],vector_to_skew_symmetric_matrix:[142,303,405,510,645,969],verbos:1161,veri:[43,1116],version:43,via:[1047,1048,1055,1159],view:[962,967],vision:1116,visual:1159,volum:[1085,1090],vw_tm1:[946,949,953],wai:[1159,1162],wait:[40,41,42],want:[1116,1159,1162],warn:[59,66,67,68,69,70],warp:[401,402,962,963],watch:1158,weight:[946,948,949,951,953,954,955,1085,1094,1095,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1145,1146,1149,1151,1152],weight_initi:[1133,1134,1135,1136,1137,1138,1139,1140,1142,1143],weights_path:[1145,1146],well:[40,41,843,888],were:[40,41,1003],what:1116,when:[40,41,42,767,843,856,929,942,969,974,1003,1116,1145,1146,1159,1162],where:[40,41,43,239,358,561,726,751,843,846,855,858,862,875,890,898,899,910,943,969,974,1047,1048,1055,1059,1060,1066,1067],wherebi:[1047,1056],whether:[15,18,19,40,41,42,765,766,767,785,798,802,806,811,814,816,817,827,833,834,835,842,843,845,852,853,866,869,874,879,886,888,891,895,896,903,924,931,940,941,946,949,950,951,952,953,954,955,957,999,1000,1001,1002,1003,1047,1048,1049,1051,1055,1056,1059,1060,1066,1067,1077,1078,1085,1093,1116,1122,1123,1133,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154],which:[40,41,42,43,411,765,766,767,776,777,785,790,791,792,793,796,797,798,799,801,803,807,809,810,811,817,822,827,831,832,833,842,843,846,851,861,863,865,866,867,869,876,880,881,882,883,889,890,900,901,902,909,910,911,912,913,915,918,919,926,930,940,942,944,945,946,949,950,951,953,954,955,957,959,960,962,964,969,972,975,981,987,1003,1047,1051,1052,1053,1057,1058,1059,1060,1061,1062,1063,1066,1067,1069,1070,1071,1072,1073,1074,1075,1077,1082,1085,1096,1097,1116,1122,1123,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1156,1158,1159],whitespac:[40,41,42],whose:[43,726,751,843,851,856,1066,1068,1069,1070,1071,1073,1075],why:[1116,1117],width:[962,967],wiki:1162,wikipedia:1162,window:[962,967,1085,1086,1087,1088,1089,1090,1091,1092,1133,1134,1135,1136,1137,1138,1139,1140],wise:[40,41,43,726,751,843,857,858,873,877,878,905,907,917,946,949,951,953,955,977,978,979,980,981,982,984,986,987,989,991,992,993,994,995,997,1077,1078,1079,1080,1081,1082,1083,1084],wish:1159,with_arg_label:[1104,1106,1110,1145,1146],with_array_cach:[1104,1105,1106,1110],with_bia:[1133,1143],with_cal:[843,869],with_default_key_color:[40,41],with_edge_label:[1104,1106,1110,1145,1146],with_entries_as_list:[40,41],with_grad:[946,956,1145,1146],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1003,with_output_label:[1104,1106,1110,1145,1146],with_partial_v:[1145,1146],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,358,390,843,926,1003],with_to_kv_fn:[1133,1144],with_to_out_fn:[1133,1144],with_to_q_fn:[1133,1144],within:[15,18,19,843,846,969,974,1059,1063],without:[40,41,843,914,916,922,1047,1049,1159],wonder:1116,word:[15,16,17,843,846,1059,1063,1122,1123],work:[43,1158],worker:[767,776,777,1003],worker_class:[767,776,777,1003],worker_kwarg:1003,would:[43,843,850,1077,1082,1116,1159,1162],wrap:[15,40,41,42,356,358,396,401,405,408,409,411,843,856,946,960,1116],wrapper:43,write:[40,41,43,1116,1117,1162],written:[43,1116,1162],ws_new:[946,949,951,953,954,955],x1_i:[843,873,981,991],x2_i:[843,873,981,991],x_feat_dim:[1085,1096],x_i:[843,897],x_in:[1116,1158],x_inv:[969,971],x_max:[358,843,858],x_min:[358,843,858],x_sub:1003,xkk:1162,xkkm1:1162,xkm1km1:1162,xs0:1003,xs_t:1003,year:[1116,1162],yet:[1047,1056,1162],yield:[843,942],you:[1116,1158,1159,1162],your:[1116,1158,1159,1162],your_awesome_project:1159,yourself:1116,zero:[40,41,98,239,358,458,561,843,862,910,912,918,919,943,945,946,948,949,953,954,1085,1093,1116,1124,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1149,1150,1151,1152],zero_pad:[239,358,458,561,843],zeros_lik:[98,239,358,458,561,843],zip:1003,zk_e:1162},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":869,"function":[77,78,80,81,83,84,85,86,87,88,89,180,181,183,184,186,187,188,189,190,191,192,342,343,345,346,348,349,350,351,352,353,354,437,438,440,441,443,444,445,446,447,448,449,539,540,542,543,545,546,547,548,549,550,551,712,713,715,716,718,719,720,721,722,723,724],Ones:1129,Using:1159,abs:[240,459,562,844],aco:[657,982],acosh:[658,983],activ:[164,329,423,531,690,1077,1119],adam:1150,adam_step:948,adam_upd:949,algebra:[82,83,185,186,347,348,442,443,544,545,717,718],all:[155,319,414,522,681,1067],all_equ:845,all_nested_indic:1048,api:[0,43,75,178,340,435,537,710],arang:[99,241,359,460,563,846],arg_nam:847,argmax:[100,360,461,564,848],argmin:[101,361,462,565,849],args_to_ivi:16,args_to_n:17,argsort:[566,850],arithmet:1,arrai:[0,3,43,75,102,178,194,242,340,362,435,463,537,567,710,726,851],array_equ:[243,568,852],arrays_equ:853,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[659,984],asinh:[660,985],assert_supports_inplac:854,atan2:[662,987],atan:[661,986],atanh:[663,988],attribut:5,backend:[43,73],bilinear_resampl:[139,300,402,507,642,963],binary_cross_entropi:1099,bitwis:7,broadcast_to:[244,569,855],builder:51,builtin:[194,726],builtin_ab:[195,727],builtin_add:[196,728],builtin_and:[197,729],builtin_bool:[198,730],builtin_contain:[199,731],builtin_deepcopi:[200,732],builtin_dir:[201,733],builtin_eq:[202,734],builtin_float:[203,735],builtin_floordiv:[204,736],builtin_g:[205,737],builtin_getattr:[206,738],builtin_getattribut:[207,739],builtin_getitem:[208,740],builtin_gt:[209,741],builtin_int:[210,742],builtin_invert:[211,743],builtin_l:[212,744],builtin_lt:[213,745],builtin_mul:[214,746],builtin_n:[215,747],builtin_neg:[216,748],builtin_or:[217,749],builtin_po:[218,750],builtin_pow:[219,751],builtin_radd:[220,752],builtin_rand:[221,753],builtin_rfloordiv:[222,754],builtin_rmul:[223,755],builtin_ror:[224,756],builtin_rpow:[225,757],builtin_rsub:[226,758],builtin_rtruediv:[227,759],builtin_rxor:[228,760],builtin_setitem:[229,761],builtin_sub:[230,762],builtin_truediv:[231,763],builtin_xor:[232,764],cache_fn:856,cast:[103,245,363,464,570,821],ceil:[246,571,857],choleski:[646,970],choose_random_framework:61,citat:1116,clear_framework_stack:62,clear_mem_on_dev:[555,783],clip:[247,572,858],clip_matrix_norm:859,clip_vector_norm:860,clone:1018,clone_arrai:1019,clone_it:1020,clone_nest:1021,clonedit:1005,cloneditem:1004,clonednest:1006,closest_valid_dtyp:822,code:1162,comparison:9,compil:[248,364,573,765,766,1104],compile_graph:1105,concaten:[104,249,365,465,574,861],constant:[76,179,341,436,538,711],constant_pad:[250,466,575,862],contain:[40,41],container_typ:[576,863],content:1116,contribut:43,conv1d:[170,332,427,702,1086,1134],conv1d_transpos:[171,333,428,703,1087],conv1dtranspos:1135,conv2d:[172,334,429,533,704,1088,1136],conv2d_transpos:[173,335,430,705,1089],conv2dtranspos:1137,conv3d:[174,336,431,534,706,1090,1138],conv3d_transpos:[175,337,432,707,1091],conv3dtranspos:1139,convers:15,convert:[166,698,1122],convert_dtyp:823,copy_arrai:[577,864],copy_nest:1049,core:[90,193,355,450,552,725],cos:[664,989],cosh:[665,990],cprint:1161,creation:[77,180,342,437,539,712],cross:[251,578,865],cross_entropi:1100,cumprod:[105,252,366,579,866],cumsum:[580,867],current_framework:63,current_framework_str:[581,868],data:[78,79,181,182,343,344,438,439,540,541,713,714],debug_mod:45,debugg:44,default_devic:784,default_dtyp:824,default_float_dtyp:825,default_int_dtyp:826,default_nod:1022,depthwise_conv2d:[176,338,433,535,708,1092],depthwiseconv2d:1140,dev:[93,235,453,556,785],dev_clon:786,dev_clone_arrai:787,dev_clone_it:788,dev_clone_nest:789,dev_dist:790,dev_dist_arrai:791,dev_dist_it:792,dev_dist_nest:793,dev_from_str:[94,236,454,557,794],dev_to_str:[95,237,455,558,795],dev_unifi:796,dev_unify_arrai:797,dev_unify_it:798,dev_unify_nest:799,dev_util:800,devclonedit:770,devcloneditem:769,devclonednest:771,devdistit:773,devdistitem:772,devdistnest:774,devic:[20,91,233,356,451,553,767],devmapp:776,devmappermultiproc:777,distribute_nest:1023,divid:991,document:1116,dropout:[1093,1141],dtype:[106,253,367,467,582,817,827],dtype_bit:[107,254,368,468,583,828],dtype_from_str:[108,255,369,469,584,829],dtype_to_str:[109,256,370,470,585,830],ecosystem:52,einops_rearrang:870,einops_reduc:871,einops_repeat:872,einsum:[156,320,415,523,682,1068],elementwis:[80,183,345,440,542,715],equal:[471,586,873],erf:[410,666,992],execute_with_gradi:[136,295,397,502,636,950],exist:874,exp:[667,993],expand_dim:[257,587,875],extens:[82,185,347,442,544,717],finfo:831,firstlayersiren:1126,flip:[110,258,371,472,588,876],float_img_to_uint8_img:964,floor:[259,589,877],floormod:[260,590,878],fomaml_step:1000,fourier_encod:879,framework:59,full:[111,261,372,473,591,880],func:72,gather:[112,262,373,474,592,881],gather_nd:[113,263,374,475,593,882],geglu:1120,gelu:[330,424,691,1078,1121],gener:[22,98,239,358,458,561,843],get_all_arrays_in_memori:883,get_all_arrays_on_dev:801,get_framework:64,get_min_bas:884,get_min_denomin:885,get_num_dim:[594,886],get_referrers_recurs:887,global:1107,glorotuniform:1127,gpu_is_avail:[802,1024],gradient:[24,135,294,396,501,635,946],gradient_descent_upd:951,gradient_imag:[140,301,403,508,643,965],graph:1110,gym:53,handler:59,has_nan:888,helper:1112,ident:[114,264,375,476,595,889],iinfo:832,imag:[26,138,299,401,506,641,962],index_nest:1050,indices_wher:[115,265,376,596,890],initi:1124,inplac:11,inplace_arrays_support:891,inplace_decr:[116,266,377,477,597,892],inplace_incr:[117,267,378,478,598,893],inplace_upd:[118,268,379,479,599,894],inplace_variables_support:895,inv:[647,971],invalid_dtyp:833,is_arrai:[119,269,380,480,600,896],is_float_dtyp:834,is_int_dtyp:835,is_vari:[137,296,398,503,637,952],isfinit:[120,270,381,481,601,897],isinf:[271,482,602,898],isnan:[272,483,603,899],ivi:[43,50,51,52,53,54,55,56,57,58,709,1158,1159,1162],ivymodul:[167,699],jax:74,lamb:1151,lamb_upd:953,lar:1152,lars_upd:954,layer:[169,331,426,532,701,1085,1133],layer_norm:1103,layernorm:1148,leaky_relu:[692,1079],linalg:[28,142,303,405,510,645,969],linear:[82,83,185,186,347,348,442,443,544,545,717,718,1094,1143],linear_resampl:[121,273,382,484,604,900],linspac:[122,274,383,485,605,901],log:[668,994,1113],log_global_inference_abs_tim:1108,log_global_inference_rel_tim:1109,logic:[30,145,308,408,514,652,977],logical_and:[309,653,978],logical_not:[310,654,979],logical_or:[311,655,980],logspac:[123,275,384,486,606,902],loss:1098,lstm:1142,lstm_updat:1095,maml_step:1001,manipul:[84,187,349,444,546,719],map:1051,map_nest_at_index:1052,map_nest_at_indic:1053,match_kwarg:903,math:[32,146,312,409,515,656,981],matmul:[276,487,607,904],matrix_norm:[143,304,406,511,648,972],maximum:[608,905],mech:54,memori:55,meshgrid:[277,609,906],meta:[34,999],method:[81,184,346,441,543,716],minimum:[610,907],model:56,modul:[1145,1146,1158],multi:1003,multi_head_attent:1096,multi_index_nest:1054,multidevcontain:42,multidevit:780,multidevitem:779,multidevnest:781,multiheadattent:1144,multinodeit:1009,multinodeitem:1008,multinodenest:1010,multinomi:[148,314,412,517,674,1060],multiprocess:[611,908],mxnet:177,nativ:1158,nest:1047,nested_indices_wher:1055,nested_map:1056,network:1158,next:1116,node:[1003,1025],node_dist:1026,node_dist_arrai:1027,node_dist_it:1028,node_str:1029,node_to_str:1030,node_util:1031,nodedistit:1012,nodedistitem:1011,nodedistnest:1013,nodemapp:1015,nodemappermultiproc:1016,norm:[1102,1147],num_arrays_in_memori:909,num_arrays_on_dev:803,num_cpu_cor:804,num_gpu:[96,805,1032],numpi:339,nutshel:1116,one_hot:[124,385,488,612,910],ones:[125,278,386,489,613,911],ones_lik:[126,279,387,490,614,912],oper:[1,3,7,9,11,13,43],optim:[1149,1153],optimizer_upd:955,overview:1116,param:1114,percent_used_mem_on_dev:806,percent_used_mem_on_nod:1033,pinv:[305,649,973],portabl:1162,print_all_arrays_in_memori:913,print_all_arrays_on_dev:807,profil:[92,234,357,452,554,782,1017],queue_timeout:914,randint:[149,315,518,675,1061],random:[36,147,313,411,516,673,1059],random_crop:966,random_norm:[150,316,519,676,1062],random_uniform:[151,317,520,677,1063],reduce_max:[157,321,416,524,683,1069],reduce_mean:[158,322,417,525,684,1070],reduce_min:[159,323,418,526,685,1071],reduce_prod:[160,324,419,527,686,1072],reduce_std:[325,1073],reduce_sum:[161,326,420,528,687,1074],reduce_var:[162,327,421,529,688,1075],reduct:[38,154,318,413,521,680,1066],reflect:13,relu:[693,1080],repeat:[280,615,915],reptile_step:1002,reshap:[616,916],robot:57,round:[281,617,917],run:1159,scaled_dot_product_attent:1097,scatter_flat:[127,282,388,491,618,918],scatter_nd:[128,283,389,492,619,919],search:[85,188,350,445,547,720],seed:[152,678,1064],sequenti:[1155,1156],set:[86,189,351,446,548,721],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:808,set_default_dtyp:836,set_default_float_dtyp:837,set_default_int_dtyp:838,set_default_nod:1034,set_exception_debug_mod:48,set_framework:65,set_min_bas:920,set_min_denomin:921,set_nest_at_index:1057,set_nest_at_indic:1058,set_queue_timeout:922,set_split_factor:[809,1035],set_tmp_dir:923,set_with_grad:956,sgd:1154,shape:[620,924],shape_to_tupl:925,show_graph:1106,shuffl:[153,679,1065],sigmoid:[694,1081],signatur:[81,184,346,441,543,716],sin:[669,995],sinh:[670,996],siren:1130,softmax:[165,425,695,1082],softplu:[696,1083],sort:[87,190,352,447,549,722],sparse_cross_entropi:1101,split:[129,284,390,493,621,926],split_factor:[810,1036],split_func_cal:[811,1037],squeez:[130,285,391,494,622,927],stable_divid:928,stable_pow:929,stack:[286,623,930],stack_imag:[141,302,404,509,644,967],statist:[88,191,353,448,550,723],stop_gradi:[297,399,504,638,957],str_to_nod:1038,supports_inplac:931,svd:[306,512,650,974],swapax:[495,624,932],tan:[671,997],tanh:[672,697,998,1084],tensorflow:434,tile:[287,496,625,933],tmp_dir:934,to_dev:[97,238,456,559,812],to_ivi:18,to_ivy_modul:[168,700,1123],to_list:[626,935],to_n:19,to_nod:1039,to_numpi:[627,936],to_scalar:[628,937],torch:536,total_mem_on_dev:813,total_mem_on_nod:1040,tpu_is_avail:[457,560,814,1041],train:1158,trainabl:1158,transpos:[131,288,392,629,938],tree:1116,try_else_non:939,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,79,181,182,343,344,438,439,540,541,713,714],uint8_img_to_float_img:968,unifi:1042,unify_arrai:1043,unify_it:1044,unify_nest:1045,unset_debug_mod:49,unset_default_devic:815,unset_default_dtyp:839,unset_default_float_dtyp:840,unset_default_int_dtyp:841,unset_framework:71,unset_with_grad:958,unstack:[132,289,393,497,630,940],used_mem_on_dev:816,used_mem_on_nod:1046,util:[89,192,354,449,551,724],valid_dtyp:842,value_is_nan:941,variabl:[298,400,505,639,959],variable_data:[640,960],vector_norm:975,vector_to_skew_symmetric_matrix:[144,307,407,513,651,976],verbos:1160,vision:58,where:[290,631,942,1116],why:1162,with_grad:961,wrapper:72,write:1159,zero:[133,292,394,499,633,944,1132],zero_pad:[291,498,632,943],zeros_lik:[134,293,395,500,634,945]}})