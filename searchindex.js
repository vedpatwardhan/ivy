Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[784,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[371,0,0,"-"],creation_functions:[372,0,0,"-"],data_type_functions:[373,0,0,"-"],data_types:[377,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[373,1,1,""],finfo:[375,2,1,""],iinfo:[376,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[373,3,1,""],bits:[373,3,1,""],eps:[373,3,1,""],max:[373,3,1,""],min:[373,3,1,""],smallest_normal:[373,3,1,""]},"ivy.functional.ivy":{array_api:[785,0,0,"-"],core:[808,0,0,"-"],nn:[1152,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[786,0,0,"-"],creation_functions:[787,0,0,"-"],data_type_functions:[788,0,0,"-"],data_types:[791,0,0,"-"],elementwise_functions:[792,0,0,"-"],function_and_method_signatures:[796,0,0,"-"],linear_algebra_extension:[797,0,0,"-"],linear_algebra_functions:[798,0,0,"-"],manipulation_functions:[799,0,0,"-"],searching_functions:[800,0,0,"-"],set_functions:[801,0,0,"-"],sorting_functions:[802,0,0,"-"],statistical_functions:[804,0,0,"-"],utility_functions:[805,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[789,2,1,""],iinfo:[790,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{cos:[793,2,1,""],isfinite:[794,2,1,""],logical_not:[795,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[803,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[806,2,1,""],any:[807,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[809,0,0,"-"],compilation:[848,0,0,"-"],device:[850,0,0,"-"],dtype:[900,0,0,"-"],general:[924,0,0,"-"],gradients:[1025,0,0,"-"],image:[1041,0,0,"-"],linalg:[1048,0,0,"-"],logic:[1056,0,0,"-"],math:[1059,0,0,"-"],meta:[1076,0,0,"-"],multi_node:[1080,0,0,"-"],nest:[1124,0,0,"-"],random:[1136,0,0,"-"],reductions:[1143,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[810,2,1,""],builtin_add:[811,2,1,""],builtin_and:[812,2,1,""],builtin_bool:[813,2,1,""],builtin_contains:[814,2,1,""],builtin_deepcopy:[815,2,1,""],builtin_dir:[816,2,1,""],builtin_eq:[817,2,1,""],builtin_float:[818,2,1,""],builtin_floordiv:[819,2,1,""],builtin_ge:[820,2,1,""],builtin_getattr:[821,2,1,""],builtin_getattribute:[822,2,1,""],builtin_getitem:[823,2,1,""],builtin_gt:[824,2,1,""],builtin_int:[825,2,1,""],builtin_invert:[826,2,1,""],builtin_le:[827,2,1,""],builtin_lt:[828,2,1,""],builtin_mul:[829,2,1,""],builtin_ne:[830,2,1,""],builtin_neg:[831,2,1,""],builtin_or:[832,2,1,""],builtin_pos:[833,2,1,""],builtin_pow:[834,2,1,""],builtin_radd:[835,2,1,""],builtin_rand:[836,2,1,""],builtin_rfloordiv:[837,2,1,""],builtin_rmul:[838,2,1,""],builtin_ror:[839,2,1,""],builtin_rpow:[840,2,1,""],builtin_rsub:[841,2,1,""],builtin_rtruediv:[842,2,1,""],builtin_rxor:[843,2,1,""],builtin_setitem:[844,2,1,""],builtin_sub:[845,2,1,""],builtin_truediv:[846,2,1,""],builtin_xor:[847,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[849,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[850,1,1,""],DevClonedItem:[852,1,1,""],DevClonedIter:[853,1,1,""],DevClonedNest:[854,1,1,""],DevDistItem:[855,1,1,""],DevDistIter:[856,1,1,""],DevDistNest:[857,1,1,""],DevManager:[850,1,1,""],DevMapper:[859,1,1,""],DevMapperMultiProc:[860,1,1,""],MultiDev:[850,1,1,""],MultiDevItem:[862,1,1,""],MultiDevIter:[863,1,1,""],MultiDevNest:[864,1,1,""],Profiler:[865,1,1,""],clear_mem_on_dev:[866,2,1,""],default_device:[867,2,1,""],dev:[868,2,1,""],dev_clone:[869,2,1,""],dev_clone_array:[870,2,1,""],dev_clone_iter:[871,2,1,""],dev_clone_nest:[872,2,1,""],dev_dist:[873,2,1,""],dev_dist_array:[874,2,1,""],dev_dist_iter:[875,2,1,""],dev_dist_nest:[876,2,1,""],dev_from_str:[877,2,1,""],dev_to_str:[878,2,1,""],dev_unify:[879,2,1,""],dev_unify_array:[880,2,1,""],dev_unify_iter:[881,2,1,""],dev_unify_nest:[882,2,1,""],dev_util:[883,2,1,""],get_all_arrays_on_dev:[884,2,1,""],gpu_is_available:[885,2,1,""],num_arrays_on_dev:[886,2,1,""],num_cpu_cores:[887,2,1,""],num_gpus:[888,2,1,""],percent_used_mem_on_dev:[889,2,1,""],print_all_arrays_on_dev:[890,2,1,""],set_default_device:[891,2,1,""],set_split_factor:[892,2,1,""],split_factor:[893,2,1,""],split_func_call:[894,2,1,""],to_dev:[895,2,1,""],total_mem_on_dev:[896,2,1,""],tpu_is_available:[897,2,1,""],unset_default_device:[898,2,1,""],used_mem_on_dev:[899,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[850,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[850,3,1,""],da_tune_step:[850,3,1,""],dim_size:[850,3,1,""],ds_tune_step:[850,3,1,""],map:[850,3,1,""],repeated_config_check:[850,3,1,""],tune_step:[850,3,1,""],tuned:[850,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[859,3,1,""],map:[859,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[860,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[850,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[862,3,1,""],items:[862,3,1,""],keys:[862,3,1,""],shape:[862,3,1,""],values:[862,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[863,3,1,""],at_dev:[863,3,1,""],at_devs:[863,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[864,3,1,""],at_dev:[864,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[865,3,1,""],start:[865,3,1,""],stop:[865,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[900,1,1,""],DefaultFloatDtype:[900,1,1,""],DefaultIntDtype:[900,1,1,""],astype:[900,2,1,""],cast:[904,2,1,""],closest_valid_dtype:[905,2,1,""],convert_dtype:[906,2,1,""],default_dtype:[907,2,1,""],default_float_dtype:[908,2,1,""],default_int_dtype:[909,2,1,""],dtype:[910,2,1,""],dtype_bits:[911,2,1,""],dtype_from_str:[912,2,1,""],dtype_to_str:[913,2,1,""],invalid_dtype:[914,2,1,""],is_float_dtype:[915,2,1,""],is_int_dtype:[916,2,1,""],set_default_dtype:[917,2,1,""],set_default_float_dtype:[918,2,1,""],set_default_int_dtype:[919,2,1,""],unset_default_dtype:[920,2,1,""],unset_default_float_dtype:[921,2,1,""],unset_default_int_dtype:[922,2,1,""],valid_dtype:[923,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.general":{"default":[949,2,1,""],abs:[925,2,1,""],all_equal:[926,2,1,""],arange:[927,2,1,""],arg_names:[928,2,1,""],argmax:[929,2,1,""],argmin:[930,2,1,""],array:[931,2,1,""],array_equal:[932,2,1,""],arrays_equal:[933,2,1,""],asarray:[924,2,1,""],assert_supports_inplace:[934,2,1,""],broadcast_to:[935,2,1,""],cache_fn:[936,2,1,""],ceil:[937,2,1,""],clip:[938,2,1,""],clip_matrix_norm:[939,2,1,""],clip_vector_norm:[940,2,1,""],concatenate:[941,2,1,""],constant_pad:[942,2,1,""],container_types:[943,2,1,""],copy_array:[944,2,1,""],cross:[945,2,1,""],cumprod:[946,2,1,""],cumsum:[947,2,1,""],current_framework_str:[948,2,1,""],einops_rearrange:[950,2,1,""],einops_reduce:[951,2,1,""],einops_repeat:[952,2,1,""],equal:[953,2,1,""],exists:[954,2,1,""],expand_dims:[955,2,1,""],flip:[956,2,1,""],floor:[957,2,1,""],floormod:[958,2,1,""],fourier_encode:[959,2,1,""],full:[960,2,1,""],gather:[961,2,1,""],gather_nd:[962,2,1,""],get_all_arrays_in_memory:[963,2,1,""],get_min_base:[964,2,1,""],get_min_denominator:[965,2,1,""],get_num_dims:[966,2,1,""],get_referrers_recursive:[967,2,1,""],has_nans:[968,2,1,""],identity:[969,2,1,""],indices_where:[970,2,1,""],inplace_arrays_supported:[971,2,1,""],inplace_decrement:[972,2,1,""],inplace_increment:[973,2,1,""],inplace_update:[974,2,1,""],inplace_variables_supported:[975,2,1,""],is_array:[976,2,1,""],isinf:[977,2,1,""],isnan:[978,2,1,""],linear_resample:[979,2,1,""],linspace:[980,2,1,""],logspace:[981,2,1,""],match_kwargs:[982,2,1,""],matmul:[983,2,1,""],maximum:[984,2,1,""],meshgrid:[985,2,1,""],minimum:[986,2,1,""],multiprocessing:[987,2,1,""],num_arrays_in_memory:[988,2,1,""],one_hot:[989,2,1,""],ones:[990,2,1,""],ones_like:[991,2,1,""],print_all_arrays_in_memory:[992,2,1,""],queue_timeout:[993,2,1,""],repeat:[994,2,1,""],reshape:[995,2,1,""],round:[996,2,1,""],scatter_flat:[997,2,1,""],scatter_nd:[998,2,1,""],set_min_base:[999,2,1,""],set_min_denominator:[1000,2,1,""],set_queue_timeout:[1001,2,1,""],set_tmp_dir:[1002,2,1,""],shape:[1003,2,1,""],shape_to_tuple:[1004,2,1,""],split:[1005,2,1,""],squeeze:[1006,2,1,""],stable_divide:[1007,2,1,""],stable_pow:[1008,2,1,""],stack:[1009,2,1,""],supports_inplace:[1010,2,1,""],swapaxes:[1011,2,1,""],tile:[1012,2,1,""],tmp_dir:[1013,2,1,""],to_list:[1014,2,1,""],to_numpy:[1015,2,1,""],to_scalar:[1016,2,1,""],transpose:[1017,2,1,""],try_else_none:[1018,2,1,""],unstack:[1019,2,1,""],value_is_nan:[1020,2,1,""],where:[1021,2,1,""],zero_pad:[1022,2,1,""],zeros:[1023,2,1,""],zeros_like:[1024,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1025,1,1,""],adam_step:[1027,2,1,""],adam_update:[1028,2,1,""],execute_with_gradients:[1029,2,1,""],gradient_descent_update:[1030,2,1,""],is_variable:[1031,2,1,""],lamb_update:[1032,2,1,""],lars_update:[1033,2,1,""],optimizer_update:[1034,2,1,""],set_with_grads:[1035,2,1,""],stop_gradient:[1036,2,1,""],unset_with_grads:[1037,2,1,""],variable:[1038,2,1,""],variable_data:[1039,2,1,""],with_grads:[1040,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1025,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1042,2,1,""],float_img_to_uint8_img:[1043,2,1,""],gradient_image:[1044,2,1,""],random_crop:[1045,2,1,""],stack_images:[1046,2,1,""],uint8_img_to_float_img:[1047,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1049,2,1,""],inv:[1050,2,1,""],matrix_norm:[1051,2,1,""],pinv:[1052,2,1,""],svd:[1053,2,1,""],vector_norm:[1054,2,1,""],vector_to_skew_symmetric_matrix:[1055,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1057,2,1,""],logical_or:[1058,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1060,2,1,""],acosh:[1061,2,1,""],asin:[1062,2,1,""],asinh:[1063,2,1,""],atan2:[1065,2,1,""],atan:[1064,2,1,""],atanh:[1066,2,1,""],cosh:[1067,2,1,""],divide:[1068,2,1,""],erf:[1069,2,1,""],exp:[1070,2,1,""],log:[1071,2,1,""],sin:[1072,2,1,""],sinh:[1073,2,1,""],tan:[1074,2,1,""],tanh:[1075,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1077,2,1,""],maml_step:[1078,2,1,""],reptile_step:[1079,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1080,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1125,2,1,""],copy_nest:[1126,2,1,""],index_nest:[1127,2,1,""],map:[1128,2,1,""],map_nest_at_index:[1129,2,1,""],map_nest_at_indices:[1130,2,1,""],multi_index_nest:[1131,2,1,""],nested_indices_where:[1132,2,1,""],nested_map:[1133,2,1,""],set_nest_at_index:[1134,2,1,""],set_nest_at_indices:[1135,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1137,2,1,""],randint:[1138,2,1,""],random_normal:[1139,2,1,""],random_uniform:[1140,2,1,""],seed:[1141,2,1,""],shuffle:[1142,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1144,2,1,""],reduce_max:[1145,2,1,""],reduce_mean:[1146,2,1,""],reduce_min:[1147,2,1,""],reduce_prod:[1148,2,1,""],reduce_std:[1149,2,1,""],reduce_sum:[1150,2,1,""],reduce_var:[1151,2,1,""]},"ivy.functional.ivy.nn":{activations:[1153,0,0,"-"],layers:[1161,0,0,"-"],losses:[1174,0,0,"-"],norms:[1178,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1154,2,1,""],leaky_relu:[1155,2,1,""],relu:[1156,2,1,""],sigmoid:[1157,2,1,""],softmax:[1158,2,1,""],softplus:[1159,2,1,""],tanh:[1160,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1162,2,1,""],conv1d_transpose:[1163,2,1,""],conv2d:[1164,2,1,""],conv2d_transpose:[1165,2,1,""],conv3d:[1166,2,1,""],conv3d_transpose:[1167,2,1,""],depthwise_conv2d:[1168,2,1,""],dropout:[1169,2,1,""],linear:[1170,2,1,""],lstm_update:[1171,2,1,""],multi_head_attention:[1172,2,1,""],scaled_dot_product_attention:[1173,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1175,2,1,""],cross_entropy:[1176,2,1,""],sparse_cross_entropy:[1177,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1179,2,1,""]},"ivy.graph_compiler":{compiler:[1180,0,0,"-"],globals:[1183,0,0,"-"],graph:[1186,0,0,"-"],helpers:[1188,0,0,"-"],op_logging:[1189,0,0,"-"],param:[1190,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1181,2,1,""],show_graph:[1182,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1184,2,1,""],log_global_inference_rel_times:[1185,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1186,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1186,3,1,""],add_fn_to_dict:[1186,3,1,""],add_param:[1186,3,1,""],compiled:[1186,3,1,""],connect:[1186,3,1,""],debug_info:[1186,3,1,""],get_param:[1186,3,1,""],get_param_recursive:[1186,3,1,""],include_generators:[1186,3,1,""],increment_param_count:[1186,3,1,""],log_all_ops:[1186,3,1,""],params_all_empty:[1186,3,1,""],save_debug_info:[1186,3,1,""],set_param:[1186,3,1,""],show:[1186,3,1,""],show_debug_info:[1186,3,1,""],update_inference_times:[1186,3,1,""],with_array_caching:[1186,3,1,""]},"ivy.graph_compiler.param":{Param:[1190,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1190,3,1,""],count:[1190,3,1,""],depth:[1190,3,1,""],get:[1190,3,1,""],is_var:[1190,3,1,""],ptype:[1190,3,1,""],set:[1190,3,1,""],set_count:[1190,3,1,""],shape:[1190,3,1,""]},"ivy.stateful":{activations:[1195,0,0,"-"],converters:[1198,0,0,"-"],initializers:[1200,0,0,"-"],layers:[1209,0,0,"-"],module:[1221,0,0,"-"],norms:[1223,0,0,"-"],optimizers:[1225,0,0,"-"],sequential:[1231,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1196,1,1,""],GELU:[1197,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1196,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1197,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1199,2,1,""]},"ivy.stateful.initializers":{Constant:[1200,1,1,""],FirstLayerSiren:[1202,1,1,""],GlorotUniform:[1203,1,1,""],KaimingNormal:[1200,1,1,""],Ones:[1205,1,1,""],Siren:[1206,1,1,""],Uniform:[1200,1,1,""],Zeros:[1208,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1200,3,1,""],create_variables:[1200,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1202,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1203,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1200,3,1,""],create_variables:[1200,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1205,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1206,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1200,3,1,""],create_variables:[1200,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1208,3,1,""]},"ivy.stateful.layers":{Conv1D:[1210,1,1,""],Conv1DTranspose:[1211,1,1,""],Conv2D:[1212,1,1,""],Conv2DTranspose:[1213,1,1,""],Conv3D:[1214,1,1,""],Conv3DTranspose:[1215,1,1,""],DepthwiseConv2D:[1216,1,1,""],Dropout:[1217,1,1,""],LSTM:[1218,1,1,""],Linear:[1219,1,1,""],MultiHeadAttention:[1220,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1211,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1212,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1213,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1214,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1215,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1216,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1217,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1218,3,1,""],get_initial_state:[1218,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1219,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1220,3,1,""]},"ivy.stateful.module":{Module:[1222,1,1,""]},"ivy.stateful.module.Module":{__init__:[1222,3,1,""],build:[1222,3,1,""],build_mode:[1222,3,1,""],built:[1222,3,1,""],check_submod_rets:[1222,3,1,""],compile_graph:[1222,3,1,""],compile_on_next_step:[1222,3,1,""],get_mod_key:[1222,3,1,""],mod_depth:[1222,3,1,""],mod_height:[1222,3,1,""],mod_with_top_mod_key_chain:[1222,3,1,""],save_weights:[1222,3,1,""],show_graph:[1222,3,1,""],show_mod_in_top_mod:[1222,3,1,""],show_structure:[1222,3,1,""],show_v_in_top_v:[1222,3,1,""],sub_mods:[1222,3,1,""],track_submod_call_order:[1222,3,1,""],track_submod_rets:[1222,3,1,""],v_with_top_v_key_chains:[1222,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1224,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1224,3,1,""]},"ivy.stateful.optimizers":{Adam:[1226,1,1,""],LAMB:[1227,1,1,""],LARS:[1228,1,1,""],Optimizer:[1229,1,1,""],SGD:[1230,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1226,3,1,""],set_state:[1226,3,1,""],state:[1226,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1227,3,1,""],set_state:[1227,3,1,""],state:[1227,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1228,3,1,""],set_state:[1228,3,1,""],state:[1228,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1229,3,1,""],compile_graph:[1229,3,1,""],compile_on_next_step:[1229,3,1,""],set_state:[1229,3,1,""],show_graph:[1229,3,1,""],step:[1229,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1230,3,1,""],set_state:[1230,3,1,""],state:[1230,3,1,""]},"ivy.stateful.sequential":{Sequential:[1232,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1232,3,1,""]},"ivy.verbosity":{cprint:[1237,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1236,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1225,1226,1227],"02886":1192,"100":[1080,1192,1234],"2021":1192,"2102":1192,"360":[792,793,1059,1072,1074],"754":[788,789],"999":[1025,1027,1028,1032,1225,1226,1227],"abstract":[850,865,1192,1225,1229],"boolean":[40,41,792,795,850,885,897,900,914,923,924,926,932,933,968,970,971,975,976,977,978,1010,1020,1025,1031,1056,1057,1058,1076,1077,1078,1080],"break":43,"case":[15,18,19,40,41,42,43,850,889,896,899,924,927,995,997,998,1048,1051,1054,1080,1124,1127,1131,1192,1209,1220,1221,1222,1225,1229,1238],"catch":[924,949],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,373,788,790,850,852,853,854,855,856,857,859,860,862,863,864,865,877,878,900,924,928,982,990,1025,1039,1080,1124,1126,1133,1174,1176,1177,1186,1190,1192,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1238],"default":[15,18,19,40,41,42,43,802,803,805,806,807,848,849,850,859,860,867,868,872,873,874,875,876,879,880,881,882,889,892,893,894,899,900,907,908,909,910,924,926,927,929,930,939,940,941,942,945,946,947,956,959,960,961,966,968,969,979,981,982,985,987,990,993,994,997,998,1001,1003,1005,1007,1008,1017,1019,1020,1023,1025,1028,1030,1031,1032,1033,1034,1036,1040,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1136,1137,1139,1140,1143,1145,1146,1147,1148,1149,1150,1151,1153,1154,1158,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232],"final":[40,41,924,959,980,981,1080,1209,1220,1235],"float":[40,41,42,43,788,789,809,834,850,859,860,883,889,892,896,899,900,908,915,924,927,939,940,942,959,960,964,965,981,999,1000,1001,1007,1008,1025,1027,1028,1030,1032,1033,1034,1041,1043,1047,1059,1068,1076,1077,1078,1079,1080,1136,1139,1140,1153,1155,1161,1169,1172,1173,1174,1175,1176,1177,1178,1179,1209,1217,1220,1223,1224,1225,1226,1227,1228,1229,1230],"function":[15,40,41,43,375,376,789,790,793,794,795,803,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1192,1195,1196,1197,1225,1228,1229,1230,1234,1235,1238],"import":[43,1192,1235,1238],"int":[40,41,42,43,788,789,790,802,803,805,806,807,809,834,848,849,850,872,873,874,875,876,879,880,881,882,887,888,894,900,909,911,916,924,929,930,935,941,942,946,947,950,951,952,955,956,959,960,961,966,969,979,980,981,989,990,994,995,997,998,1003,1004,1005,1006,1009,1011,1012,1017,1019,1022,1023,1025,1027,1028,1032,1041,1045,1046,1048,1051,1054,1076,1077,1078,1079,1080,1124,1133,1136,1137,1138,1140,1141,1143,1145,1146,1147,1148,1149,1150,1151,1153,1158,1161,1162,1163,1164,1165,1166,1167,1168,1172,1174,1176,1177,1178,1179,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1223,1224],"long":[1161,1171],"new":[40,41,43,900,904,924,925,935,950,951,952,955,959,960,961,962,990,995,997,998,999,1000,1007,1008,1009,1023,1025,1028,1030,1032,1033,1034,1041,1043,1045,1047,1059,1061,1063,1066,1067,1073,1075,1080,1124,1134,1135,1136,1137,1178,1179,1192,1198,1199,1209,1219,1223,1224,1225,1226,1227,1228,1229,1230,1235,1238],"public":[924,943],"return":[15,16,17,18,19,40,41,42,43,788,789,790,792,793,794,795,802,803,805,806,807,809,834,848,849,850,859,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,885,886,888,889,893,894,895,896,897,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,994,995,996,997,998,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1192,1198,1199,1209,1218,1219,1225,1229,1234,1235,1238],"short":[1161,1171,1192,1238],"static":[40,41,848,849],"super":1080,"true":[40,41,42,792,794,802,803,805,806,807,848,849,850,924,926,934,936,954,959,968,970,1020,1021,1025,1028,1030,1031,1032,1033,1034,1036,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1132,1136,1137,1143,1145,1146,1147,1148,1149,1150,1151,1153,1154,1161,1169,1174,1175,1176,1177,1180,1181,1182,1186,1209,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230],"try":[40,41,924,1018,1080],"var":[40,41,1076,1077,1078,1238],"while":[40,41,42,1080],AND:[805,806,1056,1057],But:1238,For:[43,924,927,938,1009,1025,1031,1039,1059,1060,1192,1198,1199,1235,1238],Its:[1059,1064],NOT:[792,795],One:[40,41,924,951,995,1136,1138,1238],Ones:[1192,1200],Such:[924,943],That:1235,The:[15,16,17,18,19,40,41,42,43,792,793,794,802,803,805,806,807,809,834,848,849,850,859,860,866,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,911,912,913,914,923,924,927,931,932,935,936,939,940,941,942,944,945,948,949,953,956,959,961,962,969,972,973,974,976,979,981,983,985,987,990,991,994,995,997,998,999,1000,1001,1004,1005,1006,1007,1008,1009,1012,1020,1023,1024,1025,1027,1028,1030,1032,1033,1034,1036,1039,1041,1043,1045,1047,1048,1051,1053,1059,1060,1062,1064,1068,1069,1070,1071,1072,1074,1076,1077,1078,1079,1080,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1192,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1235,1238],There:[43,1192,1235],These:[43,1192],Used:[1124,1125,1132,1221,1222],Using:[1192,1193,1238],With:[40,41,1048,1051,1054,1143,1145,1146,1147,1148,1149,1150,1151,1192,1234,1238],__array__:[924,931],__call__:[1209,1220,1221,1222],__del__:1080,__dict__:[1080,1235],__enter__:1080,__exit__:1080,__getitem__:1080,__getstate__:1080,__init__:[40,41,42,43,59,60,79,198,373,374,485,603,850,851,858,859,860,861,862,863,864,865,900,901,902,903,1025,1026,1080,1084,1091,1186,1187,1190,1191,1192,1195,1196,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1238],__iter__:1080,__len__:1080,__next__:1080,__pow__:43,__repr__:1080,_assign_vari:1234,_axi:1080,_base:[1124,1125,1132],_compute_node_da_ratio:1080,_compute_node_strs_da:1080,_concat_unify_arrai:1080,_counter:1080,_cur_framework:[43,1080],_da_direct:1080,_da_directions_flip:1080,_da_step_tim:1080,_da_tim:1080,_da_tune_count:1080,_data:1080,_delta_da_dim_s:1080,_delta_sf:1080,_dict:1080,_dim_siz:1080,_first_da_tune_step:1080,_first_ns_tune_step:1080,_fn:1080,_forward:[1192,1234],_get_kalman_param:1238,_get_prior:1238,_get_some_model:1238,_handle_flat_arrays_in_out:43,_index:[1124,1125,1132],_input_queu:1080,_length:1080,_max_depth:1080,_max_node_dim_step_ratio:1080,_max_node_dim_step_s:1080,_max_split_factor_step_s:1080,_mean_unify_arrai:1080,_min_bas:[924,1008,1178,1179,1223,1224],_min_denomin:[924,1007],_min_node_dim_s:1080,_min_sf_tune_step:1080,_min_unit_node_tune_step:1080,_model:1238,_native_wrapp:43,_node_mapp:1080,_node_percent_mem:1080,_node_str:1080,_node_str_da_ratio:1080,_node_strs_da:1080,_node_strs_kei:1080,_node_strs_n:1080,_node_util:1080,_ns_step_tim:1080,_ns_time:1080,_ns_tune_count:1080,_num_nod:1080,_num_work:1080,_observed_config:1080,_output_queu:1080,_paramet:1234,_percent_mem_inc_per_sf:1080,_percent_mem_inc_per_unit_da_dim:1080,_percent_util_inc_per_unit_da_dim:1080,_ret_fn:1080,_safety_factor:1080,_save_dir:1080,_shift_da_split:1080,_shift_n:1080,_slice:1080,_step:[1225,1229],_sum_unify_arrai:1080,_timeout:1080,_tune:1080,_tune_da:1080,_tune_n:1080,_tune_step:1080,_unit_da_tune_count:1080,_unroll_step:1238,_with_node_mappig:1080,_worker:1080,_worker_class:1080,_worker_fn:1080,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,850,859,865,1080,1221,1222,1225,1229],abil:1192,abl:[40,41],about:[788,789,790],abov:[43,1136,1138],above_height:[40,41],abs:[272,522,641,924,1080],absolut:[40,41,924,925],abstractmethod:1080,accept:[15,43,1192],access:[40,41,1235],accord:[40,41,788,789,924,942,961,997,998,1017,1022],accordingli:[805,806,807],accur:[59,373,850,862,863,864,865,900,1025,1186,1190,1200,1202,1203,1205,1206,1208],aco:[733,1059],acosh:[733,1059],across:[40,41,850,859,860,869,870,872,873,874,875,876,882,892,893,924,929,930,932,933,1080,1124,1128],activ:[1154,1155,1156,1157,1158,1159,1160,1192,1196,1197],actual:1235,adam:[1025,1027,1028,1032,1192,1225,1227,1234],adam_step:1025,adam_upd:1025,adapt:[1025,1033,1225,1228],add:[40,41,43,1080,1174,1175,1176,1177,1178,1179,1192,1223,1224,1235],add_fn_to_dict:1186,add_param:1186,added:[43,924,1007,1008,1231,1232],adding:[924,935],addit:[40,41,43,924,950,951,952,1178,1179,1209,1219],adher:43,adjac:[924,927],adopt:[924,943],affect:[924,927],affin:[1223,1224],after:[924,979,1025,1028,1029,1030,1032,1033,1034,1041,1042,1178,1179,1225,1226,1227,1228,1229,1230,1238],after_1:[924,942,1022],after_n:[924,942,1022],again:43,against:[40,41,1048,1051,1054,1143,1145,1146,1147,1148,1149,1150,1151],agnost:[43,1192,1234,1235],aim:1238,algebra:1048,algorithm:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216,1238],align:[40,41,43,924,935],aliv:[850,884,886,890,924,963,988,992],all:[15,16,17,18,19,40,41,43,96,214,391,502,620,805,848,849,850,859,884,890,924,925,926,932,933,943,956,963,969,992,1006,1076,1077,1078,1079,1080,1124,1125,1126,1132,1133,1136,1137,1140,1143,1145,1146,1147,1148,1149,1150,1151,1161,1171,1192,1235,1238],all_depth:[40,41],all_equ:924,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1124,all_tru:[40,41],alloc:[850,1080],allow:[924,980,981,982,1221,1222],allow_dupl:[924,982],alon:[850,889,899,1080,1192],along:[40,41,43,802,803,805,806,807,850,873,874,875,876,879,880,881,882,894,924,941,946,947,956,961,979,980,981,994,1005,1009,1012,1019,1048,1051,1054,1076,1077,1078,1079,1080,1136,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151],alongsid:[1234,1235],alpha:[1153,1155],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,850,1080],also:[40,41,43,924,927,1025,1028,1076,1077,1078,1079,1124,1125,1126,1132,1133,1161,1170,1209,1219,1234],altern:1234,alwai:[40,41,43,1025,1031,1036],among:[40,41],amount:[850,896,1080,1192],angl:[1059,1060,1065],ani:[15,16,17,18,19,40,41,43,96,214,391,502,620,805,848,849,850,852,855,859,860,862,871,872,875,876,881,924,926,927,931,949,950,951,952,953,954,968,976,982,1007,1008,1025,1029,1080,1124,1125,1128,1132,1133,1134,1135,1136,1140,1192,1198,1199,1221,1222,1234,1235,1238],anoth:[40,41,900,906,1192],another_backend:43,anyth:[43,1238],anywai:43,apart:43,api:[1192,1193],appear:[924,955],append:[40,41,1080],appli:[15,18,19,40,41,792,795,924,950,951,952,1025,1032,1033,1048,1053,1056,1057,1058,1076,1077,1078,1124,1128,1131,1133,1153,1154,1155,1156,1157,1158,1159,1160,1161,1170,1172,1173,1178,1179,1192,1195,1196,1197,1223,1224],applic:[1124,1128,1133,1161,1172,1173,1192,1238],approxim:[43,809,834,1153,1154],arang:[116,272,406,522,641,924,980,981],arbitrari:[40,41,850,879,880,882,1080],arc:[1059,1065],arcco:[1059,1060],arctan:[1059,1064],area:1192,arg:[15,16,17,40,41,43,59,63,850,859,872,876,882,894,924,950,951,952,998,1080,1180,1181,1182,1186,1198,1199,1221,1222],arg_nam:924,arg_stateful_idx:[1180,1181,1182,1186,1221,1222],argmax:[116,406,522,641,924],argmin:[116,406,522,641,924],args_clon:1080,args_dist:1080,args_to_ivi:[15,1192],args_to_n:[15,1192],args_uni:1080,argsort:[93,211,388,499,617,802],argument:[15,16,17,18,19,40,41,42,43,59,63,848,849,850,859,860,872,876,882,924,927,928,936,949,982,998,1059,1060,1080,1124,1128,1198,1199,1221,1222],aris:[1192,1238],arithmet:[43,1143,1146,1149,1151],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,116,272,406,522,641,788,789,790,792,793,794,795,802,803,805,806,807,834,850,868,869,870,873,874,875,876,879,880,881,882,884,886,890,894,895,900,904,910,915,916,924,925,926,927,929,930,932,933,934,935,937,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,959,960,961,962,963,966,968,969,970,971,972,973,974,976,977,978,979,980,981,983,984,985,986,988,989,990,991,992,994,995,996,997,998,1003,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1027,1028,1031,1032,1036,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1080,1124,1126,1133,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1192,1193,1209,1217,1218,1220,1225,1229,1234,1235],arrang:[924,950],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,373,375,376,788,789,790,792,793,794,795,802,803,805,806,807],array_builtin:[43,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847],array_equ:[272,641,924],array_lik:[924,931],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,924],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1192],arraywithgener:[22,1192],arraywithgradi:[24,1192],arraywithimag:[26,1192],arraywithlinalg:[28,1192],arraywithlog:[30,1192],arraywithmath:[32,1192],arraywithmeta:[34,1192],arraywithrandom:[36,1192],arraywithreduct:[38,1192],arriv:[40,41,42],articl:1192,arxiv:1192,as_arrai:[40,41,924,966,1003],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[850,868,900,907,908,909,910],as_vari:[40,41],as_zero:[40,41],asarrai:924,asin:[733,1059],asinh:[733,1059],aspect:[1041,1046],assert:[40,41,924,934,1080],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:924,associ:[43,1048,1055],assum:[1235,1238],astyp:900,asynchron:[40,41,42],at_dev:[40,42,850,863,864],at_kei:[40,41],at_key_chain:[40,41],at_nod:1080,atan2:[733,1059],atan:[733,1059],atanh:[733,1059],attent:[1161,1172,1173,1209,1220],attribut:[0,6,40,41,788,789,790,924,991,1024],audienc:[1192,1235],author:1192,avail:[40,41,850,885,887,888,897,924,951,1080],averag:[1025,1027,1028,1032,1076,1077,1078,1143,1146],average_across_step:[1076,1077,1078],avoid:[850,1080,1235],axes:[40,41,43,805,806,807,850,894,924,929,930,942,955,956,1011,1017,1022,1048,1051,1054,1080,1143,1145,1146,1147,1148,1149,1150,1151],axes_length:[40,41,924,950,951,952],axi:[40,41,802,803,805,806,807,850,852,855,862,873,874,875,876,879,880,881,882,894,924,929,930,941,942,945,946,947,955,956,961,979,980,981,994,1005,1006,1009,1011,1012,1019,1022,1048,1054,1080,1136,1142,1143,1145,1146,1147,1148,1149,1150,1151,1153,1158,1174,1176,1177],axis0:[40,41,924,1011],axis1:[40,41,924,1011],back:[1221,1222,1225,1229],backend:[15,17,19,40,41,373,375,376,850,885,888,897,900,906,914,923,924,971,975,1025,1028,1030,1032,1033,1034,1039,1080,1192,1193,1198,1199,1225,1226,1227,1228,1229,1230,1234,1235,1238],background:[1192,1235],backprop:1238,backward:[805,806,807,1234],band:[924,959],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,373,809,834,850,852,853,854,855,856,857,859,860,862,863,864,865,900,924,964,981,999,1008,1025,1080,1143,1144,1186,1190,1192,1195,1196,1197,1200,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1238],batch:[40,41,850,892,893,924,956,959,969,1041,1045,1048,1053,1076,1077,1078,1079,1080,1161,1170,1178,1179,1223,1224],batch_shap:[924,956,969,989,1041,1042,1043,1044,1045,1046,1047,1048,1055,1136,1137,1161,1171,1172,1173,1209,1218],batch_siz:[1080,1136,1137,1161,1162,1163,1164,1165,1166,1167,1168],bayesian:1238,becaus:[43,924,927],becom:[924,938,1059,1065,1238],been:[924,950,951,952,1136,1137],befor:[40,41,43,850,894,1076,1077,1078,1080,1124,1133,1143,1145,1146,1147,1148,1149,1150,1151,1161,1172,1173,1238],before_1:[924,942,1022],before_n:[924,942,1022],begin:[1124,1125,1132,1235],behaviour:[43,1238],behind:[1025,1028,1030,1032,1033,1034,1192],being:[40,41,43,924,927,993,1001,1080],belong:[40,41],below:[43,1192,1235,1238],below_depth:[40,41],benefit:1192,bernoul:[1161,1169,1209,1217],best:[924,982,1192],beta1:[1025,1027,1028,1032,1225,1226,1227],beta2:[1025,1027,1028,1032,1225,1226,1227],beta:[1178,1179],between:[40,41,42,788,789,924,927,1124,1128,1136,1138,1174,1176,1177,1225,1227],bia:[1161,1170,1171,1209,1210,1211,1212,1213,1214,1215,1216,1219],bias_initi:[1209,1210,1211,1212,1213,1214,1215,1216,1219],bilinear:[1041,1042],bilinear_resampl:[155,331,448,569,719,1041],bilinearli:[1041,1042],binari:[1174,1175],binary_cross_entropi:1174,bit:[373,788,789,790,900,911,1041,1043,1047,1192],bitwise_oper:[0,7,8],block:[1192,1235],bool:[15,18,19,40,41,42,43,792,794,802,803,805,806,807,848,849,850,868,881,885,889,894,897,899,900,910,924,926,932,933,946,949,953,954,959,966,968,976,982,1003,1005,1019,1020,1021,1025,1028,1029,1030,1031,1032,1033,1034,1036,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1136,1137,1143,1145,1146,1147,1148,1149,1150,1151,1153,1154,1161,1169,1198,1199,1209,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230],both:[43,924,945],bottom:1192,boundari:[40,41,1136,1140],branch:[848,849],brittl:43,broadcast:[40,41,43,805,806,807,809,834,924,935,953,984,985,986,994,1048,1051,1054,1059,1065,1068,1143,1145,1146,1147,1148,1149,1150,1151],broadcast_to:[272,641,924],build:[1080,1192,1209,1220,1221,1222],build_mod:[1209,1220,1221,1222],builder:1192,built:[850,924,927,1080,1209,1220,1221,1222],builtin:43,builtin_ab:[227,809],builtin_add:[227,809],builtin_and:[227,809],builtin_bool:[227,809],builtin_contain:[227,809],builtin_deepcopi:[227,809],builtin_dir:[227,809],builtin_eq:[227,809],builtin_float:[227,809],builtin_floordiv:[227,809],builtin_g:[227,809],builtin_getattr:[227,809],builtin_getattribut:[227,809],builtin_getitem:[227,809],builtin_gt:[227,809],builtin_int:[227,809],builtin_invert:[227,809],builtin_l:[227,809],builtin_lt:[227,809],builtin_mul:[227,809],builtin_n:[227,809],builtin_neg:[227,809],builtin_or:[227,809],builtin_po:[227,809],builtin_pow:[43,227,809],builtin_radd:[227,809],builtin_rand:[227,809],builtin_rfloordiv:[227,809],builtin_rmul:[227,809],builtin_ror:[227,809],builtin_rpow:[227,809],builtin_rsub:[227,809],builtin_rtruediv:[227,809],builtin_rxor:[227,809],builtin_setitem:[227,809],builtin_some_op:43,builtin_sub:[227,809],builtin_truediv:[227,809],builtin_xor:[227,809],bypass:1235,cach:[850,866,924,936],cache_fn:924,calcul:[40,41,42,43,809,834,1059,1068],call:[43,850,894,924,993,1001,1018,1025,1029,1080,1124,1125,1128,1132,1209,1220,1221,1222,1225,1229,1235,1238],callabl:[40,41,848,849,850,859,860,894,924,936,949,951,982,1018,1076,1077,1078,1079,1080,1124,1128,1129,1130,1132,1133,1161,1172],can:[43,850,892,893,894,924,995,1041,1043,1080,1192,1234,1235,1238],cancel_join_thread:1080,captur:1192,cast:[40,41,116,272,406,522,641,900,924,941,1041,1043,1047],catch_except:[924,949],categori:43,ceil:[272,641,924,927],cell:[1161,1171,1209,1218],certain:[40,41,924,927,980,981],chain:[40,41,1076,1077,1078,1231,1232],chang:[850,924,995,1080,1124,1126,1133,1192,1234],channel:[924,959,1041,1043,1044,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219],check:[15,16,17,18,19,40,41,850,889,899,900,905,914,923,924,934,954,968,976,1010,1020,1025,1031,1080,1124,1125,1132,1192,1235],check_nest:[1124,1132],check_shap:[40,41],check_submod_ret:[1221,1222],check_typ:[40,41],choic:[1192,1235],choleski:[723,1048],choos:[924,1021,1059,1065,1192],choose_random_framework:59,chosen:[40,41,924,927,1021],chunk:[850,892,893,894,1080],chunk_siz:[850,894,1080],circl:[1059,1060,1062],clark:1192,clear:[850,866,1080],clear_framework_stack:59,clear_mem_on_dev:[633,850],click:1192,clip:[40,41,272,641,924,939,940,984,986,1192],clip_matrix_norm:924,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,924],clipped_delta:1080,clone:[40,41,850,869,870,871,872,1080],clone_arrai:1080,clone_it:1080,clone_nest:1080,clonedit:1080,cloneditem:1080,clonednest:1080,close:[43,1041,1046,1059,1062,1080,1238],closest:[900,905],closest_valid_dtyp:900,code:[40,41,42,43,1192,1193,1234,1235],codebas:[850,892,893,1080,1192,1235,1238],collect:[15,40,41,809,848,850,900,924,1025,1041,1048,1056,1059,1080,1124,1136,1143,1153,1161,1174,1178,1195,1209,1223,1225],color:[40,41,42,1236,1237],column:[924,969],combin:[40,41,42,1041,1046,1192,1238],combined_batch_s:1080,come:1235,command:1192,commit:1238,common:[40,41,1059,1065],common_key_chain:[40,41],commun:[1192,1235],compar:[40,41,924,926,932,933],comparison_oper:[0,9,10],compat:[43,805,806,807,809,834,924,953,995,1059,1068,1192,1238],compil:[272,406,641,1181,1182,1186,1192,1221,1222,1225,1226,1227,1228,1229,1230],compile_graph:[1180,1192,1221,1222,1225,1229],compile_on_next_step:[1221,1222,1225,1226,1227,1228,1229,1230],complet:[40,41,1080],complex:[1235,1238],compon:[924,945],composit:43,comput:[40,41,792,793,795,850,894,924,939,940,946,947,953,983,1025,1027,1028,1029,1030,1032,1033,1034,1036,1038,1041,1044,1048,1049,1050,1051,1052,1054,1056,1057,1058,1059,1060,1062,1064,1065,1069,1070,1071,1072,1074,1124,1128,1143,1144,1145,1146,1147,1148,1149,1150,1151,1161,1162,1163,1164,1165,1166,1167,1168,1170,1172,1174,1175,1176,1177],concat:[40,41,850,879,880,881,882,894,924,959,1080],concaten:[40,41,116,272,406,522,641,924,959,1080,1192],concatten:[40,41,850,879,880,881,882,894,1080],condit:[848,849,924,1021,1124,1132],conditon:[1124,1132],config:[40,41,1080],config_list:1080,configur:[40,41],conjunct:1235,connect:[1186,1209,1219,1220],consid:[40,41,1048,1054,1234,1238],consist:[40,41,850,882,1080,1143,1144,1221,1222,1235],constant:[850,859,860,924,942,1080,1124,1128,1174,1175,1176,1177,1178,1179,1200,1201,1205,1208,1221,1222,1223,1224,1235],constant_kwarg:1080,constant_pad:[272,522,641,924],constitu:[40,41],construct:[924,1012,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234],constructor:[40,41,42,924,928,1231,1232],consum:[850,1080],cont_feat_dim:[1161,1172],contaienr:[40,41],contain:[15,18,19,42,43,792,794,802,803,805,806,807,809,834,850,869,873,894,900,904,924,925,929,930,938,939,940,943,953,968,984,986,996,1007,1008,1025,1027,1028,1030,1032,1033,1034,1059,1068,1076,1077,1078,1079,1080,1136,1137,1143,1145,1146,1147,1149,1151,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[641,924],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[924,987,1161,1172,1209,1220],context_dim:[1209,1220],contextmanag:[59,60],continu:[43,1080,1235],contract:[40,41,1143,1144],contribut:[1192,1193],contributor:1192,control:1192,conv1d:[185,361,472,776,1161,1192,1209],conv1d_transpos:[185,361,472,776,1161],conv1dtranspos:[1192,1209],conv2d:[185,361,472,594,776,1161,1192,1209],conv2d_transpos:[185,361,472,776,1161],conv2dtranspos:[1192,1209],conv3d:[185,361,472,594,776,1161,1192,1209],conv3d_transpos:[185,361,472,776,1161],conv3dtranspos:[1192,1209],convent:[40,41,1143,1144],conver:[850,866,877,889,896,899,1080],convers:[16,17,18,19,40,41,1080,1192],convert:[15,16,17,18,19,40,41,43,850,877,878,900,906,912,913,924,1004,1015,1016,1041,1043,1047,1048,1055,1080,1124,1126,1133,1192,1199],convert_dtyp:900,convolut:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],cool:43,cooler:43,coordin:[924,985,1059,1060,1062,1065],copi:[40,41,924,944,1080,1124,1126],copy_arrai:[641,924],copy_nest:1124,core:[809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1192],correct:[43,1192,1235],correctli:[40,41,1048,1051,1054,1059,1065,1143,1145,1146,1147,1148,1149,1150,1151],correspond:[40,41,43,809,834,924,941,1136,1137],cos:[83,378,489,607,792,924,959,1059,1060,1074,1235],cosh:[733,1059],cosin:[792,793,1059,1060,1061,1067],cost:[1025,1027,1028,1030,1032,1033,1034,1076,1077,1078,1079],cost_fn:[1076,1079],could:1238,count:[40,41,805,806,807,1080,1143,1148,1150,1190],cprint:1236,cpu:[40,41,43,850,887,889,895,896,899,924,927,931,961,962,969,980,981,989,990,991,997,998,1023,1024,1080,1136,1137,1138,1139,1140,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232,1234,1235],creat:[40,41,850,859,860,924,927,931,960,961,962,969,980,981,989,990,991,997,998,1014,1023,1024,1025,1038,1080,1136,1137,1138,1139,1140,1192,1198,1199,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1238],create_if_abs:[40,41],create_vari:1200,creation:[40,41,42,43],crop:[1041,1045],crop_siz:[1041,1045],cross:[272,641,924,1174,1175,1176,1177],cross_entropi:1174,cuda:[40,41,850,859,878,895,924,927,931,961,962,969,980,981,989,990,991,997,998,1023,1024,1080,1136,1137,1138,1139,1140,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232],cumprod:[116,272,406,641,924],cumsum:[641,924],cumul:[924,946,947],current:[40,41,42,43,850,859,883,884,886,890,900,906,914,923,924,948,963,971,975,988,992,1080,1124,1125,1132,1192,1238],current_framework:59,current_framework_str:[641,924,1080],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1186,d_in:[1161,1162,1163,1164,1165,1166,1167],d_out:[1161,1162,1163,1164,1165,1166,1167],da_can_termin:1080,da_dim_s:[850,1080],da_direct:1080,da_tune_step:[850,1080],dai:1238,daniel:1192,data:[40,41,42,43,789,790,792,794,805,806,807,809,834,850,852,853,854,855,856,857,862,863,864,878,900,904,905,906,910,911,912,913,914,915,916,923,924,927,931,953,960,969,976,990,991,995,1006,1010,1023,1024,1025,1031,1039,1059,1068,1080,1161,1170,1192],data_format:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],data_type_funct:[373,375,376,788,789,790],dataset:[40,41],datatyp:[40,41,900,905,915,916],dcdw:[1025,1027,1028,1030,1032,1033],debug_info:1186,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1025,1032,1033,1225,1227,1228],decay_lambda:[1025,1032,1033,1225,1227,1228],decid:[40,41,1238],decompos:[1048,1049],decomposit:[1048,1049,1053],decor:43,decrement:[924,972],dedic:[1025,1039,1198,1199],deep:[40,41,1192],deep_copi:[40,41],deeper:[850,872,876,882,1080,1124,1133,1192],deepli:[1124,1126],def:[43,60,79,198,374,485,603,851,858,861,901,902,903,1026,1080,1084,1091,1187,1191,1192,1201,1204,1207,1234,1235,1238],default_dev:43,default_devic:850,default_dtyp:[43,900],default_float_dtyp:900,default_int_dtyp:900,default_key_color:[40,41,42],default_nod:1080,default_v:[924,949],defaultdevic:[850,851],defaultdtyp:[900,901],defaultfloatdtyp:[900,902],defaultintdtyp:[900,903],defer:43,defin:[43,924,945,989,991,1024,1136,1138],degre:[792,793,1059,1072,1074],del:1080,delta:[1025,1027,1080,1186],delta_dim_s:1080,delta_percent_mem:1080,delta_sf:1080,delta_util:1080,demo:1192,denomin:[924,958,965,1000,1007,1008,1178,1179,1223,1224],dens:[1209,1219],depend:[43,809,834,924,1021,1048,1053,1192],depth:[40,41,850,872,876,882,924,967,989,1080,1124,1133,1186,1190,1221,1222],depth_cutoff:[40,41],depthwis:[1161,1168,1209,1216],depthwise_conv2d:[185,361,472,594,776,1161],depthwiseconv2d:[1192,1209],deriv:[1025,1027,1028,1030,1032,1033,1034,1124,1126,1133,1192,1221,1225,1229,1231],descend:[802,803,1048,1053],descent:[1025,1030,1225,1230],describ:[40,41,1143,1144],design:[1192,1193],desir:[40,41,850,895,900,904,924,927,931,969,970,990,991,1023,1024,1041,1046,1080,1143,1145,1146,1147,1149,1151],desired_aspect_ratio:[1041,1046],desired_percent_increas:1080,detail:1238,detect:[40,41,1124,1125,1132],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,792,794,805,806,807,809,834,850,885,887,888,897,900,904,905,911,914,915,916,923,924,926,927,931,932,933,968,971,975,976,1010,1020,1025,1031,1059,1068,1076,1077,1078,1079,1080,1161,1172],dev:[40,41,42,43,109,266,515,633,850,853,854,856,857,859,860,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,886,889,890,891,892,893,894,895,896,899,924,927,931,961,962,969,980,981,989,990,991,997,998,1023,1024,1025,1040,1136,1137,1138,1139,1140,1198,1199,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232],dev_clon:[40,41,850],dev_clone_arrai:850,dev_clone_it:850,dev_clone_nest:850,dev_dist:[40,41,850],dev_dist_arrai:850,dev_dist_it:850,dev_dist_nest:850,dev_from_str:[43,109,266,515,633,850],dev_mapp:850,dev_str:[40,41],dev_to_str:[109,266,515,633,850],dev_unifi:850,dev_unify_arrai:850,dev_unify_it:850,dev_unify_nest:850,dev_util:850,devclonedit:850,devcloneditem:850,devclonednest:850,devdistit:850,devdistitem:850,devdistnest:850,develop:[1192,1235,1238],deviat:[40,41,1136,1139,1143,1149,1178,1179,1223,1224],devic:[21,40,41,43,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,924,927,931,960,961,962,969,980,981,989,990,991,997,998,1023,1024,1025,1040,1136,1137,1138,1139,1140,1192,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232],devmanag:[850,858],devmapp:[850,860],devmappermultiproc:850,diag:[1048,1053],diagon:[924,969],dict:[15,16,17,18,19,40,41,42,850,852,855,859,860,862,872,873,874,875,876,924,950,951,952,982,1076,1077,1078,1080,1124,1126,1127,1128,1131,1133,1198,1199],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,788,789,850,869,870,873,874,1080,1161,1170,1192,1235,1238],differenti:[1192,1235],dilat:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],dim:[40,41,43,924,989,1041,1042,1046,1048,1053,1080,1209,1220],dim_siz:[40,41,850,1080],dimens:[40,41,42,805,806,807,850,881,924,935,941,945,950,951,952,955,959,966,979,989,994,995,1005,1006,1009,1017,1019,1041,1045,1048,1051,1053,1054,1076,1077,1078,1079,1080,1136,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1158,1161,1162,1163,1164,1165,1166,1167,1168,1171,1174,1176,1177,1209,1210,1211,1212,1213,1214,1215,1216,1219,1220],dimension:[40,41,805,806,807,924,1005,1006,1048,1053],direct:1080,directli:[43,1124,1133,1235,1238],directori:[924,1002,1013],discret:[1174,1176],disk:[40,41,1041,1043],distanc:[924,927],distribut:[40,41,850,869,873,874,875,876,1080,1136,1137,1138,1139,1140,1161,1169,1209,1217,1221,1222],distribute_nest:1080,distributedarrai:[40,41],distrubt:[1174,1176],dive:[1192,1235],divid:[40,41,924,1005,1007,1059],dividend:[1059,1068],divis:[924,958,965,1000,1007,1008,1025,1027,1028,1032,1059,1068,1225,1226,1227],divisor:[1025,1027,1028,1032,1059,1068,1225,1226,1227],doc:1192,docstr:43,doe:[40,41,43,924,927,1005,1234],doesn:1192,doing:43,domain:[1059,1060],don:1192,door:1238,dot:[1048,1050,1161,1172,1173,1209,1220],down:1234,downscal:[924,939,940],drag:[1192,1238],draw:[1136,1137,1139,1140],drawn:[1136,1137,1138,1139,1140],drop:[1192,1238],dropout:[1161,1192,1209,1220],dropout_r:[1209,1220],ds_tune_step:850,dtype:[40,41,43,116,272,373,375,376,406,522,641,788,789,790,904,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,927,931,960,969,989,990,991,1023,1024],dtype_bit:[116,272,406,522,641,900],dtype_from_str:[43,116,272,406,522,641,900],dtype_in:[900,906,911,912,913,914,915,916,923],dtype_to_str:[116,272,406,522,641,900],duplic:[40,41],dure:[40,41,43,848,849,924,1018,1025,1027,1028,1032,1076,1077,1078,1079,1221,1222,1225,1226,1227,1229],dynam:[848,849],each:[40,41,42,43,792,794,802,803,809,834,850,859,860,869,870,871,872,873,874,875,881,893,894,924,925,926,942,953,994,1005,1009,1012,1022,1025,1028,1030,1032,1033,1034,1041,1044,1048,1053,1059,1062,1068,1070,1071,1080,1124,1128,1136,1137,1143,1144,1161,1162,1163,1164,1165,1166,1167,1168,1169,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1235],eager:1235,easi:1238,easili:1192,econom:1238,ecosystem:1192,edg:[924,938,942,1022],effect:[1025,1034],effective_grad:[1025,1034],effici:1238,einop:[40,41,924,950,951,952],einops_rearrang:[40,41,924],einops_reduc:[40,41,924],einops_repeat:[40,41,924],einstein:[40,41,1143,1144],einsum:[40,41,171,349,460,584,756,1143],either:[40,41,924,949,982,985,987,1076,1077,1078,1079,1080,1209,1220,1221,1222,1235],eleg:1080,element:[40,41,43,792,793,794,795,802,803,805,806,807,809,834,850,871,875,881,900,904,924,925,927,929,930,932,933,937,938,939,940,946,947,953,956,957,958,969,970,984,986,994,996,1005,1016,1021,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1080,1143,1144,1146,1148,1150,1153,1154,1155,1156,1157,1158,1159,1160,1161,1169,1209,1217],elementwis:[40,41],elementwise_affin:[1223,1224],elementwise_funct:[792,793,794,795],elemtn:[1136,1137],elif:1080,els:[924,934,949,954,1080],elsewher:[924,1021],emphas:1192,empti:[40,41,1080],enabl:[40,41,42,1192],encapsul:[788,790],encod:[924,959,1041,1043],end:[924,927,1192,1235],ensur:43,entir:[40,41,805,806,807,850,894,1080,1192,1209,1218],entri:[40,41,924,956,980,981,1005,1006],entropi:[1174,1175,1176,1177],enumer:1080,environ:1192,eps:[373,788,789],epsilon:[1025,1027,1028,1032,1174,1175,1176,1177,1178,1179,1223,1224,1225,1226,1227],equal:[40,41,522,641,792,793,794,924,926,932,933,942,1005,1022,1059,1072,1074,1136,1140],equality_matrix:[924,926],equat:[40,41,1143,1144],equival:[924,927,1059,1074],erf:[456,733,1059],error:[40,41,850,924,1006,1059,1069,1080,1153,1154,1221,1222,1225,1229],essenti:43,etc:[40,41,43,850,895,924,927,931,961,962,969,980,981,989,990,991,997,998,1023,1024,1080,1136,1137,1138,1139,1140,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232,1238],evalu:[40,41,805,806,807,924,985,1124,1125,1132],even:1238,evenli:[40,41,924,927,980,981,1005],everi:[924,926,1238],exact:[40,41],exampl:[43,848,849,924,938,1009,1192,1234,1235,1238],example_input:[848,849],exc_tb:1080,exc_typ:1080,exc_val:1080,exce:[924,986],except:[40,41,44,47,805,806,807,924,927,934,941,949,1018,1080],excess_s:1080,excit:[1192,1235],exclud:[59,61,924,927,1136,1140],exclus:[40,41,924,946,976,1025,1031,1136,1138],execut:[43,924,1018,1235],execute_with_gradi:[152,326,443,564,713,1025,1192,1234],exist:[40,41,924,949,1080,1192,1225,1229,1238],exp:[733,1059],expand:[40,41,924,955,959],expand_dim:[40,41,272,641,924,1080],expect:[924,928],explain:1235,explicitli:[1209,1218,1220,1221,1222,1235],expon:[43,809,834,924,1008],exponenti:[43,809,834,1059,1069,1070],expos:[924,931,943],express:[924,985],exsit:[40,41],extend:43,extra:[40,41,42,1025,1029],eye:[1048,1050],fabian:1192,fabio:1192,factor:[850,859,892,893,894,1025,1027,1028,1032,1033,1048,1053,1080,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216,1225,1226,1227,1228],falck:1192,fall:[1221,1222,1225,1229],fallback_to_non_compil:[1221,1222,1225,1229],fals:[15,18,19,40,41,42,59,66,67,68,69,70,792,794,802,803,805,806,807,850,868,881,889,894,899,900,907,908,909,910,924,926,946,949,954,959,966,976,982,1003,1005,1019,1021,1025,1028,1029,1030,1031,1032,1033,1034,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1143,1145,1146,1147,1148,1149,1150,1151,1180,1181,1182,1186,1190,1198,1199,1221,1222,1225,1226,1227,1228,1229,1230],fan_in:1200,fan_mod:1200,fan_out:1200,far:[1124,1125,1132,1234],faster:[848,849],favourit:[1192,1234],feasibl:1238,feat_dim:[1161,1172,1173],fed:[850,894,1080],feed:[850,894,1080],field:1238,file:[40,41,43,924,1002,1013,1221,1222],filepath:[40,41],fill:[40,41,924,960,990,1023,1136,1138],fill_valu:[924,960],filter:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216,1238],filter_s:[1209,1210,1211],filter_shap:[1209,1212,1213,1214,1215,1216],find:[40,41,1238],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,197,198,373,374,484,485,602,603,788],finish:[1192,1238],finit:[792,794],first:[40,41,848,849,850,881,924,932,941,945,953,980,981,1009,1011,1025,1029,1048,1053,1076,1077,1078,1079,1080,1124,1125,1132,1136,1142,1143,1148,1150,1209,1220,1221,1222,1225,1229,1235,1238],firstlayersiren:[1192,1200],firstli:[1235,1238],fist:[850,894,1080],fit:[40,41,924,994,1041,1046],fkt:1238,flag:[40,41,1025,1031],flat:[40,41,43,924,994,997],flat_list:[40,41],flatten:[40,41,924,959,994,1048,1054,1143,1145,1146,1147,1149,1151],flatten_key_chain:[40,41,1221,1222],flexibl:[1192,1235],flip:[40,41,116,272,406,522,641,924],float32:[43,900,904,912,913,924,927,931,969,990,991,1023,1024],float_dtyp:[900,908,918],float_img_to_uint8_img:1041,floor:[272,641,924,958,1080],floormod:[272,641,924],fluid:1238,fname:[1180,1182,1186,1221,1222],folder:[43,1192],follow:[40,41,43,788,790,850,894,924,972,973,974,1007,1008,1025,1028,1030,1032,1033,1034,1080,1124,1128,1133,1161,1172,1173,1192,1209,1219,1225,1229],followng:[788,789],fomaml_step:1076,forget:[1025,1027,1028,1032,1225,1226,1227],fork:[924,987],forkserv:[924,987,1080],form:[15,16,17,18,19,40,41,924,931,1025,1028,1030,1032,1033,1034,1124,1126,1133,1161],format:[40,41,43,850,868,900,904,906,910,924,927,931,969,990,991,1023,1024,1080,1143,1144,1192,1234,1235],format_fn:[40,41],format_key_chain:[40,41],forward:[1221,1222,1225,1229,1234],found:[40,41,42],fourier:[924,959],fourier_encod:924,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,94,97,98,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,156,157,158,160,161,165,166,167,168,169,170,172,173,174,175,176,177,178,181,183,184,186,187,188,189,190,191,192,198,199,200,203,204,212,215,216,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,332,333,334,336,337,338,339,341,342,345,346,347,348,350,351,352,353,354,355,356,357,360,362,363,364,365,366,367,368,374,375,376,379,380,381,389,392,393,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,449,450,451,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,485,486,487,490,491,492,500,503,504,516,517,518,519,520,521,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,565,566,567,568,570,571,572,574,575,576,580,581,582,583,585,586,587,588,589,590,591,595,596,597,603,604,605,608,609,610,618,621,622,634,635,636,637,638,639,640,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,714,715,716,717,718,720,721,722,724,725,726,727,728,729,731,732,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,750,751,752,753,754,755,757,758,759,760,761,762,763,766,767,768,769,770,771,772,774,775,777,778,779,780,781,782,783,789,790,793,794,795,802,803,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1179,1181,1182,1184,1185,1187,1191,1192,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1237,1238],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1080,framewrk:[924,987],freeli:43,frequenc:[924,959],from:[40,41,42,43,802,803,805,806,807,850,859,860,894,900,906,924,949,956,961,962,969,995,1006,1014,1021,1025,1028,1032,1041,1045,1076,1077,1078,1079,1080,1124,1126,1133,1136,1137,1138,1139,1140,1143,1148,1150,1161,1169,1172,1192,1198,1199,1209,1217,1220,1225,1229,1234,1235],from_cal:[1221,1222],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[116,272,406,522,641,788,789,924,1192],full_matric:[1048,1053],fulli:[43,1192,1209,1219,1220,1234],func:[40,41,848,849,850,894,924,936,1025,1029,1080],further:1238,furthermor:1238,futur:1238,gain:1200,gamma:[1178,1179],gather:[40,41,116,272,406,522,641,924,962],gather_nd:[40,41,116,272,406,522,641,924],gauss:[1059,1069],gaussian:[1153,1154],geglu:[1192,1195],gelu:[359,469,765,1153,1192,1195],gener:[23,40,41,43,848,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1031,1136,1138,1140,1141,1192,1225,1229],geometr:[924,959],get:[40,41,788,789,790,850,859,860,868,883,884,889,893,896,899,900,910,911,924,928,963,964,965,993,1080,1190,1192,1209,1218,1238],get_all_arrays_in_memori:924,get_all_arrays_on_dev:850,get_framework:59,get_initial_st:[1209,1218],get_min_bas:924,get_min_denomin:924,get_mod_kei:[1221,1222],get_num_dim:[641,924],get_param:1186,get_param_recurs:1186,get_referrers_recurs:924,getfullargspec:1080,gist:1192,give:[802,803,924,995,1235],given:[40,41,43,802,803,850,883,889,892,893,894,896,899,900,904,924,927,931,938,946,947,956,962,980,981,990,991,994,997,998,1005,1012,1017,1019,1023,1024,1025,1027,1028,1030,1032,1033,1034,1048,1050,1055,1059,1060,1080,1124,1129,1130,1136,1139,1140,1142,1143,1146,1148,1149,1150,1151,1161,1162,1163,1164,1165,1166,1167,1168,1198,1199,1238],global:[40,41,42,850,859,860,867,892,893,894,900,907,908,909,924,948,964,965,993,999,1000,1001,1007,1008,1025,1040,1080,1178,1179,1184,1185,1192,1223,1224],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1192,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219],got:1192,gpu0:43,gpu2:43,gpu:[850,885,888,1080],gpu_is_avail:[850,1080],grad:[1192,1225,1229,1234],gradient:[25,40,41,850,894,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1044,1076,1077,1078,1079,1192,1225,1226,1227,1228,1229,1230,1234,1238],gradient_descent_upd:[1025,1076,1077,1078,1079],gradient_imag:[155,331,448,569,719,1041],gradienttrack:[1025,1026],graph:[1025,1028,1030,1032,1033,1034,1180,1181,1182,1187,1192,1221,1222],graph_compil:[1180,1181,1182,1183,1184,1185,1186,1190],greater:[40,41,924,927,957,1006,1136,1140],green:[40,41,42,1236,1237],grid:[924,985],group:[1041,1046],guid:[1192,1193,1238],gym:1192,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1238,half:[924,927,1080,1136,1140],hand:1192,handl:[40,41,42,43,848,849,850,866,868,877,878,889,896,899,1025,1028,1030,1032,1033,1034,1080,1225,1226,1227,1228,1229,1230],has:[40,41,43,924,1009,1059,1064],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,924],hasattr:1080,have:[40,41,43,788,789,792,794,805,806,807,809,834,924,941,945,950,951,952,953,960,1009,1025,1031,1039,1048,1053,1059,1068,1080,1192,1234,1235],hdf5:[40,41,1221,1222],head:[1161,1172,1209,1220],head_dim:[1209,1220],height:[1041,1046],height_cutoff:[40,41],help:[59,373,850,862,863,864,865,900,1025,1186,1190,1192,1200,1202,1203,1205,1206,1208],helper:1192,here:[43,1192],hidden:[1161,1171,1209,1218],hierarch:[924,943],hierarchi:[40,41],high:[40,41,1136,1138,1140],higher:[1025,1028,1030,1032,1033,1034,1048,1053],highest:[1136,1138],highest_util:1080,highest_util_nod:1080,highli:1192,highlight:1238,highlight_subgraph:[1180,1182,1186],hint:43,hkt:1238,hold:[900,904,924,927,931,997,998],host:1192,hot:[924,989],how:[1192,1209,1220,1221,1222,1235,1238],howev:[43,1235],http:1238,hyperbol:[1059,1061,1063,1066,1067,1073,1075,1153,1160],hypothet:1238,icon:1192,idea:1192,ident:[40,41,43,116,272,406,522,641,924],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[788,789],if_exist:[40,41],ignor:[40,41,1225,1229],ignore_key_error:[40,41],ignore_miss:[1225,1229],ignore_non:[40,41],iinfo:[78,197,373,484,602,788],imag:[27,924,979,1042,1043,1044,1045,1046,1047,1161,1162,1163,1164,1165,1167,1168,1192,1238],image_dim:[1041,1045],imkkhk:1238,immedi:[1192,1235,1238],implement:[43,809,834,1192,1235,1238],in_featur:[1161,1170],includ:[40,41,43,805,806,807,924,927,968,1007,1008,1020,1124,1125,1136,1140,1209,1219,1220,1223,1224,1234],include_deriv:[1124,1126,1133],include_empti:[40,41],include_gener:[1180,1181,1182,1186,1221,1222],include_inf:[40,41,924,968,1020],include_nest:[1124,1125],include_self:[40,41],inclus:[1136,1138],incom:[1161,1170],increas:[850,872,876,882,924,942,955,1022,1080,1124,1133],increasingli:1238,increment:[924,973,1080],increment_param_count:1186,inde:1192,indent:[40,41,42],independ:[1136,1137],index:[40,41,924,929,930,961,962,985,1006,1009,1124,1127,1129,1130,1131,1134],index_nest:1124,indic:[40,41,802,803,924,929,930,961,962,970,989,997,998,1124,1125,1127,1129,1130,1131,1132,1134,1135,1136,1137,1153,1158,1161,1162,1163,1164,1165,1166,1167,1168,1178,1179,1209,1210,1211,1212,1213,1214,1215,1216,1221,1222],indices_wher:[116,272,406,641,924],inevit:1238,inf:[40,41,924,968,977,1020,1059,1064],infer:[802,803,848,849,924,956,966,969,995,1003,1041,1045,1235,1238],infin:[792,794,924,977],inform:[788,789,790,1025,1036],init_c:[1161,1171],init_h:[1161,1171],init_on_first_step:[1225,1229],initi:[40,41,42,59,373,850,862,863,864,865,900,1025,1080,1161,1171,1186,1190,1192,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1225,1229],initialz:[1221,1222],inner:[1076,1077,1078,1079],inner_batch_fn:[1076,1077,1078],inner_batch_shap:[1161,1170],inner_cost_fn:[1076,1077,1078],inner_grad_step:[1076,1077,1078,1079],inner_learning_r:[1076,1077,1078,1079],inner_optimization_step:[1076,1077,1078,1079],inner_v:[1076,1077,1078],inp:1080,inplac:[40,41,924,934,971,975,1010,1025,1028,1030,1032,1033,1034,1198,1199,1225,1226,1227,1228,1229,1230],inplace_arrays_support:924,inplace_decr:[116,272,406,522,641,924],inplace_incr:[116,272,406,522,641,924],inplace_oper:[0,11,12],inplace_upd:[40,41,116,272,406,522,641,924,1198,1199],inplace_variables_support:924,input:[15,18,19,40,41,42,43,792,793,794,795,802,803,805,806,807,848,849,850,859,860,867,868,869,872,873,876,882,894,895,900,904,905,907,908,909,910,911,915,916,924,925,926,929,930,932,933,934,935,937,938,939,940,941,942,944,946,947,949,950,951,952,953,954,955,956,957,958,959,966,968,969,970,972,973,974,976,977,978,979,983,984,985,986,994,996,1003,1004,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1022,1025,1029,1031,1036,1040,1041,1042,1043,1044,1045,1047,1048,1051,1053,1054,1056,1057,1058,1059,1061,1063,1064,1066,1067,1068,1072,1073,1074,1075,1076,1077,1078,1079,1080,1136,1137,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1178,1179,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1223,1224,1235],input_ax:[850,894,1080],input_channel:[1209,1210,1211,1212,1213,1214,1215,1218,1219],input_queu:1080,inputs_split:1080,insert:[924,955],insid:43,inspect:1080,inspir:1238,instal:1192,instanc:[15,16,17,18,19,40,41,43,809,834,850,859,1080,1198,1199,1231,1232],instead:[40,41,1143,1145,1146,1147,1148,1149,1150,1151,1238],int32:43,int64:[900,904,924,927,931,969,990,991,1023,1024],int_dtyp:[900,909,919],integ:[40,41,788,790,805,806,807,900,916,924,927,937,957,996,1005,1048,1054,1136,1138,1141],integr:1192,intend:43,inter:1192,interchang:[40,41,924,1011],interest:1192,interfac:[924,931,1235],intermedi:[40,41],intern:[40,41,850,1025,1039,1080,1124,1125,1132,1133,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1231,1232],interpol:[924,979],intersect:[1059,1060],interv:[40,41,805,806,807,924,927,938,980,981,1059,1062,1136,1140],introduc:1238,inv:[723,1048,1238],invalid:[805,806,807],invalid_dtyp:900,invers:[1048,1050,1052,1059,1060,1061,1062,1063,1064,1066,1238],invert:[1048,1050,1052],invest:1238,invoc:[848,849],irrespect:1192,is_al:1080,is_arrai:[116,272,406,522,641,924,1080],is_float_dtyp:900,is_int_dtyp:900,is_mean:1080,is_sum:1080,is_var:[1186,1190],is_vari:[152,326,443,564,713,1025],isfinit:[83,202,378,489,607,792],isinf:[272,522,641,924],isinst:1080,isnan:[272,522,641,924],isnumer:1080,item:[15,19,40,41,809,821,822,850,859,860,862,869,871,873,875,881,900,907,924,943,967,1007,1008,1080,1124,1128,1129,1130,1133,1134,1135,1192,1221,1222,1234],iter:[15,16,17,18,19,40,41,42,848,849,850,853,854,856,857,859,860,863,864,871,873,874,875,876,881,894,924,926,935,941,942,956,969,985,990,994,995,998,1003,1005,1009,1012,1017,1022,1023,1080,1124,1125,1126,1128,1132,1133],iterbal:[850,871,875,881,1080],its:[802,803,850,894,924,969,995,1011,1017,1080,1192],itself:[43,1124,1133],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,373,375,376,788,789,790,792,793,794,795,802,803,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1190,1192,1193,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1236,1237],ivy_backend:[40,41],ivy_bay:1238,ivyfcmodel:1234,ivyh:[40,41,42],ivymodul:[182,773],jame:1192,jax:[1025,1031,1192,1238],jax_concat:1192,jnp:1192,join:[40,41,924,941,1009,1080],journal:1192,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1192,1209,1218,1238],kaimingnorm:[1200,1204],kalman:1238,kalman_filt:1238,kalman_filter_step:1238,kalman_filter_upd:1238,keep:[40,41,850,895,924,1019,1080,1192,1238],keep_inner_v:[1076,1077,1078],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1076,1077,1078],keepdim:[40,41,805,806,807,924,1019,1048,1051,1054,1143,1145,1146,1147,1148,1149,1150,1151],kei:[15,16,17,40,41,42,809,814,850,862,924,943,1076,1077,1078,1080,1124,1127,1131,1161,1172,1173,1192,1198,1199,1209,1220,1225,1229],kept:[40,41,42,1076,1077,1078],kera:1238,kernel:[1161,1171],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,850,859,860,872,876,882,924,928,950,951,952,982,1080,1124,1128,1221,1222],keyword_color_dict:[40,41,42],kind:[788,789,790,1238],kwarg:[15,16,17,40,41,42,59,63,850,859,872,876,882,924,982,1080,1180,1181,1182,1186,1198,1199,1221,1222],kwarg_stateful_idx:[1180,1181,1182,1186,1221,1222],kwargs_clon:1080,kwargs_dist:1080,kwargs_uni:1080,label:[1174,1175,1176,1177],lamb:[1025,1032,1192,1225],lamb_upd:1025,lambda:[1080,1225,1228,1230,1234],lar:[1025,1032,1033,1192,1225],larger:[788,789,924,938],largest:[40,41,788,789,790,924,929,957],lars_upd:1025,last:[40,41,805,806,807,924,927,945,979,1005,1009,1048,1051,1053,1143,1148,1150,1153,1158,1161,1171,1209,1219],later:[40,41,924,936],latest:[1209,1218],layer:[1025,1028,1030,1032,1034,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1178,1179,1192,1200,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232,1238],layer_norm:1178,layernorm:[1192,1223],layerwis:[1025,1033,1225,1228],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1124,1125,1132],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1153,1154,1155],leaky_relu:[765,1153],learn:[802,803,1025,1028,1030,1032,1033,1034,1076,1077,1078,1079,1136,1142,1192,1225,1226,1227,1228,1229,1230,1235,1238],learnabl:[1178,1179,1223,1224],leav:[15,18,19,40,41,1124,1125,1126,1132,1133],left:[40,41,1048,1051,1054,1143,1145,1146,1147,1148,1149,1150,1151,1192],leftmost:[40,41],len:1080,length:[40,41,42,924,927,995,1006,1017],lenton2021ivi:1192,lenton:1192,less:[40,41,43,924,937,1080,1136,1140],less_util_node_str:1080,let:[1235,1238],level:1192,librari:[1192,1234,1238],lightweight:1192,like:[43,1025,1031,1136,1140,1192,1234,1235,1238],limit:[40,41,42,788,789,790,924,938,939,940],linalg:[29,1049,1050,1051,1052,1053,1054,1055,1192],linear0:[1192,1234],linear1:1192,linear2:1234,linear:[924,959,979,1048,1153,1154,1155,1156,1161,1169,1192,1209,1210,1211,1212,1213,1214,1215,1216,1234],linear_resampl:[116,272,406,522,641,924],linearli:[924,959],link:1192,linspac:[116,272,406,522,641,924,927],list:[15,18,19,40,41,43,805,806,807,850,859,860,869,870,872,873,874,876,879,880,894,924,927,931,933,985,1004,1005,1014,1019,1076,1077,1078,1080,1124,1125,1126,1128,1132,1133,1161,1162,1163,1164,1165,1166,1167,1168,1192,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216],list_join:[40,41,42],list_stack:[40,41],littl:1235,load:[40,41],loaded_kwarg:1080,loader:1192,local_set:[924,967],locat:[43,924,977,978,1136,1137],log:[733,924,981,1059,1080,1174,1175,1176,1177,1192],log_all_op:1186,log_global_inference_abs_tim:[1183,1192],log_global_inference_rel_tim:[1183,1192],logarithm:[1059,1071],logic:[31,792,795,805,806,807,1057,1058,1192],logical_and:[340,730,1056],logical_not:[83,202,378,489,607,792],logical_or:[340,730,1056],logit:[1174,1177],logspac:[116,272,406,522,641,924],look:[43,1235,1238],loop:[1076,1077,1078,1079],loss:[1175,1176,1177,1192,1234],loss_fn:[1192,1234],lot:1235,low:[40,41,1136,1138,1140],lower:[40,41,924,984,1136,1140],lower_depth:[1221,1222],lowest:[15,18,19,40,41,1124,1133,1136,1138],lstm:[1161,1171,1192,1209],lstm_updat:[43,1161],machin:[788,789,790,802,803,1136,1142,1192,1235,1238],mai:[924,927,949,953,1192,1235,1238],main:[924,969,1192],mainli:1192,make:[43,850,1080,1192,1235],maml:[1076,1077,1078],maml_step:1076,manag:[850,1080],mani:[40,41,43,924,1005,1192],manner:[15,18,19,40,41,43,1124,1133],manual:[1124,1125,1132,1238],map:[40,41,42,850,859,924,977,978,1080,1124,1129,1130,1133,1209,1220,1234],map_cont:[40,41],map_nest_at_index:1124,map_nest_at_indic:1124,map_sequ:[40,41],mapper:[850,859,860,1080],mask:[1161,1172,1173],match:[40,41,924,982],match_kwarg:924,math:[33,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1080,1192],mathbb:[1048,1055],mathbf:[1048,1055],matmul:[43,272,522,641,924,1238],matplotlib:1235,matric:[1161,1170],matrix:[40,41,924,926,939,983,1048,1049,1050,1051,1052,1055,1161,1170,1209,1219],matrix_norm:[40,41,159,335,452,573,723,1048],matter:1192,max:[40,41,373,788,789,790,924,939,940,951,984,997,998,1080,1143,1145,1225,1227],max_batch_s:[40,41],max_chunk_s:[850,894,1080],max_depth:[40,41,850,854,857,864,872,876,882,924,967,1080,1124,1133],max_dev_dim_step_ratio:850,max_freq:[924,959],max_length:[40,41],max_node_dim_step_ratio:1080,max_norm:[40,41,924,939,940],max_split_factor_step_s:[850,1080],max_trust_ratio:[1025,1032,1225,1227],maxim:[1192,1235,1238],maximis:1192,maximum:[40,41,42,641,850,872,876,882,894,924,929,938,939,940,959,1025,1032,1080,1124,1133,1143,1145],mayb:[15,18,19],mdi:1080,mean:[40,41,850,879,880,881,882,894,924,951,1076,1077,1078,1079,1080,1124,1128,1136,1139,1143,1146,1149,1151,1200,1234,1238],measur:[1161,1172,1209,1220],mech:1192,mechan:[1192,1238],medic:1238,memori:[850,866,889,894,896,899,1080,1161,1171,1192],meshgrid:[272,641,924],messag:[1236,1237],meta:[35,1077,1078,1079,1192],method:[40,41,42,43,924,931,943,985,997,998,1025,1032,1033,1080,1124,1125,1132,1133,1192,1209,1220,1221,1222,1235],might:[924,949,1238],min:[40,41,373,788,789,790,924,951,986,997,998,1007,1080,1143,1147],min_bas:[924,1008],min_denomin:[924,1007],min_dev_dim_s:850,min_node_dim_s:1080,min_sf_tune_step:[850,1080],min_unit_dev_tune_step:850,min_unit_node_tune_step:1080,mind:1192,mini:[1178,1179,1223,1224],minimum:[40,41,641,850,900,904,924,927,930,931,938,964,965,999,1000,1007,1008,1080,1143,1147],miss:[1225,1229],ml_framework:[802,803,924,927],mod:[924,958],mod_depth:[1221,1222],mod_height:[1221,1222],mod_with_top_mod_key_chain:[1221,1222],mode:[40,41,848,849,850,879,880,881,882,894,1048,1053,1080,1235],model:[1192,1234],modul:[40,41,42,59,924,987,1080,1192,1193,1195,1196,1197,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1223,1224,1231,1232,1238],moment:[1025,1027,1028,1032,1225,1226,1227],more:[43,924,1009,1080,1192,1235,1238],more_util_node_str:1080,most:[40,41,43,1192,1238],move:[40,41,43,850,895,1080],much:[1192,1238],multi:[924,987,1161,1172,1209,1220],multi_head_attent:1161,multi_index_nest:1124,multi_map:[40,41],multi_nod:1080,multidev:[850,861,862,863,882],multidevcontain:[40,41],multidevic:[850,859],multidevit:[850,853,856,859,860,864],multidevitem:[850,852,855],multidevnest:[850,854,857],multiheadattent:[1192,1209],multinod:[1080,1084],multinodecontain:1080,multinodeit:1080,multinodeitem:1080,multinodenest:1080,multinomi:[164,344,458,579,749,1136],multipl:[40,41,805,806,807,924,982,1005,1048,1050,1143,1145,1146,1147,1148,1149,1151,1178,1179,1209,1219,1235],multipli:[40,41,924,946,1143,1148],multiprocess:[40,41,42,641,850,859,924,1080],must:[40,41,42,43,792,794,805,806,807,809,834,850,879,880,881,882,894,924,927,941,943,945,953,984,986,998,1009,1059,1065,1068,1080,1136,1141,1225,1229],mutabl:[1124,1126,1133],mutlidevic:[850,859],mutlinod:1080,mw_tm1:[1025,1028,1032],mx_concat:1192,mxnet:[43,1192,1238],my_func:43,mymodel:1192,name:[848,849,1180,1181,1182,1186,1234],namespac:[43,1235],nan:[40,41,792,794,924,968,978,1020],nativ:[15,17,18,19,40,41,43,850,866,868,877,878,889,896,899,900,905,912,913,1080,1192,1193,1198,1199],native_modul:[1198,1199],native_module_class:[1198,1199],nativearrai:[15,18,19,43,788,789,790,792,793,794,802,803,805,806,807,809,834,850,868,894,895,900,904,910,915,916,924,925,926,927,929,930,931,932,933,935,937,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,959,961,962,966,968,969,970,977,978,979,980,981,983,984,985,986,989,990,991,994,995,996,997,998,1003,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1080,1124,1126,1133],natur:[1059,1071,1238],ncdhw:[1161,1166,1167,1209,1214,1215],nchw:[1161,1164,1165,1168,1209,1212,1213,1216],ncw:[1161,1162,1163,1209,1210,1211],ndarrai:[43,373,375,376,924,1015],ndhwc:[1161,1166,1167,1209,1214,1215],nearest:[924,996],need:[43,924,939,940,1161,1163,1165,1167,1192,1209,1211,1213,1215,1238],neg:[40,41,792,794,805,806,807,1143,1148,1150,1153,1155],negative_slop:1200,neither:1080,nest:[15,16,17,18,19,40,41,42,850,872,876,882,924,931,1014,1076,1077,1078,1080,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1221,1222,1225,1226,1227,1228,1229,1230],nested_indices_wher:1124,nested_map:[1080,1124],network:[1161,1170,1192,1193,1195,1209,1221,1222,1238],neural:[1161,1192,1195,1209,1234],new_node_percent_mem:1080,new_node_util:1080,new_node_utils_kei:1080,new_std:[1178,1179,1223,1224],newli:[848,849,924,935,936],newlin:[40,41,42],newshap:[924,935,995],next:[788,789,1080,1221,1222,1225,1226,1227,1228,1229,1230],nhwc:[1161,1164,1165,1168,1209,1212,1213,1216],node:[40,41,1124,1125,1132],node_clon:1080,node_dist:1080,node_dist_arrai:1080,node_dist_it:1080,node_in:1080,node_mapp:1080,node_str:1080,node_to_str:1080,node_util:1080,nodedistit:1080,nodedistitem:1080,nodedistnest:1080,nodemanag:[1080,1091],nodemapp:1080,nodemappermultiproc:1080,noinspect:[43,851,901,902,903,1026,1080,1187],non:[40,41,805,806,807,848,849,900,914,1221,1222,1225,1229,1235],none:[40,41,42,43,59,61,64,788,789,790,802,803,805,806,807,848,849,850,859,860,866,867,892,893,894,895,900,907,908,909,924,927,931,948,949,954,956,960,961,962,967,969,971,972,973,974,975,980,981,987,989,990,991,994,997,998,999,1000,1005,1006,1007,1008,1017,1018,1023,1024,1025,1028,1030,1032,1033,1034,1040,1041,1045,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1128,1132,1133,1136,1137,1138,1139,1140,1143,1145,1146,1147,1148,1149,1150,1151,1161,1163,1165,1167,1170,1171,1172,1173,1178,1179,1180,1181,1182,1186,1190,1198,1199,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232],norm:[40,41,924,939,940,1048,1051,1054,1179,1192,1224,1225,1227],normal:[1136,1139,1178,1179,1223,1224],normalized_idx:[1178,1179],normalized_shap:[1223,1224],notat:[40,41,1143,1144],note:43,noth:[40,41,1235],notimplementederror:1080,now:[40,41,850,895,924,925,1080,1192,1209,1220,1221,1222,1234,1235,1238],np_concat:1192,np_finfo:373,ns_tune_step:1080,num:[924,980,981],num_arrai:[40,41],num_arrays_in_memori:924,num_arrays_on_dev:850,num_band:[924,959],num_channel:[1209,1216],num_chunk:1080,num_chunks_floor:1080,num_class:[1136,1137],num_cpu_cor:850,num_gpu:[109,850,1080],num_head:[1161,1172,1209,1220],num_kei:[1161,1172,1173],num_lay:[1209,1218],num_or_size_split:[40,41,924,1005],num_output:1080,num_queri:[1161,1172,1173],num_sampl:[924,979,1041,1042,1136,1137],num_task:[1076,1077,1078,1079],number:[40,41,42,788,789,790,805,806,807,848,849,850,886,887,888,900,911,915,916,924,927,938,942,955,959,966,969,978,979,980,981,984,988,994,1005,1012,1016,1020,1022,1048,1053,1076,1077,1078,1079,1080,1136,1137,1141,1143,1145,1146,1147,1149,1151,1161,1172,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1235,1238],numer:[43,792,794,809,834,924,964,965,999,1000,1007,1008,1059,1068,1200],numhead:[1161,1172],numpi:[40,41,373,375,376,924,1015,1048,1053,1143,1144,1192,1234,1235,1238],nwc:[1161,1162,1163,1209,1210,1211],obj:[40,41],object:[40,41,42,59,373,788,789,790,850,900,904,924,927,931,1025,1124,1127,1129,1130,1131,1134,1135,1136,1142,1186,1190,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1221,1222],object_in:[924,931],observ:1080,occupi:[788,789,790,924,997,998],off:[924,927],offer:1192,offset:[1178,1179],often:1235,old:[40,41],on_init:[1209,1220,1221,1222],onc:[850,894,1080,1136,1137,1192],one:[40,41,43,850,879,880,881,882,894,900,906,924,969,982,989,997,998,1006,1009,1048,1051,1054,1080,1143,1144,1145,1146,1147,1148,1149,1150,1151,1192,1235,1238],one_hot:[116,406,522,641,924],onearrai:[924,955],ones:[40,41,116,272,406,522,641,924,969,989,991,1192],ones_lik:[116,272,406,522,641,924],ongo:43,onli:[40,41,43,850,1080,1124,1125,1126,1132,1225,1226,1227,1228,1229,1230,1234,1235],onlin:1192,onto:[850,879,880,895,1080,1124,1128,1133],oom:[850,1080],open:[924,927,1136,1140,1192,1238],opencv:1235,oper:[40,41,792,795,924,934,950,951,952,980,981,1010,1025,1028,1030,1032,1033,1034,1056,1057,1058,1161,1162,1163,1164,1165,1166,1167,1168,1170,1192,1193],operand:[40,41,1143,1144],oppos:[924,959],optim:[850,1025,1028,1030,1032,1033,1034,1076,1077,1078,1079,1080,1192,1226,1227,1228,1230,1234,1238],optimizer_upd:1025,option:[15,18,19,40,41,42,43,802,803,805,806,807,848,849,850,859,860,868,872,873,874,875,876,879,880,881,882,889,892,893,894,895,899,900,905,910,914,923,924,926,927,929,930,931,939,940,941,946,948,949,956,959,960,961,962,966,968,969,976,979,980,981,982,985,987,989,990,991,994,997,998,1001,1003,1005,1006,1007,1008,1009,1017,1019,1020,1023,1024,1025,1028,1030,1031,1032,1033,1034,1036,1041,1045,1048,1051,1054,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1136,1137,1143,1145,1146,1147,1148,1149,1150,1151,1153,1154,1158,1161,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1235],ord:[924,956,1048,1053],order:[40,41,42,43,802,803,1025,1028,1030,1032,1033,1034,1048,1051,1054,1076,1077,1078,1231,1232],ordered_node_util_kei:1080,org:1238,organ:43,origin:[40,41,42,924,991,995,1024,1048,1051,1054],other:[40,41,43,809,811,812,817,819,820,824,826,827,828,829,830,832,834,835,836,837,838,839,841,842,843,845,846,847,848,849,924,926,927,969,1025,1029,1136,1140,1192,1234,1235,1238],other_i:[43,809,834],otherwis:[15,16,17,18,19,40,41,792,794,805,806,807,850,867,900,907,908,909,924,934,1017,1018,1021,1025,1031,1036,1040,1076,1077,1078,1080,1143,1145,1146,1147,1149,1151],our:[1192,1238],out:[924,927,1059,1064,1161,1169,1171,1192,1209,1217],out_feat_dim:[1161,1172],out_featur:[1161,1169,1170],out_i:[792,794],outdat:1238,outer:[1076,1077,1078,1079],outer_batch_fn:[1076,1077,1078],outer_batch_shap:[1161,1170],outer_cost_fn:[1076,1077,1078],outer_v:[1076,1077,1078],outlin:1235,output:[40,41,43,850,859,860,894,924,927,936,960,969,994,1012,1025,1029,1059,1065,1080,1136,1138,1139,1140,1161,1163,1165,1167,1169,1171,1172,1173,1192,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220],output_ax:[850,894,1080],output_axi:1080,output_channel:[1209,1210,1211,1212,1213,1214,1215,1218,1219],output_connected_onli:[1180,1182,1186,1221,1222],output_queu:1080,output_shap:[1161,1163,1165,1167,1209,1211,1213,1215],outsid:[924,938],over:[40,41,805,806,807,924,956,1048,1051,1054,1136,1140,1143,1145,1146,1147,1149,1151,1178,1179,1223,1224],overal:1235,overflow:[924,927],overhead:1235,overrid:[924,989,991,1024],overriden:[1225,1229],overwrit:[40,41,850,894,1080],overwrite_at_key_chain:[40,41],own:[1192,1235,1238],packag:[43,1235],pad:[924,942,959,1022,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],pad_width:[924,942,1022],page:1192,pair:[1161,1173],parallel:[850,859,860,1080],parallelis:[850,859,860,1080],param:[40,41,42,43,805,807,850,894,924,925,961,962,989,990,1023,1080,1191,1192,1221,1222,1234],paramet:[15,16,17,18,19,40,41,42,788,789,790,792,793,794,795,802,803,805,806,809,834,848,849,850,859,860,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,910,911,912,913,914,915,916,923,924,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,944,945,946,947,949,950,951,952,953,954,955,956,957,958,959,960,961,962,966,968,969,970,972,973,974,976,977,978,979,980,981,982,983,984,985,986,987,990,991,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1036,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234],parameter:[1136,1139,1140],params_all_empti:1186,pardo:1192,pars:[924,943],part:[1025,1028,1030,1032,1033,1034,1059,1064,1192,1221,1222,1235],partial:[40,41,1221,1222],particl:1238,particular:1238,pass:[40,41,42,850,859,894,900,905,924,936,1025,1039,1076,1077,1078,1080,1198,1199,1221,1222,1225,1229,1231,1232],pattern:[40,41,924,950,951,952],per:[850,1080,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],percent_used_mem_on_dev:850,percent_used_mem_on_nod:1080,percentag:[850,889,1080],perf_count:1080,perform:[40,41,43,802,803,805,806,807,850,924,929,930,946,950,951,952,972,973,974,979,980,981,1025,1028,1030,1032,1033,1034,1041,1042,1076,1077,1078,1079,1080,1124,1129,1130,1143,1145,1146,1147,1148,1149,1150,1151,1153,1158,1161,1169,1171],permissable_step:1080,permit:43,permut:[924,1011,1017],perpendicular:[924,945],person:1192,physci:1238,pickl:[40,41,1080],pickle_filepath:[40,41],pid:1186,pinv:[335,723,1048],pip:1192,pipelin:1234,pkk:1238,pkkm1:1238,pkm1km1:1238,place:[40,41,43,850,895,924,955,960,972,973,974,1080,1225,1226,1227,1228,1229,1230],placehold:[1124,1133],point:[788,789,900,915,924,927,1059,1068],popul:[40,41,1136,1137],popular:1238,population_s:[1136,1137],portabl:[1192,1193],posit:[15,16,17,788,789,792,794,850,872,876,882,924,925,927,955,959,1080,1136,1141,1198,1199],possibi:[40,41],possibl:[924,982,1014,1041,1046,1238],post:[1178,1179],post_shap:[40,41],power:[43,809,834,840,924,964,999,1008,1200],practic:1192,pre:[850,1080,1192],pre_shap:[40,41],precis:[788,789],pred:[1174,1175,1176,1177],predict:[1174,1175,1176,1177,1238],preprint:1192,present:[40,41],preserv:[40,41,42,924,956,1025,1036],preserve_typ:[40,41,1025,1036],press:1192,prevent:[43,1025,1027,1028,1032,1080,1225,1226,1227],previou:[1025,1028,1032],previous:[924,936],prime:1192,print:[40,41,42,850,890,924,992,1192,1234],print_all_arrays_in_memori:924,print_all_arrays_on_dev:850,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1225,1229],prob:[1136,1137,1161,1169,1209,1217],probabl:[1136,1137,1161,1169,1209,1217],problem:[43,1238],process:[43,850,859,860,889,899,924,987,1080],process_specif:[850,889,899,1080],prod:[40,41,924,951],produc:[850,859,860,1080],product:[40,41,924,945,946,983,1143,1144,1161,1172,1173,1209,1220],profil:[109,266,404,515,633,850,1080],project:[1192,1234,1235,1238],promot:[43,809,834,1059,1068],prompt:1192,properli:43,properti:[40,41,373,850,862,1080,1186,1190,1221,1222,1225,1226,1227,1228,1230],provid:[40,41,43,805,806,807,848,849,850,867,900,907,908,909,914,923,924,949,989,991,998,1024,1025,1028,1030,1032,1033,1034,1040,1080,1192,1209,1218,1225,1226,1227,1228,1229,1230,1235],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1048,1052],ptype:[1186,1190],pure:[40,41,1192,1238],purpos:1238,put:1080,pybroadexcept:1080,pyprotectedmemb:[1080,1187],pyshadowingbuiltin:43,pyshadowingnam:[851,901,902,903,1026,1080],python:[40,41,850,889,899,924,927,1080,1192],pytorch:[1025,1028,1030,1032,1033,1034,1192,1225,1226,1227,1228,1229,1230,1234,1235,1238],pyunresolvedrefer:1080,quadrant:[1059,1065],queri:[40,41,809,823,844,850,883,893,1080,1161,1172,1173,1209,1220],query_dim:[1209,1220],query_kei:[40,41],queue:[40,41,42,850,859,860,924,993,1001,1080],queue_class:[850,859,860,1080],queue_load_s:[40,41,42],queue_timeout:[40,41,42,924,1080],quick:1192,quickli:1234,radian:[792,793,1059,1060,1062,1065,1072,1074],rai:[1059,1060],rais:[40,41,43,805,806,807,809,834,924,934,964,999,1006,1008,1018,1080,1221,1222,1225,1229],ram:[850,889,896,899,1080],randint:[164,344,579,749,1136],random:[37,40,41,1137,1138,1139,1140,1141,1142,1192],random_crop:1041,random_norm:[164,344,579,749,1136],random_uniform:[164,344,579,749,1136],randomli:[1041,1045,1161,1169,1209,1217],randomness_factor:[1180,1182,1186,1221,1222],rang:[924,927,980,981,1059,1065,1080,1192,1234,1238],rank:[805,806,807,924,942,1019,1022],rate:[1025,1028,1030,1032,1033,1034,1076,1077,1078,1079,1209,1220,1225,1226,1227,1228,1229,1230],rather:[40,41,850,894,924,927,976,1025,1031,1080],ratio:[850,1025,1032,1041,1046,1080,1225,1227],raw:[40,41],raw_delta:1080,reach:[850,872,876,882,1080,1124,1133],read:[40,41],readi:[1080,1234],real:[1059,1060,1064],realiti:1235,rearrang:[40,41,924,950,952],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1076,1078],receiv:[850,859,860,924,928,982,1080,1209,1219],receivess:[850,1080],receiving_fn:1186,receivng:[1076,1079],recev:[1076,1077,1078],recognit:1238,recommend:1192,rectifi:[1153,1155,1156],recurr:[1161,1171],recurrent_bia:[1161,1171],recurrent_kernel:[1161,1171],recurs:[40,41,1124,1125,1126,1132,1133],redefin:43,reduc:[40,41,805,806,807,850,894,924,951,1080,1143,1145,1146,1147,1148,1149,1150,1151],reduce_max:[40,41,171,349,460,584,756,1143],reduce_mean:[40,41,171,349,460,584,756,1143,1192,1234],reduce_min:[40,41,171,349,460,584,756,1143],reduce_prod:[40,41,171,349,460,584,756,1143],reduce_std:[40,41,349,1143],reduce_sum:[40,41,171,349,460,584,756,1080,1143],reduce_var:[40,41,171,349,460,584,756,1143],reduct:[39,40,41,805,806,807,924,951,997,998,1144,1145,1146,1147,1148,1149,1150,1151,1192],refactor:43,refer:[805,806,807,1025,1027,1028,1048,1055,1209,1219,1238],reflected_oper:[0,13,14],regard:[850,1080],regardless:[40,41,848,849],register_paramet:1234,reimplement:1238,rel:[1025,1028,1030,1032,1033,1034],rel_slice_obj:1080,relev:[1225,1226,1227,1228,1229,1230],relu:[765,1153,1154,1155,1192,1234],remain:[43,924,995,1124,1128],remaind:[40,41,924,958,1005],remov:[40,41,924,1006,1076,1077,1078],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,924,956],rep:[924,1012],repeat:[40,41,272,641,924,952,1012,1080,1235],repeated_config_check:[850,1080],repeatedli:[1124,1131],repetit:[40,41,924,994,1012],replac:[40,41,43,924,938,997,998,1136,1137],repo:1192,repres:[43,900,906,911,1161,1170],represent:[40,41,42,43,788,789,790,850,877,878,900,906,912,913,924,1004,1014,1080],reptil:[1076,1079],reptile_step:1076,requir:[43,848,849,900,904,924,927,931,1198,1199],resampl:[924,979],reshap:[40,41,43,641,924],reshape_lik:[40,41],respect:[924,953,1025,1027,1028,1029,1030,1032,1033,1034,1059,1068,1076,1077,1078,1079],respons:1080,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,792,794,795,805,806,807,809,834,850,859,924,927,953,997,998,1009,1048,1051,1054,1056,1057,1058,1059,1068,1080,1143,1145,1146,1147,1148,1149,1150,1151,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1192],ret:1080,ret_dict:1080,ret_fn:[850,859,860,1080],retain:[1025,1029],retain_grad:[1025,1029],retreiv:1080,retrn:[924,1004],return_cont:[40,41],return_dict:[40,41],return_graph:[1180,1181,1182],return_inner_v:[1076,1077,1078,1079],return_sequ:[1209,1218],return_st:[1209,1218],rev:[924,949],revers:[40,41,924,949,956,1017],right:[40,41],rk_e:1238,robot:1192,ronald:1192,round:[272,641,924,927,1080],row:[924,969,1136,1137],rule:[43,809,834,924,927,1059,1068],run:[850,859,1025,1027,1028,1032,1076,1077,1078,1079,1080,1192,1193,1209,1220,1221,1222],safe:[850,859,1080],safety_factor:[850,1080],same:[15,16,17,40,41,43,850,859,860,894,895,900,904,924,925,937,941,957,958,961,962,989,991,996,997,998,1009,1024,1025,1031,1036,1048,1053,1059,1064,1076,1077,1078,1080,1143,1144,1161,1162,1163,1164,1165,1166,1167,1168,1192,1209,1210,1211,1212,1213,1214,1215,1216,1234,1238],same_arrai:[40,41],sampl:[924,979,1041,1042,1136,1137,1139,1140,1161,1169,1192,1209,1217],satisfi:[924,931,1048,1050,1055],save:[40,41,924,1002,1013,1041,1043,1221,1222],save_debug_info:1186,save_dir:[850,865,1080],save_to_disk:[1180,1182,1186,1221,1222],save_weight:[1221,1222],scalar:[924,938,989,1016,1020],scale:[850,892,893,1025,1033,1080,1161,1169,1172,1173,1178,1179,1209,1217,1220,1225,1228],scaled_dot_product_attent:1161,scatter:[924,989,997,998],scatter_flat:[116,272,406,522,641,924],scatter_nd:[116,272,406,522,641,924],scene:[1025,1028,1030,1032,1033,1034],schemat:1192,screen:[40,41],search:[15,18,19,40,41],second:[40,41,850,881,924,932,945,953,993,1001,1011,1025,1027,1028,1032,1076,1078,1080,1225,1226,1227],secondli:1238,see:[43,59,373,805,806,807,809,834,850,862,863,864,865,900,924,927,980,981,1025,1059,1068,1186,1190,1192,1200,1202,1203,1205,1206,1208],seed:[40,41,164,749,1136],seed_valu:[40,41,1136,1141],seem:1192,seen_set:[924,967],select:[924,931,1006,1235,1238],self:[40,41,43,59,373,809,834,850,862,863,864,865,900,1025,1080,1186,1190,1192,1200,1202,1203,1205,1206,1208,1225,1229,1234,1238],sent:1080,seper:[924,959],seq:[40,41,42,1143,1144,1221,1222],sequenc:[15,16,17,40,41,42,43,848,849,850,859,860,869,870,871,872,873,874,875,876,879,880,894,900,904,924,927,931,933,935,941,942,956,969,982,985,990,994,995,998,1005,1009,1012,1017,1022,1023,1025,1029,1041,1045,1046,1048,1051,1054,1080,1124,1135,1136,1138,1140,1143,1145,1146,1147,1148,1149,1150,1151,1161,1162,1163,1164,1165,1166,1167,1168,1178,1179,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1218,1221,1222,1223,1224,1225,1229,1231,1232],sequenti:1192,set:[15,18,19,40,41,850,879,880,892,893,894,924,926,948,969,999,1000,1001,1002,1025,1028,1030,1031,1032,1033,1034,1048,1051,1054,1080,1124,1125,1132,1134,1135,1136,1137,1141,1143,1145,1146,1147,1148,1149,1150,1151,1190,1192,1209,1218,1225,1226,1227,1228,1229,1230,1235,1238],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1190,set_debug_mod:44,set_default_devic:850,set_default_dtyp:900,set_default_float_dtyp:900,set_default_int_dtyp:900,set_default_nod:1080,set_exception_debug_mod:44,set_framework:[40,41,59,1080,1192,1234,1235,1238],set_ivy_backend:[40,41],set_min_bas:924,set_min_denomin:924,set_nest_at_index:1124,set_nest_at_indic:1124,set_param:1186,set_queue_timeout:924,set_split_factor:[850,1080],set_stat:[1225,1226,1227,1228,1229,1230],set_tmp_dir:924,set_with_grad:1025,setter:1080,sever:1238,sgd:[1192,1225],shape0:1080,shape:[40,41,43,641,850,862,900,904,924,925,935,937,941,942,955,956,957,958,960,962,966,969,989,990,991,994,995,996,997,998,1004,1006,1009,1022,1023,1024,1041,1045,1048,1050,1059,1064,1065,1080,1136,1138,1139,1140,1143,1144,1161,1163,1165,1167,1186,1190,1209,1211,1212,1213,1214,1215,1216,1223,1224],shape_slic:[40,41],shape_to_tupl:924,share:[40,41,1192,1235],shift:1080,should:[40,41,42,43,792,794,809,834,848,849,850,924,935,936,943,989,995,1025,1028,1030,1032,1033,1034,1059,1068,1080,1143,1144,1192],show:[40,41,1186,1192,1238],show_debug_info:1186,show_graph:[1180,1192,1221,1222,1225,1229],show_mod_in_top_mod:[1221,1222],show_structur:[1221,1222],show_sub_contain:[40,41],show_v:[1221,1222],show_v_in_top_v:[1221,1222],shown:[40,41],shp:1080,shuffl:[40,41,164,749,1136],shuffle_h5_fil:[40,41],sigmoid:[765,1153,1192,1234],signatur:[43,59,373,850,862,863,864,865,900,1025,1186,1190,1200,1202,1203,1205,1206,1208],signific:1238,similar:[43,1161,1172,1209,1220],simpl:[43,924,954,1192,1235,1238],simplest:1235,simpli:[40,41,43,1192,1235,1238],simultan:1192,sin:[733,924,959,1059,1074,1235],sinco:1235,sine:[1059,1062,1063,1072,1073],singl:[40,41,848,849,850,859,860,879,880,881,882,924,1006,1016,1020,1041,1046,1080,1136,1139,1140,1143,1145,1146,1147,1148,1149,1150,1151,1192,1235,1238],singleton:[805,806,807],singular:[1048,1053],sinh:[733,1059],siren:[1192,1200],size:[40,41,42,850,873,874,875,876,892,893,894,924,927,935,980,981,997,1005,1041,1045,1048,1051,1053,1054,1080,1136,1137,1139,1140,1143,1145,1146,1147,1148,1149,1150,1151,1209,1210,1211],size_ordered_arrai:[40,41],skew:[1048,1055],skinv:1238,skip:[40,41],slice:[40,41,802,803,924,961,962,1080,1124,1131],slice_kei:[40,41],slice_obj:[40,41,1080],slice_via_kei:[40,41],slide:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],slope:[1153,1155],small:[1174,1175,1176,1177,1178,1179,1192,1223,1224,1235],smaller:[924,938],smallest:[40,41,788,789,790,924,930,937],smallest_norm:[373,788,789],softmax:[180,469,765,1153,1161,1172,1173],softplu:[765,1153],solv:1238,some:[40,41,43,924,927,1025,1027,1028,1030,1032,1033,1034,1039,1161,1169,1192,1209,1217,1235,1238],some_backend:43,some_namespac:43,someth:[43,1238],something_cool:43,somewher:[40,41],sort:[40,41,42,803,1048,1053,1080],sort_by_kei:[40,41],sorting_funct:[802,803],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,373,375,376,788,789,790,792,793,794,795,802,803,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1190,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1236,1237,1238],space:[924,927,959,980,981],spars:[1174,1177],sparse_cross_entropi:1174,spawn:[924,987],specif:[40,41,43,850,892,924,943,950,951,952,987,1076,1077,1078,1079,1080,1136,1142,1192,1221,1222,1234,1235],specifc:[1136,1137],specifi:[40,41,43,805,806,807,850,869,870,871,872,873,874,875,876,879,880,884,886,890,893,894,895,900,904,906,924,927,929,930,931,938,941,942,960,961,962,968,980,981,1009,1019,1022,1048,1051,1054,1080,1124,1129,1130,1134,1135,1143,1144,1145,1146,1147,1148,1149,1150,1151],split:[40,41,116,272,406,522,641,850,859,873,874,875,876,892,893,894,924,982,1080],split_arg:1080,split_factor:[850,859,1080],split_func_cal:[850,1080],split_siz:1080,spread:[850,882,1080],squar:[924,969,1048,1050],squeez:[116,272,406,522,641,924],stabil:[802,803,924,1007,1008],stabl:[802,803,924,964,965,999,1000,1007,1008],stable_divid:924,stable_pow:924,stack:[40,41,272,641,924,1041,1046,1124,1125,1132,1209,1218],stack_imag:[155,331,448,569,719,1041],stacked_dim_s:1080,stage:43,standard:[40,41,43,788,789,1136,1139,1143,1149,1178,1179,1223,1224],start:[40,41,850,865,924,927,980,981,1080,1192,1235],starting_index:[40,41],starting_split_factor:[850,1080],state:[1080,1161,1171,1180,1181,1182,1186,1192,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234],statement:1235,static_argnam:[848,849],static_argnum:[848,849],std:[1136,1139],step:[40,41,850,924,927,980,981,1025,1027,1028,1030,1032,1033,1034,1076,1077,1078,1079,1080,1192,1225,1226,1227,1228,1229,1230,1234,1238],stephen:1192,stick:1192,still:[40,41],stochast:[1225,1230],stop:[40,41,850,865,894,924,927,980,981,1025,1028,1030,1032,1033,1034,1036,1076,1077,1078,1079,1080,1225,1226,1227,1228,1229,1230],stop_gradi:[40,41,326,443,564,713,850,894,1025,1028,1030,1032,1033,1034,1076,1077,1078,1079,1080,1225,1226,1227,1228,1229,1230],stopiter:1080,store:[40,41,924,959,1005,1025,1039,1221,1222],store_var:[1221,1222],str:[15,16,17,40,41,42,43,373,375,376,788,789,790,848,849,850,859,860,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,894,900,905,906,911,912,913,914,915,916,923,924,931,948,950,951,952,985,987,990,997,998,1048,1051,1054,1076,1077,1078,1079,1080,1124,1128,1143,1144,1198,1199,1209,1220,1221,1222],str_to_nod:1080,straight:1235,strength:[1192,1238],stride:[1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],string:[40,41,43,850,866,868,877,878,883,889,895,896,899,900,904,910,912,913,914,923,924,927,931,948,969,990,991,1023,1024,1080,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216,1221,1222],structur:[40,41,42,43,924,943],structural_diff:[40,41],sub:[40,41,850,873,874,879,880,881,882,924,1005,1076,1077,1078,1079,1080],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1080,sub_mod:[1221,1222],sub_modul:[1231,1232],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1192,1193,1223,1224,1231,1232],subsequ:43,subset:43,substr:[40,41],suggest:1192,suitabl:[1041,1046],sum:[40,41,850,879,880,881,882,894,924,947,951,997,998,1080,1143,1144,1150],summat:[40,41,1143,1144],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,94,97,98,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,156,157,158,160,161,165,166,167,168,169,170,172,173,174,175,176,177,178,181,183,184,186,187,188,189,190,191,192,198,199,200,203,204,212,215,216,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,332,333,334,336,337,338,339,341,342,345,346,347,348,350,351,352,353,354,355,356,357,360,362,363,364,365,366,367,368,374,375,376,379,380,381,389,392,393,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,449,450,451,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,485,486,487,490,491,492,500,503,504,516,517,518,519,520,521,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,565,566,567,568,570,571,572,574,575,576,580,581,582,583,585,586,587,588,589,590,591,595,596,597,603,604,605,608,609,610,618,621,622,634,635,636,637,638,639,640,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,714,715,716,717,718,720,721,722,724,725,726,727,728,729,731,732,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,750,751,752,753,754,755,757,758,759,760,761,762,763,766,767,768,769,770,771,772,774,775,777,778,779,780,781,782,783,789,790,793,794,795,803,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1179,1181,1182,1184,1185,1187,1191,1192,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1237,1238],supports_inplac:924,suppos:1238,svd:[335,573,723,1048],swap:[40,41,924,1011],swapax:[40,41,522,641,924,1238],symmetr:[1048,1055],tab:1192,take:[924,979],taken:[1143,1145,1146,1147,1149,1151],tan:[733,1059,1064],tangent:[1059,1064,1065,1066,1074,1075,1153,1160],tanh:[733,765,1059,1153],target:[40,41,850,866,869,870,871,872,873,874,875,876,879,880,881,882,895,1080,1192],target_dict:[40,41],task:[1076,1077,1078,1079],team:1238,templat:1192,temporari:[924,1002,1013],tensor:[40,41,43,802,803,850,868,900,910,924,927,929,930,935,980,981,984,986,989,990,991,995,997,998,1005,1023,1024,1080,1136,1137,1138,1161,1169,1171,1192,1209,1217,1219,1225,1226,1227,1228,1229,1230,1234,1235],tensorflow:[1161,1163,1165,1167,1192,1209,1211,1213,1215,1235,1238],term:[40,41,1161,1171,1192,1209,1219],termcolor:[40,41,42],termin:[40,41,42,1080],test:[792,794,805,806,807,900,915,916],tf_concat:1192,than:[40,41,788,789,850,894,924,927,937,938,957,976,984,1006,1009,1025,1031,1080,1136,1140,1192,1235],thei:[40,41,43,1059,1065,1076,1077,1078,1136,1137,1192,1231,1232,1235],them:[1192,1238],themselv:[1124,1125],therefor:43,thi:[40,41,42,43,850,872,876,882,889,894,899,924,927,959,993,995,1001,1025,1028,1030,1031,1032,1033,1034,1039,1048,1051,1054,1080,1124,1128,1133,1143,1145,1146,1147,1148,1149,1150,1151,1161,1170,1192,1221,1222,1225,1226,1227,1228,1229,1230,1234,1235,1238],thing:[43,1192],those:[40,41,924,938,1025,1039,1048,1053,1080],though:43,threshold:[924,984,986],through:[40,41],tile:[272,522,641,924],time:[924,1012,1025,1028,1032,1076,1077,1078,1079,1080,1136,1137,1161,1171,1209,1220,1221,1222,1238],time_chronolog:[1180,1181,1186],time_infer:[1180,1181],timeout:[40,41,42,850,859,860,924,993,1001,1080],timestep:[1161,1171,1209,1218],timing_fnam:[1180,1181],titl:1192,tmp_dir:924,tmp_dr:[924,1002],to_appli:[40,41],to_clon:[850,1080],to_dev:[40,41,109,266,515,633,850],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[850,1080],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1192],to_ivy_modul:[182,773,1192,1198],to_json:[40,41],to_kv_fn:[1161,1172],to_kv_v:[1161,1172],to_list:[40,41,641,924],to_multi_dev:[40,41],to_mut:[1124,1126,1133],to_n:[15,40,41,1192],to_nod:1080,to_numpi:[40,41,641,924,1192,1234],to_out_fn:[1161,1172],to_out_v:[1161,1172],to_q_fn:[1161,1172],to_q_v:[1161,1172],to_raw:[40,41],to_scalar:[641,924],todo:1080,togeth:[40,41,1231,1232],tool:[1192,1235],top_mod:[1221,1222],topic:1238,torch:[43,848,849,1192,1234,1235,1238],torch_concat:1192,torchfcmodel:1234,total:[40,41,42,850,896,1080],total_mem_on_dev:850,total_mem_on_nod:1080,tpu:[850,897,1080],tpu_is_avail:[515,633,850,1080],tpye:[900,911],trace:[40,41,924,976],track:[850,1080,1124,1133,1221,1222],track_submod_call_ord:[1221,1222],track_submod_ret:[1221,1222],trail:[1223,1224],train:[1025,1027,1028,1032,1192,1193],trainabl:[1025,1031,1192,1193,1198,1199,1221,1222,1231],trainer:1192,tran:1238,transform:[1161,1169,1170],transpos:[40,41,116,272,406,641,850,881,924,1080,1161,1163,1165,1167,1209,1211,1213,1215],travers:[15,18,19,40,41,1124,1133],treat:[40,41,848,849],tree_depth:1190,tree_height:1186,tri:[40,41],trigonometr:[792,793,1059,1060,1064,1072],trim_kei:[40,41],trust:[1025,1032,1225,1227],truth:[792,795,924,953,1056,1057,1058],try_else_non:924,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[850,1080],tune_dev_alloc:850,tune_dev_split:850,tune_node_alloc:1080,tune_node_split:1080,tune_step:[850,1080],tupl:[15,16,17,18,19,40,41,43,805,806,807,848,849,924,942,959,960,1004,1022,1080,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1138,1143,1145,1146,1147,1148,1149,1150,1151],two:[40,41,924,927,932,945,983,1011,1048,1051,1053],type:[15,18,40,41,42,43,59,375,376,789,790,792,794,805,806,807,809,834,850,862,863,864,865,877,878,882,894,900,904,905,906,910,911,912,913,914,915,916,923,924,925,927,931,937,941,943,953,957,958,960,969,976,989,990,991,996,1010,1020,1023,1024,1025,1031,1036,1059,1068,1080,1186,1190,1192,1200,1202,1203,1205,1206,1208,1221,1222,1235],types_to_iteratively_nest:[40,41,42],uint8:[1041,1043,1047],uint8_img_to_float_img:1041,unchang:[15,16,17,18,19],unif:1080,unifi:[40,41,850,879,880,881,882,894,1080,1192],uniform:[40,41,1136,1137,1139,1140,1200,1202,1203,1206,1207],uniformli:[1136,1138,1140],unify_arrai:1080,unify_it:1080,unify_nest:1080,union:[15,18,19,40,41,43,373,375,376,788,789,790,792,793,794,802,803,805,806,807,809,834,848,849,850,868,873,874,875,876,894,895,900,904,905,906,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,933,935,937,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,959,960,961,962,966,968,969,970,977,978,979,980,981,983,984,985,986,989,990,991,994,995,996,997,998,1003,1004,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1080,1124,1125,1126,1132,1133],uniqu:[850,859,860,1076,1077,1078,1079,1080,1124,1128],unique_kwarg:1080,unit:[850,1059,1060,1062,1080,1153,1154,1155,1156],unitari:[1048,1053],unless:[924,989,991,1024],unlik:[850,1080],unnorm:[1136,1137],unpack:[924,1019],unrol:[1161,1171],unset:1235,unset_debug_mod:44,unset_default_devic:850,unset_default_dtyp:900,unset_default_float_dtyp:900,unset_default_int_dtyp:900,unset_framework:[59,1235],unset_with_grad:1025,unstack:[40,41,116,272,406,522,641,924],unus:[848,849],updat:[40,41,850,859,924,974,997,998,1025,1027,1028,1030,1032,1033,1034,1076,1077,1078,1080,1124,1129,1130,1134,1135,1161,1171,1198,1199,1225,1226,1227,1228,1229,1230,1235,1238],update_backend:[40,41],update_config:[40,41],update_inference_tim:1186,upper:[40,41,1136,1140],upper_depth:[1221,1222],usabl:[1192,1238],usag:[850,894,1080],use:[40,41,42,43,850,859,860,885,897,924,994,1007,1008,1080,1161,1172,1178,1179,1192,1223,1224,1235,1238],used:[40,41,43,850,859,889,892,893,899,900,911,924,964,965,982,991,997,998,999,1000,1024,1025,1032,1033,1048,1051,1076,1077,1078,1079,1080,1124,1133,1209,1220,1225,1227,1228,1234,1235],used_dev:[850,859],used_mem_on_dev:850,used_mem_on_nod:1080,used_node_str:1080,used_node_strs_dict:1080,useful:[40,41,850,894,1080,1161,1170,1192,1235],user:[1192,1209,1220,1221,1222,1235,1238],uses:1192,using:[40,41,1025,1027,1028,1124,1127,1131,1143,1144,1161,1169,1173,1192,1209,1217,1234,1235,1238],util:[850,883,1080],utility_funct:[805,806,807],v_with_top_v_key_chain:[1221,1222],val:[40,41,809,844,924,972,973,974,999,1000,1190],valid:[805,806,807,900,905,924,1007,1008,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],valid_dtyp:900,valu:[40,41,792,795,802,803,850,862,893,894,924,925,927,929,930,938,939,940,942,943,949,953,959,960,961,962,977,978,980,981,984,986,993,994,995,996,997,998,999,1000,1001,1017,1020,1021,1022,1025,1029,1032,1041,1047,1048,1053,1056,1057,1058,1059,1069,1070,1071,1076,1077,1078,1080,1124,1128,1129,1130,1134,1135,1136,1139,1140,1143,1145,1147,1161,1172,1173,1178,1179,1186,1209,1220,1223,1224,1225,1227],value_is_nan:924,vanilla:[1076,1078],var_shap:1200,variabl:[15,16,17,18,19,40,41,326,443,564,713,924,934,972,973,974,975,976,1010,1025,1028,1029,1030,1031,1032,1033,1034,1036,1039,1076,1077,1078,1079,1161,1172,1178,1179,1198,1199,1200,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232],variable_data:[713,1025],varianc:[40,41,1143,1151,1238],varieti:1235,variou:[43,1192],vector:[40,41,924,940,945,1048,1053,1054,1055,1161,1170,1209,1219],vector_norm:[40,41,1048],vector_to_skew_symmetric_matrix:[159,335,452,573,723,1048],verbos:1237,veri:[43,1192],version:43,via:[1124,1125,1132,1235],view:[1041,1046],vision:1192,visual:1235,volum:[1161,1166],vw_tm1:[1025,1028,1032],wai:[1235,1238],wait:[40,41,42],want:[1192,1235,1238],warn:[59,66,67,68,69,70],warp:[1041,1042],watch:1234,weight:[1025,1027,1028,1030,1032,1033,1034,1161,1170,1171,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1221,1222,1225,1227,1228],weight_initi:[1209,1210,1211,1212,1213,1214,1215,1216,1218,1219],weights_path:[1221,1222],well:[40,41,924,968],were:[40,41,1080],what:1192,when:[40,41,42,43,850,924,936,1008,1021,1048,1053,1080,1192,1221,1222,1235,1238],where:[40,41,43,272,641,805,806,807,809,834,924,927,935,938,942,955,970,977,978,989,1022,1048,1053,1124,1125,1132,1136,1137],wherea:43,wherebi:[1124,1133],whether:[15,18,19,40,41,42,805,806,807,848,849,850,868,881,885,889,894,897,899,900,910,914,915,916,923,924,926,932,933,946,949,954,959,966,968,971,975,976,982,1003,1010,1019,1020,1025,1028,1029,1030,1031,1032,1033,1034,1036,1076,1077,1078,1079,1080,1124,1125,1126,1128,1132,1133,1136,1137,1153,1154,1161,1169,1192,1198,1199,1209,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230],which:[40,41,42,43,788,789,790,805,806,807,848,849,850,859,860,868,873,874,875,876,879,880,881,882,884,886,890,892,893,894,900,905,910,914,923,924,927,931,941,943,945,946,947,949,956,960,961,962,963,969,970,979,980,981,988,989,990,991,992,994,997,998,1005,1009,1019,1021,1023,1024,1025,1028,1029,1030,1032,1033,1034,1036,1038,1039,1041,1043,1048,1051,1054,1059,1065,1080,1124,1128,1129,1130,1134,1135,1136,1137,1138,1139,1140,1143,1145,1146,1147,1148,1149,1150,1151,1153,1158,1161,1172,1173,1192,1198,1199,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1232,1234,1235],whitespac:[40,41,42],whose:[43,809,834,924,931,936,1143,1144,1145,1146,1147,1149,1151],why:[1192,1193],width:[1041,1046],wiki:1238,wikipedia:1238,window:[1041,1046,1161,1162,1163,1164,1165,1166,1167,1168,1209,1210,1211,1212,1213,1214,1215,1216],wise:[40,41,43,792,793,795,809,834,924,937,938,953,957,958,984,986,996,1025,1028,1030,1032,1034,1056,1057,1058,1059,1060,1062,1064,1065,1068,1069,1070,1071,1072,1074,1153,1154,1155,1156,1157,1158,1159,1160],wish:1235,with_arg_label:[1180,1182,1186,1221,1222],with_array_cach:[1180,1181,1182,1186],with_bia:[1209,1219],with_cal:[924,949],with_default_key_color:[40,41],with_edge_label:[1180,1182,1186,1221,1222],with_entries_as_list:[40,41],with_grad:[1025,1035,1221,1222],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1080,with_output_label:[1180,1182,1186,1221,1222],with_partial_v:[1221,1222],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,924,1005,1080],with_to_kv_fn:[1209,1220],with_to_out_fn:[1209,1220],with_to_q_fn:[1209,1220],within:[15,18,19,924,927,1048,1053,1136,1140],without:[40,41,43,924,993,995,1001,1124,1126,1235],wonder:1192,word:[15,16,17,924,927,1136,1140,1198,1199],work:[43,1234],worker:[850,859,860,1080],worker_class:[850,859,860,1080],worker_kwarg:1080,would:[43,802,803,1153,1158,1192,1235,1238],wrap:[15,40,41,42,43,924,936,1025,1039,1192],wrapper:43,write:[40,41,43,1192,1193,1238],written:[43,1192,1238],ws_new:[1025,1028,1030,1032,1033,1034],x1_i:[924,953,1059,1068],x2_i:[924,953,1059,1068],x_feat_dim:[1161,1172],x_i:[792,794],x_in:[1192,1234],x_inv:[1048,1050],x_max:[924,938],x_min:[924,938],x_sub:1080,xkk:1238,xkkm1:1238,xkm1km1:1238,xs0:1080,xs_t:1080,year:[1192,1238],yet:[1124,1133,1238],yield:[924,1021],you:[1192,1234,1235,1238],your:[1192,1234,1235,1238],your_awesome_project:1235,yourself:1192,zero:[40,41,116,272,406,522,641,805,806,807,924,942,989,991,997,998,1022,1024,1025,1027,1028,1032,1033,1161,1169,1192,1200,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1225,1226,1227,1228],zero_pad:[272,522,641,924],zeros_lik:[116,272,406,522,641,924],zip:1080,zk_e:1238},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":949,"function":[77,78,83,87,89,90,91,92,93,95,96,196,197,202,205,207,208,209,210,211,213,214,372,373,378,382,384,385,386,387,388,390,391,483,484,489,493,495,496,497,498,499,501,502,601,602,607,611,613,614,615,616,617,619,620,787,788,792,796,798,799,800,801,802,804,805],Ones:1205,Using:1235,abs:[273,523,642,925],aco:[734,1060],acosh:[735,1061],activ:[180,359,469,593,765,1153,1195],adam:1226,adam_step:1027,adam_upd:1028,algebra:[88,89,206,207,383,384,494,495,612,613,797,798],all:[97,215,392,503,621,806],all_equ:926,all_nested_indic:1125,ani:[98,216,393,504,622,807],api:[0,43,75,100,194,218,370,395,481,506,599,624,785],arang:[117,274,407,524,643,927],arg_nam:928,argmax:[118,408,525,644,929],argmin:[119,409,526,645,930],args_to_ivi:16,args_to_n:17,argsort:[94,212,389,500,618,803],arithmet:[1,101,219,396,507,625],arrai:[0,3,43,75,99,100,102,120,194,217,218,220,227,275,370,394,395,397,410,481,505,506,508,527,599,623,624,626,646,785,809,931],array_equ:[276,647,932],arrays_equ:933,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[736,1062],asinh:[737,1063],assert_supports_inplac:934,atan2:[739,1065],atan:[738,1064],atanh:[740,1066],attribut:[5,103,221,398,509,627],backend:[43,73],bilinear_resampl:[156,332,449,570,720,1042],binary_cross_entropi:1175,bitwis:[7,104,222,399,510,628],broadcast_to:[277,648,935],builder:51,builtin:[99,217,227,394,505,623,809],builtin_ab:[228,810],builtin_add:[229,811],builtin_and:[230,812],builtin_bool:[231,813],builtin_contain:[232,814],builtin_deepcopi:[233,815],builtin_dir:[234,816],builtin_eq:[235,817],builtin_float:[236,818],builtin_floordiv:[237,819],builtin_g:[238,820],builtin_getattr:[239,821],builtin_getattribut:[240,822],builtin_getitem:[241,823],builtin_gt:[242,824],builtin_int:[243,825],builtin_invert:[244,826],builtin_l:[245,827],builtin_lt:[246,828],builtin_mul:[247,829],builtin_n:[248,830],builtin_neg:[249,831],builtin_or:[250,832],builtin_po:[251,833],builtin_pow:[252,834],builtin_radd:[253,835],builtin_rand:[254,836],builtin_rfloordiv:[255,837],builtin_rmul:[256,838],builtin_ror:[257,839],builtin_rpow:[258,840],builtin_rsub:[259,841],builtin_rtruediv:[260,842],builtin_rxor:[261,843],builtin_setitem:[262,844],builtin_sub:[263,845],builtin_truediv:[264,846],builtin_xor:[265,847],cache_fn:936,cast:[121,278,411,528,649,904],ceil:[279,650,937],choleski:[724,1049],choose_random_framework:61,citat:1192,clear_framework_stack:62,clear_mem_on_dev:[635,866],clip:[280,651,938],clip_matrix_norm:939,clip_vector_norm:940,clone:1095,clone_arrai:1096,clone_it:1097,clone_nest:1098,clonedit:1082,cloneditem:1081,clonednest:1083,closest_valid_dtyp:905,code:1238,comparison:[9,105,223,400,511,629],compil:[281,412,652,848,849,1180],compile_graph:1181,concaten:[122,282,413,529,653,941],constant:[76,195,371,482,600,786],constant_pad:[283,530,654,942],contain:[40,41],container_typ:[655,943],content:1192,contribut:43,conv1d:[186,362,473,777,1162,1210],conv1d_transpos:[187,363,474,778,1163],conv1dtranspos:1211,conv2d:[188,364,475,595,779,1164,1212],conv2d_transpos:[189,365,476,780,1165],conv2dtranspos:1213,conv3d:[190,366,477,596,781,1166,1214],conv3d_transpos:[191,367,478,782,1167],conv3dtranspos:1215,convers:15,convert:[182,773,1198],convert_dtyp:906,copy_arrai:[656,944],copy_nest:1126,core:[108,226,403,514,632,808],cos:[84,379,490,608,793],cosh:[741,1067],cprint:1237,creation:[77,196,372,483,601,787],cross:[284,657,945],cross_entropi:1176,cumprod:[123,285,414,658,946],cumsum:[659,947],current_framework:63,current_framework_str:[660,948],data:[78,82,197,201,373,377,484,488,602,606,788,791],debug_mod:45,debugg:44,default_devic:867,default_dtyp:907,default_float_dtyp:908,default_int_dtyp:909,default_nod:1099,depthwise_conv2d:[192,368,479,597,783,1168],depthwiseconv2d:1216,design:43,dev:[111,268,517,636,868],dev_clon:869,dev_clone_arrai:870,dev_clone_it:871,dev_clone_nest:872,dev_dist:873,dev_dist_arrai:874,dev_dist_it:875,dev_dist_nest:876,dev_from_str:[112,269,518,637,877],dev_to_str:[113,270,519,638,878],dev_unifi:879,dev_unify_arrai:880,dev_unify_it:881,dev_unify_nest:882,dev_util:883,devclonedit:853,devcloneditem:852,devclonednest:854,devdistit:856,devdistitem:855,devdistnest:857,devic:[20,109,266,404,515,633,850],devmapp:859,devmappermultiproc:860,distribute_nest:1100,divid:1068,document:1192,dropout:[1169,1217],dtype:[124,286,415,531,661,900,910],dtype_bit:[125,287,416,532,662,911],dtype_from_str:[126,288,417,533,663,912],dtype_to_str:[127,289,418,534,664,913],ecosystem:52,einops_rearrang:950,einops_reduc:951,einops_repeat:952,einsum:[172,350,461,585,757,1144],elementwis:[83,202,378,489,607,792],equal:[535,665,953],erf:[457,742,1069],execute_with_gradi:[153,327,444,565,714,1029],exist:954,exp:[743,1070],expand_dim:[290,666,955],extens:[88,206,383,494,612,797],finfo:[80,199,375,486,604,789],firstlayersiren:1202,flip:[128,291,419,536,667,956],float_img_to_uint8_img:1043,floor:[292,668,957],floormod:[293,669,958],fomaml_step:1077,fourier_encod:959,framework:59,full:[129,294,420,537,670,960],func:72,gather:[130,295,421,538,671,961],gather_nd:[131,296,422,539,672,962],geglu:1196,gelu:[360,470,766,1154,1197],gener:[22,116,272,406,522,641,924],get_all_arrays_in_memori:963,get_all_arrays_on_dev:884,get_framework:64,get_min_bas:964,get_min_denomin:965,get_num_dim:[673,966],get_referrers_recurs:967,global:1183,glorotuniform:1203,gpu_is_avail:[885,1101],gradient:[24,152,326,443,564,713,1025],gradient_descent_upd:1030,gradient_imag:[157,333,450,571,721,1044],graph:1186,gym:53,handler:59,has_nan:968,helper:1188,ident:[132,297,423,540,674,969],iinfo:[81,200,376,487,605,790],imag:[26,155,331,448,569,719,1041],index_nest:1127,indices_wher:[133,298,424,675,970],initi:1200,inplac:[11,106,224,401,512,630],inplace_arrays_support:971,inplace_decr:[134,299,425,541,676,972],inplace_incr:[135,300,426,542,677,973],inplace_upd:[136,301,427,543,678,974],inplace_variables_support:975,inv:[725,1050],invalid_dtyp:914,is_arrai:[137,302,428,544,679,976],is_float_dtyp:915,is_int_dtyp:916,is_vari:[154,328,445,566,715,1031],isfinit:[85,203,380,491,609,794],isinf:[303,545,680,977],isnan:[304,546,681,978],ivi:[43,50,51,52,53,54,55,56,57,58,784,1234,1235,1238],ivymodul:[183,774],jax:74,lamb:1227,lamb_upd:1032,lar:1228,lars_upd:1033,layer:[185,361,472,594,776,1161,1209],layer_norm:1179,layernorm:1224,leaky_relu:[767,1155],linalg:[28,159,335,452,573,723,1048],linear:[88,89,206,207,383,384,494,495,612,613,797,798,1170,1219],linear_resampl:[138,305,429,547,682,979],linspac:[139,306,430,548,683,980],log:[744,1071,1189],log_global_inference_abs_tim:1184,log_global_inference_rel_tim:1185,logic:[30,162,340,455,577,730,1056],logical_and:[341,731,1057],logical_not:[86,204,381,492,610,795],logical_or:[342,732,1058],logspac:[140,307,431,549,684,981],loss:1174,lstm:1218,lstm_updat:1171,maml_step:1078,manipul:[90,208,385,496,614,799],map:1128,map_nest_at_index:1129,map_nest_at_indic:1130,match_kwarg:982,math:[32,163,343,456,578,733,1059],matmul:[308,550,685,983],matrix_norm:[160,336,453,574,726,1051],maximum:[686,984],mech:54,memori:55,meshgrid:[309,687,985],meta:[34,1076],method:[87,205,382,493,611,796],minimum:[688,986],model:56,modul:[1221,1222,1234],multi:1080,multi_head_attent:1172,multi_index_nest:1131,multidevcontain:42,multidevit:863,multidevitem:862,multidevnest:864,multiheadattent:1220,multinodeit:1086,multinodeitem:1085,multinodenest:1087,multinomi:[165,345,459,580,750,1137],multiprocess:[689,987],mxnet:193,nativ:1234,nest:1124,nested_indices_wher:1132,nested_map:1133,network:1234,next:1192,node:[1080,1102],node_dist:1103,node_dist_arrai:1104,node_dist_it:1105,node_str:1106,node_to_str:1107,node_util:1108,nodedistit:1089,nodedistitem:1088,nodedistnest:1090,nodemapp:1092,nodemappermultiproc:1093,norm:[1178,1223],num_arrays_in_memori:988,num_arrays_on_dev:886,num_cpu_cor:887,num_gpu:[114,888,1109],numpi:369,nutshel:1192,one_hot:[141,432,551,690,989],ones:[142,310,433,552,691,990],ones_lik:[143,311,434,553,692,991],oper:[1,3,7,9,11,13,43,101,102,104,105,106,107,219,220,222,223,224,225,396,397,399,400,401,402,507,508,510,511,512,513,625,626,628,629,630,631],optim:[1225,1229],optimizer_upd:1034,overview:1192,param:1190,percent_used_mem_on_dev:889,percent_used_mem_on_nod:1110,pinv:[337,727,1052],portabl:1238,print_all_arrays_in_memori:992,print_all_arrays_on_dev:890,profil:[110,267,405,516,634,865,1094],queue_timeout:993,randint:[166,346,581,751,1138],random:[36,164,344,458,579,749,1136],random_crop:1045,random_norm:[167,347,582,752,1139],random_uniform:[168,348,583,753,1140],reduce_max:[173,351,462,586,758,1145],reduce_mean:[174,352,463,587,759,1146],reduce_min:[175,353,464,588,760,1147],reduce_prod:[176,354,465,589,761,1148],reduce_std:[355,1149],reduce_sum:[177,356,466,590,762,1150],reduce_var:[178,357,467,591,763,1151],reduct:[38,171,349,460,584,756,1143],reflect:[13,107,225,402,513,631],relu:[768,1156],repeat:[312,693,994],reptile_step:1079,reshap:[694,995],robot:57,round:[313,695,996],run:1235,scaled_dot_product_attent:1173,scatter_flat:[144,314,435,554,696,997],scatter_nd:[145,315,436,555,697,998],search:[91,209,386,497,615,800],seed:[169,754,1141],sequenti:[1231,1232],set:[92,210,387,498,616,801],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:891,set_default_dtyp:917,set_default_float_dtyp:918,set_default_int_dtyp:919,set_default_nod:1111,set_exception_debug_mod:48,set_framework:65,set_min_bas:999,set_min_denomin:1000,set_nest_at_index:1134,set_nest_at_indic:1135,set_queue_timeout:1001,set_split_factor:[892,1112],set_tmp_dir:1002,set_with_grad:1035,sgd:1230,shape:[698,1003],shape_to_tupl:1004,show_graph:1182,shuffl:[170,755,1142],sigmoid:[769,1157],signatur:[87,205,382,493,611,796],sin:[745,1072],sinh:[746,1073],siren:1206,softmax:[181,471,770,1158],softplu:[771,1159],sort:[93,211,388,499,617,802],sparse_cross_entropi:1177,split:[146,316,437,556,699,1005],split_factor:[893,1113],split_func_cal:[894,1114],squeez:[147,317,438,557,700,1006],stable_divid:1007,stable_pow:1008,stack:[318,701,1009],stack_imag:[158,334,451,572,722,1046],statist:[95,213,390,501,619,804],stop_gradi:[329,446,567,716,1036],str_to_nod:1115,submodul:43,supports_inplac:1010,svd:[338,575,728,1053],swapax:[558,702,1011],tan:[747,1074],tanh:[748,772,1075,1160],tensorflow:480,tile:[319,559,703,1012],tmp_dir:1013,to_dev:[115,271,520,639,895],to_ivi:18,to_ivy_modul:[184,775,1199],to_list:[704,1014],to_n:19,to_nod:1116,to_numpi:[705,1015],to_scalar:[706,1016],torch:598,total_mem_on_dev:896,total_mem_on_nod:1117,tpu_is_avail:[521,640,897,1118],train:1234,trainabl:1234,transpos:[148,320,439,707,1017],tree:1192,try_else_non:1018,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,197,201,373,377,484,488,602,606,788,791],uint8_img_to_float_img:1047,unifi:1119,unify_arrai:1120,unify_it:1121,unify_nest:1122,unset_debug_mod:49,unset_default_devic:898,unset_default_dtyp:920,unset_default_float_dtyp:921,unset_default_int_dtyp:922,unset_framework:71,unset_with_grad:1037,unstack:[149,321,440,560,708,1019],used_mem_on_dev:899,used_mem_on_nod:1123,util:[96,214,391,502,620,805],valid_dtyp:923,value_is_nan:1020,variabl:[330,447,568,717,1038],variable_data:[718,1039],vector_norm:1054,vector_to_skew_symmetric_matrix:[161,339,454,576,729,1055],verbos:1236,vision:58,where:[322,709,1021,1192],why:1238,with_grad:1040,wrapper:72,write:1235,zero:[150,324,441,562,711,1023,1208],zero_pad:[323,561,710,1022],zeros_lik:[151,325,442,563,712,1024]}})