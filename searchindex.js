Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[803,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[378,0,0,"-"],creation_functions:[379,0,0,"-"],data_type_functions:[382,0,0,"-"],data_types:[386,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[380,2,1,""],zeros:[381,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[382,1,1,""],finfo:[384,2,1,""],iinfo:[385,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[382,3,1,""],bits:[382,3,1,""],eps:[382,3,1,""],max:[382,3,1,""],min:[382,3,1,""],smallest_normal:[382,3,1,""]},"ivy.functional.backends.numpy.core":{device:[417,0,0,"-"],general:[419,0,0,"-"],gradients:[454,0,0,"-"],image:[459,0,0,"-"],linalg:[463,0,0,"-"],logic:[466,0,0,"-"],math:[467,0,0,"-"],random:[469,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[418,1,1,""],clear_mem_on_dev:[417,2,1,""],dev:[417,2,1,""],dev_from_str:[417,2,1,""],dev_to_str:[417,2,1,""],gpu_is_available:[417,2,1,""],num_gpus:[417,2,1,""],to_dev:[417,2,1,""],tpu_is_available:[417,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[418,3,1,""],start:[418,3,1,""],stop:[418,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[419,2,1,""],arange:[420,2,1,""],argmax:[421,2,1,""],argmin:[422,2,1,""],array:[423,2,1,""],asarray:[419,2,1,""],astype:[419,2,1,""],cast:[424,2,1,""],ceil:[419,2,1,""],clip:[419,2,1,""],compile:[425,2,1,""],concatenate:[426,2,1,""],constant_pad:[419,2,1,""],container_types:[419,2,1,""],copy_array:[419,2,1,""],cumprod:[427,2,1,""],current_framework_str:[419,2,1,""],dtype:[428,2,1,""],dtype_bits:[429,2,1,""],dtype_from_str:[430,2,1,""],dtype_to_str:[431,2,1,""],equal:[419,2,1,""],flip:[432,2,1,""],floor:[419,2,1,""],floormod:[419,2,1,""],full:[433,2,1,""],gather:[434,2,1,""],gather_nd:[435,2,1,""],get_num_dims:[419,2,1,""],identity:[436,2,1,""],indices_where:[437,2,1,""],inplace_arrays_supported:[419,2,1,""],inplace_decrement:[438,2,1,""],inplace_increment:[439,2,1,""],inplace_update:[440,2,1,""],inplace_variables_supported:[419,2,1,""],is_array:[441,2,1,""],linear_resample:[442,2,1,""],linspace:[443,2,1,""],logspace:[444,2,1,""],matmul:[419,2,1,""],meshgrid:[419,2,1,""],multiprocessing:[419,2,1,""],one_hot:[445,2,1,""],ones_like:[446,2,1,""],round:[419,2,1,""],scatter_flat:[447,2,1,""],scatter_nd:[448,2,1,""],shape:[419,2,1,""],split:[449,2,1,""],squeeze:[450,2,1,""],to_list:[419,2,1,""],to_numpy:[419,2,1,""],to_scalar:[419,2,1,""],transpose:[451,2,1,""],unstack:[452,2,1,""],where:[419,2,1,""],zero_pad:[419,2,1,""],zeros_like:[453,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[455,2,1,""],is_variable:[456,2,1,""],stop_gradient:[457,2,1,""],variable:[458,2,1,""],variable_data:[454,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[460,2,1,""],gradient_image:[461,2,1,""],stack_images:[462,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[464,2,1,""],vector_to_skew_symmetric_matrix:[465,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[468,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[470,2,1,""],randint:[469,2,1,""],random_normal:[469,2,1,""],random_uniform:[469,2,1,""],seed:[469,2,1,""],shuffle:[469,2,1,""]},"ivy.functional.ivy":{array_api:[804,0,0,"-"],core:[833,0,0,"-"],nn:[1174,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[805,0,0,"-"],creation_functions:[806,0,0,"-"],data_type_functions:[809,0,0,"-"],data_types:[812,0,0,"-"],elementwise_functions:[813,0,0,"-"],function_and_method_signatures:[820,0,0,"-"],linear_algebra_extension:[821,0,0,"-"],linear_algebra_functions:[823,0,0,"-"],manipulation_functions:[824,0,0,"-"],searching_functions:[825,0,0,"-"],set_functions:[826,0,0,"-"],sorting_functions:[827,0,0,"-"],statistical_functions:[829,0,0,"-"],utility_functions:[830,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[805,4,1,""],pi:[805,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[807,2,1,""],zeros:[808,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[810,2,1,""],iinfo:[811,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[814,2,1,""],cos:[815,2,1,""],isfinite:[816,2,1,""],isnan:[817,2,1,""],less:[818,2,1,""],logical_not:[819,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[822,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[828,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[831,2,1,""],any:[832,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[834,0,0,"-"],compilation:[873,0,0,"-"],device:[875,0,0,"-"],dtype:[925,0,0,"-"],general:[949,0,0,"-"],gradients:[1048,0,0,"-"],image:[1064,0,0,"-"],linalg:[1071,0,0,"-"],logic:[1078,0,0,"-"],math:[1081,0,0,"-"],meta:[1098,0,0,"-"],multi_node:[1102,0,0,"-"],nest:[1146,0,0,"-"],random:[1158,0,0,"-"],reductions:[1165,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[835,2,1,""],builtin_add:[836,2,1,""],builtin_and:[837,2,1,""],builtin_bool:[838,2,1,""],builtin_contains:[839,2,1,""],builtin_deepcopy:[840,2,1,""],builtin_dir:[841,2,1,""],builtin_eq:[842,2,1,""],builtin_float:[843,2,1,""],builtin_floordiv:[844,2,1,""],builtin_ge:[845,2,1,""],builtin_getattr:[846,2,1,""],builtin_getattribute:[847,2,1,""],builtin_getitem:[848,2,1,""],builtin_gt:[849,2,1,""],builtin_int:[850,2,1,""],builtin_invert:[851,2,1,""],builtin_le:[852,2,1,""],builtin_lt:[853,2,1,""],builtin_mul:[854,2,1,""],builtin_ne:[855,2,1,""],builtin_neg:[856,2,1,""],builtin_or:[857,2,1,""],builtin_pos:[858,2,1,""],builtin_pow:[859,2,1,""],builtin_radd:[860,2,1,""],builtin_rand:[861,2,1,""],builtin_rfloordiv:[862,2,1,""],builtin_rmul:[863,2,1,""],builtin_ror:[864,2,1,""],builtin_rpow:[865,2,1,""],builtin_rsub:[866,2,1,""],builtin_rtruediv:[867,2,1,""],builtin_rxor:[868,2,1,""],builtin_setitem:[869,2,1,""],builtin_sub:[870,2,1,""],builtin_truediv:[871,2,1,""],builtin_xor:[872,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[874,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[875,1,1,""],DevClonedItem:[877,1,1,""],DevClonedIter:[878,1,1,""],DevClonedNest:[879,1,1,""],DevDistItem:[880,1,1,""],DevDistIter:[881,1,1,""],DevDistNest:[882,1,1,""],DevManager:[875,1,1,""],DevMapper:[884,1,1,""],DevMapperMultiProc:[885,1,1,""],MultiDev:[875,1,1,""],MultiDevItem:[887,1,1,""],MultiDevIter:[888,1,1,""],MultiDevNest:[889,1,1,""],Profiler:[890,1,1,""],clear_mem_on_dev:[891,2,1,""],default_device:[892,2,1,""],dev:[893,2,1,""],dev_clone:[894,2,1,""],dev_clone_array:[895,2,1,""],dev_clone_iter:[896,2,1,""],dev_clone_nest:[897,2,1,""],dev_dist:[898,2,1,""],dev_dist_array:[899,2,1,""],dev_dist_iter:[900,2,1,""],dev_dist_nest:[901,2,1,""],dev_from_str:[902,2,1,""],dev_to_str:[903,2,1,""],dev_unify:[904,2,1,""],dev_unify_array:[905,2,1,""],dev_unify_iter:[906,2,1,""],dev_unify_nest:[907,2,1,""],dev_util:[908,2,1,""],get_all_arrays_on_dev:[909,2,1,""],gpu_is_available:[910,2,1,""],num_arrays_on_dev:[911,2,1,""],num_cpu_cores:[912,2,1,""],num_gpus:[913,2,1,""],percent_used_mem_on_dev:[914,2,1,""],print_all_arrays_on_dev:[915,2,1,""],set_default_device:[916,2,1,""],set_split_factor:[917,2,1,""],split_factor:[918,2,1,""],split_func_call:[919,2,1,""],to_dev:[920,2,1,""],total_mem_on_dev:[921,2,1,""],tpu_is_available:[922,2,1,""],unset_default_device:[923,2,1,""],used_mem_on_dev:[924,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[875,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[875,3,1,""],da_tune_step:[875,3,1,""],dim_size:[875,3,1,""],ds_tune_step:[875,3,1,""],map:[875,3,1,""],repeated_config_check:[875,3,1,""],tune_step:[875,3,1,""],tuned:[875,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[884,3,1,""],map:[884,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[885,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[875,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[887,3,1,""],items:[887,3,1,""],keys:[887,3,1,""],shape:[887,3,1,""],values:[887,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[888,3,1,""],at_dev:[888,3,1,""],at_devs:[888,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[889,3,1,""],at_dev:[889,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[890,3,1,""],start:[890,3,1,""],stop:[890,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[925,1,1,""],DefaultFloatDtype:[925,1,1,""],DefaultIntDtype:[925,1,1,""],astype:[925,2,1,""],cast:[929,2,1,""],closest_valid_dtype:[930,2,1,""],convert_dtype:[931,2,1,""],default_dtype:[932,2,1,""],default_float_dtype:[933,2,1,""],default_int_dtype:[934,2,1,""],dtype:[935,2,1,""],dtype_bits:[936,2,1,""],dtype_from_str:[937,2,1,""],dtype_to_str:[938,2,1,""],invalid_dtype:[939,2,1,""],is_float_dtype:[940,2,1,""],is_int_dtype:[941,2,1,""],set_default_dtype:[942,2,1,""],set_default_float_dtype:[943,2,1,""],set_default_int_dtype:[944,2,1,""],unset_default_dtype:[945,2,1,""],unset_default_float_dtype:[946,2,1,""],unset_default_int_dtype:[947,2,1,""],valid_dtype:[948,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.general":{"default":[974,2,1,""],abs:[950,2,1,""],all_equal:[951,2,1,""],arange:[952,2,1,""],arg_names:[953,2,1,""],argmax:[954,2,1,""],argmin:[955,2,1,""],array:[956,2,1,""],array_equal:[957,2,1,""],arrays_equal:[958,2,1,""],asarray:[949,2,1,""],assert_supports_inplace:[959,2,1,""],broadcast_to:[960,2,1,""],cache_fn:[961,2,1,""],ceil:[962,2,1,""],clip:[963,2,1,""],clip_matrix_norm:[964,2,1,""],clip_vector_norm:[965,2,1,""],concatenate:[966,2,1,""],constant_pad:[967,2,1,""],container_types:[968,2,1,""],copy_array:[969,2,1,""],cross:[970,2,1,""],cumprod:[971,2,1,""],cumsum:[972,2,1,""],current_framework_str:[973,2,1,""],einops_rearrange:[975,2,1,""],einops_reduce:[976,2,1,""],einops_repeat:[977,2,1,""],equal:[978,2,1,""],exists:[979,2,1,""],expand_dims:[980,2,1,""],flip:[981,2,1,""],floor:[982,2,1,""],floormod:[983,2,1,""],fourier_encode:[984,2,1,""],full:[985,2,1,""],gather:[986,2,1,""],gather_nd:[987,2,1,""],get_all_arrays_in_memory:[988,2,1,""],get_min_base:[989,2,1,""],get_min_denominator:[990,2,1,""],get_num_dims:[991,2,1,""],get_referrers_recursive:[992,2,1,""],has_nans:[993,2,1,""],identity:[994,2,1,""],indices_where:[995,2,1,""],inplace_arrays_supported:[996,2,1,""],inplace_decrement:[997,2,1,""],inplace_increment:[998,2,1,""],inplace_update:[999,2,1,""],inplace_variables_supported:[1000,2,1,""],is_array:[1001,2,1,""],isinf:[1002,2,1,""],linear_resample:[1003,2,1,""],linspace:[1004,2,1,""],logspace:[1005,2,1,""],match_kwargs:[1006,2,1,""],matmul:[1007,2,1,""],maximum:[1008,2,1,""],meshgrid:[1009,2,1,""],minimum:[1010,2,1,""],multiprocessing:[1011,2,1,""],num_arrays_in_memory:[1012,2,1,""],one_hot:[1013,2,1,""],ones:[1014,2,1,""],ones_like:[1015,2,1,""],print_all_arrays_in_memory:[1016,2,1,""],queue_timeout:[1017,2,1,""],repeat:[1018,2,1,""],reshape:[1019,2,1,""],round:[1020,2,1,""],scatter_flat:[1021,2,1,""],scatter_nd:[1022,2,1,""],set_min_base:[1023,2,1,""],set_min_denominator:[1024,2,1,""],set_queue_timeout:[1025,2,1,""],set_tmp_dir:[1026,2,1,""],shape:[1027,2,1,""],shape_to_tuple:[1028,2,1,""],split:[1029,2,1,""],squeeze:[1030,2,1,""],stable_divide:[1031,2,1,""],stable_pow:[1032,2,1,""],stack:[1033,2,1,""],supports_inplace:[1034,2,1,""],swapaxes:[1035,2,1,""],tile:[1036,2,1,""],tmp_dir:[1037,2,1,""],to_list:[1038,2,1,""],to_numpy:[1039,2,1,""],to_scalar:[1040,2,1,""],transpose:[1041,2,1,""],try_else_none:[1042,2,1,""],unstack:[1043,2,1,""],value_is_nan:[1044,2,1,""],where:[1045,2,1,""],zero_pad:[1046,2,1,""],zeros_like:[1047,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1048,1,1,""],adam_step:[1050,2,1,""],adam_update:[1051,2,1,""],execute_with_gradients:[1052,2,1,""],gradient_descent_update:[1053,2,1,""],is_variable:[1054,2,1,""],lamb_update:[1055,2,1,""],lars_update:[1056,2,1,""],optimizer_update:[1057,2,1,""],set_with_grads:[1058,2,1,""],stop_gradient:[1059,2,1,""],unset_with_grads:[1060,2,1,""],variable:[1061,2,1,""],variable_data:[1062,2,1,""],with_grads:[1063,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1048,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1065,2,1,""],float_img_to_uint8_img:[1066,2,1,""],gradient_image:[1067,2,1,""],random_crop:[1068,2,1,""],stack_images:[1069,2,1,""],uint8_img_to_float_img:[1070,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1072,2,1,""],inv:[1073,2,1,""],matrix_norm:[1074,2,1,""],pinv:[1075,2,1,""],svd:[1076,2,1,""],vector_to_skew_symmetric_matrix:[1077,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1079,2,1,""],logical_or:[1080,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1082,2,1,""],acosh:[1083,2,1,""],asin:[1084,2,1,""],asinh:[1085,2,1,""],atan2:[1087,2,1,""],atan:[1086,2,1,""],atanh:[1088,2,1,""],cosh:[1089,2,1,""],divide:[1090,2,1,""],erf:[1091,2,1,""],exp:[1092,2,1,""],log:[1093,2,1,""],sin:[1094,2,1,""],sinh:[1095,2,1,""],tan:[1096,2,1,""],tanh:[1097,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1099,2,1,""],maml_step:[1100,2,1,""],reptile_step:[1101,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1102,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1147,2,1,""],copy_nest:[1148,2,1,""],index_nest:[1149,2,1,""],map:[1150,2,1,""],map_nest_at_index:[1151,2,1,""],map_nest_at_indices:[1152,2,1,""],multi_index_nest:[1153,2,1,""],nested_indices_where:[1154,2,1,""],nested_map:[1155,2,1,""],set_nest_at_index:[1156,2,1,""],set_nest_at_indices:[1157,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1159,2,1,""],randint:[1160,2,1,""],random_normal:[1161,2,1,""],random_uniform:[1162,2,1,""],seed:[1163,2,1,""],shuffle:[1164,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1166,2,1,""],reduce_max:[1167,2,1,""],reduce_mean:[1168,2,1,""],reduce_min:[1169,2,1,""],reduce_prod:[1170,2,1,""],reduce_std:[1171,2,1,""],reduce_sum:[1172,2,1,""],reduce_var:[1173,2,1,""]},"ivy.functional.ivy.nn":{activations:[1175,0,0,"-"],layers:[1183,0,0,"-"],losses:[1196,0,0,"-"],norms:[1200,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1176,2,1,""],leaky_relu:[1177,2,1,""],relu:[1178,2,1,""],sigmoid:[1179,2,1,""],softmax:[1180,2,1,""],softplus:[1181,2,1,""],tanh:[1182,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1184,2,1,""],conv1d_transpose:[1185,2,1,""],conv2d:[1186,2,1,""],conv2d_transpose:[1187,2,1,""],conv3d:[1188,2,1,""],conv3d_transpose:[1189,2,1,""],depthwise_conv2d:[1190,2,1,""],dropout:[1191,2,1,""],linear:[1192,2,1,""],lstm_update:[1193,2,1,""],multi_head_attention:[1194,2,1,""],scaled_dot_product_attention:[1195,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1197,2,1,""],cross_entropy:[1198,2,1,""],sparse_cross_entropy:[1199,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1201,2,1,""]},"ivy.graph_compiler":{compiler:[1202,0,0,"-"],globals:[1205,0,0,"-"],graph:[1208,0,0,"-"],helpers:[1210,0,0,"-"],op_logging:[1211,0,0,"-"],param:[1212,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1203,2,1,""],show_graph:[1204,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1206,2,1,""],log_global_inference_rel_times:[1207,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1208,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1208,3,1,""],add_fn_to_dict:[1208,3,1,""],add_param:[1208,3,1,""],compiled:[1208,3,1,""],connect:[1208,3,1,""],debug_info:[1208,3,1,""],get_param:[1208,3,1,""],get_param_recursive:[1208,3,1,""],include_generators:[1208,3,1,""],increment_param_count:[1208,3,1,""],log_all_ops:[1208,3,1,""],params_all_empty:[1208,3,1,""],save_debug_info:[1208,3,1,""],set_param:[1208,3,1,""],show:[1208,3,1,""],show_debug_info:[1208,3,1,""],update_inference_times:[1208,3,1,""],with_array_caching:[1208,3,1,""]},"ivy.graph_compiler.param":{Param:[1212,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1212,3,1,""],count:[1212,3,1,""],depth:[1212,3,1,""],get:[1212,3,1,""],is_var:[1212,3,1,""],ptype:[1212,3,1,""],set:[1212,3,1,""],set_count:[1212,3,1,""],shape:[1212,3,1,""]},"ivy.stateful":{activations:[1217,0,0,"-"],converters:[1220,0,0,"-"],initializers:[1222,0,0,"-"],layers:[1231,0,0,"-"],module:[1243,0,0,"-"],norms:[1245,0,0,"-"],optimizers:[1247,0,0,"-"],sequential:[1253,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1218,1,1,""],GELU:[1219,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1218,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1219,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1221,2,1,""]},"ivy.stateful.initializers":{Constant:[1222,1,1,""],FirstLayerSiren:[1224,1,1,""],GlorotUniform:[1225,1,1,""],KaimingNormal:[1222,1,1,""],Ones:[1227,1,1,""],Siren:[1228,1,1,""],Uniform:[1222,1,1,""],Zeros:[1230,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1222,3,1,""],create_variables:[1222,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1224,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1225,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1222,3,1,""],create_variables:[1222,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1227,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1228,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1222,3,1,""],create_variables:[1222,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1230,3,1,""]},"ivy.stateful.layers":{Conv1D:[1232,1,1,""],Conv1DTranspose:[1233,1,1,""],Conv2D:[1234,1,1,""],Conv2DTranspose:[1235,1,1,""],Conv3D:[1236,1,1,""],Conv3DTranspose:[1237,1,1,""],DepthwiseConv2D:[1238,1,1,""],Dropout:[1239,1,1,""],LSTM:[1240,1,1,""],Linear:[1241,1,1,""],MultiHeadAttention:[1242,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1232,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1233,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1234,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1235,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1236,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1237,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1238,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1239,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1240,3,1,""],get_initial_state:[1240,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1241,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1242,3,1,""]},"ivy.stateful.module":{Module:[1244,1,1,""]},"ivy.stateful.module.Module":{__init__:[1244,3,1,""],build:[1244,3,1,""],build_mode:[1244,3,1,""],built:[1244,3,1,""],check_submod_rets:[1244,3,1,""],compile_graph:[1244,3,1,""],compile_on_next_step:[1244,3,1,""],get_mod_key:[1244,3,1,""],mod_depth:[1244,3,1,""],mod_height:[1244,3,1,""],mod_with_top_mod_key_chain:[1244,3,1,""],save_weights:[1244,3,1,""],show_graph:[1244,3,1,""],show_mod_in_top_mod:[1244,3,1,""],show_structure:[1244,3,1,""],show_v_in_top_v:[1244,3,1,""],sub_mods:[1244,3,1,""],track_submod_call_order:[1244,3,1,""],track_submod_rets:[1244,3,1,""],v_with_top_v_key_chains:[1244,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1246,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1246,3,1,""]},"ivy.stateful.optimizers":{Adam:[1248,1,1,""],LAMB:[1249,1,1,""],LARS:[1250,1,1,""],Optimizer:[1251,1,1,""],SGD:[1252,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1248,3,1,""],set_state:[1248,3,1,""],state:[1248,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1249,3,1,""],set_state:[1249,3,1,""],state:[1249,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1250,3,1,""],set_state:[1250,3,1,""],state:[1250,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1251,3,1,""],compile_graph:[1251,3,1,""],compile_on_next_step:[1251,3,1,""],set_state:[1251,3,1,""],show_graph:[1251,3,1,""],step:[1251,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1252,3,1,""],set_state:[1252,3,1,""],state:[1252,3,1,""]},"ivy.stateful.sequential":{Sequential:[1254,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1254,3,1,""]},"ivy.verbosity":{cprint:[1259,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1258,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1247,1248,1249],"02886":1214,"100":[1102,1214,1256],"141592653589793":805,"2021":1214,"2102":1214,"360":[813,815,1081,1094,1096],"718281828459045":805,"754":[805,809,810],"999":[1048,1050,1051,1055,1247,1248,1249],"abstract":[875,890,1214,1247,1251],"boolean":[40,41,813,814,817,819,875,910,922,925,939,948,949,951,957,958,993,995,996,1000,1001,1002,1034,1044,1048,1054,1078,1079,1080,1098,1099,1100,1102],"break":43,"case":[15,18,19,40,41,42,43,821,822,875,914,921,924,949,952,1019,1021,1022,1071,1074,1102,1146,1149,1153,1214,1231,1242,1243,1244,1247,1251,1260],"catch":[949,974],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,382,417,418,809,811,875,877,878,879,880,881,882,884,885,887,888,889,890,902,903,925,949,953,1006,1048,1062,1102,1146,1148,1155,1196,1198,1199,1208,1212,1214,1217,1218,1219,1220,1221,1222,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1260],"default":[15,18,19,40,41,42,43,806,807,808,821,822,827,828,830,831,832,873,874,875,884,885,892,893,897,898,899,900,901,904,905,906,907,914,917,918,919,924,925,932,933,934,935,949,951,952,954,955,964,965,966,967,970,971,972,981,984,985,986,991,993,994,1003,1005,1006,1009,1011,1014,1017,1018,1021,1022,1025,1027,1029,1031,1032,1041,1043,1044,1048,1051,1053,1054,1055,1056,1057,1059,1063,1071,1074,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1158,1159,1161,1162,1165,1167,1168,1169,1170,1171,1172,1173,1175,1176,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254],"final":[40,41,949,984,1004,1005,1102,1231,1242,1257],"float":[40,41,42,43,805,806,807,808,809,810,821,822,834,853,859,875,884,885,908,914,917,921,924,925,933,940,949,952,964,965,967,984,985,989,990,1005,1023,1024,1025,1031,1032,1048,1050,1051,1053,1055,1056,1057,1064,1066,1070,1081,1090,1098,1099,1100,1101,1102,1158,1161,1162,1175,1177,1183,1191,1194,1195,1196,1197,1198,1199,1200,1201,1231,1239,1242,1245,1246,1247,1248,1249,1250,1251,1252],"function":[15,40,41,43,380,381,384,385,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,805,807,808,810,811,814,815,816,817,818,819,821,822,828,831,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,884,885,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1214,1217,1218,1219,1247,1250,1251,1252,1256,1257,1260],"import":[43,1214,1257,1260],"int":[40,41,42,43,379,380,381,469,806,807,808,809,810,811,821,822,827,828,830,831,832,834,853,859,873,874,875,897,898,899,900,901,904,905,906,907,912,913,919,925,934,936,941,949,954,955,960,966,967,971,972,975,976,977,980,981,984,985,986,991,994,1003,1004,1005,1013,1014,1018,1019,1021,1022,1027,1028,1029,1030,1033,1035,1036,1041,1043,1046,1048,1050,1051,1055,1064,1068,1069,1071,1074,1098,1099,1100,1101,1102,1146,1155,1158,1159,1160,1162,1163,1165,1167,1168,1169,1170,1171,1172,1173,1175,1180,1183,1184,1185,1186,1187,1188,1189,1190,1194,1196,1198,1199,1200,1201,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1245,1246],"long":[1183,1193],"new":[40,41,43,469,806,807,808,925,929,949,950,960,975,976,977,980,984,985,986,987,1014,1019,1021,1022,1023,1024,1031,1032,1033,1048,1051,1053,1055,1056,1057,1064,1066,1068,1070,1081,1083,1085,1088,1089,1095,1097,1102,1146,1156,1157,1158,1159,1200,1201,1214,1220,1221,1231,1241,1245,1246,1247,1248,1249,1250,1251,1252,1257,1260],"public":[949,968],"return":[15,16,17,18,19,40,41,42,43,469,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,834,853,859,873,874,875,884,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,910,911,913,914,918,919,920,921,922,924,925,929,930,931,932,933,934,935,936,937,938,939,940,941,948,949,950,951,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1018,1019,1020,1021,1022,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1059,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1214,1220,1221,1231,1240,1241,1247,1251,1256,1257,1260],"short":[1183,1193,1214,1260],"static":[40,41,873,874],"super":1102,"true":[40,41,42,419,425,454,457,469,470,813,816,821,822,827,828,830,831,832,873,874,875,949,951,959,961,979,984,993,995,1044,1045,1048,1051,1053,1054,1055,1056,1057,1059,1071,1074,1098,1099,1100,1101,1102,1146,1147,1154,1158,1159,1165,1167,1168,1169,1170,1171,1172,1173,1175,1176,1183,1191,1196,1197,1198,1199,1202,1203,1204,1208,1231,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],"try":[40,41,949,1042,1102],"var":[40,41,1098,1099,1100,1260],"while":[40,41,42,1102],AND:[813,814,830,831,1078,1079],But:1260,For:[43,949,952,963,1033,1048,1054,1062,1081,1082,1214,1220,1221,1257,1260],Its:[1081,1086],NOT:[813,819],One:[40,41,949,976,1019,1158,1160,1260],Ones:[1214,1222],Such:[949,968],That:1257,The:[15,16,17,18,19,40,41,42,43,813,814,815,816,818,827,828,830,831,832,834,853,859,873,874,875,884,885,891,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,914,917,918,919,920,921,924,925,929,930,931,936,937,938,939,948,949,952,956,957,960,961,964,965,966,967,969,970,973,974,978,981,984,986,987,994,997,998,999,1001,1003,1005,1007,1009,1011,1014,1015,1018,1019,1021,1022,1023,1024,1025,1028,1029,1030,1031,1032,1033,1036,1044,1047,1048,1050,1051,1053,1055,1056,1057,1059,1062,1064,1066,1068,1070,1071,1074,1076,1081,1082,1084,1086,1090,1091,1092,1093,1094,1096,1098,1099,1100,1101,1102,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1214,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1257,1260],There:[43,1214,1257],These:[43,1214],Used:[1146,1147,1154,1243,1244],Using:[1214,1215,1260],With:[40,41,821,822,1071,1074,1165,1167,1168,1169,1170,1171,1172,1173,1214,1256,1260],__array__:[949,956],__call__:[1231,1242,1243,1244],__del__:1102,__dict__:[1102,1257],__enter__:1102,__exit__:1102,__getitem__:1102,__getstate__:1102,__init__:[40,41,42,43,59,60,81,204,382,383,417,418,498,620,875,876,883,884,885,886,887,888,889,890,925,926,927,928,1048,1049,1102,1106,1113,1208,1209,1212,1213,1214,1217,1218,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1260],__iter__:1102,__len__:1102,__next__:1102,__pow__:43,__repr__:1102,_assign_vari:1256,_axi:1102,_base:[1146,1147,1154],_compute_node_da_ratio:1102,_compute_node_strs_da:1102,_concat_unify_arrai:1102,_counter:1102,_cur_framework:[43,1102],_da_direct:1102,_da_directions_flip:1102,_da_step_tim:1102,_da_tim:1102,_da_tune_count:1102,_data:1102,_delta_da_dim_s:1102,_delta_sf:1102,_dict:1102,_dim_siz:1102,_first_da_tune_step:1102,_first_ns_tune_step:1102,_fn:1102,_forward:[1214,1256],_get_kalman_param:1260,_get_prior:1260,_get_some_model:1260,_handle_flat_arrays_in_out:43,_index:[1146,1147,1154],_input_queu:1102,_length:1102,_max_depth:1102,_max_node_dim_step_ratio:1102,_max_node_dim_step_s:1102,_max_split_factor_step_s:1102,_mean_unify_arrai:1102,_min_bas:[949,1032,1200,1201,1245,1246],_min_denomin:[949,1031],_min_node_dim_s:1102,_min_sf_tune_step:1102,_min_unit_node_tune_step:1102,_model:1260,_native_wrapp:43,_node_mapp:1102,_node_percent_mem:1102,_node_str:1102,_node_str_da_ratio:1102,_node_strs_da:1102,_node_strs_kei:1102,_node_strs_n:1102,_node_util:1102,_ns_step_tim:1102,_ns_time:1102,_ns_tune_count:1102,_num_nod:1102,_num_work:1102,_observed_config:1102,_output_queu:1102,_paramet:1256,_percent_mem_inc_per_sf:1102,_percent_mem_inc_per_unit_da_dim:1102,_percent_util_inc_per_unit_da_dim:1102,_ret_fn:1102,_safety_factor:1102,_save_dir:1102,_shift_da_split:1102,_shift_n:1102,_slice:1102,_step:[1247,1251],_sum_unify_arrai:1102,_timeout:1102,_tune:1102,_tune_da:1102,_tune_n:1102,_tune_step:1102,_unit_da_tune_count:1102,_unroll_step:1260,_with_node_mappig:1102,_worker:1102,_worker_class:1102,_worker_fn:1102,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,875,884,890,1102,1243,1244,1247,1251],abil:1214,abl:[40,41],about:[809,810,811],abov:[43,1158,1160],above_height:[40,41],abs:[282,419,540,663,949,1102],absolut:[40,41,949,950],abstractmethod:1102,accept:[15,43,1214],access:[40,41,1257],accord:[40,41,809,810,949,967,986,1021,1022,1041,1046],accordingli:[830,831,832],accur:[59,382,417,418,875,887,888,889,890,925,1048,1208,1212,1222,1224,1225,1227,1228,1230],aco:[752,1081],acosh:[752,1081],across:[40,41,875,884,885,894,895,897,898,899,900,901,907,917,918,949,954,955,957,958,1102,1146,1150],activ:[1176,1177,1178,1179,1180,1181,1182,1214,1218,1219],actual:1257,adam:[1048,1050,1051,1055,1214,1247,1249,1256],adam_step:1048,adam_upd:1048,adapt:[1048,1056,1247,1250],add:[40,41,43,1102,1196,1197,1198,1199,1200,1201,1214,1245,1246,1257],add_fn_to_dict:1208,add_param:1208,added:[43,949,1031,1032,1253,1254],adding:[949,960],addit:[40,41,43,949,975,976,977,1200,1201,1231,1241],adher:43,adjac:[949,952],adopt:[949,968],affect:[949,952],affin:[1245,1246],after:[949,1003,1048,1051,1052,1053,1055,1056,1057,1064,1065,1200,1201,1247,1248,1249,1250,1251,1252,1260],after_1:[949,967,1046],after_n:[949,967,1046],again:43,against:[40,41,821,822,1071,1074,1165,1167,1168,1169,1170,1171,1172,1173],agnost:[43,1214,1256,1257],aim:1260,algebra:[463,1071],algorithm:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238,1260],align:[40,41,43,949,960],aliv:[875,909,911,915,949,988,1012,1016],all:[15,16,17,18,19,40,41,43,102,224,404,519,641,830,873,874,875,884,909,915,949,950,951,957,958,968,981,988,994,1016,1030,1098,1099,1100,1101,1102,1146,1147,1148,1154,1155,1158,1159,1162,1165,1167,1168,1169,1170,1171,1172,1173,1183,1193,1214,1257,1260],all_depth:[40,41],all_equ:949,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1146,all_tru:[40,41],alloc:[875,1102],allow:[949,1004,1005,1006,1243,1244],allow_dupl:[949,1006],alon:[875,914,924,1102,1214],along:[40,41,43,469,821,822,827,828,830,831,832,875,898,899,900,901,904,905,906,907,919,949,966,971,972,981,986,1003,1004,1005,1018,1029,1033,1036,1043,1071,1074,1098,1099,1100,1101,1102,1158,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173],alongsid:[1256,1257],alpha:[1175,1177],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,875,1102],also:[40,41,43,949,952,1048,1051,1098,1099,1100,1101,1146,1147,1148,1154,1155,1183,1192,1231,1241,1256],altern:1256,alwai:[40,41,43,1048,1054,1059],among:[40,41],amount:[875,921,1102,1214],angl:[1081,1082,1087],ani:[15,16,17,18,19,40,41,43,102,224,404,519,641,830,873,874,875,877,880,884,885,887,896,897,900,901,906,949,951,952,956,974,975,976,977,978,979,993,1001,1006,1031,1032,1048,1052,1102,1146,1147,1150,1154,1155,1156,1157,1158,1162,1214,1220,1221,1243,1244,1256,1257,1260],anoth:[40,41,925,931,1214],another_backend:43,anyth:[43,1260],anywai:43,apart:43,api:[1214,1215],appear:[949,980],append:[40,41,1102],appli:[15,18,19,40,41,813,819,949,975,976,977,1048,1055,1056,1071,1076,1078,1079,1080,1098,1099,1100,1146,1150,1153,1155,1175,1176,1177,1178,1179,1180,1181,1182,1183,1192,1194,1195,1200,1201,1214,1217,1218,1219,1245,1246],applic:[1146,1150,1155,1183,1194,1195,1214,1260],approxim:[43,834,859,1175,1176],arang:[122,282,419,469,540,663,949,1004,1005],arbitrari:[40,41,875,904,905,907,1102],arc:[1081,1087],arcco:[1081,1082],arctan:[1081,1086],area:1214,arg:[15,16,17,40,41,43,59,63,875,884,897,901,907,919,949,975,976,977,1022,1102,1202,1203,1204,1208,1220,1221,1243,1244],arg_nam:949,arg_stateful_idx:[1202,1203,1204,1208,1243,1244],argmax:[122,419,540,663,949],argmin:[122,419,540,663,949],args_clon:1102,args_dist:1102,args_to_ivi:[15,1214],args_to_n:[15,1214],args_uni:1102,argsort:[99,221,401,516,638,827],argument:[15,16,17,18,19,40,41,42,43,59,63,873,874,875,884,885,897,901,907,949,952,953,961,974,1006,1022,1081,1082,1102,1146,1150,1220,1221,1243,1244],aris:[1214,1260],arithmet:[43,1165,1168,1171,1173],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:469,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,122,282,419,469,540,663,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,853,859,875,893,894,895,898,899,900,901,904,905,906,907,909,911,915,919,920,925,929,935,940,941,949,950,951,952,954,955,957,958,959,960,962,963,964,965,966,967,969,970,971,972,975,976,977,978,980,981,982,983,984,985,986,987,988,991,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1027,1029,1030,1033,1034,1035,1036,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1050,1051,1054,1055,1059,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1102,1146,1148,1155,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1214,1215,1231,1239,1240,1242,1247,1251,1256,1257],arrang:[949,975],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,379,380,381,382,384,385,805,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832],array_builtin:[43,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872],array_equ:[282,663,949],array_lik:[469,949,956],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,949],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1214],arraywithgener:[22,1214],arraywithgradi:[24,1214],arraywithimag:[26,1214],arraywithlinalg:[28,1214],arraywithlog:[30,1214],arraywithmath:[32,1214],arraywithmeta:[34,1214],arraywithrandom:[36,1214],arraywithreduct:[38,1214],arriv:[40,41,42],articl:1214,arxiv:1214,as_arrai:[40,41,949,991,1027],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[417,419,428,875,893,925,932,933,934,935],as_tensor:419,as_vari:[40,41],as_zero:[40,41],asarrai:[419,949],asin:[752,1081],asinh:[752,1081],aspect:[1064,1069],assert:[40,41,949,959,1102],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:949,associ:[43,1071,1077],assum:[1257,1260],astyp:[419,925],asynchron:[40,41,42],at_dev:[40,42,875,888,889],at_kei:[40,41],at_key_chain:[40,41],at_nod:1102,atan2:[752,1081],atan:[752,1081],atanh:[752,1081],attent:[1183,1194,1195,1231,1242],attribut:[0,6,40,41,809,810,811,949,1015,1047],audienc:[1214,1257],author:1214,avail:[40,41,875,910,912,913,922,949,976,1102],averag:[1048,1050,1051,1055,1098,1099,1100,1165,1168],average_across_step:[1098,1099,1100],avoid:[875,1102,1257],axes:[40,41,43,419,451,463,464,821,822,830,831,832,875,919,949,954,955,967,980,981,1035,1041,1046,1071,1074,1102,1165,1167,1168,1169,1170,1171,1172,1173],axes_length:[40,41,949,975,976,977],axi:[40,41,419,421,422,426,427,432,434,442,443,444,449,450,452,821,822,827,828,830,831,832,875,877,880,887,898,899,900,901,904,905,906,907,919,949,954,955,966,967,970,971,972,980,981,986,1003,1004,1005,1018,1029,1030,1033,1035,1036,1043,1046,1102,1158,1164,1165,1167,1168,1169,1170,1171,1172,1173,1175,1180,1196,1198,1199],axis0:[40,41,949,1035],axis1:[40,41,949,1035],back:[1243,1244,1247,1251],backend:[15,17,19,40,41,379,380,381,382,384,385,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,875,910,913,922,925,931,939,948,949,996,1000,1048,1051,1053,1055,1056,1057,1062,1102,1214,1215,1220,1221,1247,1248,1249,1250,1251,1252,1256,1257,1260],background:[1214,1257],backprop:1260,backward:[830,831,832,1256],band:[949,984],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,382,417,418,419,444,834,859,875,877,878,879,880,881,882,884,885,887,888,889,890,925,949,989,1005,1023,1032,1048,1102,1165,1166,1208,1212,1214,1217,1218,1219,1222,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1260],batch:[40,41,875,917,918,949,981,984,994,1064,1068,1071,1076,1098,1099,1100,1101,1102,1183,1192,1200,1201,1245,1246],batch_shap:[419,432,436,949,981,994,1013,1064,1065,1066,1067,1068,1069,1070,1071,1077,1158,1159,1183,1193,1194,1195,1231,1240],batch_siz:[469,470,1102,1158,1159,1183,1184,1185,1186,1187,1188,1189,1190],bayesian:1260,becaus:[43,949,952],becom:[949,963,1081,1087,1260],been:[949,975,976,977,1158,1159],befor:[40,41,43,875,919,1098,1099,1100,1102,1146,1155,1165,1167,1168,1169,1170,1171,1172,1173,1183,1194,1195,1260],before_1:[949,967,1046],before_n:[949,967,1046],begin:[1146,1147,1154,1257],behaviour:[43,1260],behind:[1048,1051,1053,1055,1056,1057,1214],being:[40,41,43,949,952,1017,1025,1102],belong:[40,41],below:[43,1214,1257,1260],below_depth:[40,41],benefit:1214,bernoul:[1183,1191,1231,1239],best:[949,1006,1214],beta1:[1048,1050,1051,1055,1247,1248,1249],beta2:[1048,1050,1051,1055,1247,1248,1249],beta:[1200,1201],between:[40,41,42,809,810,949,952,1146,1150,1158,1160,1196,1198,1199,1247,1249],bia:[1183,1192,1193,1231,1232,1233,1234,1235,1236,1237,1238,1241],bias_initi:[1231,1232,1233,1234,1235,1236,1237,1238,1241],bilinear:[1064,1065],bilinear_resampl:[159,338,459,584,738,1064],bilinearli:[1064,1065],binari:[813,814,1196,1197],binary_cross_entropi:1196,bit:[382,809,810,811,925,936,1064,1066,1070,1214],bitwis:[813,814],bitwise_and:[85,208,387,502,624,813],bitwise_oper:[0,7,8],block:[1214,1257],bool:[15,18,19,40,41,42,43,813,816,818,821,822,827,828,830,831,832,834,853,873,874,875,893,906,910,914,919,922,924,925,935,949,951,957,958,971,974,978,979,984,991,993,1001,1006,1027,1029,1043,1044,1045,1048,1051,1052,1053,1054,1055,1056,1057,1059,1071,1074,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1158,1159,1165,1167,1168,1169,1170,1171,1172,1173,1175,1176,1183,1191,1220,1221,1231,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],both:[43,949,970],bottom:1214,boundari:[40,41,1158,1162],branch:[873,874],brittl:43,broadcast:[40,41,43,813,814,821,822,830,831,832,834,853,859,949,960,978,1008,1009,1010,1018,1071,1074,1081,1087,1090,1165,1167,1168,1169,1170,1171,1172,1173],broadcast_to:[282,663,949],build:[1102,1214,1231,1242,1243,1244],build_mod:[1231,1242,1243,1244],builder:1214,built:[875,949,952,1102,1231,1242,1243,1244],builtin:43,builtin_ab:[237,834],builtin_add:[237,834],builtin_and:[237,834],builtin_bool:[237,834],builtin_contain:[237,834],builtin_deepcopi:[237,834],builtin_dir:[237,834],builtin_eq:[237,834],builtin_float:[237,834],builtin_floordiv:[237,834],builtin_g:[237,834],builtin_getattr:[237,834],builtin_getattribut:[237,834],builtin_getitem:[237,834],builtin_gt:[237,834],builtin_int:[237,834],builtin_invert:[237,834],builtin_l:[237,834],builtin_lt:[237,528,650,834],builtin_mul:[237,834],builtin_n:[237,834],builtin_neg:[237,834],builtin_or:[237,834],builtin_po:[237,834],builtin_pow:[43,237,834],builtin_radd:[237,834],builtin_rand:[237,834],builtin_rfloordiv:[237,834],builtin_rmul:[237,834],builtin_ror:[237,834],builtin_rpow:[237,834],builtin_rsub:[237,834],builtin_rtruediv:[237,834],builtin_rxor:[237,834],builtin_setitem:[237,834],builtin_some_op:43,builtin_sub:[237,834],builtin_truediv:[237,834],builtin_xor:[237,834],bypass:1257,cach:[875,891,949,961],cache_fn:949,calcul:[40,41,42,43,834,859,1081,1090],call:[43,875,919,949,1017,1025,1042,1048,1052,1102,1146,1147,1150,1154,1231,1242,1243,1244,1247,1251,1257,1260],callabl:[40,41,873,874,875,884,885,919,949,961,974,976,1006,1042,1098,1099,1100,1101,1102,1146,1150,1151,1152,1154,1155,1183,1194],can:[43,875,917,918,919,949,1019,1064,1066,1102,1214,1256,1257,1260],cancel_join_thread:1102,captur:1214,cast:[40,41,122,282,419,540,663,925,949,966,1064,1066,1070],catch_except:[949,974],categori:43,ceil:[282,419,663,949,952],cell:[1183,1193,1231,1240],certain:[40,41,949,952,1004,1005],chain:[40,41,1098,1099,1100,1253,1254],chang:[875,949,1019,1102,1146,1148,1155,1214,1256],channel:[949,984,1064,1066,1067,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241],check:[15,16,17,18,19,40,41,875,914,924,925,930,939,948,949,959,979,993,1001,1034,1044,1048,1054,1102,1146,1147,1154,1214,1257],check_nest:[1146,1154],check_shap:[40,41],check_submod_ret:[1243,1244],check_typ:[40,41],choic:[1214,1257],choleski:[742,1071],choos:[949,1045,1081,1087,1214],choose_random_framework:59,chosen:[40,41,949,952,1045],chunk:[875,917,918,919,1102],chunk_siz:[875,919,1102],circl:[1081,1082,1084],clark:1214,clear:[875,891,1102],clear_framework_stack:59,clear_mem_on_dev:[417,655,875],click:1214,clip:[40,41,282,419,663,949,964,965,1008,1010,1214],clip_matrix_norm:949,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,949],clipped_delta:1102,clone:[40,41,875,894,895,896,897,1102],clone_arrai:1102,clone_it:1102,clone_nest:1102,clonedit:1102,cloneditem:1102,clonednest:1102,close:[43,1064,1069,1081,1084,1102,1260],closest:[925,930],closest_valid_dtyp:925,code:[40,41,42,43,469,1214,1215,1256,1257],codebas:[875,917,918,1102,1214,1257,1260],collect:[15,40,41,417,419,454,459,463,466,467,469,834,873,875,925,949,1048,1064,1071,1078,1081,1102,1146,1158,1165,1175,1183,1196,1200,1217,1231,1245,1247],color:[40,41,42,1258,1259],column:[949,994],combin:[40,41,42,1064,1069,1214,1260],combined_batch_s:1102,come:1257,command:1214,commit:1260,common:[40,41,1081,1087],common_key_chain:[40,41],commun:[1214,1257],compar:[40,41,949,951,957,958],comparison_oper:[0,9,10],compat:[43,813,814,830,831,832,834,853,859,949,978,1019,1081,1090,1214,1260],compil:[282,419,663,1203,1204,1208,1214,1243,1244,1247,1248,1249,1250,1251,1252],compile_graph:[1202,1214,1243,1244,1247,1251],compile_on_next_step:[1243,1244,1247,1248,1249,1250,1251,1252],complet:[40,41,1102],complex:[1257,1260],compon:[949,970],composit:43,comput:[40,41,813,814,815,818,819,821,822,834,853,875,919,949,964,965,971,972,978,1007,1048,1050,1051,1052,1053,1055,1056,1057,1059,1061,1064,1067,1071,1072,1073,1074,1075,1078,1079,1080,1081,1082,1084,1086,1087,1091,1092,1093,1094,1096,1146,1150,1165,1166,1167,1168,1169,1170,1171,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1192,1194,1196,1197,1198,1199],concat:[40,41,875,904,905,906,907,919,949,984,1102],concaten:[40,41,122,282,419,540,663,949,984,1102,1214],concatten:[40,41,875,904,905,906,907,919,1102],condit:[419,873,874,949,1045,1146,1154],conditon:[1146,1154],config:[40,41,1102],config_list:1102,configur:[40,41],conjunct:1257,connect:[1208,1231,1241,1242],consid:[40,41,821,822,1256,1260],consist:[40,41,875,907,1102,1165,1166,1243,1244,1257],constant:[875,884,885,949,967,1102,1146,1150,1196,1197,1198,1199,1200,1201,1222,1223,1227,1230,1243,1244,1245,1246,1257],constant_kwarg:1102,constant_pad:[282,419,540,663,949],constitu:[40,41],construct:[949,1036,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256],constructor:[40,41,42,949,953,1253,1254],consum:[875,1102],cont_feat_dim:[1183,1194],contaienr:[40,41],contain:[15,18,19,42,43,806,807,808,813,814,816,818,827,828,830,831,832,834,853,859,875,894,898,919,925,929,949,950,954,955,963,964,965,968,978,993,1008,1010,1020,1031,1032,1048,1050,1051,1053,1055,1056,1057,1081,1090,1098,1099,1100,1101,1102,1158,1159,1165,1167,1168,1169,1171,1173,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[419,663,949],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[419,949,1011,1183,1194,1231,1242],context_dim:[1231,1242],contextmanag:[59,60],continu:[43,1102,1257],contract:[40,41,1165,1166],contribut:[1214,1215],contributor:1214,control:1214,conv1d:[189,368,483,795,1183,1214,1231],conv1d_transpos:[189,368,483,795,1183],conv1dtranspos:[1214,1231],conv2d:[189,368,483,609,795,1183,1214,1231],conv2d_transpos:[189,368,483,795,1183],conv2dtranspos:[1214,1231],conv3d:[189,368,483,609,795,1183,1214,1231],conv3d_transpos:[189,368,483,795,1183],conv3dtranspos:[1214,1231],convent:[40,41,1165,1166],conver:[875,891,902,914,921,924,1102],convers:[16,17,18,19,40,41,1102,1214],convert:[15,16,17,18,19,40,41,43,875,902,903,925,931,937,938,949,1028,1039,1040,1064,1066,1070,1071,1077,1102,1146,1148,1155,1214,1221],convert_dtyp:925,convolut:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],cool:43,cooler:43,coordin:[949,1009,1081,1082,1084,1087],copi:[40,41,469,949,969,1102,1146,1148],copy_arrai:[419,663,949],copy_nest:1146,core:[417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,884,885,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1214],correct:[43,1214,1257],correctli:[40,41,821,822,1071,1074,1081,1087,1165,1167,1168,1169,1170,1171,1172,1173],correspond:[40,41,43,834,859,949,966,1158,1159],cos:[85,387,502,624,813,949,984,1081,1082,1096,1257],cosh:[752,1081],cosin:[813,815,1081,1082,1083,1089],cost:[1048,1050,1051,1053,1055,1056,1057,1098,1099,1100,1101],cost_fn:[1098,1101],could:1260,count:[40,41,830,831,832,1102,1165,1170,1172,1212],cprint:1258,cpu:[40,41,43,875,912,914,920,921,924,949,952,956,986,987,994,1004,1005,1013,1014,1015,1021,1022,1047,1102,1158,1159,1160,1161,1162,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1256,1257],creat:[40,41,806,807,808,875,884,885,949,952,956,985,986,987,994,1004,1005,1013,1014,1015,1021,1022,1038,1047,1048,1061,1102,1158,1159,1160,1161,1162,1214,1220,1221,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1260],create_if_abs:[40,41],create_vari:1222,creation:[40,41,42,43],creation_funct:[379,380,381,806,807,808],crop:[1064,1068],crop_siz:[1064,1068],cross:[282,663,949,1196,1197,1198,1199],cross_entropi:1196,cuda:[40,41,875,884,903,920,949,952,956,986,987,994,1004,1005,1013,1014,1015,1021,1022,1047,1102,1158,1159,1160,1161,1162,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254],cumprod:[122,282,419,663,949],cumsum:[663,949],cumul:[949,971,972],current:[40,41,42,43,875,884,908,909,911,915,925,931,939,948,949,973,988,996,1000,1012,1016,1102,1146,1147,1154,1214,1260],current_framework:59,current_framework_str:[419,663,949,1102],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1208,d_in:[1183,1184,1185,1186,1187,1188,1189],d_out:[1183,1184,1185,1186,1187,1188,1189],da_can_termin:1102,da_dim_s:[875,1102],da_direct:1102,da_tune_step:[875,1102],dai:1260,daniel:1214,data:[40,41,42,43,806,807,808,810,811,813,814,816,818,830,831,832,834,853,859,875,877,878,879,880,881,882,887,888,889,903,925,929,930,931,935,936,937,938,939,940,941,948,949,952,956,978,985,994,1001,1014,1015,1019,1030,1034,1047,1048,1054,1062,1081,1090,1102,1183,1192,1214],data_format:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],data_type_funct:[382,384,385,809,810,811],dataset:[40,41],datatyp:[40,41,925,930,940,941],dcdw:[1048,1050,1051,1053,1055,1056],debug_info:1208,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1048,1055,1056,1247,1249,1250],decay_lambda:[1048,1055,1056,1247,1249,1250],decid:[40,41,1260],decompos:[1071,1072],decomposit:[1071,1072,1076],decor:43,decrement:[949,997],dedic:[1048,1062,1220,1221],deep:[40,41,1214],deep_copi:[40,41],deeper:[875,897,901,907,1102,1146,1155,1214],deepli:[1146,1148],def:[43,60,81,204,383,498,620,876,883,886,926,927,928,1049,1102,1106,1113,1209,1213,1214,1223,1226,1229,1256,1257,1260],default_dev:43,default_devic:875,default_dtyp:[43,925],default_float_dtyp:925,default_int_dtyp:925,default_key_color:[40,41,42],default_nod:1102,default_rng:469,default_v:[949,974],defaultdevic:[875,876],defaultdtyp:[925,926],defaultfloatdtyp:[925,927],defaultintdtyp:[925,928],defer:43,defin:[43,949,970,1013,1015,1047,1158,1160],degre:[813,815,1081,1094,1096],del:1102,delta:[1048,1050,1102,1208],delta_dim_s:1102,delta_percent_mem:1102,delta_sf:1102,delta_util:1102,demo:1214,denomin:[949,983,990,1024,1031,1032,1200,1201,1245,1246],dens:[1231,1241],depend:[43,834,859,949,1045,1071,1076,1214],depth:[40,41,419,445,875,897,901,907,949,992,1013,1102,1146,1155,1208,1212,1243,1244],depth_cutoff:[40,41],depthwis:[1183,1190,1231,1238],depthwise_conv2d:[189,368,483,609,795,1183],depthwiseconv2d:[1214,1231],deriv:[1048,1050,1051,1053,1055,1056,1057,1146,1148,1155,1214,1243,1247,1251,1253],descend:[827,828,1071,1076],descent:[1048,1053,1247,1252],describ:[40,41,1165,1166],design:[1214,1215],desir:[40,41,875,920,925,929,949,952,956,994,995,1014,1015,1047,1064,1069,1102,1165,1167,1168,1169,1171,1173],desired_aspect_ratio:[459,462,1064,1069],desired_percent_increas:1102,detail:1260,detect:[40,41,1146,1147,1154],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,813,814,816,830,831,832,834,859,875,910,912,913,922,925,929,930,936,939,940,941,948,949,951,952,956,957,958,993,996,1000,1001,1034,1044,1048,1054,1081,1090,1098,1099,1100,1101,1102,1183,1194],dev:[40,41,42,43,115,276,417,419,420,423,434,435,436,443,444,445,446,447,448,453,469,470,533,655,875,878,879,881,882,884,885,888,889,891,892,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,911,914,915,916,917,918,919,920,921,924,949,952,956,986,987,994,1004,1005,1013,1014,1015,1021,1022,1047,1048,1063,1158,1159,1160,1161,1162,1220,1221,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254],dev_clon:[40,41,875],dev_clone_arrai:875,dev_clone_it:875,dev_clone_nest:875,dev_dist:[40,41,875],dev_dist_arrai:875,dev_dist_it:875,dev_dist_nest:875,dev_from_str:[43,115,276,417,533,655,875],dev_mapp:875,dev_str:[40,41],dev_to_str:[115,276,417,533,655,875],dev_unifi:875,dev_unify_arrai:875,dev_unify_it:875,dev_unify_nest:875,dev_util:875,devclonedit:875,devcloneditem:875,devclonednest:875,devdistit:875,devdistitem:875,devdistnest:875,develop:[1214,1257,1260],deviat:[40,41,1158,1161,1165,1171,1200,1201,1245,1246],devic:[21,40,41,43,379,380,381,418,419,433,806,807,808,877,878,879,880,881,882,884,885,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,949,952,956,985,986,987,994,1004,1005,1013,1014,1015,1021,1022,1047,1048,1063,1158,1159,1160,1161,1162,1214,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254],devmanag:[875,883],devmapp:[875,885],devmappermultiproc:875,diag:[1071,1076],diagon:[949,994],dict:[15,16,17,18,19,40,41,42,875,877,880,884,885,887,897,898,899,900,901,949,975,976,977,1006,1098,1099,1100,1102,1146,1148,1149,1150,1153,1155,1220,1221],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,809,810,875,894,895,898,899,1102,1183,1192,1214,1257,1260],differenti:[1214,1257],dilat:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],dim:[40,41,43,949,1013,1064,1065,1069,1071,1076,1102,1231,1242],dim_siz:[40,41,875,1102],dimens:[40,41,42,821,822,830,831,832,875,906,949,960,966,970,975,976,977,980,984,991,1003,1013,1018,1019,1029,1030,1033,1041,1043,1064,1068,1071,1074,1076,1098,1099,1100,1101,1102,1158,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1180,1183,1184,1185,1186,1187,1188,1189,1190,1193,1196,1198,1199,1231,1232,1233,1234,1235,1236,1237,1238,1241,1242],dimension:[40,41,469,830,831,832,949,1029,1030,1071,1076],direct:1102,directli:[43,1146,1155,1257,1260],directori:[949,1026,1037],discret:[1196,1198],disk:[40,41,1064,1066],distanc:[949,952],distribut:[40,41,875,894,898,899,900,901,1102,1158,1159,1160,1161,1162,1183,1191,1231,1239,1243,1244],distribute_nest:1102,distributedarrai:[40,41],distrubt:[1196,1198],dive:[1214,1257],divid:[40,41,949,1029,1031,1081],dividend:[1081,1090],divis:[949,983,990,1024,1031,1032,1048,1050,1051,1055,1081,1090,1247,1248,1249],divisor:[1048,1050,1051,1055,1081,1090,1247,1248,1249],doc:1214,docstr:43,doe:[40,41,43,949,952,1029,1256],doesn:1214,doing:43,domain:[1081,1082],don:1214,door:1260,dot:[1071,1073,1183,1194,1195,1231,1242],down:1256,downscal:[949,964,965],drag:[1214,1260],draw:[1158,1159,1161,1162],drawn:[1158,1159,1160,1161,1162],drop:[1214,1260],dropout:[1183,1214,1231,1242],dropout_r:[1231,1242],ds_tune_step:875,dtype:[40,41,43,122,282,379,380,381,382,384,385,419,420,423,424,433,436,446,453,540,663,806,807,808,809,810,811,929,930,931,932,933,934,936,937,938,939,940,941,942,943,944,945,946,947,948,949,952,956,985,994,1013,1014,1015,1047],dtype_bit:[122,282,419,540,663,925],dtype_from_str:[43,122,282,419,540,663,925],dtype_in:[419,429,430,431,925,931,936,937,938,939,940,941,948],dtype_to_str:[122,282,419,540,663,925],duplic:[40,41],dure:[40,41,43,873,874,949,1042,1048,1050,1051,1055,1098,1099,1100,1101,1243,1244,1247,1248,1249,1251],dynam:[419,425,873,874],each:[40,41,42,43,813,814,816,818,827,828,834,853,859,875,884,885,894,895,896,897,898,899,900,906,918,919,949,950,951,967,978,1018,1029,1033,1036,1046,1048,1051,1053,1055,1056,1057,1064,1067,1071,1076,1081,1084,1090,1092,1093,1102,1146,1150,1158,1159,1165,1166,1183,1184,1185,1186,1187,1188,1189,1190,1191,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1257],eager:1257,easi:1260,easili:1214,econom:1260,ecosystem:1214,edg:[949,963,967,1046],effect:[1048,1057],effective_grad:[1048,1057],effici:1260,einop:[40,41,949,975,976,977],einops_rearrang:[40,41,949],einops_reduc:[40,41,949],einops_repeat:[40,41,949],einstein:[40,41,1165,1166],einsum:[40,41,175,356,471,599,775,1165],either:[40,41,949,974,1006,1009,1011,1098,1099,1100,1101,1102,1231,1242,1243,1244,1257],eleg:1102,element:[40,41,43,469,813,814,815,816,818,819,827,828,830,831,832,834,853,859,875,896,900,906,925,929,949,950,952,954,955,957,958,962,963,964,965,971,972,978,981,982,983,994,995,1008,1010,1018,1020,1029,1040,1045,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1102,1165,1166,1168,1170,1172,1175,1176,1177,1178,1179,1180,1181,1182,1183,1191,1231,1239],elementwis:[40,41],elementwise_affin:[1245,1246],elementwise_funct:[813,814,815,816,817,818,819],elemtn:[1158,1159],elif:1102,els:[949,959,974,979,1102],elsewher:[949,1045],emphas:1214,empti:[40,41,1102],enabl:[40,41,42,1214],encapsul:[809,811],encod:[949,984,1064,1066],end:[949,952,1214,1257],ensur:43,entir:[40,41,830,831,832,875,919,1102,1214,1231,1240],entri:[40,41,949,981,1004,1005,1029,1030],entropi:[1196,1197,1198,1199],enumer:1102,environ:1214,eps:[382,809,810],epsilon:[1048,1050,1051,1055,1196,1197,1198,1199,1200,1201,1245,1246,1247,1248,1249],equal:[40,41,419,540,663,813,815,816,949,951,957,958,967,1029,1046,1081,1094,1096,1158,1162],equality_matrix:[949,951],equat:[40,41,1165,1166],equival:[949,952,1081,1096],erf:[467,752,1081],error:[40,41,875,949,1030,1081,1091,1102,1175,1176,1243,1244,1247,1251],essenti:43,etc:[40,41,43,875,920,949,952,956,986,987,994,1004,1005,1013,1014,1015,1021,1022,1047,1102,1158,1159,1160,1161,1162,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1260],euler:805,evalu:[40,41,830,831,832,949,1009,1146,1147,1154],even:1260,evenli:[40,41,949,952,1004,1005,1029],everi:[949,951,1260],exact:[40,41],exampl:[43,873,874,949,963,1033,1214,1256,1257,1260],example_input:[419,425,873,874],exc_tb:1102,exc_typ:1102,exc_val:1102,exce:[949,1010],except:[40,41,44,47,830,831,832,949,952,959,966,974,1042,1102],excess_s:1102,excit:[1214,1257],exclud:[59,61,949,952,1158,1162],exclus:[40,41,419,427,441,454,456,949,971,1001,1048,1054,1158,1160],execut:[43,949,1042,1257],execute_with_gradi:[156,333,454,579,732,1048,1214,1256],exist:[40,41,949,974,1102,1214,1247,1251,1260],exp:[752,1081],expand:[40,41,949,980,984],expand_dim:[40,41,282,663,949,1102],expect:[949,953],explain:1257,explicitli:[1231,1240,1242,1243,1244,1257],expon:[43,834,859,949,1032],exponenti:[43,834,859,1081,1091,1092],expos:[949,956,968],express:[949,1009],exsit:[40,41],extend:43,extra:[40,41,42,1048,1052],eye:[1071,1073],fabian:1214,fabio:1214,factor:[875,884,917,918,919,1048,1050,1051,1055,1056,1071,1076,1102,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238,1247,1248,1249,1250],falck:1214,fall:[1243,1244,1247,1251],fallback_to_non_compil:[1243,1244,1247,1251],fals:[15,18,19,40,41,42,59,66,67,68,69,70,417,419,427,428,441,449,452,454,455,456,463,464,813,816,821,822,827,828,830,831,832,875,893,906,914,919,924,925,932,933,934,935,949,951,971,974,979,984,991,1001,1006,1027,1029,1043,1045,1048,1051,1052,1053,1054,1055,1056,1057,1071,1074,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1165,1167,1168,1169,1170,1171,1172,1173,1202,1203,1204,1208,1212,1220,1221,1243,1244,1247,1248,1249,1250,1251,1252],fan_in:1222,fan_mod:1222,fan_out:1222,far:[1146,1147,1154,1256],faster:[873,874],favourit:[1214,1256],feasibl:1260,feat_dim:[1183,1194,1195],fed:[875,919,1102],feed:[875,919,1102],field:1260,file:[40,41,43,949,1026,1037,1243,1244],filepath:[40,41],fill:[40,41,806,807,808,949,985,1014,1158,1160],fill_valu:[419,433,949,985],filter:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238,1260],filter_s:[1231,1232,1233],filter_shap:[1231,1234,1235,1236,1237,1238],find:[40,41,1260],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,203,204,382,383,497,498,619,620,809],finish:[1214,1260],finit:[813,816],first:[40,41,469,813,814,873,874,875,906,949,957,966,970,978,1004,1005,1033,1035,1048,1052,1071,1076,1098,1099,1100,1101,1102,1146,1147,1154,1158,1164,1165,1170,1172,1231,1242,1243,1244,1247,1251,1257,1260],firstlayersiren:[1214,1222],firstli:[1257,1260],fist:[875,919,1102],fit:[40,41,417,419,454,459,463,466,467,469,949,1018,1064,1069],fkt:1260,flag:[40,41,1048,1054],flat:[40,41,43,949,1018,1021],flat_list:[40,41],flatten:[40,41,821,822,949,984,1018,1165,1167,1168,1169,1171,1173],flatten_key_chain:[40,41,1243,1244],flexibl:[1214,1257],flip:[40,41,122,282,419,540,663,949],float32:[43,419,436,925,929,937,938,949,952,956,994,1014,1015,1047],float_dtyp:[925,933,943],float_img_to_uint8_img:1064,floor:[282,419,663,949,983,1102],floormod:[282,419,663,949],fluid:1260,fname:[1202,1204,1208,1243,1244],folder:[43,1214],follow:[40,41,43,809,811,875,919,949,997,998,999,1031,1032,1048,1051,1053,1055,1056,1057,1102,1146,1150,1155,1183,1194,1195,1214,1231,1241,1247,1251],followng:[809,810],fomaml_step:1098,forget:[1048,1050,1051,1055,1247,1248,1249],fork:[949,1011],forkserv:[949,1011,1102],form:[15,16,17,18,19,40,41,949,956,1048,1051,1053,1055,1056,1057,1146,1148,1155,1183],format:[40,41,43,875,893,925,929,931,935,949,952,956,994,1014,1015,1047,1102,1165,1166,1214,1256,1257],format_fn:[40,41],format_key_chain:[40,41],forward:[1243,1244,1247,1251,1256],found:[40,41,42],fourier:[949,984],fourier_encod:949,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,94,100,103,104,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,169,170,171,172,173,174,176,177,178,179,180,181,182,185,187,188,190,191,192,193,194,195,196,201,202,204,205,206,209,210,211,212,213,216,222,225,226,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,339,340,341,343,344,345,346,348,349,352,353,354,355,357,358,359,360,361,362,363,364,367,369,370,371,372,373,374,375,380,381,383,384,385,388,389,390,391,392,393,396,402,405,406,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,460,461,462,464,465,468,470,472,473,474,475,476,477,478,481,482,484,485,486,487,488,489,490,495,496,498,499,500,503,504,505,506,507,508,511,517,520,521,529,534,535,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,580,581,582,583,585,586,587,589,590,591,595,596,597,598,600,601,602,603,604,605,606,610,611,612,617,618,620,621,622,625,626,627,628,629,630,633,639,642,643,651,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,733,734,735,736,737,739,740,741,743,744,745,746,747,748,750,751,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,778,779,780,781,782,785,786,787,788,789,790,791,793,794,796,797,798,799,800,801,802,807,808,810,811,813,814,815,816,817,818,819,822,827,828,831,832,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1201,1203,1204,1206,1207,1209,1213,1214,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1259,1260],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1102,framewrk:[949,1011],freeli:43,frequenc:[949,984],from:[40,41,42,43,813,818,827,828,830,831,832,875,884,885,919,925,931,949,974,981,986,987,994,1019,1030,1038,1045,1048,1051,1055,1064,1068,1098,1099,1100,1101,1102,1146,1148,1155,1158,1159,1160,1161,1162,1165,1170,1172,1183,1191,1194,1214,1220,1221,1231,1239,1242,1247,1251,1256,1257],from_cal:[1243,1244],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[122,282,419,540,663,809,810,949,1214],full_matric:[1071,1076],fulli:[43,1214,1231,1241,1242,1256],func:[40,41,419,425,454,455,873,874,875,919,949,961,1048,1052,1102],further:1260,furthermor:1260,futur:1260,gain:1222,gamma:[1200,1201],gather:[40,41,122,282,419,540,663,949,987],gather_nd:[40,41,122,282,419,540,663,949],gauss:[1081,1091],gaussian:[1175,1176],geglu:[1214,1217],gelu:[366,480,784,1175,1214,1217],gener:[23,40,41,43,417,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,469,873,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1054,1158,1160,1162,1163,1214,1247,1251],geometr:[949,984],get:[40,41,809,810,811,875,884,885,893,908,909,914,918,921,924,925,935,936,949,953,988,989,990,1017,1102,1212,1214,1231,1240,1260],get_all_arrays_in_memori:949,get_all_arrays_on_dev:875,get_framework:59,get_initial_st:[1231,1240],get_min_bas:949,get_min_denomin:949,get_mod_kei:[1243,1244],get_num_dim:[419,663,949],get_param:1208,get_param_recurs:1208,get_referrers_recurs:949,getfullargspec:1102,gist:1214,give:[827,828,949,1019,1257],given:[40,41,43,806,807,808,827,828,875,908,914,917,918,919,921,924,925,929,949,952,956,963,971,972,981,987,1004,1005,1014,1015,1018,1021,1022,1029,1036,1041,1043,1047,1048,1050,1051,1053,1055,1056,1057,1071,1073,1077,1081,1082,1102,1146,1151,1152,1158,1161,1162,1164,1165,1168,1170,1171,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1220,1221,1260],global:[40,41,42,875,884,885,892,917,918,919,925,932,933,934,949,973,989,990,1017,1023,1024,1025,1031,1032,1048,1063,1102,1200,1201,1206,1207,1214,1245,1246],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1214,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241],got:1214,gpu0:43,gpu2:43,gpu:[875,910,913,1102],gpu_is_avail:[417,875,1102],grad:[1214,1247,1251,1256],gradient:[25,40,41,455,456,457,458,875,919,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1067,1098,1099,1100,1101,1214,1247,1248,1249,1250,1251,1252,1256,1260],gradient_descent_upd:[1048,1098,1099,1100,1101],gradient_imag:[159,338,459,584,738,1064],gradienttrack:[1048,1049],graph:[1048,1051,1053,1055,1056,1057,1202,1203,1204,1209,1214,1243,1244],graph_compil:[1202,1203,1204,1205,1206,1207,1208,1212],greater:[40,41,949,952,982,1030,1158,1162],green:[40,41,42,1258,1259],grid:[949,1009],group:[1064,1069],guid:[1214,1215,1260],gym:1214,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1260,half:[949,952,1102,1158,1162],hand:1214,handl:[40,41,42,43,873,874,875,891,893,902,903,914,921,924,1048,1051,1053,1055,1056,1057,1102,1247,1248,1249,1250,1251,1252],has:[40,41,43,949,1033,1081,1086],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,949],hasattr:1102,have:[40,41,43,809,810,813,814,816,818,830,831,832,834,853,859,949,966,970,975,976,977,978,985,1033,1048,1054,1062,1071,1076,1081,1090,1102,1214,1256,1257],hdf5:[40,41,1243,1244],head:[1183,1194,1231,1242],head_dim:[1231,1242],height:[1064,1069],height_cutoff:[40,41],help:[59,382,417,418,875,887,888,889,890,925,1048,1208,1212,1214,1222,1224,1225,1227,1228,1230],helper:1214,here:[43,1214],hidden:[1183,1193,1231,1240],hierarch:[949,968],hierarchi:[40,41],high:[40,41,469,1158,1160,1162],higher:[1048,1051,1053,1055,1056,1057,1071,1076],highest:[1158,1160],highest_util:1102,highest_util_nod:1102,highli:1214,highlight:1260,highlight_subgraph:[1202,1204,1208],hint:43,hkt:1260,hold:[925,929,949,952,956,1021,1022],host:1214,hot:[949,1013],how:[1214,1231,1242,1243,1244,1257,1260],howev:[43,1257],http:1260,hyperbol:[1081,1083,1085,1088,1089,1095,1097,1175,1182],hypothet:1260,icon:1214,idea:1214,ident:[40,41,43,122,282,419,540,663,949],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[805,809,810],if_exist:[40,41],ignor:[40,41,1247,1251],ignore_key_error:[40,41],ignore_miss:[1247,1251],ignore_non:[40,41],iinfo:[80,203,382,497,619,809],imag:[27,460,461,462,949,1003,1065,1066,1067,1068,1069,1070,1183,1184,1185,1186,1187,1189,1190,1214,1260],image_dim:[1064,1068],imkkhk:1260,immedi:[1214,1257,1260],implement:[43,834,859,1214,1257,1260],in_featur:[1183,1192],includ:[40,41,43,830,831,832,949,952,993,1031,1032,1044,1146,1147,1158,1162,1231,1241,1242,1245,1246,1256],include_deriv:[1146,1148,1155],include_empti:[40,41],include_gener:[1202,1203,1204,1208,1243,1244],include_inf:[40,41,949,993,1044],include_nest:[1146,1147],include_self:[40,41],inclus:[1158,1160],incom:[1183,1192],increas:[875,897,901,907,949,967,980,1046,1102,1146,1155],increasingli:1260,increment:[949,998,1102],increment_param_count:1208,inde:1214,indent:[40,41,42],independ:[1158,1159],index:[40,41,419,469,949,954,955,986,987,1009,1030,1033,1146,1149,1151,1152,1153,1156],index_nest:1146,indic:[40,41,419,434,435,445,447,448,827,828,949,954,955,986,987,995,1013,1021,1022,1146,1147,1149,1151,1152,1153,1154,1156,1157,1158,1159,1175,1180,1183,1184,1185,1186,1187,1188,1189,1190,1200,1201,1231,1232,1233,1234,1235,1236,1237,1238,1243,1244],indices_wher:[122,282,419,663,949],inevit:1260,inf:[40,41,821,822,949,993,1002,1044,1081,1086],infer:[813,818,827,828,873,874,949,981,991,994,1019,1027,1064,1068,1257,1260],infin:[813,816,949,1002],inform:[809,810,811,1048,1059],init_c:[1183,1193],init_h:[1183,1193],init_on_first_step:[1247,1251],initi:[40,41,42,59,382,417,418,875,887,888,889,890,925,1048,1102,1183,1193,1208,1212,1214,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1247,1251],initialz:[1243,1244],inner:[1098,1099,1100,1101],inner_batch_fn:[1098,1099,1100],inner_batch_shap:[1183,1192],inner_cost_fn:[1098,1099,1100],inner_grad_step:[1098,1099,1100,1101],inner_learning_r:[1098,1099,1100,1101],inner_optimization_step:[1098,1099,1100,1101],inner_v:[1098,1099,1100],inp:1102,inplac:[40,41,949,959,996,1000,1034,1048,1051,1053,1055,1056,1057,1220,1221,1247,1248,1249,1250,1251,1252],inplace_arrays_support:[419,949],inplace_decr:[122,282,419,540,663,949],inplace_incr:[122,282,419,540,663,949],inplace_oper:[0,11,12],inplace_upd:[40,41,122,282,419,540,663,949,1220,1221],inplace_variables_support:[419,949],input:[15,18,19,40,41,42,43,813,814,815,816,817,818,819,821,822,827,828,830,831,832,873,874,875,884,885,892,893,894,897,898,901,907,919,920,925,929,930,932,933,934,935,936,940,941,949,950,951,954,955,957,958,959,960,962,963,964,965,966,967,969,971,972,974,975,976,977,978,979,980,981,982,983,984,991,993,994,995,997,998,999,1001,1002,1003,1007,1008,1009,1010,1018,1020,1027,1028,1030,1033,1034,1035,1036,1038,1039,1040,1041,1043,1044,1046,1048,1052,1054,1059,1063,1064,1065,1066,1067,1068,1070,1071,1074,1076,1078,1079,1080,1081,1083,1085,1086,1088,1089,1090,1094,1095,1096,1097,1098,1099,1100,1101,1102,1158,1159,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1200,1201,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1245,1246,1257],input_ax:[875,919,1102],input_channel:[1231,1232,1233,1234,1235,1236,1237,1240,1241],input_queu:1102,inputs_split:1102,insert:[949,980],insid:43,inspect:1102,inspir:1260,instal:1214,instanc:[15,16,17,18,19,40,41,43,469,834,853,859,875,884,1102,1220,1221,1253,1254],instead:[40,41,469,1165,1167,1168,1169,1170,1171,1172,1173,1260],int32:43,int64:[925,929,949,952,956,994,1014,1015,1047],int_dtyp:[925,934,944],integ:[40,41,469,809,811,813,814,821,822,830,831,832,925,941,949,952,962,982,1020,1029,1158,1160,1163],integr:1214,intend:43,inter:1214,interchang:[40,41,949,1035],interest:1214,interfac:[949,956,1257],intermedi:[40,41],intern:[40,41,875,1048,1062,1102,1146,1147,1154,1155,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1253,1254],interpol:[949,1003],intersect:[1081,1082],interv:[40,41,830,831,832,949,952,963,1004,1005,1081,1084,1158,1162],introduc:1260,inv:[742,1071,1260],invalid:[830,831,832],invalid_dtyp:925,invers:[1071,1073,1075,1081,1082,1083,1084,1085,1086,1088,1260],invert:[1071,1073,1075],invest:1260,invoc:[873,874],irrespect:1214,is_al:1102,is_arrai:[122,282,419,540,663,949,1102],is_float_dtyp:925,is_int_dtyp:925,is_mean:1102,is_sum:1102,is_var:[1208,1212],is_vari:[156,333,454,579,732,1048],isfinit:[85,208,387,502,624,813],isinf:[282,540,663,949],isinst:1102,isnan:[85,208,387,502,624,813],isnumer:1102,item:[15,19,40,41,834,846,847,875,884,885,887,894,896,898,900,906,925,932,949,968,992,1031,1032,1102,1146,1150,1151,1152,1155,1156,1157,1214,1243,1244,1256],iter:[15,16,17,18,19,40,41,42,873,874,875,878,879,881,882,884,885,888,889,896,898,899,900,901,906,919,949,951,960,966,967,981,994,1009,1014,1018,1019,1022,1027,1029,1033,1036,1041,1046,1102,1146,1147,1148,1150,1154,1155],iterbal:[875,896,900,906,1102],its:[469,827,828,875,919,949,994,1019,1035,1041,1102,1214],itself:[43,1146,1155],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,379,380,381,382,384,385,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,805,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,884,885,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1212,1214,1215,1217,1218,1219,1220,1221,1222,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1258,1259],ivy_backend:[40,41],ivy_bay:1260,ivyfcmodel:1256,ivyh:[40,41,42],ivymodul:[186,792],jame:1214,jax:[1048,1054,1214,1260],jax_concat:1214,jnp:1214,join:[40,41,949,966,1033,1102],journal:1214,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1214,1231,1240,1260],kaimingnorm:[1222,1226],kalman:1260,kalman_filt:1260,kalman_filter_step:1260,kalman_filter_upd:1260,keep:[40,41,875,920,949,1043,1102,1214,1260],keep_inner_v:[1098,1099,1100],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1098,1099,1100],keepdim:[40,41,419,452,463,464,821,822,830,831,832,949,1043,1071,1074,1165,1167,1168,1169,1170,1171,1172,1173],kei:[15,16,17,40,41,42,834,839,875,887,949,968,1098,1099,1100,1102,1146,1149,1153,1183,1194,1195,1214,1220,1221,1231,1242,1247,1251],kept:[40,41,42,1098,1099,1100],kera:1260,kernel:[1183,1193],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,875,884,885,897,901,907,949,953,975,976,977,1006,1102,1146,1150,1243,1244],keyword_color_dict:[40,41,42],kind:[809,810,811,1260],kwarg:[15,16,17,40,41,42,59,63,875,884,897,901,907,949,1006,1102,1202,1203,1204,1208,1220,1221,1243,1244],kwarg_stateful_idx:[1202,1203,1204,1208,1243,1244],kwargs_clon:1102,kwargs_dist:1102,kwargs_uni:1102,label:[1196,1197,1198,1199],lamb:[1048,1055,1214,1247],lamb_upd:1048,lambda:[1102,1247,1250,1252,1256],lar:[1048,1055,1056,1214,1247],larger:[809,810,949,963],largest:[40,41,809,810,811,949,954,982],lars_upd:1048,last:[40,41,830,831,832,949,952,970,1003,1029,1033,1071,1074,1076,1165,1170,1172,1175,1180,1183,1193,1231,1241],later:[40,41,949,961],latest:[1231,1240],layer:[1048,1051,1053,1055,1057,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1200,1201,1214,1222,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1260],layer_norm:1200,layernorm:[1214,1245],layerwis:[1048,1056,1247,1250],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1146,1147,1154],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1175,1176,1177],leaky_relu:[784,1175],learn:[813,818,827,828,1048,1051,1053,1055,1056,1057,1098,1099,1100,1101,1158,1164,1214,1247,1248,1249,1250,1251,1252,1257,1260],learnabl:[1200,1201,1245,1246],leav:[15,18,19,40,41,1146,1147,1148,1154,1155],left:[40,41,821,822,1071,1074,1165,1167,1168,1169,1170,1171,1172,1173,1214],leftmost:[40,41],len:1102,length:[40,41,42,949,952,1019,1030,1041],lenton2021ivi:1214,lenton:1214,less:[40,41,43,85,208,387,502,624,813,949,962,1102,1158,1162],less_util_node_str:1102,let:[1257,1260],level:1214,librari:[1214,1256,1260],lightweight:1214,like:[43,1048,1054,1158,1162,1214,1256,1257,1260],limit:[40,41,42,809,810,811,949,963,964,965],linalg:[29,464,465,1072,1073,1074,1075,1076,1077,1214],linear0:[1214,1256],linear1:1214,linear2:1256,linear:[463,949,984,1003,1071,1175,1176,1177,1178,1183,1191,1214,1231,1232,1233,1234,1235,1236,1237,1238,1256],linear_algebra_extens:[821,822],linear_resampl:[122,282,419,540,663,949],linearli:[949,984],link:1214,linspac:[122,282,419,540,663,949,952],list:[15,18,19,40,41,43,379,380,381,806,807,808,830,831,832,875,884,885,894,895,897,898,899,901,904,905,919,949,952,956,958,1009,1028,1029,1038,1043,1098,1099,1100,1102,1146,1147,1148,1150,1154,1155,1183,1184,1185,1186,1187,1188,1189,1190,1214,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238],list_join:[40,41,42],list_stack:[40,41],liter:[821,822],littl:1257,load:[40,41],loaded_kwarg:1102,loader:1214,local_set:[949,992],locat:[43,813,817,949,1002,1158,1159],log:[752,949,1005,1081,1102,1196,1197,1198,1199,1214],log_all_op:1208,log_global_inference_abs_tim:[1205,1214],log_global_inference_rel_tim:[1205,1214],logarithm:[1081,1093],logic:[31,813,819,830,831,832,1079,1080,1214],logical_and:[347,749,1078],logical_not:[85,208,387,502,624,813],logical_or:[347,749,1078],logit:[1196,1199],logspac:[122,282,419,540,663,949],look:[43,1257,1260],loop:[1098,1099,1100,1101],loss:[1197,1198,1199,1214,1256],loss_fn:[1214,1256],lot:1257,low:[40,41,469,1158,1160,1162],lower:[40,41,949,1008,1158,1162],lower_depth:[1243,1244],lowest:[15,18,19,40,41,1146,1155,1158,1160],lstm:[1183,1193,1214,1231],lstm_updat:[43,1183],machin:[809,810,811,813,818,827,828,1158,1164,1214,1257,1260],mai:[949,952,974,978,1214,1257,1260],main:[949,994,1214],mainli:1214,make:[43,469,875,1102,1214,1257],maml:[1098,1099,1100],maml_step:1098,manag:[875,1102],mani:[40,41,43,949,1029,1214],manner:[15,18,19,40,41,43,1146,1155],manual:[1146,1147,1154,1260],map:[40,41,42,813,817,875,884,949,1002,1102,1146,1151,1152,1155,1231,1242,1256],map_cont:[40,41],map_nest_at_index:1146,map_nest_at_indic:1146,map_sequ:[40,41],mapper:[875,884,885,1102],mask:[1183,1194,1195],match:[40,41,949,1006],match_kwarg:949,math:[33,468,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1102,1214],mathbb:[1071,1077],mathbf:[1071,1077],mathemat:805,matmul:[43,282,419,540,663,949,1260],matplotlib:1257,matric:[1183,1192],matrix:[40,41,949,951,964,1007,1071,1072,1073,1074,1075,1077,1183,1192,1231,1241],matrix_norm:[40,41,163,342,463,588,742,1071],matter:1214,max:[40,41,382,809,810,811,949,964,965,976,1008,1021,1022,1102,1165,1167,1247,1249],max_batch_s:[40,41],max_chunk_s:[875,919,1102],max_depth:[40,41,875,879,882,889,897,901,907,949,992,1102,1146,1155],max_dev_dim_step_ratio:875,max_freq:[949,984],max_length:[40,41],max_node_dim_step_ratio:1102,max_norm:[40,41,949,964,965],max_split_factor_step_s:[875,1102],max_trust_ratio:[1048,1055,1247,1249],maxim:[1214,1257,1260],maximis:1214,maximum:[40,41,42,663,875,897,901,907,919,949,954,963,964,965,984,1048,1055,1102,1146,1155,1165,1167],mayb:[15,18,19],mdi:1102,mean:[40,41,469,875,904,905,906,907,919,949,976,1098,1099,1100,1101,1102,1146,1150,1158,1161,1165,1168,1171,1173,1222,1256,1260],measur:[1183,1194,1231,1242],mech:1214,mechan:[1214,1260],medic:1260,memori:[875,891,914,919,921,924,1102,1183,1193,1214],meshgrid:[282,419,663,949],messag:[1258,1259],meta:[35,1099,1100,1101,1214],method:[40,41,42,43,469,949,956,968,1009,1021,1022,1048,1055,1056,1102,1146,1147,1154,1155,1214,1231,1242,1243,1244,1257],might:[949,974,1260],min:[40,41,382,809,810,811,949,976,1010,1021,1022,1031,1102,1165,1169],min_bas:[949,1032],min_denomin:[949,1031],min_dev_dim_s:875,min_node_dim_s:1102,min_sf_tune_step:[875,1102],min_unit_dev_tune_step:875,min_unit_node_tune_step:1102,mind:1214,mini:[1200,1201,1245,1246],minimum:[40,41,663,875,925,929,949,952,955,956,963,989,990,1023,1024,1031,1032,1102,1165,1169],miss:[1247,1251],ml_framework:[813,818,827,828,949,952],mod:[949,983],mod_depth:[1243,1244],mod_height:[1243,1244],mod_with_top_mod_key_chain:[1243,1244],mode:[40,41,873,874,875,904,905,906,907,919,1071,1076,1102,1257],model:[1214,1256],modul:[40,41,42,59,949,1011,1102,1214,1215,1217,1218,1219,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1245,1246,1253,1254,1260],moment:[1048,1050,1051,1055,1247,1248,1249],more:[43,949,1033,1102,1214,1257,1260],more_util_node_str:1102,most:[40,41,43,1214,1260],move:[40,41,43,875,920,1102],much:[1214,1260],multi:[469,949,1011,1183,1194,1231,1242],multi_head_attent:1183,multi_index_nest:1146,multi_map:[40,41],multi_nod:1102,multidev:[875,886,887,888,907],multidevcontain:[40,41],multidevic:[875,884],multidevit:[875,878,881,884,885,889],multidevitem:[875,877,880],multidevnest:[875,879,882],multiheadattent:[1214,1231],multinod:[1102,1106],multinodecontain:1102,multinodeit:1102,multinodeitem:1102,multinodenest:1102,multinomi:[168,351,469,594,768,1158],multipl:[40,41,830,831,832,949,1006,1029,1071,1073,1165,1167,1168,1169,1170,1171,1173,1200,1201,1231,1241,1257],multipli:[40,41,949,971,1165,1170],multiprocess:[40,41,42,419,663,875,884,949,1102],must:[40,41,42,43,806,807,808,813,814,816,818,830,831,832,834,853,859,875,904,905,906,907,919,949,952,966,968,970,978,1008,1010,1022,1033,1081,1087,1090,1102,1158,1163,1247,1251],mutabl:[1146,1148,1155],mutlidevic:[875,884],mutlinod:1102,mw_tm1:[1048,1051,1055],mx_concat:1214,mxnet:[43,1214,1260],my_func:43,mymodel:1214,name:[873,874,1202,1203,1204,1208,1256],namespac:[43,1257],nan:[40,41,813,816,817,949,993,1044],nativ:[15,17,18,19,40,41,43,875,891,893,902,903,914,921,924,925,930,937,938,1102,1214,1215,1220,1221],native_modul:[1220,1221],native_module_class:[1220,1221],nativearrai:[15,18,19,43,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,834,853,859,875,893,919,920,925,929,935,940,941,949,950,951,952,954,955,956,957,958,960,962,963,964,965,966,967,969,970,971,972,975,976,977,978,980,981,982,983,984,986,987,991,993,994,995,1002,1003,1004,1005,1007,1008,1009,1010,1013,1014,1015,1018,1019,1020,1021,1022,1027,1029,1030,1033,1035,1036,1038,1039,1040,1041,1043,1044,1045,1046,1047,1102,1146,1148,1155],natur:[1081,1093,1260],ncdhw:[1183,1188,1189,1231,1236,1237],nchw:[1183,1186,1187,1190,1231,1234,1235,1238],ncw:[1183,1184,1185,1231,1232,1233],ndarrai:[43,379,380,381,382,384,385,469,949,1039],ndhwc:[1183,1188,1189,1231,1236,1237],nearest:[949,1020],need:[43,949,964,965,1183,1185,1187,1189,1214,1231,1233,1235,1237,1260],neg:[40,41,813,816,830,831,832,1165,1170,1172,1175,1177],negative_slop:1222,neither:1102,nest:[15,16,17,18,19,40,41,42,875,897,901,907,949,956,1038,1098,1099,1100,1102,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1243,1244,1247,1248,1249,1250,1251,1252],nested_indices_wher:1146,nested_map:[1102,1146],network:[1183,1192,1214,1215,1217,1231,1243,1244,1260],neural:[1183,1214,1217,1231,1256],new_node_percent_mem:1102,new_node_util:1102,new_node_utils_kei:1102,new_std:[1200,1201,1245,1246],newli:[873,874,949,960,961],newlin:[40,41,42],newshap:[949,960,1019],next:[809,810,1102,1243,1244,1247,1248,1249,1250,1251,1252],nhwc:[1183,1186,1187,1190,1231,1234,1235,1238],node:[40,41,1146,1147,1154],node_clon:1102,node_dist:1102,node_dist_arrai:1102,node_dist_it:1102,node_in:1102,node_mapp:1102,node_str:1102,node_to_str:1102,node_util:1102,nodedistit:1102,nodedistitem:1102,nodedistnest:1102,nodemanag:[1102,1113],nodemapp:1102,nodemappermultiproc:1102,noinspect:[43,876,926,927,928,1049,1102,1209],non:[40,41,830,831,832,873,874,925,939,1243,1244,1247,1251,1257],none:[40,41,42,43,59,61,64,379,380,381,417,419,420,423,425,432,433,434,435,436,443,444,445,446,447,448,449,450,451,453,463,464,469,470,806,807,808,809,810,811,813,818,821,822,827,828,830,831,832,873,874,875,884,885,891,892,917,918,919,920,925,932,933,934,949,952,956,973,974,979,981,985,986,987,992,994,996,997,998,999,1000,1004,1005,1011,1013,1014,1015,1018,1021,1022,1023,1024,1029,1030,1031,1032,1041,1042,1047,1048,1051,1053,1055,1056,1057,1063,1064,1068,1071,1074,1098,1099,1100,1101,1102,1146,1147,1150,1154,1155,1158,1159,1160,1161,1162,1165,1167,1168,1169,1170,1171,1172,1173,1183,1185,1187,1189,1192,1193,1194,1195,1200,1201,1202,1203,1204,1208,1212,1220,1221,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254],norm:[40,41,821,822,949,964,965,1071,1074,1201,1214,1246,1247,1249],normal:[1158,1161,1200,1201,1245,1246],normalized_idx:[1200,1201],normalized_shap:[1245,1246],notat:[40,41,1165,1166],note:43,noth:[40,41,1257],notimplementederror:1102,now:[40,41,875,920,949,950,1102,1214,1231,1242,1243,1244,1256,1257,1260],np_concat:1214,np_finfo:382,ns_tune_step:1102,num:[419,443,444,949,1004,1005],num_arrai:[40,41],num_arrays_in_memori:949,num_arrays_on_dev:875,num_band:[949,984],num_channel:[1231,1238],num_chunk:1102,num_chunks_floor:1102,num_class:[1158,1159],num_cpu_cor:875,num_gpu:[115,417,875,1102],num_head:[1183,1194,1231,1242],num_kei:[1183,1194,1195],num_lay:[1231,1240],num_or_size_split:[40,41,419,449,949,1029],num_output:1102,num_queri:[1183,1194,1195],num_sampl:[419,442,469,470,949,1003,1064,1065,1158,1159],num_task:[1098,1099,1100,1101],number:[40,41,42,809,810,811,813,817,830,831,832,873,874,875,911,912,913,925,936,940,941,949,952,963,967,980,984,991,994,1003,1004,1005,1008,1012,1018,1029,1036,1040,1044,1046,1071,1076,1098,1099,1100,1101,1102,1158,1159,1163,1165,1167,1168,1169,1171,1173,1183,1194,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1257,1260],numer:[43,813,816,834,853,859,949,989,990,1023,1024,1031,1032,1081,1090,1222],numhead:[1183,1194],numpi:[40,41,379,380,381,382,384,385,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,949,1039,1071,1076,1165,1166,1214,1256,1257,1260],nwc:[1183,1184,1185,1231,1232,1233],obj:[40,41],object:[40,41,42,59,382,809,810,811,875,925,929,949,952,956,1048,1146,1149,1151,1152,1153,1156,1157,1158,1164,1208,1212,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1243,1244],object_in:[419,423,949,956],observ:1102,occupi:[809,810,811,949,1021,1022],off:[949,952],offer:1214,offset:[1200,1201],often:1257,old:[40,41],on_init:[1231,1242,1243,1244],onc:[875,919,1102,1158,1159,1214],one:[40,41,43,821,822,875,904,905,906,907,919,925,931,949,994,1006,1013,1021,1022,1030,1033,1071,1074,1102,1165,1166,1167,1168,1169,1170,1171,1172,1173,1214,1257,1260],one_hot:[122,419,540,663,949],onearrai:[949,980],ones:[40,41,77,200,379,494,616,806,949,994,1013,1015,1214],ones_lik:[122,282,419,540,663,949],ongo:43,onli:[40,41,43,469,875,1102,1146,1147,1148,1154,1247,1248,1249,1250,1251,1252,1256,1257],onlin:1214,onto:[875,904,905,920,1102,1146,1150,1155],oom:[875,1102],open:[949,952,1158,1162,1214,1260],opencv:1257,oper:[40,41,813,819,949,959,975,976,977,1004,1005,1034,1048,1051,1053,1055,1056,1057,1078,1079,1080,1183,1184,1185,1186,1187,1188,1189,1190,1192,1214,1215],operand:[40,41,1165,1166],oppos:[949,984],optim:[875,1048,1051,1053,1055,1056,1057,1098,1099,1100,1101,1102,1214,1248,1249,1250,1252,1256,1260],optimizer_upd:1048,option:[15,18,19,40,41,42,43,379,380,381,806,807,808,813,818,821,822,827,828,830,831,832,873,874,875,884,885,893,897,898,899,900,901,904,905,906,907,914,917,918,919,920,924,925,930,935,939,948,949,951,952,954,955,956,964,965,966,971,973,974,981,984,985,986,987,991,993,994,1001,1003,1004,1005,1006,1009,1011,1013,1014,1015,1018,1021,1022,1025,1027,1029,1030,1031,1032,1033,1041,1043,1044,1047,1048,1051,1053,1054,1055,1056,1057,1059,1064,1068,1071,1074,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1158,1159,1165,1167,1168,1169,1170,1171,1172,1173,1175,1176,1180,1183,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1257],ord:[949,981,1071,1076],order:[40,41,42,43,821,822,827,828,1048,1051,1053,1055,1056,1057,1071,1074,1098,1099,1100,1253,1254],ordered_node_util_kei:1102,org:1260,organ:43,origin:[40,41,42,821,822,949,1015,1019,1047,1071,1074],other:[40,41,43,834,836,837,842,844,845,849,851,852,853,854,855,857,859,860,861,862,863,864,866,867,868,870,871,872,873,874,949,951,952,994,1048,1052,1158,1162,1214,1256,1257,1260],other_i:[43,834,853,859],otherwis:[15,16,17,18,19,40,41,813,816,830,831,832,875,892,925,932,933,934,949,959,1041,1042,1045,1048,1054,1059,1063,1098,1099,1100,1102,1165,1167,1168,1169,1171,1173],our:[1214,1260],out:[469,834,853,949,952,1081,1086,1183,1191,1193,1214,1231,1239],out_feat_dim:[1183,1194],out_featur:[1183,1191,1192],out_i:[813,816],outdat:1260,outer:[1098,1099,1100,1101],outer_batch_fn:[1098,1099,1100],outer_batch_shap:[1183,1192],outer_cost_fn:[1098,1099,1100],outer_v:[1098,1099,1100],outlin:1257,output:[40,41,43,806,807,808,875,884,885,919,949,952,961,985,994,1018,1036,1048,1052,1081,1087,1102,1158,1160,1161,1162,1183,1185,1187,1189,1191,1193,1194,1195,1214,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242],output_ax:[875,919,1102],output_axi:1102,output_channel:[1231,1232,1233,1234,1235,1236,1237,1240,1241],output_connected_onli:[1202,1204,1208,1243,1244],output_queu:1102,output_shap:[1183,1185,1187,1189,1231,1233,1235,1237],outsid:[949,963],over:[40,41,821,822,830,831,832,949,981,1071,1074,1158,1162,1165,1167,1168,1169,1171,1173,1200,1201,1245,1246],overal:1257,overflow:[949,952],overhead:1257,overrid:[949,1013,1015,1047],overriden:[1247,1251],overwrit:[40,41,875,919,1102],overwrite_at_key_chain:[40,41],own:[1214,1257,1260],packag:[43,1257],pad:[949,967,984,1046,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],pad_width:[419,949,967,1046],page:1214,pair:[1183,1195],parallel:[875,884,885,1102],parallelis:[875,884,885,1102],param:[40,41,42,43,419,434,435,830,832,875,919,949,950,986,987,1013,1014,1102,1213,1214,1243,1244,1256],paramet:[15,16,17,18,19,40,41,42,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,834,853,859,873,874,875,884,885,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,914,917,918,919,920,921,924,925,929,930,931,935,936,937,938,939,940,941,948,949,951,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,970,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,991,993,994,995,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1014,1015,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1059,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256],parameter:[1158,1161,1162],params_all_empti:1208,pardo:1214,pars:[949,968],part:[1048,1051,1053,1055,1056,1057,1081,1086,1214,1243,1244,1257],partial:[40,41,1243,1244],particl:1260,particular:1260,pass:[40,41,42,875,884,919,925,930,949,961,1048,1062,1098,1099,1100,1102,1220,1221,1243,1244,1247,1251,1253,1254],pattern:[40,41,949,975,976,977],per:[875,1102,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],percent_used_mem_on_dev:875,percent_used_mem_on_nod:1102,percentag:[875,914,1102],perf_count:1102,perform:[40,41,43,827,828,830,831,832,875,949,954,955,971,975,976,977,997,998,999,1003,1004,1005,1048,1051,1053,1055,1056,1057,1064,1065,1098,1099,1100,1101,1102,1146,1151,1152,1165,1167,1168,1169,1170,1171,1172,1173,1175,1180,1183,1191,1193],permissable_step:1102,permit:43,permut:[469,949,1035,1041],perpendicular:[949,970],person:1214,physci:1260,pickl:[40,41,1102],pickle_filepath:[40,41],pid:1208,pinv:[342,742,1071],pip:1214,pipelin:1256,pkk:1260,pkkm1:1260,pkm1km1:1260,place:[40,41,43,806,807,808,875,920,949,980,985,997,998,999,1102,1247,1248,1249,1250,1251,1252],placehold:[1146,1155],pleas:469,point:[805,806,807,808,809,810,925,940,949,952,1081,1090],popul:[40,41,1158,1159],popular:1260,population_s:[469,470,1158,1159],portabl:[1214,1215],posit:[15,16,17,809,810,813,816,875,897,901,907,949,950,952,980,984,1102,1158,1163,1220,1221],possibi:[40,41],possibl:[949,1006,1038,1064,1069,1260],post:[1200,1201],post_shap:[40,41],power:[43,834,859,865,949,989,1023,1032,1222],practic:1214,pre:[875,1102,1214],pre_shap:[40,41],precis:[809,810],pred:[1196,1197,1198,1199],predict:[1196,1197,1198,1199,1260],preprint:1214,present:[40,41],preserv:[40,41,42,949,981,1048,1059],preserve_typ:[40,41,454,457,1048,1059],press:1214,prevent:[43,1048,1050,1051,1055,1102,1247,1248,1249],previou:[1048,1051,1055],previous:[949,961],prime:1214,print:[40,41,42,875,915,949,1016,1214,1256],print_all_arrays_in_memori:949,print_all_arrays_on_dev:875,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1247,1251],prob:[469,470,1158,1159,1183,1191,1231,1239],probabl:[1158,1159,1183,1191,1231,1239],problem:[43,1260],process:[43,875,884,885,914,924,949,1011,1102],process_specif:[875,914,924,1102],prod:[40,41,949,976],produc:[875,884,885,1102],product:[40,41,949,970,971,1007,1165,1166,1183,1194,1195,1231,1242],profil:[115,276,417,533,655,875,1102],project:[1214,1256,1257,1260],promot:[43,813,814,834,859,1081,1090],prompt:1214,properli:43,properti:[40,41,382,875,887,1102,1208,1212,1243,1244,1247,1248,1249,1250,1252],provid:[40,41,43,830,831,832,873,874,875,892,925,932,933,934,939,948,949,974,1013,1015,1022,1047,1048,1051,1053,1055,1056,1057,1063,1102,1214,1231,1240,1247,1248,1249,1250,1251,1252,1257],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1071,1075],ptype:[1208,1212],pure:[40,41,1214,1260],purpos:1260,put:1102,pybroadexcept:1102,pyprotectedmemb:[1102,1209],pyshadowingbuiltin:43,pyshadowingnam:[876,926,927,928,1049,1102],python:[40,41,875,914,924,949,952,1102,1214],pytorch:[1048,1051,1053,1055,1056,1057,1214,1247,1248,1249,1250,1251,1252,1256,1257,1260],pyunresolvedrefer:1102,quadrant:[1081,1087],queri:[40,41,834,848,869,875,908,918,1102,1183,1194,1195,1231,1242],query_dim:[1231,1242],query_kei:[40,41],queue:[40,41,42,875,884,885,949,1017,1025,1102],queue_class:[875,884,885,1102],queue_load_s:[40,41,42],queue_timeout:[40,41,42,949,1102],quick:[469,1214],quickli:1256,radian:[813,815,1081,1082,1084,1087,1094,1096],rai:[1081,1082],rais:[40,41,43,830,831,832,834,859,949,959,989,1023,1030,1032,1042,1102,1243,1244,1247,1251],ram:[875,914,921,924,1102],randint:[168,351,469,594,768,1158],random:[37,40,41,470,1159,1160,1161,1162,1163,1164,1214],random_crop:1064,random_norm:[168,351,469,594,768,1158],random_uniform:[168,351,469,594,768,1158],randomli:[469,1064,1068,1183,1191,1231,1239],randomness_factor:[1202,1204,1208,1243,1244],rang:[469,949,952,1004,1005,1081,1087,1102,1214,1256,1260],rank:[830,831,832,949,967,1043,1046],rate:[1048,1051,1053,1055,1056,1057,1098,1099,1100,1101,1231,1242,1247,1248,1249,1250,1251,1252],rather:[40,41,875,919,949,952,1001,1048,1054,1102],ratio:[875,1048,1055,1064,1069,1102,1247,1249],raw:[40,41],raw_delta:1102,reach:[875,897,901,907,1102,1146,1155],read:[40,41],readi:[1102,1256],real:[1081,1082,1086],realiti:1257,rearrang:[40,41,949,975,977],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1098,1100],receiv:[875,884,885,949,953,1006,1102,1231,1241],receivess:[875,1102],receiving_fn:1208,receivng:[1098,1101],recev:[1098,1099,1100],recognit:1260,recommend:1214,rectifi:[1175,1177,1178],recurr:[1183,1193],recurrent_bia:[1183,1193],recurrent_kernel:[1183,1193],recurs:[40,41,1146,1147,1148,1154,1155],redefin:43,reduc:[40,41,830,831,832,875,919,949,976,1102,1165,1167,1168,1169,1170,1171,1172,1173],reduce_max:[40,41,175,356,471,599,775,1165],reduce_mean:[40,41,175,356,471,599,775,1165,1214,1256],reduce_min:[40,41,175,356,471,599,775,1165],reduce_prod:[40,41,175,356,471,599,775,1165],reduce_std:[40,41,356,1165],reduce_sum:[40,41,175,356,471,599,775,1102,1165],reduce_var:[40,41,175,356,471,599,775,1165],reduct:[39,40,41,419,447,448,830,831,832,949,976,1021,1022,1166,1167,1168,1169,1170,1171,1172,1173,1214],refactor:43,refer:[830,831,832,1048,1050,1051,1071,1077,1231,1241,1260],reflected_oper:[0,13,14],regard:[875,1102],regardless:[40,41,873,874],register_paramet:1256,reimplement:1260,rel:[1048,1051,1053,1055,1056,1057],rel_slice_obj:1102,relev:[1247,1248,1249,1250,1251,1252],relu:[784,1175,1176,1177,1214,1256],remain:[43,949,1019,1146,1150],remaind:[40,41,949,983,1029],remov:[40,41,949,1030,1098,1099,1100],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,949,981],rep:[949,1036],repeat:[40,41,282,663,949,977,1036,1102,1257],repeated_config_check:[875,1102],repeatedli:[1146,1153],repetit:[40,41,949,1018,1036],replac:[40,41,43,469,470,949,963,1021,1022,1158,1159],repo:1214,repres:[43,925,931,936,1183,1192],represent:[40,41,42,43,805,809,810,811,813,814,875,902,903,925,931,937,938,949,1028,1038,1102],reptil:[1098,1101],reptile_step:1098,requir:[43,873,874,925,929,949,952,956,1220,1221],resampl:[949,1003],reshap:[40,41,43,469,663,949],reshape_lik:[40,41],respect:[813,814,818,834,853,949,978,1048,1050,1051,1052,1053,1055,1056,1057,1081,1090,1098,1099,1100,1101],respons:1102,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,813,814,816,818,819,821,822,830,831,832,834,853,859,875,884,949,952,978,1021,1022,1033,1071,1074,1078,1079,1080,1081,1090,1102,1165,1167,1168,1169,1170,1171,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1214],ret:1102,ret_dict:1102,ret_fn:[875,884,885,1102],retain:[1048,1052],retain_grad:[454,455,1048,1052],retreiv:1102,retrn:[949,1028],return_cont:[40,41],return_dict:[40,41],return_graph:[1202,1203,1204],return_inner_v:[1098,1099,1100,1101],return_sequ:[1231,1240],return_st:[1231,1240],rev:[949,974],revers:[40,41,949,974,981,1041],right:[40,41],rk_e:1260,robot:1214,ronald:1214,round:[282,419,663,949,952,1102],row:[949,994,1158,1159],rule:[43,813,814,834,859,949,952,1081,1090],run:[875,884,1048,1050,1051,1055,1098,1099,1100,1101,1102,1214,1215,1231,1242,1243,1244],safe:[875,884,1102],safety_factor:[875,1102],same:[15,16,17,40,41,43,875,884,885,919,920,925,929,949,950,962,966,982,983,986,987,1013,1015,1020,1021,1022,1033,1047,1048,1054,1059,1071,1076,1081,1086,1098,1099,1100,1102,1165,1166,1183,1184,1185,1186,1187,1188,1189,1190,1214,1231,1232,1233,1234,1235,1236,1237,1238,1256,1260],same_arrai:[40,41],sampl:[949,1003,1064,1065,1158,1159,1161,1162,1183,1191,1214,1231,1239],satisfi:[949,956,1071,1073,1077],save:[40,41,949,1026,1037,1064,1066,1243,1244],save_debug_info:1208,save_dir:[417,418,875,890,1102],save_to_disk:[1202,1204,1208,1243,1244],save_weight:[1243,1244],scalar:[949,963,1013,1040,1044],scale:[875,917,918,1048,1056,1102,1183,1191,1194,1195,1200,1201,1231,1239,1242,1247,1250],scaled_dot_product_attent:1183,scatter:[949,1013,1021,1022],scatter_flat:[122,282,419,540,663,949],scatter_nd:[122,282,419,540,663,949],scene:[1048,1051,1053,1055,1056,1057],schemat:1214,screen:[40,41],search:[15,18,19,40,41],second:[40,41,813,814,875,906,949,957,970,978,1017,1025,1035,1048,1050,1051,1055,1098,1100,1102,1247,1248,1249],secondli:1260,see:[43,59,382,417,418,469,813,814,830,831,832,834,853,859,875,887,888,889,890,925,949,952,1004,1005,1048,1081,1090,1208,1212,1214,1222,1224,1225,1227,1228,1230],seed:[40,41,168,469,768,1158],seed_valu:[40,41,469,1158,1163],seem:1214,seen_set:[949,992],select:[949,956,1030,1257,1260],self:[40,41,43,59,382,417,418,834,853,859,875,887,888,889,890,925,1048,1102,1208,1212,1214,1222,1224,1225,1227,1228,1230,1247,1251,1256,1260],self_i:[834,853],sent:1102,seper:[949,984],seq:[40,41,42,1165,1166,1243,1244],sequenc:[15,16,17,40,41,42,43,469,821,822,873,874,875,884,885,894,895,896,897,898,899,900,901,904,905,919,925,929,949,952,956,958,960,966,967,981,994,1006,1009,1014,1018,1019,1022,1029,1033,1036,1041,1046,1048,1052,1064,1068,1069,1071,1074,1102,1146,1157,1158,1160,1162,1165,1167,1168,1169,1170,1171,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1200,1201,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1240,1243,1244,1245,1246,1247,1251,1253,1254],sequenti:1214,set:[15,18,19,40,41,821,822,875,904,905,917,918,919,949,951,973,994,1023,1024,1025,1026,1048,1051,1053,1054,1055,1056,1057,1071,1074,1102,1146,1147,1154,1156,1157,1158,1159,1163,1165,1167,1168,1169,1170,1171,1172,1173,1212,1214,1231,1240,1247,1248,1249,1250,1251,1252,1257,1260],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1212,set_debug_mod:44,set_default_devic:875,set_default_dtyp:925,set_default_float_dtyp:925,set_default_int_dtyp:925,set_default_nod:1102,set_exception_debug_mod:44,set_framework:[40,41,59,1102,1214,1256,1257,1260],set_ivy_backend:[40,41],set_min_bas:949,set_min_denomin:949,set_nest_at_index:1146,set_nest_at_indic:1146,set_param:1208,set_queue_timeout:949,set_split_factor:[875,1102],set_stat:[1247,1248,1249,1250,1251,1252],set_tmp_dir:949,set_with_grad:1048,setter:1102,sever:1260,sgd:[1214,1247],shape0:1102,shape:[40,41,43,379,380,381,419,433,448,469,663,806,807,808,875,887,925,929,949,950,960,962,966,967,980,981,982,983,985,987,991,994,1013,1014,1015,1018,1019,1020,1021,1022,1028,1030,1033,1046,1047,1064,1068,1071,1073,1081,1086,1087,1102,1158,1160,1161,1162,1165,1166,1183,1185,1187,1189,1208,1212,1231,1233,1234,1235,1236,1237,1238,1245,1246],shape_slic:[40,41],shape_to_tupl:949,share:[40,41,1214,1257],shift:1102,should:[40,41,42,43,469,813,814,816,834,853,859,873,874,875,949,960,961,968,1013,1019,1048,1051,1053,1055,1056,1057,1081,1090,1102,1165,1166,1214],show:[40,41,1208,1214,1260],show_debug_info:1208,show_graph:[1202,1214,1243,1244,1247,1251],show_mod_in_top_mod:[1243,1244],show_structur:[1243,1244],show_sub_contain:[40,41],show_v:[1243,1244],show_v_in_top_v:[1243,1244],shown:[40,41],shp:1102,shuffl:[40,41,168,469,768,1158],shuffle_h5_fil:[40,41],sigmoid:[784,1175,1214,1256],signatur:[43,59,382,417,418,419,454,459,463,466,467,469,875,887,888,889,890,925,1048,1208,1212,1222,1224,1225,1227,1228,1230],signific:1260,similar:[43,1183,1194,1231,1242],simpl:[43,949,979,1214,1257,1260],simplest:1257,simpli:[40,41,43,1214,1257,1260],simultan:1214,sin:[752,949,984,1081,1096,1257],sinco:1257,sine:[1081,1084,1085,1094,1095],singl:[40,41,873,874,875,884,885,904,905,906,907,949,1030,1040,1044,1064,1069,1102,1158,1161,1162,1165,1167,1168,1169,1170,1171,1172,1173,1214,1257,1260],singleton:[830,831,832],singular:[1071,1076],sinh:[752,1081],siren:[1214,1222],size:[40,41,42,419,447,821,822,875,898,899,900,901,917,918,919,949,952,960,1004,1005,1021,1029,1064,1068,1071,1074,1076,1102,1158,1159,1161,1162,1165,1167,1168,1169,1170,1171,1172,1173,1231,1232,1233],size_ordered_arrai:[40,41],skew:[1071,1077],skinv:1260,skip:[40,41],slice:[40,41,827,828,949,986,987,1102,1146,1153],slice_kei:[40,41],slice_obj:[40,41,1102],slice_via_kei:[40,41],slide:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],slope:[1175,1177],small:[1196,1197,1198,1199,1200,1201,1214,1245,1246,1257],smaller:[949,963],smallest:[40,41,809,810,811,949,955,962],smallest_norm:[382,809,810],softmax:[184,480,784,1175,1183,1194,1195],softplu:[784,1175],solv:1260,some:[40,41,43,949,952,1048,1050,1051,1053,1055,1056,1057,1062,1183,1191,1214,1231,1239,1257,1260],some_backend:43,some_namespac:43,someth:[43,1260],something_cool:43,somewher:[40,41],sort:[40,41,42,828,1071,1076,1102],sort_by_kei:[40,41],sorting_funct:[827,828],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,379,380,381,382,384,385,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,884,885,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1212,1217,1218,1219,1220,1221,1222,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1258,1259,1260],space:[949,952,984,1004,1005],spars:[1196,1199],sparse_cross_entropi:1196,spawn:[949,1011],specif:[40,41,43,875,917,949,968,975,976,977,1011,1098,1099,1100,1101,1102,1158,1164,1214,1243,1244,1256,1257],specifc:[1158,1159],specifi:[40,41,43,821,822,830,831,832,875,894,895,896,897,898,899,900,901,904,905,909,911,915,918,919,920,925,929,931,949,952,954,955,956,963,966,967,985,986,987,993,1004,1005,1033,1043,1046,1071,1074,1102,1146,1151,1152,1156,1157,1165,1166,1167,1168,1169,1170,1171,1172,1173],split:[40,41,122,282,419,540,663,875,884,898,899,900,901,917,918,919,949,1006,1102],split_arg:1102,split_factor:[875,884,1102],split_func_cal:[875,1102],split_siz:1102,spread:[875,907,1102],squar:[949,994,1071,1073],squeez:[122,282,419,540,663,949],stabil:[827,828,949,1031,1032],stabl:[827,828,949,989,990,1023,1024,1031,1032],stable_divid:949,stable_pow:949,stack:[40,41,282,663,949,1064,1069,1146,1147,1154,1231,1240],stack_imag:[159,338,459,584,738,1064],stacked_dim_s:1102,stage:43,standard:[40,41,43,809,810,1158,1161,1165,1171,1200,1201,1245,1246],start:[40,41,417,418,419,420,443,444,469,875,890,949,952,1004,1005,1102,1214,1257],starting_index:[40,41],starting_split_factor:[875,1102],state:[1102,1183,1193,1202,1203,1204,1208,1214,1217,1218,1219,1220,1221,1222,1224,1225,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256],statement:1257,static_argnam:[419,425,873,874],static_argnum:[419,425,873,874],std:[469,1158,1161],step:[40,41,419,420,875,949,952,1004,1005,1048,1050,1051,1053,1055,1056,1057,1098,1099,1100,1101,1102,1214,1247,1248,1249,1250,1251,1252,1256,1260],stephen:1214,stick:1214,still:[40,41],stochast:[1247,1252],stop:[40,41,417,418,419,420,443,444,875,890,919,949,952,1004,1005,1048,1051,1053,1055,1056,1057,1059,1098,1099,1100,1101,1102,1247,1248,1249,1250,1251,1252],stop_gradi:[40,41,333,454,579,732,875,919,1048,1051,1053,1055,1056,1057,1098,1099,1100,1101,1102,1247,1248,1249,1250,1251,1252],stopiter:1102,store:[40,41,949,984,1029,1048,1062,1243,1244],store_var:[1243,1244],str:[15,16,17,40,41,42,43,379,380,381,382,384,385,809,810,811,821,822,873,874,875,884,885,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,919,925,930,931,936,937,938,939,940,941,948,949,956,973,975,976,977,1009,1011,1014,1021,1022,1071,1074,1098,1099,1100,1101,1102,1146,1150,1165,1166,1220,1221,1231,1242,1243,1244],str_to_nod:1102,straight:1257,strength:[1214,1260],stride:[1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],string:[40,41,43,875,891,893,902,903,908,914,920,921,924,925,929,935,937,938,939,948,949,952,956,973,994,1014,1015,1047,1102,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238,1243,1244],structur:[40,41,42,43,949,968],structural_diff:[40,41],sub:[40,41,875,898,899,904,905,906,907,949,1029,1098,1099,1100,1101,1102],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1102,sub_mod:[1243,1244],sub_modul:[1253,1254],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1214,1215,1245,1246,1253,1254],subsequ:43,subset:43,substr:[40,41],suggest:1214,suitabl:[1064,1069],sum:[40,41,419,447,448,875,904,905,906,907,919,949,972,976,1021,1022,1102,1165,1166,1172],summat:[40,41,1165,1166],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,94,100,103,104,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,169,170,171,172,173,174,176,177,178,179,180,181,182,185,187,188,190,191,192,193,194,195,196,201,202,204,205,206,209,210,211,212,213,216,222,225,226,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,339,340,341,343,344,345,346,348,349,352,353,354,355,357,358,359,360,361,362,363,364,367,369,370,371,372,373,374,375,380,381,383,384,385,388,389,390,391,392,393,396,402,405,406,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,460,461,462,464,465,468,470,472,473,474,475,476,477,478,481,482,484,485,486,487,488,489,490,495,496,498,499,500,503,504,505,506,507,508,511,517,520,521,529,534,535,536,537,538,539,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,580,581,582,583,585,586,587,589,590,591,595,596,597,598,600,601,602,603,604,605,606,610,611,612,617,618,620,621,622,625,626,627,628,629,630,633,639,642,643,651,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,733,734,735,736,737,739,740,741,743,744,745,746,747,748,750,751,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,774,776,777,778,779,780,781,782,785,786,787,788,789,790,791,793,794,796,797,798,799,800,801,802,807,808,810,811,814,815,816,817,818,819,822,828,831,832,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1099,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1201,1203,1204,1206,1207,1209,1213,1214,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1259,1260],supports_inplac:949,suppos:1260,svd:[342,588,742,1071],swap:[40,41,949,1035],swapax:[40,41,540,663,949,1260],symmetr:[1071,1077],syntax:[417,419,454,459,463,466,467,469],tab:1214,take:[949,1003],taken:[1165,1167,1168,1169,1171,1173],tan:[752,1081,1086],tangent:[1081,1086,1087,1088,1096,1097,1175,1182],tanh:[752,784,1081,1175],target:[40,41,875,891,894,895,896,897,898,899,900,901,904,905,906,907,920,1102,1214],target_dict:[40,41],task:[1098,1099,1100,1101],team:1260,templat:1214,temporari:[949,1026,1037],tensor:[40,41,43,419,447,448,827,828,875,893,925,935,949,952,954,955,960,1004,1005,1008,1010,1013,1014,1015,1019,1021,1022,1029,1047,1102,1158,1159,1160,1183,1191,1193,1214,1231,1239,1241,1247,1248,1249,1250,1251,1252,1256,1257],tensorflow:[1183,1185,1187,1189,1214,1231,1233,1235,1237,1257,1260],term:[40,41,1183,1193,1214,1231,1241],termcolor:[40,41,42],termin:[40,41,42,1102],test:[813,816,830,831,832,925,940,941],tf_concat:1214,than:[40,41,809,810,875,919,949,952,962,963,982,1001,1008,1030,1033,1048,1054,1102,1158,1162,1214,1257],thei:[40,41,43,1081,1087,1098,1099,1100,1158,1159,1214,1253,1254,1257],them:[1214,1260],themselv:[1146,1147],therefor:43,thi:[40,41,42,43,821,822,875,897,901,907,914,919,924,949,952,984,1017,1019,1025,1048,1051,1053,1054,1055,1056,1057,1062,1071,1074,1102,1146,1150,1155,1165,1167,1168,1169,1170,1171,1172,1173,1183,1192,1214,1243,1244,1247,1248,1249,1250,1251,1252,1256,1257,1260],thing:[43,1214],those:[40,41,949,963,1048,1062,1071,1076,1102],though:43,threshold:[949,1008,1010],through:[40,41],tile:[282,540,663,949],time:[949,1036,1048,1051,1055,1098,1099,1100,1101,1102,1158,1159,1183,1193,1231,1242,1243,1244,1260],time_chronolog:[1202,1203,1208],time_infer:[1202,1203],timeout:[40,41,42,875,884,885,949,1017,1025,1102],timestep:[1183,1193,1231,1240],timing_fnam:[1202,1203],titl:1214,tmp_dir:949,tmp_dr:[949,1026],to_appli:[40,41],to_clon:[875,1102],to_dev:[40,41,115,276,417,533,655,875],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[875,1102],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1214],to_ivy_modul:[186,792,1214,1220],to_json:[40,41],to_kv_fn:[1183,1194],to_kv_v:[1183,1194],to_list:[40,41,419,663,949],to_multi_dev:[40,41],to_mut:[1146,1148,1155],to_n:[15,40,41,1214],to_nod:1102,to_numpi:[40,41,419,663,949,1214,1256],to_out_fn:[1183,1194],to_out_v:[1183,1194],to_q_fn:[1183,1194],to_q_v:[1183,1194],to_raw:[40,41],to_scalar:[419,663,949],todo:1102,togeth:[40,41,1253,1254],tool:[1214,1257],top_mod:[1243,1244],topic:1260,torch:[43,873,874,1214,1256,1257,1260],torch_concat:1214,torchfcmodel:1256,total:[40,41,42,875,921,1102],total_mem_on_dev:875,total_mem_on_nod:1102,tpu:[875,922,1102],tpu_is_avail:[417,533,655,875,1102],tpye:[925,936],trace:[40,41,949,1001],track:[875,1102,1146,1155,1243,1244],track_submod_call_ord:[1243,1244],track_submod_ret:[1243,1244],trail:[1245,1246],train:[1048,1050,1051,1055,1214,1215],trainabl:[1048,1054,1214,1215,1220,1221,1243,1244,1253],trainer:1214,tran:1260,transform:[1183,1191,1192],transpos:[40,41,122,282,419,663,875,906,949,1102,1183,1185,1187,1189,1231,1233,1235,1237],travers:[15,18,19,40,41,1146,1155],treat:[40,41,873,874],tree_depth:1212,tree_height:1208,tri:[40,41],trigonometr:[813,815,1081,1082,1086,1094],trim_kei:[40,41],trust:[1048,1055,1247,1249],truth:[813,818,819,834,853,949,978,1078,1079,1080],try_else_non:949,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[875,1102],tune_dev_alloc:875,tune_dev_split:875,tune_node_alloc:1102,tune_node_split:1102,tune_step:[875,1102],tupl:[15,16,17,18,19,40,41,43,379,380,381,806,807,808,821,822,830,831,832,873,874,949,967,984,985,1028,1046,1102,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1160,1165,1167,1168,1169,1170,1171,1172,1173],two:[40,41,949,952,957,970,1007,1035,1071,1074,1076],type:[15,18,40,41,42,43,59,384,385,417,418,806,807,808,810,811,813,814,816,818,830,831,832,834,853,859,875,887,888,889,890,902,903,907,919,925,929,930,931,935,936,937,938,939,940,941,948,949,950,952,956,962,966,968,978,982,983,985,994,1001,1013,1014,1015,1020,1034,1044,1047,1048,1054,1059,1081,1090,1102,1208,1212,1214,1222,1224,1225,1227,1228,1230,1243,1244,1257],types_to_iteratively_nest:[40,41,42],uint8:[1064,1066,1070],uint8_img_to_float_img:1064,unchang:[15,16,17,18,19],underli:[813,814],unif:1102,unifi:[40,41,875,904,905,906,907,919,1102,1214],uniform:[40,41,1158,1159,1161,1162,1222,1224,1225,1228,1229],uniformli:[1158,1160,1162],unify_arrai:1102,unify_it:1102,unify_nest:1102,union:[15,18,19,40,41,43,379,380,381,382,384,385,806,807,808,809,810,811,813,814,815,816,817,818,819,821,822,827,828,830,831,832,834,853,859,873,874,875,893,898,899,900,901,919,920,925,929,930,931,935,936,937,938,939,940,941,948,949,950,951,952,954,955,956,957,958,960,962,963,964,965,966,967,969,970,971,972,975,976,977,978,980,981,982,983,984,985,986,987,991,993,994,995,1002,1003,1004,1005,1007,1008,1009,1010,1013,1014,1015,1018,1019,1020,1021,1022,1027,1028,1029,1030,1033,1035,1036,1038,1039,1040,1041,1043,1044,1045,1046,1047,1102,1146,1147,1148,1154,1155],uniqu:[875,884,885,1098,1099,1100,1101,1102,1146,1150],unique_kwarg:1102,unit:[875,1081,1082,1084,1102,1175,1176,1177,1178],unitari:[1071,1076],unless:[949,1013,1015,1047],unlik:[875,1102],unnorm:[1158,1159],unpack:[949,1043],unrol:[1183,1193],unset:1257,unset_debug_mod:44,unset_default_devic:875,unset_default_dtyp:925,unset_default_float_dtyp:925,unset_default_int_dtyp:925,unset_framework:[59,1257],unset_with_grad:1048,unstack:[40,41,122,282,419,540,663,949],unus:[873,874],updat:[40,41,419,447,448,875,884,949,999,1021,1022,1048,1050,1051,1053,1055,1056,1057,1098,1099,1100,1102,1146,1151,1152,1156,1157,1183,1193,1220,1221,1247,1248,1249,1250,1251,1252,1257,1260],update_backend:[40,41],update_config:[40,41],update_inference_tim:1208,upper:[40,41,1158,1162],upper_depth:[1243,1244],usabl:[1214,1260],usag:[875,919,1102],use:[40,41,42,43,469,875,884,885,910,922,949,1018,1031,1032,1102,1183,1194,1200,1201,1214,1245,1246,1257,1260],used:[40,41,43,469,875,884,914,917,918,924,925,936,949,989,990,1006,1015,1021,1022,1023,1024,1047,1048,1055,1056,1071,1074,1098,1099,1100,1101,1102,1146,1155,1231,1242,1247,1249,1250,1256,1257],used_dev:[875,884],used_mem_on_dev:875,used_mem_on_nod:1102,used_node_str:1102,used_node_strs_dict:1102,useful:[40,41,875,919,1102,1183,1192,1214,1257],user:[1214,1231,1242,1243,1244,1257,1260],uses:1214,using:[40,41,1048,1050,1051,1146,1149,1153,1165,1166,1183,1191,1195,1214,1231,1239,1256,1257,1260],util:[875,908,1102],utility_funct:[830,831,832],v_with_top_v_key_chain:[1243,1244],val:[40,41,419,438,439,440,834,869,949,997,998,999,1023,1024,1212],valid:[830,831,832,925,930,949,1031,1032,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],valid_dtyp:925,valu:[40,41,419,813,817,818,819,827,828,834,853,875,887,918,919,949,950,952,954,955,963,964,965,967,968,974,978,984,985,986,987,1002,1004,1005,1008,1010,1017,1018,1019,1020,1021,1022,1023,1024,1025,1041,1044,1045,1046,1048,1052,1055,1064,1070,1071,1076,1078,1079,1080,1081,1091,1092,1093,1098,1099,1100,1102,1146,1150,1151,1152,1156,1157,1158,1161,1162,1165,1167,1169,1183,1194,1195,1200,1201,1208,1231,1242,1245,1246,1247,1249],value_is_nan:949,vanilla:[1098,1100],var_shap:1222,variabl:[15,16,17,18,19,40,41,333,454,579,732,949,959,997,998,999,1000,1001,1034,1048,1051,1052,1053,1054,1055,1056,1057,1059,1062,1098,1099,1100,1101,1183,1194,1200,1201,1220,1221,1222,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254],variable_data:[454,732,1048],varianc:[40,41,1165,1173,1260],varieti:1257,variou:[43,1214],vector:[40,41,463,465,821,822,949,965,970,1071,1076,1077,1183,1192,1231,1241],vector_norm:[40,41,93,215,395,510,632,821],vector_to_skew_symmetric_matrix:[163,342,463,588,742,1071],verbos:1259,veri:[43,1214],version:43,via:[1146,1147,1154,1257],view:[1064,1069],vision:1214,visual:1257,volum:[1183,1188],vw_tm1:[1048,1051,1055],wai:[1257,1260],wait:[40,41,42],want:[1214,1257,1260],warn:[59,66,67,68,69,70],warp:[459,460,1064,1065],watch:1256,weight:[1048,1050,1051,1053,1055,1056,1057,1183,1192,1193,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1243,1244,1247,1249,1250],weight_initi:[1231,1232,1233,1234,1235,1236,1237,1238,1240,1241],weights_path:[1243,1244],well:[40,41,949,993],were:[40,41,1102],what:1214,when:[40,41,42,43,875,949,961,1032,1045,1071,1076,1102,1214,1243,1244,1257,1260],where:[40,41,43,282,419,663,813,817,830,831,832,834,859,949,952,960,963,967,980,995,1002,1013,1046,1071,1076,1146,1147,1154,1158,1159],wherea:43,wherebi:[1146,1155],whether:[15,18,19,40,41,42,830,831,832,873,874,875,893,906,910,914,919,922,924,925,935,939,940,941,948,949,951,957,958,971,974,979,984,991,993,996,1000,1001,1006,1027,1034,1043,1044,1048,1051,1052,1053,1054,1055,1056,1057,1059,1098,1099,1100,1101,1102,1146,1147,1148,1150,1154,1155,1158,1159,1175,1176,1183,1191,1214,1220,1221,1231,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],which:[40,41,42,43,469,806,807,808,809,810,811,821,822,830,831,832,873,874,875,884,885,893,898,899,900,901,904,905,906,907,909,911,915,917,918,919,925,930,935,939,948,949,952,956,966,968,970,971,972,974,981,985,986,987,988,994,995,1003,1004,1005,1012,1013,1014,1015,1016,1018,1021,1022,1029,1033,1043,1045,1047,1048,1051,1052,1053,1055,1056,1057,1059,1061,1062,1064,1066,1071,1074,1081,1087,1102,1146,1150,1151,1152,1156,1157,1158,1159,1160,1161,1162,1165,1167,1168,1169,1170,1171,1172,1173,1175,1180,1183,1194,1195,1214,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1256,1257],whitespac:[40,41,42],whose:[43,834,859,949,956,961,1165,1166,1167,1168,1169,1171,1173],why:[1214,1215],width:[1064,1069],wiki:1260,wikipedia:1260,window:[1064,1069,1183,1184,1185,1186,1187,1188,1189,1190,1231,1232,1233,1234,1235,1236,1237,1238],wise:[40,41,43,813,814,815,818,819,834,853,859,949,962,963,978,982,983,1008,1010,1020,1048,1051,1053,1055,1057,1078,1079,1080,1081,1082,1084,1086,1087,1090,1091,1092,1093,1094,1096,1175,1176,1177,1178,1179,1180,1181,1182],wish:1257,with_arg_label:[1202,1204,1208,1243,1244],with_array_cach:[1202,1203,1204,1208],with_bia:[1231,1241],with_cal:[949,974],with_default_key_color:[40,41],with_edge_label:[1202,1204,1208,1243,1244],with_entries_as_list:[40,41],with_grad:[1048,1058,1243,1244],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1102,with_output_label:[1202,1204,1208,1243,1244],with_partial_v:[1243,1244],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,419,449,949,1029,1102],with_to_kv_fn:[1231,1242],with_to_out_fn:[1231,1242],with_to_q_fn:[1231,1242],within:[15,18,19,949,952,1071,1076,1158,1162],without:[40,41,43,949,1017,1019,1025,1146,1148,1257],wonder:1214,word:[15,16,17,949,952,1158,1162,1220,1221],work:[43,1256],worker:[875,884,885,1102],worker_class:[875,884,885,1102],worker_kwarg:1102,would:[43,827,828,1175,1180,1214,1257,1260],wrap:[15,40,41,42,43,417,419,454,459,463,466,467,469,949,961,1048,1062,1214],wrapper:43,write:[40,41,43,1214,1215,1260],written:[43,1214,1260],ws_new:[1048,1051,1053,1055,1056,1057],x1_i:[813,814,818,949,978,1081,1090],x2_i:[813,814,818,949,978,1081,1090],x_feat_dim:[1183,1194],x_i:[813,816],x_in:[1214,1256],x_inv:[1071,1073],x_max:[419,949,963],x_min:[419,949,963],x_sub:1102,xkk:1260,xkkm1:1260,xkm1km1:1260,xs0:1102,xs_t:1102,year:[1214,1260],yet:[1146,1155,1260],yield:[949,1045],you:[1214,1256,1257,1260],your:[1214,1256,1257,1260],your_awesome_project:1257,yourself:1214,zero:[40,41,77,200,379,494,616,806,830,831,832,949,967,1013,1015,1021,1022,1046,1047,1048,1050,1051,1055,1056,1183,1191,1214,1222,1231,1232,1233,1234,1235,1236,1237,1238,1239,1241,1247,1248,1249,1250],zero_pad:[282,419,540,663,949],zeros_lik:[122,282,419,540,663,949],zip:1102,zk_e:1260},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":974,"function":[77,80,85,92,95,96,97,98,99,101,102,200,203,208,214,217,218,219,220,221,223,224,379,382,387,394,397,398,399,400,401,403,404,494,497,502,509,512,513,514,515,516,518,519,616,619,624,631,634,635,636,637,638,640,641,806,809,813,820,823,824,825,826,827,829,830],Ones:1227,Using:1257,abs:[283,541,664,950],aco:[753,1082],acosh:[754,1083],activ:[184,366,480,608,784,1175,1217],adam:1248,adam_step:1050,adam_upd:1051,algebra:[93,95,215,217,395,397,510,512,632,634,821,823],all:[103,225,405,520,642,831],all_equ:951,all_nested_indic:1147,ani:[104,226,406,521,643,832],api:[0,43,75,106,198,228,377,408,492,523,614,645,804],arang:[123,284,420,542,665,952],arg_nam:953,argmax:[124,421,543,666,954],argmin:[125,422,544,667,955],args_to_ivi:16,args_to_n:17,argsort:[100,222,402,517,639,828],arithmet:[1,107,229,409,524,646],arrai:[0,3,43,75,105,106,108,126,198,227,228,230,237,285,377,407,408,410,423,492,522,523,525,545,614,644,645,647,668,804,834,956],array_equ:[286,669,957],arrays_equ:958,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[755,1084],asinh:[756,1085],assert_supports_inplac:959,atan2:[758,1087],atan:[757,1086],atanh:[759,1088],attribut:[5,109,231,411,526,648],backend:[43,73],bilinear_resampl:[160,339,460,585,739,1065],binary_cross_entropi:1197,bitwis:[7,110,232,412,527,649],bitwise_and:[86,209,388,503,625,814],broadcast_to:[287,670,960],builder:51,builtin:[105,227,237,407,522,644,834],builtin_ab:[238,835],builtin_add:[239,836],builtin_and:[240,837],builtin_bool:[241,838],builtin_contain:[242,839],builtin_deepcopi:[243,840],builtin_dir:[244,841],builtin_eq:[245,842],builtin_float:[246,843],builtin_floordiv:[247,844],builtin_g:[248,845],builtin_getattr:[249,846],builtin_getattribut:[250,847],builtin_getitem:[251,848],builtin_gt:[252,849],builtin_int:[253,850],builtin_invert:[254,851],builtin_l:[255,852],builtin_lt:[256,529,651,853],builtin_mul:[257,854],builtin_n:[258,855],builtin_neg:[259,856],builtin_or:[260,857],builtin_po:[261,858],builtin_pow:[262,859],builtin_radd:[263,860],builtin_rand:[264,861],builtin_rfloordiv:[265,862],builtin_rmul:[266,863],builtin_ror:[267,864],builtin_rpow:[268,865],builtin_rsub:[269,866],builtin_rtruediv:[270,867],builtin_rxor:[271,868],builtin_setitem:[272,869],builtin_sub:[273,870],builtin_truediv:[274,871],builtin_xor:[275,872],cache_fn:961,cast:[127,288,424,546,671,929],ceil:[289,672,962],choleski:[743,1072],choose_random_framework:61,citat:1214,clear_framework_stack:62,clear_mem_on_dev:[657,891],clip:[290,673,963],clip_matrix_norm:964,clip_vector_norm:965,clone:1117,clone_arrai:1118,clone_it:1119,clone_nest:1120,clonedit:1104,cloneditem:1103,clonednest:1105,closest_valid_dtyp:930,code:1260,comparison:[9,111,233,413,528,650],compil:[291,425,674,873,874,1202],compile_graph:1203,concaten:[128,292,426,547,675,966],constant:[76,199,378,493,615,805],constant_pad:[293,548,676,967],contain:[40,41],container_typ:[677,968],content:1214,contribut:43,conv1d:[190,369,484,796,1184,1232],conv1d_transpos:[191,370,485,797,1185],conv1dtranspos:1233,conv2d:[192,371,486,610,798,1186,1234],conv2d_transpos:[193,372,487,799,1187],conv2dtranspos:1235,conv3d:[194,373,488,611,800,1188,1236],conv3d_transpos:[195,374,489,801,1189],conv3dtranspos:1237,convers:15,convert:[186,792,1220],convert_dtyp:931,copy_arrai:[678,969],copy_nest:1148,core:[114,236,416,532,654,833],cos:[87,389,504,626,815],cosh:[760,1089],cprint:1259,creation:[77,200,379,494,616,806],cross:[294,679,970],cross_entropi:1198,cumprod:[129,295,427,680,971],cumsum:[681,972],current_framework:63,current_framework_str:[682,973],data:[80,84,203,207,382,386,497,501,619,623,809,812],debug_mod:45,debugg:44,default_devic:892,default_dtyp:932,default_float_dtyp:933,default_int_dtyp:934,default_nod:1121,depthwise_conv2d:[196,375,490,612,802,1190],depthwiseconv2d:1238,design:43,dev:[117,278,535,658,893],dev_clon:894,dev_clone_arrai:895,dev_clone_it:896,dev_clone_nest:897,dev_dist:898,dev_dist_arrai:899,dev_dist_it:900,dev_dist_nest:901,dev_from_str:[118,279,536,659,902],dev_to_str:[119,280,537,660,903],dev_unifi:904,dev_unify_arrai:905,dev_unify_it:906,dev_unify_nest:907,dev_util:908,devclonedit:878,devcloneditem:877,devclonednest:879,devdistit:881,devdistitem:880,devdistnest:882,devic:[20,115,276,417,533,655,875],devmapp:884,devmappermultiproc:885,distribute_nest:1122,divid:1090,document:1214,dropout:[1191,1239],dtype:[130,296,428,549,683,925,935],dtype_bit:[131,297,429,550,684,936],dtype_from_str:[132,298,430,551,685,937],dtype_to_str:[133,299,431,552,686,938],ecosystem:52,einops_rearrang:975,einops_reduc:976,einops_repeat:977,einsum:[176,357,472,600,776,1166],elementwis:[85,208,387,502,624,813],equal:[553,687,978],erf:[468,761,1091],execute_with_gradi:[157,334,455,580,733,1052],exist:979,exp:[762,1092],expand_dim:[300,688,980],extens:[93,215,395,510,632,821],finfo:[82,205,384,499,621,810],firstlayersiren:1224,flip:[134,301,432,554,689,981],float_img_to_uint8_img:1066,floor:[302,690,982],floormod:[303,691,983],fomaml_step:1099,fourier_encod:984,framework:59,full:[135,304,433,555,692,985],func:72,gather:[136,305,434,556,693,986],gather_nd:[137,306,435,557,694,987],geglu:1218,gelu:[367,481,785,1176,1219],gener:[22,122,282,419,540,663,949],get_all_arrays_in_memori:988,get_all_arrays_on_dev:909,get_framework:64,get_min_bas:989,get_min_denomin:990,get_num_dim:[695,991],get_referrers_recurs:992,global:1205,glorotuniform:1225,gpu_is_avail:[910,1123],gradient:[24,156,333,454,579,732,1048],gradient_descent_upd:1053,gradient_imag:[161,340,461,586,740,1067],graph:1208,gym:53,handler:59,has_nan:993,helper:1210,ident:[138,307,436,558,696,994],iinfo:[83,206,385,500,622,811],imag:[26,159,338,459,584,738,1064],index_nest:1149,indices_wher:[139,308,437,697,995],initi:1222,inplac:[11,112,234,414,530,652],inplace_arrays_support:996,inplace_decr:[140,309,438,559,698,997],inplace_incr:[141,310,439,560,699,998],inplace_upd:[142,311,440,561,700,999],inplace_variables_support:1000,inv:[744,1073],invalid_dtyp:939,is_arrai:[143,312,441,562,701,1001],is_float_dtyp:940,is_int_dtyp:941,is_vari:[158,335,456,581,734,1054],isfinit:[88,210,390,505,627,816],isinf:[313,563,702,1002],isnan:[89,211,391,506,628,817],ivi:[43,50,51,52,53,54,55,56,57,58,803,1256,1257,1260],ivymodul:[187,793],jax:74,lamb:1249,lamb_upd:1055,lar:1250,lars_upd:1056,layer:[189,368,483,609,795,1183,1231],layer_norm:1201,layernorm:1246,leaky_relu:[786,1177],less:[90,212,392,507,629,818],linalg:[28,163,342,463,588,742,1071],linear:[93,95,215,217,395,397,510,512,632,634,821,823,1192,1241],linear_resampl:[144,314,442,564,703,1003],linspac:[145,315,443,565,704,1004],log:[763,1093,1211],log_global_inference_abs_tim:1206,log_global_inference_rel_tim:1207,logic:[30,166,347,466,592,749,1078],logical_and:[348,750,1079],logical_not:[91,213,393,508,630,819],logical_or:[349,751,1080],logspac:[146,316,444,566,705,1005],loss:1196,lstm:1240,lstm_updat:1193,maml_step:1100,manipul:[96,218,398,513,635,824],map:1150,map_nest_at_index:1151,map_nest_at_indic:1152,match_kwarg:1006,math:[32,167,350,467,593,752,1081],matmul:[317,567,706,1007],matrix_norm:[164,343,464,589,745,1074],maximum:[707,1008],mech:54,memori:55,meshgrid:[318,708,1009],meta:[34,1098],method:[92,214,394,509,631,820],minimum:[709,1010],model:56,modul:[1243,1244,1256],multi:1102,multi_head_attent:1194,multi_index_nest:1153,multidevcontain:42,multidevit:888,multidevitem:887,multidevnest:889,multiheadattent:1242,multinodeit:1108,multinodeitem:1107,multinodenest:1109,multinomi:[169,352,470,595,769,1159],multiprocess:[710,1011],mxnet:197,nativ:1256,nest:1146,nested_indices_wher:1154,nested_map:1155,network:1256,next:1214,node:[1102,1124],node_dist:1125,node_dist_arrai:1126,node_dist_it:1127,node_str:1128,node_to_str:1129,node_util:1130,nodedistit:1111,nodedistitem:1110,nodedistnest:1112,nodemapp:1114,nodemappermultiproc:1115,norm:[1200,1245],num_arrays_in_memori:1012,num_arrays_on_dev:911,num_cpu_cor:912,num_gpu:[120,913,1131],numpi:376,nutshel:1214,one_hot:[147,445,568,711,1013],ones:[78,201,380,495,617,807,1014],ones_lik:[148,319,446,569,712,1015],oper:[1,3,7,9,11,13,43,107,108,110,111,112,113,229,230,232,233,234,235,409,410,412,413,414,415,524,525,527,528,530,531,646,647,649,650,652,653],optim:[1247,1251],optimizer_upd:1057,overview:1214,param:1212,percent_used_mem_on_dev:914,percent_used_mem_on_nod:1132,pinv:[344,746,1075],portabl:1260,print_all_arrays_in_memori:1016,print_all_arrays_on_dev:915,profil:[116,277,418,534,656,890,1116],queue_timeout:1017,randint:[170,353,596,770,1160],random:[36,168,351,469,594,768,1158],random_crop:1068,random_norm:[171,354,597,771,1161],random_uniform:[172,355,598,772,1162],reduce_max:[177,358,473,601,777,1167],reduce_mean:[178,359,474,602,778,1168],reduce_min:[179,360,475,603,779,1169],reduce_prod:[180,361,476,604,780,1170],reduce_std:[362,1171],reduce_sum:[181,363,477,605,781,1172],reduce_var:[182,364,478,606,782,1173],reduct:[38,175,356,471,599,775,1165],reflect:[13,113,235,415,531,653],relu:[787,1178],repeat:[320,713,1018],reptile_step:1101,reshap:[714,1019],robot:57,round:[321,715,1020],run:1257,scaled_dot_product_attent:1195,scatter_flat:[149,322,447,570,716,1021],scatter_nd:[150,323,448,571,717,1022],search:[97,219,399,514,636,825],seed:[173,773,1163],sequenti:[1253,1254],set:[98,220,400,515,637,826],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:916,set_default_dtyp:942,set_default_float_dtyp:943,set_default_int_dtyp:944,set_default_nod:1133,set_exception_debug_mod:48,set_framework:65,set_min_bas:1023,set_min_denomin:1024,set_nest_at_index:1156,set_nest_at_indic:1157,set_queue_timeout:1025,set_split_factor:[917,1134],set_tmp_dir:1026,set_with_grad:1058,sgd:1252,shape:[718,1027],shape_to_tupl:1028,show_graph:1204,shuffl:[174,774,1164],sigmoid:[788,1179],signatur:[92,214,394,509,631,820],sin:[764,1094],sinh:[765,1095],siren:1228,softmax:[185,482,789,1180],softplu:[790,1181],sort:[99,221,401,516,638,827],sparse_cross_entropi:1199,split:[151,324,449,572,719,1029],split_factor:[918,1135],split_func_cal:[919,1136],squeez:[152,325,450,573,720,1030],stable_divid:1031,stable_pow:1032,stack:[326,721,1033],stack_imag:[162,341,462,587,741,1069],statist:[101,223,403,518,640,829],stop_gradi:[336,457,582,735,1059],str_to_nod:1137,submodul:43,supports_inplac:1034,svd:[345,590,747,1076],swapax:[574,722,1035],tan:[766,1096],tanh:[767,791,1097,1182],tensorflow:491,tile:[327,575,723,1036],tmp_dir:1037,to_dev:[121,281,538,661,920],to_ivi:18,to_ivy_modul:[188,794,1221],to_list:[724,1038],to_n:19,to_nod:1138,to_numpi:[725,1039],to_scalar:[726,1040],torch:613,total_mem_on_dev:921,total_mem_on_nod:1139,tpu_is_avail:[539,662,922,1140],train:1256,trainabl:1256,transpos:[153,328,451,727,1041],tree:1214,try_else_non:1042,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,203,207,382,386,497,501,619,623,809,812],uint8_img_to_float_img:1070,unifi:1141,unify_arrai:1142,unify_it:1143,unify_nest:1144,unset_debug_mod:49,unset_default_devic:923,unset_default_dtyp:945,unset_default_float_dtyp:946,unset_default_int_dtyp:947,unset_framework:71,unset_with_grad:1060,unstack:[154,329,452,576,728,1043],used_mem_on_dev:924,used_mem_on_nod:1145,util:[102,224,404,519,641,830],valid_dtyp:948,value_is_nan:1044,variabl:[337,458,583,736,1061],variable_data:[737,1062],vector_norm:[94,216,396,511,633,822],vector_to_skew_symmetric_matrix:[165,346,465,591,748,1077],verbos:1258,vision:58,where:[330,729,1045,1214],why:1260,with_grad:1063,wrapper:72,write:1257,zero:[79,202,381,496,618,808,1230],zero_pad:[331,577,730,1046],zeros_lik:[155,332,453,578,731,1047]}})