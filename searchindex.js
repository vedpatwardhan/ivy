Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[827,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[386,0,0,"-"],creation_functions:[387,0,0,"-"],data_type_functions:[390,0,0,"-"],data_types:[394,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[388,2,1,""],zeros:[389,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[390,1,1,""],finfo:[392,2,1,""],iinfo:[393,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[390,3,1,""],bits:[390,3,1,""],eps:[390,3,1,""],max:[390,3,1,""],min:[390,3,1,""],smallest_normal:[390,3,1,""]},"ivy.functional.backends.numpy.core":{device:[431,0,0,"-"],general:[433,0,0,"-"],gradients:[467,0,0,"-"],image:[472,0,0,"-"],linear_algebra:[476,0,0,"-"],logic:[480,0,0,"-"],math:[481,0,0,"-"],random:[483,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[432,1,1,""],clear_mem_on_dev:[431,2,1,""],dev:[431,2,1,""],dev_from_str:[431,2,1,""],dev_to_str:[431,2,1,""],gpu_is_available:[431,2,1,""],num_gpus:[431,2,1,""],to_dev:[431,2,1,""],tpu_is_available:[431,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[432,3,1,""],start:[432,3,1,""],stop:[432,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[433,2,1,""],arange:[434,2,1,""],argmax:[435,2,1,""],argmin:[436,2,1,""],array:[437,2,1,""],asarray:[433,2,1,""],astype:[433,2,1,""],cast:[438,2,1,""],clip:[433,2,1,""],compile:[439,2,1,""],concatenate:[440,2,1,""],constant_pad:[433,2,1,""],container_types:[433,2,1,""],copy_array:[433,2,1,""],cumprod:[441,2,1,""],current_framework_str:[433,2,1,""],dtype:[442,2,1,""],dtype_bits:[443,2,1,""],dtype_from_str:[444,2,1,""],dtype_to_str:[445,2,1,""],equal:[433,2,1,""],floor:[433,2,1,""],floormod:[433,2,1,""],full:[446,2,1,""],gather:[447,2,1,""],gather_nd:[448,2,1,""],get_num_dims:[433,2,1,""],identity:[449,2,1,""],indices_where:[450,2,1,""],inplace_arrays_supported:[433,2,1,""],inplace_decrement:[451,2,1,""],inplace_increment:[452,2,1,""],inplace_update:[453,2,1,""],inplace_variables_supported:[433,2,1,""],is_array:[454,2,1,""],linear_resample:[455,2,1,""],linspace:[456,2,1,""],logspace:[457,2,1,""],matmul:[433,2,1,""],meshgrid:[433,2,1,""],multiprocessing:[433,2,1,""],one_hot:[458,2,1,""],ones_like:[459,2,1,""],round:[433,2,1,""],scatter_flat:[460,2,1,""],scatter_nd:[461,2,1,""],shape:[433,2,1,""],split:[462,2,1,""],squeeze:[463,2,1,""],to_list:[433,2,1,""],to_numpy:[433,2,1,""],to_scalar:[433,2,1,""],transpose:[464,2,1,""],unstack:[465,2,1,""],where:[433,2,1,""],zero_pad:[433,2,1,""],zeros_like:[466,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[468,2,1,""],is_variable:[469,2,1,""],stop_gradient:[470,2,1,""],variable:[471,2,1,""],variable_data:[467,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[473,2,1,""],gradient_image:[474,2,1,""],stack_images:[475,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[477,2,1,""],qr:[478,2,1,""],vector_to_skew_symmetric_matrix:[479,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[482,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[484,2,1,""],randint:[483,2,1,""],random_normal:[483,2,1,""],random_uniform:[483,2,1,""],seed:[483,2,1,""],shuffle:[483,2,1,""]},"ivy.functional.ivy":{array_api:[828,0,0,"-"],core:[863,0,0,"-"],nn:[1202,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[829,0,0,"-"],creation_functions:[830,0,0,"-"],data_type_functions:[833,0,0,"-"],data_types:[836,0,0,"-"],elementwise_functions:[837,0,0,"-"],function_and_method_signatures:[849,0,0,"-"],linear_algebra:[850,0,0,"-"],manipulation_functions:[853,0,0,"-"],searching_functions:[855,0,0,"-"],set_functions:[856,0,0,"-"],sorting_functions:[857,0,0,"-"],statistical_functions:[859,0,0,"-"],utility_functions:[860,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[829,4,1,""],nan:[829,4,1,""],pi:[829,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[831,2,1,""],zeros:[832,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[834,2,1,""],iinfo:[835,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[838,2,1,""],bitwise_and:[839,2,1,""],ceil:[840,2,1,""],cos:[841,2,1,""],cosh:[842,2,1,""],isfinite:[843,2,1,""],isnan:[844,2,1,""],less:[845,2,1,""],log2:[846,2,1,""],logical_not:[847,2,1,""],sqrt:[848,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[851,2,1,""],vector_norm:[852,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[854,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[858,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[861,2,1,""],any:[862,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[864,0,0,"-"],compilation:[903,0,0,"-"],device:[905,0,0,"-"],dtype:[955,0,0,"-"],general:[979,0,0,"-"],gradients:[1076,0,0,"-"],image:[1092,0,0,"-"],linalg:[1099,0,0,"-"],logic:[1107,0,0,"-"],math:[1110,0,0,"-"],meta:[1126,0,0,"-"],multi_node:[1130,0,0,"-"],nest:[1174,0,0,"-"],random:[1186,0,0,"-"],reductions:[1193,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[865,2,1,""],builtin_add:[866,2,1,""],builtin_and:[867,2,1,""],builtin_bool:[868,2,1,""],builtin_contains:[869,2,1,""],builtin_deepcopy:[870,2,1,""],builtin_dir:[871,2,1,""],builtin_eq:[872,2,1,""],builtin_float:[873,2,1,""],builtin_floordiv:[874,2,1,""],builtin_ge:[875,2,1,""],builtin_getattr:[876,2,1,""],builtin_getattribute:[877,2,1,""],builtin_getitem:[878,2,1,""],builtin_gt:[879,2,1,""],builtin_int:[880,2,1,""],builtin_invert:[881,2,1,""],builtin_le:[882,2,1,""],builtin_lt:[883,2,1,""],builtin_mul:[884,2,1,""],builtin_ne:[885,2,1,""],builtin_neg:[886,2,1,""],builtin_or:[887,2,1,""],builtin_pos:[888,2,1,""],builtin_pow:[889,2,1,""],builtin_radd:[890,2,1,""],builtin_rand:[891,2,1,""],builtin_rfloordiv:[892,2,1,""],builtin_rmul:[893,2,1,""],builtin_ror:[894,2,1,""],builtin_rpow:[895,2,1,""],builtin_rsub:[896,2,1,""],builtin_rtruediv:[897,2,1,""],builtin_rxor:[898,2,1,""],builtin_setitem:[899,2,1,""],builtin_sub:[900,2,1,""],builtin_truediv:[901,2,1,""],builtin_xor:[902,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[904,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[905,1,1,""],DevClonedItem:[907,1,1,""],DevClonedIter:[908,1,1,""],DevClonedNest:[909,1,1,""],DevDistItem:[910,1,1,""],DevDistIter:[911,1,1,""],DevDistNest:[912,1,1,""],DevManager:[905,1,1,""],DevMapper:[914,1,1,""],DevMapperMultiProc:[915,1,1,""],MultiDev:[905,1,1,""],MultiDevItem:[917,1,1,""],MultiDevIter:[918,1,1,""],MultiDevNest:[919,1,1,""],Profiler:[920,1,1,""],clear_mem_on_dev:[921,2,1,""],default_device:[922,2,1,""],dev:[923,2,1,""],dev_clone:[924,2,1,""],dev_clone_array:[925,2,1,""],dev_clone_iter:[926,2,1,""],dev_clone_nest:[927,2,1,""],dev_dist:[928,2,1,""],dev_dist_array:[929,2,1,""],dev_dist_iter:[930,2,1,""],dev_dist_nest:[931,2,1,""],dev_from_str:[932,2,1,""],dev_to_str:[933,2,1,""],dev_unify:[934,2,1,""],dev_unify_array:[935,2,1,""],dev_unify_iter:[936,2,1,""],dev_unify_nest:[937,2,1,""],dev_util:[938,2,1,""],get_all_arrays_on_dev:[939,2,1,""],gpu_is_available:[940,2,1,""],num_arrays_on_dev:[941,2,1,""],num_cpu_cores:[942,2,1,""],num_gpus:[943,2,1,""],percent_used_mem_on_dev:[944,2,1,""],print_all_arrays_on_dev:[945,2,1,""],set_default_device:[946,2,1,""],set_split_factor:[947,2,1,""],split_factor:[948,2,1,""],split_func_call:[949,2,1,""],to_dev:[950,2,1,""],total_mem_on_dev:[951,2,1,""],tpu_is_available:[952,2,1,""],unset_default_device:[953,2,1,""],used_mem_on_dev:[954,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[905,3,1,""],da_tune_step:[905,3,1,""],dim_size:[905,3,1,""],ds_tune_step:[905,3,1,""],map:[905,3,1,""],repeated_config_check:[905,3,1,""],tune_step:[905,3,1,""],tuned:[905,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[914,3,1,""],map:[914,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[917,3,1,""],items:[917,3,1,""],keys:[917,3,1,""],shape:[917,3,1,""],values:[917,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[918,3,1,""],at_dev:[918,3,1,""],at_devs:[918,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[919,3,1,""],at_dev:[919,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[920,3,1,""],start:[920,3,1,""],stop:[920,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[955,1,1,""],DefaultFloatDtype:[955,1,1,""],DefaultIntDtype:[955,1,1,""],astype:[955,2,1,""],cast:[959,2,1,""],closest_valid_dtype:[960,2,1,""],convert_dtype:[961,2,1,""],default_dtype:[962,2,1,""],default_float_dtype:[963,2,1,""],default_int_dtype:[964,2,1,""],dtype:[965,2,1,""],dtype_bits:[966,2,1,""],dtype_from_str:[967,2,1,""],dtype_to_str:[968,2,1,""],invalid_dtype:[969,2,1,""],is_float_dtype:[970,2,1,""],is_int_dtype:[971,2,1,""],set_default_dtype:[972,2,1,""],set_default_float_dtype:[973,2,1,""],set_default_int_dtype:[974,2,1,""],unset_default_dtype:[975,2,1,""],unset_default_float_dtype:[976,2,1,""],unset_default_int_dtype:[977,2,1,""],valid_dtype:[978,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1003,2,1,""],abs:[980,2,1,""],all_equal:[981,2,1,""],arange:[982,2,1,""],arg_names:[983,2,1,""],argmax:[984,2,1,""],argmin:[985,2,1,""],array:[986,2,1,""],array_equal:[987,2,1,""],arrays_equal:[988,2,1,""],asarray:[979,2,1,""],assert_supports_inplace:[989,2,1,""],broadcast_to:[990,2,1,""],cache_fn:[991,2,1,""],clip:[992,2,1,""],clip_matrix_norm:[993,2,1,""],clip_vector_norm:[994,2,1,""],concatenate:[995,2,1,""],constant_pad:[996,2,1,""],container_types:[997,2,1,""],copy_array:[998,2,1,""],cross:[999,2,1,""],cumprod:[1000,2,1,""],cumsum:[1001,2,1,""],current_framework_str:[1002,2,1,""],einops_rearrange:[1004,2,1,""],einops_reduce:[1005,2,1,""],einops_repeat:[1006,2,1,""],equal:[1007,2,1,""],exists:[1008,2,1,""],expand_dims:[1009,2,1,""],floor:[1010,2,1,""],floormod:[1011,2,1,""],fourier_encode:[1012,2,1,""],full:[1013,2,1,""],gather:[1014,2,1,""],gather_nd:[1015,2,1,""],get_all_arrays_in_memory:[1016,2,1,""],get_min_base:[1017,2,1,""],get_min_denominator:[1018,2,1,""],get_num_dims:[1019,2,1,""],get_referrers_recursive:[1020,2,1,""],has_nans:[1021,2,1,""],identity:[1022,2,1,""],indices_where:[1023,2,1,""],inplace_arrays_supported:[1024,2,1,""],inplace_decrement:[1025,2,1,""],inplace_increment:[1026,2,1,""],inplace_update:[1027,2,1,""],inplace_variables_supported:[1028,2,1,""],is_array:[1029,2,1,""],isinf:[1030,2,1,""],linear_resample:[1031,2,1,""],linspace:[1032,2,1,""],logspace:[1033,2,1,""],match_kwargs:[1034,2,1,""],matmul:[1035,2,1,""],maximum:[1036,2,1,""],meshgrid:[1037,2,1,""],minimum:[1038,2,1,""],multiprocessing:[1039,2,1,""],num_arrays_in_memory:[1040,2,1,""],one_hot:[1041,2,1,""],ones:[1042,2,1,""],ones_like:[1043,2,1,""],print_all_arrays_in_memory:[1044,2,1,""],queue_timeout:[1045,2,1,""],repeat:[1046,2,1,""],reshape:[1047,2,1,""],round:[1048,2,1,""],scatter_flat:[1049,2,1,""],scatter_nd:[1050,2,1,""],set_min_base:[1051,2,1,""],set_min_denominator:[1052,2,1,""],set_queue_timeout:[1053,2,1,""],set_tmp_dir:[1054,2,1,""],shape:[1055,2,1,""],shape_to_tuple:[1056,2,1,""],split:[1057,2,1,""],squeeze:[1058,2,1,""],stable_divide:[1059,2,1,""],stable_pow:[1060,2,1,""],stack:[1061,2,1,""],supports_inplace:[1062,2,1,""],swapaxes:[1063,2,1,""],tile:[1064,2,1,""],tmp_dir:[1065,2,1,""],to_list:[1066,2,1,""],to_numpy:[1067,2,1,""],to_scalar:[1068,2,1,""],transpose:[1069,2,1,""],try_else_none:[1070,2,1,""],unstack:[1071,2,1,""],value_is_nan:[1072,2,1,""],where:[1073,2,1,""],zero_pad:[1074,2,1,""],zeros_like:[1075,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1076,1,1,""],adam_step:[1078,2,1,""],adam_update:[1079,2,1,""],execute_with_gradients:[1080,2,1,""],gradient_descent_update:[1081,2,1,""],is_variable:[1082,2,1,""],lamb_update:[1083,2,1,""],lars_update:[1084,2,1,""],optimizer_update:[1085,2,1,""],set_with_grads:[1086,2,1,""],stop_gradient:[1087,2,1,""],unset_with_grads:[1088,2,1,""],variable:[1089,2,1,""],variable_data:[1090,2,1,""],with_grads:[1091,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1076,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1093,2,1,""],float_img_to_uint8_img:[1094,2,1,""],gradient_image:[1095,2,1,""],random_crop:[1096,2,1,""],stack_images:[1097,2,1,""],uint8_img_to_float_img:[1098,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1100,2,1,""],inv:[1101,2,1,""],matrix_norm:[1102,2,1,""],pinv:[1103,2,1,""],qr:[1104,2,1,""],svd:[1105,2,1,""],vector_to_skew_symmetric_matrix:[1106,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1108,2,1,""],logical_or:[1109,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1111,2,1,""],acosh:[1112,2,1,""],asin:[1113,2,1,""],atan2:[1115,2,1,""],atan:[1114,2,1,""],atanh:[1116,2,1,""],cosh:[1117,2,1,""],divide:[1118,2,1,""],erf:[1119,2,1,""],exp:[1120,2,1,""],log:[1121,2,1,""],sin:[1122,2,1,""],sinh:[1123,2,1,""],tan:[1124,2,1,""],tanh:[1125,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1127,2,1,""],maml_step:[1128,2,1,""],reptile_step:[1129,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1130,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1175,2,1,""],copy_nest:[1176,2,1,""],index_nest:[1177,2,1,""],map:[1178,2,1,""],map_nest_at_index:[1179,2,1,""],map_nest_at_indices:[1180,2,1,""],multi_index_nest:[1181,2,1,""],nested_indices_where:[1182,2,1,""],nested_map:[1183,2,1,""],set_nest_at_index:[1184,2,1,""],set_nest_at_indices:[1185,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1187,2,1,""],randint:[1188,2,1,""],random_normal:[1189,2,1,""],random_uniform:[1190,2,1,""],seed:[1191,2,1,""],shuffle:[1192,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1194,2,1,""],reduce_max:[1195,2,1,""],reduce_mean:[1196,2,1,""],reduce_min:[1197,2,1,""],reduce_prod:[1198,2,1,""],reduce_std:[1199,2,1,""],reduce_sum:[1200,2,1,""],reduce_var:[1201,2,1,""]},"ivy.functional.ivy.nn":{activations:[1203,0,0,"-"],layers:[1211,0,0,"-"],losses:[1224,0,0,"-"],norms:[1228,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1204,2,1,""],leaky_relu:[1205,2,1,""],relu:[1206,2,1,""],sigmoid:[1207,2,1,""],softmax:[1208,2,1,""],softplus:[1209,2,1,""],tanh:[1210,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1212,2,1,""],conv1d_transpose:[1213,2,1,""],conv2d:[1214,2,1,""],conv2d_transpose:[1215,2,1,""],conv3d:[1216,2,1,""],conv3d_transpose:[1217,2,1,""],depthwise_conv2d:[1218,2,1,""],dropout:[1219,2,1,""],linear:[1220,2,1,""],lstm_update:[1221,2,1,""],multi_head_attention:[1222,2,1,""],scaled_dot_product_attention:[1223,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1225,2,1,""],cross_entropy:[1226,2,1,""],sparse_cross_entropy:[1227,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1229,2,1,""]},"ivy.graph_compiler":{compiler:[1230,0,0,"-"],globals:[1233,0,0,"-"],graph:[1236,0,0,"-"],helpers:[1238,0,0,"-"],op_logging:[1239,0,0,"-"],param:[1240,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1231,2,1,""],show_graph:[1232,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1234,2,1,""],log_global_inference_rel_times:[1235,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1236,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1236,3,1,""],add_fn_to_dict:[1236,3,1,""],add_param:[1236,3,1,""],compiled:[1236,3,1,""],connect:[1236,3,1,""],debug_info:[1236,3,1,""],get_param:[1236,3,1,""],get_param_recursive:[1236,3,1,""],include_generators:[1236,3,1,""],increment_param_count:[1236,3,1,""],log_all_ops:[1236,3,1,""],params_all_empty:[1236,3,1,""],save_debug_info:[1236,3,1,""],set_param:[1236,3,1,""],show:[1236,3,1,""],show_debug_info:[1236,3,1,""],update_inference_times:[1236,3,1,""],with_array_caching:[1236,3,1,""]},"ivy.graph_compiler.param":{Param:[1240,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1240,3,1,""],count:[1240,3,1,""],depth:[1240,3,1,""],get:[1240,3,1,""],is_var:[1240,3,1,""],ptype:[1240,3,1,""],set:[1240,3,1,""],set_count:[1240,3,1,""],shape:[1240,3,1,""]},"ivy.stateful":{activations:[1245,0,0,"-"],converters:[1248,0,0,"-"],initializers:[1250,0,0,"-"],layers:[1259,0,0,"-"],module:[1271,0,0,"-"],norms:[1273,0,0,"-"],optimizers:[1275,0,0,"-"],sequential:[1281,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1246,1,1,""],GELU:[1247,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1246,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1247,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1249,2,1,""]},"ivy.stateful.initializers":{Constant:[1250,1,1,""],FirstLayerSiren:[1252,1,1,""],GlorotUniform:[1253,1,1,""],KaimingNormal:[1250,1,1,""],Ones:[1255,1,1,""],Siren:[1256,1,1,""],Uniform:[1250,1,1,""],Zeros:[1258,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1252,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1258,3,1,""]},"ivy.stateful.layers":{Conv1D:[1260,1,1,""],Conv1DTranspose:[1261,1,1,""],Conv2D:[1262,1,1,""],Conv2DTranspose:[1263,1,1,""],Conv3D:[1264,1,1,""],Conv3DTranspose:[1265,1,1,""],DepthwiseConv2D:[1266,1,1,""],Dropout:[1267,1,1,""],LSTM:[1268,1,1,""],Linear:[1269,1,1,""],MultiHeadAttention:[1270,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1267,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1268,3,1,""],get_initial_state:[1268,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1269,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1270,3,1,""]},"ivy.stateful.module":{Module:[1272,1,1,""]},"ivy.stateful.module.Module":{__init__:[1272,3,1,""],build:[1272,3,1,""],build_mode:[1272,3,1,""],built:[1272,3,1,""],check_submod_rets:[1272,3,1,""],compile_graph:[1272,3,1,""],compile_on_next_step:[1272,3,1,""],get_mod_key:[1272,3,1,""],mod_depth:[1272,3,1,""],mod_height:[1272,3,1,""],mod_with_top_mod_key_chain:[1272,3,1,""],save_weights:[1272,3,1,""],show_graph:[1272,3,1,""],show_mod_in_top_mod:[1272,3,1,""],show_structure:[1272,3,1,""],show_v_in_top_v:[1272,3,1,""],sub_mods:[1272,3,1,""],track_submod_call_order:[1272,3,1,""],track_submod_rets:[1272,3,1,""],v_with_top_v_key_chains:[1272,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1274,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1274,3,1,""]},"ivy.stateful.optimizers":{Adam:[1276,1,1,""],LAMB:[1277,1,1,""],LARS:[1278,1,1,""],Optimizer:[1279,1,1,""],SGD:[1280,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1276,3,1,""],set_state:[1276,3,1,""],state:[1276,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1279,3,1,""],compile_graph:[1279,3,1,""],compile_on_next_step:[1279,3,1,""],set_state:[1279,3,1,""],show_graph:[1279,3,1,""],step:[1279,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.sequential":{Sequential:[1282,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1282,3,1,""]},"ivy.verbosity":{cprint:[1287,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1286,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1275,1276,1277],"02886":1242,"100":[1130,1242,1284],"141592653589793":829,"2021":1242,"2102":1242,"360":[837,841,1110,1122,1124],"718281828459045":829,"754":[829,833,834,837,848],"999":[1076,1078,1079,1083,1275,1276,1277],"abstract":[905,920,1242,1275,1279],"boolean":[40,41,837,839,844,847,905,940,952,955,969,978,979,981,987,988,1021,1023,1024,1028,1029,1030,1062,1072,1076,1082,1107,1108,1109,1126,1127,1128,1130],"break":43,"case":[15,18,19,40,41,42,43,837,838,905,944,951,954,979,982,1047,1049,1050,1099,1102,1104,1130,1174,1177,1181,1242,1259,1270,1271,1272,1275,1279,1288],"catch":[979,1003],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,390,431,432,833,835,905,907,908,909,910,911,912,914,915,917,918,919,920,932,933,955,979,983,1034,1076,1090,1130,1174,1176,1183,1224,1226,1227,1236,1240,1242,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],"default":[15,18,19,40,41,42,43,830,831,832,850,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,927,928,929,930,931,934,935,936,937,944,947,948,949,954,955,962,963,964,965,979,981,982,984,985,993,994,995,996,999,1000,1001,1012,1013,1014,1019,1021,1022,1031,1033,1034,1037,1039,1042,1045,1046,1049,1050,1053,1055,1057,1059,1060,1069,1071,1072,1076,1079,1081,1082,1083,1084,1085,1087,1091,1099,1102,1104,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1186,1187,1189,1190,1193,1195,1196,1197,1198,1199,1200,1201,1203,1204,1208,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],"final":[40,41,43,979,1012,1032,1033,1130,1259,1270,1285],"float":[40,41,42,43,829,830,831,832,833,834,837,838,848,850,852,864,883,889,905,914,915,938,944,947,951,954,955,963,970,979,982,993,994,996,1012,1013,1017,1018,1033,1051,1052,1053,1059,1060,1076,1078,1079,1081,1083,1084,1085,1092,1094,1098,1110,1118,1126,1127,1128,1129,1130,1186,1189,1190,1203,1205,1211,1219,1222,1223,1224,1225,1226,1227,1228,1229,1259,1267,1270,1273,1274,1275,1276,1277,1278,1279,1280],"function":[15,40,41,43,388,389,392,393,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,829,831,832,834,835,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1242,1245,1246,1247,1275,1278,1279,1280,1284,1285,1288],"import":[43,1242,1285,1288],"int":[40,41,42,43,387,388,389,483,830,831,832,833,834,835,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,927,928,929,930,931,934,935,936,937,942,943,949,955,964,966,971,979,984,985,990,995,996,1000,1001,1004,1005,1006,1009,1012,1013,1014,1019,1022,1031,1032,1033,1041,1042,1046,1047,1049,1050,1055,1056,1057,1058,1061,1063,1064,1069,1071,1074,1076,1078,1079,1083,1092,1096,1097,1099,1102,1126,1127,1128,1129,1130,1174,1183,1186,1187,1188,1190,1191,1193,1195,1196,1197,1198,1199,1200,1201,1203,1208,1211,1212,1213,1214,1215,1216,1217,1218,1222,1224,1226,1227,1228,1229,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1273,1274],"long":[1211,1221],"new":[40,41,43,483,830,831,832,837,842,846,955,959,979,980,990,1004,1005,1006,1009,1012,1013,1014,1015,1042,1047,1049,1050,1051,1052,1059,1060,1061,1076,1079,1081,1083,1084,1085,1092,1094,1096,1098,1110,1112,1116,1117,1123,1125,1130,1174,1184,1185,1186,1187,1228,1229,1242,1248,1249,1259,1269,1273,1274,1275,1276,1277,1278,1279,1280,1285,1288],"public":[979,997],"return":[15,16,17,18,19,40,41,42,43,483,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,943,944,948,949,950,951,952,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1046,1047,1048,1049,1050,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1242,1248,1249,1259,1268,1269,1275,1279,1284,1285,1288],"short":[1211,1221,1242,1288],"static":[40,41,903,904],"super":1130,"true":[40,41,42,433,439,467,470,483,484,837,843,850,852,857,858,860,861,862,903,904,905,979,981,989,991,1008,1012,1021,1023,1072,1073,1076,1079,1081,1082,1083,1084,1085,1087,1099,1102,1126,1127,1128,1129,1130,1174,1175,1182,1186,1187,1193,1195,1196,1197,1198,1199,1200,1201,1203,1204,1211,1219,1224,1225,1226,1227,1230,1231,1232,1236,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],"try":[40,41,979,1070,1130],"var":[40,41,1126,1127,1128,1288],"while":[40,41,42,1130],AND:[837,839,860,861,1107,1108],But:1288,For:[43,837,838,979,982,992,1061,1076,1082,1090,1099,1104,1110,1111,1242,1248,1249,1285,1288],Its:[1110,1114],NOT:[837,847],Not:829,One:[40,41,43,979,1005,1047,1186,1188,1288],Ones:[1242,1250],PRs:43,Such:[979,997],That:1285,The:[15,16,17,18,19,40,41,42,43,837,838,839,841,843,845,848,850,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,966,967,968,969,978,979,982,986,987,990,991,993,994,995,996,998,999,1002,1003,1007,1012,1014,1015,1022,1025,1026,1027,1029,1031,1033,1035,1037,1039,1042,1043,1046,1047,1049,1050,1051,1052,1053,1056,1057,1058,1059,1060,1061,1064,1072,1075,1076,1078,1079,1081,1083,1084,1085,1087,1090,1092,1094,1096,1098,1099,1102,1104,1105,1110,1111,1113,1114,1118,1119,1120,1121,1122,1124,1126,1127,1128,1129,1130,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1285,1288],There:[43,1242,1285],These:[43,1242],Used:[1174,1175,1182,1271,1272],Using:[1242,1243,1288],With:[40,41,1099,1102,1193,1195,1196,1197,1198,1199,1200,1201,1242,1284,1288],__array__:[979,986],__call__:[1259,1270,1271,1272],__del__:1130,__dict__:[1130,1285],__enter__:1130,__exit__:1130,__getitem__:1130,__getstate__:1130,__init__:[40,41,42,43,59,60,81,210,390,391,431,432,512,640,905,906,913,914,915,916,917,918,919,920,955,956,957,958,1076,1077,1130,1134,1141,1236,1237,1240,1241,1242,1245,1246,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],__iter__:1130,__len__:1130,__next__:1130,__pow__:43,__repr__:1130,_assign_vari:1284,_axi:1130,_base:[1174,1175,1182],_compute_node_da_ratio:1130,_compute_node_strs_da:1130,_concat_unify_arrai:1130,_counter:1130,_cur_framework:[43,1130],_da_direct:1130,_da_directions_flip:1130,_da_step_tim:1130,_da_tim:1130,_da_tune_count:1130,_data:1130,_delta_da_dim_s:1130,_delta_sf:1130,_dict:1130,_dim_siz:1130,_first_da_tune_step:1130,_first_ns_tune_step:1130,_fn:1130,_forward:[1242,1284],_get_kalman_param:1288,_get_prior:1288,_get_some_model:1288,_handle_flat_arrays_in_out:43,_index:[1174,1175,1182],_input_queu:1130,_length:1130,_max_depth:1130,_max_node_dim_step_ratio:1130,_max_node_dim_step_s:1130,_max_split_factor_step_s:1130,_mean_unify_arrai:1130,_min_bas:[979,1060,1228,1229,1273,1274],_min_denomin:[979,1059],_min_node_dim_s:1130,_min_sf_tune_step:1130,_min_unit_node_tune_step:1130,_model:1288,_native_wrapp:43,_node_mapp:1130,_node_percent_mem:1130,_node_str:1130,_node_str_da_ratio:1130,_node_strs_da:1130,_node_strs_kei:1130,_node_strs_n:1130,_node_util:1130,_ns_step_tim:1130,_ns_time:1130,_ns_tune_count:1130,_num_nod:1130,_num_work:1130,_observed_config:1130,_output_queu:1130,_paramet:1284,_percent_mem_inc_per_sf:1130,_percent_mem_inc_per_unit_da_dim:1130,_percent_util_inc_per_unit_da_dim:1130,_ret_fn:1130,_safety_factor:1130,_save_dir:1130,_shift_da_split:1130,_shift_n:1130,_slice:1130,_step:[1275,1279],_sum_unify_arrai:1130,_timeout:1130,_tune:1130,_tune_da:1130,_tune_n:1130,_tune_step:1130,_unit_da_tune_count:1130,_unroll_step:1288,_with_node_mappig:1130,_worker:1130,_worker_class:1130,_worker_fn:1130,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,905,914,920,1130,1271,1272,1275,1279],abil:1242,abl:[40,41],about:[833,834,835],abov:[43,1186,1188],above_height:[40,41],abs:[291,433,560,689,850,852,979,1130],absolut:[40,41,979,980],abstractmethod:1130,accept:[15,43,1242],access:[40,41,43,1285],accord:[40,41,833,834,979,996,1014,1049,1050,1069,1074],accordingli:[850,852,860,861,862],accur:[59,390,431,432,905,917,918,919,920,955,1076,1236,1240,1250,1252,1253,1255,1256,1258],aco:[777,1110],acosh:[777,1110],across:[40,41,905,914,915,924,925,927,928,929,930,931,937,947,948,979,984,985,987,988,1130,1174,1178],activ:[1204,1205,1206,1207,1208,1209,1210,1242,1246,1247],actual:1285,adam:[1076,1078,1079,1083,1242,1275,1277,1284],adam_step:1076,adam_upd:1076,adapt:[1076,1084,1275,1278],add:[40,41,43,1130,1224,1225,1226,1227,1228,1229,1242,1273,1274,1285],add_fn_to_dict:1236,add_param:1236,added:[43,979,1059,1060,1281,1282],adding:[979,990],addit:[40,41,43,979,1004,1005,1006,1228,1229,1259,1269],address:43,adher:43,adjac:[979,982],adopt:[979,997],affect:[979,982],affin:[1273,1274],after:[837,848,979,1031,1076,1079,1080,1081,1083,1084,1085,1092,1093,1228,1229,1275,1276,1277,1278,1279,1280,1288],after_1:[979,996,1074],after_n:[979,996,1074],again:43,against:[40,41,1099,1102,1193,1195,1196,1197,1198,1199,1200,1201],agnost:[43,1242,1284,1285],aim:1288,algebra:1099,algorithm:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266,1288],align:[40,41,43,979,990],aliv:[905,939,941,945,979,1016,1040,1044],all:[15,16,17,18,19,40,41,43,108,233,418,539,667,850,852,853,854,860,903,904,905,914,939,945,979,980,981,987,988,997,1016,1022,1044,1058,1099,1104,1126,1127,1128,1129,1130,1174,1175,1176,1182,1183,1186,1187,1190,1193,1195,1196,1197,1198,1199,1200,1201,1211,1221,1242,1285,1288],all_depth:[40,41],all_equ:979,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1174,all_tru:[40,41],alloc:[905,1130],allow:[979,1032,1033,1034,1271,1272],allow_dupl:[979,1034],alon:[905,944,954,1130,1242],along:[40,41,43,483,850,851,852,853,854,857,858,860,861,862,905,928,929,930,931,934,935,936,937,949,979,995,1000,1001,1014,1031,1032,1033,1046,1057,1061,1064,1071,1099,1102,1126,1127,1128,1129,1130,1186,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],alongsid:[1284,1285],alpha:[1203,1205],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,905,1130],also:[40,41,43,979,982,1076,1079,1126,1127,1128,1129,1174,1175,1176,1182,1183,1211,1220,1242,1259,1269,1284],altern:1284,alwai:[40,41,43,1076,1082,1087],among:[40,41],amount:[905,951,1130,1242],angl:[1110,1111,1115],ani:[15,16,17,18,19,40,41,43,108,233,418,539,667,860,903,904,905,907,910,914,915,917,926,927,930,931,936,979,981,982,986,1003,1004,1005,1006,1007,1008,1021,1029,1034,1059,1060,1076,1080,1130,1174,1175,1178,1182,1183,1184,1185,1186,1190,1242,1248,1249,1271,1272,1284,1285,1288],anoth:[40,41,43,955,961,1242],another_backend:43,anyth:[43,1288],anywai:43,apart:43,api:[1242,1243],appear:[979,1009],append:[40,41,1130],appli:[15,18,19,40,41,837,847,979,1004,1005,1006,1076,1083,1084,1099,1105,1107,1108,1109,1126,1127,1128,1174,1178,1181,1183,1203,1204,1205,1206,1207,1208,1209,1210,1211,1220,1222,1223,1228,1229,1242,1245,1246,1247,1273,1274],applic:[1174,1178,1183,1211,1222,1223,1242,1288],approxim:[43,837,838,846,864,889,1203,1204],arang:[128,291,433,483,560,689,979,1032,1033],arbitrari:[40,41,905,934,935,937,1130],arc:[1110,1115],arcco:[1110,1111],arctan:[1110,1114],area:[837,838,1242],arg:[15,16,17,40,41,43,59,63,905,914,927,931,937,949,979,1004,1005,1006,1050,1130,1230,1231,1232,1236,1248,1249,1271,1272],arg_nam:979,arg_stateful_idx:[1230,1231,1232,1236,1271,1272],argmax:[128,433,560,689,979],argmin:[128,433,560,689,979],args_clon:1130,args_dist:1130,args_to_ivi:[15,1242],args_to_n:[15,1242],args_uni:1130,argsort:[105,230,415,536,664,857],argument:[15,16,17,18,19,40,41,42,43,59,63,903,904,905,914,915,927,931,937,979,982,983,991,1003,1034,1050,1110,1111,1130,1174,1178,1248,1249,1271,1272],aris:[1242,1288],arithmet:[43,1193,1196,1199,1201],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:483,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,128,291,433,483,560,689,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,883,889,905,923,924,925,928,929,930,931,934,935,936,937,939,941,945,949,950,955,959,965,970,971,979,980,981,982,984,985,987,988,989,990,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1019,1021,1022,1023,1024,1025,1026,1027,1029,1030,1031,1032,1033,1035,1036,1037,1038,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1055,1057,1058,1061,1062,1063,1064,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1078,1079,1082,1083,1087,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1130,1174,1176,1183,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1242,1243,1259,1267,1268,1270,1275,1279,1284,1285],arrang:[979,1004],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,387,388,389,390,392,393,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862],array_api_methods_to_test:43,array_builtin:[43,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902],array_equ:[291,689,979],array_lik:[483,979,986],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,979],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1242],arraywithgener:[22,1242],arraywithgradi:[24,1242],arraywithimag:[26,1242],arraywithlinalg:[28,1242],arraywithlog:[30,1242],arraywithmath:[32,1242],arraywithmeta:[34,1242],arraywithrandom:[36,1242],arraywithreduct:[38,1242],arriv:[40,41,42],articl:1242,arxiv:1242,as_arrai:[40,41,979,1019,1055],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[431,433,442,905,923,955,962,963,964,965],as_tensor:433,as_vari:[40,41],as_zero:[40,41],asarrai:[433,979],asin:[777,1110],asinh:[85,395,516,644,837],aspect:[1092,1097],assert:[40,41,979,989,1130],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:979,associ:[43,1099,1106],assum:[1285,1288],astyp:[433,955],asynchron:[40,41,42],at_dev:[40,42,905,918,919],at_kei:[40,41],at_key_chain:[40,41],at_nod:1130,atan2:[777,1110],atan:[777,1110],atanh:[777,1110],attent:[43,1211,1222,1223,1259,1270],attribut:[0,6,40,41,833,834,835,979,1043,1075],audienc:[1242,1285],author:1242,avail:[40,41,43,905,940,942,943,952,979,1005,1130],averag:[1076,1078,1079,1083,1126,1127,1128,1193,1196],average_across_step:[1126,1127,1128],avoid:[905,1130,1285],axes:[40,41,43,433,464,476,477,850,852,853,854,860,861,862,905,949,979,984,985,996,1009,1063,1069,1074,1099,1102,1130,1193,1195,1196,1197,1198,1199,1200,1201],axes_length:[40,41,979,1004,1005,1006],axi:[40,41,433,435,436,440,441,447,455,456,457,462,463,465,850,851,852,853,854,857,858,860,861,862,905,907,910,917,928,929,930,931,934,935,936,937,949,979,984,985,995,996,999,1000,1001,1009,1014,1031,1032,1033,1046,1057,1058,1061,1063,1064,1071,1074,1130,1186,1192,1193,1195,1196,1197,1198,1199,1200,1201,1203,1208,1224,1226,1227],axis0:[40,41,979,1063],axis1:[40,41,850,851,979,1063],axis2:[850,851],back:[43,1271,1272,1275,1279],backend:[15,17,19,40,41,387,388,389,390,392,393,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,484,905,940,943,952,955,961,969,978,979,1024,1028,1076,1079,1081,1083,1084,1085,1090,1130,1242,1243,1248,1249,1275,1276,1277,1278,1279,1280,1284,1285,1288],backend_nam:43,background:[1242,1285],backprop:1288,backward:[860,861,862,1284],band:[979,1012],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,390,431,432,433,457,837,846,864,889,905,907,908,909,910,911,912,914,915,917,918,919,920,955,979,1017,1033,1051,1060,1076,1130,1193,1194,1236,1240,1242,1245,1246,1247,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1288],batch:[40,41,850,852,905,947,948,979,1012,1022,1092,1096,1099,1105,1126,1127,1128,1129,1130,1211,1220,1228,1229,1273,1274],batch_shap:[433,449,979,1022,1041,1092,1093,1094,1095,1096,1097,1098,1099,1106,1186,1187,1211,1221,1222,1223,1259,1268],batch_siz:[483,484,1130,1186,1187,1211,1212,1213,1214,1215,1216,1217,1218],bayesian:1288,becaus:[43,979,982],becom:[979,992,1110,1115,1288],been:[979,1004,1005,1006,1186,1187],befor:[40,41,43,905,949,1126,1127,1128,1130,1174,1183,1193,1195,1196,1197,1198,1199,1200,1201,1211,1222,1223,1288],before_1:[979,996,1074],before_n:[979,996,1074],begin:[1174,1175,1182,1285],behaviour:[43,1288],behind:[1076,1079,1081,1083,1084,1085,1242],being:[40,41,43,979,982,1045,1053,1130],belong:[40,41],below:[43,1242,1285,1288],below_depth:[40,41],benefit:1242,bernoul:[1211,1219,1259,1267],best:[43,979,1034,1242],beta1:[1076,1078,1079,1083,1275,1276,1277],beta2:[1076,1078,1079,1083,1275,1276,1277],beta:[1228,1229],between:[40,41,42,833,834,979,982,1099,1104,1174,1178,1186,1188,1224,1226,1227,1275,1277],bia:[1211,1220,1221,1259,1260,1261,1262,1263,1264,1265,1266,1269],bias_initi:[1259,1260,1261,1262,1263,1264,1265,1266,1269],bilinear:[1092,1093],bilinear_resampl:[164,345,472,603,762,1092],bilinearli:[1092,1093],binari:[837,839,1224,1225],binary_cross_entropi:1224,bit:[390,833,834,835,955,966,1092,1094,1098,1242],bitwis:[837,839],bitwise_and:[85,214,395,516,644,837],bitwise_oper:[0,7,8],block:[1242,1285],bool:[15,18,19,40,41,42,43,837,843,845,850,852,857,858,860,861,862,864,883,903,904,905,923,936,940,944,949,952,954,955,965,979,981,987,988,1000,1003,1007,1008,1012,1019,1021,1029,1034,1055,1057,1071,1072,1073,1076,1079,1080,1081,1082,1083,1084,1085,1087,1099,1102,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1186,1187,1193,1195,1196,1197,1198,1199,1200,1201,1203,1204,1211,1219,1248,1249,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],both:[43,979,999],bottom:1242,boundari:[40,41,1186,1190],branch:[43,903,904],brittl:43,broadcast:[40,41,43,837,839,850,852,860,861,862,864,883,889,979,990,1007,1036,1037,1038,1046,1099,1102,1110,1115,1118,1193,1195,1196,1197,1198,1199,1200,1201],broadcast_to:[291,689,979],build:[1130,1242,1259,1270,1271,1272],build_mod:[1259,1270,1271,1272],builder:1242,built:[905,979,982,1130,1259,1270,1271,1272],builtin:43,builtin_ab:[246,864],builtin_add:[246,864],builtin_and:[246,864],builtin_bool:[246,864],builtin_contain:[246,864],builtin_deepcopi:[246,864],builtin_dir:[246,864],builtin_eq:[246,864],builtin_float:[246,864],builtin_floordiv:[246,864],builtin_g:[246,864],builtin_getattr:[246,864],builtin_getattribut:[246,864],builtin_getitem:[246,864],builtin_gt:[246,864],builtin_int:[246,864],builtin_invert:[246,864],builtin_l:[246,864],builtin_lt:[246,548,676,864],builtin_mul:[246,864],builtin_n:[246,864],builtin_neg:[246,864],builtin_or:[246,864],builtin_po:[246,864],builtin_pow:[43,246,864],builtin_radd:[246,864],builtin_rand:[246,864],builtin_rfloordiv:[246,864],builtin_rmul:[246,864],builtin_ror:[246,864],builtin_rpow:[246,864],builtin_rsub:[246,864],builtin_rtruediv:[246,864],builtin_rxor:[246,864],builtin_setitem:[246,864],builtin_some_op:43,builtin_sub:[246,864],builtin_truediv:[246,864],builtin_xor:[246,864],bypass:1285,cach:[905,921,979,991],cache_fn:979,calcul:[40,41,42,43,837,838,846,848,864,889,1110,1118],call:[43,905,949,979,1045,1053,1070,1076,1080,1130,1174,1175,1178,1182,1259,1270,1271,1272,1275,1279,1285,1288],callabl:[40,41,903,904,905,914,915,949,979,991,1003,1005,1034,1070,1126,1127,1128,1129,1130,1174,1178,1179,1180,1182,1183,1211,1222],can:[43,905,947,948,949,979,1047,1092,1094,1130,1242,1284,1285,1288],cancel_join_thread:1130,cannot:43,captur:1242,cast:[40,41,128,291,433,560,689,955,979,995,1092,1094,1098],catch_except:[979,1003],categori:43,caus:43,ceil:[85,214,395,516,644,837,979,982],cell:[1211,1221,1259,1268],certain:[40,41,979,982,1032,1033],chain:[40,41,1126,1127,1128,1281,1282],chang:[43,905,979,1047,1130,1174,1176,1183,1242,1284],channel:[979,1012,1092,1094,1095,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],check:[15,16,17,18,19,40,41,43,905,944,954,955,960,969,978,979,989,1008,1021,1029,1062,1072,1076,1082,1130,1174,1175,1182,1242,1285],check_nest:[1174,1182],check_shap:[40,41],check_submod_ret:[1271,1272],check_typ:[40,41],choic:[1242,1285],choleski:[766,1099],choos:[979,1073,1099,1104,1110,1115,1242],choose_random_framework:59,chosen:[40,41,979,982,1073],chunk:[905,947,948,949,1130],chunk_siz:[905,949,1130],circl:[1110,1111,1113],clark:1242,clear:[905,921,1130],clear_framework_stack:59,clear_mem_on_dev:[431,681,905],click:1242,clip:[40,41,291,433,689,979,993,994,1036,1038,1242],clip_matrix_norm:979,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,979],clipped_delta:1130,clone:[40,41,905,924,925,926,927,1130],clone_arrai:1130,clone_it:1130,clone_nest:1130,clonedit:1130,cloneditem:1130,clonednest:1130,close:[43,1092,1097,1110,1113,1130,1288],closest:[955,960],closest_valid_dtyp:955,code:[40,41,42,43,483,1242,1243,1284,1285],codebas:[905,947,948,1130,1242,1285,1288],codomain:[837,838,848],colab:1242,collect:[15,40,41,431,433,467,472,476,480,481,483,864,903,905,955,979,1076,1092,1099,1107,1110,1130,1174,1186,1193,1203,1211,1224,1228,1245,1259,1273,1275],color:[40,41,42,1286,1287],column:[979,1022],combin:[40,41,42,1092,1097,1242,1288],combined_batch_s:1130,come:1285,command:1242,comment:43,commit:1288,common:[40,41,43,1110,1115],common_key_chain:[40,41],commun:[43,1242,1285],compar:[40,41,979,981,987,988],comparison_oper:[0,9,10],compat:[43,837,839,850,852,860,861,862,864,883,889,979,1007,1047,1110,1118,1242,1288],compil:[291,433,689,1231,1232,1236,1242,1271,1272,1275,1276,1277,1278,1279,1280],compile_graph:[1230,1242,1271,1272,1275,1279],compile_on_next_step:[1271,1272,1275,1276,1277,1278,1279,1280],complet:[40,41,1099,1104,1130],complex:[1285,1288],compon:[979,999],composit:43,comput:[40,41,837,839,841,845,847,850,852,864,883,905,949,979,993,994,1000,1001,1007,1035,1076,1078,1079,1080,1081,1083,1084,1085,1087,1089,1092,1095,1099,1100,1101,1102,1103,1104,1107,1108,1109,1110,1111,1113,1114,1115,1119,1120,1121,1122,1124,1174,1178,1193,1194,1195,1196,1197,1198,1199,1200,1201,1211,1212,1213,1214,1215,1216,1217,1218,1220,1222,1224,1225,1226,1227],concat:[40,41,905,934,935,936,937,949,979,1012,1130],concaten:[40,41,128,291,433,560,689,979,1012,1130,1242],concatten:[40,41,905,934,935,936,937,949,1130],condit:[433,903,904,979,1073,1174,1182],conditon:[1174,1182],config:[40,41,1130],config_list:1130,configur:[40,41],conflict:43,conform:43,conjunct:1285,connect:[1236,1259,1269,1270],consid:[40,41,1099,1104,1284,1288],consist:[40,41,905,937,1130,1193,1194,1271,1272,1285],constant:[905,914,915,979,996,1130,1174,1178,1224,1225,1226,1227,1228,1229,1250,1251,1255,1258,1271,1272,1273,1274,1285],constant_kwarg:1130,constant_pad:[291,433,560,689,979],constitu:[40,41],construct:[979,1064,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],constructor:[40,41,42,979,983,1281,1282],consum:[905,1130],cont_feat_dim:[1211,1222],contaienr:[40,41],contain:[15,18,19,42,43,830,831,832,837,838,839,843,845,846,848,850,852,857,858,860,861,862,864,883,889,905,924,928,949,955,959,979,980,984,985,992,993,994,997,1007,1021,1036,1038,1048,1059,1060,1076,1078,1079,1081,1083,1084,1085,1110,1118,1126,1127,1128,1129,1130,1186,1187,1193,1195,1196,1197,1199,1201,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[433,689,979],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[433,979,1039,1211,1222,1259,1270],context_dim:[1259,1270],contextmanag:[59,60],continu:[43,1130,1285],contract:[40,41,1193,1194],contribut:[1242,1243],contributor:[43,1242],control:1242,conv1d:[195,376,497,819,1211,1242,1259],conv1d_transpos:[195,376,497,819,1211],conv1dtranspos:[1242,1259],conv2d:[195,376,497,629,819,1211,1242,1259],conv2d_transpos:[195,376,497,819,1211],conv2dtranspos:[1242,1259],conv3d:[195,376,497,629,819,1211,1242,1259],conv3d_transpos:[195,376,497,819,1211],conv3dtranspos:[1242,1259],convent:[40,41,1193,1194],conver:[905,921,932,944,951,954,1130],convers:[16,17,18,19,40,41,1130,1242],convert:[15,16,17,18,19,40,41,43,905,932,933,955,961,967,968,979,1056,1067,1068,1092,1094,1098,1099,1106,1130,1174,1176,1183,1242,1249],convert_dtyp:955,convolut:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],cool:43,cooler:43,coordin:[979,1037,1110,1111,1113,1115],copi:[40,41,483,979,998,1130,1174,1176],copy_arrai:[433,689,979],copy_nest:1174,core:[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,484,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1242],corner:43,correct:[43,1242,1285],correctli:[40,41,1099,1102,1110,1115,1193,1195,1196,1197,1198,1199,1200,1201],correspond:[40,41,43,864,889,979,995,1186,1187],cos:[85,395,516,644,837,979,1012,1110,1111,1124,1285],cosh:[85,395,516,644,777,837,1110],cosin:[837,841,842,1110,1111,1112,1117],cost:[1076,1078,1079,1081,1083,1084,1085,1126,1127,1128,1129],cost_fn:[1126,1129],could:1288,count:[40,41,853,854,860,861,862,1130,1193,1198,1200,1240],cprint:1286,cpu:[40,41,43,905,942,944,950,951,954,979,982,986,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1075,1130,1186,1187,1188,1189,1190,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1284,1285],creat:[40,41,830,831,832,905,914,915,979,982,986,1013,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1066,1075,1076,1089,1130,1186,1187,1188,1189,1190,1242,1243,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],create_if_abs:[40,41],create_vari:1250,creation:[40,41,42,43],creation_funct:[387,388,389,830,831,832],crop:[1092,1096],crop_siz:[1092,1096],cross:[291,689,979,1224,1225,1226,1227],cross_entropi:1224,cuda:[40,41,905,914,933,950,979,982,986,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1075,1130,1186,1187,1188,1189,1190,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],cumprod:[128,291,433,689,979],cumsum:[689,979],cumul:[979,1000,1001],current:[40,41,42,43,905,914,938,939,941,945,955,961,969,978,979,1002,1016,1024,1028,1040,1044,1130,1174,1175,1182,1242,1288],current_framework:59,current_framework_str:[433,689,979,1130],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1236,d_in:[1211,1212,1213,1214,1215,1216,1217],d_out:[1211,1212,1213,1214,1215,1216,1217],da_can_termin:1130,da_dim_s:[905,1130],da_direct:1130,da_tune_step:[905,1130],dai:1288,daniel:1242,data:[40,41,42,43,830,831,832,834,835,837,838,839,843,845,848,850,852,853,854,860,861,862,864,883,889,905,907,908,909,910,911,912,917,918,919,933,955,959,960,961,965,966,967,968,969,970,971,978,979,982,986,1007,1013,1022,1029,1042,1043,1047,1058,1062,1075,1076,1082,1090,1110,1118,1130,1211,1220,1242],data_format:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],data_type_funct:[390,392,393,833,834,835],dataset:[40,41],datatyp:[40,41,955,960,970,971],dcdw:[1076,1078,1079,1081,1083,1084],debug_info:1236,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1076,1083,1084,1275,1277,1278],decay_lambda:[1076,1083,1084,1275,1277,1278],decid:[40,41,1288],decompos:[1099,1100,1104],decomposit:[1099,1100,1104,1105],decor:43,decrement:[979,1025],dedic:[1076,1090,1248,1249],deep:[40,41,1242],deep_copi:[40,41],deeper:[905,927,931,937,1130,1174,1183,1242],deepli:[1174,1176],def:[43,60,81,210,391,512,640,906,913,916,956,957,958,1077,1130,1134,1141,1237,1241,1242,1251,1254,1257,1284,1285,1288],default_dev:43,default_devic:905,default_dtyp:[43,955],default_float_dtyp:955,default_int_dtyp:955,default_key_color:[40,41,42],default_nod:1130,default_rng:483,default_v:[979,1003],defaultdevic:[905,906],defaultdtyp:[955,956],defaultfloatdtyp:[955,957],defaultintdtyp:[955,958],defer:43,defin:[43,979,999,1041,1043,1075,1186,1188],degre:[837,841,1110,1122,1124],del:1130,delta:[1076,1078,1130,1236],delta_dim_s:1130,delta_percent_mem:1130,delta_sf:1130,delta_util:1130,demo:1242,denomin:[979,1011,1018,1052,1059,1060,1228,1229,1273,1274],dens:[1259,1269],depend:[43,837,838,846,864,889,979,1073,1099,1105,1242],depth:[40,41,433,458,905,927,931,937,979,1020,1041,1130,1174,1183,1236,1240,1271,1272],depth_cutoff:[40,41],depthwis:[1211,1218,1259,1266],depthwise_conv2d:[195,376,497,629,819,1211],depthwiseconv2d:[1242,1259],deriv:[1076,1078,1079,1081,1083,1084,1085,1174,1176,1183,1242,1271,1275,1279,1281],descend:[857,858,1099,1105],descent:[1076,1081,1275,1280],describ:[40,41,1193,1194],descript:[850,852],design:[1242,1243],desir:[40,41,905,950,955,959,979,982,986,1022,1023,1042,1043,1075,1092,1097,1130,1193,1195,1196,1197,1199,1201],desired_aspect_ratio:[472,475,1092,1097],desired_percent_increas:1130,detail:1288,detect:[40,41,1174,1175,1182],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,837,838,839,843,848,850,852,860,861,862,864,889,905,940,942,943,952,955,959,960,966,969,970,971,978,979,981,982,986,987,988,1021,1024,1028,1029,1062,1072,1076,1082,1110,1118,1126,1127,1128,1129,1130,1211,1222],dev:[40,41,42,43,121,285,431,433,434,437,447,448,449,456,457,458,459,460,461,466,483,484,553,681,905,908,909,911,912,914,915,918,919,921,922,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,941,944,945,946,947,948,949,950,951,954,979,982,986,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1075,1076,1091,1186,1187,1188,1189,1190,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],dev_clon:[40,41,905],dev_clone_arrai:905,dev_clone_it:905,dev_clone_nest:905,dev_dist:[40,41,905],dev_dist_arrai:905,dev_dist_it:905,dev_dist_nest:905,dev_from_str:[43,121,285,431,553,681,905],dev_mapp:905,dev_str:[40,41],dev_to_str:[121,285,431,553,681,905],dev_unifi:905,dev_unify_arrai:905,dev_unify_it:905,dev_unify_nest:905,dev_util:905,devclonedit:905,devcloneditem:905,devclonednest:905,devdistit:905,devdistitem:905,devdistnest:905,develop:[43,1242,1285,1288],deviat:[40,41,1186,1189,1193,1199,1228,1229,1273,1274],devic:[21,40,41,43,387,388,389,432,433,446,830,831,832,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,979,982,986,1013,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1075,1076,1091,1186,1187,1188,1189,1190,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],devmanag:[905,913],devmapp:[905,915],devmappermultiproc:905,diag:[1099,1105],diagon:[98,223,408,529,657,850,979,1022],dict:[15,16,17,18,19,40,41,42,905,907,910,914,915,917,927,928,929,930,931,979,1004,1005,1006,1034,1126,1127,1128,1130,1174,1176,1177,1178,1181,1183,1248,1249],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,833,834,905,924,925,928,929,1099,1104,1130,1211,1220,1242,1285,1288],differenti:[1242,1285],dilat:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],dim:[40,41,43,979,1041,1092,1093,1097,1099,1105,1130,1259,1270],dim_siz:[40,41,905,1130],dimens:[40,41,42,850,851,852,853,854,860,861,862,905,936,979,990,995,999,1004,1005,1006,1009,1012,1019,1031,1041,1046,1047,1057,1058,1061,1069,1071,1092,1096,1099,1102,1105,1126,1127,1128,1129,1130,1186,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1208,1211,1212,1213,1214,1215,1216,1217,1218,1221,1224,1226,1227,1259,1260,1261,1262,1263,1264,1265,1266,1269,1270],dimension:[40,41,483,850,852,860,861,862,979,1057,1058,1099,1105],direct:1130,directli:[43,1174,1183,1285,1288],directori:[979,1054,1065],discret:[1224,1226],disk:[40,41,1092,1094],distanc:[979,982],distribut:[40,41,905,924,928,929,930,931,1130,1186,1187,1188,1189,1190,1211,1219,1259,1267,1271,1272],distribute_nest:1130,distributedarrai:[40,41],distrubt:[1224,1226],dive:[1242,1285],divid:[40,41,979,1057,1059,1110],dividend:[1110,1118],divis:[979,1011,1018,1052,1059,1060,1076,1078,1079,1083,1110,1118,1275,1276,1277],divisor:[1076,1078,1079,1083,1110,1118,1275,1276,1277],doc:1242,docstr:43,doe:[40,41,43,979,982,1057,1284],doesn:[1099,1104,1242],doing:43,domain:[837,838,848,1110,1111],don:1242,done:43,door:1288,dot:[1099,1101,1211,1222,1223,1259,1270],down:1284,downscal:[979,993,994],drag:[1242,1288],draw:[1186,1187,1189,1190],drawn:[1186,1187,1188,1189,1190],drop:[1242,1288],dropout:[1211,1242,1259,1270],dropout_r:[1259,1270],ds_tune_step:905,dtype:[40,41,43,128,291,387,388,389,390,392,393,433,434,437,438,446,449,459,466,560,689,830,831,832,833,834,835,959,960,961,962,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,982,986,1013,1022,1041,1042,1043,1075],dtype_bit:[128,291,433,560,689,955],dtype_from_str:[43,128,291,433,560,689,955],dtype_in:[433,443,444,445,955,961,966,967,968,969,970,971,978],dtype_to_str:[128,291,433,560,689,955],duplic:[40,41],dure:[40,41,43,903,904,979,1070,1076,1078,1079,1083,1126,1127,1128,1129,1271,1272,1275,1276,1277,1279],dynam:[433,439,903,904],each:[40,41,42,43,837,838,839,843,845,846,848,857,858,864,883,889,905,914,915,924,925,926,927,928,929,930,936,948,949,979,980,981,996,1007,1046,1057,1061,1064,1074,1076,1079,1081,1083,1084,1085,1092,1095,1099,1105,1110,1113,1118,1120,1121,1130,1174,1178,1186,1187,1193,1194,1211,1212,1213,1214,1215,1216,1217,1218,1219,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1285],eager:1285,easi:1288,easili:1242,econom:1288,ecosystem:1242,edg:[979,992,996,1074],effect:[1076,1085],effective_grad:[1076,1085],effici:1288,einop:[40,41,979,1004,1005,1006],einops_rearrang:[40,41,979],einops_reduc:[40,41,979],einops_repeat:[40,41,979],einstein:[40,41,1193,1194],einsum:[40,41,181,364,485,619,799,1193],either:[40,41,43,979,1003,1034,1037,1039,1126,1127,1128,1129,1130,1259,1270,1271,1272,1285],eleg:1130,element:[40,41,43,483,837,838,839,840,841,842,843,845,846,847,848,853,854,857,858,860,861,862,864,883,889,905,926,930,936,955,959,979,980,982,984,985,987,988,992,993,994,1000,1001,1007,1010,1011,1022,1023,1036,1038,1046,1048,1057,1068,1073,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1130,1193,1194,1196,1198,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1219,1259,1267],elementwis:[40,41],elementwise_affin:[1273,1274],elementwise_funct:[837,838,839,840,841,842,843,844,845,846,847,848],elemtn:[1186,1187],elif:1130,els:[979,989,1003,1008,1130],elsewher:[979,1073],emphas:1242,empti:[40,41,1099,1104,1130],enabl:[40,41,42,43,1242],encapsul:[833,835],encod:[979,1012,1092,1094],end:[979,982,1242,1285],ensur:43,entir:[40,41,860,861,862,905,949,1130,1242,1259,1268],entri:[40,41,979,1032,1033,1057,1058],entropi:[1224,1225,1226,1227],enumer:1130,environ:1242,eps:[390,833,834],epsilon:[1076,1078,1079,1083,1224,1225,1226,1227,1228,1229,1273,1274,1275,1276,1277],equal:[40,41,433,560,689,837,841,843,979,981,987,988,996,1057,1074,1110,1122,1124,1186,1190],equality_matrix:[979,981],equat:[40,41,1193,1194],equival:[850,852,979,982,1110,1124],erf:[481,777,1110],error:[40,41,43,905,979,1058,1110,1119,1130,1203,1204,1271,1272,1275,1279],essenti:43,etc:[40,41,43,905,950,979,982,986,1014,1015,1022,1032,1033,1041,1042,1043,1049,1050,1075,1130,1186,1187,1188,1189,1190,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1288],euclidean:[850,852],euler:829,evalu:[40,41,837,846,860,861,862,979,1037,1174,1175,1182],even:[43,1288],evenli:[40,41,979,982,1032,1033,1057],everi:[979,981,1288],exact:[40,41],exampl:[43,903,904,979,992,1061,1099,1104,1242,1284,1285,1288],example_input:[433,439,903,904],exc_tb:1130,exc_typ:1130,exc_val:1130,exce:[979,1038],except:[40,41,44,47,860,861,862,979,982,989,995,1003,1070,1130],excess_s:1130,excit:[1242,1285],exclud:[59,61,979,982,1186,1190],exclus:[40,41,433,441,454,467,469,979,1000,1029,1076,1082,1186,1188],execut:[43,979,1070,1285],execute_with_gradi:[161,340,467,598,756,1076,1242,1284],exist:[40,41,979,1003,1130,1242,1275,1279,1288],exp:[777,1110],expand:[40,41,979,1009,1012],expand_dim:[40,41,291,689,979,1130],expect:[979,983],explain:[43,1285],explicitli:[43,1259,1268,1270,1271,1272,1285],expon:[43,864,889,979,1060],exponenti:[43,864,889,1110,1119,1120],expos:[979,986,997],express:[979,1037],exsit:[40,41],extend:43,extra:[40,41,42,1076,1080],extract:[850,851],eye:[1099,1101],fabian:1242,fabio:1242,factor:[905,914,947,948,949,1076,1078,1079,1083,1084,1099,1105,1130,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266,1275,1276,1277,1278],fail:43,falck:1242,fall:[1271,1272,1275,1279],fallback_to_non_compil:[1271,1272,1275,1279],fals:[15,18,19,40,41,42,59,66,67,68,69,70,431,433,441,442,454,462,465,467,468,469,476,477,837,843,850,852,857,858,860,861,862,905,923,936,944,949,954,955,962,963,964,965,979,981,1000,1003,1008,1012,1019,1029,1034,1055,1057,1071,1073,1076,1079,1080,1081,1082,1083,1084,1085,1099,1102,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1193,1195,1196,1197,1198,1199,1200,1201,1230,1231,1232,1236,1240,1248,1249,1271,1272,1275,1276,1277,1278,1279,1280],fan_in:1250,fan_mod:1250,fan_out:1250,far:[1174,1175,1182,1284],faster:[903,904],favourit:[1242,1284],feasibl:1288,feat_dim:[1211,1222,1223],fed:[905,949,1130],feed:[905,949,1130],few:43,field:1288,file:[40,41,43,979,1054,1065,1271,1272],filepath:[40,41],fill:[40,41,830,831,832,979,1013,1042,1186,1188],fill_valu:[433,446,979,1013],filter:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266,1288],filter_s:[1259,1260,1261],filter_shap:[1259,1262,1263,1264,1265,1266],find:[40,41,1288],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,209,210,390,391,511,512,639,640,833],finish:[1242,1288],finit:[837,843],first:[40,41,43,483,837,839,903,904,905,936,979,987,995,999,1007,1032,1033,1061,1063,1076,1080,1099,1105,1126,1127,1128,1129,1130,1174,1175,1182,1186,1192,1193,1198,1200,1259,1270,1271,1272,1275,1279,1285,1288],firstlayersiren:[1242,1250],firstli:[1285,1288],fist:[905,949,1130],fit:[40,41,431,433,467,472,476,480,481,483,979,1046,1092,1097],fix:43,fkt:1288,flag:[40,41,43,1076,1082],flat:[40,41,43,979,1046,1049],flat_list:[40,41],flatten:[40,41,850,852,979,1012,1046,1193,1195,1196,1197,1199,1201],flatten_key_chain:[40,41,1271,1272],flexibl:[1242,1285],flip:[40,41,101,226,411,532,660,853],float32:[43,433,449,955,959,967,968,979,982,986,1022,1042,1043,1075],float_dtyp:[955,963,973],float_img_to_uint8_img:1092,floor:[291,433,689,979,1011,1130],floormod:[291,433,689,979],fluid:1288,fname:[1230,1232,1236,1271,1272],folder:[43,1242],follow:[40,41,43,833,835,850,852,905,949,979,1025,1026,1027,1059,1060,1076,1079,1081,1083,1084,1085,1130,1174,1178,1183,1211,1222,1223,1242,1259,1269,1275,1279],followng:[833,834],fomaml_step:1126,forget:[1076,1078,1079,1083,1275,1276,1277],fork:[979,1039,1242,1243],forkserv:[979,1039,1130],form:[15,16,17,18,19,40,41,979,986,1076,1079,1081,1083,1084,1085,1174,1176,1183,1211],format:[40,41,43,905,923,955,959,961,965,979,982,986,1022,1042,1043,1075,1130,1193,1194,1242,1284,1285],format_fn:[40,41],format_key_chain:[40,41],forward:[1271,1272,1275,1279,1284],found:[40,41,42],fourier:[979,1012],fourier_encod:979,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,356,357,360,361,362,363,365,366,367,368,369,370,371,372,375,377,378,379,380,381,382,383,388,389,391,392,393,396,397,398,399,400,401,402,403,404,405,406,409,410,412,416,419,420,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,473,474,475,477,478,479,482,484,486,487,488,489,490,491,492,495,496,498,499,500,501,502,503,504,509,510,512,513,514,517,518,519,520,521,522,523,524,525,526,527,530,531,533,537,540,541,549,554,555,556,557,558,559,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,600,601,602,604,605,606,608,609,610,611,615,616,617,618,620,621,622,623,624,625,626,630,631,632,637,638,640,641,642,645,646,647,648,649,650,651,652,653,654,655,658,659,661,665,668,669,677,682,683,684,685,686,687,688,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,757,758,759,760,761,763,764,765,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,800,801,802,803,804,805,806,809,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,831,832,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1229,1231,1232,1234,1235,1237,1241,1242,1246,1247,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1287,1288],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1130,framewrk:[979,1039],freeli:43,frequenc:[979,1012],from:[40,41,42,43,837,845,848,850,851,853,854,860,861,862,905,914,915,949,955,961,979,1003,1014,1015,1022,1047,1058,1066,1073,1076,1079,1083,1092,1096,1099,1104,1126,1127,1128,1129,1130,1174,1176,1183,1186,1187,1188,1189,1190,1193,1198,1200,1211,1219,1222,1242,1248,1249,1259,1267,1270,1275,1279,1284,1285],from_cal:[1271,1272],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[128,291,433,560,689,833,834,979,1099,1104,1242],full_matric:[1099,1105],fulli:[43,1242,1259,1269,1270,1284],func:[40,41,433,439,467,468,903,904,905,949,979,991,1076,1080,1130],further:[43,1288],furthermor:1288,futur:1288,gain:1250,gamma:[1228,1229],gather:[40,41,128,291,433,560,689,979,1015],gather_nd:[40,41,128,291,433,560,689,979],gauss:[1110,1119],gaussian:[1203,1204],geglu:[1242,1245],gelu:[374,494,808,1203,1242,1245],gener:[23,40,41,43,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,483,903,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1082,1186,1188,1190,1191,1242,1275,1279],geometr:[979,1012],get:[40,41,43,833,834,835,905,914,915,923,938,939,944,948,951,954,955,965,966,979,983,1016,1017,1018,1045,1130,1240,1242,1259,1268,1288],get_all_arrays_in_memori:979,get_all_arrays_on_dev:905,get_framework:59,get_initial_st:[1259,1268],get_min_bas:979,get_min_denomin:979,get_mod_kei:[1271,1272],get_num_dim:[433,689,979],get_param:1236,get_param_recurs:1236,get_referrers_recurs:979,getfullargspec:1130,gist:1242,give:[43,857,858,979,1047,1285],given:[40,41,43,830,831,832,853,854,857,858,905,938,944,947,948,949,951,954,955,959,979,982,986,992,1000,1001,1015,1032,1033,1042,1043,1046,1049,1050,1057,1064,1069,1071,1075,1076,1078,1079,1081,1083,1084,1085,1099,1101,1106,1110,1111,1130,1174,1179,1180,1186,1189,1190,1192,1193,1196,1198,1199,1200,1201,1211,1212,1213,1214,1215,1216,1217,1218,1248,1249,1288],global:[40,41,42,905,914,915,922,947,948,949,955,962,963,964,979,1002,1017,1018,1045,1051,1052,1053,1059,1060,1076,1091,1130,1228,1229,1234,1235,1242,1273,1274],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1242,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],googl:1242,got:[43,1242],gpu0:43,gpu2:43,gpu:[905,940,943,1130],gpu_is_avail:[431,905,1130],grad:[1242,1275,1279,1284],gradient:[25,40,41,468,469,470,471,905,949,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1095,1126,1127,1128,1129,1242,1275,1276,1277,1278,1279,1280,1284,1288],gradient_descent_upd:[1076,1126,1127,1128,1129],gradient_imag:[164,345,472,603,762,1092],gradienttrack:[1076,1077],graph:[1076,1079,1081,1083,1084,1085,1230,1231,1232,1237,1242,1271,1272],graph_compil:[1230,1231,1232,1233,1234,1235,1236,1240],greater:[40,41,979,982,1010,1058,1186,1190],green:[40,41,42,1286,1287],grid:[979,1037],group:[1092,1097],guid:[1242,1243,1288],gym:1242,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1288,half:[979,982,1130,1186,1190],hand:1242,handl:[40,41,42,43,903,904,905,921,923,932,933,944,951,954,1076,1079,1081,1083,1084,1085,1130,1275,1276,1277,1278,1279,1280],has:[40,41,43,979,1061,1099,1104,1110,1114],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,979],hasattr:1130,have:[40,41,43,833,834,837,838,839,843,845,848,850,852,853,854,860,861,862,864,883,889,979,995,999,1004,1005,1006,1007,1013,1061,1076,1082,1090,1099,1105,1110,1118,1130,1242,1284,1285],haven:43,hdf5:[40,41,1271,1272],head:[1211,1222,1259,1270],head_dim:[1259,1270],height:[1092,1097],height_cutoff:[40,41],help:[59,390,431,432,905,917,918,919,920,955,1076,1236,1240,1242,1250,1252,1253,1255,1256,1258],helper:1242,here:[43,1242],hidden:[1211,1221,1259,1268],hierarch:[979,997],hierarchi:[40,41],high:[40,41,483,1186,1188,1190],higher:[1076,1079,1081,1083,1084,1085,1099,1105],highest:[1186,1188],highest_util:1130,highest_util_nod:1130,highli:1242,highlight:1288,highlight_subgraph:[1230,1232,1236],hint:43,hkt:1288,hold:[955,959,979,982,986,1049,1050],host:1242,hot:[979,1041],how:[1242,1259,1270,1271,1272,1285,1288],howev:[43,1285],http:1288,hyperbol:[837,838,842,1110,1112,1116,1117,1123,1125,1203,1210],hypothet:1288,icon:1242,idea:1242,ident:[40,41,43,128,291,433,560,689,979],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[829,833,834,837,848],if_exist:[40,41],ignor:[40,41,1275,1279],ignore_key_error:[40,41],ignore_miss:[1275,1279],ignore_non:[40,41],iinfo:[80,209,390,511,639,833],imag:[27,473,474,475,979,1031,1093,1094,1095,1096,1097,1098,1211,1212,1213,1214,1215,1217,1218,1242,1288],image_dim:[1092,1096],imkkhk:1288,immedi:[1242,1285,1288],implement:[43,837,838,846,864,889,1242,1285,1288],in_featur:[1211,1220],inadvert:43,includ:[40,41,43,850,852,860,861,862,979,982,1021,1059,1060,1072,1174,1175,1186,1190,1259,1269,1270,1273,1274,1284],include_deriv:[1174,1176,1183],include_empti:[40,41],include_gener:[1230,1231,1232,1236,1271,1272],include_inf:[40,41,979,1021,1072],include_nest:[1174,1175],include_self:[40,41],inclus:[1186,1188],incom:[1211,1220],increas:[905,927,931,937,979,996,1009,1074,1130,1174,1183],increasingli:1288,increment:[979,1026,1130],increment_param_count:1236,inde:1242,indent:[40,41,42],independ:[1186,1187],index:[40,41,433,483,979,984,985,1014,1015,1037,1058,1061,1174,1177,1179,1180,1181,1184],index_nest:1174,indic:[40,41,433,447,448,458,460,461,850,852,857,858,979,984,985,1014,1015,1023,1041,1049,1050,1174,1175,1177,1179,1180,1181,1182,1184,1185,1186,1187,1203,1208,1211,1212,1213,1214,1215,1216,1217,1218,1228,1229,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272],indices_wher:[128,291,433,689,979],indistinguish:[837,848],inevit:1288,inf:[40,41,850,852,979,1021,1030,1072,1110,1114],infer:[837,845,850,851,903,904,979,1019,1022,1047,1055,1092,1096,1099,1104,1285,1288],infin:[837,838,843,848,850,852,979,1030],infinit:[837,848],inform:[833,834,835,1076,1087],init_c:[1211,1221],init_h:[1211,1221],init_on_first_step:[1275,1279],initi:[40,41,42,59,390,431,432,905,917,918,919,920,955,1076,1130,1211,1221,1236,1240,1242,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1275,1279],initialz:[1271,1272],inner:[1126,1127,1128,1129],inner_batch_fn:[1126,1127,1128],inner_batch_shap:[1211,1220],inner_cost_fn:[1126,1127,1128],inner_grad_step:[1126,1127,1128,1129],inner_learning_r:[1126,1127,1128,1129],inner_optimization_step:[1126,1127,1128,1129],inner_v:[1126,1127,1128],inp:1130,inplac:[40,41,979,989,1024,1028,1062,1076,1079,1081,1083,1084,1085,1248,1249,1275,1276,1277,1278,1279,1280],inplace_arrays_support:[433,979],inplace_decr:[128,291,433,560,689,979],inplace_incr:[128,291,433,560,689,979],inplace_oper:[0,11,12],inplace_upd:[40,41,128,291,433,560,689,979,1248,1249],inplace_variables_support:[433,979],input:[15,18,19,40,41,42,43,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,924,927,928,931,937,949,950,955,959,960,962,963,964,965,966,970,971,979,980,981,984,985,987,988,989,990,992,993,994,995,996,998,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1019,1021,1022,1023,1025,1026,1027,1029,1030,1031,1035,1036,1037,1038,1046,1048,1055,1056,1058,1061,1062,1063,1064,1066,1067,1068,1069,1071,1072,1074,1076,1080,1082,1087,1091,1092,1093,1094,1095,1096,1098,1099,1102,1104,1105,1107,1108,1109,1110,1112,1114,1116,1117,1118,1122,1123,1124,1125,1126,1127,1128,1129,1130,1186,1187,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1228,1229,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274,1285],input_ax:[905,949,1130],input_channel:[1259,1260,1261,1262,1263,1264,1265,1268,1269],input_queu:1130,inputs_split:1130,insert:[979,1009],insid:43,inspect:1130,inspir:1288,instal:1242,instanc:[15,16,17,18,19,40,41,43,483,864,883,889,905,914,1130,1248,1249,1281,1282],instead:[40,41,483,1193,1195,1196,1197,1198,1199,1200,1201,1288],int32:43,int64:[955,959,979,982,986,1022,1042,1043,1075],int_dtyp:[955,964,974],integ:[40,41,483,833,835,837,839,840,850,852,860,861,862,955,971,979,982,1010,1048,1057,1186,1188,1191],integr:1242,intend:43,inter:1242,interact:1242,interchang:[40,41,979,1063],interest:1242,interfac:[979,986,1285],intermedi:[40,41],intern:[40,41,905,1076,1090,1130,1174,1175,1182,1183,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1281,1282],interpol:[979,1031],intersect:[1110,1111],interv:[40,41,860,861,862,979,982,992,1032,1033,1110,1113,1186,1190],introduc:1288,inv:[766,1099,1288],invalid:[860,861,862],invalid_dtyp:955,invers:[837,838,1099,1101,1103,1110,1111,1112,1113,1114,1116,1288],invert:[1099,1101,1103],invest:1288,invoc:[903,904],irrespect:1242,is_al:1130,is_arrai:[128,291,433,560,689,979,1130],is_float_dtyp:955,is_int_dtyp:955,is_mean:1130,is_sum:1130,is_var:[1236,1240],is_vari:[161,340,467,598,756,1076],isfinit:[85,214,395,516,644,837],isinf:[291,560,689,979],isinst:1130,isnan:[85,214,395,516,644,837],isnumer:1130,issu:43,item:[15,19,40,41,864,876,877,905,914,915,917,924,926,928,930,936,955,962,979,997,1020,1059,1060,1130,1174,1178,1179,1180,1183,1184,1185,1242,1271,1272,1284],iter:[15,16,17,18,19,40,41,42,903,904,905,908,909,911,912,914,915,918,919,926,928,929,930,931,936,949,979,981,990,995,996,1022,1037,1042,1046,1047,1050,1055,1057,1061,1064,1069,1074,1130,1174,1175,1176,1178,1182,1183],iterbal:[905,926,930,936,1130],its:[483,857,858,905,949,979,1022,1047,1063,1069,1130,1242],itself:[43,1174,1183],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,390,392,393,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1240,1242,1243,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1286,1287],ivy_backend:[40,41],ivy_bay:1288,ivy_test:43,ivyfcmodel:1284,ivyh:[40,41,42],ivymodul:[192,816],jame:1242,jax:[43,1076,1082,1242,1288],jax_concat:1242,jnp:1242,join:[40,41,979,995,1061,1130],journal:1242,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1242,1259,1268,1288],kaimingnorm:[1250,1254],kalman:1288,kalman_filt:1288,kalman_filter_step:1288,kalman_filter_upd:1288,keep:[40,41,905,950,979,1071,1130,1242,1243,1288],keep_inner_v:[1126,1127,1128],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1126,1127,1128],keepdim:[40,41,433,465,476,477,850,852,860,861,862,979,1071,1099,1102,1193,1195,1196,1197,1198,1199,1200,1201],kei:[15,16,17,40,41,42,43,864,869,905,917,979,997,1126,1127,1128,1130,1174,1177,1181,1211,1222,1223,1242,1248,1249,1259,1270,1275,1279],kept:[40,41,42,1126,1127,1128],kera:1288,kernel:[1211,1221],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,905,914,915,927,931,937,979,983,1004,1005,1006,1034,1130,1174,1178,1271,1272],keyword_color_dict:[40,41,42],kind:[833,834,835,1288],kwarg:[15,16,17,40,41,42,59,63,905,914,927,931,937,979,1034,1130,1230,1231,1232,1236,1248,1249,1271,1272],kwarg_stateful_idx:[1230,1231,1232,1236,1271,1272],kwargs_clon:1130,kwargs_dist:1130,kwargs_uni:1130,label:[43,1224,1225,1226,1227],lamb:[1076,1083,1242,1275],lamb_upd:1076,lambda:[1130,1275,1278,1280,1284],lar:[1076,1083,1084,1242,1275],larger:[833,834,979,992],largest:[40,41,833,834,835,979,984,1010],lars_upd:1076,last:[40,41,853,854,860,861,862,979,982,999,1031,1057,1061,1099,1102,1105,1193,1198,1200,1203,1208,1211,1221,1259,1269],later:[40,41,979,991],latest:[1259,1268],layer:[1076,1079,1081,1083,1085,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1228,1229,1242,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1288],layer_norm:1228,layernorm:[1242,1273],layerwis:[1076,1084,1275,1278],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1174,1175,1182],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1203,1204,1205],leaky_relu:[808,1203],learn:[837,845,850,851,1076,1079,1081,1083,1084,1085,1099,1104,1126,1127,1128,1129,1186,1192,1242,1275,1276,1277,1278,1279,1280,1285,1288],learnabl:[1228,1229,1273,1274],least:43,leav:[15,18,19,40,41,1174,1175,1176,1182,1183],left:[40,41,43,1099,1102,1193,1195,1196,1197,1198,1199,1200,1201,1242],leftmost:[40,41],len:1130,length:[40,41,42,979,982,1047,1058,1069],lenton2021ivi:1242,lenton:1242,less:[40,41,43,85,214,395,516,644,837,840,850,852,1130,1186,1190],less_util_node_str:1130,let:[1285,1288],level:1242,librari:[1242,1284,1288],lightweight:1242,like:[43,1076,1082,1186,1190,1242,1284,1285,1288],limit:[40,41,42,833,834,835,979,992,993,994],linalg:[29,1100,1101,1102,1103,1104,1105,1106,1242],line:43,linear0:[1242,1284],linear1:1242,linear2:1284,linear:[979,1012,1031,1099,1203,1204,1205,1206,1211,1219,1242,1259,1260,1261,1262,1263,1264,1265,1266,1284],linear_algebra:[476,477,478,479,850,851,852],linear_resampl:[128,291,433,560,689,979],linearli:[979,1012],link:[43,1242],linspac:[128,291,433,560,689,979,982],list:[15,18,19,40,41,43,387,388,389,830,831,832,853,854,860,861,862,905,914,915,924,925,927,928,929,931,934,935,949,979,982,986,988,1037,1056,1057,1066,1071,1126,1127,1128,1130,1174,1175,1176,1178,1182,1183,1211,1212,1213,1214,1215,1216,1217,1218,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266],list_join:[40,41,42],list_stack:[40,41],liter:[850,852],littl:1285,load:[40,41],loaded_kwarg:1130,loader:1242,local:43,local_set:[979,1020],locat:[43,837,844,979,1030,1186,1187],log2:[85,395,516,644,837],log:[777,979,1033,1110,1130,1224,1225,1226,1227,1242],log_all_op:1236,log_global_inference_abs_tim:[1233,1242],log_global_inference_rel_tim:[1233,1242],logarithm:[837,846,1110,1121],logic:[31,837,847,860,861,862,1108,1109,1242],logical_and:[355,774,1107],logical_not:[85,214,395,516,644,837],logical_or:[355,774,1107],logit:[1224,1227],logspac:[128,291,433,560,689,979],look:[43,1285,1288],loop:[1126,1127,1128,1129],loss:[1225,1226,1227,1242,1284],loss_fn:[1242,1284],lot:1285,low:[40,41,483,1186,1188,1190],lower:[40,41,43,979,1036,1186,1190],lower_depth:[1271,1272],lowest:[15,18,19,40,41,1174,1183,1186,1188],lstm:[1211,1221,1242,1259],lstm_updat:[43,1211],machin:[833,834,835,837,845,850,851,1099,1104,1186,1192,1242,1285,1288],made:43,mai:[979,982,1003,1007,1242,1285,1288],main:[979,1022,1242],mainli:1242,maintain:43,make:[43,483,905,1130,1242,1285],maml:[1126,1127,1128],maml_step:1126,manag:[905,1130],manhattan:[850,852],mani:[40,41,43,979,1057,1242],manipulation_funct:[853,854],manner:[15,18,19,40,41,43,1174,1183],manual:[1174,1175,1182,1288],map:[40,41,42,837,844,905,914,979,1030,1130,1174,1179,1180,1183,1259,1270,1284],map_cont:[40,41],map_nest_at_index:1174,map_nest_at_indic:1174,map_sequ:[40,41],mapper:[905,914,915,1130],mask:[1211,1222,1223],master:43,match:[40,41,979,1034],match_kwarg:979,math:[33,482,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1130,1242],mathbb:[1099,1106],mathbf:[1099,1106],mathemat:[829,850,852],matmul:[43,291,433,560,689,979,1288],matplotlib:1285,matric:[1211,1220],matrix:[40,41,850,851,979,981,993,1035,1099,1100,1101,1102,1103,1104,1106,1211,1220,1259,1269],matrix_norm:[40,41,168,349,476,607,766,1099],matter:1242,max:[40,41,390,833,834,835,979,993,994,1005,1036,1049,1050,1130,1193,1195,1275,1277],max_batch_s:[40,41],max_chunk_s:[905,949,1130],max_depth:[40,41,905,909,912,919,927,931,937,979,1020,1130,1174,1183],max_dev_dim_step_ratio:905,max_freq:[979,1012],max_length:[40,41],max_node_dim_step_ratio:1130,max_norm:[40,41,979,993,994],max_split_factor_step_s:[905,1130],max_trust_ratio:[1076,1083,1275,1277],maxim:[1242,1285,1288],maximis:1242,maximum:[40,41,42,689,905,927,931,937,949,979,984,992,993,994,1012,1076,1083,1130,1174,1183,1193,1195],mayb:[15,18,19],mdi:1130,mean:[40,41,483,905,934,935,936,937,949,979,1005,1126,1127,1128,1129,1130,1174,1178,1186,1189,1193,1196,1199,1201,1250,1284,1288],measur:[1211,1222,1259,1270],mech:1242,mechan:[1242,1288],medic:1288,member:43,memori:[905,921,944,949,951,954,1130,1211,1221,1242],merg:43,merge_with_upstream:43,meshgrid:[291,433,689,979],messag:[1286,1287],meta:[35,1127,1128,1129,1242],method:[40,41,42,43,483,979,986,997,1037,1049,1050,1076,1083,1084,1130,1174,1175,1182,1183,1242,1259,1270,1271,1272,1285],might:[979,1003,1288],min:[40,41,390,833,834,835,850,852,979,1005,1038,1049,1050,1059,1099,1104,1130,1193,1197],min_bas:[979,1060],min_denomin:[979,1059],min_dev_dim_s:905,min_node_dim_s:1130,min_sf_tune_step:[905,1130],min_unit_dev_tune_step:905,min_unit_node_tune_step:1130,mind:1242,mini:[1228,1229,1273,1274],minimum:[40,41,689,905,955,959,979,982,985,986,992,1017,1018,1051,1052,1059,1060,1130,1193,1197],miss:[1275,1279],ml_framework:[837,845,850,851,979,982,1099,1104],mod:[979,1011],mod_depth:[1271,1272],mod_height:[1271,1272],mod_with_top_mod_key_chain:[1271,1272],mode:[40,41,476,478,903,904,905,934,935,936,937,949,1099,1104,1105,1130,1285],model:[1242,1284],modul:[40,41,42,59,979,1039,1130,1242,1243,1245,1246,1247,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274,1281,1282,1288],moment:[1076,1078,1079,1083,1275,1276,1277],more:[43,853,854,979,1061,1130,1242,1285,1288],more_util_node_str:1130,most:[40,41,43,1099,1104,1242,1288],move:[40,41,43,905,950,1130],much:[43,1242,1288],multi:[483,979,1039,1211,1222,1259,1270],multi_head_attent:1211,multi_index_nest:1174,multi_map:[40,41],multi_nod:1130,multidev:[905,916,917,918,937],multidevcontain:[40,41],multidevic:[905,914],multidevit:[905,908,911,914,915,919],multidevitem:[905,907,910],multidevnest:[905,909,912],multiheadattent:[1242,1259],multinod:[1130,1134],multinodecontain:1130,multinodeit:1130,multinodeitem:1130,multinodenest:1130,multinomi:[174,359,483,614,792,1186],multipl:[40,41,860,861,862,979,1034,1057,1099,1101,1193,1195,1196,1197,1198,1199,1201,1228,1229,1259,1269,1285],multipli:[40,41,979,1000,1193,1198],multiprocess:[40,41,42,433,689,905,914,979,1130],must:[40,41,42,43,830,831,832,837,838,839,843,845,848,850,852,853,854,860,861,862,864,883,889,905,934,935,936,937,949,979,982,995,997,999,1007,1036,1038,1050,1061,1110,1115,1118,1130,1186,1191,1275,1279],mutabl:[1174,1176,1183],mutlidevic:[905,914],mutlinod:1130,mw_tm1:[1076,1079,1083],mx_concat:1242,mxnet:[43,1242,1288],my_func:43,mymodel:1242,name:[903,904,1230,1231,1232,1236,1284],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1285],nan:[40,41,829,837,838,843,844,979,1021,1072],nativ:[15,17,18,19,40,41,43,905,921,923,932,933,944,951,954,955,960,967,968,1130,1242,1243,1248,1249],native_modul:[1248,1249],native_module_class:[1248,1249],nativearrai:[15,18,19,43,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,852,853,854,857,858,860,861,862,864,883,889,905,923,949,950,955,959,965,970,971,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1014,1015,1019,1021,1022,1023,1030,1031,1032,1033,1035,1036,1037,1038,1041,1042,1043,1046,1047,1048,1049,1050,1055,1057,1058,1061,1063,1064,1066,1067,1068,1069,1071,1072,1073,1074,1075,1130,1174,1176,1183],natur:[1110,1121,1288],ncdhw:[1211,1216,1217,1259,1264,1265],nchw:[1211,1214,1215,1218,1259,1262,1263,1266],ncw:[1211,1212,1213,1259,1260,1261],ndarrai:[43,387,388,389,390,392,393,483,979,1067],ndhwc:[1211,1216,1217,1259,1264,1265],nearest:[979,1048],need:[43,979,993,994,1211,1213,1215,1217,1242,1259,1261,1263,1265,1288],neg:[40,41,837,843,850,852,853,854,860,861,862,1193,1198,1200,1203,1205],negative_slop:1250,neither:1130,nest:[15,16,17,18,19,40,41,42,905,927,931,937,979,986,1066,1126,1127,1128,1130,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1271,1272,1275,1276,1277,1278,1279,1280],nested_indices_wher:1174,nested_map:[1130,1174],network:[1211,1220,1242,1243,1245,1259,1271,1272,1288],neural:[1211,1242,1245,1259,1284],new_node_percent_mem:1130,new_node_util:1130,new_node_utils_kei:1130,new_std:[1228,1229,1273,1274],newli:[43,903,904,979,990,991],newlin:[40,41,42],newshap:[979,990,1047],next:[833,834,1130,1271,1272,1275,1276,1277,1278,1279,1280],nhwc:[1211,1214,1215,1218,1259,1262,1263,1266],node:[40,41,1174,1175,1182],node_clon:1130,node_dist:1130,node_dist_arrai:1130,node_dist_it:1130,node_in:1130,node_mapp:1130,node_str:1130,node_to_str:1130,node_util:1130,nodedistit:1130,nodedistitem:1130,nodedistnest:1130,nodemanag:[1130,1141],nodemapp:1130,nodemappermultiproc:1130,noinspect:[43,906,956,957,958,1077,1130,1237],non:[40,41,850,852,860,861,862,903,904,955,969,1271,1272,1275,1279,1285],none:[40,41,42,43,59,61,64,387,388,389,431,433,434,437,439,446,447,448,449,456,457,458,459,460,461,462,463,464,466,476,477,483,484,830,831,832,833,834,835,837,845,850,851,852,853,854,860,861,862,903,904,905,914,915,921,922,947,948,949,950,955,962,963,964,979,982,986,1002,1003,1008,1013,1014,1015,1020,1022,1024,1025,1026,1027,1028,1032,1033,1039,1041,1042,1043,1046,1049,1050,1051,1052,1057,1058,1059,1060,1069,1070,1075,1076,1079,1081,1083,1084,1085,1091,1092,1096,1099,1102,1104,1126,1127,1128,1129,1130,1174,1175,1178,1182,1183,1186,1187,1188,1189,1190,1193,1195,1196,1197,1198,1199,1200,1201,1211,1213,1215,1217,1220,1221,1222,1223,1228,1229,1230,1231,1232,1236,1240,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],norm:[40,41,850,852,979,993,994,1099,1102,1229,1242,1274,1275,1277],normal:[1186,1189,1228,1229,1273,1274],normalized_idx:[1228,1229],normalized_shap:[1273,1274],notat:[40,41,1193,1194],note:[43,1099,1104],noth:[40,41,1285],notimplementederror:1130,now:[40,41,905,950,979,980,1130,1242,1259,1270,1271,1272,1284,1285,1288],np_concat:1242,np_finfo:390,ns_tune_step:1130,num:[433,456,457,979,1032,1033],num_arrai:[40,41],num_arrays_in_memori:979,num_arrays_on_dev:905,num_band:[979,1012],num_channel:[1259,1266],num_chunk:1130,num_chunks_floor:1130,num_class:[1186,1187],num_cpu_cor:905,num_gpu:[121,431,905,1130],num_head:[1211,1222,1259,1270],num_kei:[1211,1222,1223],num_lay:[1259,1268],num_or_size_split:[40,41,433,462,979,1057],num_output:1130,num_queri:[1211,1222,1223],num_sampl:[433,455,483,484,979,1031,1092,1093,1186,1187],num_task:[1126,1127,1128,1129],number:[40,41,42,829,833,834,835,837,844,860,861,862,903,904,905,941,942,943,955,966,970,971,979,982,992,996,1009,1012,1019,1022,1031,1032,1033,1036,1040,1046,1057,1064,1068,1072,1074,1099,1105,1126,1127,1128,1129,1130,1186,1187,1191,1193,1195,1196,1197,1199,1201,1211,1222,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1285,1288],numer:[43,837,843,864,883,889,979,1017,1018,1051,1052,1059,1060,1110,1118,1250],numhead:[1211,1222],numpi:[40,41,43,387,388,389,390,392,393,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,979,1067,1099,1104,1105,1193,1194,1242,1284,1285,1288],nwc:[1211,1212,1213,1259,1260,1261],obj:[40,41],object:[40,41,42,59,390,833,834,835,905,955,959,979,982,986,1076,1174,1177,1179,1180,1181,1184,1185,1186,1192,1236,1240,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272],object_in:[433,437,979,986],observ:1130,occupi:[833,834,835,979,1049,1050],off:[979,982],offer:1242,offset:[850,851,1228,1229],often:1285,old:[40,41],on_init:[1259,1270,1271,1272],onc:[43,905,949,1130,1186,1187,1242],one:[40,41,43,850,852,853,854,905,934,935,936,937,949,955,961,979,1022,1034,1041,1049,1050,1058,1061,1099,1102,1130,1193,1194,1195,1196,1197,1198,1199,1200,1201,1242,1285,1288],one_hot:[128,433,560,689,979],onearrai:[979,1009],ones:[40,41,77,206,387,508,636,830,979,1022,1041,1043,1242],ones_lik:[128,291,433,560,689,979],ongo:43,onli:[40,41,43,483,853,854,905,1099,1104,1130,1174,1175,1176,1182,1275,1276,1277,1278,1279,1280,1284,1285],onlin:1242,onto:[905,934,935,950,1130,1174,1178,1183],oom:[905,1130],open:[979,982,1186,1190,1242,1288],opencv:1285,oper:[40,41,837,847,979,989,1004,1005,1006,1032,1033,1062,1076,1079,1081,1083,1084,1085,1107,1108,1109,1211,1212,1213,1214,1215,1216,1217,1218,1220,1242,1243],operand:[40,41,837,838,1193,1194],oppos:[979,1012],optim:[905,1076,1079,1081,1083,1084,1085,1126,1127,1128,1129,1130,1242,1276,1277,1278,1280,1284,1288],optimizer_upd:1076,option:[15,18,19,40,41,42,43,387,388,389,830,831,832,837,845,850,851,852,853,854,860,861,862,903,904,905,914,915,923,927,928,929,930,931,934,935,936,937,944,947,948,949,950,954,955,960,965,969,978,979,981,982,984,985,986,993,994,995,1000,1002,1003,1012,1013,1014,1015,1019,1021,1022,1029,1031,1032,1033,1034,1037,1039,1041,1042,1043,1046,1049,1050,1053,1055,1057,1058,1059,1060,1061,1069,1071,1072,1075,1076,1079,1081,1082,1083,1084,1085,1087,1092,1096,1099,1102,1104,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1186,1187,1193,1195,1196,1197,1198,1199,1200,1201,1203,1204,1208,1211,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1285],ord:[850,852,1099,1105],order:[40,41,42,43,850,852,853,854,857,858,1076,1079,1081,1083,1084,1085,1099,1102,1126,1127,1128,1281,1282],ordered_node_util_kei:1130,org:1288,organ:43,origin:[40,41,42,979,1043,1047,1075,1099,1102],other:[40,41,43,864,866,867,872,874,875,879,881,882,883,884,885,887,889,890,891,892,893,894,896,897,898,900,901,902,903,904,979,981,982,1022,1076,1080,1186,1190,1242,1284,1285,1288],other_i:[43,864,883,889],otherwis:[15,16,17,18,19,40,41,837,843,850,852,860,861,862,905,922,955,962,963,964,979,989,1069,1070,1073,1076,1082,1087,1091,1126,1127,1128,1130,1193,1195,1196,1197,1199,1201],our:[43,1242,1288],out:[43,483,864,883,979,982,1110,1114,1211,1219,1221,1242,1259,1267],out_feat_dim:[1211,1222],out_featur:[1211,1219,1220],out_i:[837,843],outdat:1288,outer:[1126,1127,1128,1129],outer_batch_fn:[1126,1127,1128],outer_batch_shap:[1211,1220],outer_cost_fn:[1126,1127,1128],outer_v:[1126,1127,1128],outlin:1285,output:[40,41,43,830,831,832,853,854,905,914,915,949,979,982,991,1013,1022,1046,1064,1076,1080,1110,1115,1130,1186,1188,1189,1190,1211,1213,1215,1217,1219,1221,1222,1223,1242,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270],output_ax:[905,949,1130],output_axi:1130,output_channel:[1259,1260,1261,1262,1263,1264,1265,1268,1269],output_connected_onli:[1230,1232,1236,1271,1272],output_queu:1130,output_shap:[1211,1213,1215,1217,1259,1261,1263,1265],outsid:[979,992],over:[40,41,850,852,860,861,862,1099,1102,1186,1190,1193,1195,1196,1197,1199,1201,1228,1229,1273,1274],overal:1285,overflow:[979,982],overhead:1285,overrid:[979,1041,1043,1075],overriden:[1275,1279],overwrit:[40,41,905,949,1130],overwrite_at_key_chain:[40,41],own:[1242,1285,1288],packag:[43,1285],pad:[979,996,1012,1074,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],pad_width:[433,979,996,1074],page:1242,pair:[1211,1223],parallel:[905,914,915,1130],parallelis:[905,914,915,1130],param:[40,41,42,43,433,447,448,837,848,905,949,979,980,1014,1015,1041,1042,1130,1241,1242,1271,1272,1284],paramet:[15,16,17,18,19,40,41,42,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,850,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,965,966,967,968,969,970,971,978,979,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1019,1021,1022,1023,1025,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1042,1043,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1087,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],parameter:[1186,1189,1190],params_all_empti:1236,pardo:1242,pars:[979,997],part:[1076,1079,1081,1083,1084,1085,1110,1114,1242,1271,1272,1285],partial:[40,41,1271,1272],particl:1288,particular:[43,1288],pass:[40,41,42,43,905,914,949,955,960,979,991,1076,1090,1126,1127,1128,1130,1248,1249,1271,1272,1275,1279,1281,1282],pattern:[40,41,979,1004,1005,1006],per:[905,1130,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],percent_used_mem_on_dev:905,percent_used_mem_on_nod:1130,percentag:[905,944,1130],perf_count:1130,perform:[40,41,43,857,858,860,861,862,905,979,984,985,1000,1004,1005,1006,1025,1026,1027,1031,1032,1033,1076,1079,1081,1083,1084,1085,1092,1093,1126,1127,1128,1129,1130,1174,1179,1180,1193,1195,1196,1197,1198,1199,1200,1201,1203,1208,1211,1219,1221],permissable_step:1130,permit:43,permut:[483,979,1063,1069],perpendicular:[979,999],person:1242,physci:1288,pickl:[40,41,1130],pickle_filepath:[40,41],pid:1236,pinv:[349,766,1099],pip:1242,pipelin:1284,pkk:1288,pkkm1:1288,pkm1km1:1288,place:[40,41,43,830,831,832,905,950,979,1009,1013,1025,1026,1027,1130,1275,1276,1277,1278,1279,1280],placehold:[1174,1183],pleas:[483,1099,1104],point:[43,829,830,831,832,833,834,837,838,848,850,852,955,970,979,982,1110,1118],popul:[40,41,1186,1187],popular:1288,population_s:[483,484,1186,1187],portabl:[1242,1243],posit:[15,16,17,833,834,837,843,905,927,931,937,979,980,982,1009,1012,1130,1186,1191,1248,1249],possibi:[40,41],possibl:[43,979,1034,1066,1092,1097,1288],post:[1228,1229],post_shap:[40,41],power:[43,864,889,895,979,1017,1051,1060,1250],practic:1242,pre:[905,1130,1242],pre_shap:[40,41],precis:[833,834,837,848],pred:[1224,1225,1226,1227],predict:[1224,1225,1226,1227,1288],preprint:1242,present:[40,41],preserv:[40,41,42,853,854,1076,1087],preserve_typ:[40,41,467,470,1076,1087],press:1242,prevent:[43,1076,1078,1079,1083,1130,1275,1276,1277],previou:[1076,1079,1083],previous:[979,991],prime:1242,print:[40,41,42,905,945,979,1044,1242,1284],print_all_arrays_in_memori:979,print_all_arrays_on_dev:905,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1275,1279],prob:[483,484,1186,1187,1211,1219,1259,1267],probabl:[1186,1187,1211,1219,1259,1267],problem:[43,1288],process:[43,905,914,915,944,954,979,1039,1130],process_specif:[905,944,954,1130],prod:[40,41,979,1005],produc:[905,914,915,1130],product:[40,41,979,999,1000,1035,1193,1194,1211,1222,1223,1259,1270],profil:[121,285,431,553,681,905,1130],project:[1242,1284,1285,1288],promot:[43,837,838,839,848,850,852,864,889,1110,1118],prompt:1242,properli:43,properti:[40,41,390,905,917,1130,1236,1240,1271,1272,1275,1276,1277,1278,1280],provid:[40,41,43,853,854,860,861,862,903,904,905,922,955,962,963,964,969,978,979,1003,1041,1043,1050,1075,1076,1079,1081,1083,1084,1085,1091,1130,1242,1259,1268,1275,1276,1277,1278,1279,1280,1285],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1099,1103],ptype:[1236,1240],pull:[1242,1243],pure:[40,41,1242,1288],purpos:1288,put:1130,pybroadexcept:1130,pyprotectedmemb:[1130,1237],pyshadowingbuiltin:43,pyshadowingnam:[906,956,957,958,1077,1130],python:[40,41,905,944,954,979,982,1130,1242],pytorch:[1076,1079,1081,1083,1084,1085,1099,1104,1242,1275,1276,1277,1278,1279,1280,1284,1285,1288],pyunresolvedrefer:1130,quadrant:[1110,1115],queri:[40,41,864,878,899,905,938,948,1130,1211,1222,1223,1259,1270],query_dim:[1259,1270],query_kei:[40,41],queue:[40,41,42,905,914,915,979,1045,1053,1130],queue_class:[905,914,915,1130],queue_load_s:[40,41,42],queue_timeout:[40,41,42,979,1130],quick:[483,1242],quickli:[43,1284],radian:[837,841,1110,1111,1113,1115,1122,1124],rai:[1110,1111],rais:[40,41,43,860,861,862,864,889,979,989,1017,1051,1058,1060,1070,1130,1271,1272,1275,1279],ram:[905,944,951,954,1130],randint:[174,359,483,614,792,1186],random:[37,40,41,484,1187,1188,1189,1190,1191,1192,1242],random_crop:1092,random_norm:[174,359,483,614,792,1186],random_uniform:[174,359,483,614,792,1186],randomli:[483,1092,1096,1211,1219,1259,1267],randomness_factor:[1230,1232,1236,1271,1272],rang:[483,979,982,1032,1033,1110,1115,1130,1242,1284,1288],rank:[850,852,860,861,862,979,996,1071,1074],rate:[1076,1079,1081,1083,1084,1085,1126,1127,1128,1129,1259,1270,1275,1276,1277,1278,1279,1280],rather:[40,41,905,949,979,982,1029,1076,1082,1130],ratio:[905,1076,1083,1092,1097,1130,1275,1277],raw:[40,41,1099,1104],raw_delta:1130,reach:[905,927,931,937,1130,1174,1183],read:[40,41],readi:[1130,1284],real:[1110,1111,1114],realiti:1285,rearrang:[40,41,979,1004,1006],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1126,1128],receiv:[43,905,914,915,979,983,1034,1130,1259,1269],receivess:[905,1130],receiving_fn:1236,receivng:[1126,1129],recev:[1126,1127,1128],recognit:1288,recommend:1242,rectifi:[1203,1205,1206],recurr:[1211,1221],recurrent_bia:[1211,1221],recurrent_kernel:[1211,1221],recurs:[40,41,1174,1175,1176,1182,1183],redefin:43,reduc:[40,41,860,861,862,905,949,979,1005,1099,1104,1130,1193,1195,1196,1197,1198,1199,1200,1201],reduce_max:[40,41,181,364,485,619,799,1193],reduce_mean:[40,41,181,364,485,619,799,1193,1242,1284],reduce_min:[40,41,181,364,485,619,799,1193],reduce_prod:[40,41,181,364,485,619,799,1193],reduce_std:[40,41,364,1193],reduce_sum:[40,41,181,364,485,619,799,1130,1193],reduce_var:[40,41,181,364,485,619,799,1193],reduct:[39,40,41,433,460,461,860,861,862,979,1005,1049,1050,1194,1195,1196,1197,1198,1199,1200,1201,1242],refactor:43,refer:[43,860,861,862,1076,1078,1079,1099,1106,1259,1269,1288],reflected_oper:[0,13,14],regard:[905,1130],regardless:[40,41,903,904],register_paramet:1284,reimplement:1288,rel:[853,854,1076,1079,1081,1083,1084,1085],rel_slice_obj:1130,relev:[1275,1276,1277,1278,1279,1280],relu:[808,1203,1204,1205,1242,1284],remain:[43,979,1047,1174,1178],remaind:[40,41,979,1011,1057],remov:[40,41,979,1058,1126,1127,1128],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,853,854],rep:[979,1064],repeat:[40,41,43,291,689,979,1006,1064,1130,1285],repeated_config_check:[905,1130],repeatedli:[1174,1181],repetit:[40,41,979,1046,1064],replac:[40,41,43,483,484,979,992,1049,1050,1186,1187],repo:[43,1242],repres:[43,837,838,955,961,966,1211,1220],represent:[40,41,42,43,829,833,834,835,837,839,905,932,933,955,961,967,968,979,1056,1066,1130],reptil:[1126,1129],reptile_step:1126,request:[1242,1243],requir:[43,837,848,903,904,955,959,979,982,986,1248,1249],resampl:[979,1031],reserv:43,reshap:[40,41,43,483,689,979],reshape_lik:[40,41],respect:[837,839,845,864,883,979,1007,1076,1078,1079,1080,1081,1083,1084,1085,1099,1104,1110,1118,1126,1127,1128,1129],respond:43,respons:1130,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,837,838,839,843,845,847,848,850,852,860,861,862,864,883,889,905,914,979,982,1007,1049,1050,1061,1099,1102,1107,1108,1109,1110,1118,1130,1193,1195,1196,1197,1198,1199,1200,1201,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1242],ret:1130,ret_dict:1130,ret_fn:[905,914,915,1130],retain:[1076,1080],retain_grad:[467,468,1076,1080],retreiv:1130,retrn:[979,1056],return_cont:[40,41],return_dict:[40,41],return_graph:[1230,1231,1232],return_inner_v:[1126,1127,1128,1129],return_sequ:[1259,1268],return_st:[1259,1268],rev:[979,1003],revers:[40,41,853,854,979,1003,1069],review:43,right:[40,41,43],rk_e:1288,robot:1242,ronald:1242,root:[43,837,848],round:[291,433,689,837,848,979,982,1130],row:[979,1022,1186,1187],rule:[43,837,839,848,864,889,979,982,1110,1118],run:[43,905,914,1076,1078,1079,1083,1126,1127,1128,1129,1130,1242,1243,1259,1270,1271,1272],safe:[905,914,1130],safety_factor:[905,1130],same:[15,16,17,40,41,43,837,840,853,854,905,914,915,949,950,955,959,979,980,995,1010,1011,1014,1015,1041,1043,1048,1049,1050,1061,1075,1076,1082,1087,1099,1105,1110,1114,1126,1127,1128,1130,1193,1194,1211,1212,1213,1214,1215,1216,1217,1218,1242,1259,1260,1261,1262,1263,1264,1265,1266,1284,1288],same_arrai:[40,41],sampl:[979,1031,1092,1093,1186,1187,1189,1190,1211,1219,1242,1259,1267],satisfi:[979,986,1099,1101,1106],save:[40,41,979,1054,1065,1092,1094,1271,1272],save_debug_info:1236,save_dir:[431,432,905,920,1130],save_to_disk:[1230,1232,1236,1271,1272],save_weight:[1271,1272],scalar:[850,852,979,992,1041,1068,1072],scale:[905,947,948,1076,1084,1130,1211,1219,1222,1223,1228,1229,1259,1267,1270,1275,1278],scaled_dot_product_attent:1211,scatter:[979,1041,1049,1050],scatter_flat:[128,291,433,560,689,979],scatter_nd:[128,291,433,560,689,979],scene:[1076,1079,1081,1083,1084,1085],schemat:1242,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,837,839,905,936,979,987,999,1007,1045,1053,1063,1076,1078,1079,1083,1126,1128,1130,1275,1276,1277],secondli:1288,sector:[837,838],see:[43,59,390,431,432,483,837,839,850,852,860,861,862,864,883,889,905,917,918,919,920,955,979,982,1032,1033,1076,1110,1118,1236,1240,1242,1250,1252,1253,1255,1256,1258],seed:[40,41,174,483,792,1186],seed_valu:[40,41,483,1186,1191],seem:1242,seen_set:[979,1020],select:[979,986,1058,1285,1288],self:[40,41,43,59,390,431,432,864,883,889,905,917,918,919,920,955,1076,1130,1236,1240,1242,1250,1252,1253,1255,1256,1258,1275,1279,1284,1288],self_i:[864,883],sent:1130,seper:[43,979,1012],seq:[40,41,42,1193,1194,1271,1272],sequenc:[15,16,17,40,41,42,43,483,903,904,905,914,915,924,925,926,927,928,929,930,931,934,935,949,955,959,979,982,986,988,990,995,996,1022,1034,1037,1042,1046,1047,1050,1057,1061,1064,1069,1074,1076,1080,1092,1096,1097,1099,1102,1130,1174,1185,1186,1188,1190,1193,1195,1196,1197,1198,1199,1200,1201,1211,1212,1213,1214,1215,1216,1217,1218,1228,1229,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1271,1272,1273,1274,1275,1279,1281,1282],sequenti:1242,seri:43,set:[15,18,19,40,41,905,934,935,947,948,949,979,981,1002,1022,1051,1052,1053,1054,1076,1079,1081,1082,1083,1084,1085,1099,1102,1130,1174,1175,1182,1184,1185,1186,1187,1191,1193,1195,1196,1197,1198,1199,1200,1201,1240,1242,1259,1268,1275,1276,1277,1278,1279,1280,1285,1288],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1240,set_debug_mod:44,set_default_devic:905,set_default_dtyp:955,set_default_float_dtyp:955,set_default_int_dtyp:955,set_default_nod:1130,set_exception_debug_mod:44,set_framework:[40,41,43,59,1130,1242,1284,1285,1288],set_ivy_backend:[40,41],set_min_bas:979,set_min_denomin:979,set_nest_at_index:1174,set_nest_at_indic:1174,set_param:1236,set_queue_timeout:979,set_split_factor:[905,1130],set_stat:[1275,1276,1277,1278,1279,1280],set_tmp_dir:979,set_with_grad:1076,setter:1130,sever:1288,sgd:[1242,1275],shape0:1130,shape:[40,41,43,387,388,389,433,446,461,483,689,830,831,832,837,840,853,854,905,917,955,959,979,980,990,995,996,1009,1010,1011,1013,1015,1019,1022,1041,1042,1043,1046,1047,1048,1049,1050,1056,1058,1061,1074,1075,1092,1096,1099,1101,1104,1110,1114,1115,1130,1186,1188,1189,1190,1193,1194,1211,1213,1215,1217,1236,1240,1259,1261,1262,1263,1264,1265,1266,1273,1274],shape_slic:[40,41],shape_to_tupl:979,share:[40,41,1242,1285],shift:1130,should:[40,41,42,43,483,837,838,839,843,848,850,852,864,883,889,903,904,905,979,990,991,997,1041,1047,1076,1079,1081,1083,1084,1085,1110,1118,1130,1193,1194,1242],show:[40,41,1236,1242,1288],show_debug_info:1236,show_graph:[1230,1242,1271,1272,1275,1279],show_mod_in_top_mod:[1271,1272],show_structur:[1271,1272],show_sub_contain:[40,41],show_v:[1271,1272],show_v_in_top_v:[1271,1272],shown:[40,41],shp:1130,shuffl:[40,41,174,483,792,1186],shuffle_h5_fil:[40,41],sigmoid:[808,1203,1242,1284],signatur:[43,59,390,431,432,433,467,472,476,480,481,483,905,917,918,919,920,955,1076,1236,1240,1250,1252,1253,1255,1256,1258],signific:1288,similar:[43,1211,1222,1259,1270],similarli:[1099,1104],simpl:[43,979,1008,1242,1285,1288],simpler:43,simplest:1285,simpli:[40,41,43,1242,1285,1288],simultan:1242,sin:[777,979,1012,1110,1124,1285],sinco:1285,sine:[837,838,1110,1113,1122,1123],singl:[40,41,903,904,905,914,915,934,935,936,937,979,1058,1068,1072,1092,1097,1130,1186,1189,1190,1193,1195,1196,1197,1198,1199,1200,1201,1242,1285,1288],singleton:[850,852,860,861,862],singular:[1099,1105],sinh:[777,1110],siren:[1242,1250],size:[40,41,42,433,460,905,928,929,930,931,947,948,949,979,982,990,1032,1033,1049,1057,1092,1096,1099,1102,1105,1130,1186,1187,1189,1190,1193,1195,1196,1197,1198,1199,1200,1201,1259,1260,1261],size_ordered_arrai:[40,41],skew:[1099,1106],skinv:1288,skip:[40,41],slice:[40,41,857,858,979,1014,1015,1130,1174,1181],slice_kei:[40,41],slice_obj:[40,41,1130],slice_via_kei:[40,41],slide:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],slope:[1203,1205],small:[1224,1225,1226,1227,1228,1229,1242,1273,1274,1285],smaller:[979,992],smallest:[40,41,833,834,835,837,840,979,985],smallest_norm:[390,833,834],softmax:[190,494,808,1203,1211,1222,1223],softplu:[808,1203],solv:1288,some:[40,41,43,979,982,1076,1078,1079,1081,1083,1084,1085,1090,1211,1219,1242,1259,1267,1285,1288],some_backend:43,some_namespac:43,someth:[43,1288],something_cool:43,somewher:[40,41],soon:43,sort:[40,41,42,858,1099,1105,1130],sort_by_kei:[40,41],sorting_funct:[857,858],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,390,392,393,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,484,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1240,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1286,1287,1288],space:[979,982,1012,1032,1033],spars:[1224,1227],sparse_cross_entropi:1224,spawn:[979,1039],special:[837,838],specif:[40,41,43,905,947,979,997,1004,1005,1006,1039,1126,1127,1128,1129,1130,1186,1192,1242,1271,1272,1284,1285],specifc:[1186,1187],specifi:[40,41,43,850,851,852,853,854,860,861,862,905,924,925,926,927,928,929,930,931,934,935,939,941,945,948,949,950,955,959,961,979,982,984,985,986,992,995,996,1013,1014,1015,1021,1032,1033,1061,1071,1074,1099,1102,1130,1174,1179,1180,1184,1185,1193,1194,1195,1196,1197,1198,1199,1200,1201],split:[40,41,128,291,433,560,689,905,914,928,929,930,931,947,948,949,979,1034,1130],split_arg:1130,split_factor:[905,914,1130],split_func_cal:[905,1130],split_siz:1130,spread:[905,937,1130],sqrt:[85,214,395,516,644,837,850,852],squar:[837,848,979,1022,1099,1101],squeez:[128,291,433,560,689,979],stabil:[857,858,979,1059,1060],stabl:[857,858,979,1017,1018,1051,1052,1059,1060],stable_divid:979,stable_pow:979,stack:[40,41,291,689,979,1092,1097,1174,1175,1182,1259,1268],stack_imag:[164,345,472,603,762,1092],stacked_dim_s:1130,stage:43,standard:[40,41,833,834,1186,1189,1193,1199,1228,1229,1242,1243,1273,1274],start:[40,41,43,431,432,433,434,456,457,483,905,920,979,982,1032,1033,1130,1242,1285],starting_index:[40,41],starting_split_factor:[905,1130],state:[1130,1211,1221,1230,1231,1232,1236,1242,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],statement:1285,static_argnam:[433,439,903,904],static_argnum:[433,439,903,904],std:[483,1186,1189],step:[40,41,433,434,905,979,982,1032,1033,1076,1078,1079,1081,1083,1084,1085,1126,1127,1128,1129,1130,1242,1275,1276,1277,1278,1279,1280,1284,1288],stephen:1242,stick:1242,still:[40,41,43],stochast:[1275,1280],stop:[40,41,431,432,433,434,456,457,905,920,949,979,982,1032,1033,1076,1079,1081,1083,1084,1085,1087,1126,1127,1128,1129,1130,1275,1276,1277,1278,1279,1280],stop_gradi:[40,41,340,467,598,756,905,949,1076,1079,1081,1083,1084,1085,1126,1127,1128,1129,1130,1275,1276,1277,1278,1279,1280],stopiter:1130,store:[40,41,979,1012,1057,1076,1090,1271,1272],store_var:[1271,1272],str:[15,16,17,40,41,42,43,387,388,389,390,392,393,833,834,835,903,904,905,914,915,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,949,955,960,961,966,967,968,969,970,971,978,979,986,1002,1004,1005,1006,1037,1039,1042,1049,1050,1099,1102,1104,1126,1127,1128,1129,1130,1174,1178,1193,1194,1248,1249,1259,1270,1271,1272],str_to_nod:1130,straight:1285,strength:[1242,1288],stride:[1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],string:[40,41,43,905,921,923,932,933,938,944,950,951,954,955,959,965,967,968,969,978,979,982,986,1002,1022,1042,1043,1075,1130,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272],structur:[40,41,42,43,979,997],structural_diff:[40,41],sub:[40,41,905,928,929,934,935,936,937,979,1057,1126,1127,1128,1129,1130],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1130,sub_mod:[1271,1272],sub_modul:[1281,1282],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1242,1243,1273,1274,1281,1282],subsequ:43,subset:43,substr:[40,41],suffici:[1099,1104],suggest:1242,suitabl:[1092,1097],sum:[40,41,433,460,461,850,852,905,934,935,936,937,949,979,1001,1005,1049,1050,1130,1193,1194,1200],summat:[40,41,1193,1194],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,356,357,360,361,362,363,365,366,367,368,369,370,371,372,375,377,378,379,380,381,382,383,388,389,391,392,393,396,397,398,399,400,401,402,403,404,405,406,409,410,412,416,419,420,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,473,474,475,477,478,479,482,484,486,487,488,489,490,491,492,495,496,498,499,500,501,502,503,504,509,510,512,513,514,517,518,519,520,521,522,523,524,525,526,527,530,531,533,537,540,541,549,554,555,556,557,558,559,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,600,601,602,604,605,606,608,609,610,611,615,616,617,618,620,621,622,623,624,625,626,630,631,632,637,638,640,641,642,645,646,647,648,649,650,651,652,653,654,655,658,659,661,665,668,669,677,682,683,684,685,686,687,688,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,757,758,759,760,761,763,764,765,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,800,801,802,803,804,805,806,809,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,831,832,834,835,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1229,1231,1232,1234,1235,1237,1241,1242,1246,1247,1249,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1287,1288],supports_inplac:979,suppos:1288,sure:43,svd:[349,607,766,1099],swap:[40,41,979,1063],swapax:[40,41,560,689,979,1288],symmetr:[1099,1106],syntax:[431,433,467,472,476,480,481,483],tab:1242,take:[43,979,1031],taken:[1193,1195,1196,1197,1199,1201],tan:[777,1110,1114],tangent:[1110,1114,1115,1116,1124,1125,1203,1210],tanh:[777,808,1110,1203],target:[40,41,905,921,924,925,926,927,928,929,930,931,934,935,936,937,950,1130,1242],target_dict:[40,41],task:[43,1126,1127,1128,1129],team:[43,1288],templat:1242,temporari:[979,1054,1065],tensor:[40,41,43,433,460,461,857,858,905,923,955,965,979,982,984,985,990,1032,1033,1036,1038,1041,1042,1043,1047,1049,1050,1057,1075,1130,1186,1187,1188,1211,1219,1221,1242,1259,1267,1269,1275,1276,1277,1278,1279,1280,1284,1285],tensorflow:[43,1099,1104,1211,1213,1215,1217,1242,1259,1261,1263,1265,1285,1288],term:[40,41,1211,1221,1242,1259,1269],termcolor:[40,41,42],termin:[40,41,42,1130],test:[43,837,843,860,861,862,955,970,971],test_array_api:43,tf_concat:1242,than:[40,41,833,834,837,840,850,852,853,854,905,949,979,982,992,1010,1029,1036,1058,1061,1076,1082,1130,1186,1190,1242,1285],thei:[40,41,43,1110,1115,1126,1127,1128,1186,1187,1242,1281,1282,1285],them:[1242,1288],themselv:[1174,1175],therefor:43,thi:[40,41,42,43,905,927,931,937,944,949,954,979,982,1012,1045,1047,1053,1076,1079,1081,1082,1083,1084,1085,1090,1099,1102,1130,1174,1178,1183,1193,1195,1196,1197,1198,1199,1200,1201,1211,1220,1242,1271,1272,1275,1276,1277,1278,1279,1280,1284,1285,1288],thing:[43,1242],those:[40,41,43,979,992,1076,1090,1099,1105,1130],though:43,threshold:[979,1036,1038],through:[40,41],tickbox:43,tile:[291,560,689,979],time:[979,1064,1076,1079,1083,1126,1127,1128,1129,1130,1186,1187,1211,1221,1259,1270,1271,1272,1288],time_chronolog:[1230,1231,1236],time_infer:[1230,1231],timeout:[40,41,42,905,914,915,979,1045,1053,1130],timestep:[1211,1221,1259,1268],timing_fnam:[1230,1231],titl:1242,tmp_dir:979,tmp_dr:[979,1054],to_appli:[40,41],to_clon:[905,1130],to_dev:[40,41,121,285,431,553,681,905],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[905,1130],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1242],to_ivy_modul:[192,816,1242,1248],to_json:[40,41],to_kv_fn:[1211,1222],to_kv_v:[1211,1222],to_list:[40,41,433,689,979],to_multi_dev:[40,41],to_mut:[1174,1176,1183],to_n:[15,40,41,1242],to_nod:1130,to_numpi:[40,41,433,689,979,1242,1284],to_out_fn:[1211,1222],to_out_v:[1211,1222],to_q_fn:[1211,1222],to_q_v:[1211,1222],to_raw:[40,41],to_scalar:[433,689,979],todo:[43,1130],togeth:[40,41,1281,1282],tool:[1242,1285],top_mod:[1271,1272],topic:1288,torch:[43,903,904,1242,1284,1285,1288],torch_concat:1242,torchfcmodel:1284,total:[40,41,42,905,951,1130],total_mem_on_dev:905,total_mem_on_nod:1130,tpu:[905,952,1130],tpu_is_avail:[431,553,681,905,1130],tpye:[955,966],trace:[40,41,979,1029],track:[43,905,1130,1174,1183,1271,1272],track_submod_call_ord:[1271,1272],track_submod_ret:[1271,1272],trail:[1273,1274],train:[1076,1078,1079,1083,1242,1243],trainabl:[1076,1082,1242,1243,1248,1249,1271,1272,1281],trainer:1242,tran:1288,transform:[1211,1219,1220],transpos:[40,41,128,291,433,689,905,936,979,1130,1211,1213,1215,1217,1259,1261,1263,1265],travers:[15,18,19,40,41,1174,1183],treat:[40,41,903,904],tree_depth:1240,tree_height:1236,tri:[40,41],trigonometr:[837,841,1110,1111,1114,1122],trim_kei:[40,41],trust:[1076,1083,1275,1277],truth:[837,845,847,864,883,979,1007,1107,1108,1109],try_else_non:979,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[905,1130],tune_dev_alloc:905,tune_dev_split:905,tune_node_alloc:1130,tune_node_split:1130,tune_step:[905,1130],tupl:[15,16,17,18,19,40,41,43,387,388,389,830,831,832,850,852,853,854,860,861,862,903,904,979,996,1012,1013,1056,1074,1130,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1188,1193,1195,1196,1197,1198,1199,1200,1201],tutori:43,two:[40,41,979,982,987,999,1035,1063,1099,1102,1105],type:[15,18,40,41,42,43,59,392,393,431,432,830,831,832,834,835,837,838,839,840,843,845,848,850,852,853,854,860,861,862,864,883,889,905,917,918,919,920,932,933,937,949,955,959,960,961,965,966,967,968,969,970,971,978,979,980,982,986,995,997,1007,1010,1011,1013,1022,1029,1041,1042,1043,1048,1062,1072,1075,1076,1082,1087,1110,1118,1130,1236,1240,1242,1250,1252,1253,1255,1256,1258,1271,1272,1285],types_to_iteratively_nest:[40,41,42],uint8:[1092,1094,1098],uint8_img_to_float_img:1092,unchang:[15,16,17,18,19],uncom:43,underli:[837,839],underwai:43,unif:1130,unifi:[40,41,905,934,935,936,937,949,1130,1242],uniform:[40,41,1186,1187,1189,1190,1250,1252,1253,1256,1257],uniformli:[1186,1188,1190],unify_arrai:1130,unify_it:1130,unify_nest:1130,union:[15,18,19,40,41,43,387,388,389,390,392,393,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,850,852,853,854,857,858,860,861,862,864,883,889,903,904,905,923,928,929,930,931,949,950,955,959,960,961,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,998,999,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1019,1021,1022,1023,1030,1031,1032,1033,1035,1036,1037,1038,1041,1042,1043,1046,1047,1048,1049,1050,1055,1056,1057,1058,1061,1063,1064,1066,1067,1068,1069,1071,1072,1073,1074,1075,1130,1174,1175,1176,1182,1183],uniqu:[905,914,915,1126,1127,1128,1129,1130,1174,1178],unique_kwarg:1130,unit:[43,905,1110,1111,1113,1130,1203,1204,1205,1206],unitari:[1099,1105],unless:[979,1041,1043,1075],unlik:[905,1130],unnorm:[1186,1187],unpack:[979,1071],unrol:[1211,1221],unset:1285,unset_debug_mod:44,unset_default_devic:905,unset_default_dtyp:955,unset_default_float_dtyp:955,unset_default_int_dtyp:955,unset_framework:[59,1285],unset_with_grad:1076,unstack:[40,41,128,291,433,560,689,979],until:43,unus:[903,904],updat:[40,41,433,460,461,905,914,979,1027,1049,1050,1076,1078,1079,1081,1083,1084,1085,1126,1127,1128,1130,1174,1179,1180,1184,1185,1211,1221,1242,1243,1248,1249,1275,1276,1277,1278,1279,1280,1285,1288],update_backend:[40,41],update_config:[40,41],update_inference_tim:1236,upper:[40,41,1186,1190],upper_depth:[1271,1272],upstream:43,usabl:[1242,1288],usag:[905,949,1130],use:[40,41,42,43,483,905,914,915,940,952,979,1046,1059,1060,1099,1104,1130,1211,1222,1228,1229,1242,1273,1274,1285,1288],used:[40,41,43,483,905,914,944,947,948,954,955,966,979,1017,1018,1034,1043,1049,1050,1051,1052,1075,1076,1083,1084,1099,1102,1126,1127,1128,1129,1130,1174,1183,1259,1270,1275,1277,1278,1284,1285],used_dev:[905,914],used_mem_on_dev:905,used_mem_on_nod:1130,used_node_str:1130,used_node_strs_dict:1130,useful:[40,41,905,949,1130,1211,1220,1242,1285],user:[1242,1259,1270,1271,1272,1285,1288],uses:1242,using:[40,41,1076,1078,1079,1174,1177,1181,1193,1194,1211,1219,1223,1242,1259,1267,1284,1285,1288],util:[905,938,1130],utility_funct:[860,861,862],v_with_top_v_key_chain:[1271,1272],val:[40,41,433,451,452,453,864,899,979,1025,1026,1027,1051,1052,1240],valid:[860,861,862,955,960,979,1059,1060,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],valid_dtyp:955,valu:[40,41,433,837,844,845,847,850,852,857,858,864,883,905,917,948,949,979,980,982,984,985,992,993,994,996,997,1003,1007,1012,1013,1014,1015,1030,1032,1033,1036,1038,1045,1046,1047,1048,1049,1050,1051,1052,1053,1069,1072,1073,1074,1076,1080,1083,1092,1098,1099,1105,1107,1108,1109,1110,1119,1120,1121,1126,1127,1128,1130,1174,1178,1179,1180,1184,1185,1186,1189,1190,1193,1195,1197,1211,1222,1223,1228,1229,1236,1259,1270,1273,1274,1275,1277],value_is_nan:979,vanilla:[1126,1128],var_shap:1250,variabl:[15,16,17,18,19,40,41,340,467,598,756,979,989,1025,1026,1027,1028,1029,1062,1076,1079,1080,1081,1082,1083,1084,1085,1087,1090,1126,1127,1128,1129,1211,1222,1228,1229,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],variable_data:[467,756,1076],varianc:[40,41,1193,1201,1288],varieti:1285,variou:[43,1242],vector:[40,41,476,479,850,852,979,994,999,1099,1105,1106,1211,1220,1259,1269],vector_norm:[40,41,98,223,408,529,657,850],vector_to_skew_symmetric_matrix:[168,349,476,607,766,1099],verbos:1287,veri:[43,1242],verifi:43,version:43,via:[1174,1175,1182,1285],view:[1092,1097],vision:1242,visual:1285,volum:[1211,1216],vw_tm1:[1076,1079,1083],wai:[1285,1288],wait:[40,41,42,43],want:[1242,1285,1288],warn:[59,66,67,68,69,70],warp:[472,473,1092,1093],watch:1284,weight:[1076,1078,1079,1081,1083,1084,1085,1211,1220,1221,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1275,1277,1278],weight_initi:[1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],weights_path:[1271,1272],well:[40,41,979,1021],were:[40,41,1130],what:[43,1242],when:[40,41,42,43,905,979,991,1060,1073,1099,1105,1130,1242,1271,1272,1285,1288],where:[40,41,43,291,433,689,837,844,860,861,862,864,889,979,982,990,992,996,1009,1023,1030,1041,1074,1099,1105,1174,1175,1182,1186,1187],wherea:43,wherebi:[1174,1183],whether:[15,18,19,40,41,42,860,861,862,903,904,905,923,936,940,944,949,952,954,955,965,969,970,971,978,979,981,987,988,1000,1003,1008,1012,1019,1021,1024,1028,1029,1034,1055,1062,1071,1072,1076,1079,1080,1081,1082,1083,1084,1085,1087,1126,1127,1128,1129,1130,1174,1175,1176,1178,1182,1183,1186,1187,1203,1204,1211,1219,1242,1248,1249,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],which:[40,41,42,43,483,830,831,832,833,834,835,850,851,852,853,854,860,861,862,903,904,905,914,915,923,928,929,930,931,934,935,936,937,939,941,945,947,948,949,955,960,965,969,978,979,982,986,995,997,999,1000,1001,1003,1013,1014,1015,1016,1022,1023,1031,1032,1033,1040,1041,1042,1043,1044,1046,1049,1050,1057,1061,1071,1073,1075,1076,1079,1080,1081,1083,1084,1085,1087,1089,1090,1092,1094,1099,1102,1110,1115,1130,1174,1178,1179,1180,1184,1185,1186,1187,1188,1189,1190,1193,1195,1196,1197,1198,1199,1200,1201,1203,1208,1211,1222,1223,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1284,1285],whitespac:[40,41,42],whose:[43,837,838,853,854,864,889,979,986,991,1193,1194,1195,1196,1197,1199,1201],why:[1242,1243],width:[1092,1097],wiki:1288,wikipedia:1288,window:[1092,1097,1211,1212,1213,1214,1215,1216,1217,1218,1259,1260,1261,1262,1263,1264,1265,1266],wise:[40,41,43,837,839,840,841,845,847,864,883,889,979,992,1007,1010,1011,1036,1038,1048,1076,1079,1081,1083,1085,1107,1108,1109,1110,1111,1113,1114,1115,1118,1119,1120,1121,1122,1124,1203,1204,1205,1206,1207,1208,1209,1210],wish:1285,with_arg_label:[1230,1232,1236,1271,1272],with_array_cach:[1230,1231,1232,1236],with_bia:[1259,1269],with_cal:[979,1003],with_default_key_color:[40,41],with_edge_label:[1230,1232,1236,1271,1272],with_entries_as_list:[40,41],with_grad:[1076,1086,1271,1272],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1130,with_output_label:[1230,1232,1236,1271,1272],with_partial_v:[1271,1272],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,433,462,979,1057,1130],with_to_kv_fn:[1259,1270],with_to_out_fn:[1259,1270],with_to_q_fn:[1259,1270],within:[15,18,19,979,982,1099,1105,1186,1190],without:[40,41,43,979,1045,1047,1053,1174,1176,1285],wonder:1242,word:[15,16,17,979,982,1186,1190,1248,1249],work:[43,1284],worker:[905,914,915,1130],worker_class:[905,914,915,1130],worker_kwarg:1130,would:[43,857,858,1203,1208,1242,1285,1288],wrap:[15,40,41,42,43,431,433,467,472,476,480,481,483,979,991,1076,1090,1242],wrapper:43,write:[40,41,43,1242,1243,1288],written:[43,1242,1288],ws_new:[1076,1079,1081,1083,1084,1085],x1_i:[837,839,845,979,1007,1110,1118],x2_i:[837,839,845,979,1007,1110,1118],x_feat_dim:[1211,1222],x_i:[837,838,843,848],x_in:[1242,1284],x_inv:[1099,1101],x_max:[433,979,992],x_min:[433,979,992],x_sub:1130,xkk:1288,xkkm1:1288,xkm1km1:1288,xs0:1130,xs_t:1130,year:[1242,1288],yet:[1174,1183,1288],yield:[979,1073],you:[43,1242,1284,1285,1288],your:[1242,1243,1284,1285,1288],your_awesome_project:1285,yourself:[43,1242],yourslef:43,youtub:43,zero:[40,41,77,206,387,508,636,830,850,852,860,861,862,979,996,1041,1043,1049,1050,1074,1075,1076,1078,1079,1083,1084,1211,1219,1242,1250,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1275,1276,1277,1278],zero_pad:[291,433,560,689,979],zeros_lik:[128,291,433,560,689,979],zip:1130,zk_e:1288},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1003,"function":[77,80,85,97,101,103,104,105,107,108,206,209,214,222,226,228,229,230,232,233,387,390,395,407,411,413,414,415,417,418,508,511,516,528,532,534,535,536,538,539,636,639,644,656,660,662,663,664,666,667,830,833,837,849,853,855,856,857,859,860],Ones:1255,Using:1285,abs:[292,561,690,980],aco:[778,1111],acosh:[779,1112],activ:[190,374,494,628,808,1203,1245],adam:1276,adam_step:1078,adam_upd:1079,algebra:[98,168,223,349,408,476,529,607,657,766,850],all:[109,234,419,540,668,861],all_equ:981,all_nested_indic:1175,ani:[110,235,420,541,669,862],api:[0,43,75,112,204,237,385,422,506,543,634,671,828],arang:[129,293,434,562,691,982],arg_nam:983,argmax:[130,435,563,692,984],argmin:[131,436,564,693,985],args_to_ivi:16,args_to_n:17,argsort:[106,231,416,537,665,858],arithmet:[1,113,238,423,544,672],arrai:[0,3,43,75,111,112,114,132,204,236,237,239,246,294,385,421,422,424,437,506,542,543,545,565,634,670,671,673,694,828,864,986],array_equ:[295,695,987],arrays_equ:988,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[780,1113],asinh:[86,396,517,645,838],assert_supports_inplac:989,atan2:[782,1115],atan:[781,1114],atanh:[783,1116],attribut:[5,115,240,425,546,674],backend:[43,73],bilinear_resampl:[165,346,473,604,763,1093],binary_cross_entropi:1225,bitwis:[7,116,241,426,547,675],bitwise_and:[87,215,397,518,646,839],broadcast_to:[296,696,990],builder:51,builtin:[111,236,246,421,542,670,864],builtin_ab:[247,865],builtin_add:[248,866],builtin_and:[249,867],builtin_bool:[250,868],builtin_contain:[251,869],builtin_deepcopi:[252,870],builtin_dir:[253,871],builtin_eq:[254,872],builtin_float:[255,873],builtin_floordiv:[256,874],builtin_g:[257,875],builtin_getattr:[258,876],builtin_getattribut:[259,877],builtin_getitem:[260,878],builtin_gt:[261,879],builtin_int:[262,880],builtin_invert:[263,881],builtin_l:[264,882],builtin_lt:[265,549,677,883],builtin_mul:[266,884],builtin_n:[267,885],builtin_neg:[268,886],builtin_or:[269,887],builtin_po:[270,888],builtin_pow:[271,889],builtin_radd:[272,890],builtin_rand:[273,891],builtin_rfloordiv:[274,892],builtin_rmul:[275,893],builtin_ror:[276,894],builtin_rpow:[277,895],builtin_rsub:[278,896],builtin_rtruediv:[279,897],builtin_rxor:[280,898],builtin_setitem:[281,899],builtin_sub:[282,900],builtin_truediv:[283,901],builtin_xor:[284,902],cache_fn:991,cast:[133,297,438,566,697,959],ceil:[88,216,398,519,647,840],choleski:[767,1100],choose_random_framework:61,citat:1242,clear_framework_stack:62,clear_mem_on_dev:[683,921],clip:[298,698,992],clip_matrix_norm:993,clip_vector_norm:994,clone:1145,clone_arrai:1146,clone_it:1147,clone_nest:1148,clonedit:1132,cloneditem:1131,clonednest:1133,closest_valid_dtyp:960,code:1288,comparison:[9,117,242,427,548,676],compil:[299,439,699,903,904,1230],compile_graph:1231,concaten:[134,300,440,567,700,995],constant:[76,205,386,507,635,829],constant_pad:[301,568,701,996],contain:[40,41],container_typ:[702,997],content:1242,contribut:43,conv1d:[196,377,498,820,1212,1260],conv1d_transpos:[197,378,499,821,1213],conv1dtranspos:1261,conv2d:[198,379,500,630,822,1214,1262],conv2d_transpos:[199,380,501,823,1215],conv2dtranspos:1263,conv3d:[200,381,502,631,824,1216,1264],conv3d_transpos:[201,382,503,825,1217],conv3dtranspos:1265,convers:15,convert:[192,816,1248],convert_dtyp:961,copy_arrai:[703,998],copy_nest:1176,core:[120,245,430,552,680,863],cos:[89,399,520,648,841],cosh:[90,400,521,649,784,842,1117],cprint:1287,creat:43,creation:[77,206,387,508,636,830],cross:[302,704,999],cross_entropi:1226,cumprod:[135,303,441,705,1000],cumsum:[706,1001],current_framework:63,current_framework_str:[707,1002],data:[80,84,209,213,390,394,511,515,639,643,833,836],debug_mod:45,debugg:44,default_devic:922,default_dtyp:962,default_float_dtyp:963,default_int_dtyp:964,default_nod:1149,depthwise_conv2d:[202,383,504,632,826,1218],depthwiseconv2d:1266,design:43,dev:[123,287,555,684,923],dev_clon:924,dev_clone_arrai:925,dev_clone_it:926,dev_clone_nest:927,dev_dist:928,dev_dist_arrai:929,dev_dist_it:930,dev_dist_nest:931,dev_from_str:[124,288,556,685,932],dev_to_str:[125,289,557,686,933],dev_unifi:934,dev_unify_arrai:935,dev_unify_it:936,dev_unify_nest:937,dev_util:938,devclonedit:908,devcloneditem:907,devclonednest:909,devdistit:911,devdistitem:910,devdistnest:912,devic:[20,121,285,431,553,681,905],devmapp:914,devmappermultiproc:915,diagon:[99,224,409,530,658,851],distribute_nest:1150,divid:1118,document:1242,dropout:[1219,1267],dtype:[136,304,442,569,708,955,965],dtype_bit:[137,305,443,570,709,966],dtype_from_str:[138,306,444,571,710,967],dtype_to_str:[139,307,445,572,711,968],ecosystem:52,einops_rearrang:1004,einops_reduc:1005,einops_repeat:1006,einsum:[182,365,486,620,800,1194],elementwis:[85,214,395,516,644,837],equal:[573,712,1007],erf:[482,785,1119],execute_with_gradi:[162,341,468,599,757,1080],exist:1008,exp:[786,1120],expand_dim:[308,713,1009],finfo:[82,211,392,513,641,834],firstlayersiren:1252,flip:[102,227,412,533,661,854],float_img_to_uint8_img:1094,floor:[309,714,1010],floormod:[310,715,1011],fomaml_step:1127,fork:43,fourier_encod:1012,framework:59,full:[140,311,446,574,716,1013],func:72,gather:[141,312,447,575,717,1014],gather_nd:[142,313,448,576,718,1015],geglu:1246,gelu:[375,495,809,1204,1247],gener:[22,128,291,433,560,689,979],get_all_arrays_in_memori:1016,get_all_arrays_on_dev:939,get_framework:64,get_min_bas:1017,get_min_denomin:1018,get_num_dim:[719,1019],get_referrers_recurs:1020,global:1233,glorotuniform:1253,gpu_is_avail:[940,1151],gradient:[24,161,340,467,598,756,1076],gradient_descent_upd:1081,gradient_imag:[166,347,474,605,764,1095],graph:1236,gym:53,handler:59,has_nan:1021,helper:1238,ident:[143,314,449,577,720,1022],iinfo:[83,212,393,514,642,835],imag:[26,164,345,472,603,762,1092],index_nest:1177,indices_wher:[144,315,450,721,1023],initi:1250,inplac:[11,118,243,428,550,678],inplace_arrays_support:1024,inplace_decr:[145,316,451,578,722,1025],inplace_incr:[146,317,452,579,723,1026],inplace_upd:[147,318,453,580,724,1027],inplace_variables_support:1028,inv:[768,1101],invalid_dtyp:969,is_arrai:[148,319,454,581,725,1029],is_float_dtyp:970,is_int_dtyp:971,is_vari:[163,342,469,600,758,1082],isfinit:[91,217,401,522,650,843],isinf:[320,582,726,1030],isnan:[92,218,402,523,651,844],ivi:[43,50,51,52,53,54,55,56,57,58,827,1284,1285,1288],ivymodul:[193,817],jax:74,keep:43,lamb:1277,lamb_upd:1083,lar:1278,lars_upd:1084,layer:[195,376,497,629,819,1211,1259],layer_norm:1229,layernorm:1274,leaky_relu:[810,1205],less:[93,219,403,524,652,845],linalg:[28,1099],linear:[98,168,223,349,408,476,529,607,657,766,850,1220,1269],linear_resampl:[149,321,455,583,727,1031],linspac:[150,322,456,584,728,1032],log2:[94,404,525,653,846],log:[787,1121,1239],log_global_inference_abs_tim:1234,log_global_inference_rel_tim:1235,logic:[30,172,355,480,612,774,1107],logical_and:[356,775,1108],logical_not:[95,220,405,526,654,847],logical_or:[357,776,1109],logspac:[151,323,457,585,729,1033],loss:1224,lstm:1268,lstm_updat:1221,maml_step:1128,manipul:[101,226,411,532,660,853],map:1178,map_nest_at_index:1179,map_nest_at_indic:1180,match_kwarg:1034,math:[32,173,358,481,613,777,1110],matmul:[324,586,730,1035],matrix_norm:[169,350,477,608,769,1102],maximum:[731,1036],mech:54,memori:55,meshgrid:[325,732,1037],meta:[34,1126],method:[97,222,407,528,656,849],minimum:[733,1038],model:56,modul:[1271,1272,1284],multi:1130,multi_head_attent:1222,multi_index_nest:1181,multidevcontain:42,multidevit:918,multidevitem:917,multidevnest:919,multiheadattent:1270,multinodeit:1136,multinodeitem:1135,multinodenest:1137,multinomi:[175,360,484,615,793,1187],multiprocess:[734,1039],mxnet:203,nativ:1284,nest:1174,nested_indices_wher:1182,nested_map:1183,network:1284,next:1242,node:[1130,1152],node_dist:1153,node_dist_arrai:1154,node_dist_it:1155,node_str:1156,node_to_str:1157,node_util:1158,nodedistit:1139,nodedistitem:1138,nodedistnest:1140,nodemapp:1142,nodemappermultiproc:1143,norm:[1228,1273],num_arrays_in_memori:1040,num_arrays_on_dev:941,num_cpu_cor:942,num_gpu:[126,943,1159],numpi:384,nutshel:1242,one_hot:[152,458,587,735,1041],ones:[78,207,388,509,637,831,1042],ones_lik:[153,326,459,588,736,1043],oper:[1,3,7,9,11,13,43,113,114,116,117,118,119,238,239,241,242,243,244,423,424,426,427,428,429,544,545,547,548,550,551,672,673,675,676,678,679],optim:[1275,1279],optimizer_upd:1085,overview:1242,param:1240,percent_used_mem_on_dev:944,percent_used_mem_on_nod:1160,pinv:[351,770,1103],portabl:1288,print_all_arrays_in_memori:1044,print_all_arrays_on_dev:945,profil:[122,286,432,554,682,920,1144],pull:43,queue_timeout:1045,randint:[176,361,616,794,1188],random:[36,174,359,483,614,792,1186],random_crop:1096,random_norm:[177,362,617,795,1189],random_uniform:[178,363,618,796,1190],reduce_max:[183,366,487,621,801,1195],reduce_mean:[184,367,488,622,802,1196],reduce_min:[185,368,489,623,803,1197],reduce_prod:[186,369,490,624,804,1198],reduce_std:[370,1199],reduce_sum:[187,371,491,625,805,1200],reduce_var:[188,372,492,626,806,1201],reduct:[38,181,364,485,619,799,1193],reflect:[13,119,244,429,551,679],relu:[811,1206],repeat:[327,737,1046],reptile_step:1129,request:43,reshap:[738,1047],robot:57,round:[328,739,1048],run:1285,scaled_dot_product_attent:1223,scatter_flat:[154,329,460,589,740,1049],scatter_nd:[155,330,461,590,741,1050],search:[103,228,413,534,662,855],seed:[179,797,1191],sequenti:[1281,1282],set:[104,229,414,535,663,856],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:946,set_default_dtyp:972,set_default_float_dtyp:973,set_default_int_dtyp:974,set_default_nod:1161,set_exception_debug_mod:48,set_framework:65,set_min_bas:1051,set_min_denomin:1052,set_nest_at_index:1184,set_nest_at_indic:1185,set_queue_timeout:1053,set_split_factor:[947,1162],set_tmp_dir:1054,set_with_grad:1086,sgd:1280,shape:[742,1055],shape_to_tupl:1056,show_graph:1232,shuffl:[180,798,1192],sigmoid:[812,1207],signatur:[97,222,407,528,656,849],sin:[788,1122],sinh:[789,1123],siren:1256,softmax:[191,496,813,1208],softplu:[814,1209],sort:[105,230,415,536,664,857],sparse_cross_entropi:1227,split:[156,331,462,591,743,1057],split_factor:[948,1163],split_func_cal:[949,1164],sqrt:[96,221,406,527,655,848],squeez:[157,332,463,592,744,1058],stable_divid:1059,stable_pow:1060,stack:[333,745,1061],stack_imag:[167,348,475,606,765,1097],standard:43,statist:[107,232,417,538,666,859],stop_gradi:[343,470,601,759,1087],str_to_nod:1165,submodul:43,supports_inplac:1062,svd:[353,610,772,1105],swapax:[593,746,1063],tan:[790,1124],tanh:[791,815,1125,1210],tensorflow:505,tile:[334,594,747,1064],tmp_dir:1065,to_dev:[127,290,558,687,950],to_ivi:18,to_ivy_modul:[194,818,1249],to_list:[748,1066],to_n:19,to_nod:1166,to_numpi:[749,1067],to_scalar:[750,1068],torch:633,total_mem_on_dev:951,total_mem_on_nod:1167,tpu_is_avail:[559,688,952,1168],train:1284,trainabl:1284,transpos:[158,335,464,751,1069],tree:1242,try_else_non:1070,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,209,213,390,394,511,515,639,643,833,836],uint8_img_to_float_img:1098,unifi:1169,unify_arrai:1170,unify_it:1171,unify_nest:1172,unset_debug_mod:49,unset_default_devic:953,unset_default_dtyp:975,unset_default_float_dtyp:976,unset_default_int_dtyp:977,unset_framework:71,unset_with_grad:1088,unstack:[159,336,465,595,752,1071],updat:43,used_mem_on_dev:954,used_mem_on_nod:1173,util:[108,233,418,539,667,860],valid_dtyp:978,value_is_nan:1072,variabl:[344,471,602,760,1089],variable_data:[761,1090],vector_norm:[100,225,410,531,659,852],vector_to_skew_symmetric_matrix:[171,354,479,611,773,1106],verbos:1286,vision:58,where:[337,753,1073,1242],why:1288,with_grad:1091,wrapper:72,write:1285,your:43,zero:[79,208,389,510,638,832,1258],zero_pad:[338,596,754,1074],zeros_lik:[160,339,466,597,755,1075]}})