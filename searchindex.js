Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[853,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[396,0,0,"-"],creation_functions:[397,0,0,"-"],data_type_functions:[401,0,0,"-"],data_types:[405,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[398,2,1,""],tril:[399,2,1,""],zeros:[400,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[401,1,1,""],finfo:[403,2,1,""],iinfo:[404,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[401,3,1,""],bits:[401,3,1,""],eps:[401,3,1,""],max:[401,3,1,""],min:[401,3,1,""],smallest_normal:[401,3,1,""]},"ivy.functional.backends.numpy.core":{device:[449,0,0,"-"],general:[451,0,0,"-"],gradients:[484,0,0,"-"],image:[489,0,0,"-"],linear_algebra:[493,0,0,"-"],logic:[497,0,0,"-"],math:[498,0,0,"-"],random:[500,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[450,1,1,""],clear_mem_on_dev:[449,2,1,""],dev:[449,2,1,""],dev_from_str:[449,2,1,""],dev_to_str:[449,2,1,""],gpu_is_available:[449,2,1,""],num_gpus:[449,2,1,""],to_dev:[449,2,1,""],tpu_is_available:[449,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[450,3,1,""],start:[450,3,1,""],stop:[450,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[451,2,1,""],arange:[452,2,1,""],argmin:[453,2,1,""],array:[454,2,1,""],asarray:[451,2,1,""],astype:[451,2,1,""],cast:[455,2,1,""],clip:[451,2,1,""],compile:[456,2,1,""],concatenate:[457,2,1,""],constant_pad:[451,2,1,""],container_types:[451,2,1,""],copy_array:[451,2,1,""],cumprod:[458,2,1,""],current_framework_str:[451,2,1,""],dtype:[459,2,1,""],dtype_bits:[460,2,1,""],dtype_from_str:[461,2,1,""],dtype_to_str:[462,2,1,""],floor:[451,2,1,""],floormod:[451,2,1,""],full:[463,2,1,""],gather:[464,2,1,""],gather_nd:[465,2,1,""],get_num_dims:[451,2,1,""],identity:[466,2,1,""],indices_where:[467,2,1,""],inplace_arrays_supported:[451,2,1,""],inplace_decrement:[468,2,1,""],inplace_increment:[469,2,1,""],inplace_update:[470,2,1,""],inplace_variables_supported:[451,2,1,""],is_array:[471,2,1,""],linear_resample:[472,2,1,""],linspace:[473,2,1,""],logspace:[474,2,1,""],matmul:[451,2,1,""],meshgrid:[451,2,1,""],multiprocessing:[451,2,1,""],one_hot:[475,2,1,""],ones_like:[476,2,1,""],round:[451,2,1,""],scatter_flat:[477,2,1,""],scatter_nd:[478,2,1,""],shape:[451,2,1,""],split:[479,2,1,""],squeeze:[480,2,1,""],to_list:[451,2,1,""],to_numpy:[451,2,1,""],to_scalar:[451,2,1,""],transpose:[481,2,1,""],unstack:[482,2,1,""],where:[451,2,1,""],zero_pad:[451,2,1,""],zeros_like:[483,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[485,2,1,""],is_variable:[486,2,1,""],stop_gradient:[487,2,1,""],variable:[488,2,1,""],variable_data:[484,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[490,2,1,""],gradient_image:[491,2,1,""],stack_images:[492,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[494,2,1,""],qr:[495,2,1,""],vector_to_skew_symmetric_matrix:[496,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[499,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[501,2,1,""],randint:[500,2,1,""],random_normal:[500,2,1,""],random_uniform:[500,2,1,""],seed:[500,2,1,""],shuffle:[500,2,1,""]},"ivy.functional.ivy":{array_api:[854,0,0,"-"],core:[896,0,0,"-"],nn:[1232,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[855,0,0,"-"],creation_functions:[856,0,0,"-"],data_type_functions:[860,0,0,"-"],data_types:[863,0,0,"-"],elementwise_functions:[864,0,0,"-"],function_and_method_signatures:[879,0,0,"-"],linear_algebra:[880,0,0,"-"],manipulation_functions:[884,0,0,"-"],searching_functions:[886,0,0,"-"],set_functions:[888,0,0,"-"],sorting_functions:[889,0,0,"-"],statistical_functions:[891,0,0,"-"],utility_functions:[893,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[855,4,1,""],nan:[855,4,1,""],pi:[855,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[857,2,1,""],tril:[858,2,1,""],zeros:[859,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[861,2,1,""],iinfo:[862,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[865,2,1,""],bitwise_and:[866,2,1,""],ceil:[867,2,1,""],cos:[868,2,1,""],cosh:[869,2,1,""],isfinite:[870,2,1,""],isnan:[871,2,1,""],less:[872,2,1,""],less_equal:[873,2,1,""],log1p:[874,2,1,""],log2:[875,2,1,""],logical_not:[876,2,1,""],sin:[877,2,1,""],sqrt:[878,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[881,2,1,""],svd:[882,2,1,""],vector_norm:[883,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[885,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[887,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[890,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[892,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[894,2,1,""],any:[895,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[897,0,0,"-"],compilation:[936,0,0,"-"],device:[938,0,0,"-"],dtype:[988,0,0,"-"],general:[1012,0,0,"-"],gradients:[1108,0,0,"-"],image:[1124,0,0,"-"],linalg:[1131,0,0,"-"],logic:[1138,0,0,"-"],math:[1141,0,0,"-"],meta:[1156,0,0,"-"],multi_node:[1160,0,0,"-"],nest:[1204,0,0,"-"],random:[1216,0,0,"-"],reductions:[1223,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[898,2,1,""],builtin_add:[899,2,1,""],builtin_and:[900,2,1,""],builtin_bool:[901,2,1,""],builtin_contains:[902,2,1,""],builtin_deepcopy:[903,2,1,""],builtin_dir:[904,2,1,""],builtin_eq:[905,2,1,""],builtin_float:[906,2,1,""],builtin_floordiv:[907,2,1,""],builtin_ge:[908,2,1,""],builtin_getattr:[909,2,1,""],builtin_getattribute:[910,2,1,""],builtin_getitem:[911,2,1,""],builtin_gt:[912,2,1,""],builtin_int:[913,2,1,""],builtin_invert:[914,2,1,""],builtin_le:[915,2,1,""],builtin_lt:[916,2,1,""],builtin_mul:[917,2,1,""],builtin_ne:[918,2,1,""],builtin_neg:[919,2,1,""],builtin_or:[920,2,1,""],builtin_pos:[921,2,1,""],builtin_pow:[922,2,1,""],builtin_radd:[923,2,1,""],builtin_rand:[924,2,1,""],builtin_rfloordiv:[925,2,1,""],builtin_rmul:[926,2,1,""],builtin_ror:[927,2,1,""],builtin_rpow:[928,2,1,""],builtin_rsub:[929,2,1,""],builtin_rtruediv:[930,2,1,""],builtin_rxor:[931,2,1,""],builtin_setitem:[932,2,1,""],builtin_sub:[933,2,1,""],builtin_truediv:[934,2,1,""],builtin_xor:[935,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[937,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[938,1,1,""],DevClonedItem:[940,1,1,""],DevClonedIter:[941,1,1,""],DevClonedNest:[942,1,1,""],DevDistItem:[943,1,1,""],DevDistIter:[944,1,1,""],DevDistNest:[945,1,1,""],DevManager:[938,1,1,""],DevMapper:[947,1,1,""],DevMapperMultiProc:[948,1,1,""],MultiDev:[938,1,1,""],MultiDevItem:[950,1,1,""],MultiDevIter:[951,1,1,""],MultiDevNest:[952,1,1,""],Profiler:[953,1,1,""],clear_mem_on_dev:[954,2,1,""],default_device:[955,2,1,""],dev:[956,2,1,""],dev_clone:[957,2,1,""],dev_clone_array:[958,2,1,""],dev_clone_iter:[959,2,1,""],dev_clone_nest:[960,2,1,""],dev_dist:[961,2,1,""],dev_dist_array:[962,2,1,""],dev_dist_iter:[963,2,1,""],dev_dist_nest:[964,2,1,""],dev_from_str:[965,2,1,""],dev_to_str:[966,2,1,""],dev_unify:[967,2,1,""],dev_unify_array:[968,2,1,""],dev_unify_iter:[969,2,1,""],dev_unify_nest:[970,2,1,""],dev_util:[971,2,1,""],get_all_arrays_on_dev:[972,2,1,""],gpu_is_available:[973,2,1,""],num_arrays_on_dev:[974,2,1,""],num_cpu_cores:[975,2,1,""],num_gpus:[976,2,1,""],percent_used_mem_on_dev:[977,2,1,""],print_all_arrays_on_dev:[978,2,1,""],set_default_device:[979,2,1,""],set_split_factor:[980,2,1,""],split_factor:[981,2,1,""],split_func_call:[982,2,1,""],to_dev:[983,2,1,""],total_mem_on_dev:[984,2,1,""],tpu_is_available:[985,2,1,""],unset_default_device:[986,2,1,""],used_mem_on_dev:[987,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[938,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[938,3,1,""],da_tune_step:[938,3,1,""],dim_size:[938,3,1,""],ds_tune_step:[938,3,1,""],map:[938,3,1,""],repeated_config_check:[938,3,1,""],tune_step:[938,3,1,""],tuned:[938,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[947,3,1,""],map:[947,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[948,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[938,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[950,3,1,""],items:[950,3,1,""],keys:[950,3,1,""],shape:[950,3,1,""],values:[950,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[951,3,1,""],at_dev:[951,3,1,""],at_devs:[951,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[952,3,1,""],at_dev:[952,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[953,3,1,""],start:[953,3,1,""],stop:[953,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[988,1,1,""],DefaultFloatDtype:[988,1,1,""],DefaultIntDtype:[988,1,1,""],astype:[988,2,1,""],cast:[992,2,1,""],closest_valid_dtype:[993,2,1,""],convert_dtype:[994,2,1,""],default_dtype:[995,2,1,""],default_float_dtype:[996,2,1,""],default_int_dtype:[997,2,1,""],dtype:[998,2,1,""],dtype_bits:[999,2,1,""],dtype_from_str:[1000,2,1,""],dtype_to_str:[1001,2,1,""],invalid_dtype:[1002,2,1,""],is_float_dtype:[1003,2,1,""],is_int_dtype:[1004,2,1,""],set_default_dtype:[1005,2,1,""],set_default_float_dtype:[1006,2,1,""],set_default_int_dtype:[1007,2,1,""],unset_default_dtype:[1008,2,1,""],unset_default_float_dtype:[1009,2,1,""],unset_default_int_dtype:[1010,2,1,""],valid_dtype:[1011,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[988,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[988,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[988,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1035,2,1,""],abs:[1013,2,1,""],all_equal:[1014,2,1,""],arange:[1015,2,1,""],arg_names:[1016,2,1,""],argmin:[1017,2,1,""],array:[1018,2,1,""],array_equal:[1019,2,1,""],arrays_equal:[1020,2,1,""],asarray:[1012,2,1,""],assert_supports_inplace:[1021,2,1,""],broadcast_to:[1022,2,1,""],cache_fn:[1023,2,1,""],clip:[1024,2,1,""],clip_matrix_norm:[1025,2,1,""],clip_vector_norm:[1026,2,1,""],concatenate:[1027,2,1,""],constant_pad:[1028,2,1,""],container_types:[1029,2,1,""],copy_array:[1030,2,1,""],cross:[1031,2,1,""],cumprod:[1032,2,1,""],cumsum:[1033,2,1,""],current_framework_str:[1034,2,1,""],einops_rearrange:[1036,2,1,""],einops_reduce:[1037,2,1,""],einops_repeat:[1038,2,1,""],equal:[1039,2,1,""],exists:[1040,2,1,""],expand_dims:[1041,2,1,""],floor:[1042,2,1,""],floormod:[1043,2,1,""],fourier_encode:[1044,2,1,""],full:[1045,2,1,""],gather:[1046,2,1,""],gather_nd:[1047,2,1,""],get_all_arrays_in_memory:[1048,2,1,""],get_min_base:[1049,2,1,""],get_min_denominator:[1050,2,1,""],get_num_dims:[1051,2,1,""],get_referrers_recursive:[1052,2,1,""],has_nans:[1053,2,1,""],identity:[1054,2,1,""],indices_where:[1055,2,1,""],inplace_arrays_supported:[1056,2,1,""],inplace_decrement:[1057,2,1,""],inplace_increment:[1058,2,1,""],inplace_update:[1059,2,1,""],inplace_variables_supported:[1060,2,1,""],is_array:[1061,2,1,""],isinf:[1062,2,1,""],linear_resample:[1063,2,1,""],linspace:[1064,2,1,""],logspace:[1065,2,1,""],match_kwargs:[1066,2,1,""],matmul:[1067,2,1,""],maximum:[1068,2,1,""],meshgrid:[1069,2,1,""],minimum:[1070,2,1,""],multiprocessing:[1071,2,1,""],num_arrays_in_memory:[1072,2,1,""],one_hot:[1073,2,1,""],ones:[1074,2,1,""],ones_like:[1075,2,1,""],print_all_arrays_in_memory:[1076,2,1,""],queue_timeout:[1077,2,1,""],repeat:[1078,2,1,""],reshape:[1079,2,1,""],round:[1080,2,1,""],scatter_flat:[1081,2,1,""],scatter_nd:[1082,2,1,""],set_min_base:[1083,2,1,""],set_min_denominator:[1084,2,1,""],set_queue_timeout:[1085,2,1,""],set_tmp_dir:[1086,2,1,""],shape:[1087,2,1,""],shape_to_tuple:[1088,2,1,""],split:[1089,2,1,""],squeeze:[1090,2,1,""],stable_divide:[1091,2,1,""],stable_pow:[1092,2,1,""],stack:[1093,2,1,""],supports_inplace:[1094,2,1,""],swapaxes:[1095,2,1,""],tile:[1096,2,1,""],tmp_dir:[1097,2,1,""],to_list:[1098,2,1,""],to_numpy:[1099,2,1,""],to_scalar:[1100,2,1,""],transpose:[1101,2,1,""],try_else_none:[1102,2,1,""],unstack:[1103,2,1,""],value_is_nan:[1104,2,1,""],where:[1105,2,1,""],zero_pad:[1106,2,1,""],zeros_like:[1107,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1108,1,1,""],adam_step:[1110,2,1,""],adam_update:[1111,2,1,""],execute_with_gradients:[1112,2,1,""],gradient_descent_update:[1113,2,1,""],is_variable:[1114,2,1,""],lamb_update:[1115,2,1,""],lars_update:[1116,2,1,""],optimizer_update:[1117,2,1,""],set_with_grads:[1118,2,1,""],stop_gradient:[1119,2,1,""],unset_with_grads:[1120,2,1,""],variable:[1121,2,1,""],variable_data:[1122,2,1,""],with_grads:[1123,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1108,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1125,2,1,""],float_img_to_uint8_img:[1126,2,1,""],gradient_image:[1127,2,1,""],random_crop:[1128,2,1,""],stack_images:[1129,2,1,""],uint8_img_to_float_img:[1130,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1132,2,1,""],inv:[1133,2,1,""],matrix_norm:[1134,2,1,""],pinv:[1135,2,1,""],qr:[1136,2,1,""],vector_to_skew_symmetric_matrix:[1137,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1139,2,1,""],logical_or:[1140,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1142,2,1,""],acosh:[1143,2,1,""],asin:[1144,2,1,""],atan2:[1146,2,1,""],atan:[1145,2,1,""],atanh:[1147,2,1,""],cosh:[1148,2,1,""],divide:[1149,2,1,""],erf:[1150,2,1,""],exp:[1151,2,1,""],log:[1152,2,1,""],sinh:[1153,2,1,""],tan:[1154,2,1,""],tanh:[1155,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1157,2,1,""],maml_step:[1158,2,1,""],reptile_step:[1159,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1160,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1205,2,1,""],copy_nest:[1206,2,1,""],index_nest:[1207,2,1,""],map:[1208,2,1,""],map_nest_at_index:[1209,2,1,""],map_nest_at_indices:[1210,2,1,""],multi_index_nest:[1211,2,1,""],nested_indices_where:[1212,2,1,""],nested_map:[1213,2,1,""],set_nest_at_index:[1214,2,1,""],set_nest_at_indices:[1215,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1217,2,1,""],randint:[1218,2,1,""],random_normal:[1219,2,1,""],random_uniform:[1220,2,1,""],seed:[1221,2,1,""],shuffle:[1222,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1224,2,1,""],reduce_max:[1225,2,1,""],reduce_mean:[1226,2,1,""],reduce_min:[1227,2,1,""],reduce_prod:[1228,2,1,""],reduce_std:[1229,2,1,""],reduce_sum:[1230,2,1,""],reduce_var:[1231,2,1,""]},"ivy.functional.ivy.nn":{activations:[1233,0,0,"-"],layers:[1241,0,0,"-"],losses:[1254,0,0,"-"],norms:[1258,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1234,2,1,""],leaky_relu:[1235,2,1,""],relu:[1236,2,1,""],sigmoid:[1237,2,1,""],softmax:[1238,2,1,""],softplus:[1239,2,1,""],tanh:[1240,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1242,2,1,""],conv1d_transpose:[1243,2,1,""],conv2d:[1244,2,1,""],conv2d_transpose:[1245,2,1,""],conv3d:[1246,2,1,""],conv3d_transpose:[1247,2,1,""],depthwise_conv2d:[1248,2,1,""],dropout:[1249,2,1,""],linear:[1250,2,1,""],lstm_update:[1251,2,1,""],multi_head_attention:[1252,2,1,""],scaled_dot_product_attention:[1253,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1255,2,1,""],cross_entropy:[1256,2,1,""],sparse_cross_entropy:[1257,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1259,2,1,""]},"ivy.stateful":{activations:[1263,0,0,"-"],converters:[1266,0,0,"-"],initializers:[1268,0,0,"-"],layers:[1277,0,0,"-"],module:[1289,0,0,"-"],norms:[1291,0,0,"-"],optimizers:[1293,0,0,"-"],sequential:[1299,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1264,1,1,""],GELU:[1265,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1264,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1265,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1267,2,1,""]},"ivy.stateful.initializers":{Constant:[1268,1,1,""],FirstLayerSiren:[1270,1,1,""],GlorotUniform:[1271,1,1,""],KaimingNormal:[1268,1,1,""],Ones:[1273,1,1,""],Siren:[1274,1,1,""],Uniform:[1268,1,1,""],Zeros:[1276,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1268,3,1,""],create_variables:[1268,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1270,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1271,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1268,3,1,""],create_variables:[1268,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1273,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1274,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1268,3,1,""],create_variables:[1268,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1276,3,1,""]},"ivy.stateful.layers":{Conv1D:[1278,1,1,""],Conv1DTranspose:[1279,1,1,""],Conv2D:[1280,1,1,""],Conv2DTranspose:[1281,1,1,""],Conv3D:[1282,1,1,""],Conv3DTranspose:[1283,1,1,""],DepthwiseConv2D:[1284,1,1,""],Dropout:[1285,1,1,""],LSTM:[1286,1,1,""],Linear:[1287,1,1,""],MultiHeadAttention:[1288,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1281,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1282,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1283,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1284,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1285,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1286,3,1,""],get_initial_state:[1286,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1287,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1288,3,1,""]},"ivy.stateful.module":{Module:[1290,1,1,""]},"ivy.stateful.module.Module":{__init__:[1290,3,1,""],build:[1290,3,1,""],build_mode:[1290,3,1,""],built:[1290,3,1,""],check_submod_rets:[1290,3,1,""],get_mod_key:[1290,3,1,""],mod_depth:[1290,3,1,""],mod_height:[1290,3,1,""],mod_with_top_mod_key_chain:[1290,3,1,""],save_weights:[1290,3,1,""],show_mod_in_top_mod:[1290,3,1,""],show_structure:[1290,3,1,""],show_v_in_top_v:[1290,3,1,""],sub_mods:[1290,3,1,""],track_submod_call_order:[1290,3,1,""],track_submod_rets:[1290,3,1,""],v_with_top_v_key_chains:[1290,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1292,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1292,3,1,""]},"ivy.stateful.optimizers":{Adam:[1294,1,1,""],LAMB:[1295,1,1,""],LARS:[1296,1,1,""],Optimizer:[1297,1,1,""],SGD:[1298,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],state:[1294,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1295,3,1,""],set_state:[1295,3,1,""],state:[1295,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1296,3,1,""],set_state:[1296,3,1,""],state:[1296,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1297,3,1,""],set_state:[1297,3,1,""],step:[1297,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1298,3,1,""],set_state:[1298,3,1,""],state:[1298,3,1,""]},"ivy.stateful.sequential":{Sequential:[1300,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1300,3,1,""]},"ivy.verbosity":{cprint:[1305,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1304,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1293,1294,1295],"02886":1260,"100":[1160,1260,1302],"141592653589793":855,"2021":1260,"2102":1260,"360":[1141,1154],"718281828459045":855,"754":[855,860,861,864,878],"999":[1108,1110,1111,1115,1293,1294,1295],"abstract":[938,953,1260,1293,1297],"boolean":[40,41,864,866,876,897,915,938,973,985,988,1002,1011,1012,1014,1019,1020,1053,1055,1056,1060,1061,1062,1094,1104,1108,1114,1138,1139,1140,1156,1157,1158,1160],"break":43,"case":[15,18,19,40,41,42,43,864,865,867,868,869,875,877,878,938,977,984,987,1012,1015,1079,1081,1082,1131,1134,1136,1160,1204,1207,1211,1260,1277,1288,1289,1290,1293,1297,1306],"catch":[1012,1035],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,401,449,450,860,862,938,940,941,942,943,944,945,947,948,950,951,952,953,965,966,988,1012,1016,1066,1108,1122,1160,1204,1206,1213,1254,1256,1257,1260,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1306],"default":[15,18,19,40,41,42,43,856,857,858,859,880,881,883,884,885,886,887,889,890,891,892,893,894,895,936,937,938,947,948,955,956,960,961,962,963,964,967,968,969,970,977,980,981,982,987,988,995,996,997,998,1012,1014,1015,1017,1025,1026,1027,1028,1031,1032,1033,1044,1045,1046,1051,1053,1054,1063,1065,1066,1069,1071,1074,1077,1078,1081,1082,1085,1087,1089,1091,1092,1101,1103,1104,1108,1111,1113,1114,1115,1116,1117,1119,1123,1131,1134,1136,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1216,1217,1219,1220,1223,1225,1226,1227,1228,1229,1230,1231,1233,1234,1238,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300],"final":[40,41,43,1012,1044,1064,1065,1160,1277,1288,1303],"float":[40,41,42,43,855,856,857,859,860,861,864,865,867,868,869,875,877,878,880,883,897,915,916,922,938,947,948,971,977,980,984,987,988,996,1003,1012,1015,1025,1026,1028,1044,1045,1049,1050,1065,1083,1084,1085,1091,1092,1108,1110,1111,1113,1115,1116,1117,1124,1126,1130,1141,1149,1156,1157,1158,1159,1160,1216,1219,1220,1233,1235,1241,1249,1252,1253,1254,1255,1256,1257,1258,1259,1277,1285,1288,1291,1292,1293,1294,1295,1296,1297,1298],"function":[15,40,41,43,398,399,400,403,404,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,855,857,858,859,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,885,887,890,892,894,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,942,943,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263,1264,1265,1293,1296,1297,1298,1302,1303,1306],"import":[43,1260,1303,1306],"int":[40,41,42,43,397,398,399,400,500,856,857,858,859,860,861,862,880,881,883,884,885,886,887,889,890,891,892,893,894,895,897,915,916,922,936,937,938,960,961,962,963,964,967,968,969,970,975,976,982,988,997,999,1004,1012,1017,1022,1027,1028,1032,1033,1036,1037,1038,1041,1044,1045,1046,1051,1054,1063,1064,1065,1073,1074,1078,1079,1081,1082,1087,1088,1089,1090,1093,1095,1096,1101,1103,1106,1108,1110,1111,1115,1124,1128,1129,1131,1134,1156,1157,1158,1159,1160,1204,1213,1216,1217,1218,1220,1221,1223,1225,1226,1227,1228,1229,1230,1231,1233,1238,1241,1242,1243,1244,1245,1246,1247,1248,1252,1254,1256,1257,1258,1259,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1291,1292],"long":[43,1241,1251],"new":[40,41,43,500,856,857,859,864,874,988,992,1012,1013,1022,1036,1037,1038,1041,1044,1045,1046,1047,1074,1079,1081,1082,1083,1084,1091,1092,1093,1108,1111,1113,1115,1116,1117,1124,1126,1128,1130,1141,1143,1147,1148,1153,1155,1160,1204,1214,1215,1216,1217,1258,1259,1260,1266,1267,1277,1287,1291,1292,1293,1294,1295,1296,1297,1298,1303,1306],"public":[1012,1029],"return":[15,16,17,18,19,40,41,42,43,500,856,857,858,859,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,881,882,883,886,887,889,890,891,892,893,894,895,897,915,916,922,936,937,938,947,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,973,974,976,977,981,982,983,984,985,987,988,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1078,1079,1080,1081,1082,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1266,1267,1277,1286,1287,1293,1297,1302,1303,1306],"short":[43,1241,1251,1260,1306],"static":[40,41,936,937],"super":1160,"true":[40,41,42,451,456,484,487,500,501,864,870,871,876,880,882,883,886,887,889,890,893,894,895,936,937,938,1012,1014,1021,1023,1040,1044,1053,1055,1104,1105,1108,1111,1113,1114,1115,1116,1117,1119,1131,1134,1156,1157,1158,1159,1160,1204,1205,1212,1216,1217,1223,1225,1226,1227,1228,1229,1230,1231,1233,1234,1241,1249,1254,1255,1256,1257,1277,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],"try":[40,41,1012,1102,1160],"var":[40,41,1156,1157,1158,1306],"while":[40,41,42,864,876,1160],AND:[864,866,893,894,1138,1139],But:1306,For:[43,864,865,867,868,869,875,877,878,1012,1015,1024,1093,1108,1114,1122,1131,1136,1141,1142,1260,1266,1267,1303,1306],Its:[1141,1145],NOT:[864,876],Not:855,One:[40,41,43,1012,1037,1079,1216,1218,1306],Ones:[1260,1268],PRs:43,Such:[1012,1029],That:1303,The:[15,16,17,18,19,40,41,42,43,856,858,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,881,882,883,884,885,889,890,893,894,895,897,915,916,922,936,937,938,947,948,954,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,977,980,981,982,983,984,987,988,992,993,994,999,1000,1001,1002,1011,1012,1015,1018,1019,1022,1023,1025,1026,1027,1028,1030,1031,1034,1035,1039,1044,1046,1047,1054,1057,1058,1059,1061,1063,1065,1067,1069,1071,1074,1075,1078,1079,1081,1082,1083,1084,1085,1088,1089,1090,1091,1092,1093,1096,1104,1107,1108,1110,1111,1113,1115,1116,1117,1119,1122,1124,1126,1128,1130,1131,1134,1136,1141,1142,1144,1145,1149,1150,1151,1152,1154,1156,1157,1158,1159,1160,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1303,1306],There:[43,1260,1303],These:[43,1260],Use:43,Used:[1204,1205,1212,1289,1290],Using:[1260,1261,1306],With:[40,41,886,887,1131,1134,1223,1225,1226,1227,1228,1229,1230,1231,1260,1302,1306],__array__:[1012,1018],__call__:[1277,1288,1289,1290],__del__:1160,__dict__:[1160,1303],__enter__:1160,__exit__:1160,__getitem__:1160,__getstate__:1160,__init__:[40,41,42,43,59,60,82,218,401,402,449,450,530,663,938,939,946,947,948,949,950,951,952,953,988,989,990,991,1108,1109,1160,1164,1171,1260,1263,1264,1265,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1306],__iter__:1160,__len__:1160,__next__:1160,__pow__:43,__repr__:1160,_assign_vari:1302,_axi:1160,_base:[1204,1205,1212],_compute_node_da_ratio:1160,_compute_node_strs_da:1160,_concat_unify_arrai:1160,_counter:1160,_cur_framework:[43,1160],_da_direct:1160,_da_directions_flip:1160,_da_step_tim:1160,_da_tim:1160,_da_tune_count:1160,_data:1160,_delta_da_dim_s:1160,_delta_sf:1160,_dict:1160,_dim_siz:1160,_first_da_tune_step:1160,_first_ns_tune_step:1160,_fn:1160,_forward:[1260,1302],_get_kalman_param:1306,_get_prior:1306,_get_some_model:1306,_handle_flat_arrays_in_out:43,_index:[1204,1205,1212],_input_queu:1160,_length:1160,_max_depth:1160,_max_node_dim_step_ratio:1160,_max_node_dim_step_s:1160,_max_split_factor_step_s:1160,_mean_unify_arrai:1160,_min_bas:[1012,1092,1258,1259,1291,1292],_min_denomin:[1012,1091],_min_node_dim_s:1160,_min_sf_tune_step:1160,_min_unit_node_tune_step:1160,_model:1306,_native_wrapp:43,_node_mapp:1160,_node_percent_mem:1160,_node_str:1160,_node_str_da_ratio:1160,_node_strs_da:1160,_node_strs_kei:1160,_node_strs_n:1160,_node_util:1160,_ns_step_tim:1160,_ns_time:1160,_ns_tune_count:1160,_num_nod:1160,_num_work:1160,_observed_config:1160,_output_queu:1160,_paramet:1302,_percent_mem_inc_per_sf:1160,_percent_mem_inc_per_unit_da_dim:1160,_percent_util_inc_per_unit_da_dim:1160,_ret_fn:1160,_safety_factor:1160,_save_dir:1160,_shift_da_split:1160,_shift_n:1160,_slice:1160,_step:[1293,1297],_sum_unify_arrai:1160,_timeout:1160,_tune:1160,_tune_da:1160,_tune_n:1160,_tune_step:1160,_unit_da_tune_count:1160,_unroll_step:1306,_with_node_mappig:1160,_worker:1160,_worker_class:1160,_worker_fn:1160,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,938,947,953,1160,1289,1290,1293,1297],abil:1260,abl:[40,41],about:[860,861,862],abov:[43,856,858,880,881,1216,1218],above_height:[40,41],abs:[302,451,585,719,880,883,1012,1160],absolut:[40,41,1012,1013],abstractmethod:1160,accept:[15,43,864,876,1260],access:[40,41,43,1303],accord:[40,41,860,861,1012,1028,1046,1081,1082,1101,1106],accordingli:[880,883,893,894,895],accur:[59,401,449,450,938,950,951,952,953,988,1108,1268,1270,1271,1273,1274,1276],aco:[804,1141],acosh:[804,1141],across:[40,41,938,947,948,957,958,960,961,962,963,964,970,980,981,1012,1017,1019,1020,1160,1204,1208],act:43,activ:[1234,1235,1236,1237,1238,1239,1240,1260,1264,1265],actual:1303,adam:[1108,1110,1111,1115,1260,1293,1295,1302],adam_step:1108,adam_upd:1108,adapt:[1108,1116,1293,1296],add:[40,41,43,1160,1254,1255,1256,1257,1258,1259,1260,1291,1292,1303],added:[43,1012,1091,1092,1299,1300],adding:[43,1012,1022],addit:[40,41,43,1012,1036,1037,1038,1258,1259,1277,1287],addition:43,address:43,adher:43,adjac:[1012,1015],adopt:[43,1012,1029],affect:[1012,1015],affin:[1291,1292],after:[864,878,1012,1063,1108,1111,1112,1113,1115,1116,1117,1124,1125,1258,1259,1293,1294,1295,1296,1297,1298,1306],after_1:[1012,1028,1106],after_n:[1012,1028,1106],again:43,against:[40,41,886,887,1131,1134,1223,1225,1226,1227,1228,1229,1230,1231],agnost:[43,1260,1302,1303],aim:1306,algebra:1131,algorithm:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284,1306],align:[40,41,43,1012,1022],aliv:[938,972,974,978,1012,1048,1072,1076],all:[15,16,17,18,19,40,41,43,116,244,436,564,697,856,858,880,883,884,885,893,936,937,938,947,972,978,1012,1013,1014,1019,1020,1029,1048,1054,1076,1090,1131,1136,1156,1157,1158,1159,1160,1204,1205,1206,1212,1213,1216,1217,1220,1223,1225,1226,1227,1228,1229,1230,1231,1241,1251,1260,1303,1306],all_depth:[40,41],all_equ:1012,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1204,all_tru:[40,41],alloc:[43,856,858,938,1160],allow:[1012,1064,1065,1066,1289,1290],allow_dupl:[1012,1066],alon:[938,977,987,1160,1260],along:[40,41,43,500,880,883,884,885,886,887,889,890,891,892,893,894,895,938,961,962,963,964,967,968,969,970,982,1012,1027,1032,1033,1046,1063,1064,1065,1078,1089,1093,1096,1103,1131,1134,1156,1157,1158,1159,1160,1216,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],alongsid:[1302,1303],alpha:[1233,1235],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,864,867,938,1160],also:[40,41,43,1012,1015,1108,1111,1156,1157,1158,1159,1204,1205,1206,1212,1213,1241,1250,1260,1277,1287,1302],altern:1302,alwai:[40,41,43,1108,1114,1119],among:[40,41],amount:[938,984,1160,1260],angl:[864,869,1141,1142,1146],ani:[15,16,17,18,19,40,41,43,116,244,436,564,697,864,873,893,936,937,938,940,943,947,948,950,959,960,963,964,969,1012,1014,1015,1018,1035,1036,1037,1038,1039,1040,1053,1061,1066,1091,1092,1108,1112,1160,1204,1205,1208,1212,1213,1214,1215,1216,1220,1260,1266,1267,1289,1290,1302,1303,1306],anoth:[40,41,43,988,994,1260],another_backend:43,anyth:[43,1306],anywai:43,apart:43,api:[1260,1261],appear:[43,1012,1041],append:[40,41,880,881,1160],appli:[15,18,19,40,41,880,882,1012,1036,1037,1038,1108,1115,1116,1138,1139,1140,1156,1157,1158,1204,1208,1211,1213,1233,1234,1235,1236,1237,1238,1239,1240,1241,1250,1252,1253,1258,1259,1260,1263,1264,1265,1291,1292],applic:[1204,1208,1213,1241,1252,1253,1260,1306],appropri:[886,887],approxim:[43,864,865,868,869,874,875,877,897,922,1233,1234],arang:[136,302,451,500,585,719,1012,1064,1065],arbitrari:[40,41,938,967,968,970,1160],arc:[1141,1146],arcco:[1141,1142],arctan:[1141,1145],area:[864,865,1260],arg:[15,16,17,40,41,43,59,63,938,947,960,964,970,982,1012,1036,1037,1038,1082,1160,1266,1267,1289,1290],arg_nam:1012,arg_stateful_idx:[1289,1290],argmax:[109,238,429,557,690,886],argmin:[136,451,585,719,1012],args_clon:1160,args_dist:1160,args_to_ivi:[15,1260],args_to_n:[15,1260],args_uni:1160,argsort:[112,241,432,560,693,889],argument:[15,16,17,18,19,40,41,42,43,59,63,936,937,938,947,948,960,964,970,1012,1015,1016,1023,1035,1066,1082,1141,1142,1160,1204,1208,1266,1267,1289,1290],aris:[1260,1306],arithmet:[43,1223,1226,1229,1231],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:500,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,136,302,451,500,585,719,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,889,890,891,892,893,894,895,915,916,922,938,956,957,958,961,962,963,964,967,968,969,970,972,974,978,982,983,988,992,998,1003,1004,1012,1013,1014,1015,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1030,1031,1032,1033,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1051,1053,1054,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1067,1068,1069,1070,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1087,1089,1090,1093,1094,1095,1096,1098,1099,1100,1101,1103,1104,1105,1106,1107,1108,1110,1111,1114,1115,1119,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1204,1206,1213,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1277,1285,1286,1288,1293,1297,1302,1303],arrang:[1012,1036],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,397,398,399,400,401,403,404,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,889,890,891,892,893,894,895],array_api_methods_to_test:43,array_builtin:[43,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935],array_equ:[302,719,1012],array_lik:[500,1012,1018],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1012],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1260],arraywithgener:[22,1260],arraywithgradi:[24,1260],arraywithimag:[26,1260],arraywithlinalg:[28,1260],arraywithlog:[30,1260],arraywithmath:[32,1260],arraywithmeta:[34,1260],arraywithrandom:[36,1260],arraywithreduct:[38,1260],arriv:[40,41,42],articl:1260,arxiv:1260,as_arrai:[40,41,1012,1051,1087],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[449,451,459,938,956,988,995,996,997,998],as_tensor:451,as_vari:[40,41],as_zero:[40,41],asarrai:[451,1012],ascend:[889,890],asin:[804,1141],asinh:[86,406,534,667,864],aspect:[1124,1129],assert:[40,41,1012,1021,1160],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1012,associ:[43,1131,1137],assum:[864,868,877,1303,1306],astyp:[451,988],asynchron:[40,41,42],at_dev:[40,42,938,951,952],at_kei:[40,41],at_key_chain:[40,41],at_nod:1160,atan2:[804,1141],atan:[804,1141],atanh:[804,1141],attent:[43,1241,1252,1253,1277,1288],attribut:[0,6,40,41,860,861,862,1012,1075,1107],audienc:[1260,1303],author:1260,automat:43,avail:[40,41,43,938,973,975,976,985,1012,1037,1160],averag:[1108,1110,1111,1115,1156,1157,1158,1223,1226],average_across_step:[1156,1157,1158],avoid:[43,938,1160,1303],axes:[40,41,43,451,481,493,494,880,883,884,885,886,887,891,892,893,894,895,938,982,1012,1017,1028,1041,1095,1101,1106,1131,1134,1160,1223,1225,1226,1227,1228,1229,1230,1231],axes_length:[40,41,1012,1036,1037,1038],axi:[40,41,451,453,457,458,464,472,473,474,479,480,482,880,881,883,884,885,886,887,889,890,891,892,893,894,895,938,940,943,950,961,962,963,964,967,968,969,970,982,1012,1017,1027,1028,1031,1032,1033,1041,1046,1063,1064,1065,1078,1089,1090,1093,1095,1096,1103,1106,1160,1216,1222,1223,1225,1226,1227,1228,1229,1230,1231,1233,1238,1254,1256,1257],axis0:[40,41,1012,1095],axis1:[40,41,880,881,1012,1095],axis2:[880,881],back:[43,1289,1290,1293,1297],backend:[15,17,19,40,41,397,398,399,400,401,403,404,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,499,500,501,938,973,976,985,988,994,1002,1011,1012,1056,1060,1108,1111,1113,1115,1116,1117,1122,1160,1260,1261,1266,1267,1293,1294,1295,1296,1297,1298,1302,1303,1306],backend_nam:43,background:[1260,1303],backprop:1306,backward:[893,894,895,1302],band:[1012,1044],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,401,449,450,451,474,864,874,875,897,922,938,940,941,942,943,944,945,947,948,950,951,952,953,988,1012,1049,1065,1083,1092,1108,1160,1223,1224,1260,1263,1264,1265,1268,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1306],basi:43,batch:[40,41,880,882,883,938,980,981,1012,1044,1054,1124,1128,1156,1157,1158,1159,1160,1241,1250,1258,1259,1291,1292],batch_shap:[451,466,1012,1054,1073,1124,1125,1126,1127,1128,1129,1130,1131,1137,1216,1217,1241,1251,1252,1253,1277,1286],batch_siz:[500,501,1160,1216,1217,1241,1242,1243,1244,1245,1246,1247,1248],bayesian:1306,becaus:[43,1012,1015],becom:[43,1012,1024,1141,1146,1306],been:[1012,1036,1037,1038,1216,1217],befor:[40,41,43,938,982,1156,1157,1158,1160,1204,1213,1223,1225,1226,1227,1228,1229,1230,1231,1241,1252,1253,1306],before_1:[1012,1028,1106],before_n:[1012,1028,1106],begin:[1204,1205,1212,1303],behaviour:[43,1306],behind:[1108,1111,1113,1115,1116,1117,1260],being:[40,41,43,1012,1015,1077,1085,1160],believ:43,belong:[40,41],below:[43,856,858,880,881,1260,1303,1306],below_depth:[40,41],benefit:1260,bernoul:[1241,1249,1277,1285],best:[43,1012,1066,1260],beta1:[1108,1110,1111,1115,1293,1294,1295],beta2:[1108,1110,1111,1115,1293,1294,1295],beta:[1258,1259],between:[40,41,42,860,861,1012,1015,1131,1136,1204,1208,1216,1218,1254,1256,1257,1293,1295],bia:[1241,1250,1251,1277,1278,1279,1280,1281,1282,1283,1284,1287],bias_initi:[1277,1278,1279,1280,1281,1282,1283,1284,1287],bilinear:[1124,1125],bilinear_resampl:[171,356,489,626,790,1124],bilinearli:[1124,1125],binari:[864,866,1254,1255],binary_cross_entropi:1254,bit:[401,860,861,862,988,999,1124,1126,1130,1260],bitwis:[864,866],bitwise_and:[86,222,406,534,667,864],bitwise_oper:[0,7,8],block:[1260,1303],bool:[15,18,19,40,41,42,43,864,870,871,872,873,876,880,882,883,886,887,889,890,891,892,893,894,895,897,916,936,937,938,956,969,973,977,982,985,987,988,998,1012,1014,1019,1020,1032,1035,1039,1040,1044,1051,1053,1061,1066,1087,1089,1103,1104,1105,1108,1111,1112,1113,1114,1115,1116,1117,1119,1131,1134,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1216,1217,1223,1225,1226,1227,1228,1229,1230,1231,1233,1234,1241,1249,1266,1267,1277,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],both:[43,1012,1031],bottom:1260,boundari:[40,41,1216,1220],branch:[43,936,937],brittl:43,broadcast:[40,41,43,864,866,872,873,880,883,886,887,893,894,895,897,915,916,922,1012,1022,1039,1068,1069,1070,1078,1131,1134,1141,1146,1149,1223,1225,1226,1227,1228,1229,1230,1231],broadcast_to:[302,719,1012],build:[1160,1260,1277,1288,1289,1290],build_mod:[1277,1288,1289,1290],builder:[43,1260],built:[938,1012,1015,1160,1277,1288,1289,1290],builtin:43,builtin_ab:[257,897],builtin_add:[257,897],builtin_and:[257,897],builtin_bool:[257,897],builtin_contain:[257,897],builtin_deepcopi:[257,897],builtin_dir:[257,897],builtin_eq:[257,897],builtin_float:[257,897],builtin_floordiv:[257,897],builtin_g:[257,897],builtin_getattr:[257,897],builtin_getattribut:[257,897],builtin_getitem:[257,897],builtin_gt:[257,897],builtin_int:[257,897],builtin_invert:[257,897],builtin_l:[257,897],builtin_lt:[257,573,706,897],builtin_mul:[257,897],builtin_n:[257,897],builtin_neg:[257,897],builtin_or:[257,897],builtin_po:[257,897],builtin_pow:[43,257,897],builtin_radd:[257,897],builtin_rand:[257,897],builtin_rfloordiv:[257,897],builtin_rmul:[257,897],builtin_ror:[257,897],builtin_rpow:[257,897],builtin_rsub:[257,897],builtin_rtruediv:[257,897],builtin_rxor:[257,897],builtin_setitem:[257,897],builtin_some_op:43,builtin_sub:[257,897],builtin_truediv:[257,897],builtin_xor:[257,897],busi:43,bypass:1303,cach:[938,954,1012,1023],cache_fn:1012,calcul:[40,41,42,43,864,865,868,869,874,875,877,878,897,915,922,1141,1149],call:[43,938,982,1012,1077,1085,1102,1108,1112,1160,1204,1205,1208,1212,1277,1288,1289,1290,1293,1297,1303,1306],callabl:[40,41,936,937,938,947,948,982,1012,1023,1035,1037,1066,1102,1156,1157,1158,1159,1160,1204,1208,1209,1210,1212,1213,1241,1252],can:[43,938,980,981,982,1012,1079,1124,1126,1160,1260,1302,1303,1306],cancel_join_thread:1160,cannot:43,captur:1260,cast:[40,41,136,302,451,585,719,988,1012,1027,1124,1126,1130],catch_except:[1012,1035],categori:43,caus:43,ceil:[86,222,406,534,667,864,1012,1015],cell:[1241,1251,1277,1286],certain:[40,41,1012,1015,1064,1065],chain:[40,41,1156,1157,1158,1299,1300],chang:[43,938,1012,1079,1160,1204,1206,1213,1260,1302],channel:[1012,1044,1124,1126,1127,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287],check:[15,16,17,18,19,40,41,43,938,977,987,988,993,1002,1011,1012,1021,1040,1053,1061,1094,1104,1108,1114,1160,1204,1205,1212,1260,1303],check_nest:[1204,1212],check_shap:[40,41],check_submod_ret:[1289,1290],check_typ:[40,41],choic:[1260,1303],choleski:[794,1131],choos:[864,876,1012,1105,1131,1136,1141,1146,1260],choose_random_framework:59,chosen:[40,41,1012,1015,1105],chunk:[938,980,981,982,1160],chunk_siz:[938,982,1160],circl:[1141,1142,1144],clark:1260,clear:[43,938,954,1160],clear_framework_stack:59,clear_mem_on_dev:[449,711,938],click:1260,clip:[40,41,302,451,719,1012,1025,1026,1068,1070,1260],clip_matrix_norm:1012,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1012],clipped_delta:1160,clone:[40,41,938,957,958,959,960,1160],clone_arrai:1160,clone_it:1160,clone_nest:1160,clonedit:1160,cloneditem:1160,clonednest:1160,close:[43,1124,1129,1141,1144,1160,1306],closest:[864,867,988,993],closest_valid_dtyp:988,code:[40,41,42,43,500,1260,1261,1302,1303],codebas:[938,980,981,1160,1260,1303,1306],codomain:[864,865,868,869,875,877,878],colab:1260,collect:[15,40,41,449,451,484,489,493,497,498,500,897,936,938,988,1012,1108,1124,1131,1138,1141,1160,1204,1216,1223,1233,1241,1254,1258,1263,1277,1291,1293],color:[40,41,42,1304,1305],column:[1012,1054],combin:[40,41,42,1124,1129,1260,1306],combined_batch_s:1160,come:1303,command:1260,comment:43,commit:1306,common:[40,41,43,1141,1146],common_key_chain:[40,41],commun:[43,1260,1303],communuti:43,compar:[40,41,889,890,897,915,1012,1014,1019,1020],comparison_oper:[0,9,10],compat:[43,864,866,872,873,880,883,893,894,895,897,915,916,922,1012,1039,1079,1141,1149,1260,1306],compil:[302,451,719,1289,1290,1293,1294,1295,1296,1297,1298],compile_on_next_step:[1289,1290,1293,1294,1295,1296,1297,1298],complet:[40,41,43,1131,1136,1160],complex:[1303,1306],compliant:[864,876],compon:[1012,1031],composit:43,comput:[40,41,864,866,872,873,876,880,883,891,892,897,916,938,982,1012,1025,1026,1032,1033,1039,1067,1108,1110,1111,1112,1113,1115,1116,1117,1119,1121,1124,1127,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1144,1145,1146,1150,1151,1152,1154,1204,1208,1223,1224,1225,1226,1227,1228,1229,1230,1231,1241,1242,1243,1244,1245,1246,1247,1248,1250,1252,1254,1255,1256,1257],concat:[40,41,938,967,968,969,970,982,1012,1044,1160],concaten:[40,41,136,302,451,585,719,1012,1044,1160,1260],concatten:[40,41,938,967,968,969,970,982,1160],condit:[451,936,937,1012,1105,1204,1212],conditon:[1204,1212],config:[40,41,1160],config_list:1160,configur:[40,41],conflict:43,conform:43,conjunct:1303,connect:[1277,1287,1288],consid:[40,41,864,876,1131,1136,1302,1306],consist:[40,41,938,970,1160,1223,1224,1289,1290,1303],constant:[938,947,948,1012,1028,1160,1204,1208,1254,1255,1256,1257,1258,1259,1268,1269,1273,1276,1289,1290,1291,1292,1303],constant_kwarg:1160,constant_pad:[302,451,585,719,1012],constitu:[40,41],construct:[1012,1096,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302],constructor:[40,41,42,1012,1016,1299,1300],consum:[938,1160],cont_feat_dim:[1241,1252],contaienr:[40,41],contain:[15,18,19,42,43,856,857,858,859,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,883,891,892,893,894,895,897,915,916,922,938,957,961,982,988,992,1012,1013,1017,1024,1025,1026,1029,1039,1053,1068,1070,1080,1091,1092,1108,1110,1111,1113,1115,1116,1117,1141,1149,1156,1157,1158,1159,1160,1216,1217,1223,1225,1226,1227,1229,1231,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[451,719,1012],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[451,1012,1071,1241,1252,1277,1288],context_dim:[1277,1288],contextmanag:[59,60],continu:[43,1160,1303],contract:[40,41,1223,1224],contribut:[1260,1261],contributor:[43,1260],control:1260,conv1d:[202,386,514,845,1241,1260,1277],conv1d_transpos:[202,386,514,845,1241],conv1dtranspos:[1260,1277],conv2d:[202,386,514,651,845,1241,1260,1277],conv2d_transpos:[202,386,514,845,1241],conv2dtranspos:[1260,1277],conv3d:[202,386,514,651,845,1241,1260,1277],conv3d_transpos:[202,386,514,845,1241],conv3dtranspos:[1260,1277],convent:[40,41,1223,1224],conver:[938,954,965,977,984,987,1160],convers:[16,17,18,19,40,41,1160,1260],convert:[15,16,17,18,19,40,41,43,938,965,966,988,994,1000,1001,1012,1088,1099,1100,1124,1126,1130,1131,1137,1160,1204,1206,1213,1260,1267],convert_dtyp:988,convolut:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],cool:43,cooler:43,coordin:[1012,1069,1141,1142,1144,1146],copi:[40,41,43,500,1012,1030,1160,1204,1206],copy_arrai:[451,719,1012],copy_nest:1204,core:[449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,499,500,501,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,942,943,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1260],corner:43,correct:[43,1260,1303],correctli:[40,41,43,886,887,1131,1134,1141,1146,1223,1225,1226,1227,1228,1229,1230,1231],correspond:[40,41,43,897,922,1012,1027,1216,1217],cos:[86,406,534,667,864,1012,1044,1141,1142,1154,1303],cosh:[86,406,534,667,804,864,1141],cosin:[864,868,869,1141,1142,1143,1148],cost:[1108,1110,1111,1113,1115,1116,1117,1156,1157,1158,1159],cost_fn:[1156,1159],could:1306,count:[40,41,884,885,893,894,895,1160,1223,1228,1230],cours:43,cprint:1304,cpu:[40,41,43,938,975,977,983,984,987,1012,1015,1018,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1107,1160,1216,1217,1218,1219,1220,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300,1302,1303],creat:[40,41,856,857,859,938,947,948,1012,1015,1018,1045,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1098,1107,1108,1121,1160,1216,1217,1218,1219,1220,1260,1261,1266,1267,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1306],create_if_abs:[40,41],create_vari:1268,creation:[40,41,42,43],creation_funct:[397,398,399,400,856,857,858,859],crop:[1124,1128],crop_siz:[1124,1128],cross:[302,719,1012,1254,1255,1256,1257],cross_entropi:1254,cuda:[40,41,938,947,966,983,1012,1015,1018,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1107,1160,1216,1217,1218,1219,1220,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300],cumprod:[136,302,451,719,1012],cumsum:[719,1012],cumul:[1012,1032,1033],current:[40,41,42,43,938,947,971,972,974,978,988,994,1002,1011,1012,1034,1048,1056,1060,1072,1076,1160,1204,1205,1212,1260,1306],current_framework:59,current_framework_str:[451,719,1012,1160],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1241,1242,1243,1244,1245,1246,1247],d_out:[1241,1242,1243,1244,1245,1246,1247],da_can_termin:1160,da_dim_s:[938,1160],da_direct:1160,da_tune_step:[938,1160],dai:1306,daniel:1260,data:[40,41,42,43,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,881,883,884,885,889,890,893,894,895,897,915,916,922,938,940,941,942,943,944,945,950,951,952,966,988,992,993,994,998,999,1000,1001,1002,1003,1004,1011,1012,1015,1018,1039,1045,1054,1061,1074,1075,1079,1090,1094,1107,1108,1114,1122,1141,1149,1160,1241,1250,1260],data_format:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],data_type_funct:[401,403,404,860,861,862],dataset:[40,41],datatyp:[40,41,988,993,1003,1004],dcdw:[1108,1110,1111,1113,1115,1116],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1108,1115,1116,1293,1295,1296],decay_lambda:[1108,1115,1116,1293,1295,1296],decid:[40,41,1306],decompos:[1131,1132,1136],decomposit:[880,882,1131,1132,1136],decor:43,decrement:[1012,1057],dedic:[1108,1122,1266,1267],deep:[40,41,1260],deep_copi:[40,41],deeper:[938,960,964,970,1160,1204,1213,1260],deepli:[1204,1206],def:[43,60,82,218,402,530,663,939,946,949,989,990,991,1109,1160,1164,1171,1260,1269,1272,1275,1302,1303,1306],default_dev:43,default_devic:938,default_dtyp:[43,988],default_float_dtyp:988,default_int_dtyp:988,default_key_color:[40,41,42],default_nod:1160,default_rng:500,default_v:[1012,1035],defaultdevic:[938,939],defaultdtyp:[988,989],defaultfloatdtyp:[988,990],defaultintdtyp:[988,991],defer:43,defin:[43,1012,1031,1073,1075,1107,1216,1218],definit:43,degre:[1141,1154],del:1160,delai:43,delet:43,delta:[1108,1110,1160],delta_dim_s:1160,delta_percent_mem:1160,delta_sf:1160,delta_util:1160,demo:1260,denomin:[1012,1043,1050,1084,1091,1092,1258,1259,1291,1292],denot:43,dens:[1277,1287],depend:[43,864,865,868,869,874,875,877,880,882,889,890,897,922,1012,1105,1260],depth:[40,41,451,475,938,960,964,970,1012,1052,1073,1160,1204,1213,1289,1290],depth_cutoff:[40,41],depthwis:[1241,1248,1277,1284],depthwise_conv2d:[202,386,514,651,845,1241],depthwiseconv2d:[1260,1277],deriv:[1108,1110,1111,1113,1115,1116,1117,1204,1206,1213,1260,1289,1293,1297,1299],descend:[880,882,889,890],descent:[1108,1113,1293,1298],describ:[40,41,1223,1224],descript:[880,883],design:[1260,1261],desir:[40,41,938,983,988,992,1012,1015,1018,1054,1055,1074,1075,1107,1124,1129,1160,1223,1225,1226,1227,1229,1231],desired_aspect_ratio:[489,492,1124,1129],desired_percent_increas:1160,detail:1306,detect:[40,41,1204,1205,1212],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,864,865,866,868,869,870,871,875,877,878,880,881,883,893,894,895,897,922,938,973,975,976,985,988,992,993,999,1002,1003,1004,1011,1012,1014,1015,1018,1019,1020,1053,1056,1060,1061,1094,1104,1108,1114,1141,1149,1156,1157,1158,1159,1160,1241,1252],dev:[40,41,42,43,129,296,449,451,452,454,464,465,466,473,474,475,476,477,478,483,500,501,578,711,938,941,942,944,945,947,948,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,974,977,978,979,980,981,982,983,984,987,1012,1015,1018,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1107,1108,1123,1216,1217,1218,1219,1220,1266,1267,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300],dev_clon:[40,41,938],dev_clone_arrai:938,dev_clone_it:938,dev_clone_nest:938,dev_dist:[40,41,938],dev_dist_arrai:938,dev_dist_it:938,dev_dist_nest:938,dev_from_str:[43,129,296,449,578,711,938],dev_mapp:938,dev_str:[40,41],dev_to_str:[129,296,449,578,711,938],dev_unifi:938,dev_unify_arrai:938,dev_unify_it:938,dev_unify_nest:938,dev_util:938,devclonedit:938,devcloneditem:938,devclonednest:938,devdistit:938,devdistitem:938,devdistnest:938,develop:[43,1260,1303,1306],deviat:[40,41,1216,1219,1223,1229,1258,1259,1291,1292],devic:[21,40,41,43,397,398,400,450,451,463,856,857,858,859,940,941,942,943,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1012,1015,1018,1045,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1107,1108,1123,1216,1217,1218,1219,1220,1260,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300],devmanag:[938,946],devmapp:[938,948],devmappermultiproc:938,diag:[880,882],diagon:[103,232,423,551,684,856,858,880,1012,1054],dict:[15,16,17,18,19,40,41,42,938,940,943,947,948,950,960,961,962,963,964,1012,1036,1037,1038,1066,1156,1157,1158,1160,1204,1206,1207,1208,1211,1213,1266,1267],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,860,861,938,957,958,961,962,1131,1136,1160,1241,1250,1260,1303,1306],differenti:[1260,1303],dilat:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],dim:[40,41,43,880,882,1012,1073,1124,1125,1129,1160,1277,1288],dim_siz:[40,41,938,1160],dimens:[40,41,42,856,858,880,881,882,883,884,885,886,887,893,894,895,938,969,1012,1022,1027,1031,1036,1037,1038,1041,1044,1051,1063,1073,1078,1079,1089,1090,1093,1101,1103,1124,1128,1131,1134,1156,1157,1158,1159,1160,1216,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1238,1241,1242,1243,1244,1245,1246,1247,1248,1251,1254,1256,1257,1277,1278,1279,1280,1281,1282,1283,1284,1287,1288],dimension:[40,41,500,880,882,883,893,894,895,1012,1089,1090],direct:1160,directli:[43,1204,1213,1303,1306],directori:[1012,1086,1097],discord:43,discret:[1254,1256],discuss:43,disk:[40,41,1124,1126],distanc:[1012,1015],distribut:[40,41,938,957,961,962,963,964,1160,1216,1217,1218,1219,1220,1241,1249,1277,1285,1289,1290],distribute_nest:1160,distributedarrai:[40,41],distrubt:[1254,1256],dive:[1260,1303],divid:[40,41,1012,1089,1091,1141],dividend:[1141,1149],divis:[1012,1043,1050,1084,1091,1092,1108,1110,1111,1115,1141,1149,1293,1294,1295],divisor:[1108,1110,1111,1115,1141,1149,1293,1294,1295],doc:1260,docstr:43,document:43,doe:[40,41,43,1012,1015,1089,1302],doesn:[1131,1136,1260],doing:43,domain:[864,865,868,869,875,877,878,1141,1142],don:[43,1260],done:43,door:1306,dot:[1131,1133,1241,1252,1253,1277,1288],down:1302,downscal:[1012,1025,1026],drag:[1260,1306],draw:[1216,1217,1219,1220],drawn:[1216,1217,1218,1219,1220],drop:[1260,1306],dropout:[1241,1260,1277,1288],dropout_r:[1277,1288],ds_tune_step:938,dtype:[40,41,43,136,302,397,398,400,401,403,404,451,452,454,455,463,466,476,483,585,719,856,857,859,860,861,862,886,887,992,993,994,995,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1015,1018,1045,1054,1073,1074,1075,1107],dtype_bit:[136,302,451,585,719,988],dtype_from_str:[43,136,302,451,585,719,988],dtype_in:[451,460,461,462,988,994,999,1000,1001,1002,1003,1004,1011],dtype_to_str:[136,302,451,585,719,988],duplic:[40,41,43],dure:[40,41,43,936,937,1012,1102,1108,1110,1111,1115,1156,1157,1158,1159,1289,1290,1293,1294,1295,1297],dynam:[43,451,456,936,937],each:[40,41,42,43,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,882,897,916,922,938,947,948,957,958,959,960,961,962,963,969,981,982,1012,1013,1014,1028,1039,1078,1089,1093,1096,1106,1108,1111,1113,1115,1116,1117,1124,1127,1141,1144,1149,1151,1152,1160,1204,1208,1216,1217,1223,1224,1241,1242,1243,1244,1245,1246,1247,1248,1249,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1303],eager:1303,easi:1306,easili:1260,econom:1306,ecosystem:1260,edg:[1012,1024,1028,1106],effect:[1108,1117],effective_grad:[1108,1117],effici:1306,einop:[40,41,1012,1036,1037,1038],einops_rearrang:[40,41,1012],einops_reduc:[40,41,1012],einops_repeat:[40,41,1012],einstein:[40,41,1223,1224],einsum:[40,41,188,374,502,641,825,1223],either:[40,41,43,864,875,877,1012,1035,1066,1069,1071,1156,1157,1158,1159,1160,1277,1288,1289,1290,1303],eleg:1160,element:[40,41,43,500,856,858,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,884,885,891,892,893,894,895,897,915,916,922,938,959,963,969,988,992,1012,1013,1015,1017,1019,1020,1024,1025,1026,1032,1033,1039,1042,1043,1054,1055,1068,1070,1078,1080,1089,1100,1105,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1223,1224,1226,1228,1230,1233,1234,1235,1236,1237,1238,1239,1240,1241,1249,1277,1285],elementwis:[40,41,897,915],elementwise_affin:[1291,1292],elementwise_funct:[864,865,866,867,868,869,870,871,872,873,874,875,876,877,878],elemtn:[1216,1217],elif:1160,els:[43,1012,1021,1035,1040,1160],elsewher:[1012,1105],emphas:1260,empti:[40,41,893,894,895,1131,1136,1160],enabl:[40,41,42,43,1260],encapsul:[860,862],encod:[1012,1044,1124,1126],end:[1012,1015,1260,1303],engag:43,ensur:43,entir:[40,41,893,894,895,938,982,1160,1260,1277,1286],entri:[40,41,1012,1064,1065,1089,1090],entropi:[1254,1255,1256,1257],enumer:1160,environ:1260,eps:[401,860,861],epsilon:[1108,1110,1111,1115,1254,1255,1256,1257,1258,1259,1291,1292,1293,1294,1295],equal:[40,41,86,406,534,667,864,870,880,881,889,890,1012,1014,1019,1020,1028,1089,1106,1141,1154,1216,1220],equality_matrix:[1012,1014],equat:[40,41,1223,1224],equival:[864,876,880,883,1012,1015,1141,1154],erf:[498,804,1141],error:[40,41,43,938,1012,1090,1141,1150,1160,1233,1234,1289,1290,1293,1297],essenti:43,etc:[40,41,43,938,983,1012,1015,1018,1046,1047,1054,1064,1065,1073,1074,1075,1081,1082,1107,1160,1216,1217,1218,1219,1220,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300,1306],euclidean:[880,883],euler:855,evalu:[40,41,864,874,875,893,894,895,1012,1069,1204,1205,1212],even:[43,1306],evenli:[40,41,1012,1015,1064,1065,1089],everi:[43,1012,1014,1306],exact:[40,41],exampl:[43,936,937,1012,1024,1093,1131,1136,1260,1302,1303,1306],example_input:[451,456,936,937],exc_tb:1160,exc_typ:1160,exc_val:1160,exce:[1012,1070],except:[40,41,44,47,893,894,895,1012,1015,1021,1027,1035,1102,1160],excess_s:1160,excit:[1260,1303],exclud:[59,61,1012,1015,1216,1220],exclus:[40,41,451,458,471,484,486,1012,1032,1061,1108,1114,1216,1218],execut:[43,1012,1102,1303],execute_with_gradi:[168,351,484,621,784,1108,1260,1302],exist:[40,41,1012,1035,1160,1260,1293,1297,1306],exp:[804,1141],expand:[40,41,1012,1041,1044],expand_dim:[40,41,302,719,1012,1160],expect:[1012,1016],explain:[43,1303],explicitli:[43,1277,1286,1288,1289,1290,1303],expon:[43,897,922,1012,1092],exponenti:[43,897,922,1141,1150,1151],expos:[1012,1018,1029],express:[864,868,877,1012,1069],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1108,1112],eye:[1131,1133],fabian:1260,fabio:1260,factor:[880,882,938,947,980,981,982,1108,1110,1111,1115,1116,1160,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284,1293,1294,1295,1296],fail:43,falck:1260,fall:[1289,1290,1293,1297],fallback_to_non_compil:[1289,1290,1293,1297],fals:[15,18,19,40,41,42,59,66,67,68,69,70,449,451,458,459,471,479,482,484,485,486,493,494,864,870,871,876,880,883,886,887,889,890,891,892,893,894,895,938,956,969,977,982,987,988,995,996,997,998,1012,1014,1032,1035,1040,1044,1051,1061,1066,1087,1089,1103,1105,1108,1111,1112,1113,1114,1115,1116,1117,1131,1134,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1223,1225,1226,1227,1228,1229,1230,1231,1266,1267,1289,1290,1293,1294,1295,1296,1297,1298],fan_in:1268,fan_mod:1268,fan_out:1268,far:[1204,1205,1212,1302],faster:[936,937],favourit:[1260,1302],feasibl:1306,feat_dim:[1241,1252,1253],fed:[938,982,1160],feed:[938,982,1160],few:43,field:1306,file:[40,41,43,1012,1086,1097,1289,1290],filepath:[40,41],fill:[40,41,856,857,859,1012,1045,1074,1216,1218],fill_valu:[451,463,1012,1045],filter:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284,1306],filter_s:[1277,1278,1279],filter_shap:[1277,1280,1281,1282,1283,1284],find:[40,41,43,1306],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,217,218,401,402,529,530,662,663,860],finish:[1260,1306],finit:[864,870],first:[40,41,43,500,864,866,872,873,880,881,882,897,915,936,937,938,969,1012,1019,1027,1031,1039,1064,1065,1093,1095,1108,1112,1156,1157,1158,1159,1160,1204,1205,1212,1216,1222,1223,1228,1230,1277,1288,1289,1290,1293,1297,1303,1306],firstlayersiren:[1260,1268],firstli:[1303,1306],fist:[938,982,1160],fit:[40,41,449,451,484,489,493,497,498,500,1012,1078,1124,1129],fix:43,fkt:1306,flag:[40,41,43,1108,1114],flat:[40,41,43,1012,1078,1081],flat_list:[40,41],flatten:[40,41,880,883,886,887,1012,1044,1078,1223,1225,1226,1227,1229,1231],flatten_key_chain:[40,41,1289,1290],flexibl:[1260,1303],flip:[40,41,107,236,427,555,688,884],float32:[43,451,466,988,992,1000,1001,1012,1015,1018,1054,1074,1075,1107],float_dtyp:[988,996,1006],float_img_to_uint8_img:1124,floor:[302,451,719,1012,1043,1160],floormod:[302,451,719,1012],fluid:1306,folder:[43,1260],follow:[40,41,43,860,862,880,883,938,982,1012,1057,1058,1059,1091,1092,1108,1111,1113,1115,1116,1117,1160,1204,1208,1213,1241,1252,1253,1260,1277,1287,1293,1297],followng:[860,861],fomaml_step:1156,forget:[1108,1110,1111,1115,1293,1294,1295],fork:[1012,1071,1260,1261],forkserv:[1012,1071,1160],form:[15,16,17,18,19,40,41,856,858,880,881,1012,1018,1108,1111,1113,1115,1116,1117,1204,1206,1213,1241],format:[40,41,43,938,956,988,992,994,998,1012,1015,1018,1054,1074,1075,1107,1160,1223,1224,1260,1302,1303],format_fn:[40,41],format_key_chain:[40,41],forward:[1289,1290,1293,1297,1302],found:[40,41,42],fourier:[1012,1044],fourier_encod:1012,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,110,113,115,117,118,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,172,173,174,176,177,178,182,183,184,185,186,187,189,190,191,192,193,194,195,198,200,201,203,204,205,206,207,208,209,214,215,216,218,219,220,223,224,225,226,227,228,229,230,233,234,235,237,239,242,245,246,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,357,358,359,361,362,363,364,366,367,370,371,372,373,375,376,377,378,379,380,381,382,385,387,388,389,390,391,392,393,398,399,400,402,403,404,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,424,425,426,428,430,433,435,437,438,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,485,486,487,488,490,491,492,494,495,496,499,501,503,504,505,506,507,508,509,512,513,515,516,517,518,519,520,521,526,527,528,530,531,532,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,552,553,554,556,558,561,563,565,566,574,579,580,581,582,583,584,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,627,628,629,631,632,633,637,638,639,640,642,643,644,645,646,647,648,652,653,654,659,660,661,663,664,665,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,685,686,687,689,691,694,696,698,699,707,712,713,714,715,716,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,785,786,787,788,789,791,792,793,795,796,797,798,799,800,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,828,829,830,831,832,835,836,837,838,839,840,841,843,844,846,847,848,849,850,851,852,857,858,859,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,881,882,883,885,887,890,891,892,894,895,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1234,1235,1236,1237,1238,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1259,1260,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1305,1306],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1160,framewrk:[1012,1071],free:43,freed:43,freeli:43,frequenc:[1012,1044],from:[40,41,42,43,864,878,880,881,884,885,891,892,893,894,895,938,947,948,982,988,994,1012,1035,1046,1047,1054,1079,1090,1098,1105,1108,1111,1115,1124,1128,1131,1136,1156,1157,1158,1159,1160,1204,1206,1213,1216,1217,1218,1219,1220,1223,1228,1230,1241,1249,1252,1260,1266,1267,1277,1285,1288,1293,1297,1302,1303],from_cal:[1289,1290],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,136,302,451,585,719,860,861,1012,1131,1136,1260],full_matric:[880,882],fulli:[43,1260,1277,1287,1288,1302],func:[40,41,451,456,484,485,936,937,938,982,1012,1023,1108,1112,1160],further:[43,1306],furthermor:1306,futur:1306,gain:1268,gamma:[1258,1259],gather:[40,41,136,302,451,585,719,1012,1047],gather_nd:[40,41,136,302,451,585,719,1012],gauss:[1141,1150],gaussian:[1233,1234],geglu:[1260,1263],gelu:[384,511,834,1233,1260,1263],gener:[23,40,41,43,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,500,936,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1114,1216,1218,1220,1221,1260,1293,1297],geometr:[1012,1044],get:[40,41,43,860,861,862,938,947,948,956,971,972,977,981,984,987,988,998,999,1012,1016,1048,1049,1050,1077,1160,1260,1277,1286,1306],get_all_arrays_in_memori:1012,get_all_arrays_on_dev:938,get_framework:59,get_initial_st:[1277,1286],get_min_bas:1012,get_min_denomin:1012,get_mod_kei:[1289,1290],get_num_dim:[451,719,1012],get_referrers_recurs:1012,getfullargspec:1160,gist:1260,give:[43,1012,1079,1303],given:[40,41,43,884,885,938,971,977,980,981,982,984,987,988,992,1012,1015,1018,1024,1032,1033,1047,1064,1065,1074,1075,1078,1081,1082,1089,1096,1101,1103,1107,1108,1110,1111,1113,1115,1116,1117,1131,1133,1137,1141,1142,1160,1204,1209,1210,1216,1219,1220,1222,1223,1226,1228,1229,1230,1231,1241,1242,1243,1244,1245,1246,1247,1248,1266,1267,1306],global:[40,41,42,938,947,948,955,980,981,982,988,995,996,997,1012,1034,1049,1050,1077,1083,1084,1085,1091,1092,1108,1123,1160,1258,1259,1291,1292],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1260,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287],good:43,googl:1260,got:[43,1260],gpu0:43,gpu2:43,gpu:[938,973,976,1160],gpu_is_avail:[449,938,1160],grad:[1260,1293,1297,1302],gradient:[25,40,41,485,486,487,488,938,982,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1127,1156,1157,1158,1159,1260,1293,1294,1295,1296,1297,1298,1302,1306],gradient_descent_upd:[1108,1156,1157,1158,1159],gradient_imag:[171,356,489,626,790,1124],gradienttrack:[1108,1109],graph:[1108,1111,1113,1115,1116,1117,1289,1290],greater:[40,41,1012,1015,1042,1090,1216,1220],green:[40,41,42,1304,1305],grid:[1012,1069],group:[1124,1129],guid:[43,1260,1261,1306],gym:1260,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1306,half:[1012,1015,1160,1216,1220],hand:1260,handl:[40,41,42,43,936,937,938,954,956,965,966,977,984,987,1108,1111,1113,1115,1116,1117,1160,1293,1294,1295,1296,1297,1298],happen:43,has:[40,41,43,886,887,1012,1093,1131,1136,1141,1145],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1012],hasattr:1160,have:[40,41,43,856,857,858,859,860,861,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,881,882,883,884,885,886,887,889,890,893,894,895,897,915,916,922,1012,1027,1031,1036,1037,1038,1039,1045,1093,1108,1114,1122,1141,1149,1160,1260,1302,1303],haven:43,hdf5:[40,41,1289,1290],head:[1241,1252,1277,1288],head_dim:[1277,1288],height:[1124,1129],height_cutoff:[40,41],help:[43,59,401,449,450,938,950,951,952,953,988,1108,1260,1268,1270,1271,1273,1274,1276],here:[43,1260],hidden:[1241,1251,1277,1286],hierarch:[1012,1029],hierarchi:[40,41],high:[40,41,500,1216,1218,1220],higher:[880,882,1108,1111,1113,1115,1116,1117],highest:[1216,1218],highest_util:1160,highest_util_nod:1160,highli:1260,highlight:1306,hint:43,hkt:1306,hold:[988,992,1012,1015,1018,1081,1082],host:1260,hot:[1012,1073],hour:43,how:[1260,1277,1288,1289,1290,1303,1306],howev:[43,1303],http:1306,hyperbol:[864,865,869,1141,1143,1147,1148,1153,1155,1233,1240],hypothet:[43,1306],icon:1260,idea:1260,ident:[40,41,43,136,302,451,585,719,1012],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[855,860,861,864,878],if_exist:[40,41],ignor:[40,41,1293,1297],ignore_key_error:[40,41],ignore_miss:[1293,1297],ignore_non:[40,41],iii:43,iinfo:[81,217,401,529,662,860],imag:[27,490,491,492,1012,1063,1125,1126,1127,1128,1129,1130,1241,1242,1243,1244,1245,1247,1248,1260,1306],image_dim:[1124,1128],imkkhk:1306,immedi:[1260,1303,1306],implement:[43,864,865,868,869,874,875,877,889,890,897,922,1260,1303,1306],in_featur:[1241,1250],inadvert:43,includ:[40,41,43,880,883,893,894,895,1012,1015,1053,1091,1092,1104,1204,1205,1216,1220,1277,1287,1288,1291,1292,1302],include_deriv:[1204,1206,1213],include_empti:[40,41],include_inf:[40,41,1012,1053,1104],include_nest:[1204,1205],include_self:[40,41],inclus:[43,1216,1218],incom:[1241,1250],increas:[938,960,964,970,1012,1028,1041,1106,1160,1204,1213],increasingli:1306,increment:[1012,1058,1160],inde:1260,indent:[40,41,42],independ:[1216,1217],index:[40,41,451,500,886,887,889,890,1012,1017,1046,1047,1069,1090,1093,1204,1207,1209,1210,1211,1214],index_nest:1204,indic:[40,41,451,464,465,475,477,478,880,883,886,887,889,890,1012,1017,1046,1047,1055,1073,1081,1082,1204,1205,1207,1209,1210,1211,1212,1214,1215,1216,1217,1233,1238,1241,1242,1243,1244,1245,1246,1247,1248,1258,1259,1277,1278,1279,1280,1281,1282,1283,1284,1289,1290],indices_wher:[136,302,451,719,1012],indistinguish:[864,878],inevit:1306,inf:[40,41,880,883,1012,1053,1062,1104,1141,1145],infer:[891,892,936,937,1012,1051,1054,1079,1087,1124,1128,1131,1136,1303,1306],infin:[864,865,867,868,869,870,875,877,878,880,883,893,894,895,1012,1062],infinit:[864,878],inform:[860,861,862,1108,1119],init_c:[1241,1251],init_h:[1241,1251],init_on_first_step:[1293,1297],initi:[40,41,42,43,59,401,449,450,938,950,951,952,953,988,1108,1160,1241,1251,1260,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1293,1297],initialz:[1289,1290],inner:[1156,1157,1158,1159],inner_batch_fn:[1156,1157,1158],inner_batch_shap:[1241,1250],inner_cost_fn:[1156,1157,1158],inner_grad_step:[1156,1157,1158,1159],inner_learning_r:[1156,1157,1158,1159],inner_optimization_step:[1156,1157,1158,1159],inner_v:[1156,1157,1158],innermost:[856,858,880,881],inp:1160,inplac:[40,41,1012,1021,1056,1060,1094,1108,1111,1113,1115,1116,1117,1266,1267,1293,1294,1295,1296,1297,1298],inplace_arrays_support:[451,1012],inplace_decr:[136,302,451,585,719,1012],inplace_incr:[136,302,451,585,719,1012],inplace_oper:[0,11,12],inplace_upd:[40,41,136,302,451,585,719,1012,1266,1267],inplace_variables_support:[451,1012],input:[15,18,19,40,41,42,43,856,858,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,889,890,891,892,893,894,895,936,937,938,947,948,955,956,957,960,961,964,970,982,983,988,992,993,995,996,997,998,999,1003,1004,1012,1013,1014,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1051,1053,1054,1055,1057,1058,1059,1061,1062,1063,1067,1068,1069,1070,1078,1080,1087,1088,1090,1093,1094,1095,1096,1098,1099,1100,1101,1103,1104,1106,1108,1112,1114,1119,1123,1124,1125,1126,1127,1128,1130,1131,1134,1136,1138,1139,1140,1141,1143,1145,1147,1148,1149,1153,1154,1155,1156,1157,1158,1159,1160,1216,1217,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1258,1259,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1291,1292,1303],input_ax:[938,982,1160],input_channel:[1277,1278,1279,1280,1281,1282,1283,1286,1287],input_queu:1160,inputs_split:1160,insert:[886,887,1012,1041],insid:43,inspect:1160,inspir:1306,instal:1260,instanc:[15,16,17,18,19,40,41,43,500,897,915,916,922,938,947,1160,1266,1267,1299,1300],instead:[40,41,43,500,1223,1225,1226,1227,1228,1229,1230,1231,1306],int32:43,int64:[988,992,1012,1015,1018,1054,1074,1075,1107],int_dtyp:[988,997,1007],integ:[40,41,500,860,862,864,866,867,880,883,893,894,895,988,1004,1012,1015,1042,1080,1089,1216,1218,1221],integr:1260,intend:43,inter:1260,interact:1260,interchang:[40,41,1012,1095],interest:1260,interfac:[1012,1018,1303],intermedi:[40,41],intern:[40,41,938,1108,1122,1160,1204,1205,1212,1213,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1299,1300],interpol:[1012,1063],intersect:[1141,1142],interv:[40,41,893,894,895,1012,1015,1024,1064,1065,1141,1144,1216,1220],introduc:1306,inv:[794,1131,1306],invalid:[893,894,895],invalid_dtyp:988,invers:[864,865,1131,1133,1135,1141,1142,1143,1144,1145,1147,1306],invert:[1131,1133,1135],invest:1306,investig:43,invoc:[936,937],irrespect:1260,is_al:1160,is_arrai:[136,302,451,585,719,1012,1160],is_float_dtyp:988,is_int_dtyp:988,is_mean:1160,is_sum:1160,is_vari:[168,351,484,621,784,1108],isfinit:[86,222,406,534,667,864],isinf:[302,585,719,1012],isinst:1160,isnan:[86,222,406,534,667,864],isnumer:1160,issu:[1260,1261],issue_numb:43,item:[15,19,40,41,897,909,910,938,947,948,950,957,959,961,963,969,988,995,1012,1029,1052,1091,1092,1160,1204,1208,1209,1210,1213,1214,1215,1260,1289,1290,1302],iter:[15,16,17,18,19,40,41,42,936,937,938,941,942,944,945,947,948,951,952,959,961,962,963,964,969,982,1012,1014,1022,1027,1028,1054,1069,1074,1078,1079,1082,1087,1089,1093,1096,1101,1106,1160,1204,1205,1206,1208,1212,1213],iterbal:[938,959,963,969,1160],its:[500,938,982,1012,1054,1079,1095,1101,1160,1260],itself:[43,1204,1213],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,397,398,399,400,401,403,404,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,855,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,889,890,891,892,893,894,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,942,943,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1304,1305],ivy_backend:[40,41],ivy_bay:1306,ivy_test:43,ivyfcmodel:1302,ivyh:[40,41,42],ivymodul:[199,842],jame:1260,jax:[43,1108,1114,1260,1306],jax_concat:1260,jnp:1260,join:[40,41,1012,1027,1093,1160],journal:1260,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1260,1277,1286,1306],kaimingnorm:[1268,1272],kalman:1306,kalman_filt:1306,kalman_filter_step:1306,kalman_filter_upd:1306,keep:[40,41,938,983,1012,1103,1160,1260,1261,1306],keep_inner_v:[1156,1157,1158],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1156,1157,1158],keepdim:[40,41,451,482,493,494,880,883,886,887,891,892,893,894,895,1012,1103,1131,1134,1223,1225,1226,1227,1228,1229,1230,1231],kei:[15,16,17,40,41,42,43,897,902,938,950,1012,1029,1156,1157,1158,1160,1204,1207,1211,1241,1252,1253,1260,1266,1267,1277,1288,1293,1297],kept:[40,41,42,1156,1157,1158],kera:1306,kernel:[1241,1251],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,938,947,948,960,964,970,1012,1016,1036,1037,1038,1066,1160,1204,1208,1289,1290],keyword_color_dict:[40,41,42],kind:[860,861,862,1306],kwarg:[15,16,17,40,41,42,59,63,938,947,960,964,970,1012,1066,1160,1266,1267,1289,1290],kwarg_stateful_idx:[1289,1290],kwargs_clon:1160,kwargs_dist:1160,kwargs_uni:1160,label:[43,1254,1255,1256,1257],lamb:[1108,1115,1260,1293],lamb_upd:1108,lambda:[1160,1293,1296,1298,1302],lar:[1108,1115,1116,1260,1293],larger:[860,861,1012,1024],largest:[40,41,860,861,862,1012,1042],lars_upd:1108,last:[40,41,880,881,882,884,885,889,890,893,894,895,1012,1015,1031,1063,1089,1093,1131,1134,1223,1228,1230,1233,1238,1241,1251,1277,1287],later:[40,41,1012,1023],latest:[1277,1286],layer:[1108,1111,1113,1115,1117,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1258,1259,1260,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300,1306],layer_norm:1258,layernorm:[1260,1291],layerwis:[1108,1116,1293,1296],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1204,1205,1212],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1233,1234,1235],leaky_relu:[834,1233],learn:[891,892,1108,1111,1113,1115,1116,1117,1131,1136,1156,1157,1158,1159,1216,1222,1260,1293,1294,1295,1296,1297,1298,1303,1306],learnabl:[1258,1259,1291,1292],least:43,leav:[15,18,19,40,41,1204,1205,1206,1212,1213],left:[40,41,43,886,887,1131,1134,1223,1225,1226,1227,1228,1229,1230,1231,1260],leftmost:[40,41],len:1160,length:[40,41,42,1012,1015,1079,1090,1101],lenton2021ivi:1260,lenton:1260,less:[40,41,43,86,222,406,534,667,864,867,875,878,880,883,1160,1216,1220],less_equ:[86,406,534,667,864],less_util_node_str:1160,let:[1303,1306],level:1260,librari:[864,876,1260,1302,1306],lightweight:1260,like:[43,1108,1114,1216,1220,1260,1302,1303,1306],likewis:43,limit:[40,41,42,43,860,861,862,1012,1024,1025,1026],linalg:[29,1132,1133,1134,1135,1136,1137,1260],line:43,linear0:[1260,1302],linear1:1260,linear2:1302,linear:[1012,1044,1063,1131,1233,1234,1235,1236,1241,1249,1260,1277,1278,1279,1280,1281,1282,1283,1284,1302],linear_algebra:[493,494,495,496,880,881,882,883],linear_resampl:[136,302,451,585,719,1012],linearli:[1012,1044],link:[43,1260],linspac:[136,302,451,585,719,1012,1015],list:[15,18,19,40,41,397,398,400,856,857,859,884,885,893,894,895,938,947,948,957,958,960,961,962,964,967,968,982,1012,1015,1018,1020,1069,1088,1089,1098,1103,1156,1157,1158,1160,1204,1205,1206,1208,1212,1213,1241,1242,1243,1244,1245,1246,1247,1248,1260,1261,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284],list_join:[40,41,42],list_stack:[40,41],liter:[880,883],littl:1303,load:[40,41],loaded_kwarg:1160,loader:1260,local:43,local_set:[1012,1052],locat:[43,1012,1062,1216,1217],log1p:[86,406,534,667,864],log2:[86,406,534,667,864],log:[804,864,874,1012,1065,1141,1160,1254,1255,1256,1257],logarithm:[864,874,875,1141,1152],logic:[31,864,876,893,894,895,1139,1140,1260],logical_and:[365,801,1138],logical_not:[86,222,406,534,667,864],logical_or:[365,801,1138],logit:[1254,1257],logspac:[136,302,451,585,719,1012],look:[43,1303,1306],loop:[1156,1157,1158,1159],loss:[1255,1256,1257,1260,1302],loss_fn:[1260,1302],lot:1303,low:[40,41,500,1216,1218,1220],lower:[40,41,43,856,858,1012,1068,1216,1220],lower_depth:[1289,1290],lowest:[15,18,19,40,41,1204,1213,1216,1218],lstm:[1241,1251,1260,1277],lstm_updat:[43,1241],machin:[860,861,862,891,892,1131,1136,1216,1222,1260,1303,1306],made:43,mai:[864,873,876,889,890,1012,1015,1035,1039,1260,1303,1306],main:[856,858,880,881,1012,1054,1260],mainli:1260,maintain:[43,889,890],make:[43,500,938,1160,1260,1303],maml:[1156,1157,1158],maml_step:1156,manag:[938,1160],manhattan:[880,883],mani:[40,41,43,1012,1089,1260],manipulation_funct:[884,885],manner:[15,18,19,40,41,43,1204,1213],manual:[1204,1205,1212,1306],map:[40,41,42,938,947,1012,1062,1160,1204,1209,1210,1213,1277,1288,1302],map_cont:[40,41],map_nest_at_index:1204,map_nest_at_indic:1204,map_sequ:[40,41],mapper:[938,947,948,1160],mark:43,mask:[1241,1252,1253],master:43,match:[40,41,1012,1066],match_kwarg:1012,math:[33,499,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1260],mathbb:[1131,1137],mathbf:[1131,1137],mathemat:[855,880,883],matmul:[43,302,451,585,719,1012,1306],matplotlib:1303,matric:[856,858,880,881,1241,1250],matrix:[40,41,856,858,880,881,1012,1014,1025,1067,1131,1132,1133,1134,1135,1136,1137,1241,1250,1277,1287],matrix_norm:[40,41,175,360,493,630,794,1131],matter:1260,max:[40,41,401,860,861,862,1012,1025,1026,1037,1068,1081,1082,1160,1223,1225,1293,1295],max_batch_s:[40,41],max_chunk_s:[938,982,1160],max_depth:[40,41,938,942,945,952,960,964,970,1012,1052,1160,1204,1213],max_dev_dim_step_ratio:938,max_freq:[1012,1044],max_length:[40,41],max_node_dim_step_ratio:1160,max_norm:[40,41,1012,1025,1026],max_split_factor_step_s:[938,1160],max_trust_ratio:[1108,1115,1293,1295],maxim:[1260,1303,1306],maximis:1260,maximum:[40,41,42,719,886,887,938,960,964,970,982,1012,1024,1025,1026,1044,1108,1115,1160,1204,1213,1223,1225],mayb:[15,18,19],mdi:1160,mean:[40,41,500,938,967,968,969,970,982,1012,1037,1156,1157,1158,1159,1160,1204,1208,1216,1219,1223,1226,1229,1231,1268,1302,1306],measur:[1241,1252,1277,1288],mech:1260,mechan:[1260,1306],medic:1306,member:43,memori:[938,954,977,982,984,987,1160,1241,1251,1260],mention:43,merg:43,merge_with_upstream:43,meshgrid:[302,451,719,1012],messag:[1304,1305],meta:[35,1157,1158,1159,1260],method:[40,41,42,43,500,1012,1018,1029,1069,1081,1082,1108,1115,1116,1160,1204,1205,1212,1213,1260,1277,1288,1289,1290,1303],might:[1012,1035,1306],min:[40,41,114,401,434,562,695,860,861,862,880,883,891,1012,1037,1070,1081,1082,1091,1131,1136,1160,1223,1227],min_bas:[1012,1092],min_denomin:[1012,1091],min_dev_dim_s:938,min_node_dim_s:1160,min_sf_tune_step:[938,1160],min_unit_dev_tune_step:938,min_unit_node_tune_step:1160,mind:1260,mini:[1258,1259,1291,1292],minimum:[40,41,719,891,892,938,988,992,1012,1015,1017,1018,1024,1049,1050,1083,1084,1091,1092,1160,1223,1227],miss:[1293,1297],ml_framework:[1012,1015,1131,1136],mod:[1012,1043],mod_depth:[1289,1290],mod_height:[1289,1290],mod_with_top_mod_key_chain:[1289,1290],mode:[40,41,493,495,880,882,936,937,938,967,968,969,970,982,1131,1136,1160,1303],model:[1260,1302],modul:[40,41,42,59,1012,1071,1160,1260,1261,1263,1264,1265,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1291,1292,1299,1300,1306],moment:[1108,1110,1111,1115,1293,1294,1295],more:[43,884,885,1012,1093,1160,1260,1303,1306],more_util_node_str:1160,most:[40,41,43,1131,1136,1260,1306],move:[40,41,43,938,983,1160],much:[43,1260,1306],multi:[500,1012,1071,1241,1252,1277,1288],multi_head_attent:1241,multi_index_nest:1204,multi_map:[40,41],multi_nod:1160,multidev:[938,949,950,951,970],multidevcontain:[40,41],multidevic:[938,947],multidevit:[938,941,944,947,948,952],multidevitem:[938,940,943],multidevnest:[938,942,945],multiheadattent:[1260,1277],multinod:[1160,1164],multinodecontain:1160,multinodeit:1160,multinodeitem:1160,multinodenest:1160,multinomi:[181,369,500,636,818,1216],multipl:[40,41,893,894,895,1012,1066,1089,1131,1133,1223,1225,1226,1227,1228,1229,1231,1258,1259,1277,1287,1303],multipli:[40,41,1012,1032,1223,1228],multiprocess:[40,41,42,451,719,938,947,1012,1160],must:[40,41,42,43,856,857,858,859,864,865,866,867,868,869,870,872,873,875,876,877,878,880,881,883,884,885,889,890,891,892,893,894,895,897,915,916,922,938,967,968,969,970,982,1012,1015,1027,1029,1031,1039,1068,1070,1082,1093,1141,1146,1149,1160,1216,1221,1293,1297],mutabl:[1204,1206,1213],mutlidevic:[938,947],mutlinod:1160,mw_tm1:[1108,1111,1115],mx_concat:1260,mxn:[856,858,880,881],mxnet:[43,1260,1306],my_func:43,mymodel:1260,name:[43,936,937,1302],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1303],nan:[40,41,43,855,864,865,867,868,869,870,871,875,877,878,893,894,895,1012,1053,1104],nativ:[15,17,18,19,40,41,43,938,954,956,965,966,977,984,987,988,993,1000,1001,1160,1260,1261,1266,1267],native_modul:[1266,1267],native_module_class:[1266,1267],nativearrai:[15,18,19,43,856,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,882,883,884,885,886,887,889,890,891,892,893,894,895,897,915,916,922,938,956,982,983,988,992,998,1003,1004,1012,1013,1014,1015,1017,1018,1019,1020,1022,1024,1025,1026,1027,1028,1030,1031,1032,1033,1036,1037,1038,1039,1041,1042,1043,1044,1046,1047,1051,1053,1054,1055,1062,1063,1064,1065,1067,1068,1069,1070,1073,1074,1075,1078,1079,1080,1081,1082,1087,1089,1090,1093,1095,1096,1098,1099,1100,1101,1103,1104,1105,1106,1107,1160,1204,1206,1213],natur:[864,874,1141,1152,1306],ncdhw:[1241,1246,1247,1277,1282,1283],nchw:[1241,1244,1245,1248,1277,1280,1281,1284],ncw:[1241,1242,1243,1277,1278,1279],ndarrai:[43,397,398,399,400,401,403,404,500,1012,1099],ndhwc:[1241,1246,1247,1277,1282,1283],nearest:[1012,1080],need:[43,1012,1025,1026,1241,1243,1245,1247,1260,1277,1279,1281,1283,1306],neg:[40,41,864,870,880,883,884,885,893,894,895,1223,1228,1230,1233,1235],negative_slop:1268,neither:1160,nest:[15,16,17,18,19,40,41,42,938,960,964,970,1012,1018,1098,1156,1157,1158,1160,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1289,1290,1293,1294,1295,1296,1297,1298],nested_indices_wher:1204,nested_map:[1160,1204],network:[1241,1250,1260,1261,1263,1277,1289,1290,1306],neural:[1241,1260,1263,1277,1302],never:43,new_node_percent_mem:1160,new_node_util:1160,new_node_utils_kei:1160,new_std:[1258,1259,1291,1292],newli:[43,936,937,1012,1022,1023],newlin:[40,41,42],newshap:[1012,1022,1079],next:[860,861,1160,1289,1290,1293,1294,1295,1296,1297,1298],nhwc:[1241,1244,1245,1248,1277,1280,1281,1284],node:[40,41,1204,1205,1212],node_clon:1160,node_dist:1160,node_dist_arrai:1160,node_dist_it:1160,node_in:1160,node_mapp:1160,node_str:1160,node_to_str:1160,node_util:1160,nodedistit:1160,nodedistitem:1160,nodedistnest:1160,nodemanag:[1160,1171],nodemapp:1160,nodemappermultiproc:1160,noinspect:[43,939,989,990,991,1109,1160],non:[40,41,864,876,880,883,893,894,895,936,937,988,1002,1289,1290,1293,1297,1303],none:[40,41,42,43,59,61,64,397,398,400,449,451,452,454,456,463,464,465,466,473,474,475,476,477,478,479,480,481,483,493,494,500,501,856,857,859,860,861,862,880,883,884,885,886,887,891,892,893,894,895,936,937,938,947,948,954,955,980,981,982,983,988,995,996,997,1012,1015,1018,1034,1035,1040,1045,1046,1047,1052,1054,1056,1057,1058,1059,1060,1064,1065,1071,1073,1074,1075,1078,1081,1082,1083,1084,1089,1090,1091,1092,1101,1102,1107,1108,1111,1113,1115,1116,1117,1123,1124,1128,1131,1134,1136,1156,1157,1158,1159,1160,1204,1205,1208,1212,1213,1216,1217,1218,1219,1220,1223,1225,1226,1227,1228,1229,1230,1231,1241,1243,1245,1247,1250,1251,1252,1253,1258,1259,1266,1267,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300],norm:[40,41,880,883,1012,1025,1026,1131,1134,1259,1260,1292,1293,1295],normal:[1216,1219,1258,1259,1291,1292],normalized_idx:[1258,1259],normalized_shap:[1291,1292],notat:[40,41,1223,1224],note:[43,1131,1136],noth:[40,41,1303],notimplementederror:1160,now:[40,41,43,938,983,1012,1013,1160,1260,1277,1288,1289,1290,1302,1303,1306],np_concat:1260,np_finfo:401,ns_tune_step:1160,num:[451,473,474,1012,1064,1065],num_arrai:[40,41],num_arrays_in_memori:1012,num_arrays_on_dev:938,num_band:[1012,1044],num_channel:[1277,1284],num_chunk:1160,num_chunks_floor:1160,num_class:[1216,1217],num_cpu_cor:938,num_gpu:[129,449,938,1160],num_head:[1241,1252,1277,1288],num_kei:[1241,1252,1253],num_lay:[1277,1286],num_or_size_split:[40,41,451,479,1012,1089],num_output:1160,num_queri:[1241,1252,1253],num_sampl:[451,472,500,501,1012,1063,1124,1125,1216,1217],num_task:[1156,1157,1158,1159],number:[40,41,42,855,860,861,862,864,867,880,882,893,894,895,936,937,938,974,975,976,988,999,1003,1004,1012,1015,1024,1028,1041,1044,1051,1054,1063,1064,1065,1068,1072,1078,1089,1096,1100,1104,1106,1156,1157,1158,1159,1160,1216,1217,1221,1223,1225,1226,1227,1229,1231,1241,1252,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1303,1306],numer:[43,864,867,870,871,872,876,897,916,922,1012,1049,1050,1083,1084,1091,1092,1141,1149,1268],numhead:[1241,1252],numpi:[40,41,43,397,398,399,400,401,403,404,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,880,882,1012,1099,1131,1136,1223,1224,1260,1302,1303,1306],nwc:[1241,1242,1243,1277,1278,1279],obj:[40,41],object:[40,41,42,59,401,860,861,938,988,992,1012,1015,1018,1108,1204,1207,1209,1210,1211,1214,1215,1216,1222,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290],object_in:[451,454,1012,1018],observ:1160,obvious:43,occupi:[860,861,862,1012,1081,1082],off:[880,881,1012,1015],offer:1260,offset:[880,881,1258,1259],often:1303,old:[40,41],on_init:[1277,1288,1289,1290],onc:[43,938,982,1160,1216,1217,1260],one:[40,41,43,880,883,884,885,886,887,938,967,968,969,970,982,988,994,1012,1054,1066,1073,1081,1082,1090,1093,1131,1134,1160,1223,1224,1225,1226,1227,1228,1229,1230,1231,1260,1303,1306],one_hot:[136,451,585,719,1012],onearrai:[1012,1041],ones:[40,41,77,213,397,525,658,856,1012,1054,1073,1075,1260],ones_lik:[136,302,451,585,719,1012],ongo:43,onli:[40,41,43,500,864,876,884,885,938,1131,1136,1160,1204,1205,1206,1212,1293,1294,1295,1296,1297,1298,1302,1303],onlin:[43,1260],onto:[938,967,968,983,1160,1204,1208,1213],oom:[938,1160],open:[1012,1015,1216,1220,1260,1306],opencv:1303,oper:[40,41,1012,1021,1036,1037,1038,1064,1065,1094,1108,1111,1113,1115,1116,1117,1138,1139,1140,1241,1242,1243,1244,1245,1246,1247,1248,1250,1260,1261],operand:[40,41,864,865,867,868,869,875,877,878,1223,1224],oppos:[1012,1044],optim:[938,1108,1111,1113,1115,1116,1117,1156,1157,1158,1159,1160,1260,1294,1295,1296,1298,1302,1306],optimizer_upd:1108,option:[15,18,19,40,41,42,43,397,398,400,856,857,859,880,883,884,885,886,887,891,892,893,894,895,936,937,938,947,948,956,960,961,962,963,964,967,968,969,970,977,980,981,982,983,987,988,993,998,1002,1011,1012,1014,1015,1017,1018,1025,1026,1027,1032,1034,1035,1044,1045,1046,1047,1051,1053,1054,1061,1063,1064,1065,1066,1069,1071,1073,1074,1075,1078,1081,1082,1085,1087,1089,1090,1091,1092,1093,1101,1103,1104,1107,1108,1111,1113,1114,1115,1116,1117,1119,1124,1128,1131,1134,1136,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1216,1217,1223,1225,1226,1227,1228,1229,1230,1231,1233,1234,1238,1241,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1303],ord:[880,882,883],order:[40,41,42,43,880,883,884,885,889,890,1108,1111,1113,1115,1116,1117,1131,1134,1156,1157,1158,1299,1300],ordered_node_util_kei:1160,org:1306,organ:43,origin:[40,41,42,1012,1075,1079,1107,1131,1134],other:[40,41,43,897,899,900,905,907,908,912,914,915,916,917,918,920,922,923,924,925,926,927,929,930,931,933,934,935,936,937,1012,1014,1015,1054,1108,1112,1216,1220,1260,1302,1303,1306],other_i:[43,897,916,922],otherwis:[15,16,17,18,19,40,41,864,870,871,880,883,886,887,893,894,895,938,955,988,995,996,997,1012,1021,1101,1102,1105,1108,1114,1119,1123,1156,1157,1158,1160,1223,1225,1226,1227,1229,1231],our:[43,1260,1306],out:[43,500,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,874,875,876,877,878,880,881,883,884,885,886,887,889,890,893,894,895,897,916,1012,1015,1141,1145,1241,1249,1251,1260,1277,1285],out_feat_dim:[1241,1252],out_featur:[1241,1249,1250],out_i:[864,870,871],outdat:1306,outer:[1156,1157,1158,1159],outer_batch_fn:[1156,1157,1158],outer_batch_shap:[1241,1250],outer_cost_fn:[1156,1157,1158],outer_v:[1156,1157,1158],outlin:1303,output:[40,41,43,856,857,859,884,885,938,947,948,982,1012,1015,1023,1045,1054,1078,1096,1108,1112,1141,1146,1160,1216,1218,1219,1220,1241,1243,1245,1247,1249,1251,1252,1253,1260,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288],output_ax:[938,982,1160],output_axi:1160,output_channel:[1277,1278,1279,1280,1281,1282,1283,1286,1287],output_queu:1160,output_shap:[1241,1243,1245,1247,1277,1279,1281,1283],outsid:[1012,1024],over:[40,41,880,883,893,894,895,1131,1134,1216,1220,1223,1225,1226,1227,1229,1231,1258,1259,1291,1292],overal:1303,overflow:[1012,1015],overhead:1303,overrid:[1012,1073,1075,1107],overriden:[1293,1297],overwrit:[40,41,938,982,1160],overwrite_at_key_chain:[40,41],own:[1260,1303,1306],packag:[43,1303],pad:[1012,1028,1044,1106,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],pad_width:[451,1012,1028,1106],page:1260,pair:[1241,1253],parallel:[938,947,948,1160],parallelis:[938,947,948,1160],param:[40,41,42,451,464,465,886,887,891,892,938,982,1012,1013,1046,1047,1073,1074,1160,1289,1290,1302],paramet:[15,16,17,18,19,40,41,42,43,864,873,880,881,882,891,892,897,915,916,922,936,937,938,947,948,954,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,977,980,981,982,983,984,987,988,992,993,994,998,999,1000,1001,1002,1003,1004,1011,1012,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1051,1053,1054,1055,1057,1058,1059,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1074,1075,1078,1079,1080,1081,1082,1083,1084,1085,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1119,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302],parameter:[1216,1219,1220],pardo:1260,pars:[1012,1029],part:[856,858,1108,1111,1113,1115,1116,1117,1141,1145,1260,1289,1290,1303],partial:[40,41,43,1289,1290],particl:1306,particular:[43,1306],pass:[40,41,42,43,938,947,982,988,993,1012,1023,1108,1122,1156,1157,1158,1160,1266,1267,1289,1290,1293,1297,1299,1300],pattern:[40,41,1012,1036,1037,1038],peopl:43,per:[938,1160,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],percent_used_mem_on_dev:938,percent_used_mem_on_nod:1160,percentag:[938,977,1160],perf_count:1160,perform:[40,41,43,893,894,895,938,1012,1017,1032,1036,1037,1038,1057,1058,1059,1063,1064,1065,1108,1111,1113,1115,1116,1117,1124,1125,1156,1157,1158,1159,1160,1204,1209,1210,1223,1225,1226,1227,1228,1229,1230,1231,1233,1238,1241,1249,1251],period:43,permissable_step:1160,permit:43,permut:[500,1012,1095,1101],perpendicular:[1012,1031],person:[43,1260],physci:1306,pickl:[40,41,1160],pickle_filepath:[40,41],pinv:[360,794,1131],pip:1260,pipelin:1302,pkk:1306,pkkm1:1306,pkm1km1:1306,place:[40,41,43,856,857,859,938,983,1012,1041,1045,1057,1058,1059,1160,1293,1294,1295,1296,1297,1298],placehold:[43,1204,1213],pleas:[43,500,1131,1136],point:[43,855,856,857,859,860,861,864,865,867,868,869,875,877,878,880,883,988,1003,1012,1015,1141,1149],popul:[40,41,1216,1217],popular:1306,population_s:[500,501,1216,1217],portabl:[1260,1261],posit:[15,16,17,860,861,864,870,893,894,895,938,960,964,970,1012,1013,1015,1041,1044,1160,1216,1221,1266,1267],possibi:[40,41],possibl:[43,1012,1066,1098,1124,1129,1306],post:[1258,1259],post_shap:[40,41],power:[43,897,922,928,1012,1049,1083,1092,1268],practic:1260,pre:[938,1160,1260],pre_shap:[40,41],precis:[860,861,864,878],pred:[1254,1255,1256,1257],predict:[1254,1255,1256,1257,1306],preprint:1260,present:[40,41],preserv:[40,41,42,884,885,1108,1119],preserve_typ:[40,41,484,487,1108,1119],press:1260,prevent:[43,1108,1110,1111,1115,1160,1293,1294,1295],prevet:43,previou:[1108,1111,1115],previous:[1012,1023],prime:1260,print:[40,41,42,938,978,1012,1076,1260,1302],print_all_arrays_in_memori:1012,print_all_arrays_on_dev:938,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1293,1297],prob:[500,501,1216,1217,1241,1249,1277,1285],probabl:[1216,1217,1241,1249,1277,1285],problem:[43,1306],process:[43,938,947,948,977,987,1012,1071,1160],process_specif:[938,977,987,1160],prod:[40,41,1012,1037],produc:[938,947,948,1160],product:[40,41,1012,1031,1032,1067,1223,1224,1241,1252,1253,1277,1288],profil:[129,296,449,578,711,938,1160],progress:43,project:[1260,1302,1303,1306],promot:[43,864,865,866,868,869,875,877,878,880,883,897,922,1141,1149],prompt:1260,properli:43,properti:[40,41,401,938,950,1160,1289,1290,1293,1294,1295,1296,1298],provid:[40,41,43,884,885,886,887,893,894,895,936,937,938,955,988,995,996,997,1002,1011,1012,1035,1073,1075,1082,1107,1108,1111,1113,1115,1116,1117,1123,1160,1260,1277,1286,1293,1294,1295,1296,1297,1298,1303],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1131,1135],pull:[1260,1261],pure:[40,41,1260,1306],purpos:[43,1306],put:1160,pybroadexcept:1160,pyprotectedmemb:1160,pyshadowingbuiltin:43,pyshadowingnam:[939,989,990,991,1109,1160],python:[40,41,938,977,987,1012,1015,1160,1260],pytorch:[1108,1111,1113,1115,1116,1117,1131,1136,1260,1293,1294,1295,1296,1297,1298,1302,1303,1306],pyunresolvedrefer:1160,quadrant:[1141,1146],qualiti:43,queri:[40,41,897,911,932,938,971,981,1160,1241,1252,1253,1277,1288],query_dim:[1277,1288],query_kei:[40,41],queue:[40,41,42,938,947,948,1012,1077,1085,1160],queue_class:[938,947,948,1160],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1012,1160],quick:[500,1260],quickli:[43,1302],radian:[864,868,877,1141,1142,1144,1146,1154],rai:[1141,1142],rais:[40,41,43,893,894,895,897,922,1012,1021,1049,1083,1090,1092,1102,1160,1289,1290,1293,1297],ram:[938,977,984,987,1160],randint:[181,369,500,636,818,1216],random:[37,40,41,501,1217,1218,1219,1220,1221,1222,1260],random_crop:1124,random_norm:[181,369,500,636,818,1216],random_uniform:[181,369,500,636,818,1216],randomli:[500,1124,1128,1241,1249,1277,1285],rang:[500,1012,1015,1064,1065,1141,1146,1160,1260,1302,1306],rank:[880,883,893,894,895,1012,1028,1103,1106],rate:[1108,1111,1113,1115,1116,1117,1156,1157,1158,1159,1277,1288,1293,1294,1295,1296,1297,1298],rather:[40,41,43,938,982,1012,1015,1061,1108,1114,1160],ratio:[938,1108,1115,1124,1129,1160,1293,1295],raw:[40,41,1131,1136],raw_delta:1160,reach:[43,938,960,964,970,1160,1204,1213],read:[40,41],readi:[1160,1302],real:[1141,1142,1145],realiti:1303,rearrang:[40,41,1012,1036,1038],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1156,1158],receiv:[43,938,947,948,1012,1016,1066,1160,1277,1287],receivess:[938,1160],receivng:[1156,1159],recev:[1156,1157,1158],recognit:1306,recommend:[864,876,1260],rectifi:[1233,1235,1236],recurr:[1241,1251],recurrent_bia:[1241,1251],recurrent_kernel:[1241,1251],recurs:[40,41,1204,1205,1206,1212,1213],redefin:43,reduc:[40,41,886,887,893,894,895,938,982,1012,1037,1131,1136,1160,1223,1225,1226,1227,1228,1229,1230,1231],reduce_max:[40,41,188,374,502,641,825,1223],reduce_mean:[40,41,188,374,502,641,825,1223,1260,1302],reduce_min:[40,41,188,374,502,641,825,1223],reduce_prod:[40,41,188,374,502,641,825,1223],reduce_std:[40,41,374,1223],reduce_sum:[40,41,188,374,502,641,825,1160,1223],reduce_var:[40,41,188,374,502,641,825,1223],reduct:[39,40,41,451,477,478,893,894,895,1012,1037,1081,1082,1224,1225,1226,1227,1228,1229,1230,1231,1260],refactor:43,refer:[43,864,874,893,894,895,1108,1110,1111,1131,1137,1277,1287,1306],reflect:43,reflected_oper:[0,13,14],regard:[938,1160],regardless:[40,41,936,937],register_paramet:1302,reimplement:1306,rel:[880,881,884,885,889,890,1108,1111,1113,1115,1116,1117],rel_slice_obj:1160,relat:43,relev:[1293,1294,1295,1296,1297,1298],relu:[834,1233,1234,1235,1260,1302],remain:[43,1012,1079,1204,1208],remaind:[40,41,1012,1043,1089],remov:[40,41,43,880,881,886,887,1012,1090,1156,1157,1158],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,884,885],rep:[1012,1096],repeat:[40,41,43,302,719,1012,1038,1096,1160,1303],repeated_config_check:[938,1160],repeatedli:[1204,1211],repetit:[40,41,1012,1078,1096],replac:[40,41,43,500,501,1012,1024,1081,1082,1216,1217],repo:[43,1260],repositori:43,repres:[43,864,865,869,988,994,999,1241,1250],represent:[40,41,42,43,855,860,861,862,864,866,938,965,966,988,994,1000,1001,1012,1088,1098,1160],reptil:[1156,1159],reptile_step:1156,request:[1260,1261],requir:[43,864,878,936,937,988,992,1012,1015,1018,1266,1267],resampl:[1012,1063],reserv:43,reshap:[40,41,43,500,719,1012],reshape_lik:[40,41],respect:[864,866,872,873,897,916,1012,1039,1108,1110,1111,1112,1113,1115,1116,1117,1131,1136,1141,1149,1156,1157,1158,1159],respond:43,respons:[43,1160],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,883,886,887,893,894,895,897,915,916,922,938,947,1012,1015,1039,1081,1082,1093,1131,1134,1138,1139,1140,1141,1149,1160,1223,1225,1226,1227,1228,1229,1230,1231,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1260],ret:1160,ret_dict:1160,ret_fn:[938,947,948,1160],retain:[1108,1112],retain_grad:[484,485,1108,1112],retreiv:1160,retrn:[1012,1088],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1156,1157,1158,1159],return_sequ:[1277,1286],return_st:[1277,1286],rev:[1012,1035],revers:[40,41,884,885,1012,1035,1101],review:43,right:[40,41,43],rk_e:1306,robot:1260,ronald:1260,root:[43,864,878],round:[302,451,719,864,867,878,1012,1015,1160],row:[1012,1054,1216,1217],rule:[43,897,922,1012,1015,1141,1149],run:[43,938,947,1108,1110,1111,1115,1156,1157,1158,1159,1160,1260,1261,1277,1288,1289,1290],safe:[938,947,1160],safety_factor:[938,1160],same:[15,16,17,40,41,43,856,858,864,867,880,881,882,884,885,886,887,889,890,938,947,948,982,983,988,992,1012,1013,1027,1042,1043,1046,1047,1073,1075,1080,1081,1082,1093,1107,1108,1114,1119,1141,1145,1156,1157,1158,1160,1223,1224,1241,1242,1243,1244,1245,1246,1247,1248,1260,1277,1278,1279,1280,1281,1282,1283,1284,1302,1306],same_arrai:[40,41],sampl:[1012,1063,1124,1125,1216,1217,1219,1220,1241,1249,1260,1277,1285],satisfi:[1012,1018,1131,1133,1137],save:[40,41,1012,1086,1097,1124,1126,1289,1290],save_dir:[449,450,938,953,1160],save_weight:[1289,1290],scalar:[880,883,1012,1024,1073,1100,1104],scale:[938,980,981,1108,1116,1160,1241,1249,1252,1253,1258,1259,1277,1285,1288,1293,1296],scaled_dot_product_attent:1241,scatter:[1012,1073,1081,1082],scatter_flat:[136,302,451,585,719,1012],scatter_nd:[136,302,451,585,719,1012],scene:[1108,1111,1113,1115,1116,1117],schemat:1260,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[886,887],second:[40,41,864,866,872,873,880,881,938,969,1012,1019,1031,1039,1077,1085,1095,1108,1110,1111,1115,1156,1158,1160,1293,1294,1295],secondli:1306,sector:[864,865],see:[43,59,401,449,450,500,864,866,872,880,883,893,894,895,897,915,916,922,938,950,951,952,953,988,1012,1015,1064,1065,1108,1141,1149,1260,1268,1270,1271,1273,1274,1276],seed:[40,41,181,500,818,1216],seed_valu:[40,41,500,1216,1221],seem:1260,seen_set:[1012,1052],select:[1012,1018,1090,1303,1306],self:[40,41,43,59,401,449,450,897,916,922,938,950,951,952,953,988,1108,1160,1260,1268,1270,1271,1273,1274,1276,1293,1297,1302,1306],self_i:[897,916],sent:1160,seper:[43,1012,1044],seq:[40,41,42,1223,1224,1289,1290],sequenc:[15,16,17,40,41,42,43,500,936,937,938,947,948,957,958,959,960,961,962,963,964,967,968,982,988,992,1012,1015,1018,1020,1022,1027,1028,1054,1066,1069,1074,1078,1079,1082,1089,1093,1096,1101,1106,1108,1112,1124,1128,1129,1131,1134,1160,1204,1215,1216,1218,1220,1223,1225,1226,1227,1228,1229,1230,1231,1241,1242,1243,1244,1245,1246,1247,1248,1258,1259,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1286,1289,1290,1291,1292,1293,1297,1299,1300],sequenti:1260,seri:43,set:[15,18,19,40,41,886,887,889,890,938,967,968,980,981,982,1012,1014,1034,1054,1083,1084,1085,1086,1108,1111,1113,1114,1115,1116,1117,1131,1134,1160,1204,1205,1212,1214,1215,1216,1217,1221,1223,1225,1226,1227,1228,1229,1230,1231,1260,1277,1286,1293,1294,1295,1296,1297,1298,1303,1306],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:938,set_default_dtyp:988,set_default_float_dtyp:988,set_default_int_dtyp:988,set_default_nod:1160,set_exception_debug_mod:44,set_framework:[40,41,43,59,1160,1260,1302,1303,1306],set_ivy_backend:[40,41],set_min_bas:1012,set_min_denomin:1012,set_nest_at_index:1204,set_nest_at_indic:1204,set_queue_timeout:1012,set_split_factor:[938,1160],set_stat:[1293,1294,1295,1296,1297,1298],set_tmp_dir:1012,set_with_grad:1108,setter:1160,sever:1306,sgd:[1260,1293],shape0:1160,shape:[40,41,43,397,398,400,451,463,478,500,719,856,857,858,859,880,881,884,885,886,887,889,890,938,950,988,992,1012,1013,1022,1027,1028,1041,1042,1043,1045,1047,1051,1054,1073,1074,1075,1078,1079,1080,1081,1082,1088,1090,1093,1106,1107,1124,1128,1131,1133,1136,1141,1145,1146,1160,1216,1218,1219,1220,1223,1224,1241,1243,1245,1247,1277,1279,1280,1281,1282,1283,1284,1291,1292],shape_slic:[40,41],shape_to_tupl:1012,share:[40,41,1260,1303],shift:1160,should:[40,41,42,43,500,856,858,864,865,866,867,868,869,870,871,872,875,876,877,878,880,881,883,886,887,897,915,916,922,936,937,938,1012,1022,1023,1029,1073,1079,1108,1111,1113,1115,1116,1117,1141,1149,1160,1223,1224,1260],show:[40,41,1260,1306],show_mod_in_top_mod:[1289,1290],show_structur:[1289,1290],show_sub_contain:[40,41],show_v:[1289,1290],show_v_in_top_v:[1289,1290],shown:[40,41],shp:1160,shuffl:[40,41,181,500,818,1216],shuffle_h5_fil:[40,41],side:43,sigmoid:[834,1233,1260,1302],signatur:[43,59,401,449,450,451,484,489,493,497,498,500,938,950,951,952,953,988,1108,1268,1270,1271,1273,1274,1276],signific:1306,similar:[43,1241,1252,1277,1288],similarli:[1131,1136],simpl:[43,1012,1040,1260,1303,1306],simpler:43,simplest:1303,simpli:[40,41,43,1260,1303,1306],simultan:1260,sin:[86,222,406,534,667,864,1012,1044,1141,1154,1303],sinco:1303,sine:[864,865,877,1141,1144,1153],singl:[40,41,936,937,938,947,948,967,968,969,970,1012,1090,1100,1104,1124,1129,1160,1216,1219,1220,1223,1225,1226,1227,1228,1229,1230,1231,1260,1303,1306],singleton:[880,883,893,894,895],singular:[880,882],sinh:[804,1141],siren:[1260,1268],situat:43,size:[40,41,42,451,477,880,881,882,886,887,893,894,895,938,961,962,963,964,980,981,982,1012,1015,1022,1064,1065,1081,1089,1124,1128,1131,1134,1160,1216,1217,1219,1220,1223,1225,1226,1227,1228,1229,1230,1231,1277,1278,1279],size_ordered_arrai:[40,41],skew:[1131,1137],skinv:1306,skip:[40,41],slice:[40,41,1012,1046,1047,1160,1204,1211],slice_kei:[40,41],slice_obj:[40,41,1160],slice_via_kei:[40,41],slide:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],slope:[1233,1235],small:[1254,1255,1256,1257,1258,1259,1260,1291,1292,1303],smaller:[1012,1024],smallest:[40,41,860,861,862,864,867,1012,1017],smallest_norm:[401,860,861],softmax:[197,511,834,1233,1241,1252,1253],softplu:[834,1233],solut:43,solv:1306,some:[40,41,43,1012,1015,1108,1110,1111,1113,1115,1116,1117,1122,1241,1249,1260,1277,1285,1303,1306],some_backend:43,some_namespac:43,someth:[43,1306],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,880,882,890,1160],sort_by_kei:[40,41],sorting_funct:[889,890],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,397,398,399,400,401,403,404,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,499,500,501,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,889,890,891,892,893,894,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,942,943,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1304,1305,1306],space:[1012,1015,1044,1064,1065],spars:[1254,1257],sparse_cross_entropi:1254,spawn:[1012,1071],special:[43,864,865,867,868,869,875,877,878],specif:[40,41,43,864,876,938,980,1012,1029,1036,1037,1038,1071,1156,1157,1158,1159,1160,1216,1222,1260,1289,1290,1302,1303],specifc:[1216,1217],specifi:[40,41,43,856,857,858,859,880,881,883,884,885,886,887,889,890,893,894,895,938,957,958,959,960,961,962,963,964,967,968,972,974,978,981,982,983,988,992,994,1012,1015,1017,1018,1024,1027,1028,1045,1046,1047,1053,1064,1065,1093,1103,1106,1131,1134,1160,1204,1209,1210,1214,1215,1223,1224,1225,1226,1227,1228,1229,1230,1231],sphinx:43,split:[40,41,136,302,451,585,719,938,947,961,962,963,964,980,981,982,1012,1066,1160],split_arg:1160,split_factor:[938,947,1160],split_func_cal:[938,1160],split_siz:1160,spread:[938,970,1160],sqrt:[86,222,406,534,667,864,880,883],squar:[864,878,1012,1054,1131,1133],squeez:[136,302,451,585,719,1012],stabil:[889,890,1012,1091,1092],stabl:[889,890,1012,1049,1050,1083,1084,1091,1092],stable_divid:1012,stable_pow:1012,stack:[40,41,302,719,856,858,880,881,1012,1124,1129,1204,1205,1212,1277,1286],stack_imag:[171,356,489,626,790,1124],stacked_dim_s:1160,stage:43,standard:[40,41,860,861,1216,1219,1223,1229,1258,1259,1260,1261,1291,1292],start:[40,41,43,449,450,451,452,473,474,500,938,953,1012,1015,1064,1065,1160,1260,1303],starting_index:[40,41],starting_split_factor:[938,1160],state:[1160,1241,1251,1260,1263,1264,1265,1266,1267,1268,1270,1271,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302],statement:1303,static_argnam:[451,456,936,937],static_argnum:[451,456,936,937],statistical_funct:[891,892],std:[500,1216,1219],step:[40,41,451,452,938,1012,1015,1064,1065,1108,1110,1111,1113,1115,1116,1117,1156,1157,1158,1159,1160,1260,1293,1294,1295,1296,1297,1298,1302,1306],stephen:1260,stick:1260,still:[40,41,43],stochast:[1293,1298],stop:[40,41,449,450,451,452,473,474,938,953,982,1012,1015,1064,1065,1108,1111,1113,1115,1116,1117,1119,1156,1157,1158,1159,1160,1293,1294,1295,1296,1297,1298],stop_gradi:[40,41,351,484,621,784,938,982,1108,1111,1113,1115,1116,1117,1156,1157,1158,1159,1160,1293,1294,1295,1296,1297,1298],stopiter:1160,store:[40,41,1012,1044,1089,1108,1122,1289,1290],store_var:[1289,1290],str:[15,16,17,40,41,42,43,397,398,400,401,403,404,860,861,862,936,937,938,947,948,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,982,988,993,994,999,1000,1001,1002,1003,1004,1011,1012,1018,1034,1036,1037,1038,1069,1071,1074,1081,1082,1131,1134,1136,1156,1157,1158,1159,1160,1204,1208,1223,1224,1266,1267,1277,1288,1289,1290],str_to_nod:1160,straight:1303,strength:[1260,1306],stride:[1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],string:[40,41,43,938,954,956,965,966,971,977,983,984,987,988,992,998,1000,1001,1002,1011,1012,1015,1018,1034,1054,1074,1075,1107,1160,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284,1289,1290],structur:[40,41,42,43,1012,1029],structural_diff:[40,41],style:43,sub:[40,41,43,880,881,938,961,962,967,968,969,970,1012,1089,1156,1157,1158,1159,1160],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1160,sub_mod:[1289,1290],sub_modul:[1299,1300],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1260,1261,1291,1292,1299,1300],subsequ:43,subset:43,substr:[40,41],suffici:[1131,1136],suggest:1260,suitabl:[1124,1129],sum:[40,41,451,477,478,880,883,938,967,968,969,970,982,1012,1033,1037,1081,1082,1160,1223,1224,1230],summat:[40,41,1223,1224],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,110,113,115,117,118,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,172,173,174,176,177,178,182,183,184,185,186,187,189,190,191,192,193,194,195,198,200,201,203,204,205,206,207,208,209,214,215,216,218,219,220,223,224,225,226,227,228,229,230,233,234,235,237,239,242,245,246,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,357,358,359,361,362,363,364,366,367,370,371,372,373,375,376,377,378,379,380,381,382,385,387,388,389,390,391,392,393,398,399,400,402,403,404,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,424,425,426,428,430,433,435,437,438,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,485,486,487,488,490,491,492,494,495,496,499,501,503,504,505,506,507,508,509,512,513,515,516,517,518,519,520,521,526,527,528,530,531,532,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,552,553,554,556,558,561,563,565,566,574,579,580,581,582,583,584,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,627,628,629,631,632,633,637,638,639,640,642,643,644,645,646,647,648,652,653,654,659,660,661,663,664,665,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,685,686,687,689,691,694,696,698,699,707,712,713,714,715,716,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,785,786,787,788,789,791,792,793,795,796,797,798,799,800,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,828,829,830,831,832,835,836,837,838,839,840,841,843,844,846,847,848,849,850,851,852,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,885,887,890,892,894,895,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1259,1260,1264,1265,1267,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1305,1306],supports_inplac:1012,suppos:1306,sure:43,svd:[103,232,423,551,684,880],swap:[40,41,1012,1095],swapax:[40,41,585,719,1012,1306],symmetr:[1131,1137],syntax:[449,451,484,489,493,497,498,500],tab:1260,take:[43,1012,1063],taken:[43,880,881,1223,1225,1226,1227,1229,1231],tan:[804,1141,1145],tangent:[1141,1145,1146,1147,1154,1155,1233,1240],tanh:[804,834,1141,1233],target:[40,41,938,954,957,958,959,960,961,962,963,964,967,968,969,970,983,1160,1260],target_dict:[40,41],task:[43,1156,1157,1158,1159],team:[43,1306],templat:1260,temporari:[1012,1086,1097],tensor:[40,41,43,451,477,478,938,956,988,998,1012,1015,1017,1022,1064,1065,1068,1070,1073,1074,1075,1079,1081,1082,1089,1107,1160,1216,1217,1218,1241,1249,1251,1260,1277,1285,1287,1293,1294,1295,1296,1297,1298,1302,1303],tensorflow:[43,1131,1136,1241,1243,1245,1247,1260,1277,1279,1281,1283,1303,1306],term:[40,41,43,1241,1251,1260,1277,1287],termcolor:[40,41,42],termin:[40,41,42,1160],test:[43,864,870,871,893,894,895,988,1003,1004],test_array_api:43,tf_concat:1260,than:[40,41,43,860,861,864,867,875,878,880,883,884,885,938,982,1012,1015,1024,1042,1061,1068,1090,1093,1108,1114,1160,1216,1220,1260,1303],thei:[40,41,43,1141,1146,1156,1157,1158,1216,1217,1260,1299,1300,1303],them:[1260,1306],themselv:[1204,1205],therefor:43,thi:[40,41,42,43,864,876,886,887,938,960,964,970,977,982,987,1012,1015,1044,1077,1079,1085,1108,1111,1113,1114,1115,1116,1117,1122,1131,1134,1160,1204,1208,1213,1223,1225,1226,1227,1228,1229,1230,1231,1241,1250,1260,1289,1290,1293,1294,1295,1296,1297,1298,1302,1303,1306],thing:[43,1260],those:[40,41,43,880,882,1012,1024,1108,1122,1160],though:43,thought:43,threshold:[1012,1068,1070],through:[40,41,43],tick:43,tickbox:43,tile:[302,585,719,1012],time:[43,1012,1096,1108,1111,1115,1156,1157,1158,1159,1160,1216,1217,1241,1251,1277,1288,1289,1290,1306],timeout:[40,41,42,938,947,948,1012,1077,1085,1160],timestep:[1241,1251,1277,1286],titl:[43,1260],tmp_dir:1012,tmp_dr:[1012,1086],to_appli:[40,41],to_clon:[938,1160],to_dev:[40,41,129,296,449,578,711,938],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[938,1160],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1260],to_ivy_modul:[199,842,1260,1266],to_json:[40,41],to_kv_fn:[1241,1252],to_kv_v:[1241,1252],to_list:[40,41,451,719,1012],to_multi_dev:[40,41],to_mut:[1204,1206,1213],to_n:[15,40,41,1260],to_nod:1160,to_numpi:[40,41,451,719,1012,1260,1302],to_out_fn:[1241,1252],to_out_v:[1241,1252],to_q_fn:[1241,1252],to_q_v:[1241,1252],to_raw:[40,41],to_scalar:[451,719,1012],todo:[1160,1260,1261],togeth:[40,41,1299,1300],tool:[1260,1303],top_mod:[1289,1290],topic:1306,torch:[43,936,937,1260,1302,1303,1306],torch_concat:1260,torchfcmodel:1302,total:[40,41,42,938,984,1160],total_mem_on_dev:938,total_mem_on_nod:1160,tpu:[938,985,1160],tpu_is_avail:[449,578,711,938,1160],tpye:[988,999],trace:[40,41,1012,1061],track:[43,938,1160,1204,1213,1289,1290],track_submod_call_ord:[1289,1290],track_submod_ret:[1289,1290],trail:[1291,1292],train:[1108,1110,1111,1115,1260,1261],trainabl:[1108,1114,1260,1261,1266,1267,1289,1290,1299],trainer:1260,tran:1306,transform:[1241,1249,1250],transpos:[40,41,136,302,451,719,938,969,1012,1160,1241,1243,1245,1247,1277,1279,1281,1283],travers:[15,18,19,40,41,1204,1213],treat:[40,41,936,937],tri:[40,41],triangular:[856,858],trigonometr:[1141,1142,1145],tril:[77,213,397,525,658,856],trim_kei:[40,41],trust:[1108,1115,1293,1295],truth:[864,872,873,897,915,916,1012,1039,1138,1139,1140],try_else_non:1012,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[938,1160],tune_dev_alloc:938,tune_dev_split:938,tune_node_alloc:1160,tune_node_split:1160,tune_step:[938,1160],tupl:[15,16,17,18,19,40,41,43,397,398,400,856,857,859,880,882,883,884,885,891,892,893,894,895,936,937,1012,1028,1044,1045,1088,1106,1160,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1218,1223,1225,1226,1227,1228,1229,1230,1231],tutori:43,two:[40,41,856,858,880,881,882,1012,1015,1019,1031,1067,1095,1131,1134],type:[15,18,40,41,42,43,59,403,404,449,450,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,881,883,884,885,889,890,893,894,895,897,915,916,922,938,950,951,952,953,965,966,970,982,988,992,993,994,998,999,1000,1001,1002,1003,1004,1011,1012,1013,1015,1018,1027,1029,1039,1042,1043,1045,1054,1061,1073,1074,1075,1080,1094,1104,1107,1108,1114,1119,1141,1149,1160,1260,1268,1270,1271,1273,1274,1276,1289,1290,1303],types_to_iteratively_nest:[40,41,42],uint8:[1124,1126,1130],uint8_img_to_float_img:1124,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[864,866],underwai:43,unecessari:43,unfairli:43,unif:1160,unifi:[40,41,938,967,968,969,970,982,1160,1260],uniform:[40,41,1216,1217,1219,1220,1268,1270,1271,1274,1275],uniformli:[1216,1218,1220],unify_arrai:1160,unify_it:1160,unify_nest:1160,union:[15,18,19,40,41,43,397,398,400,401,403,404,856,857,858,859,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,882,883,884,885,886,887,889,890,891,892,893,894,895,897,915,916,922,936,937,938,956,961,962,963,964,982,983,988,992,993,994,998,999,1000,1001,1002,1003,1004,1011,1012,1013,1014,1015,1017,1018,1019,1020,1022,1024,1025,1026,1027,1028,1030,1031,1032,1033,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1051,1053,1054,1055,1062,1063,1064,1065,1067,1068,1069,1070,1073,1074,1075,1078,1079,1080,1081,1082,1087,1088,1089,1090,1093,1095,1096,1098,1099,1100,1101,1103,1104,1105,1106,1107,1160,1204,1205,1206,1212,1213],uniqu:[938,947,948,1156,1157,1158,1159,1160,1204,1208],unique_kwarg:1160,unit:[43,938,1141,1142,1144,1160,1233,1234,1235,1236],unitari:[880,882],unless:[1012,1073,1075,1107],unlik:[938,1160],unnorm:[1216,1217],unpack:[1012,1103],unrol:[1241,1251],unset:1303,unset_debug_mod:44,unset_default_devic:938,unset_default_dtyp:988,unset_default_float_dtyp:988,unset_default_int_dtyp:988,unset_framework:[59,1303],unset_with_grad:1108,unstack:[40,41,136,302,451,585,719,1012],until:43,unus:[936,937],updat:[40,41,451,477,478,938,947,1012,1059,1081,1082,1108,1110,1111,1113,1115,1116,1117,1156,1157,1158,1160,1204,1209,1210,1214,1215,1241,1251,1260,1261,1266,1267,1293,1294,1295,1296,1297,1298,1303,1306],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1216,1220],upper_depth:[1289,1290],upstream:43,usabl:[1260,1306],usag:[938,982,1160],use:[40,41,42,43,500,938,947,948,973,985,1012,1078,1091,1092,1131,1136,1160,1241,1252,1258,1259,1260,1291,1292,1303,1306],used:[40,41,43,500,880,881,938,947,977,980,981,987,988,999,1012,1049,1050,1066,1075,1081,1082,1083,1084,1107,1108,1115,1116,1131,1134,1156,1157,1158,1159,1160,1204,1213,1277,1288,1293,1295,1296,1302,1303],used_dev:[938,947],used_mem_on_dev:938,used_mem_on_nod:1160,used_node_str:1160,used_node_strs_dict:1160,useful:[40,41,938,982,1160,1241,1250,1260,1303],user:[1260,1277,1288,1289,1290,1303,1306],uses:1260,using:[40,41,43,1108,1110,1111,1204,1207,1211,1223,1224,1241,1249,1253,1260,1277,1285,1302,1303,1306],util:[938,971,1160],utility_funct:[893,894,895],v_with_top_v_key_chain:[1289,1290],val:[40,41,451,468,469,470,897,932,1012,1057,1058,1059,1083,1084],valid:[893,894,895,988,993,1012,1091,1092,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],valid_dtyp:988,valu:[40,41,451,864,867,872,873,880,882,883,886,887,889,890,891,892,897,915,916,938,950,981,982,1012,1013,1015,1017,1024,1025,1026,1028,1029,1035,1039,1044,1045,1046,1047,1062,1064,1065,1068,1070,1077,1078,1079,1080,1081,1082,1083,1084,1085,1101,1104,1105,1106,1108,1112,1115,1124,1130,1138,1139,1140,1141,1150,1151,1152,1156,1157,1158,1160,1204,1208,1209,1210,1214,1215,1216,1219,1220,1223,1225,1227,1241,1252,1253,1258,1259,1277,1288,1291,1292,1293,1295],value_is_nan:1012,vanilla:[1156,1158],var_shap:1268,variabl:[15,16,17,18,19,40,41,351,484,621,784,1012,1021,1057,1058,1059,1060,1061,1094,1108,1111,1112,1113,1114,1115,1116,1117,1119,1122,1156,1157,1158,1159,1241,1252,1258,1259,1266,1267,1268,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300],variable_data:[484,784,1108],varianc:[40,41,1223,1231,1306],varieti:1303,variou:[43,1260],vector:[40,41,493,496,880,882,883,1012,1026,1031,1131,1137,1241,1250,1277,1287],vector_norm:[40,41,103,232,423,551,684,880],vector_to_skew_symmetric_matrix:[175,360,493,630,794,1131],verbos:1305,veri:[43,1260],verifi:43,version:43,via:[1204,1205,1212,1303],view:[1124,1129],vision:1260,visual:1303,volum:[1241,1246],vw_tm1:[1108,1111,1115],wai:[1303,1306],wait:[40,41,42,43],want:[43,1260,1303,1306],warn:[59,66,67,68,69,70],warp:[489,490,1124,1125],watch:1302,websit:43,weight:[1108,1110,1111,1113,1115,1116,1117,1241,1250,1251,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290,1293,1295,1296],weight_initi:[1277,1278,1279,1280,1281,1282,1283,1284,1286,1287],weights_path:[1289,1290],well:[40,41,1012,1053],were:[40,41,1160],what:[43,1260],when:[40,41,42,43,880,882,938,1012,1023,1092,1105,1160,1260,1289,1290,1303,1306],where:[40,41,43,302,451,719,864,874,880,882,893,894,895,897,922,1012,1015,1022,1024,1028,1041,1055,1062,1073,1106,1204,1205,1212,1216,1217],wherea:43,wherebi:[1204,1213],whether:[15,18,19,40,41,42,864,871,893,894,895,936,937,938,956,969,973,977,982,985,987,988,998,1002,1003,1004,1011,1012,1014,1019,1020,1032,1035,1040,1044,1051,1053,1056,1060,1061,1066,1087,1094,1103,1104,1108,1111,1112,1113,1114,1115,1116,1117,1119,1156,1157,1158,1159,1160,1204,1205,1206,1208,1212,1213,1216,1217,1233,1234,1241,1249,1260,1266,1267,1277,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],which:[40,41,42,43,500,856,857,858,859,860,861,862,880,881,883,884,885,886,887,889,890,891,892,893,894,895,936,937,938,947,948,956,961,962,963,964,967,968,969,970,972,974,978,980,981,982,988,993,998,1002,1011,1012,1015,1018,1027,1029,1031,1032,1033,1035,1045,1046,1047,1048,1054,1055,1063,1064,1065,1072,1073,1074,1075,1076,1078,1081,1082,1089,1093,1103,1105,1107,1108,1111,1112,1113,1115,1116,1117,1119,1121,1122,1124,1126,1131,1134,1141,1146,1160,1204,1208,1209,1210,1214,1215,1216,1217,1218,1219,1220,1223,1225,1226,1227,1228,1229,1230,1231,1233,1238,1241,1252,1253,1260,1266,1267,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1299,1300,1302,1303],whilst:43,whitespac:[40,41,42],who:43,whose:[43,856,858,864,865,868,869,877,880,881,884,885,897,915,922,1012,1018,1023,1223,1224,1225,1226,1227,1229,1231],why:[1260,1261],width:[1124,1129],wiki:1306,wikipedia:1306,window:[1124,1129,1241,1242,1243,1244,1245,1246,1247,1248,1277,1278,1279,1280,1281,1282,1283,1284],wise:[40,41,43,864,866,872,873,876,897,915,916,922,1012,1024,1039,1042,1043,1068,1070,1080,1108,1111,1113,1115,1117,1138,1139,1140,1141,1142,1144,1145,1146,1149,1150,1151,1152,1154,1233,1234,1235,1236,1237,1238,1239,1240],wish:1303,with_bia:[1277,1287],with_cal:[1012,1035],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1108,1118],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1160,with_partial_v:[1289,1290],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,451,479,1012,1089,1160],with_to_kv_fn:[1277,1288],with_to_out_fn:[1277,1288],with_to_q_fn:[1277,1288],within:[15,18,19,43,880,882,1012,1015,1216,1220],without:[40,41,43,1012,1077,1079,1085,1204,1206,1303],wonder:1260,word:[15,16,17,1012,1015,1216,1220,1266,1267],work:[43,1302],worker:[938,947,948,1160],worker_class:[938,947,948,1160],worker_kwarg:1160,would:[43,1233,1238,1260,1303,1306],wrap:[15,40,41,42,43,449,451,484,489,493,497,498,500,1012,1023,1108,1122,1260],wrapper:43,write:[40,41,43,1260,1261,1306],written:[43,1260,1306],ws_new:[1108,1111,1113,1115,1116,1117],x1_i:[864,866,872,873,1012,1039,1141,1149],x2_i:[864,866,872,873,1012,1039,1141,1149],x_feat_dim:[1241,1252],x_i:[864,865,867,868,869,870,871,875,876,877,878],x_in:[1260,1302],x_inv:[1131,1133],x_max:[451,1012,1024],x_min:[451,1012,1024],x_sub:1160,xkk:1306,xkkm1:1306,xkm1km1:1306,xs0:1160,xs_t:1160,year:[1260,1306],yet:[1204,1213,1306],yield:[1012,1105],you:[43,1260,1302,1303,1306],your:[1260,1261,1302,1303,1306],your_awesome_project:1303,yourself:[43,1260],yourslef:43,youtub:43,zero:[40,41,77,213,397,525,658,856,858,864,876,880,883,893,894,895,1012,1028,1073,1075,1081,1082,1106,1107,1108,1110,1111,1115,1116,1241,1249,1260,1268,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1293,1294,1295,1296],zero_pad:[302,451,585,719,1012],zeros_lik:[136,302,451,585,719,1012],zip:1160,zk_e:1306},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1035,"function":[77,81,86,102,107,109,111,112,114,116,213,217,222,231,236,238,240,241,243,244,397,401,406,422,427,429,431,432,434,436,525,529,534,550,555,557,559,560,562,564,658,662,667,683,688,690,692,693,695,697,856,860,864,879,884,886,888,889,891,893],Ones:1273,Using:1303,abs:[303,586,720,1013],aco:[805,1142],acosh:[806,1143],activ:[197,384,511,650,834,1233,1263],adam:1294,adam_step:1110,adam_upd:1111,algebra:[103,175,232,360,423,493,551,630,684,794,880],all:[117,245,437,565,698,894],all_equ:1014,all_nested_indic:1205,ani:[118,246,438,566,699,895],api:[0,43,75,120,211,248,395,440,523,568,656,701,854],arang:[137,304,452,587,721,1015],arg_nam:1016,argmax:[110,239,430,558,691,887],argmin:[138,453,588,722,1017],args_to_ivi:16,args_to_n:17,argsort:[113,242,433,561,694,890],arithmet:[1,121,249,441,569,702],arrai:[0,3,43,75,119,120,122,139,211,247,248,250,257,305,395,439,440,442,454,523,567,568,570,589,656,700,701,703,723,854,897,1018],array_equ:[306,724,1019],arrays_equ:1020,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[807,1144],asinh:[87,407,535,668,865],assert_supports_inplac:1021,atan2:[809,1146],atan:[808,1145],atanh:[810,1147],attribut:[5,123,251,443,571,704],backend:[43,73],bilinear_resampl:[172,357,490,627,791,1125],binary_cross_entropi:1255,bitwis:[7,124,252,444,572,705],bitwise_and:[88,223,408,536,669,866],broadcast_to:[307,725,1022],builder:51,builtin:[119,247,257,439,567,700,897],builtin_ab:[258,898],builtin_add:[259,899],builtin_and:[260,900],builtin_bool:[261,901],builtin_contain:[262,902],builtin_deepcopi:[263,903],builtin_dir:[264,904],builtin_eq:[265,905],builtin_float:[266,906],builtin_floordiv:[267,907],builtin_g:[268,908],builtin_getattr:[269,909],builtin_getattribut:[270,910],builtin_getitem:[271,911],builtin_gt:[272,912],builtin_int:[273,913],builtin_invert:[274,914],builtin_l:[275,915],builtin_lt:[276,574,707,916],builtin_mul:[277,917],builtin_n:[278,918],builtin_neg:[279,919],builtin_or:[280,920],builtin_po:[281,921],builtin_pow:[282,922],builtin_radd:[283,923],builtin_rand:[284,924],builtin_rfloordiv:[285,925],builtin_rmul:[286,926],builtin_ror:[287,927],builtin_rpow:[288,928],builtin_rsub:[289,929],builtin_rtruediv:[290,930],builtin_rxor:[291,931],builtin_setitem:[292,932],builtin_sub:[293,933],builtin_truediv:[294,934],builtin_xor:[295,935],cache_fn:1023,cast:[140,308,455,590,726,992],ceil:[89,224,409,537,670,867],choleski:[795,1132],choose_random_framework:61,citat:1260,clear_framework_stack:62,clear_mem_on_dev:[713,954],clip:[309,727,1024],clip_matrix_norm:1025,clip_vector_norm:1026,clone:1175,clone_arrai:1176,clone_it:1177,clone_nest:1178,clonedit:1162,cloneditem:1161,clonednest:1163,closest_valid_dtyp:993,code:1306,comparison:[9,125,253,445,573,706],compil:[310,456,728,936,937],concaten:[141,311,457,591,729,1027],constant:[76,212,396,524,657,855],constant_pad:[312,592,730,1028],contain:[40,41],container_typ:[731,1029],content:1260,contribut:43,conv1d:[203,387,515,846,1242,1278],conv1d_transpos:[204,388,516,847,1243],conv1dtranspos:1279,conv2d:[205,389,517,652,848,1244,1280],conv2d_transpos:[206,390,518,849,1245],conv2dtranspos:1281,conv3d:[207,391,519,653,850,1246,1282],conv3d_transpos:[208,392,520,851,1247],conv3dtranspos:1283,convers:15,convert:[199,842,1266],convert_dtyp:994,copy_arrai:[732,1030],copy_nest:1206,core:[128,256,448,577,710,896],cos:[90,410,538,671,868],cosh:[91,411,539,672,811,869,1148],cprint:1305,creat:43,creation:[77,213,397,525,658,856],cross:[313,733,1031],cross_entropi:1256,cumprod:[142,314,458,734,1032],cumsum:[735,1033],current_framework:63,current_framework_str:[736,1034],data:[81,85,217,221,401,405,529,533,662,666,860,863],debug_mod:45,debugg:44,default_devic:955,default_dtyp:995,default_float_dtyp:996,default_int_dtyp:997,default_nod:1179,depthwise_conv2d:[209,393,521,654,852,1248],depthwiseconv2d:1284,design:43,dev:[131,298,580,714,956],dev_clon:957,dev_clone_arrai:958,dev_clone_it:959,dev_clone_nest:960,dev_dist:961,dev_dist_arrai:962,dev_dist_it:963,dev_dist_nest:964,dev_from_str:[132,299,581,715,965],dev_to_str:[133,300,582,716,966],dev_unifi:967,dev_unify_arrai:968,dev_unify_it:969,dev_unify_nest:970,dev_util:971,devclonedit:941,devcloneditem:940,devclonednest:942,devdistit:944,devdistitem:943,devdistnest:945,devic:[20,129,296,449,578,711,938],devmapp:947,devmappermultiproc:948,diagon:[104,233,424,552,685,881],distribute_nest:1180,divid:1149,document:1260,dropout:[1249,1285],dtype:[143,315,459,593,737,988,998],dtype_bit:[144,316,460,594,738,999],dtype_from_str:[145,317,461,595,739,1000],dtype_to_str:[146,318,462,596,740,1001],ecosystem:52,einops_rearrang:1036,einops_reduc:1037,einops_repeat:1038,einsum:[189,375,503,642,826,1224],elementwis:[86,222,406,534,667,864],equal:[92,412,540,673,1039],erf:[499,812,1150],execute_with_gradi:[169,352,485,622,785,1112],exist:1040,exp:[813,1151],expand_dim:[319,741,1041],finfo:[83,219,403,531,664,861],firstlayersiren:1270,flip:[108,237,428,556,689,885],float_img_to_uint8_img:1126,floor:[320,742,1042],floormod:[321,743,1043],fomaml_step:1157,fork:43,fourier_encod:1044,framework:59,full:[147,322,463,597,744,1045],func:72,gather:[148,323,464,598,745,1046],gather_nd:[149,324,465,599,746,1047],geglu:1264,gelu:[385,512,835,1234,1265],gener:[22,136,302,451,585,719,1012],get_all_arrays_in_memori:1048,get_all_arrays_on_dev:972,get_framework:64,get_min_bas:1049,get_min_denomin:1050,get_num_dim:[747,1051],get_referrers_recurs:1052,glorotuniform:1271,gpu_is_avail:[973,1181],gradient:[24,168,351,484,621,784,1108],gradient_descent_upd:1113,gradient_imag:[173,358,491,628,792,1127],gym:53,handler:59,has_nan:1053,ident:[150,325,466,600,748,1054],iinfo:[84,220,404,532,665,862],imag:[26,171,356,489,626,790,1124],index_nest:1207,indices_wher:[151,326,467,749,1055],initi:1268,inplac:[11,126,254,446,575,708],inplace_arrays_support:1056,inplace_decr:[152,327,468,601,750,1057],inplace_incr:[153,328,469,602,751,1058],inplace_upd:[154,329,470,603,752,1059],inplace_variables_support:1060,inv:[796,1133],invalid_dtyp:1002,is_arrai:[155,330,471,604,753,1061],is_float_dtyp:1003,is_int_dtyp:1004,is_vari:[170,353,486,623,786,1114],isfinit:[93,225,413,541,674,870],isinf:[331,605,754,1062],isnan:[94,226,414,542,675,871],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,853,1302,1303,1306],ivymodul:[200,843],jax:74,keep:43,lamb:1295,lamb_upd:1115,lar:1296,lars_upd:1116,layer:[202,386,514,651,845,1241,1277],layer_norm:1259,layernorm:1292,leaky_relu:[836,1235],less:[95,227,415,543,676,872],less_equ:[96,416,544,677,873],linalg:[28,1131],linear:[103,175,232,360,423,493,551,630,684,794,880,1250,1287],linear_resampl:[156,332,472,606,755,1063],linspac:[157,333,473,607,756,1064],list:43,log1p:[97,417,545,678,874],log2:[98,418,546,679,875],log:[814,1152],logic:[30,179,365,497,634,801,1138],logical_and:[366,802,1139],logical_not:[99,228,419,547,680,876],logical_or:[367,803,1140],logspac:[158,334,474,608,757,1065],loss:1254,lstm:1286,lstm_updat:1251,maml_step:1158,manipul:[107,236,427,555,688,884],map:1208,map_nest_at_index:1209,map_nest_at_indic:1210,match_kwarg:1066,math:[32,180,368,498,635,804,1141],matmul:[335,609,758,1067],matrix_norm:[176,361,494,631,797,1134],maximum:[759,1068],mech:54,memori:55,meshgrid:[336,760,1069],meta:[34,1156],method:[102,231,422,550,683,879],min:[115,435,563,696,892],minimum:[761,1070],model:56,modul:[1289,1290,1302],multi:1160,multi_head_attent:1252,multi_index_nest:1211,multidevcontain:42,multidevit:951,multidevitem:950,multidevnest:952,multiheadattent:1288,multinodeit:1166,multinodeitem:1165,multinodenest:1167,multinomi:[182,370,501,637,819,1217],multiprocess:[762,1071],mxnet:210,nativ:1302,nest:1204,nested_indices_wher:1212,nested_map:1213,network:1302,next:1260,node:[1160,1182],node_dist:1183,node_dist_arrai:1184,node_dist_it:1185,node_str:1186,node_to_str:1187,node_util:1188,nodedistit:1169,nodedistitem:1168,nodedistnest:1170,nodemapp:1172,nodemappermultiproc:1173,norm:[1258,1291],num_arrays_in_memori:1072,num_arrays_on_dev:974,num_cpu_cor:975,num_gpu:[134,976,1189],numpi:394,nutshel:1260,one_hot:[159,475,610,763,1073],ones:[78,214,398,526,659,857,1074],ones_lik:[160,337,476,611,764,1075],oper:[1,3,7,9,11,13,43,121,122,124,125,126,127,249,250,252,253,254,255,441,442,444,445,446,447,569,570,572,573,575,576,702,703,705,706,708,709],optim:[1293,1297],optimizer_upd:1117,overview:1260,percent_used_mem_on_dev:977,percent_used_mem_on_nod:1190,pinv:[362,798,1135],portabl:1306,print_all_arrays_in_memori:1076,print_all_arrays_on_dev:978,profil:[130,297,450,579,712,953,1174],pull:43,queue_timeout:1077,randint:[183,371,638,820,1218],random:[36,181,369,500,636,818,1216],random_crop:1128,random_norm:[184,372,639,821,1219],random_uniform:[185,373,640,822,1220],reduce_max:[190,376,504,643,827,1225],reduce_mean:[191,377,505,644,828,1226],reduce_min:[192,378,506,645,829,1227],reduce_prod:[193,379,507,646,830,1228],reduce_std:[380,1229],reduce_sum:[194,381,508,647,831,1230],reduce_var:[195,382,509,648,832,1231],reduct:[38,188,374,502,641,825,1223],reflect:[13,127,255,447,576,709],relu:[837,1236],repeat:[338,765,1078],reptile_step:1159,request:43,reshap:[766,1079],robot:57,round:[339,767,1080],run:1303,scaled_dot_product_attent:1253,scatter_flat:[161,340,477,612,768,1081],scatter_nd:[162,341,478,613,769,1082],search:[109,238,429,557,690,886],seed:[186,823,1221],sequenti:[1299,1300],set:[111,240,431,559,692,888],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:979,set_default_dtyp:1005,set_default_float_dtyp:1006,set_default_int_dtyp:1007,set_default_nod:1191,set_exception_debug_mod:48,set_framework:65,set_min_bas:1083,set_min_denomin:1084,set_nest_at_index:1214,set_nest_at_indic:1215,set_queue_timeout:1085,set_split_factor:[980,1192],set_tmp_dir:1086,set_with_grad:1118,sgd:1298,shape:[770,1087],shape_to_tupl:1088,shuffl:[187,824,1222],sigmoid:[838,1237],signatur:[102,231,422,550,683,879],sin:[100,229,420,548,681,877],sinh:[815,1153],siren:1274,softmax:[198,513,839,1238],softplu:[840,1239],sort:[112,241,432,560,693,889],sparse_cross_entropi:1257,split:[163,342,479,614,771,1089],split_factor:[981,1193],split_func_cal:[982,1194],sqrt:[101,230,421,549,682,878],squeez:[164,343,480,615,772,1090],stable_divid:1091,stable_pow:1092,stack:[344,773,1093],stack_imag:[174,359,492,629,793,1129],standard:43,statist:[114,243,434,562,695,891],stop_gradi:[354,487,624,787,1119],str_to_nod:1195,submodul:43,supports_inplac:1094,svd:[105,234,425,553,686,882],swapax:[616,774,1095],tan:[816,1154],tanh:[817,841,1155,1240],tensorflow:522,tile:[345,617,775,1096],tmp_dir:1097,to_dev:[135,301,583,717,983],to_ivi:18,to_ivy_modul:[201,844,1267],to_list:[776,1098],to_n:19,to_nod:1196,to_numpi:[777,1099],to_scalar:[778,1100],todo:43,torch:655,total_mem_on_dev:984,total_mem_on_nod:1197,tpu_is_avail:[584,718,985,1198],train:1302,trainabl:1302,transpos:[165,346,481,779,1101],tree:1260,tril:[79,215,399,527,660,858],try_else_non:1102,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,217,221,401,405,529,533,662,666,860,863],uint8_img_to_float_img:1130,unifi:1199,unify_arrai:1200,unify_it:1201,unify_nest:1202,unset_debug_mod:49,unset_default_devic:986,unset_default_dtyp:1008,unset_default_float_dtyp:1009,unset_default_int_dtyp:1010,unset_framework:71,unset_with_grad:1120,unstack:[166,347,482,618,780,1103],updat:43,used_mem_on_dev:987,used_mem_on_nod:1203,util:[116,244,436,564,697,893],valid_dtyp:1011,value_is_nan:1104,variabl:[355,488,625,788,1121],variable_data:[789,1122],vector_norm:[106,235,426,554,687,883],vector_to_skew_symmetric_matrix:[178,364,496,633,800,1137],verbos:1304,vision:58,where:[348,781,1105,1260],why:1306,with_grad:1123,wrapper:72,write:1303,your:43,zero:[80,216,400,528,661,859,1276],zero_pad:[349,619,782,1106],zeros_lik:[167,350,483,620,783,1107]}})