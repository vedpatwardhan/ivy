Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[789,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[373,0,0,"-"],creation_functions:[374,0,0,"-"],data_type_functions:[375,0,0,"-"],data_types:[379,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[375,1,1,""],finfo:[377,2,1,""],iinfo:[378,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[375,3,1,""],bits:[375,3,1,""],eps:[375,3,1,""],max:[375,3,1,""],min:[375,3,1,""],smallest_normal:[375,3,1,""]},"ivy.functional.ivy":{array_api:[790,0,0,"-"],core:[814,0,0,"-"],nn:[1157,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[791,0,0,"-"],creation_functions:[792,0,0,"-"],data_type_functions:[793,0,0,"-"],data_types:[796,0,0,"-"],elementwise_functions:[797,0,0,"-"],function_and_method_signatures:[801,0,0,"-"],linear_algebra_extension:[802,0,0,"-"],linear_algebra_functions:[804,0,0,"-"],manipulation_functions:[805,0,0,"-"],searching_functions:[806,0,0,"-"],set_functions:[807,0,0,"-"],sorting_functions:[808,0,0,"-"],statistical_functions:[810,0,0,"-"],utility_functions:[811,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[794,2,1,""],iinfo:[795,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{cos:[798,2,1,""],isfinite:[799,2,1,""],logical_not:[800,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[803,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[809,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[812,2,1,""],any:[813,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[815,0,0,"-"],compilation:[854,0,0,"-"],device:[856,0,0,"-"],dtype:[906,0,0,"-"],general:[930,0,0,"-"],gradients:[1031,0,0,"-"],image:[1047,0,0,"-"],linalg:[1054,0,0,"-"],logic:[1061,0,0,"-"],math:[1064,0,0,"-"],meta:[1081,0,0,"-"],multi_node:[1085,0,0,"-"],nest:[1129,0,0,"-"],random:[1141,0,0,"-"],reductions:[1148,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[816,2,1,""],builtin_add:[817,2,1,""],builtin_and:[818,2,1,""],builtin_bool:[819,2,1,""],builtin_contains:[820,2,1,""],builtin_deepcopy:[821,2,1,""],builtin_dir:[822,2,1,""],builtin_eq:[823,2,1,""],builtin_float:[824,2,1,""],builtin_floordiv:[825,2,1,""],builtin_ge:[826,2,1,""],builtin_getattr:[827,2,1,""],builtin_getattribute:[828,2,1,""],builtin_getitem:[829,2,1,""],builtin_gt:[830,2,1,""],builtin_int:[831,2,1,""],builtin_invert:[832,2,1,""],builtin_le:[833,2,1,""],builtin_lt:[834,2,1,""],builtin_mul:[835,2,1,""],builtin_ne:[836,2,1,""],builtin_neg:[837,2,1,""],builtin_or:[838,2,1,""],builtin_pos:[839,2,1,""],builtin_pow:[840,2,1,""],builtin_radd:[841,2,1,""],builtin_rand:[842,2,1,""],builtin_rfloordiv:[843,2,1,""],builtin_rmul:[844,2,1,""],builtin_ror:[845,2,1,""],builtin_rpow:[846,2,1,""],builtin_rsub:[847,2,1,""],builtin_rtruediv:[848,2,1,""],builtin_rxor:[849,2,1,""],builtin_setitem:[850,2,1,""],builtin_sub:[851,2,1,""],builtin_truediv:[852,2,1,""],builtin_xor:[853,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[855,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[856,1,1,""],DevClonedItem:[858,1,1,""],DevClonedIter:[859,1,1,""],DevClonedNest:[860,1,1,""],DevDistItem:[861,1,1,""],DevDistIter:[862,1,1,""],DevDistNest:[863,1,1,""],DevManager:[856,1,1,""],DevMapper:[865,1,1,""],DevMapperMultiProc:[866,1,1,""],MultiDev:[856,1,1,""],MultiDevItem:[868,1,1,""],MultiDevIter:[869,1,1,""],MultiDevNest:[870,1,1,""],Profiler:[871,1,1,""],clear_mem_on_dev:[872,2,1,""],default_device:[873,2,1,""],dev:[874,2,1,""],dev_clone:[875,2,1,""],dev_clone_array:[876,2,1,""],dev_clone_iter:[877,2,1,""],dev_clone_nest:[878,2,1,""],dev_dist:[879,2,1,""],dev_dist_array:[880,2,1,""],dev_dist_iter:[881,2,1,""],dev_dist_nest:[882,2,1,""],dev_from_str:[883,2,1,""],dev_to_str:[884,2,1,""],dev_unify:[885,2,1,""],dev_unify_array:[886,2,1,""],dev_unify_iter:[887,2,1,""],dev_unify_nest:[888,2,1,""],dev_util:[889,2,1,""],get_all_arrays_on_dev:[890,2,1,""],gpu_is_available:[891,2,1,""],num_arrays_on_dev:[892,2,1,""],num_cpu_cores:[893,2,1,""],num_gpus:[894,2,1,""],percent_used_mem_on_dev:[895,2,1,""],print_all_arrays_on_dev:[896,2,1,""],set_default_device:[897,2,1,""],set_split_factor:[898,2,1,""],split_factor:[899,2,1,""],split_func_call:[900,2,1,""],to_dev:[901,2,1,""],total_mem_on_dev:[902,2,1,""],tpu_is_available:[903,2,1,""],unset_default_device:[904,2,1,""],used_mem_on_dev:[905,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[856,3,1,""],da_tune_step:[856,3,1,""],dim_size:[856,3,1,""],ds_tune_step:[856,3,1,""],map:[856,3,1,""],repeated_config_check:[856,3,1,""],tune_step:[856,3,1,""],tuned:[856,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[865,3,1,""],map:[865,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[866,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[868,3,1,""],items:[868,3,1,""],keys:[868,3,1,""],shape:[868,3,1,""],values:[868,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[869,3,1,""],at_dev:[869,3,1,""],at_devs:[869,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[870,3,1,""],at_dev:[870,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[871,3,1,""],start:[871,3,1,""],stop:[871,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[906,1,1,""],DefaultFloatDtype:[906,1,1,""],DefaultIntDtype:[906,1,1,""],astype:[906,2,1,""],cast:[910,2,1,""],closest_valid_dtype:[911,2,1,""],convert_dtype:[912,2,1,""],default_dtype:[913,2,1,""],default_float_dtype:[914,2,1,""],default_int_dtype:[915,2,1,""],dtype:[916,2,1,""],dtype_bits:[917,2,1,""],dtype_from_str:[918,2,1,""],dtype_to_str:[919,2,1,""],invalid_dtype:[920,2,1,""],is_float_dtype:[921,2,1,""],is_int_dtype:[922,2,1,""],set_default_dtype:[923,2,1,""],set_default_float_dtype:[924,2,1,""],set_default_int_dtype:[925,2,1,""],unset_default_dtype:[926,2,1,""],unset_default_float_dtype:[927,2,1,""],unset_default_int_dtype:[928,2,1,""],valid_dtype:[929,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.general":{"default":[955,2,1,""],abs:[931,2,1,""],all_equal:[932,2,1,""],arange:[933,2,1,""],arg_names:[934,2,1,""],argmax:[935,2,1,""],argmin:[936,2,1,""],array:[937,2,1,""],array_equal:[938,2,1,""],arrays_equal:[939,2,1,""],asarray:[930,2,1,""],assert_supports_inplace:[940,2,1,""],broadcast_to:[941,2,1,""],cache_fn:[942,2,1,""],ceil:[943,2,1,""],clip:[944,2,1,""],clip_matrix_norm:[945,2,1,""],clip_vector_norm:[946,2,1,""],concatenate:[947,2,1,""],constant_pad:[948,2,1,""],container_types:[949,2,1,""],copy_array:[950,2,1,""],cross:[951,2,1,""],cumprod:[952,2,1,""],cumsum:[953,2,1,""],current_framework_str:[954,2,1,""],einops_rearrange:[956,2,1,""],einops_reduce:[957,2,1,""],einops_repeat:[958,2,1,""],equal:[959,2,1,""],exists:[960,2,1,""],expand_dims:[961,2,1,""],flip:[962,2,1,""],floor:[963,2,1,""],floormod:[964,2,1,""],fourier_encode:[965,2,1,""],full:[966,2,1,""],gather:[967,2,1,""],gather_nd:[968,2,1,""],get_all_arrays_in_memory:[969,2,1,""],get_min_base:[970,2,1,""],get_min_denominator:[971,2,1,""],get_num_dims:[972,2,1,""],get_referrers_recursive:[973,2,1,""],has_nans:[974,2,1,""],identity:[975,2,1,""],indices_where:[976,2,1,""],inplace_arrays_supported:[977,2,1,""],inplace_decrement:[978,2,1,""],inplace_increment:[979,2,1,""],inplace_update:[980,2,1,""],inplace_variables_supported:[981,2,1,""],is_array:[982,2,1,""],isinf:[983,2,1,""],isnan:[984,2,1,""],linear_resample:[985,2,1,""],linspace:[986,2,1,""],logspace:[987,2,1,""],match_kwargs:[988,2,1,""],matmul:[989,2,1,""],maximum:[990,2,1,""],meshgrid:[991,2,1,""],minimum:[992,2,1,""],multiprocessing:[993,2,1,""],num_arrays_in_memory:[994,2,1,""],one_hot:[995,2,1,""],ones:[996,2,1,""],ones_like:[997,2,1,""],print_all_arrays_in_memory:[998,2,1,""],queue_timeout:[999,2,1,""],repeat:[1000,2,1,""],reshape:[1001,2,1,""],round:[1002,2,1,""],scatter_flat:[1003,2,1,""],scatter_nd:[1004,2,1,""],set_min_base:[1005,2,1,""],set_min_denominator:[1006,2,1,""],set_queue_timeout:[1007,2,1,""],set_tmp_dir:[1008,2,1,""],shape:[1009,2,1,""],shape_to_tuple:[1010,2,1,""],split:[1011,2,1,""],squeeze:[1012,2,1,""],stable_divide:[1013,2,1,""],stable_pow:[1014,2,1,""],stack:[1015,2,1,""],supports_inplace:[1016,2,1,""],swapaxes:[1017,2,1,""],tile:[1018,2,1,""],tmp_dir:[1019,2,1,""],to_list:[1020,2,1,""],to_numpy:[1021,2,1,""],to_scalar:[1022,2,1,""],transpose:[1023,2,1,""],try_else_none:[1024,2,1,""],unstack:[1025,2,1,""],value_is_nan:[1026,2,1,""],where:[1027,2,1,""],zero_pad:[1028,2,1,""],zeros:[1029,2,1,""],zeros_like:[1030,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1031,1,1,""],adam_step:[1033,2,1,""],adam_update:[1034,2,1,""],execute_with_gradients:[1035,2,1,""],gradient_descent_update:[1036,2,1,""],is_variable:[1037,2,1,""],lamb_update:[1038,2,1,""],lars_update:[1039,2,1,""],optimizer_update:[1040,2,1,""],set_with_grads:[1041,2,1,""],stop_gradient:[1042,2,1,""],unset_with_grads:[1043,2,1,""],variable:[1044,2,1,""],variable_data:[1045,2,1,""],with_grads:[1046,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1031,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1048,2,1,""],float_img_to_uint8_img:[1049,2,1,""],gradient_image:[1050,2,1,""],random_crop:[1051,2,1,""],stack_images:[1052,2,1,""],uint8_img_to_float_img:[1053,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1055,2,1,""],inv:[1056,2,1,""],matrix_norm:[1057,2,1,""],pinv:[1058,2,1,""],svd:[1059,2,1,""],vector_to_skew_symmetric_matrix:[1060,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1062,2,1,""],logical_or:[1063,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1065,2,1,""],acosh:[1066,2,1,""],asin:[1067,2,1,""],asinh:[1068,2,1,""],atan2:[1070,2,1,""],atan:[1069,2,1,""],atanh:[1071,2,1,""],cosh:[1072,2,1,""],divide:[1073,2,1,""],erf:[1074,2,1,""],exp:[1075,2,1,""],log:[1076,2,1,""],sin:[1077,2,1,""],sinh:[1078,2,1,""],tan:[1079,2,1,""],tanh:[1080,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1082,2,1,""],maml_step:[1083,2,1,""],reptile_step:[1084,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1085,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1130,2,1,""],copy_nest:[1131,2,1,""],index_nest:[1132,2,1,""],map:[1133,2,1,""],map_nest_at_index:[1134,2,1,""],map_nest_at_indices:[1135,2,1,""],multi_index_nest:[1136,2,1,""],nested_indices_where:[1137,2,1,""],nested_map:[1138,2,1,""],set_nest_at_index:[1139,2,1,""],set_nest_at_indices:[1140,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1142,2,1,""],randint:[1143,2,1,""],random_normal:[1144,2,1,""],random_uniform:[1145,2,1,""],seed:[1146,2,1,""],shuffle:[1147,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1149,2,1,""],reduce_max:[1150,2,1,""],reduce_mean:[1151,2,1,""],reduce_min:[1152,2,1,""],reduce_prod:[1153,2,1,""],reduce_std:[1154,2,1,""],reduce_sum:[1155,2,1,""],reduce_var:[1156,2,1,""]},"ivy.functional.ivy.nn":{activations:[1158,0,0,"-"],layers:[1166,0,0,"-"],losses:[1179,0,0,"-"],norms:[1183,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1159,2,1,""],leaky_relu:[1160,2,1,""],relu:[1161,2,1,""],sigmoid:[1162,2,1,""],softmax:[1163,2,1,""],softplus:[1164,2,1,""],tanh:[1165,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1167,2,1,""],conv1d_transpose:[1168,2,1,""],conv2d:[1169,2,1,""],conv2d_transpose:[1170,2,1,""],conv3d:[1171,2,1,""],conv3d_transpose:[1172,2,1,""],depthwise_conv2d:[1173,2,1,""],dropout:[1174,2,1,""],linear:[1175,2,1,""],lstm_update:[1176,2,1,""],multi_head_attention:[1177,2,1,""],scaled_dot_product_attention:[1178,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1180,2,1,""],cross_entropy:[1181,2,1,""],sparse_cross_entropy:[1182,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1184,2,1,""]},"ivy.graph_compiler":{compiler:[1185,0,0,"-"],globals:[1188,0,0,"-"],graph:[1191,0,0,"-"],helpers:[1193,0,0,"-"],op_logging:[1194,0,0,"-"],param:[1195,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1186,2,1,""],show_graph:[1187,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1189,2,1,""],log_global_inference_rel_times:[1190,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1191,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1191,3,1,""],add_fn_to_dict:[1191,3,1,""],add_param:[1191,3,1,""],compiled:[1191,3,1,""],connect:[1191,3,1,""],debug_info:[1191,3,1,""],get_param:[1191,3,1,""],get_param_recursive:[1191,3,1,""],include_generators:[1191,3,1,""],increment_param_count:[1191,3,1,""],log_all_ops:[1191,3,1,""],params_all_empty:[1191,3,1,""],save_debug_info:[1191,3,1,""],set_param:[1191,3,1,""],show:[1191,3,1,""],show_debug_info:[1191,3,1,""],update_inference_times:[1191,3,1,""],with_array_caching:[1191,3,1,""]},"ivy.graph_compiler.param":{Param:[1195,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1195,3,1,""],count:[1195,3,1,""],depth:[1195,3,1,""],get:[1195,3,1,""],is_var:[1195,3,1,""],ptype:[1195,3,1,""],set:[1195,3,1,""],set_count:[1195,3,1,""],shape:[1195,3,1,""]},"ivy.stateful":{activations:[1200,0,0,"-"],converters:[1203,0,0,"-"],initializers:[1205,0,0,"-"],layers:[1214,0,0,"-"],module:[1226,0,0,"-"],norms:[1228,0,0,"-"],optimizers:[1230,0,0,"-"],sequential:[1236,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1201,1,1,""],GELU:[1202,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1201,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1202,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1204,2,1,""]},"ivy.stateful.initializers":{Constant:[1205,1,1,""],FirstLayerSiren:[1207,1,1,""],GlorotUniform:[1208,1,1,""],KaimingNormal:[1205,1,1,""],Ones:[1210,1,1,""],Siren:[1211,1,1,""],Uniform:[1205,1,1,""],Zeros:[1213,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1205,3,1,""],create_variables:[1205,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1207,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1208,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1205,3,1,""],create_variables:[1205,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1210,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1211,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1205,3,1,""],create_variables:[1205,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1213,3,1,""]},"ivy.stateful.layers":{Conv1D:[1215,1,1,""],Conv1DTranspose:[1216,1,1,""],Conv2D:[1217,1,1,""],Conv2DTranspose:[1218,1,1,""],Conv3D:[1219,1,1,""],Conv3DTranspose:[1220,1,1,""],DepthwiseConv2D:[1221,1,1,""],Dropout:[1222,1,1,""],LSTM:[1223,1,1,""],Linear:[1224,1,1,""],MultiHeadAttention:[1225,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1215,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1216,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1217,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1218,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1219,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1220,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1221,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1222,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1223,3,1,""],get_initial_state:[1223,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1224,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1225,3,1,""]},"ivy.stateful.module":{Module:[1227,1,1,""]},"ivy.stateful.module.Module":{__init__:[1227,3,1,""],build:[1227,3,1,""],build_mode:[1227,3,1,""],built:[1227,3,1,""],check_submod_rets:[1227,3,1,""],compile_graph:[1227,3,1,""],compile_on_next_step:[1227,3,1,""],get_mod_key:[1227,3,1,""],mod_depth:[1227,3,1,""],mod_height:[1227,3,1,""],mod_with_top_mod_key_chain:[1227,3,1,""],save_weights:[1227,3,1,""],show_graph:[1227,3,1,""],show_mod_in_top_mod:[1227,3,1,""],show_structure:[1227,3,1,""],show_v_in_top_v:[1227,3,1,""],sub_mods:[1227,3,1,""],track_submod_call_order:[1227,3,1,""],track_submod_rets:[1227,3,1,""],v_with_top_v_key_chains:[1227,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1229,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1229,3,1,""]},"ivy.stateful.optimizers":{Adam:[1231,1,1,""],LAMB:[1232,1,1,""],LARS:[1233,1,1,""],Optimizer:[1234,1,1,""],SGD:[1235,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1231,3,1,""],set_state:[1231,3,1,""],state:[1231,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1232,3,1,""],set_state:[1232,3,1,""],state:[1232,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1233,3,1,""],set_state:[1233,3,1,""],state:[1233,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1234,3,1,""],compile_graph:[1234,3,1,""],compile_on_next_step:[1234,3,1,""],set_state:[1234,3,1,""],show_graph:[1234,3,1,""],step:[1234,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1235,3,1,""],set_state:[1235,3,1,""],state:[1235,3,1,""]},"ivy.stateful.sequential":{Sequential:[1237,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1237,3,1,""]},"ivy.verbosity":{cprint:[1242,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1241,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1230,1231,1232],"02886":1197,"100":[1085,1197,1239],"2021":1197,"2102":1197,"360":[797,798,1064,1077,1079],"754":[793,794],"999":[1031,1033,1034,1038,1230,1231,1232],"abstract":[856,871,1197,1230,1234],"boolean":[40,41,797,800,856,891,903,906,920,929,930,932,938,939,974,976,977,981,982,983,984,1016,1026,1031,1037,1061,1062,1063,1081,1082,1083,1085],"break":43,"case":[15,18,19,40,41,42,43,802,803,856,895,902,905,930,933,1001,1003,1004,1054,1057,1085,1129,1132,1136,1197,1214,1225,1226,1227,1230,1234,1243],"catch":[930,955],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,375,793,795,856,858,859,860,861,862,863,865,866,868,869,870,871,883,884,906,930,934,988,996,1031,1045,1085,1129,1131,1138,1179,1181,1182,1191,1195,1197,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1243],"default":[15,18,19,40,41,42,43,802,803,808,809,811,812,813,854,855,856,865,866,873,874,878,879,880,881,882,885,886,887,888,895,898,899,900,905,906,913,914,915,916,930,932,933,935,936,945,946,947,948,951,952,953,962,965,966,967,972,974,975,985,987,988,991,993,996,999,1000,1003,1004,1007,1009,1011,1013,1014,1023,1025,1026,1029,1031,1034,1036,1037,1038,1039,1040,1042,1046,1054,1057,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1163,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237],"final":[40,41,930,965,986,987,1085,1214,1225,1240],"float":[40,41,42,43,793,794,802,803,815,840,856,865,866,889,895,898,902,905,906,914,921,930,933,945,946,948,965,966,970,971,987,1005,1006,1007,1013,1014,1031,1033,1034,1036,1038,1039,1040,1047,1049,1053,1064,1073,1081,1082,1083,1084,1085,1141,1144,1145,1158,1160,1166,1174,1177,1178,1179,1180,1181,1182,1183,1184,1214,1222,1225,1228,1229,1230,1231,1232,1233,1234,1235],"function":[15,40,41,43,377,378,794,795,798,799,800,802,803,809,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1197,1200,1201,1202,1230,1233,1234,1235,1239,1240,1243],"import":[43,1197,1240,1243],"int":[40,41,42,43,793,794,795,802,803,808,809,811,812,813,815,840,854,855,856,878,879,880,881,882,885,886,887,888,893,894,900,906,915,917,922,930,935,936,941,947,948,952,953,956,957,958,961,962,965,966,967,972,975,985,986,987,995,996,1000,1001,1003,1004,1009,1010,1011,1012,1015,1017,1018,1023,1025,1028,1029,1031,1033,1034,1038,1047,1051,1052,1054,1057,1081,1082,1083,1084,1085,1129,1138,1141,1142,1143,1145,1146,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1177,1179,1181,1182,1183,1184,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1228,1229],"long":[1166,1176],"new":[40,41,43,906,910,930,931,941,956,957,958,961,965,966,967,968,996,1001,1003,1004,1005,1006,1013,1014,1015,1029,1031,1034,1036,1038,1039,1040,1047,1049,1051,1053,1064,1066,1068,1071,1072,1078,1080,1085,1129,1139,1140,1141,1142,1183,1184,1197,1203,1204,1214,1224,1228,1229,1230,1231,1232,1233,1234,1235,1240,1243],"public":[930,949],"return":[15,16,17,18,19,40,41,42,43,793,794,795,797,798,799,800,802,803,808,809,811,812,813,815,840,854,855,856,865,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,894,895,899,900,901,902,903,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,1000,1001,1002,1003,1004,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1197,1203,1204,1214,1223,1224,1230,1234,1239,1240,1243],"short":[1166,1176,1197,1243],"static":[40,41,854,855],"super":1085,"true":[40,41,42,797,799,802,803,808,809,811,812,813,854,855,856,930,932,940,942,960,965,974,976,1026,1027,1031,1034,1036,1037,1038,1039,1040,1042,1054,1057,1081,1082,1083,1084,1085,1129,1130,1137,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1166,1174,1179,1180,1181,1182,1185,1186,1187,1191,1214,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235],"try":[40,41,930,1024,1085],"var":[40,41,1081,1082,1083,1243],"while":[40,41,42,1085],AND:[811,812,1061,1062],But:1243,For:[43,930,933,944,1015,1031,1037,1045,1064,1065,1197,1203,1204,1240,1243],Its:[1064,1069],NOT:[797,800],One:[40,41,930,957,1001,1141,1143,1243],Ones:[1197,1205],Such:[930,949],That:1240,The:[15,16,17,18,19,40,41,42,43,797,798,799,808,809,811,812,813,815,840,854,855,856,865,866,872,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,917,918,919,920,929,930,933,937,938,941,942,945,946,947,948,950,951,954,955,959,962,965,967,968,975,978,979,980,982,985,987,989,991,993,996,997,1000,1001,1003,1004,1005,1006,1007,1010,1011,1012,1013,1014,1015,1018,1026,1029,1030,1031,1033,1034,1036,1038,1039,1040,1042,1045,1047,1049,1051,1053,1054,1057,1059,1064,1065,1067,1069,1073,1074,1075,1076,1077,1079,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1197,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1240,1243],There:[43,1197,1240],These:[43,1197],Used:[1129,1130,1137,1226,1227],Using:[1197,1198,1243],With:[40,41,802,803,1054,1057,1148,1150,1151,1152,1153,1154,1155,1156,1197,1239,1243],__array__:[930,937],__call__:[1214,1225,1226,1227],__del__:1085,__dict__:[1085,1240],__enter__:1085,__exit__:1085,__getitem__:1085,__getstate__:1085,__init__:[40,41,42,43,59,60,79,199,375,376,488,607,856,857,864,865,866,867,868,869,870,871,906,907,908,909,1031,1032,1085,1089,1096,1191,1192,1195,1196,1197,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1243],__iter__:1085,__len__:1085,__next__:1085,__pow__:43,__repr__:1085,_assign_vari:1239,_axi:1085,_base:[1129,1130,1137],_compute_node_da_ratio:1085,_compute_node_strs_da:1085,_concat_unify_arrai:1085,_counter:1085,_cur_framework:[43,1085],_da_direct:1085,_da_directions_flip:1085,_da_step_tim:1085,_da_tim:1085,_da_tune_count:1085,_data:1085,_delta_da_dim_s:1085,_delta_sf:1085,_dict:1085,_dim_siz:1085,_first_da_tune_step:1085,_first_ns_tune_step:1085,_fn:1085,_forward:[1197,1239],_get_kalman_param:1243,_get_prior:1243,_get_some_model:1243,_handle_flat_arrays_in_out:43,_index:[1129,1130,1137],_input_queu:1085,_length:1085,_max_depth:1085,_max_node_dim_step_ratio:1085,_max_node_dim_step_s:1085,_max_split_factor_step_s:1085,_mean_unify_arrai:1085,_min_bas:[930,1014,1183,1184,1228,1229],_min_denomin:[930,1013],_min_node_dim_s:1085,_min_sf_tune_step:1085,_min_unit_node_tune_step:1085,_model:1243,_native_wrapp:43,_node_mapp:1085,_node_percent_mem:1085,_node_str:1085,_node_str_da_ratio:1085,_node_strs_da:1085,_node_strs_kei:1085,_node_strs_n:1085,_node_util:1085,_ns_step_tim:1085,_ns_time:1085,_ns_tune_count:1085,_num_nod:1085,_num_work:1085,_observed_config:1085,_output_queu:1085,_paramet:1239,_percent_mem_inc_per_sf:1085,_percent_mem_inc_per_unit_da_dim:1085,_percent_util_inc_per_unit_da_dim:1085,_ret_fn:1085,_safety_factor:1085,_save_dir:1085,_shift_da_split:1085,_shift_n:1085,_slice:1085,_step:[1230,1234],_sum_unify_arrai:1085,_timeout:1085,_tune:1085,_tune_da:1085,_tune_n:1085,_tune_step:1085,_unit_da_tune_count:1085,_unroll_step:1243,_with_node_mappig:1085,_worker:1085,_worker_class:1085,_worker_fn:1085,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,856,865,871,1085,1226,1227,1230,1234],abil:1197,abl:[40,41],about:[793,794,795],abov:[43,1141,1143],above_height:[40,41],abs:[274,526,646,930,1085],absolut:[40,41,930,931],abstractmethod:1085,accept:[15,43,1197],access:[40,41,1240],accord:[40,41,793,794,930,948,967,1003,1004,1023,1028],accordingli:[811,812,813],accur:[59,375,856,868,869,870,871,906,1031,1191,1195,1205,1207,1208,1210,1211,1213],aco:[738,1064],acosh:[738,1064],across:[40,41,856,865,866,875,876,878,879,880,881,882,888,898,899,930,935,936,938,939,1085,1129,1133],activ:[1159,1160,1161,1162,1163,1164,1165,1197,1201,1202],actual:1240,adam:[1031,1033,1034,1038,1197,1230,1232,1239],adam_step:1031,adam_upd:1031,adapt:[1031,1039,1230,1233],add:[40,41,43,1085,1179,1180,1181,1182,1183,1184,1197,1228,1229,1240],add_fn_to_dict:1191,add_param:1191,added:[43,930,1013,1014,1236,1237],adding:[930,941],addit:[40,41,43,930,956,957,958,1183,1184,1214,1224],adher:43,adjac:[930,933],adopt:[930,949],affect:[930,933],affin:[1228,1229],after:[930,985,1031,1034,1035,1036,1038,1039,1040,1047,1048,1183,1184,1230,1231,1232,1233,1234,1235,1243],after_1:[930,948,1028],after_n:[930,948,1028],again:43,against:[40,41,802,803,1054,1057,1148,1150,1151,1152,1153,1154,1155,1156],agnost:[43,1197,1239,1240],aim:1243,algebra:1054,algorithm:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221,1243],align:[40,41,43,930,941],aliv:[856,890,892,896,930,969,994,998],all:[15,16,17,18,19,40,41,43,97,216,394,506,625,811,854,855,856,865,890,896,930,931,932,938,939,949,962,969,975,998,1012,1081,1082,1083,1084,1085,1129,1130,1131,1137,1138,1141,1142,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1176,1197,1240,1243],all_depth:[40,41],all_equ:930,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1129,all_tru:[40,41],alloc:[856,1085],allow:[930,986,987,988,1226,1227],allow_dupl:[930,988],alon:[856,895,905,1085,1197],along:[40,41,43,802,803,808,809,811,812,813,856,879,880,881,882,885,886,887,888,900,930,947,952,953,962,967,985,986,987,1000,1011,1015,1018,1025,1054,1057,1081,1082,1083,1084,1085,1141,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],alongsid:[1239,1240],alpha:[1158,1160],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,856,1085],also:[40,41,43,930,933,1031,1034,1081,1082,1083,1084,1129,1130,1131,1137,1138,1166,1175,1214,1224,1239],altern:1239,alwai:[40,41,43,1031,1037,1042],among:[40,41],amount:[856,902,1085,1197],angl:[1064,1065,1070],ani:[15,16,17,18,19,40,41,43,97,216,394,506,625,811,854,855,856,858,861,865,866,868,877,878,881,882,887,930,932,933,937,955,956,957,958,959,960,974,982,988,1013,1014,1031,1035,1085,1129,1130,1133,1137,1138,1139,1140,1141,1145,1197,1203,1204,1226,1227,1239,1240,1243],anoth:[40,41,906,912,1197],another_backend:43,anyth:[43,1243],anywai:43,apart:43,api:[1197,1198],appear:[930,961],append:[40,41,1085],appli:[15,18,19,40,41,797,800,930,956,957,958,1031,1038,1039,1054,1059,1061,1062,1063,1081,1082,1083,1129,1133,1136,1138,1158,1159,1160,1161,1162,1163,1164,1165,1166,1175,1177,1178,1183,1184,1197,1200,1201,1202,1228,1229],applic:[1129,1133,1138,1166,1177,1178,1197,1243],approxim:[43,815,840,1158,1159],arang:[117,274,409,526,646,930,986,987],arbitrari:[40,41,856,885,886,888,1085],arc:[1064,1070],arcco:[1064,1065],arctan:[1064,1069],area:1197,arg:[15,16,17,40,41,43,59,63,856,865,878,882,888,900,930,956,957,958,1004,1085,1185,1186,1187,1191,1203,1204,1226,1227],arg_nam:930,arg_stateful_idx:[1185,1186,1187,1191,1226,1227],argmax:[117,409,526,646,930],argmin:[117,409,526,646,930],args_clon:1085,args_dist:1085,args_to_ivi:[15,1197],args_to_n:[15,1197],args_uni:1085,argsort:[94,213,391,503,622,808],argument:[15,16,17,18,19,40,41,42,43,59,63,854,855,856,865,866,878,882,888,930,933,934,942,955,988,1004,1064,1065,1085,1129,1133,1203,1204,1226,1227],aris:[1197,1243],arithmet:[43,1148,1151,1154,1156],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,117,274,409,526,646,793,794,795,797,798,799,800,802,803,808,809,811,812,813,840,856,874,875,876,879,880,881,882,885,886,887,888,890,892,896,900,901,906,910,916,921,922,930,931,932,933,935,936,938,939,940,941,943,944,945,946,947,948,950,951,952,953,956,957,958,959,961,962,963,964,965,966,967,968,969,972,974,975,976,977,978,979,980,982,983,984,985,986,987,989,990,991,992,994,995,996,997,998,1000,1001,1002,1003,1004,1009,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1033,1034,1037,1038,1042,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1129,1131,1138,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1197,1198,1214,1222,1223,1225,1230,1234,1239,1240],arrang:[930,956],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,375,377,378,793,794,795,797,798,799,800,802,803,808,809,811,812,813],array_builtin:[43,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853],array_equ:[274,646,930],array_lik:[930,937],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,930],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1197],arraywithgener:[22,1197],arraywithgradi:[24,1197],arraywithimag:[26,1197],arraywithlinalg:[28,1197],arraywithlog:[30,1197],arraywithmath:[32,1197],arraywithmeta:[34,1197],arraywithrandom:[36,1197],arraywithreduct:[38,1197],arriv:[40,41,42],articl:1197,arxiv:1197,as_arrai:[40,41,930,972,1009],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[856,874,906,913,914,915,916],as_vari:[40,41],as_zero:[40,41],asarrai:930,asin:[738,1064],asinh:[738,1064],aspect:[1047,1052],assert:[40,41,930,940,1085],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:930,associ:[43,1054,1060],assum:[1240,1243],astyp:906,asynchron:[40,41,42],at_dev:[40,42,856,869,870],at_kei:[40,41],at_key_chain:[40,41],at_nod:1085,atan2:[738,1064],atan:[738,1064],atanh:[738,1064],attent:[1166,1177,1178,1214,1225],attribut:[0,6,40,41,793,794,795,930,997,1030],audienc:[1197,1240],author:1197,avail:[40,41,856,891,893,894,903,930,957,1085],averag:[1031,1033,1034,1038,1081,1082,1083,1148,1151],average_across_step:[1081,1082,1083],avoid:[856,1085,1240],axes:[40,41,43,802,803,811,812,813,856,900,930,935,936,948,961,962,1017,1023,1028,1054,1057,1085,1148,1150,1151,1152,1153,1154,1155,1156],axes_length:[40,41,930,956,957,958],axi:[40,41,802,803,808,809,811,812,813,856,858,861,868,879,880,881,882,885,886,887,888,900,930,935,936,947,948,951,952,953,961,962,967,985,986,987,1000,1011,1012,1015,1017,1018,1025,1028,1085,1141,1147,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1179,1181,1182],axis0:[40,41,930,1017],axis1:[40,41,930,1017],back:[1226,1227,1230,1234],backend:[15,17,19,40,41,375,377,378,856,891,894,903,906,912,920,929,930,977,981,1031,1034,1036,1038,1039,1040,1045,1085,1197,1198,1203,1204,1230,1231,1232,1233,1234,1235,1239,1240,1243],background:[1197,1240],backprop:1243,backward:[811,812,813,1239],band:[930,965],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,375,815,840,856,858,859,860,861,862,863,865,866,868,869,870,871,906,930,970,987,1005,1014,1031,1085,1148,1149,1191,1195,1197,1200,1201,1202,1205,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1243],batch:[40,41,856,898,899,930,962,965,975,1047,1051,1054,1059,1081,1082,1083,1084,1085,1166,1175,1183,1184,1228,1229],batch_shap:[930,962,975,995,1047,1048,1049,1050,1051,1052,1053,1054,1060,1141,1142,1166,1176,1177,1178,1214,1223],batch_siz:[1085,1141,1142,1166,1167,1168,1169,1170,1171,1172,1173],bayesian:1243,becaus:[43,930,933],becom:[930,944,1064,1070,1243],been:[930,956,957,958,1141,1142],befor:[40,41,43,856,900,1081,1082,1083,1085,1129,1138,1148,1150,1151,1152,1153,1154,1155,1156,1166,1177,1178,1243],before_1:[930,948,1028],before_n:[930,948,1028],begin:[1129,1130,1137,1240],behaviour:[43,1243],behind:[1031,1034,1036,1038,1039,1040,1197],being:[40,41,43,930,933,999,1007,1085],belong:[40,41],below:[43,1197,1240,1243],below_depth:[40,41],benefit:1197,bernoul:[1166,1174,1214,1222],best:[930,988,1197],beta1:[1031,1033,1034,1038,1230,1231,1232],beta2:[1031,1033,1034,1038,1230,1231,1232],beta:[1183,1184],between:[40,41,42,793,794,930,933,1129,1133,1141,1143,1179,1181,1182,1230,1232],bia:[1166,1175,1176,1214,1215,1216,1217,1218,1219,1220,1221,1224],bias_initi:[1214,1215,1216,1217,1218,1219,1220,1221,1224],bilinear:[1047,1048],bilinear_resampl:[156,333,451,573,724,1047],bilinearli:[1047,1048],binari:[1179,1180],binary_cross_entropi:1179,bit:[375,793,794,795,906,917,1047,1049,1053,1197],bitwise_oper:[0,7,8],block:[1197,1240],bool:[15,18,19,40,41,42,43,797,799,802,803,808,809,811,812,813,854,855,856,874,887,891,895,900,903,905,906,916,930,932,938,939,952,955,959,960,965,972,974,982,988,1009,1011,1025,1026,1027,1031,1034,1035,1036,1037,1038,1039,1040,1042,1054,1057,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1166,1174,1203,1204,1214,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235],both:[43,930,951],bottom:1197,boundari:[40,41,1141,1145],branch:[854,855],brittl:43,broadcast:[40,41,43,802,803,811,812,813,815,840,930,941,959,990,991,992,1000,1054,1057,1064,1070,1073,1148,1150,1151,1152,1153,1154,1155,1156],broadcast_to:[274,646,930],build:[1085,1197,1214,1225,1226,1227],build_mod:[1214,1225,1226,1227],builder:1197,built:[856,930,933,1085,1214,1225,1226,1227],builtin:43,builtin_ab:[229,815],builtin_add:[229,815],builtin_and:[229,815],builtin_bool:[229,815],builtin_contain:[229,815],builtin_deepcopi:[229,815],builtin_dir:[229,815],builtin_eq:[229,815],builtin_float:[229,815],builtin_floordiv:[229,815],builtin_g:[229,815],builtin_getattr:[229,815],builtin_getattribut:[229,815],builtin_getitem:[229,815],builtin_gt:[229,815],builtin_int:[229,815],builtin_invert:[229,815],builtin_l:[229,815],builtin_lt:[229,815],builtin_mul:[229,815],builtin_n:[229,815],builtin_neg:[229,815],builtin_or:[229,815],builtin_po:[229,815],builtin_pow:[43,229,815],builtin_radd:[229,815],builtin_rand:[229,815],builtin_rfloordiv:[229,815],builtin_rmul:[229,815],builtin_ror:[229,815],builtin_rpow:[229,815],builtin_rsub:[229,815],builtin_rtruediv:[229,815],builtin_rxor:[229,815],builtin_setitem:[229,815],builtin_some_op:43,builtin_sub:[229,815],builtin_truediv:[229,815],builtin_xor:[229,815],bypass:1240,cach:[856,872,930,942],cache_fn:930,calcul:[40,41,42,43,815,840,1064,1073],call:[43,856,900,930,999,1007,1024,1031,1035,1085,1129,1130,1133,1137,1214,1225,1226,1227,1230,1234,1240,1243],callabl:[40,41,854,855,856,865,866,900,930,942,955,957,988,1024,1081,1082,1083,1084,1085,1129,1133,1134,1135,1137,1138,1166,1177],can:[43,856,898,899,900,930,1001,1047,1049,1085,1197,1239,1240,1243],cancel_join_thread:1085,captur:1197,cast:[40,41,117,274,409,526,646,906,930,947,1047,1049,1053],catch_except:[930,955],categori:43,ceil:[274,646,930,933],cell:[1166,1176,1214,1223],certain:[40,41,930,933,986,987],chain:[40,41,1081,1082,1083,1236,1237],chang:[856,930,1001,1085,1129,1131,1138,1197,1239],channel:[930,965,1047,1049,1050,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224],check:[15,16,17,18,19,40,41,856,895,905,906,911,920,929,930,940,960,974,982,1016,1026,1031,1037,1085,1129,1130,1137,1197,1240],check_nest:[1129,1137],check_shap:[40,41],check_submod_ret:[1226,1227],check_typ:[40,41],choic:[1197,1240],choleski:[728,1054],choos:[930,1027,1064,1070,1197],choose_random_framework:59,chosen:[40,41,930,933,1027],chunk:[856,898,899,900,1085],chunk_siz:[856,900,1085],circl:[1064,1065,1067],clark:1197,clear:[856,872,1085],clear_framework_stack:59,clear_mem_on_dev:[638,856],click:1197,clip:[40,41,274,646,930,945,946,990,992,1197],clip_matrix_norm:930,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,930],clipped_delta:1085,clone:[40,41,856,875,876,877,878,1085],clone_arrai:1085,clone_it:1085,clone_nest:1085,clonedit:1085,cloneditem:1085,clonednest:1085,close:[43,1047,1052,1064,1067,1085,1243],closest:[906,911],closest_valid_dtyp:906,code:[40,41,42,43,1197,1198,1239,1240],codebas:[856,898,899,1085,1197,1240,1243],collect:[15,40,41,815,854,856,906,930,1031,1047,1054,1061,1064,1085,1129,1141,1148,1158,1166,1179,1183,1200,1214,1228,1230],color:[40,41,42,1241,1242],column:[930,975],combin:[40,41,42,1047,1052,1197,1243],combined_batch_s:1085,come:1240,command:1197,commit:1243,common:[40,41,1064,1070],common_key_chain:[40,41],commun:[1197,1240],compar:[40,41,930,932,938,939],comparison_oper:[0,9,10],compat:[43,811,812,813,815,840,930,959,1001,1064,1073,1197,1243],compil:[274,409,646,1186,1187,1191,1197,1226,1227,1230,1231,1232,1233,1234,1235],compile_graph:[1185,1197,1226,1227,1230,1234],compile_on_next_step:[1226,1227,1230,1231,1232,1233,1234,1235],complet:[40,41,1085],complex:[1240,1243],compon:[930,951],composit:43,comput:[40,41,797,798,800,802,803,856,900,930,945,946,952,953,959,989,1031,1033,1034,1035,1036,1038,1039,1040,1042,1044,1047,1050,1054,1055,1056,1057,1058,1061,1062,1063,1064,1065,1067,1069,1070,1074,1075,1076,1077,1079,1129,1133,1148,1149,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1175,1177,1179,1180,1181,1182],concat:[40,41,856,885,886,887,888,900,930,965,1085],concaten:[40,41,117,274,409,526,646,930,965,1085,1197],concatten:[40,41,856,885,886,887,888,900,1085],condit:[854,855,930,1027,1129,1137],conditon:[1129,1137],config:[40,41,1085],config_list:1085,configur:[40,41],conjunct:1240,connect:[1191,1214,1224,1225],consid:[40,41,802,803,1239,1243],consist:[40,41,856,888,1085,1148,1149,1226,1227,1240],constant:[856,865,866,930,948,1085,1129,1133,1179,1180,1181,1182,1183,1184,1205,1206,1210,1213,1226,1227,1228,1229,1240],constant_kwarg:1085,constant_pad:[274,526,646,930],constitu:[40,41],construct:[930,1018,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239],constructor:[40,41,42,930,934,1236,1237],consum:[856,1085],cont_feat_dim:[1166,1177],contaienr:[40,41],contain:[15,18,19,42,43,797,799,808,809,811,812,813,815,840,856,875,879,900,906,910,930,931,935,936,944,945,946,949,959,974,990,992,1002,1013,1014,1031,1033,1034,1036,1038,1039,1040,1064,1073,1081,1082,1083,1084,1085,1141,1142,1148,1150,1151,1152,1154,1156,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[646,930],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[930,993,1166,1177,1214,1225],context_dim:[1214,1225],contextmanag:[59,60],continu:[43,1085,1240],contract:[40,41,1148,1149],contribut:[1197,1198],contributor:1197,control:1197,conv1d:[186,363,475,781,1166,1197,1214],conv1d_transpos:[186,363,475,781,1166],conv1dtranspos:[1197,1214],conv2d:[186,363,475,598,781,1166,1197,1214],conv2d_transpos:[186,363,475,781,1166],conv2dtranspos:[1197,1214],conv3d:[186,363,475,598,781,1166,1197,1214],conv3d_transpos:[186,363,475,781,1166],conv3dtranspos:[1197,1214],convent:[40,41,1148,1149],conver:[856,872,883,895,902,905,1085],convers:[16,17,18,19,40,41,1085,1197],convert:[15,16,17,18,19,40,41,43,856,883,884,906,912,918,919,930,1010,1021,1022,1047,1049,1053,1054,1060,1085,1129,1131,1138,1197,1204],convert_dtyp:906,convolut:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],cool:43,cooler:43,coordin:[930,991,1064,1065,1067,1070],copi:[40,41,930,950,1085,1129,1131],copy_arrai:[646,930],copy_nest:1129,core:[815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1197],correct:[43,1197,1240],correctli:[40,41,802,803,1054,1057,1064,1070,1148,1150,1151,1152,1153,1154,1155,1156],correspond:[40,41,43,815,840,930,947,1141,1142],cos:[83,380,492,611,797,930,965,1064,1065,1079,1240],cosh:[738,1064],cosin:[797,798,1064,1065,1066,1072],cost:[1031,1033,1034,1036,1038,1039,1040,1081,1082,1083,1084],cost_fn:[1081,1084],could:1243,count:[40,41,811,812,813,1085,1148,1153,1155,1195],cprint:1241,cpu:[40,41,43,856,893,895,901,902,905,930,933,937,967,968,975,986,987,995,996,997,1003,1004,1029,1030,1085,1141,1142,1143,1144,1145,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237,1239,1240],creat:[40,41,856,865,866,930,933,937,966,967,968,975,986,987,995,996,997,1003,1004,1020,1029,1030,1031,1044,1085,1141,1142,1143,1144,1145,1197,1203,1204,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1243],create_if_abs:[40,41],create_vari:1205,creation:[40,41,42,43],crop:[1047,1051],crop_siz:[1047,1051],cross:[274,646,930,1179,1180,1181,1182],cross_entropi:1179,cuda:[40,41,856,865,884,901,930,933,937,967,968,975,986,987,995,996,997,1003,1004,1029,1030,1085,1141,1142,1143,1144,1145,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237],cumprod:[117,274,409,646,930],cumsum:[646,930],cumul:[930,952,953],current:[40,41,42,43,856,865,889,890,892,896,906,912,920,929,930,954,969,977,981,994,998,1085,1129,1130,1137,1197,1243],current_framework:59,current_framework_str:[646,930,1085],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1191,d_in:[1166,1167,1168,1169,1170,1171,1172],d_out:[1166,1167,1168,1169,1170,1171,1172],da_can_termin:1085,da_dim_s:[856,1085],da_direct:1085,da_tune_step:[856,1085],dai:1243,daniel:1197,data:[40,41,42,43,794,795,797,799,811,812,813,815,840,856,858,859,860,861,862,863,868,869,870,884,906,910,911,912,916,917,918,919,920,921,922,929,930,933,937,959,966,975,982,996,997,1001,1012,1016,1029,1030,1031,1037,1045,1064,1073,1085,1166,1175,1197],data_format:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],data_type_funct:[375,377,378,793,794,795],dataset:[40,41],datatyp:[40,41,906,911,921,922],dcdw:[1031,1033,1034,1036,1038,1039],debug_info:1191,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1031,1038,1039,1230,1232,1233],decay_lambda:[1031,1038,1039,1230,1232,1233],decid:[40,41,1243],decompos:[1054,1055],decomposit:[1054,1055,1059],decor:43,decrement:[930,978],dedic:[1031,1045,1203,1204],deep:[40,41,1197],deep_copi:[40,41],deeper:[856,878,882,888,1085,1129,1138,1197],deepli:[1129,1131],def:[43,60,79,199,376,488,607,857,864,867,907,908,909,1032,1085,1089,1096,1192,1196,1197,1206,1209,1212,1239,1240,1243],default_dev:43,default_devic:856,default_dtyp:[43,906],default_float_dtyp:906,default_int_dtyp:906,default_key_color:[40,41,42],default_nod:1085,default_v:[930,955],defaultdevic:[856,857],defaultdtyp:[906,907],defaultfloatdtyp:[906,908],defaultintdtyp:[906,909],defer:43,defin:[43,930,951,995,997,1030,1141,1143],degre:[797,798,1064,1077,1079],del:1085,delta:[1031,1033,1085,1191],delta_dim_s:1085,delta_percent_mem:1085,delta_sf:1085,delta_util:1085,demo:1197,denomin:[930,964,971,1006,1013,1014,1183,1184,1228,1229],dens:[1214,1224],depend:[43,815,840,930,1027,1054,1059,1197],depth:[40,41,856,878,882,888,930,973,995,1085,1129,1138,1191,1195,1226,1227],depth_cutoff:[40,41],depthwis:[1166,1173,1214,1221],depthwise_conv2d:[186,363,475,598,781,1166],depthwiseconv2d:[1197,1214],deriv:[1031,1033,1034,1036,1038,1039,1040,1129,1131,1138,1197,1226,1230,1234,1236],descend:[808,809,1054,1059],descent:[1031,1036,1230,1235],describ:[40,41,1148,1149],design:[1197,1198],desir:[40,41,856,901,906,910,930,933,937,975,976,996,997,1029,1030,1047,1052,1085,1148,1150,1151,1152,1154,1156],desired_aspect_ratio:[1047,1052],desired_percent_increas:1085,detail:1243,detect:[40,41,1129,1130,1137],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,797,799,811,812,813,815,840,856,891,893,894,903,906,910,911,917,920,921,922,929,930,932,933,937,938,939,974,977,981,982,1016,1026,1031,1037,1064,1073,1081,1082,1083,1084,1085,1166,1177],dev:[40,41,42,43,110,268,519,638,856,859,860,862,863,865,866,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,892,895,896,897,898,899,900,901,902,905,930,933,937,967,968,975,986,987,995,996,997,1003,1004,1029,1030,1031,1046,1141,1142,1143,1144,1145,1203,1204,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237],dev_clon:[40,41,856],dev_clone_arrai:856,dev_clone_it:856,dev_clone_nest:856,dev_dist:[40,41,856],dev_dist_arrai:856,dev_dist_it:856,dev_dist_nest:856,dev_from_str:[43,110,268,519,638,856],dev_mapp:856,dev_str:[40,41],dev_to_str:[110,268,519,638,856],dev_unifi:856,dev_unify_arrai:856,dev_unify_it:856,dev_unify_nest:856,dev_util:856,devclonedit:856,devcloneditem:856,devclonednest:856,devdistit:856,devdistitem:856,devdistnest:856,develop:[1197,1240,1243],deviat:[40,41,1141,1144,1148,1154,1183,1184,1228,1229],devic:[21,40,41,43,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,930,933,937,966,967,968,975,986,987,995,996,997,1003,1004,1029,1030,1031,1046,1141,1142,1143,1144,1145,1197,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237],devmanag:[856,864],devmapp:[856,866],devmappermultiproc:856,diag:[1054,1059],diagon:[930,975],dict:[15,16,17,18,19,40,41,42,856,858,861,865,866,868,878,879,880,881,882,930,956,957,958,988,1081,1082,1083,1085,1129,1131,1132,1133,1136,1138,1203,1204],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,793,794,856,875,876,879,880,1085,1166,1175,1197,1240,1243],differenti:[1197,1240],dilat:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],dim:[40,41,43,930,995,1047,1048,1052,1054,1059,1085,1214,1225],dim_siz:[40,41,856,1085],dimens:[40,41,42,802,803,811,812,813,856,887,930,941,947,951,956,957,958,961,965,972,985,995,1000,1001,1011,1012,1015,1023,1025,1047,1051,1054,1057,1059,1081,1082,1083,1084,1085,1141,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1176,1179,1181,1182,1214,1215,1216,1217,1218,1219,1220,1221,1224,1225],dimension:[40,41,811,812,813,930,1011,1012,1054,1059],direct:1085,directli:[43,1129,1138,1240,1243],directori:[930,1008,1019],discret:[1179,1181],disk:[40,41,1047,1049],distanc:[930,933],distribut:[40,41,856,875,879,880,881,882,1085,1141,1142,1143,1144,1145,1166,1174,1214,1222,1226,1227],distribute_nest:1085,distributedarrai:[40,41],distrubt:[1179,1181],dive:[1197,1240],divid:[40,41,930,1011,1013,1064],dividend:[1064,1073],divis:[930,964,971,1006,1013,1014,1031,1033,1034,1038,1064,1073,1230,1231,1232],divisor:[1031,1033,1034,1038,1064,1073,1230,1231,1232],doc:1197,docstr:43,doe:[40,41,43,930,933,1011,1239],doesn:1197,doing:43,domain:[1064,1065],don:1197,door:1243,dot:[1054,1056,1166,1177,1178,1214,1225],down:1239,downscal:[930,945,946],drag:[1197,1243],draw:[1141,1142,1144,1145],drawn:[1141,1142,1143,1144,1145],drop:[1197,1243],dropout:[1166,1197,1214,1225],dropout_r:[1214,1225],ds_tune_step:856,dtype:[40,41,43,117,274,375,377,378,409,526,646,793,794,795,910,911,912,913,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,933,937,966,975,995,996,997,1029,1030],dtype_bit:[117,274,409,526,646,906],dtype_from_str:[43,117,274,409,526,646,906],dtype_in:[906,912,917,918,919,920,921,922,929],dtype_to_str:[117,274,409,526,646,906],duplic:[40,41],dure:[40,41,43,854,855,930,1024,1031,1033,1034,1038,1081,1082,1083,1084,1226,1227,1230,1231,1232,1234],dynam:[854,855],each:[40,41,42,43,797,799,808,809,815,840,856,865,866,875,876,877,878,879,880,881,887,899,900,930,931,932,948,959,1000,1011,1015,1018,1028,1031,1034,1036,1038,1039,1040,1047,1050,1054,1059,1064,1067,1073,1075,1076,1085,1129,1133,1141,1142,1148,1149,1166,1167,1168,1169,1170,1171,1172,1173,1174,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1240],eager:1240,easi:1243,easili:1197,econom:1243,ecosystem:1197,edg:[930,944,948,1028],effect:[1031,1040],effective_grad:[1031,1040],effici:1243,einop:[40,41,930,956,957,958],einops_rearrang:[40,41,930],einops_reduc:[40,41,930],einops_repeat:[40,41,930],einstein:[40,41,1148,1149],einsum:[40,41,172,351,463,588,761,1148],either:[40,41,930,955,988,991,993,1081,1082,1083,1084,1085,1214,1225,1226,1227,1240],eleg:1085,element:[40,41,43,797,798,799,800,808,809,811,812,813,815,840,856,877,881,887,906,910,930,931,933,935,936,938,939,943,944,945,946,952,953,959,962,963,964,975,976,990,992,1000,1002,1011,1022,1027,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1148,1149,1151,1153,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1174,1214,1222],elementwis:[40,41],elementwise_affin:[1228,1229],elementwise_funct:[797,798,799,800],elemtn:[1141,1142],elif:1085,els:[930,940,955,960,1085],elsewher:[930,1027],emphas:1197,empti:[40,41,1085],enabl:[40,41,42,1197],encapsul:[793,795],encod:[930,965,1047,1049],end:[930,933,1197,1240],ensur:43,entir:[40,41,811,812,813,856,900,1085,1197,1214,1223],entri:[40,41,930,962,986,987,1011,1012],entropi:[1179,1180,1181,1182],enumer:1085,environ:1197,eps:[375,793,794],epsilon:[1031,1033,1034,1038,1179,1180,1181,1182,1183,1184,1228,1229,1230,1231,1232],equal:[40,41,526,646,797,798,799,930,932,938,939,948,1011,1028,1064,1077,1079,1141,1145],equality_matrix:[930,932],equat:[40,41,1148,1149],equival:[930,933,1064,1079],erf:[459,738,1064],error:[40,41,856,930,1012,1064,1074,1085,1158,1159,1226,1227,1230,1234],essenti:43,etc:[40,41,43,856,901,930,933,937,967,968,975,986,987,995,996,997,1003,1004,1029,1030,1085,1141,1142,1143,1144,1145,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237,1243],evalu:[40,41,811,812,813,930,991,1129,1130,1137],even:1243,evenli:[40,41,930,933,986,987,1011],everi:[930,932,1243],exact:[40,41],exampl:[43,854,855,930,944,1015,1197,1239,1240,1243],example_input:[854,855],exc_tb:1085,exc_typ:1085,exc_val:1085,exce:[930,992],except:[40,41,44,47,811,812,813,930,933,940,947,955,1024,1085],excess_s:1085,excit:[1197,1240],exclud:[59,61,930,933,1141,1145],exclus:[40,41,930,952,982,1031,1037,1141,1143],execut:[43,930,1024,1240],execute_with_gradi:[153,328,446,568,718,1031,1197,1239],exist:[40,41,930,955,1085,1197,1230,1234,1243],exp:[738,1064],expand:[40,41,930,961,965],expand_dim:[40,41,274,646,930,1085],expect:[930,934],explain:1240,explicitli:[1214,1223,1225,1226,1227,1240],expon:[43,815,840,930,1014],exponenti:[43,815,840,1064,1074,1075],expos:[930,937,949],express:[930,991],exsit:[40,41],extend:43,extra:[40,41,42,1031,1035],eye:[1054,1056],fabian:1197,fabio:1197,factor:[856,865,898,899,900,1031,1033,1034,1038,1039,1054,1059,1085,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221,1230,1231,1232,1233],falck:1197,fall:[1226,1227,1230,1234],fallback_to_non_compil:[1226,1227,1230,1234],fals:[15,18,19,40,41,42,59,66,67,68,69,70,797,799,802,803,808,809,811,812,813,856,874,887,895,900,905,906,913,914,915,916,930,932,952,955,960,965,972,982,988,1009,1011,1025,1027,1031,1034,1035,1036,1037,1038,1039,1040,1054,1057,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1148,1150,1151,1152,1153,1154,1155,1156,1185,1186,1187,1191,1195,1203,1204,1226,1227,1230,1231,1232,1233,1234,1235],fan_in:1205,fan_mod:1205,fan_out:1205,far:[1129,1130,1137,1239],faster:[854,855],favourit:[1197,1239],feasibl:1243,feat_dim:[1166,1177,1178],fed:[856,900,1085],feed:[856,900,1085],field:1243,file:[40,41,43,930,1008,1019,1226,1227],filepath:[40,41],fill:[40,41,930,966,996,1029,1141,1143],fill_valu:[930,966],filter:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221,1243],filter_s:[1214,1215,1216],filter_shap:[1214,1217,1218,1219,1220,1221],find:[40,41,1243],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,198,199,375,376,487,488,606,607,793],finish:[1197,1243],finit:[797,799],first:[40,41,854,855,856,887,930,938,947,951,959,986,987,1015,1017,1031,1035,1054,1059,1081,1082,1083,1084,1085,1129,1130,1137,1141,1147,1148,1153,1155,1214,1225,1226,1227,1230,1234,1240,1243],firstlayersiren:[1197,1205],firstli:[1240,1243],fist:[856,900,1085],fit:[40,41,930,1000,1047,1052],fkt:1243,flag:[40,41,1031,1037],flat:[40,41,43,930,1000,1003],flat_list:[40,41],flatten:[40,41,802,803,930,965,1000,1148,1150,1151,1152,1154,1156],flatten_key_chain:[40,41,1226,1227],flexibl:[1197,1240],flip:[40,41,117,274,409,526,646,930],float32:[43,906,910,918,919,930,933,937,975,996,997,1029,1030],float_dtyp:[906,914,924],float_img_to_uint8_img:1047,floor:[274,646,930,964,1085],floormod:[274,646,930],fluid:1243,fname:[1185,1187,1191,1226,1227],folder:[43,1197],follow:[40,41,43,793,795,856,900,930,978,979,980,1013,1014,1031,1034,1036,1038,1039,1040,1085,1129,1133,1138,1166,1177,1178,1197,1214,1224,1230,1234],followng:[793,794],fomaml_step:1081,forget:[1031,1033,1034,1038,1230,1231,1232],fork:[930,993],forkserv:[930,993,1085],form:[15,16,17,18,19,40,41,930,937,1031,1034,1036,1038,1039,1040,1129,1131,1138,1166],format:[40,41,43,856,874,906,910,912,916,930,933,937,975,996,997,1029,1030,1085,1148,1149,1197,1239,1240],format_fn:[40,41],format_key_chain:[40,41],forward:[1226,1227,1230,1234,1239],found:[40,41,42],fourier:[930,965],fourier_encod:930,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,89,95,98,99,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,158,159,161,162,166,167,168,169,170,171,173,174,175,176,177,178,179,182,184,185,187,188,189,190,191,192,193,199,200,201,204,205,208,214,217,218,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,334,335,336,338,339,340,341,343,344,347,348,349,350,352,353,354,355,356,357,358,359,362,364,365,366,367,368,369,370,376,377,378,381,382,383,386,392,395,396,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,452,453,454,456,457,460,462,464,465,466,467,468,469,470,473,474,476,477,478,479,480,481,482,488,489,490,493,494,495,498,504,507,508,520,521,522,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,607,608,609,612,613,614,617,623,626,627,639,640,641,642,643,644,645,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,725,726,727,729,730,731,732,733,734,736,737,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,755,756,757,758,759,760,762,763,764,765,766,767,768,771,772,773,774,775,776,777,779,780,782,783,784,785,786,787,788,794,795,798,799,800,803,808,809,812,813,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1186,1187,1189,1190,1192,1196,1197,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1242,1243],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1085,framewrk:[930,993],freeli:43,frequenc:[930,965],from:[40,41,42,43,808,809,811,812,813,856,865,866,900,906,912,930,955,962,967,968,975,1001,1012,1020,1027,1031,1034,1038,1047,1051,1081,1082,1083,1084,1085,1129,1131,1138,1141,1142,1143,1144,1145,1148,1153,1155,1166,1174,1177,1197,1203,1204,1214,1222,1225,1230,1234,1239,1240],from_cal:[1226,1227],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[117,274,409,526,646,793,794,930,1197],full_matric:[1054,1059],fulli:[43,1197,1214,1224,1225,1239],func:[40,41,854,855,856,900,930,942,1031,1035,1085],further:1243,furthermor:1243,futur:1243,gain:1205,gamma:[1183,1184],gather:[40,41,117,274,409,526,646,930,968],gather_nd:[40,41,117,274,409,526,646,930],gauss:[1064,1074],gaussian:[1158,1159],geglu:[1197,1200],gelu:[361,472,770,1158,1197,1200],gener:[23,40,41,43,854,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1037,1141,1143,1145,1146,1197,1230,1234],geometr:[930,965],get:[40,41,793,794,795,856,865,866,874,889,890,895,899,902,905,906,916,917,930,934,969,970,971,999,1085,1195,1197,1214,1223,1243],get_all_arrays_in_memori:930,get_all_arrays_on_dev:856,get_framework:59,get_initial_st:[1214,1223],get_min_bas:930,get_min_denomin:930,get_mod_kei:[1226,1227],get_num_dim:[646,930],get_param:1191,get_param_recurs:1191,get_referrers_recurs:930,getfullargspec:1085,gist:1197,give:[808,809,930,1001,1240],given:[40,41,43,808,809,856,889,895,898,899,900,902,905,906,910,930,933,937,944,952,953,962,968,986,987,996,997,1000,1003,1004,1011,1018,1023,1025,1029,1030,1031,1033,1034,1036,1038,1039,1040,1054,1056,1060,1064,1065,1085,1129,1134,1135,1141,1144,1145,1147,1148,1151,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1203,1204,1243],global:[40,41,42,856,865,866,873,898,899,900,906,913,914,915,930,954,970,971,999,1005,1006,1007,1013,1014,1031,1046,1085,1183,1184,1189,1190,1197,1228,1229],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1197,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224],got:1197,gpu0:43,gpu2:43,gpu:[856,891,894,1085],gpu_is_avail:[856,1085],grad:[1197,1230,1234,1239],gradient:[25,40,41,856,900,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1050,1081,1082,1083,1084,1197,1230,1231,1232,1233,1234,1235,1239,1243],gradient_descent_upd:[1031,1081,1082,1083,1084],gradient_imag:[156,333,451,573,724,1047],gradienttrack:[1031,1032],graph:[1031,1034,1036,1038,1039,1040,1185,1186,1187,1192,1197,1226,1227],graph_compil:[1185,1186,1187,1188,1189,1190,1191,1195],greater:[40,41,930,933,963,1012,1141,1145],green:[40,41,42,1241,1242],grid:[930,991],group:[1047,1052],guid:[1197,1198,1243],gym:1197,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1243,half:[930,933,1085,1141,1145],hand:1197,handl:[40,41,42,43,854,855,856,872,874,883,884,895,902,905,1031,1034,1036,1038,1039,1040,1085,1230,1231,1232,1233,1234,1235],has:[40,41,43,930,1015,1064,1069],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,930],hasattr:1085,have:[40,41,43,793,794,797,799,811,812,813,815,840,930,947,951,956,957,958,959,966,1015,1031,1037,1045,1054,1059,1064,1073,1085,1197,1239,1240],hdf5:[40,41,1226,1227],head:[1166,1177,1214,1225],head_dim:[1214,1225],height:[1047,1052],height_cutoff:[40,41],help:[59,375,856,868,869,870,871,906,1031,1191,1195,1197,1205,1207,1208,1210,1211,1213],helper:1197,here:[43,1197],hidden:[1166,1176,1214,1223],hierarch:[930,949],hierarchi:[40,41],high:[40,41,1141,1143,1145],higher:[1031,1034,1036,1038,1039,1040,1054,1059],highest:[1141,1143],highest_util:1085,highest_util_nod:1085,highli:1197,highlight:1243,highlight_subgraph:[1185,1187,1191],hint:43,hkt:1243,hold:[906,910,930,933,937,1003,1004],host:1197,hot:[930,995],how:[1197,1214,1225,1226,1227,1240,1243],howev:[43,1240],http:1243,hyperbol:[1064,1066,1068,1071,1072,1078,1080,1158,1165],hypothet:1243,icon:1197,idea:1197,ident:[40,41,43,117,274,409,526,646,930],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[793,794],if_exist:[40,41],ignor:[40,41,1230,1234],ignore_key_error:[40,41],ignore_miss:[1230,1234],ignore_non:[40,41],iinfo:[78,198,375,487,606,793],imag:[27,930,985,1048,1049,1050,1051,1052,1053,1166,1167,1168,1169,1170,1172,1173,1197,1243],image_dim:[1047,1051],imkkhk:1243,immedi:[1197,1240,1243],implement:[43,815,840,1197,1240,1243],in_featur:[1166,1175],includ:[40,41,43,811,812,813,930,933,974,1013,1014,1026,1129,1130,1141,1145,1214,1224,1225,1228,1229,1239],include_deriv:[1129,1131,1138],include_empti:[40,41],include_gener:[1185,1186,1187,1191,1226,1227],include_inf:[40,41,930,974,1026],include_nest:[1129,1130],include_self:[40,41],inclus:[1141,1143],incom:[1166,1175],increas:[856,878,882,888,930,948,961,1028,1085,1129,1138],increasingli:1243,increment:[930,979,1085],increment_param_count:1191,inde:1197,indent:[40,41,42],independ:[1141,1142],index:[40,41,930,935,936,967,968,991,1012,1015,1129,1132,1134,1135,1136,1139],index_nest:1129,indic:[40,41,808,809,930,935,936,967,968,976,995,1003,1004,1129,1130,1132,1134,1135,1136,1137,1139,1140,1141,1142,1158,1163,1166,1167,1168,1169,1170,1171,1172,1173,1183,1184,1214,1215,1216,1217,1218,1219,1220,1221,1226,1227],indices_wher:[117,274,409,646,930],inevit:1243,inf:[40,41,802,803,930,974,983,1026,1064,1069],infer:[808,809,854,855,930,962,972,975,1001,1009,1047,1051,1240,1243],infin:[797,799,930,983],inform:[793,794,795,1031,1042],init_c:[1166,1176],init_h:[1166,1176],init_on_first_step:[1230,1234],initi:[40,41,42,59,375,856,868,869,870,871,906,1031,1085,1166,1176,1191,1195,1197,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1230,1234],initialz:[1226,1227],inner:[1081,1082,1083,1084],inner_batch_fn:[1081,1082,1083],inner_batch_shap:[1166,1175],inner_cost_fn:[1081,1082,1083],inner_grad_step:[1081,1082,1083,1084],inner_learning_r:[1081,1082,1083,1084],inner_optimization_step:[1081,1082,1083,1084],inner_v:[1081,1082,1083],inp:1085,inplac:[40,41,930,940,977,981,1016,1031,1034,1036,1038,1039,1040,1203,1204,1230,1231,1232,1233,1234,1235],inplace_arrays_support:930,inplace_decr:[117,274,409,526,646,930],inplace_incr:[117,274,409,526,646,930],inplace_oper:[0,11,12],inplace_upd:[40,41,117,274,409,526,646,930,1203,1204],inplace_variables_support:930,input:[15,18,19,40,41,42,43,797,798,799,800,802,803,808,809,811,812,813,854,855,856,865,866,873,874,875,878,879,882,888,900,901,906,910,911,913,914,915,916,917,921,922,930,931,932,935,936,938,939,940,941,943,944,945,946,947,948,950,952,953,955,956,957,958,959,960,961,962,963,964,965,972,974,975,976,978,979,980,982,983,984,985,989,990,991,992,1000,1002,1009,1010,1012,1015,1016,1017,1018,1020,1021,1022,1023,1025,1026,1028,1031,1035,1037,1042,1046,1047,1048,1049,1050,1051,1053,1054,1057,1059,1061,1062,1063,1064,1066,1068,1069,1071,1072,1073,1077,1078,1079,1080,1081,1082,1083,1084,1085,1141,1142,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1183,1184,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228,1229,1240],input_ax:[856,900,1085],input_channel:[1214,1215,1216,1217,1218,1219,1220,1223,1224],input_queu:1085,inputs_split:1085,insert:[930,961],insid:43,inspect:1085,inspir:1243,instal:1197,instanc:[15,16,17,18,19,40,41,43,815,840,856,865,1085,1203,1204,1236,1237],instead:[40,41,1148,1150,1151,1152,1153,1154,1155,1156,1243],int32:43,int64:[906,910,930,933,937,975,996,997,1029,1030],int_dtyp:[906,915,925],integ:[40,41,793,795,802,803,811,812,813,906,922,930,933,943,963,1002,1011,1141,1143,1146],integr:1197,intend:43,inter:1197,interchang:[40,41,930,1017],interest:1197,interfac:[930,937,1240],intermedi:[40,41],intern:[40,41,856,1031,1045,1085,1129,1130,1137,1138,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1236,1237],interpol:[930,985],intersect:[1064,1065],interv:[40,41,811,812,813,930,933,944,986,987,1064,1067,1141,1145],introduc:1243,inv:[728,1054,1243],invalid:[811,812,813],invalid_dtyp:906,invers:[1054,1056,1058,1064,1065,1066,1067,1068,1069,1071,1243],invert:[1054,1056,1058],invest:1243,invoc:[854,855],irrespect:1197,is_al:1085,is_arrai:[117,274,409,526,646,930,1085],is_float_dtyp:906,is_int_dtyp:906,is_mean:1085,is_sum:1085,is_var:[1191,1195],is_vari:[153,328,446,568,718,1031],isfinit:[83,203,380,492,611,797],isinf:[274,526,646,930],isinst:1085,isnan:[274,526,646,930],isnumer:1085,item:[15,19,40,41,815,827,828,856,865,866,868,875,877,879,881,887,906,913,930,949,973,1013,1014,1085,1129,1133,1134,1135,1138,1139,1140,1197,1226,1227,1239],iter:[15,16,17,18,19,40,41,42,854,855,856,859,860,862,863,865,866,869,870,877,879,880,881,882,887,900,930,932,941,947,948,962,975,991,996,1000,1001,1004,1009,1011,1015,1018,1023,1028,1029,1085,1129,1130,1131,1133,1137,1138],iterbal:[856,877,881,887,1085],its:[808,809,856,900,930,975,1001,1017,1023,1085,1197],itself:[43,1129,1138],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,375,377,378,793,794,795,797,798,799,800,802,803,808,809,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1195,1197,1198,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1241,1242],ivy_backend:[40,41],ivy_bay:1243,ivyfcmodel:1239,ivyh:[40,41,42],ivymodul:[183,778],jame:1197,jax:[1031,1037,1197,1243],jax_concat:1197,jnp:1197,join:[40,41,930,947,1015,1085],journal:1197,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1197,1214,1223,1243],kaimingnorm:[1205,1209],kalman:1243,kalman_filt:1243,kalman_filter_step:1243,kalman_filter_upd:1243,keep:[40,41,856,901,930,1025,1085,1197,1243],keep_inner_v:[1081,1082,1083],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1081,1082,1083],keepdim:[40,41,802,803,811,812,813,930,1025,1054,1057,1148,1150,1151,1152,1153,1154,1155,1156],kei:[15,16,17,40,41,42,815,820,856,868,930,949,1081,1082,1083,1085,1129,1132,1136,1166,1177,1178,1197,1203,1204,1214,1225,1230,1234],kept:[40,41,42,1081,1082,1083],kera:1243,kernel:[1166,1176],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,856,865,866,878,882,888,930,934,956,957,958,988,1085,1129,1133,1226,1227],keyword_color_dict:[40,41,42],kind:[793,794,795,1243],kwarg:[15,16,17,40,41,42,59,63,856,865,878,882,888,930,988,1085,1185,1186,1187,1191,1203,1204,1226,1227],kwarg_stateful_idx:[1185,1186,1187,1191,1226,1227],kwargs_clon:1085,kwargs_dist:1085,kwargs_uni:1085,label:[1179,1180,1181,1182],lamb:[1031,1038,1197,1230],lamb_upd:1031,lambda:[1085,1230,1233,1235,1239],lar:[1031,1038,1039,1197,1230],larger:[793,794,930,944],largest:[40,41,793,794,795,930,935,963],lars_upd:1031,last:[40,41,811,812,813,930,933,951,985,1011,1015,1054,1057,1059,1148,1153,1155,1158,1163,1166,1176,1214,1224],later:[40,41,930,942],latest:[1214,1223],layer:[1031,1034,1036,1038,1040,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1183,1184,1197,1205,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237,1243],layer_norm:1183,layernorm:[1197,1228],layerwis:[1031,1039,1230,1233],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1129,1130,1137],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1158,1159,1160],leaky_relu:[770,1158],learn:[808,809,1031,1034,1036,1038,1039,1040,1081,1082,1083,1084,1141,1147,1197,1230,1231,1232,1233,1234,1235,1240,1243],learnabl:[1183,1184,1228,1229],leav:[15,18,19,40,41,1129,1130,1131,1137,1138],left:[40,41,802,803,1054,1057,1148,1150,1151,1152,1153,1154,1155,1156,1197],leftmost:[40,41],len:1085,length:[40,41,42,930,933,1001,1012,1023],lenton2021ivi:1197,lenton:1197,less:[40,41,43,930,943,1085,1141,1145],less_util_node_str:1085,let:[1240,1243],level:1197,librari:[1197,1239,1243],lightweight:1197,like:[43,1031,1037,1141,1145,1197,1239,1240,1243],limit:[40,41,42,793,794,795,930,944,945,946],linalg:[29,1055,1056,1057,1058,1059,1060,1197],linear0:[1197,1239],linear1:1197,linear2:1239,linear:[930,965,985,1054,1158,1159,1160,1161,1166,1174,1197,1214,1215,1216,1217,1218,1219,1220,1221,1239],linear_algebra_extens:[802,803],linear_resampl:[117,274,409,526,646,930],linearli:[930,965],link:1197,linspac:[117,274,409,526,646,930,933],list:[15,18,19,40,41,43,811,812,813,856,865,866,875,876,878,879,880,882,885,886,900,930,933,937,939,991,1010,1011,1020,1025,1081,1082,1083,1085,1129,1130,1131,1133,1137,1138,1166,1167,1168,1169,1170,1171,1172,1173,1197,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221],list_join:[40,41,42],list_stack:[40,41],liter:[802,803],littl:1240,load:[40,41],loaded_kwarg:1085,loader:1197,local_set:[930,973],locat:[43,930,983,984,1141,1142],log:[738,930,987,1064,1085,1179,1180,1181,1182,1197],log_all_op:1191,log_global_inference_abs_tim:[1188,1197],log_global_inference_rel_tim:[1188,1197],logarithm:[1064,1076],logic:[31,797,800,811,812,813,1062,1063,1197],logical_and:[342,735,1061],logical_not:[83,203,380,492,611,797],logical_or:[342,735,1061],logit:[1179,1182],logspac:[117,274,409,526,646,930],look:[43,1240,1243],loop:[1081,1082,1083,1084],loss:[1180,1181,1182,1197,1239],loss_fn:[1197,1239],lot:1240,low:[40,41,1141,1143,1145],lower:[40,41,930,990,1141,1145],lower_depth:[1226,1227],lowest:[15,18,19,40,41,1129,1138,1141,1143],lstm:[1166,1176,1197,1214],lstm_updat:[43,1166],machin:[793,794,795,808,809,1141,1147,1197,1240,1243],mai:[930,933,955,959,1197,1240,1243],main:[930,975,1197],mainli:1197,make:[43,856,1085,1197,1240],maml:[1081,1082,1083],maml_step:1081,manag:[856,1085],mani:[40,41,43,930,1011,1197],manner:[15,18,19,40,41,43,1129,1138],manual:[1129,1130,1137,1243],map:[40,41,42,856,865,930,983,984,1085,1129,1134,1135,1138,1214,1225,1239],map_cont:[40,41],map_nest_at_index:1129,map_nest_at_indic:1129,map_sequ:[40,41],mapper:[856,865,866,1085],mask:[1166,1177,1178],match:[40,41,930,988],match_kwarg:930,math:[33,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1085,1197],mathbb:[1054,1060],mathbf:[1054,1060],matmul:[43,274,526,646,930,1243],matplotlib:1240,matric:[1166,1175],matrix:[40,41,930,932,945,989,1054,1055,1056,1057,1058,1060,1166,1175,1214,1224],matrix_norm:[40,41,160,337,455,577,728,1054],matter:1197,max:[40,41,375,793,794,795,930,945,946,957,990,1003,1004,1085,1148,1150,1230,1232],max_batch_s:[40,41],max_chunk_s:[856,900,1085],max_depth:[40,41,856,860,863,870,878,882,888,930,973,1085,1129,1138],max_dev_dim_step_ratio:856,max_freq:[930,965],max_length:[40,41],max_node_dim_step_ratio:1085,max_norm:[40,41,930,945,946],max_split_factor_step_s:[856,1085],max_trust_ratio:[1031,1038,1230,1232],maxim:[1197,1240,1243],maximis:1197,maximum:[40,41,42,646,856,878,882,888,900,930,935,944,945,946,965,1031,1038,1085,1129,1138,1148,1150],mayb:[15,18,19],mdi:1085,mean:[40,41,856,885,886,887,888,900,930,957,1081,1082,1083,1084,1085,1129,1133,1141,1144,1148,1151,1154,1156,1205,1239,1243],measur:[1166,1177,1214,1225],mech:1197,mechan:[1197,1243],medic:1243,memori:[856,872,895,900,902,905,1085,1166,1176,1197],meshgrid:[274,646,930],messag:[1241,1242],meta:[35,1082,1083,1084,1197],method:[40,41,42,43,930,937,949,991,1003,1004,1031,1038,1039,1085,1129,1130,1137,1138,1197,1214,1225,1226,1227,1240],might:[930,955,1243],min:[40,41,375,793,794,795,930,957,992,1003,1004,1013,1085,1148,1152],min_bas:[930,1014],min_denomin:[930,1013],min_dev_dim_s:856,min_node_dim_s:1085,min_sf_tune_step:[856,1085],min_unit_dev_tune_step:856,min_unit_node_tune_step:1085,mind:1197,mini:[1183,1184,1228,1229],minimum:[40,41,646,856,906,910,930,933,936,937,944,970,971,1005,1006,1013,1014,1085,1148,1152],miss:[1230,1234],ml_framework:[808,809,930,933],mod:[930,964],mod_depth:[1226,1227],mod_height:[1226,1227],mod_with_top_mod_key_chain:[1226,1227],mode:[40,41,854,855,856,885,886,887,888,900,1054,1059,1085,1240],model:[1197,1239],modul:[40,41,42,59,930,993,1085,1197,1198,1200,1201,1202,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228,1229,1236,1237,1243],moment:[1031,1033,1034,1038,1230,1231,1232],more:[43,930,1015,1085,1197,1240,1243],more_util_node_str:1085,most:[40,41,43,1197,1243],move:[40,41,43,856,901,1085],much:[1197,1243],multi:[930,993,1166,1177,1214,1225],multi_head_attent:1166,multi_index_nest:1129,multi_map:[40,41],multi_nod:1085,multidev:[856,867,868,869,888],multidevcontain:[40,41],multidevic:[856,865],multidevit:[856,859,862,865,866,870],multidevitem:[856,858,861],multidevnest:[856,860,863],multiheadattent:[1197,1214],multinod:[1085,1089],multinodecontain:1085,multinodeit:1085,multinodeitem:1085,multinodenest:1085,multinomi:[165,346,461,583,754,1141],multipl:[40,41,811,812,813,930,988,1011,1054,1056,1148,1150,1151,1152,1153,1154,1156,1183,1184,1214,1224,1240],multipli:[40,41,930,952,1148,1153],multiprocess:[40,41,42,646,856,865,930,1085],must:[40,41,42,43,797,799,811,812,813,815,840,856,885,886,887,888,900,930,933,947,949,951,959,990,992,1004,1015,1064,1070,1073,1085,1141,1146,1230,1234],mutabl:[1129,1131,1138],mutlidevic:[856,865],mutlinod:1085,mw_tm1:[1031,1034,1038],mx_concat:1197,mxnet:[43,1197,1243],my_func:43,mymodel:1197,name:[854,855,1185,1186,1187,1191,1239],namespac:[43,1240],nan:[40,41,797,799,930,974,984,1026],nativ:[15,17,18,19,40,41,43,856,872,874,883,884,895,902,905,906,911,918,919,1085,1197,1198,1203,1204],native_modul:[1203,1204],native_module_class:[1203,1204],nativearrai:[15,18,19,43,793,794,795,797,798,799,802,803,808,809,811,812,813,815,840,856,874,900,901,906,910,916,921,922,930,931,932,933,935,936,937,938,939,941,943,944,945,946,947,948,950,951,952,953,956,957,958,959,961,962,963,964,965,967,968,972,974,975,976,983,984,985,986,987,989,990,991,992,995,996,997,1000,1001,1002,1003,1004,1009,1011,1012,1015,1017,1018,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1085,1129,1131,1138],natur:[1064,1076,1243],ncdhw:[1166,1171,1172,1214,1219,1220],nchw:[1166,1169,1170,1173,1214,1217,1218,1221],ncw:[1166,1167,1168,1214,1215,1216],ndarrai:[43,375,377,378,930,1021],ndhwc:[1166,1171,1172,1214,1219,1220],nearest:[930,1002],need:[43,930,945,946,1166,1168,1170,1172,1197,1214,1216,1218,1220,1243],neg:[40,41,797,799,811,812,813,1148,1153,1155,1158,1160],negative_slop:1205,neither:1085,nest:[15,16,17,18,19,40,41,42,856,878,882,888,930,937,1020,1081,1082,1083,1085,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1226,1227,1230,1231,1232,1233,1234,1235],nested_indices_wher:1129,nested_map:[1085,1129],network:[1166,1175,1197,1198,1200,1214,1226,1227,1243],neural:[1166,1197,1200,1214,1239],new_node_percent_mem:1085,new_node_util:1085,new_node_utils_kei:1085,new_std:[1183,1184,1228,1229],newli:[854,855,930,941,942],newlin:[40,41,42],newshap:[930,941,1001],next:[793,794,1085,1226,1227,1230,1231,1232,1233,1234,1235],nhwc:[1166,1169,1170,1173,1214,1217,1218,1221],node:[40,41,1129,1130,1137],node_clon:1085,node_dist:1085,node_dist_arrai:1085,node_dist_it:1085,node_in:1085,node_mapp:1085,node_str:1085,node_to_str:1085,node_util:1085,nodedistit:1085,nodedistitem:1085,nodedistnest:1085,nodemanag:[1085,1096],nodemapp:1085,nodemappermultiproc:1085,noinspect:[43,857,907,908,909,1032,1085,1192],non:[40,41,811,812,813,854,855,906,920,1226,1227,1230,1234,1240],none:[40,41,42,43,59,61,64,793,794,795,802,803,808,809,811,812,813,854,855,856,865,866,872,873,898,899,900,901,906,913,914,915,930,933,937,954,955,960,962,966,967,968,973,975,977,978,979,980,981,986,987,993,995,996,997,1000,1003,1004,1005,1006,1011,1012,1013,1014,1023,1024,1029,1030,1031,1034,1036,1038,1039,1040,1046,1047,1051,1054,1057,1081,1082,1083,1084,1085,1129,1130,1133,1137,1138,1141,1142,1143,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1168,1170,1172,1175,1176,1177,1178,1183,1184,1185,1186,1187,1191,1195,1203,1204,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237],norm:[40,41,802,803,930,945,946,1054,1057,1184,1197,1229,1230,1232],normal:[1141,1144,1183,1184,1228,1229],normalized_idx:[1183,1184],normalized_shap:[1228,1229],notat:[40,41,1148,1149],note:43,noth:[40,41,1240],notimplementederror:1085,now:[40,41,856,901,930,931,1085,1197,1214,1225,1226,1227,1239,1240,1243],np_concat:1197,np_finfo:375,ns_tune_step:1085,num:[930,986,987],num_arrai:[40,41],num_arrays_in_memori:930,num_arrays_on_dev:856,num_band:[930,965],num_channel:[1214,1221],num_chunk:1085,num_chunks_floor:1085,num_class:[1141,1142],num_cpu_cor:856,num_gpu:[110,856,1085],num_head:[1166,1177,1214,1225],num_kei:[1166,1177,1178],num_lay:[1214,1223],num_or_size_split:[40,41,930,1011],num_output:1085,num_queri:[1166,1177,1178],num_sampl:[930,985,1047,1048,1141,1142],num_task:[1081,1082,1083,1084],number:[40,41,42,793,794,795,811,812,813,854,855,856,892,893,894,906,917,921,922,930,933,944,948,961,965,972,975,984,985,986,987,990,994,1000,1011,1018,1022,1026,1028,1054,1059,1081,1082,1083,1084,1085,1141,1142,1146,1148,1150,1151,1152,1154,1156,1166,1177,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1240,1243],numer:[43,797,799,815,840,930,970,971,1005,1006,1013,1014,1064,1073,1205],numhead:[1166,1177],numpi:[40,41,375,377,378,930,1021,1054,1059,1148,1149,1197,1239,1240,1243],nwc:[1166,1167,1168,1214,1215,1216],obj:[40,41],object:[40,41,42,59,375,793,794,795,856,906,910,930,933,937,1031,1129,1132,1134,1135,1136,1139,1140,1141,1147,1191,1195,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1226,1227],object_in:[930,937],observ:1085,occupi:[793,794,795,930,1003,1004],off:[930,933],offer:1197,offset:[1183,1184],often:1240,old:[40,41],on_init:[1214,1225,1226,1227],onc:[856,900,1085,1141,1142,1197],one:[40,41,43,802,803,856,885,886,887,888,900,906,912,930,975,988,995,1003,1004,1012,1015,1054,1057,1085,1148,1149,1150,1151,1152,1153,1154,1155,1156,1197,1240,1243],one_hot:[117,409,526,646,930],onearrai:[930,961],ones:[40,41,117,274,409,526,646,930,975,995,997,1197],ones_lik:[117,274,409,526,646,930],ongo:43,onli:[40,41,43,856,1085,1129,1130,1131,1137,1230,1231,1232,1233,1234,1235,1239,1240],onlin:1197,onto:[856,885,886,901,1085,1129,1133,1138],oom:[856,1085],open:[930,933,1141,1145,1197,1243],opencv:1240,oper:[40,41,797,800,930,940,956,957,958,986,987,1016,1031,1034,1036,1038,1039,1040,1061,1062,1063,1166,1167,1168,1169,1170,1171,1172,1173,1175,1197,1198],operand:[40,41,1148,1149],oppos:[930,965],optim:[856,1031,1034,1036,1038,1039,1040,1081,1082,1083,1084,1085,1197,1231,1232,1233,1235,1239,1243],optimizer_upd:1031,option:[15,18,19,40,41,42,43,802,803,808,809,811,812,813,854,855,856,865,866,874,878,879,880,881,882,885,886,887,888,895,898,899,900,901,905,906,911,916,920,929,930,932,933,935,936,937,945,946,947,952,954,955,962,965,966,967,968,972,974,975,982,985,986,987,988,991,993,995,996,997,1000,1003,1004,1007,1009,1011,1012,1013,1014,1015,1023,1025,1026,1029,1030,1031,1034,1036,1037,1038,1039,1040,1042,1047,1051,1054,1057,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1148,1150,1151,1152,1153,1154,1155,1156,1158,1159,1163,1166,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1240],ord:[930,962,1054,1059],order:[40,41,42,43,802,803,808,809,1031,1034,1036,1038,1039,1040,1054,1057,1081,1082,1083,1236,1237],ordered_node_util_kei:1085,org:1243,organ:43,origin:[40,41,42,802,803,930,997,1001,1030,1054,1057],other:[40,41,43,815,817,818,823,825,826,830,832,833,834,835,836,838,840,841,842,843,844,845,847,848,849,851,852,853,854,855,930,932,933,975,1031,1035,1141,1145,1197,1239,1240,1243],other_i:[43,815,840],otherwis:[15,16,17,18,19,40,41,797,799,811,812,813,856,873,906,913,914,915,930,940,1023,1024,1027,1031,1037,1042,1046,1081,1082,1083,1085,1148,1150,1151,1152,1154,1156],our:[1197,1243],out:[930,933,1064,1069,1166,1174,1176,1197,1214,1222],out_feat_dim:[1166,1177],out_featur:[1166,1174,1175],out_i:[797,799],outdat:1243,outer:[1081,1082,1083,1084],outer_batch_fn:[1081,1082,1083],outer_batch_shap:[1166,1175],outer_cost_fn:[1081,1082,1083],outer_v:[1081,1082,1083],outlin:1240,output:[40,41,43,856,865,866,900,930,933,942,966,975,1000,1018,1031,1035,1064,1070,1085,1141,1143,1144,1145,1166,1168,1170,1172,1174,1176,1177,1178,1197,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225],output_ax:[856,900,1085],output_axi:1085,output_channel:[1214,1215,1216,1217,1218,1219,1220,1223,1224],output_connected_onli:[1185,1187,1191,1226,1227],output_queu:1085,output_shap:[1166,1168,1170,1172,1214,1216,1218,1220],outsid:[930,944],over:[40,41,802,803,811,812,813,930,962,1054,1057,1141,1145,1148,1150,1151,1152,1154,1156,1183,1184,1228,1229],overal:1240,overflow:[930,933],overhead:1240,overrid:[930,995,997,1030],overriden:[1230,1234],overwrit:[40,41,856,900,1085],overwrite_at_key_chain:[40,41],own:[1197,1240,1243],packag:[43,1240],pad:[930,948,965,1028,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],pad_width:[930,948,1028],page:1197,pair:[1166,1178],parallel:[856,865,866,1085],parallelis:[856,865,866,1085],param:[40,41,42,43,811,813,856,900,930,931,967,968,995,996,1029,1085,1196,1197,1226,1227,1239],paramet:[15,16,17,18,19,40,41,42,793,794,795,797,798,799,800,802,803,808,809,811,812,815,840,854,855,856,865,866,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,916,917,918,919,920,921,922,929,930,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,950,951,952,953,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,974,975,976,978,979,980,982,983,984,985,986,987,988,989,990,991,992,993,996,997,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1042,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239],parameter:[1141,1144,1145],params_all_empti:1191,pardo:1197,pars:[930,949],part:[1031,1034,1036,1038,1039,1040,1064,1069,1197,1226,1227,1240],partial:[40,41,1226,1227],particl:1243,particular:1243,pass:[40,41,42,856,865,900,906,911,930,942,1031,1045,1081,1082,1083,1085,1203,1204,1226,1227,1230,1234,1236,1237],pattern:[40,41,930,956,957,958],per:[856,1085,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],percent_used_mem_on_dev:856,percent_used_mem_on_nod:1085,percentag:[856,895,1085],perf_count:1085,perform:[40,41,43,808,809,811,812,813,856,930,935,936,952,956,957,958,978,979,980,985,986,987,1031,1034,1036,1038,1039,1040,1047,1048,1081,1082,1083,1084,1085,1129,1134,1135,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1174,1176],permissable_step:1085,permit:43,permut:[930,1017,1023],perpendicular:[930,951],person:1197,physci:1243,pickl:[40,41,1085],pickle_filepath:[40,41],pid:1191,pinv:[337,728,1054],pip:1197,pipelin:1239,pkk:1243,pkkm1:1243,pkm1km1:1243,place:[40,41,43,856,901,930,961,966,978,979,980,1085,1230,1231,1232,1233,1234,1235],placehold:[1129,1138],point:[793,794,906,921,930,933,1064,1073],popul:[40,41,1141,1142],popular:1243,population_s:[1141,1142],portabl:[1197,1198],posit:[15,16,17,793,794,797,799,856,878,882,888,930,931,933,961,965,1085,1141,1146,1203,1204],possibi:[40,41],possibl:[930,988,1020,1047,1052,1243],post:[1183,1184],post_shap:[40,41],power:[43,815,840,846,930,970,1005,1014,1205],practic:1197,pre:[856,1085,1197],pre_shap:[40,41],precis:[793,794],pred:[1179,1180,1181,1182],predict:[1179,1180,1181,1182,1243],preprint:1197,present:[40,41],preserv:[40,41,42,930,962,1031,1042],preserve_typ:[40,41,1031,1042],press:1197,prevent:[43,1031,1033,1034,1038,1085,1230,1231,1232],previou:[1031,1034,1038],previous:[930,942],prime:1197,print:[40,41,42,856,896,930,998,1197,1239],print_all_arrays_in_memori:930,print_all_arrays_on_dev:856,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1230,1234],prob:[1141,1142,1166,1174,1214,1222],probabl:[1141,1142,1166,1174,1214,1222],problem:[43,1243],process:[43,856,865,866,895,905,930,993,1085],process_specif:[856,895,905,1085],prod:[40,41,930,957],produc:[856,865,866,1085],product:[40,41,930,951,952,989,1148,1149,1166,1177,1178,1214,1225],profil:[110,268,407,519,638,856,1085],project:[1197,1239,1240,1243],promot:[43,815,840,1064,1073],prompt:1197,properli:43,properti:[40,41,375,856,868,1085,1191,1195,1226,1227,1230,1231,1232,1233,1235],provid:[40,41,43,811,812,813,854,855,856,873,906,913,914,915,920,929,930,955,995,997,1004,1030,1031,1034,1036,1038,1039,1040,1046,1085,1197,1214,1223,1230,1231,1232,1233,1234,1235,1240],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1054,1058],ptype:[1191,1195],pure:[40,41,1197,1243],purpos:1243,put:1085,pybroadexcept:1085,pyprotectedmemb:[1085,1192],pyshadowingbuiltin:43,pyshadowingnam:[857,907,908,909,1032,1085],python:[40,41,856,895,905,930,933,1085,1197],pytorch:[1031,1034,1036,1038,1039,1040,1197,1230,1231,1232,1233,1234,1235,1239,1240,1243],pyunresolvedrefer:1085,quadrant:[1064,1070],queri:[40,41,815,829,850,856,889,899,1085,1166,1177,1178,1214,1225],query_dim:[1214,1225],query_kei:[40,41],queue:[40,41,42,856,865,866,930,999,1007,1085],queue_class:[856,865,866,1085],queue_load_s:[40,41,42],queue_timeout:[40,41,42,930,1085],quick:1197,quickli:1239,radian:[797,798,1064,1065,1067,1070,1077,1079],rai:[1064,1065],rais:[40,41,43,811,812,813,815,840,930,940,970,1005,1012,1014,1024,1085,1226,1227,1230,1234],ram:[856,895,902,905,1085],randint:[165,346,583,754,1141],random:[37,40,41,1142,1143,1144,1145,1146,1147,1197],random_crop:1047,random_norm:[165,346,583,754,1141],random_uniform:[165,346,583,754,1141],randomli:[1047,1051,1166,1174,1214,1222],randomness_factor:[1185,1187,1191,1226,1227],rang:[930,933,986,987,1064,1070,1085,1197,1239,1243],rank:[811,812,813,930,948,1025,1028],rate:[1031,1034,1036,1038,1039,1040,1081,1082,1083,1084,1214,1225,1230,1231,1232,1233,1234,1235],rather:[40,41,856,900,930,933,982,1031,1037,1085],ratio:[856,1031,1038,1047,1052,1085,1230,1232],raw:[40,41],raw_delta:1085,reach:[856,878,882,888,1085,1129,1138],read:[40,41],readi:[1085,1239],real:[1064,1065,1069],realiti:1240,rearrang:[40,41,930,956,958],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1081,1083],receiv:[856,865,866,930,934,988,1085,1214,1224],receivess:[856,1085],receiving_fn:1191,receivng:[1081,1084],recev:[1081,1082,1083],recognit:1243,recommend:1197,rectifi:[1158,1160,1161],recurr:[1166,1176],recurrent_bia:[1166,1176],recurrent_kernel:[1166,1176],recurs:[40,41,1129,1130,1131,1137,1138],redefin:43,reduc:[40,41,811,812,813,856,900,930,957,1085,1148,1150,1151,1152,1153,1154,1155,1156],reduce_max:[40,41,172,351,463,588,761,1148],reduce_mean:[40,41,172,351,463,588,761,1148,1197,1239],reduce_min:[40,41,172,351,463,588,761,1148],reduce_prod:[40,41,172,351,463,588,761,1148],reduce_std:[40,41,351,1148],reduce_sum:[40,41,172,351,463,588,761,1085,1148],reduce_var:[40,41,172,351,463,588,761,1148],reduct:[39,40,41,811,812,813,930,957,1003,1004,1149,1150,1151,1152,1153,1154,1155,1156,1197],refactor:43,refer:[811,812,813,1031,1033,1034,1054,1060,1214,1224,1243],reflected_oper:[0,13,14],regard:[856,1085],regardless:[40,41,854,855],register_paramet:1239,reimplement:1243,rel:[1031,1034,1036,1038,1039,1040],rel_slice_obj:1085,relev:[1230,1231,1232,1233,1234,1235],relu:[770,1158,1159,1160,1197,1239],remain:[43,930,1001,1129,1133],remaind:[40,41,930,964,1011],remov:[40,41,930,1012,1081,1082,1083],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,930,962],rep:[930,1018],repeat:[40,41,274,646,930,958,1018,1085,1240],repeated_config_check:[856,1085],repeatedli:[1129,1136],repetit:[40,41,930,1000,1018],replac:[40,41,43,930,944,1003,1004,1141,1142],repo:1197,repres:[43,906,912,917,1166,1175],represent:[40,41,42,43,793,794,795,856,883,884,906,912,918,919,930,1010,1020,1085],reptil:[1081,1084],reptile_step:1081,requir:[43,854,855,906,910,930,933,937,1203,1204],resampl:[930,985],reshap:[40,41,43,646,930],reshape_lik:[40,41],respect:[930,959,1031,1033,1034,1035,1036,1038,1039,1040,1064,1073,1081,1082,1083,1084],respons:1085,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,797,799,800,802,803,811,812,813,815,840,856,865,930,933,959,1003,1004,1015,1054,1057,1061,1062,1063,1064,1073,1085,1148,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1197],ret:1085,ret_dict:1085,ret_fn:[856,865,866,1085],retain:[1031,1035],retain_grad:[1031,1035],retreiv:1085,retrn:[930,1010],return_cont:[40,41],return_dict:[40,41],return_graph:[1185,1186,1187],return_inner_v:[1081,1082,1083,1084],return_sequ:[1214,1223],return_st:[1214,1223],rev:[930,955],revers:[40,41,930,955,962,1023],right:[40,41],rk_e:1243,robot:1197,ronald:1197,round:[274,646,930,933,1085],row:[930,975,1141,1142],rule:[43,815,840,930,933,1064,1073],run:[856,865,1031,1033,1034,1038,1081,1082,1083,1084,1085,1197,1198,1214,1225,1226,1227],safe:[856,865,1085],safety_factor:[856,1085],same:[15,16,17,40,41,43,856,865,866,900,901,906,910,930,931,943,947,963,964,967,968,995,997,1002,1003,1004,1015,1030,1031,1037,1042,1054,1059,1064,1069,1081,1082,1083,1085,1148,1149,1166,1167,1168,1169,1170,1171,1172,1173,1197,1214,1215,1216,1217,1218,1219,1220,1221,1239,1243],same_arrai:[40,41],sampl:[930,985,1047,1048,1141,1142,1144,1145,1166,1174,1197,1214,1222],satisfi:[930,937,1054,1056,1060],save:[40,41,930,1008,1019,1047,1049,1226,1227],save_debug_info:1191,save_dir:[856,871,1085],save_to_disk:[1185,1187,1191,1226,1227],save_weight:[1226,1227],scalar:[930,944,995,1022,1026],scale:[856,898,899,1031,1039,1085,1166,1174,1177,1178,1183,1184,1214,1222,1225,1230,1233],scaled_dot_product_attent:1166,scatter:[930,995,1003,1004],scatter_flat:[117,274,409,526,646,930],scatter_nd:[117,274,409,526,646,930],scene:[1031,1034,1036,1038,1039,1040],schemat:1197,screen:[40,41],search:[15,18,19,40,41],second:[40,41,856,887,930,938,951,959,999,1007,1017,1031,1033,1034,1038,1081,1083,1085,1230,1231,1232],secondli:1243,see:[43,59,375,811,812,813,815,840,856,868,869,870,871,906,930,933,986,987,1031,1064,1073,1191,1195,1197,1205,1207,1208,1210,1211,1213],seed:[40,41,165,754,1141],seed_valu:[40,41,1141,1146],seem:1197,seen_set:[930,973],select:[930,937,1012,1240,1243],self:[40,41,43,59,375,815,840,856,868,869,870,871,906,1031,1085,1191,1195,1197,1205,1207,1208,1210,1211,1213,1230,1234,1239,1243],sent:1085,seper:[930,965],seq:[40,41,42,1148,1149,1226,1227],sequenc:[15,16,17,40,41,42,43,802,803,854,855,856,865,866,875,876,877,878,879,880,881,882,885,886,900,906,910,930,933,937,939,941,947,948,962,975,988,991,996,1000,1001,1004,1011,1015,1018,1023,1028,1029,1031,1035,1047,1051,1052,1054,1057,1085,1129,1140,1141,1143,1145,1148,1150,1151,1152,1153,1154,1155,1156,1166,1167,1168,1169,1170,1171,1172,1173,1183,1184,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1223,1226,1227,1228,1229,1230,1234,1236,1237],sequenti:1197,set:[15,18,19,40,41,802,803,856,885,886,898,899,900,930,932,954,975,1005,1006,1007,1008,1031,1034,1036,1037,1038,1039,1040,1054,1057,1085,1129,1130,1137,1139,1140,1141,1142,1146,1148,1150,1151,1152,1153,1154,1155,1156,1195,1197,1214,1223,1230,1231,1232,1233,1234,1235,1240,1243],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1195,set_debug_mod:44,set_default_devic:856,set_default_dtyp:906,set_default_float_dtyp:906,set_default_int_dtyp:906,set_default_nod:1085,set_exception_debug_mod:44,set_framework:[40,41,59,1085,1197,1239,1240,1243],set_ivy_backend:[40,41],set_min_bas:930,set_min_denomin:930,set_nest_at_index:1129,set_nest_at_indic:1129,set_param:1191,set_queue_timeout:930,set_split_factor:[856,1085],set_stat:[1230,1231,1232,1233,1234,1235],set_tmp_dir:930,set_with_grad:1031,setter:1085,sever:1243,sgd:[1197,1230],shape0:1085,shape:[40,41,43,646,856,868,906,910,930,931,941,943,947,948,961,962,963,964,966,968,972,975,995,996,997,1000,1001,1002,1003,1004,1010,1012,1015,1028,1029,1030,1047,1051,1054,1056,1064,1069,1070,1085,1141,1143,1144,1145,1148,1149,1166,1168,1170,1172,1191,1195,1214,1216,1217,1218,1219,1220,1221,1228,1229],shape_slic:[40,41],shape_to_tupl:930,share:[40,41,1197,1240],shift:1085,should:[40,41,42,43,797,799,815,840,854,855,856,930,941,942,949,995,1001,1031,1034,1036,1038,1039,1040,1064,1073,1085,1148,1149,1197],show:[40,41,1191,1197,1243],show_debug_info:1191,show_graph:[1185,1197,1226,1227,1230,1234],show_mod_in_top_mod:[1226,1227],show_structur:[1226,1227],show_sub_contain:[40,41],show_v:[1226,1227],show_v_in_top_v:[1226,1227],shown:[40,41],shp:1085,shuffl:[40,41,165,754,1141],shuffle_h5_fil:[40,41],sigmoid:[770,1158,1197,1239],signatur:[43,59,375,856,868,869,870,871,906,1031,1191,1195,1205,1207,1208,1210,1211,1213],signific:1243,similar:[43,1166,1177,1214,1225],simpl:[43,930,960,1197,1240,1243],simplest:1240,simpli:[40,41,43,1197,1240,1243],simultan:1197,sin:[738,930,965,1064,1079,1240],sinco:1240,sine:[1064,1067,1068,1077,1078],singl:[40,41,854,855,856,865,866,885,886,887,888,930,1012,1022,1026,1047,1052,1085,1141,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1197,1240,1243],singleton:[811,812,813],singular:[1054,1059],sinh:[738,1064],siren:[1197,1205],size:[40,41,42,802,803,856,879,880,881,882,898,899,900,930,933,941,986,987,1003,1011,1047,1051,1054,1057,1059,1085,1141,1142,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1214,1215,1216],size_ordered_arrai:[40,41],skew:[1054,1060],skinv:1243,skip:[40,41],slice:[40,41,808,809,930,967,968,1085,1129,1136],slice_kei:[40,41],slice_obj:[40,41,1085],slice_via_kei:[40,41],slide:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],slope:[1158,1160],small:[1179,1180,1181,1182,1183,1184,1197,1228,1229,1240],smaller:[930,944],smallest:[40,41,793,794,795,930,936,943],smallest_norm:[375,793,794],softmax:[181,472,770,1158,1166,1177,1178],softplu:[770,1158],solv:1243,some:[40,41,43,930,933,1031,1033,1034,1036,1038,1039,1040,1045,1166,1174,1197,1214,1222,1240,1243],some_backend:43,some_namespac:43,someth:[43,1243],something_cool:43,somewher:[40,41],sort:[40,41,42,809,1054,1059,1085],sort_by_kei:[40,41],sorting_funct:[808,809],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,375,377,378,793,794,795,797,798,799,800,802,803,808,809,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1195,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1241,1242,1243],space:[930,933,965,986,987],spars:[1179,1182],sparse_cross_entropi:1179,spawn:[930,993],specif:[40,41,43,856,898,930,949,956,957,958,993,1081,1082,1083,1084,1085,1141,1147,1197,1226,1227,1239,1240],specifc:[1141,1142],specifi:[40,41,43,802,803,811,812,813,856,875,876,877,878,879,880,881,882,885,886,890,892,896,899,900,901,906,910,912,930,933,935,936,937,944,947,948,966,967,968,974,986,987,1015,1025,1028,1054,1057,1085,1129,1134,1135,1139,1140,1148,1149,1150,1151,1152,1153,1154,1155,1156],split:[40,41,117,274,409,526,646,856,865,879,880,881,882,898,899,900,930,988,1085],split_arg:1085,split_factor:[856,865,1085],split_func_cal:[856,1085],split_siz:1085,spread:[856,888,1085],squar:[930,975,1054,1056],squeez:[117,274,409,526,646,930],stabil:[808,809,930,1013,1014],stabl:[808,809,930,970,971,1005,1006,1013,1014],stable_divid:930,stable_pow:930,stack:[40,41,274,646,930,1047,1052,1129,1130,1137,1214,1223],stack_imag:[156,333,451,573,724,1047],stacked_dim_s:1085,stage:43,standard:[40,41,43,793,794,1141,1144,1148,1154,1183,1184,1228,1229],start:[40,41,856,871,930,933,986,987,1085,1197,1240],starting_index:[40,41],starting_split_factor:[856,1085],state:[1085,1166,1176,1185,1186,1187,1191,1197,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239],statement:1240,static_argnam:[854,855],static_argnum:[854,855],std:[1141,1144],step:[40,41,856,930,933,986,987,1031,1033,1034,1036,1038,1039,1040,1081,1082,1083,1084,1085,1197,1230,1231,1232,1233,1234,1235,1239,1243],stephen:1197,stick:1197,still:[40,41],stochast:[1230,1235],stop:[40,41,856,871,900,930,933,986,987,1031,1034,1036,1038,1039,1040,1042,1081,1082,1083,1084,1085,1230,1231,1232,1233,1234,1235],stop_gradi:[40,41,328,446,568,718,856,900,1031,1034,1036,1038,1039,1040,1081,1082,1083,1084,1085,1230,1231,1232,1233,1234,1235],stopiter:1085,store:[40,41,930,965,1011,1031,1045,1226,1227],store_var:[1226,1227],str:[15,16,17,40,41,42,43,375,377,378,793,794,795,802,803,854,855,856,865,866,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,900,906,911,912,917,918,919,920,921,922,929,930,937,954,956,957,958,991,993,996,1003,1004,1054,1057,1081,1082,1083,1084,1085,1129,1133,1148,1149,1203,1204,1214,1225,1226,1227],str_to_nod:1085,straight:1240,strength:[1197,1243],stride:[1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],string:[40,41,43,856,872,874,883,884,889,895,901,902,905,906,910,916,918,919,920,929,930,933,937,954,975,996,997,1029,1030,1085,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221,1226,1227],structur:[40,41,42,43,930,949],structural_diff:[40,41],sub:[40,41,856,879,880,885,886,887,888,930,1011,1081,1082,1083,1084,1085],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1085,sub_mod:[1226,1227],sub_modul:[1236,1237],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1197,1198,1228,1229,1236,1237],subsequ:43,subset:43,substr:[40,41],suggest:1197,suitabl:[1047,1052],sum:[40,41,856,885,886,887,888,900,930,953,957,1003,1004,1085,1148,1149,1155],summat:[40,41,1148,1149],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,85,86,89,95,98,99,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,158,159,161,162,166,167,168,169,170,171,173,174,175,176,177,178,179,182,184,185,187,188,189,190,191,192,193,199,200,201,204,205,208,214,217,218,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,334,335,336,338,339,340,341,343,344,347,348,349,350,352,353,354,355,356,357,358,359,362,364,365,366,367,368,369,370,376,377,378,381,382,383,386,392,395,396,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,452,453,454,456,457,460,462,464,465,466,467,468,469,470,473,474,476,477,478,479,480,481,482,488,489,490,493,494,495,498,504,507,508,520,521,522,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,607,608,609,612,613,614,617,623,626,627,639,640,641,642,643,644,645,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,725,726,727,729,730,731,732,733,734,736,737,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,755,756,757,758,759,760,762,763,764,765,766,767,768,771,772,773,774,775,776,777,779,780,782,783,784,785,786,787,788,794,795,798,799,800,803,809,812,813,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,855,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1186,1187,1189,1190,1192,1196,1197,1201,1202,1204,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1242,1243],supports_inplac:930,suppos:1243,svd:[337,577,728,1054],swap:[40,41,930,1017],swapax:[40,41,526,646,930,1243],symmetr:[1054,1060],tab:1197,take:[930,985],taken:[1148,1150,1151,1152,1154,1156],tan:[738,1064,1069],tangent:[1064,1069,1070,1071,1079,1080,1158,1165],tanh:[738,770,1064,1158],target:[40,41,856,872,875,876,877,878,879,880,881,882,885,886,887,888,901,1085,1197],target_dict:[40,41],task:[1081,1082,1083,1084],team:1243,templat:1197,temporari:[930,1008,1019],tensor:[40,41,43,808,809,856,874,906,916,930,933,935,936,941,986,987,990,992,995,996,997,1001,1003,1004,1011,1029,1030,1085,1141,1142,1143,1166,1174,1176,1197,1214,1222,1224,1230,1231,1232,1233,1234,1235,1239,1240],tensorflow:[1166,1168,1170,1172,1197,1214,1216,1218,1220,1240,1243],term:[40,41,1166,1176,1197,1214,1224],termcolor:[40,41,42],termin:[40,41,42,1085],test:[797,799,811,812,813,906,921,922],tf_concat:1197,than:[40,41,793,794,856,900,930,933,943,944,963,982,990,1012,1015,1031,1037,1085,1141,1145,1197,1240],thei:[40,41,43,1064,1070,1081,1082,1083,1141,1142,1197,1236,1237,1240],them:[1197,1243],themselv:[1129,1130],therefor:43,thi:[40,41,42,43,802,803,856,878,882,888,895,900,905,930,933,965,999,1001,1007,1031,1034,1036,1037,1038,1039,1040,1045,1054,1057,1085,1129,1133,1138,1148,1150,1151,1152,1153,1154,1155,1156,1166,1175,1197,1226,1227,1230,1231,1232,1233,1234,1235,1239,1240,1243],thing:[43,1197],those:[40,41,930,944,1031,1045,1054,1059,1085],though:43,threshold:[930,990,992],through:[40,41],tile:[274,526,646,930],time:[930,1018,1031,1034,1038,1081,1082,1083,1084,1085,1141,1142,1166,1176,1214,1225,1226,1227,1243],time_chronolog:[1185,1186,1191],time_infer:[1185,1186],timeout:[40,41,42,856,865,866,930,999,1007,1085],timestep:[1166,1176,1214,1223],timing_fnam:[1185,1186],titl:1197,tmp_dir:930,tmp_dr:[930,1008],to_appli:[40,41],to_clon:[856,1085],to_dev:[40,41,110,268,519,638,856],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[856,1085],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1197],to_ivy_modul:[183,778,1197,1203],to_json:[40,41],to_kv_fn:[1166,1177],to_kv_v:[1166,1177],to_list:[40,41,646,930],to_multi_dev:[40,41],to_mut:[1129,1131,1138],to_n:[15,40,41,1197],to_nod:1085,to_numpi:[40,41,646,930,1197,1239],to_out_fn:[1166,1177],to_out_v:[1166,1177],to_q_fn:[1166,1177],to_q_v:[1166,1177],to_raw:[40,41],to_scalar:[646,930],todo:1085,togeth:[40,41,1236,1237],tool:[1197,1240],top_mod:[1226,1227],topic:1243,torch:[43,854,855,1197,1239,1240,1243],torch_concat:1197,torchfcmodel:1239,total:[40,41,42,856,902,1085],total_mem_on_dev:856,total_mem_on_nod:1085,tpu:[856,903,1085],tpu_is_avail:[519,638,856,1085],tpye:[906,917],trace:[40,41,930,982],track:[856,1085,1129,1138,1226,1227],track_submod_call_ord:[1226,1227],track_submod_ret:[1226,1227],trail:[1228,1229],train:[1031,1033,1034,1038,1197,1198],trainabl:[1031,1037,1197,1198,1203,1204,1226,1227,1236],trainer:1197,tran:1243,transform:[1166,1174,1175],transpos:[40,41,117,274,409,646,856,887,930,1085,1166,1168,1170,1172,1214,1216,1218,1220],travers:[15,18,19,40,41,1129,1138],treat:[40,41,854,855],tree_depth:1195,tree_height:1191,tri:[40,41],trigonometr:[797,798,1064,1065,1069,1077],trim_kei:[40,41],trust:[1031,1038,1230,1232],truth:[797,800,930,959,1061,1062,1063],try_else_non:930,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[856,1085],tune_dev_alloc:856,tune_dev_split:856,tune_node_alloc:1085,tune_node_split:1085,tune_step:[856,1085],tupl:[15,16,17,18,19,40,41,43,802,803,811,812,813,854,855,930,948,965,966,1010,1028,1085,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1143,1148,1150,1151,1152,1153,1154,1155,1156],two:[40,41,930,933,938,951,989,1017,1054,1057,1059],type:[15,18,40,41,42,43,59,377,378,794,795,797,799,811,812,813,815,840,856,868,869,870,871,883,884,888,900,906,910,911,912,916,917,918,919,920,921,922,929,930,931,933,937,943,947,949,959,963,964,966,975,982,995,996,997,1002,1016,1026,1029,1030,1031,1037,1042,1064,1073,1085,1191,1195,1197,1205,1207,1208,1210,1211,1213,1226,1227,1240],types_to_iteratively_nest:[40,41,42],uint8:[1047,1049,1053],uint8_img_to_float_img:1047,unchang:[15,16,17,18,19],unif:1085,unifi:[40,41,856,885,886,887,888,900,1085,1197],uniform:[40,41,1141,1142,1144,1145,1205,1207,1208,1211,1212],uniformli:[1141,1143,1145],unify_arrai:1085,unify_it:1085,unify_nest:1085,union:[15,18,19,40,41,43,375,377,378,793,794,795,797,798,799,802,803,808,809,811,812,813,815,840,854,855,856,874,879,880,881,882,900,901,906,910,911,912,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,939,941,943,944,945,946,947,948,950,951,952,953,956,957,958,959,961,962,963,964,965,966,967,968,972,974,975,976,983,984,985,986,987,989,990,991,992,995,996,997,1000,1001,1002,1003,1004,1009,1010,1011,1012,1015,1017,1018,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1085,1129,1130,1131,1137,1138],uniqu:[856,865,866,1081,1082,1083,1084,1085,1129,1133],unique_kwarg:1085,unit:[856,1064,1065,1067,1085,1158,1159,1160,1161],unitari:[1054,1059],unless:[930,995,997,1030],unlik:[856,1085],unnorm:[1141,1142],unpack:[930,1025],unrol:[1166,1176],unset:1240,unset_debug_mod:44,unset_default_devic:856,unset_default_dtyp:906,unset_default_float_dtyp:906,unset_default_int_dtyp:906,unset_framework:[59,1240],unset_with_grad:1031,unstack:[40,41,117,274,409,526,646,930],unus:[854,855],updat:[40,41,856,865,930,980,1003,1004,1031,1033,1034,1036,1038,1039,1040,1081,1082,1083,1085,1129,1134,1135,1139,1140,1166,1176,1203,1204,1230,1231,1232,1233,1234,1235,1240,1243],update_backend:[40,41],update_config:[40,41],update_inference_tim:1191,upper:[40,41,1141,1145],upper_depth:[1226,1227],usabl:[1197,1243],usag:[856,900,1085],use:[40,41,42,43,856,865,866,891,903,930,1000,1013,1014,1085,1166,1177,1183,1184,1197,1228,1229,1240,1243],used:[40,41,43,856,865,895,898,899,905,906,917,930,970,971,988,997,1003,1004,1005,1006,1030,1031,1038,1039,1054,1057,1081,1082,1083,1084,1085,1129,1138,1214,1225,1230,1232,1233,1239,1240],used_dev:[856,865],used_mem_on_dev:856,used_mem_on_nod:1085,used_node_str:1085,used_node_strs_dict:1085,useful:[40,41,856,900,1085,1166,1175,1197,1240],user:[1197,1214,1225,1226,1227,1240,1243],uses:1197,using:[40,41,1031,1033,1034,1129,1132,1136,1148,1149,1166,1174,1178,1197,1214,1222,1239,1240,1243],util:[856,889,1085],utility_funct:[811,812,813],v_with_top_v_key_chain:[1226,1227],val:[40,41,815,850,930,978,979,980,1005,1006,1195],valid:[811,812,813,906,911,930,1013,1014,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],valid_dtyp:906,valu:[40,41,797,800,808,809,856,868,899,900,930,931,933,935,936,944,945,946,948,949,955,959,965,966,967,968,983,984,986,987,990,992,999,1000,1001,1002,1003,1004,1005,1006,1007,1023,1026,1027,1028,1031,1035,1038,1047,1053,1054,1059,1061,1062,1063,1064,1074,1075,1076,1081,1082,1083,1085,1129,1133,1134,1135,1139,1140,1141,1144,1145,1148,1150,1152,1166,1177,1178,1183,1184,1191,1214,1225,1228,1229,1230,1232],value_is_nan:930,vanilla:[1081,1083],var_shap:1205,variabl:[15,16,17,18,19,40,41,328,446,568,718,930,940,978,979,980,981,982,1016,1031,1034,1035,1036,1037,1038,1039,1040,1042,1045,1081,1082,1083,1084,1166,1177,1183,1184,1203,1204,1205,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237],variable_data:[718,1031],varianc:[40,41,1148,1156,1243],varieti:1240,variou:[43,1197],vector:[40,41,802,803,930,946,951,1054,1059,1060,1166,1175,1214,1224],vector_norm:[40,41,88,207,385,497,616,802],vector_to_skew_symmetric_matrix:[160,337,455,577,728,1054],verbos:1242,veri:[43,1197],version:43,via:[1129,1130,1137,1240],view:[1047,1052],vision:1197,visual:1240,volum:[1166,1171],vw_tm1:[1031,1034,1038],wai:[1240,1243],wait:[40,41,42],want:[1197,1240,1243],warn:[59,66,67,68,69,70],warp:[1047,1048],watch:1239,weight:[1031,1033,1034,1036,1038,1039,1040,1166,1175,1176,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1226,1227,1230,1232,1233],weight_initi:[1214,1215,1216,1217,1218,1219,1220,1221,1223,1224],weights_path:[1226,1227],well:[40,41,930,974],were:[40,41,1085],what:1197,when:[40,41,42,43,856,930,942,1014,1027,1054,1059,1085,1197,1226,1227,1240,1243],where:[40,41,43,274,646,811,812,813,815,840,930,933,941,944,948,961,976,983,984,995,1028,1054,1059,1129,1130,1137,1141,1142],wherea:43,wherebi:[1129,1138],whether:[15,18,19,40,41,42,811,812,813,854,855,856,874,887,891,895,900,903,905,906,916,920,921,922,929,930,932,938,939,952,955,960,965,972,974,977,981,982,988,1009,1016,1025,1026,1031,1034,1035,1036,1037,1038,1039,1040,1042,1081,1082,1083,1084,1085,1129,1130,1131,1133,1137,1138,1141,1142,1158,1159,1166,1174,1197,1203,1204,1214,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235],which:[40,41,42,43,793,794,795,802,803,811,812,813,854,855,856,865,866,874,879,880,881,882,885,886,887,888,890,892,896,898,899,900,906,911,916,920,929,930,933,937,947,949,951,952,953,955,962,966,967,968,969,975,976,985,986,987,994,995,996,997,998,1000,1003,1004,1011,1015,1025,1027,1029,1030,1031,1034,1035,1036,1038,1039,1040,1042,1044,1045,1047,1049,1054,1057,1064,1070,1085,1129,1133,1134,1135,1139,1140,1141,1142,1143,1144,1145,1148,1150,1151,1152,1153,1154,1155,1156,1158,1163,1166,1177,1178,1197,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1236,1237,1239,1240],whitespac:[40,41,42],whose:[43,815,840,930,937,942,1148,1149,1150,1151,1152,1154,1156],why:[1197,1198],width:[1047,1052],wiki:1243,wikipedia:1243,window:[1047,1052,1166,1167,1168,1169,1170,1171,1172,1173,1214,1215,1216,1217,1218,1219,1220,1221],wise:[40,41,43,797,798,800,815,840,930,943,944,959,963,964,990,992,1002,1031,1034,1036,1038,1040,1061,1062,1063,1064,1065,1067,1069,1070,1073,1074,1075,1076,1077,1079,1158,1159,1160,1161,1162,1163,1164,1165],wish:1240,with_arg_label:[1185,1187,1191,1226,1227],with_array_cach:[1185,1186,1187,1191],with_bia:[1214,1224],with_cal:[930,955],with_default_key_color:[40,41],with_edge_label:[1185,1187,1191,1226,1227],with_entries_as_list:[40,41],with_grad:[1031,1041,1226,1227],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1085,with_output_label:[1185,1187,1191,1226,1227],with_partial_v:[1226,1227],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,930,1011,1085],with_to_kv_fn:[1214,1225],with_to_out_fn:[1214,1225],with_to_q_fn:[1214,1225],within:[15,18,19,930,933,1054,1059,1141,1145],without:[40,41,43,930,999,1001,1007,1129,1131,1240],wonder:1197,word:[15,16,17,930,933,1141,1145,1203,1204],work:[43,1239],worker:[856,865,866,1085],worker_class:[856,865,866,1085],worker_kwarg:1085,would:[43,808,809,1158,1163,1197,1240,1243],wrap:[15,40,41,42,43,930,942,1031,1045,1197],wrapper:43,write:[40,41,43,1197,1198,1243],written:[43,1197,1243],ws_new:[1031,1034,1036,1038,1039,1040],x1_i:[930,959,1064,1073],x2_i:[930,959,1064,1073],x_feat_dim:[1166,1177],x_i:[797,799],x_in:[1197,1239],x_inv:[1054,1056],x_max:[930,944],x_min:[930,944],x_sub:1085,xkk:1243,xkkm1:1243,xkm1km1:1243,xs0:1085,xs_t:1085,year:[1197,1243],yet:[1129,1138,1243],yield:[930,1027],you:[1197,1239,1240,1243],your:[1197,1239,1240,1243],your_awesome_project:1240,yourself:1197,zero:[40,41,117,274,409,526,646,811,812,813,930,948,995,997,1003,1004,1028,1030,1031,1033,1034,1038,1039,1166,1174,1197,1205,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1230,1231,1232,1233],zero_pad:[274,526,646,930],zeros_lik:[117,274,409,526,646,930],zip:1085,zk_e:1243},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":955,"function":[77,78,83,87,90,91,92,93,94,96,97,197,198,203,206,209,210,211,212,213,215,216,374,375,380,384,387,388,389,390,391,393,394,486,487,492,496,499,500,501,502,503,505,506,605,606,611,615,618,619,620,621,622,624,625,792,793,797,801,804,805,806,807,808,810,811],Ones:1210,Using:1240,abs:[275,527,647,931],aco:[739,1065],acosh:[740,1066],activ:[181,361,472,597,770,1158,1200],adam:1231,adam_step:1033,adam_upd:1034,algebra:[88,90,207,209,385,387,497,499,616,618,802,804],all:[98,217,395,507,626,812],all_equ:932,all_nested_indic:1130,ani:[99,218,396,508,627,813],api:[0,43,75,101,195,220,372,398,484,510,603,629,790],arang:[118,276,410,528,648,933],arg_nam:934,argmax:[119,411,529,649,935],argmin:[120,412,530,650,936],args_to_ivi:16,args_to_n:17,argsort:[95,214,392,504,623,809],arithmet:[1,102,221,399,511,630],arrai:[0,3,43,75,100,101,103,121,195,219,220,222,229,277,372,397,398,400,413,484,509,510,512,531,603,628,629,631,651,790,815,937],array_equ:[278,652,938],arrays_equ:939,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[741,1067],asinh:[742,1068],assert_supports_inplac:940,atan2:[744,1070],atan:[743,1069],atanh:[745,1071],attribut:[5,104,223,401,513,632],backend:[43,73],bilinear_resampl:[157,334,452,574,725,1048],binary_cross_entropi:1180,bitwis:[7,105,224,402,514,633],broadcast_to:[279,653,941],builder:51,builtin:[100,219,229,397,509,628,815],builtin_ab:[230,816],builtin_add:[231,817],builtin_and:[232,818],builtin_bool:[233,819],builtin_contain:[234,820],builtin_deepcopi:[235,821],builtin_dir:[236,822],builtin_eq:[237,823],builtin_float:[238,824],builtin_floordiv:[239,825],builtin_g:[240,826],builtin_getattr:[241,827],builtin_getattribut:[242,828],builtin_getitem:[243,829],builtin_gt:[244,830],builtin_int:[245,831],builtin_invert:[246,832],builtin_l:[247,833],builtin_lt:[248,834],builtin_mul:[249,835],builtin_n:[250,836],builtin_neg:[251,837],builtin_or:[252,838],builtin_po:[253,839],builtin_pow:[254,840],builtin_radd:[255,841],builtin_rand:[256,842],builtin_rfloordiv:[257,843],builtin_rmul:[258,844],builtin_ror:[259,845],builtin_rpow:[260,846],builtin_rsub:[261,847],builtin_rtruediv:[262,848],builtin_rxor:[263,849],builtin_setitem:[264,850],builtin_sub:[265,851],builtin_truediv:[266,852],builtin_xor:[267,853],cache_fn:942,cast:[122,280,414,532,654,910],ceil:[281,655,943],choleski:[729,1055],choose_random_framework:61,citat:1197,clear_framework_stack:62,clear_mem_on_dev:[640,872],clip:[282,656,944],clip_matrix_norm:945,clip_vector_norm:946,clone:1100,clone_arrai:1101,clone_it:1102,clone_nest:1103,clonedit:1087,cloneditem:1086,clonednest:1088,closest_valid_dtyp:911,code:1243,comparison:[9,106,225,403,515,634],compil:[283,415,657,854,855,1185],compile_graph:1186,concaten:[123,284,416,533,658,947],constant:[76,196,373,485,604,791],constant_pad:[285,534,659,948],contain:[40,41],container_typ:[660,949],content:1197,contribut:43,conv1d:[187,364,476,782,1167,1215],conv1d_transpos:[188,365,477,783,1168],conv1dtranspos:1216,conv2d:[189,366,478,599,784,1169,1217],conv2d_transpos:[190,367,479,785,1170],conv2dtranspos:1218,conv3d:[191,368,480,600,786,1171,1219],conv3d_transpos:[192,369,481,787,1172],conv3dtranspos:1220,convers:15,convert:[183,778,1203],convert_dtyp:912,copy_arrai:[661,950],copy_nest:1131,core:[109,228,406,518,637,814],cos:[84,381,493,612,798],cosh:[746,1072],cprint:1242,creation:[77,197,374,486,605,792],cross:[286,662,951],cross_entropi:1181,cumprod:[124,287,417,663,952],cumsum:[664,953],current_framework:63,current_framework_str:[665,954],data:[78,82,198,202,375,379,487,491,606,610,793,796],debug_mod:45,debugg:44,default_devic:873,default_dtyp:913,default_float_dtyp:914,default_int_dtyp:915,default_nod:1104,depthwise_conv2d:[193,370,482,601,788,1173],depthwiseconv2d:1221,design:43,dev:[112,270,521,641,874],dev_clon:875,dev_clone_arrai:876,dev_clone_it:877,dev_clone_nest:878,dev_dist:879,dev_dist_arrai:880,dev_dist_it:881,dev_dist_nest:882,dev_from_str:[113,271,522,642,883],dev_to_str:[114,272,523,643,884],dev_unifi:885,dev_unify_arrai:886,dev_unify_it:887,dev_unify_nest:888,dev_util:889,devclonedit:859,devcloneditem:858,devclonednest:860,devdistit:862,devdistitem:861,devdistnest:863,devic:[20,110,268,407,519,638,856],devmapp:865,devmappermultiproc:866,distribute_nest:1105,divid:1073,document:1197,dropout:[1174,1222],dtype:[125,288,418,535,666,906,916],dtype_bit:[126,289,419,536,667,917],dtype_from_str:[127,290,420,537,668,918],dtype_to_str:[128,291,421,538,669,919],ecosystem:52,einops_rearrang:956,einops_reduc:957,einops_repeat:958,einsum:[173,352,464,589,762,1149],elementwis:[83,203,380,492,611,797],equal:[539,670,959],erf:[460,747,1074],execute_with_gradi:[154,329,447,569,719,1035],exist:960,exp:[748,1075],expand_dim:[292,671,961],extens:[88,207,385,497,616,802],finfo:[80,200,377,489,608,794],firstlayersiren:1207,flip:[129,293,422,540,672,962],float_img_to_uint8_img:1049,floor:[294,673,963],floormod:[295,674,964],fomaml_step:1082,fourier_encod:965,framework:59,full:[130,296,423,541,675,966],func:72,gather:[131,297,424,542,676,967],gather_nd:[132,298,425,543,677,968],geglu:1201,gelu:[362,473,771,1159,1202],gener:[22,117,274,409,526,646,930],get_all_arrays_in_memori:969,get_all_arrays_on_dev:890,get_framework:64,get_min_bas:970,get_min_denomin:971,get_num_dim:[678,972],get_referrers_recurs:973,global:1188,glorotuniform:1208,gpu_is_avail:[891,1106],gradient:[24,153,328,446,568,718,1031],gradient_descent_upd:1036,gradient_imag:[158,335,453,575,726,1050],graph:1191,gym:53,handler:59,has_nan:974,helper:1193,ident:[133,299,426,544,679,975],iinfo:[81,201,378,490,609,795],imag:[26,156,333,451,573,724,1047],index_nest:1132,indices_wher:[134,300,427,680,976],initi:1205,inplac:[11,107,226,404,516,635],inplace_arrays_support:977,inplace_decr:[135,301,428,545,681,978],inplace_incr:[136,302,429,546,682,979],inplace_upd:[137,303,430,547,683,980],inplace_variables_support:981,inv:[730,1056],invalid_dtyp:920,is_arrai:[138,304,431,548,684,982],is_float_dtyp:921,is_int_dtyp:922,is_vari:[155,330,448,570,720,1037],isfinit:[85,204,382,494,613,799],isinf:[305,549,685,983],isnan:[306,550,686,984],ivi:[43,50,51,52,53,54,55,56,57,58,789,1239,1240,1243],ivymodul:[184,779],jax:74,lamb:1232,lamb_upd:1038,lar:1233,lars_upd:1039,layer:[186,363,475,598,781,1166,1214],layer_norm:1184,layernorm:1229,leaky_relu:[772,1160],linalg:[28,160,337,455,577,728,1054],linear:[88,90,207,209,385,387,497,499,616,618,802,804,1175,1224],linear_resampl:[139,307,432,551,687,985],linspac:[140,308,433,552,688,986],log:[749,1076,1194],log_global_inference_abs_tim:1189,log_global_inference_rel_tim:1190,logic:[30,163,342,458,581,735,1061],logical_and:[343,736,1062],logical_not:[86,205,383,495,614,800],logical_or:[344,737,1063],logspac:[141,309,434,553,689,987],loss:1179,lstm:1223,lstm_updat:1176,maml_step:1083,manipul:[91,210,388,500,619,805],map:1133,map_nest_at_index:1134,map_nest_at_indic:1135,match_kwarg:988,math:[32,164,345,459,582,738,1064],matmul:[310,554,690,989],matrix_norm:[161,338,456,578,731,1057],maximum:[691,990],mech:54,memori:55,meshgrid:[311,692,991],meta:[34,1081],method:[87,206,384,496,615,801],minimum:[693,992],model:56,modul:[1226,1227,1239],multi:1085,multi_head_attent:1177,multi_index_nest:1136,multidevcontain:42,multidevit:869,multidevitem:868,multidevnest:870,multiheadattent:1225,multinodeit:1091,multinodeitem:1090,multinodenest:1092,multinomi:[166,347,462,584,755,1142],multiprocess:[694,993],mxnet:194,nativ:1239,nest:1129,nested_indices_wher:1137,nested_map:1138,network:1239,next:1197,node:[1085,1107],node_dist:1108,node_dist_arrai:1109,node_dist_it:1110,node_str:1111,node_to_str:1112,node_util:1113,nodedistit:1094,nodedistitem:1093,nodedistnest:1095,nodemapp:1097,nodemappermultiproc:1098,norm:[1183,1228],num_arrays_in_memori:994,num_arrays_on_dev:892,num_cpu_cor:893,num_gpu:[115,894,1114],numpi:371,nutshel:1197,one_hot:[142,435,555,695,995],ones:[143,312,436,556,696,996],ones_lik:[144,313,437,557,697,997],oper:[1,3,7,9,11,13,43,102,103,105,106,107,108,221,222,224,225,226,227,399,400,402,403,404,405,511,512,514,515,516,517,630,631,633,634,635,636],optim:[1230,1234],optimizer_upd:1040,overview:1197,param:1195,percent_used_mem_on_dev:895,percent_used_mem_on_nod:1115,pinv:[339,732,1058],portabl:1243,print_all_arrays_in_memori:998,print_all_arrays_on_dev:896,profil:[111,269,408,520,639,871,1099],queue_timeout:999,randint:[167,348,585,756,1143],random:[36,165,346,461,583,754,1141],random_crop:1051,random_norm:[168,349,586,757,1144],random_uniform:[169,350,587,758,1145],reduce_max:[174,353,465,590,763,1150],reduce_mean:[175,354,466,591,764,1151],reduce_min:[176,355,467,592,765,1152],reduce_prod:[177,356,468,593,766,1153],reduce_std:[357,1154],reduce_sum:[178,358,469,594,767,1155],reduce_var:[179,359,470,595,768,1156],reduct:[38,172,351,463,588,761,1148],reflect:[13,108,227,405,517,636],relu:[773,1161],repeat:[314,698,1000],reptile_step:1084,reshap:[699,1001],robot:57,round:[315,700,1002],run:1240,scaled_dot_product_attent:1178,scatter_flat:[145,316,438,558,701,1003],scatter_nd:[146,317,439,559,702,1004],search:[92,211,389,501,620,806],seed:[170,759,1146],sequenti:[1236,1237],set:[93,212,390,502,621,807],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:897,set_default_dtyp:923,set_default_float_dtyp:924,set_default_int_dtyp:925,set_default_nod:1116,set_exception_debug_mod:48,set_framework:65,set_min_bas:1005,set_min_denomin:1006,set_nest_at_index:1139,set_nest_at_indic:1140,set_queue_timeout:1007,set_split_factor:[898,1117],set_tmp_dir:1008,set_with_grad:1041,sgd:1235,shape:[703,1009],shape_to_tupl:1010,show_graph:1187,shuffl:[171,760,1147],sigmoid:[774,1162],signatur:[87,206,384,496,615,801],sin:[750,1077],sinh:[751,1078],siren:1211,softmax:[182,474,775,1163],softplu:[776,1164],sort:[94,213,391,503,622,808],sparse_cross_entropi:1182,split:[147,318,440,560,704,1011],split_factor:[899,1118],split_func_cal:[900,1119],squeez:[148,319,441,561,705,1012],stable_divid:1013,stable_pow:1014,stack:[320,706,1015],stack_imag:[159,336,454,576,727,1052],statist:[96,215,393,505,624,810],stop_gradi:[331,449,571,721,1042],str_to_nod:1120,submodul:43,supports_inplac:1016,svd:[340,579,733,1059],swapax:[562,707,1017],tan:[752,1079],tanh:[753,777,1080,1165],tensorflow:483,tile:[321,563,708,1018],tmp_dir:1019,to_dev:[116,273,524,644,901],to_ivi:18,to_ivy_modul:[185,780,1204],to_list:[709,1020],to_n:19,to_nod:1121,to_numpi:[710,1021],to_scalar:[711,1022],torch:602,total_mem_on_dev:902,total_mem_on_nod:1122,tpu_is_avail:[525,645,903,1123],train:1239,trainabl:1239,transpos:[149,322,442,712,1023],tree:1197,try_else_non:1024,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,198,202,375,379,487,491,606,610,793,796],uint8_img_to_float_img:1053,unifi:1124,unify_arrai:1125,unify_it:1126,unify_nest:1127,unset_debug_mod:49,unset_default_devic:904,unset_default_dtyp:926,unset_default_float_dtyp:927,unset_default_int_dtyp:928,unset_framework:71,unset_with_grad:1043,unstack:[150,323,443,564,713,1025],used_mem_on_dev:905,used_mem_on_nod:1128,util:[97,216,394,506,625,811],valid_dtyp:929,value_is_nan:1026,variabl:[332,450,572,722,1044],variable_data:[723,1045],vector_norm:[89,208,386,498,617,803],vector_to_skew_symmetric_matrix:[162,341,457,580,734,1060],verbos:1241,vision:58,where:[324,714,1027,1197],why:1243,with_grad:1046,wrapper:72,write:1240,zero:[151,326,444,566,716,1029,1213],zero_pad:[325,565,715,1028],zeros_lik:[152,327,445,567,717,1030]}})