Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[807,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[379,0,0,"-"],creation_functions:[380,0,0,"-"],data_type_functions:[383,0,0,"-"],data_types:[387,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[381,2,1,""],zeros:[382,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[383,1,1,""],finfo:[385,2,1,""],iinfo:[386,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[383,3,1,""],bits:[383,3,1,""],eps:[383,3,1,""],max:[383,3,1,""],min:[383,3,1,""],smallest_normal:[383,3,1,""]},"ivy.functional.backends.numpy.core":{device:[419,0,0,"-"],general:[421,0,0,"-"],gradients:[456,0,0,"-"],image:[461,0,0,"-"],linalg:[465,0,0,"-"],logic:[468,0,0,"-"],math:[469,0,0,"-"],random:[471,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[420,1,1,""],clear_mem_on_dev:[419,2,1,""],dev:[419,2,1,""],dev_from_str:[419,2,1,""],dev_to_str:[419,2,1,""],gpu_is_available:[419,2,1,""],num_gpus:[419,2,1,""],to_dev:[419,2,1,""],tpu_is_available:[419,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[420,3,1,""],start:[420,3,1,""],stop:[420,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[421,2,1,""],arange:[422,2,1,""],argmax:[423,2,1,""],argmin:[424,2,1,""],array:[425,2,1,""],asarray:[421,2,1,""],astype:[421,2,1,""],cast:[426,2,1,""],ceil:[421,2,1,""],clip:[421,2,1,""],compile:[427,2,1,""],concatenate:[428,2,1,""],constant_pad:[421,2,1,""],container_types:[421,2,1,""],copy_array:[421,2,1,""],cumprod:[429,2,1,""],current_framework_str:[421,2,1,""],dtype:[430,2,1,""],dtype_bits:[431,2,1,""],dtype_from_str:[432,2,1,""],dtype_to_str:[433,2,1,""],equal:[421,2,1,""],flip:[434,2,1,""],floor:[421,2,1,""],floormod:[421,2,1,""],full:[435,2,1,""],gather:[436,2,1,""],gather_nd:[437,2,1,""],get_num_dims:[421,2,1,""],identity:[438,2,1,""],indices_where:[439,2,1,""],inplace_arrays_supported:[421,2,1,""],inplace_decrement:[440,2,1,""],inplace_increment:[441,2,1,""],inplace_update:[442,2,1,""],inplace_variables_supported:[421,2,1,""],is_array:[443,2,1,""],linear_resample:[444,2,1,""],linspace:[445,2,1,""],logspace:[446,2,1,""],matmul:[421,2,1,""],meshgrid:[421,2,1,""],multiprocessing:[421,2,1,""],one_hot:[447,2,1,""],ones_like:[448,2,1,""],round:[421,2,1,""],scatter_flat:[449,2,1,""],scatter_nd:[450,2,1,""],shape:[421,2,1,""],split:[451,2,1,""],squeeze:[452,2,1,""],to_list:[421,2,1,""],to_numpy:[421,2,1,""],to_scalar:[421,2,1,""],transpose:[453,2,1,""],unstack:[454,2,1,""],where:[421,2,1,""],zero_pad:[421,2,1,""],zeros_like:[455,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[457,2,1,""],is_variable:[458,2,1,""],stop_gradient:[459,2,1,""],variable:[460,2,1,""],variable_data:[456,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[462,2,1,""],gradient_image:[463,2,1,""],stack_images:[464,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[466,2,1,""],vector_to_skew_symmetric_matrix:[467,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[470,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[472,2,1,""],randint:[471,2,1,""],random_normal:[471,2,1,""],random_uniform:[471,2,1,""],seed:[471,2,1,""],shuffle:[471,2,1,""]},"ivy.functional.ivy":{array_api:[808,0,0,"-"],core:[838,0,0,"-"],nn:[1179,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[809,0,0,"-"],creation_functions:[810,0,0,"-"],data_type_functions:[813,0,0,"-"],data_types:[816,0,0,"-"],elementwise_functions:[817,0,0,"-"],function_and_method_signatures:[825,0,0,"-"],linear_algebra_extension:[826,0,0,"-"],linear_algebra_functions:[828,0,0,"-"],manipulation_functions:[829,0,0,"-"],searching_functions:[830,0,0,"-"],set_functions:[831,0,0,"-"],sorting_functions:[832,0,0,"-"],statistical_functions:[834,0,0,"-"],utility_functions:[835,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[809,4,1,""],pi:[809,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[811,2,1,""],zeros:[812,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[814,2,1,""],iinfo:[815,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[818,2,1,""],cos:[819,2,1,""],cosh:[820,2,1,""],isfinite:[821,2,1,""],isnan:[822,2,1,""],less:[823,2,1,""],logical_not:[824,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[827,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[833,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[836,2,1,""],any:[837,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[839,0,0,"-"],compilation:[878,0,0,"-"],device:[880,0,0,"-"],dtype:[930,0,0,"-"],general:[954,0,0,"-"],gradients:[1053,0,0,"-"],image:[1069,0,0,"-"],linalg:[1076,0,0,"-"],logic:[1083,0,0,"-"],math:[1086,0,0,"-"],meta:[1103,0,0,"-"],multi_node:[1107,0,0,"-"],nest:[1151,0,0,"-"],random:[1163,0,0,"-"],reductions:[1170,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[840,2,1,""],builtin_add:[841,2,1,""],builtin_and:[842,2,1,""],builtin_bool:[843,2,1,""],builtin_contains:[844,2,1,""],builtin_deepcopy:[845,2,1,""],builtin_dir:[846,2,1,""],builtin_eq:[847,2,1,""],builtin_float:[848,2,1,""],builtin_floordiv:[849,2,1,""],builtin_ge:[850,2,1,""],builtin_getattr:[851,2,1,""],builtin_getattribute:[852,2,1,""],builtin_getitem:[853,2,1,""],builtin_gt:[854,2,1,""],builtin_int:[855,2,1,""],builtin_invert:[856,2,1,""],builtin_le:[857,2,1,""],builtin_lt:[858,2,1,""],builtin_mul:[859,2,1,""],builtin_ne:[860,2,1,""],builtin_neg:[861,2,1,""],builtin_or:[862,2,1,""],builtin_pos:[863,2,1,""],builtin_pow:[864,2,1,""],builtin_radd:[865,2,1,""],builtin_rand:[866,2,1,""],builtin_rfloordiv:[867,2,1,""],builtin_rmul:[868,2,1,""],builtin_ror:[869,2,1,""],builtin_rpow:[870,2,1,""],builtin_rsub:[871,2,1,""],builtin_rtruediv:[872,2,1,""],builtin_rxor:[873,2,1,""],builtin_setitem:[874,2,1,""],builtin_sub:[875,2,1,""],builtin_truediv:[876,2,1,""],builtin_xor:[877,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[879,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[880,1,1,""],DevClonedItem:[882,1,1,""],DevClonedIter:[883,1,1,""],DevClonedNest:[884,1,1,""],DevDistItem:[885,1,1,""],DevDistIter:[886,1,1,""],DevDistNest:[887,1,1,""],DevManager:[880,1,1,""],DevMapper:[889,1,1,""],DevMapperMultiProc:[890,1,1,""],MultiDev:[880,1,1,""],MultiDevItem:[892,1,1,""],MultiDevIter:[893,1,1,""],MultiDevNest:[894,1,1,""],Profiler:[895,1,1,""],clear_mem_on_dev:[896,2,1,""],default_device:[897,2,1,""],dev:[898,2,1,""],dev_clone:[899,2,1,""],dev_clone_array:[900,2,1,""],dev_clone_iter:[901,2,1,""],dev_clone_nest:[902,2,1,""],dev_dist:[903,2,1,""],dev_dist_array:[904,2,1,""],dev_dist_iter:[905,2,1,""],dev_dist_nest:[906,2,1,""],dev_from_str:[907,2,1,""],dev_to_str:[908,2,1,""],dev_unify:[909,2,1,""],dev_unify_array:[910,2,1,""],dev_unify_iter:[911,2,1,""],dev_unify_nest:[912,2,1,""],dev_util:[913,2,1,""],get_all_arrays_on_dev:[914,2,1,""],gpu_is_available:[915,2,1,""],num_arrays_on_dev:[916,2,1,""],num_cpu_cores:[917,2,1,""],num_gpus:[918,2,1,""],percent_used_mem_on_dev:[919,2,1,""],print_all_arrays_on_dev:[920,2,1,""],set_default_device:[921,2,1,""],set_split_factor:[922,2,1,""],split_factor:[923,2,1,""],split_func_call:[924,2,1,""],to_dev:[925,2,1,""],total_mem_on_dev:[926,2,1,""],tpu_is_available:[927,2,1,""],unset_default_device:[928,2,1,""],used_mem_on_dev:[929,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[880,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[880,3,1,""],da_tune_step:[880,3,1,""],dim_size:[880,3,1,""],ds_tune_step:[880,3,1,""],map:[880,3,1,""],repeated_config_check:[880,3,1,""],tune_step:[880,3,1,""],tuned:[880,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[889,3,1,""],map:[889,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[890,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[880,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[892,3,1,""],items:[892,3,1,""],keys:[892,3,1,""],shape:[892,3,1,""],values:[892,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[893,3,1,""],at_dev:[893,3,1,""],at_devs:[893,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[894,3,1,""],at_dev:[894,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[895,3,1,""],start:[895,3,1,""],stop:[895,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[930,1,1,""],DefaultFloatDtype:[930,1,1,""],DefaultIntDtype:[930,1,1,""],astype:[930,2,1,""],cast:[934,2,1,""],closest_valid_dtype:[935,2,1,""],convert_dtype:[936,2,1,""],default_dtype:[937,2,1,""],default_float_dtype:[938,2,1,""],default_int_dtype:[939,2,1,""],dtype:[940,2,1,""],dtype_bits:[941,2,1,""],dtype_from_str:[942,2,1,""],dtype_to_str:[943,2,1,""],invalid_dtype:[944,2,1,""],is_float_dtype:[945,2,1,""],is_int_dtype:[946,2,1,""],set_default_dtype:[947,2,1,""],set_default_float_dtype:[948,2,1,""],set_default_int_dtype:[949,2,1,""],unset_default_dtype:[950,2,1,""],unset_default_float_dtype:[951,2,1,""],unset_default_int_dtype:[952,2,1,""],valid_dtype:[953,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[930,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[930,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[930,3,1,""]},"ivy.functional.ivy.core.general":{"default":[979,2,1,""],abs:[955,2,1,""],all_equal:[956,2,1,""],arange:[957,2,1,""],arg_names:[958,2,1,""],argmax:[959,2,1,""],argmin:[960,2,1,""],array:[961,2,1,""],array_equal:[962,2,1,""],arrays_equal:[963,2,1,""],asarray:[954,2,1,""],assert_supports_inplace:[964,2,1,""],broadcast_to:[965,2,1,""],cache_fn:[966,2,1,""],ceil:[967,2,1,""],clip:[968,2,1,""],clip_matrix_norm:[969,2,1,""],clip_vector_norm:[970,2,1,""],concatenate:[971,2,1,""],constant_pad:[972,2,1,""],container_types:[973,2,1,""],copy_array:[974,2,1,""],cross:[975,2,1,""],cumprod:[976,2,1,""],cumsum:[977,2,1,""],current_framework_str:[978,2,1,""],einops_rearrange:[980,2,1,""],einops_reduce:[981,2,1,""],einops_repeat:[982,2,1,""],equal:[983,2,1,""],exists:[984,2,1,""],expand_dims:[985,2,1,""],flip:[986,2,1,""],floor:[987,2,1,""],floormod:[988,2,1,""],fourier_encode:[989,2,1,""],full:[990,2,1,""],gather:[991,2,1,""],gather_nd:[992,2,1,""],get_all_arrays_in_memory:[993,2,1,""],get_min_base:[994,2,1,""],get_min_denominator:[995,2,1,""],get_num_dims:[996,2,1,""],get_referrers_recursive:[997,2,1,""],has_nans:[998,2,1,""],identity:[999,2,1,""],indices_where:[1000,2,1,""],inplace_arrays_supported:[1001,2,1,""],inplace_decrement:[1002,2,1,""],inplace_increment:[1003,2,1,""],inplace_update:[1004,2,1,""],inplace_variables_supported:[1005,2,1,""],is_array:[1006,2,1,""],isinf:[1007,2,1,""],linear_resample:[1008,2,1,""],linspace:[1009,2,1,""],logspace:[1010,2,1,""],match_kwargs:[1011,2,1,""],matmul:[1012,2,1,""],maximum:[1013,2,1,""],meshgrid:[1014,2,1,""],minimum:[1015,2,1,""],multiprocessing:[1016,2,1,""],num_arrays_in_memory:[1017,2,1,""],one_hot:[1018,2,1,""],ones:[1019,2,1,""],ones_like:[1020,2,1,""],print_all_arrays_in_memory:[1021,2,1,""],queue_timeout:[1022,2,1,""],repeat:[1023,2,1,""],reshape:[1024,2,1,""],round:[1025,2,1,""],scatter_flat:[1026,2,1,""],scatter_nd:[1027,2,1,""],set_min_base:[1028,2,1,""],set_min_denominator:[1029,2,1,""],set_queue_timeout:[1030,2,1,""],set_tmp_dir:[1031,2,1,""],shape:[1032,2,1,""],shape_to_tuple:[1033,2,1,""],split:[1034,2,1,""],squeeze:[1035,2,1,""],stable_divide:[1036,2,1,""],stable_pow:[1037,2,1,""],stack:[1038,2,1,""],supports_inplace:[1039,2,1,""],swapaxes:[1040,2,1,""],tile:[1041,2,1,""],tmp_dir:[1042,2,1,""],to_list:[1043,2,1,""],to_numpy:[1044,2,1,""],to_scalar:[1045,2,1,""],transpose:[1046,2,1,""],try_else_none:[1047,2,1,""],unstack:[1048,2,1,""],value_is_nan:[1049,2,1,""],where:[1050,2,1,""],zero_pad:[1051,2,1,""],zeros_like:[1052,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1053,1,1,""],adam_step:[1055,2,1,""],adam_update:[1056,2,1,""],execute_with_gradients:[1057,2,1,""],gradient_descent_update:[1058,2,1,""],is_variable:[1059,2,1,""],lamb_update:[1060,2,1,""],lars_update:[1061,2,1,""],optimizer_update:[1062,2,1,""],set_with_grads:[1063,2,1,""],stop_gradient:[1064,2,1,""],unset_with_grads:[1065,2,1,""],variable:[1066,2,1,""],variable_data:[1067,2,1,""],with_grads:[1068,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1053,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1070,2,1,""],float_img_to_uint8_img:[1071,2,1,""],gradient_image:[1072,2,1,""],random_crop:[1073,2,1,""],stack_images:[1074,2,1,""],uint8_img_to_float_img:[1075,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1077,2,1,""],inv:[1078,2,1,""],matrix_norm:[1079,2,1,""],pinv:[1080,2,1,""],svd:[1081,2,1,""],vector_to_skew_symmetric_matrix:[1082,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1084,2,1,""],logical_or:[1085,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1087,2,1,""],acosh:[1088,2,1,""],asin:[1089,2,1,""],asinh:[1090,2,1,""],atan2:[1092,2,1,""],atan:[1091,2,1,""],atanh:[1093,2,1,""],cosh:[1094,2,1,""],divide:[1095,2,1,""],erf:[1096,2,1,""],exp:[1097,2,1,""],log:[1098,2,1,""],sin:[1099,2,1,""],sinh:[1100,2,1,""],tan:[1101,2,1,""],tanh:[1102,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1104,2,1,""],maml_step:[1105,2,1,""],reptile_step:[1106,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1107,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1152,2,1,""],copy_nest:[1153,2,1,""],index_nest:[1154,2,1,""],map:[1155,2,1,""],map_nest_at_index:[1156,2,1,""],map_nest_at_indices:[1157,2,1,""],multi_index_nest:[1158,2,1,""],nested_indices_where:[1159,2,1,""],nested_map:[1160,2,1,""],set_nest_at_index:[1161,2,1,""],set_nest_at_indices:[1162,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1164,2,1,""],randint:[1165,2,1,""],random_normal:[1166,2,1,""],random_uniform:[1167,2,1,""],seed:[1168,2,1,""],shuffle:[1169,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1171,2,1,""],reduce_max:[1172,2,1,""],reduce_mean:[1173,2,1,""],reduce_min:[1174,2,1,""],reduce_prod:[1175,2,1,""],reduce_std:[1176,2,1,""],reduce_sum:[1177,2,1,""],reduce_var:[1178,2,1,""]},"ivy.functional.ivy.nn":{activations:[1180,0,0,"-"],layers:[1188,0,0,"-"],losses:[1201,0,0,"-"],norms:[1205,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1181,2,1,""],leaky_relu:[1182,2,1,""],relu:[1183,2,1,""],sigmoid:[1184,2,1,""],softmax:[1185,2,1,""],softplus:[1186,2,1,""],tanh:[1187,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1189,2,1,""],conv1d_transpose:[1190,2,1,""],conv2d:[1191,2,1,""],conv2d_transpose:[1192,2,1,""],conv3d:[1193,2,1,""],conv3d_transpose:[1194,2,1,""],depthwise_conv2d:[1195,2,1,""],dropout:[1196,2,1,""],linear:[1197,2,1,""],lstm_update:[1198,2,1,""],multi_head_attention:[1199,2,1,""],scaled_dot_product_attention:[1200,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1202,2,1,""],cross_entropy:[1203,2,1,""],sparse_cross_entropy:[1204,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1206,2,1,""]},"ivy.graph_compiler":{compiler:[1207,0,0,"-"],globals:[1210,0,0,"-"],graph:[1213,0,0,"-"],helpers:[1215,0,0,"-"],op_logging:[1216,0,0,"-"],param:[1217,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1208,2,1,""],show_graph:[1209,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1211,2,1,""],log_global_inference_rel_times:[1212,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1213,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1213,3,1,""],add_fn_to_dict:[1213,3,1,""],add_param:[1213,3,1,""],compiled:[1213,3,1,""],connect:[1213,3,1,""],debug_info:[1213,3,1,""],get_param:[1213,3,1,""],get_param_recursive:[1213,3,1,""],include_generators:[1213,3,1,""],increment_param_count:[1213,3,1,""],log_all_ops:[1213,3,1,""],params_all_empty:[1213,3,1,""],save_debug_info:[1213,3,1,""],set_param:[1213,3,1,""],show:[1213,3,1,""],show_debug_info:[1213,3,1,""],update_inference_times:[1213,3,1,""],with_array_caching:[1213,3,1,""]},"ivy.graph_compiler.param":{Param:[1217,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1217,3,1,""],count:[1217,3,1,""],depth:[1217,3,1,""],get:[1217,3,1,""],is_var:[1217,3,1,""],ptype:[1217,3,1,""],set:[1217,3,1,""],set_count:[1217,3,1,""],shape:[1217,3,1,""]},"ivy.stateful":{activations:[1222,0,0,"-"],converters:[1225,0,0,"-"],initializers:[1227,0,0,"-"],layers:[1236,0,0,"-"],module:[1248,0,0,"-"],norms:[1250,0,0,"-"],optimizers:[1252,0,0,"-"],sequential:[1258,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1223,1,1,""],GELU:[1224,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1223,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1224,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1226,2,1,""]},"ivy.stateful.initializers":{Constant:[1227,1,1,""],FirstLayerSiren:[1229,1,1,""],GlorotUniform:[1230,1,1,""],KaimingNormal:[1227,1,1,""],Ones:[1232,1,1,""],Siren:[1233,1,1,""],Uniform:[1227,1,1,""],Zeros:[1235,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1227,3,1,""],create_variables:[1227,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1229,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1230,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1227,3,1,""],create_variables:[1227,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1232,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1233,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1227,3,1,""],create_variables:[1227,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1235,3,1,""]},"ivy.stateful.layers":{Conv1D:[1237,1,1,""],Conv1DTranspose:[1238,1,1,""],Conv2D:[1239,1,1,""],Conv2DTranspose:[1240,1,1,""],Conv3D:[1241,1,1,""],Conv3DTranspose:[1242,1,1,""],DepthwiseConv2D:[1243,1,1,""],Dropout:[1244,1,1,""],LSTM:[1245,1,1,""],Linear:[1246,1,1,""],MultiHeadAttention:[1247,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1237,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1238,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1239,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1240,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1241,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1242,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1243,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1244,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1245,3,1,""],get_initial_state:[1245,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1246,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1247,3,1,""]},"ivy.stateful.module":{Module:[1249,1,1,""]},"ivy.stateful.module.Module":{__init__:[1249,3,1,""],build:[1249,3,1,""],build_mode:[1249,3,1,""],built:[1249,3,1,""],check_submod_rets:[1249,3,1,""],compile_graph:[1249,3,1,""],compile_on_next_step:[1249,3,1,""],get_mod_key:[1249,3,1,""],mod_depth:[1249,3,1,""],mod_height:[1249,3,1,""],mod_with_top_mod_key_chain:[1249,3,1,""],save_weights:[1249,3,1,""],show_graph:[1249,3,1,""],show_mod_in_top_mod:[1249,3,1,""],show_structure:[1249,3,1,""],show_v_in_top_v:[1249,3,1,""],sub_mods:[1249,3,1,""],track_submod_call_order:[1249,3,1,""],track_submod_rets:[1249,3,1,""],v_with_top_v_key_chains:[1249,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1251,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1251,3,1,""]},"ivy.stateful.optimizers":{Adam:[1253,1,1,""],LAMB:[1254,1,1,""],LARS:[1255,1,1,""],Optimizer:[1256,1,1,""],SGD:[1257,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1253,3,1,""],set_state:[1253,3,1,""],state:[1253,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1254,3,1,""],set_state:[1254,3,1,""],state:[1254,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1255,3,1,""],set_state:[1255,3,1,""],state:[1255,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1256,3,1,""],compile_graph:[1256,3,1,""],compile_on_next_step:[1256,3,1,""],set_state:[1256,3,1,""],show_graph:[1256,3,1,""],step:[1256,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1257,3,1,""],set_state:[1257,3,1,""],state:[1257,3,1,""]},"ivy.stateful.sequential":{Sequential:[1259,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1259,3,1,""]},"ivy.verbosity":{cprint:[1264,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1263,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1252,1253,1254],"02886":1219,"100":[1107,1219,1261],"141592653589793":809,"2021":1219,"2102":1219,"360":[817,819,1086,1099,1101],"718281828459045":809,"754":[809,813,814],"999":[1053,1055,1056,1060,1252,1253,1254],"abstract":[880,895,1219,1252,1256],"boolean":[40,41,817,818,822,824,880,915,927,930,944,953,954,956,962,963,998,1000,1001,1005,1006,1007,1039,1049,1053,1059,1083,1084,1085,1103,1104,1105,1107],"break":43,"case":[15,18,19,40,41,42,43,826,827,880,919,926,929,954,957,1024,1026,1027,1076,1079,1107,1151,1154,1158,1219,1236,1247,1248,1249,1252,1256,1265],"catch":[954,979],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,383,419,420,813,815,880,882,883,884,885,886,887,889,890,892,893,894,895,907,908,930,954,958,1011,1053,1067,1107,1151,1153,1160,1201,1203,1204,1213,1217,1219,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1265],"default":[15,18,19,40,41,42,43,810,811,812,826,827,832,833,835,836,837,878,879,880,889,890,897,898,902,903,904,905,906,909,910,911,912,919,922,923,924,929,930,937,938,939,940,954,956,957,959,960,969,970,971,972,975,976,977,986,989,990,991,996,998,999,1008,1010,1011,1014,1016,1019,1022,1023,1026,1027,1030,1032,1034,1036,1037,1046,1048,1049,1053,1056,1058,1059,1060,1061,1062,1064,1068,1076,1079,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1163,1164,1166,1167,1170,1172,1173,1174,1175,1176,1177,1178,1180,1181,1185,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],"final":[40,41,954,989,1009,1010,1107,1236,1247,1262],"float":[40,41,42,43,809,810,811,812,813,814,826,827,839,858,864,880,889,890,913,919,922,926,929,930,938,945,954,957,969,970,972,989,990,994,995,1010,1028,1029,1030,1036,1037,1053,1055,1056,1058,1060,1061,1062,1069,1071,1075,1086,1095,1103,1104,1105,1106,1107,1163,1166,1167,1180,1182,1188,1196,1199,1200,1201,1202,1203,1204,1205,1206,1236,1244,1247,1250,1251,1252,1253,1254,1255,1256,1257],"function":[15,40,41,43,381,382,385,386,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,809,811,812,814,815,818,819,820,821,822,823,824,826,827,833,836,837,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,884,885,886,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1219,1222,1223,1224,1252,1255,1256,1257,1261,1262,1265],"import":[43,1219,1262,1265],"int":[40,41,42,43,380,381,382,471,810,811,812,813,814,815,826,827,832,833,835,836,837,839,858,864,878,879,880,902,903,904,905,906,909,910,911,912,917,918,924,930,939,941,946,954,959,960,965,971,972,976,977,980,981,982,985,986,989,990,991,996,999,1008,1009,1010,1018,1019,1023,1024,1026,1027,1032,1033,1034,1035,1038,1040,1041,1046,1048,1051,1053,1055,1056,1060,1069,1073,1074,1076,1079,1103,1104,1105,1106,1107,1151,1160,1163,1164,1165,1167,1168,1170,1172,1173,1174,1175,1176,1177,1178,1180,1185,1188,1189,1190,1191,1192,1193,1194,1195,1199,1201,1203,1204,1205,1206,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1250,1251],"long":[1188,1198],"new":[40,41,43,471,810,811,812,817,820,930,934,954,955,965,980,981,982,985,989,990,991,992,1019,1024,1026,1027,1028,1029,1036,1037,1038,1053,1056,1058,1060,1061,1062,1069,1071,1073,1075,1086,1088,1090,1093,1094,1100,1102,1107,1151,1161,1162,1163,1164,1205,1206,1219,1225,1226,1236,1246,1250,1251,1252,1253,1254,1255,1256,1257,1262,1265],"public":[954,973],"return":[15,16,17,18,19,40,41,42,43,471,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,839,858,864,878,879,880,889,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,916,918,919,923,924,925,926,927,929,930,934,935,936,937,938,939,940,941,942,943,944,945,946,953,954,955,956,957,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1023,1024,1025,1026,1027,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1219,1225,1226,1236,1245,1246,1252,1256,1261,1262,1265],"short":[1188,1198,1219,1265],"static":[40,41,878,879],"super":1107,"true":[40,41,42,421,427,456,459,471,472,817,821,826,827,832,833,835,836,837,878,879,880,954,956,964,966,984,989,998,1000,1049,1050,1053,1056,1058,1059,1060,1061,1062,1064,1076,1079,1103,1104,1105,1106,1107,1151,1152,1159,1163,1164,1170,1172,1173,1174,1175,1176,1177,1178,1180,1181,1188,1196,1201,1202,1203,1204,1207,1208,1209,1213,1236,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257],"try":[40,41,954,1047,1107],"var":[40,41,1103,1104,1105,1265],"while":[40,41,42,1107],AND:[817,818,835,836,1083,1084],But:1265,For:[43,954,957,968,1038,1053,1059,1067,1086,1087,1219,1225,1226,1262,1265],Its:[1086,1091],NOT:[817,824],One:[40,41,954,981,1024,1163,1165,1265],Ones:[1219,1227],Such:[954,973],That:1262,The:[15,16,17,18,19,40,41,42,43,817,818,819,821,823,832,833,835,836,837,839,858,864,878,879,880,889,890,896,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,919,922,923,924,925,926,929,930,934,935,936,941,942,943,944,953,954,957,961,962,965,966,969,970,971,972,974,975,978,979,983,986,989,991,992,999,1002,1003,1004,1006,1008,1010,1012,1014,1016,1019,1020,1023,1024,1026,1027,1028,1029,1030,1033,1034,1035,1036,1037,1038,1041,1049,1052,1053,1055,1056,1058,1060,1061,1062,1064,1067,1069,1071,1073,1075,1076,1079,1081,1086,1087,1089,1091,1095,1096,1097,1098,1099,1101,1103,1104,1105,1106,1107,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1219,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1262,1265],There:[43,1219,1262],These:[43,1219],Used:[1151,1152,1159,1248,1249],Using:[1219,1220,1265],With:[40,41,826,827,1076,1079,1170,1172,1173,1174,1175,1176,1177,1178,1219,1261,1265],__array__:[954,961],__call__:[1236,1247,1248,1249],__del__:1107,__dict__:[1107,1262],__enter__:1107,__exit__:1107,__getitem__:1107,__getstate__:1107,__init__:[40,41,42,43,59,60,81,205,383,384,419,420,500,623,880,881,888,889,890,891,892,893,894,895,930,931,932,933,1053,1054,1107,1111,1118,1213,1214,1217,1218,1219,1222,1223,1224,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1265],__iter__:1107,__len__:1107,__next__:1107,__pow__:43,__repr__:1107,_assign_vari:1261,_axi:1107,_base:[1151,1152,1159],_compute_node_da_ratio:1107,_compute_node_strs_da:1107,_concat_unify_arrai:1107,_counter:1107,_cur_framework:[43,1107],_da_direct:1107,_da_directions_flip:1107,_da_step_tim:1107,_da_tim:1107,_da_tune_count:1107,_data:1107,_delta_da_dim_s:1107,_delta_sf:1107,_dict:1107,_dim_siz:1107,_first_da_tune_step:1107,_first_ns_tune_step:1107,_fn:1107,_forward:[1219,1261],_get_kalman_param:1265,_get_prior:1265,_get_some_model:1265,_handle_flat_arrays_in_out:43,_index:[1151,1152,1159],_input_queu:1107,_length:1107,_max_depth:1107,_max_node_dim_step_ratio:1107,_max_node_dim_step_s:1107,_max_split_factor_step_s:1107,_mean_unify_arrai:1107,_min_bas:[954,1037,1205,1206,1250,1251],_min_denomin:[954,1036],_min_node_dim_s:1107,_min_sf_tune_step:1107,_min_unit_node_tune_step:1107,_model:1265,_native_wrapp:43,_node_mapp:1107,_node_percent_mem:1107,_node_str:1107,_node_str_da_ratio:1107,_node_strs_da:1107,_node_strs_kei:1107,_node_strs_n:1107,_node_util:1107,_ns_step_tim:1107,_ns_time:1107,_ns_tune_count:1107,_num_nod:1107,_num_work:1107,_observed_config:1107,_output_queu:1107,_paramet:1261,_percent_mem_inc_per_sf:1107,_percent_mem_inc_per_unit_da_dim:1107,_percent_util_inc_per_unit_da_dim:1107,_ret_fn:1107,_safety_factor:1107,_save_dir:1107,_shift_da_split:1107,_shift_n:1107,_slice:1107,_step:[1252,1256],_sum_unify_arrai:1107,_timeout:1107,_tune:1107,_tune_da:1107,_tune_n:1107,_tune_step:1107,_unit_da_tune_count:1107,_unroll_step:1265,_with_node_mappig:1107,_worker:1107,_worker_class:1107,_worker_fn:1107,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,880,889,895,1107,1248,1249,1252,1256],abil:1219,abl:[40,41],about:[813,814,815],abov:[43,1163,1165],above_height:[40,41],abs:[283,421,543,667,954,1107],absolut:[40,41,954,955],abstractmethod:1107,accept:[15,43,1219],access:[40,41,1262],accord:[40,41,813,814,954,972,991,1026,1027,1046,1051],accordingli:[835,836,837],accur:[59,383,419,420,880,892,893,894,895,930,1053,1213,1217,1227,1229,1230,1232,1233,1235],aco:[756,1086],acosh:[756,1086],across:[40,41,880,889,890,899,900,902,903,904,905,906,912,922,923,954,959,960,962,963,1107,1151,1155],activ:[1181,1182,1183,1184,1185,1186,1187,1219,1223,1224],actual:1262,adam:[1053,1055,1056,1060,1219,1252,1254,1261],adam_step:1053,adam_upd:1053,adapt:[1053,1061,1252,1255],add:[40,41,43,1107,1201,1202,1203,1204,1205,1206,1219,1250,1251,1262],add_fn_to_dict:1213,add_param:1213,added:[43,954,1036,1037,1258,1259],adding:[954,965],addit:[40,41,43,954,980,981,982,1205,1206,1236,1246],adher:43,adjac:[954,957],adopt:[954,973],affect:[954,957],affin:[1250,1251],after:[954,1008,1053,1056,1057,1058,1060,1061,1062,1069,1070,1205,1206,1252,1253,1254,1255,1256,1257,1265],after_1:[954,972,1051],after_n:[954,972,1051],again:43,against:[40,41,826,827,1076,1079,1170,1172,1173,1174,1175,1176,1177,1178],agnost:[43,1219,1261,1262],aim:1265,algebra:[465,1076],algorithm:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243,1265],align:[40,41,43,954,965],aliv:[880,914,916,920,954,993,1017,1021],all:[15,16,17,18,19,40,41,43,103,225,406,522,645,835,878,879,880,889,914,920,954,955,956,962,963,973,986,993,999,1021,1035,1103,1104,1105,1106,1107,1151,1152,1153,1159,1160,1163,1164,1167,1170,1172,1173,1174,1175,1176,1177,1178,1188,1198,1219,1262,1265],all_depth:[40,41],all_equ:954,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1151,all_tru:[40,41],alloc:[880,1107],allow:[954,1009,1010,1011,1248,1249],allow_dupl:[954,1011],alon:[880,919,929,1107,1219],along:[40,41,43,471,826,827,832,833,835,836,837,880,903,904,905,906,909,910,911,912,924,954,971,976,977,986,991,1008,1009,1010,1023,1034,1038,1041,1048,1076,1079,1103,1104,1105,1106,1107,1163,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178],alongsid:[1261,1262],alpha:[1180,1182],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,880,1107],also:[40,41,43,954,957,1053,1056,1103,1104,1105,1106,1151,1152,1153,1159,1160,1188,1197,1236,1246,1261],altern:1261,alwai:[40,41,43,1053,1059,1064],among:[40,41],amount:[880,926,1107,1219],angl:[1086,1087,1092],ani:[15,16,17,18,19,40,41,43,103,225,406,522,645,835,878,879,880,882,885,889,890,892,901,902,905,906,911,954,956,957,961,979,980,981,982,983,984,998,1006,1011,1036,1037,1053,1057,1107,1151,1152,1155,1159,1160,1161,1162,1163,1167,1219,1225,1226,1248,1249,1261,1262,1265],anoth:[40,41,930,936,1219],another_backend:43,anyth:[43,1265],anywai:43,apart:43,api:[1219,1220],appear:[954,985],append:[40,41,1107],appli:[15,18,19,40,41,817,824,954,980,981,982,1053,1060,1061,1076,1081,1083,1084,1085,1103,1104,1105,1151,1155,1158,1160,1180,1181,1182,1183,1184,1185,1186,1187,1188,1197,1199,1200,1205,1206,1219,1222,1223,1224,1250,1251],applic:[1151,1155,1160,1188,1199,1200,1219,1265],approxim:[43,839,864,1180,1181],arang:[123,283,421,471,543,667,954,1009,1010],arbitrari:[40,41,880,909,910,912,1107],arc:[1086,1092],arcco:[1086,1087],arctan:[1086,1091],area:1219,arg:[15,16,17,40,41,43,59,63,880,889,902,906,912,924,954,980,981,982,1027,1107,1207,1208,1209,1213,1225,1226,1248,1249],arg_nam:954,arg_stateful_idx:[1207,1208,1209,1213,1248,1249],argmax:[123,421,543,667,954],argmin:[123,421,543,667,954],args_clon:1107,args_dist:1107,args_to_ivi:[15,1219],args_to_n:[15,1219],args_uni:1107,argsort:[100,222,403,519,642,832],argument:[15,16,17,18,19,40,41,42,43,59,63,878,879,880,889,890,902,906,912,954,957,958,966,979,1011,1027,1086,1087,1107,1151,1155,1225,1226,1248,1249],aris:[1219,1265],arithmet:[43,1170,1173,1176,1178],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:471,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,123,283,421,471,543,667,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,858,864,880,898,899,900,903,904,905,906,909,910,911,912,914,916,920,924,925,930,934,940,945,946,954,955,956,957,959,960,962,963,964,965,967,968,969,970,971,972,974,975,976,977,980,981,982,983,985,986,987,988,989,990,991,992,993,996,998,999,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1012,1013,1014,1015,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1032,1034,1035,1038,1039,1040,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1055,1056,1059,1060,1064,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1107,1151,1153,1160,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1219,1220,1236,1244,1245,1247,1252,1256,1261,1262],arrang:[954,980],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,380,381,382,383,385,386,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837],array_builtin:[43,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877],array_equ:[283,667,954],array_lik:[471,954,961],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,954],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1219],arraywithgener:[22,1219],arraywithgradi:[24,1219],arraywithimag:[26,1219],arraywithlinalg:[28,1219],arraywithlog:[30,1219],arraywithmath:[32,1219],arraywithmeta:[34,1219],arraywithrandom:[36,1219],arraywithreduct:[38,1219],arriv:[40,41,42],articl:1219,arxiv:1219,as_arrai:[40,41,954,996,1032],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[419,421,430,880,898,930,937,938,939,940],as_tensor:421,as_vari:[40,41],as_zero:[40,41],asarrai:[421,954],asin:[756,1086],asinh:[756,1086],aspect:[1069,1074],assert:[40,41,954,964,1107],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:954,associ:[43,1076,1082],assum:[1262,1265],astyp:[421,930],asynchron:[40,41,42],at_dev:[40,42,880,893,894],at_kei:[40,41],at_key_chain:[40,41],at_nod:1107,atan2:[756,1086],atan:[756,1086],atanh:[756,1086],attent:[1188,1199,1200,1236,1247],attribut:[0,6,40,41,813,814,815,954,1020,1052],audienc:[1219,1262],author:1219,avail:[40,41,880,915,917,918,927,954,981,1107],averag:[1053,1055,1056,1060,1103,1104,1105,1170,1173],average_across_step:[1103,1104,1105],avoid:[880,1107,1262],axes:[40,41,43,421,453,465,466,826,827,835,836,837,880,924,954,959,960,972,985,986,1040,1046,1051,1076,1079,1107,1170,1172,1173,1174,1175,1176,1177,1178],axes_length:[40,41,954,980,981,982],axi:[40,41,421,423,424,428,429,434,436,444,445,446,451,452,454,826,827,832,833,835,836,837,880,882,885,892,903,904,905,906,909,910,911,912,924,954,959,960,971,972,975,976,977,985,986,991,1008,1009,1010,1023,1034,1035,1038,1040,1041,1048,1051,1107,1163,1169,1170,1172,1173,1174,1175,1176,1177,1178,1180,1185,1201,1203,1204],axis0:[40,41,954,1040],axis1:[40,41,954,1040],back:[1248,1249,1252,1256],backend:[15,17,19,40,41,380,381,382,383,385,386,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,880,915,918,927,930,936,944,953,954,1001,1005,1053,1056,1058,1060,1061,1062,1067,1107,1219,1220,1225,1226,1252,1253,1254,1255,1256,1257,1261,1262,1265],background:[1219,1262],backprop:1265,backward:[835,836,837,1261],band:[954,989],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,383,419,420,421,446,839,864,880,882,883,884,885,886,887,889,890,892,893,894,895,930,954,994,1010,1028,1037,1053,1107,1170,1171,1213,1217,1219,1222,1223,1224,1227,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1265],batch:[40,41,880,922,923,954,986,989,999,1069,1073,1076,1081,1103,1104,1105,1106,1107,1188,1197,1205,1206,1250,1251],batch_shap:[421,434,438,954,986,999,1018,1069,1070,1071,1072,1073,1074,1075,1076,1082,1163,1164,1188,1198,1199,1200,1236,1245],batch_siz:[471,472,1107,1163,1164,1188,1189,1190,1191,1192,1193,1194,1195],bayesian:1265,becaus:[43,954,957],becom:[954,968,1086,1092,1265],been:[954,980,981,982,1163,1164],befor:[40,41,43,880,924,1103,1104,1105,1107,1151,1160,1170,1172,1173,1174,1175,1176,1177,1178,1188,1199,1200,1265],before_1:[954,972,1051],before_n:[954,972,1051],begin:[1151,1152,1159,1262],behaviour:[43,1265],behind:[1053,1056,1058,1060,1061,1062,1219],being:[40,41,43,954,957,1022,1030,1107],belong:[40,41],below:[43,1219,1262,1265],below_depth:[40,41],benefit:1219,bernoul:[1188,1196,1236,1244],best:[954,1011,1219],beta1:[1053,1055,1056,1060,1252,1253,1254],beta2:[1053,1055,1056,1060,1252,1253,1254],beta:[1205,1206],between:[40,41,42,813,814,954,957,1151,1155,1163,1165,1201,1203,1204,1252,1254],bia:[1188,1197,1198,1236,1237,1238,1239,1240,1241,1242,1243,1246],bias_initi:[1236,1237,1238,1239,1240,1241,1242,1243,1246],bilinear:[1069,1070],bilinear_resampl:[160,339,461,587,742,1069],bilinearli:[1069,1070],binari:[817,818,1201,1202],binary_cross_entropi:1201,bit:[383,813,814,815,930,941,1069,1071,1075,1219],bitwis:[817,818],bitwise_and:[85,209,388,504,627,817],bitwise_oper:[0,7,8],block:[1219,1262],bool:[15,18,19,40,41,42,43,817,821,823,826,827,832,833,835,836,837,839,858,878,879,880,898,911,915,919,924,927,929,930,940,954,956,962,963,976,979,983,984,989,996,998,1006,1011,1032,1034,1048,1049,1050,1053,1056,1057,1058,1059,1060,1061,1062,1064,1076,1079,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1163,1164,1170,1172,1173,1174,1175,1176,1177,1178,1180,1181,1188,1196,1225,1226,1236,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257],both:[43,954,975],bottom:1219,boundari:[40,41,1163,1167],branch:[878,879],brittl:43,broadcast:[40,41,43,817,818,826,827,835,836,837,839,858,864,954,965,983,1013,1014,1015,1023,1076,1079,1086,1092,1095,1170,1172,1173,1174,1175,1176,1177,1178],broadcast_to:[283,667,954],build:[1107,1219,1236,1247,1248,1249],build_mod:[1236,1247,1248,1249],builder:1219,built:[880,954,957,1107,1236,1247,1248,1249],builtin:43,builtin_ab:[238,839],builtin_add:[238,839],builtin_and:[238,839],builtin_bool:[238,839],builtin_contain:[238,839],builtin_deepcopi:[238,839],builtin_dir:[238,839],builtin_eq:[238,839],builtin_float:[238,839],builtin_floordiv:[238,839],builtin_g:[238,839],builtin_getattr:[238,839],builtin_getattribut:[238,839],builtin_getitem:[238,839],builtin_gt:[238,839],builtin_int:[238,839],builtin_invert:[238,839],builtin_l:[238,839],builtin_lt:[238,531,654,839],builtin_mul:[238,839],builtin_n:[238,839],builtin_neg:[238,839],builtin_or:[238,839],builtin_po:[238,839],builtin_pow:[43,238,839],builtin_radd:[238,839],builtin_rand:[238,839],builtin_rfloordiv:[238,839],builtin_rmul:[238,839],builtin_ror:[238,839],builtin_rpow:[238,839],builtin_rsub:[238,839],builtin_rtruediv:[238,839],builtin_rxor:[238,839],builtin_setitem:[238,839],builtin_some_op:43,builtin_sub:[238,839],builtin_truediv:[238,839],builtin_xor:[238,839],bypass:1262,cach:[880,896,954,966],cache_fn:954,calcul:[40,41,42,43,839,864,1086,1095],call:[43,880,924,954,1022,1030,1047,1053,1057,1107,1151,1152,1155,1159,1236,1247,1248,1249,1252,1256,1262,1265],callabl:[40,41,878,879,880,889,890,924,954,966,979,981,1011,1047,1103,1104,1105,1106,1107,1151,1155,1156,1157,1159,1160,1188,1199],can:[43,880,922,923,924,954,1024,1069,1071,1107,1219,1261,1262,1265],cancel_join_thread:1107,captur:1219,cast:[40,41,123,283,421,543,667,930,954,971,1069,1071,1075],catch_except:[954,979],categori:43,ceil:[283,421,667,954,957],cell:[1188,1198,1236,1245],certain:[40,41,954,957,1009,1010],chain:[40,41,1103,1104,1105,1258,1259],chang:[880,954,1024,1107,1151,1153,1160,1219,1261],channel:[954,989,1069,1071,1072,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246],check:[15,16,17,18,19,40,41,880,919,929,930,935,944,953,954,964,984,998,1006,1039,1049,1053,1059,1107,1151,1152,1159,1219,1262],check_nest:[1151,1159],check_shap:[40,41],check_submod_ret:[1248,1249],check_typ:[40,41],choic:[1219,1262],choleski:[746,1076],choos:[954,1050,1086,1092,1219],choose_random_framework:59,chosen:[40,41,954,957,1050],chunk:[880,922,923,924,1107],chunk_siz:[880,924,1107],circl:[1086,1087,1089],clark:1219,clear:[880,896,1107],clear_framework_stack:59,clear_mem_on_dev:[419,659,880],click:1219,clip:[40,41,283,421,667,954,969,970,1013,1015,1219],clip_matrix_norm:954,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,954],clipped_delta:1107,clone:[40,41,880,899,900,901,902,1107],clone_arrai:1107,clone_it:1107,clone_nest:1107,clonedit:1107,cloneditem:1107,clonednest:1107,close:[43,1069,1074,1086,1089,1107,1265],closest:[930,935],closest_valid_dtyp:930,code:[40,41,42,43,471,1219,1220,1261,1262],codebas:[880,922,923,1107,1219,1262,1265],collect:[15,40,41,419,421,456,461,465,468,469,471,839,878,880,930,954,1053,1069,1076,1083,1086,1107,1151,1163,1170,1180,1188,1201,1205,1222,1236,1250,1252],color:[40,41,42,1263,1264],column:[954,999],combin:[40,41,42,1069,1074,1219,1265],combined_batch_s:1107,come:1262,command:1219,commit:1265,common:[40,41,1086,1092],common_key_chain:[40,41],commun:[1219,1262],compar:[40,41,954,956,962,963],comparison_oper:[0,9,10],compat:[43,817,818,835,836,837,839,858,864,954,983,1024,1086,1095,1219,1265],compil:[283,421,667,1208,1209,1213,1219,1248,1249,1252,1253,1254,1255,1256,1257],compile_graph:[1207,1219,1248,1249,1252,1256],compile_on_next_step:[1248,1249,1252,1253,1254,1255,1256,1257],complet:[40,41,1107],complex:[1262,1265],compon:[954,975],composit:43,comput:[40,41,817,818,819,823,824,826,827,839,858,880,924,954,969,970,976,977,983,1012,1053,1055,1056,1057,1058,1060,1061,1062,1064,1066,1069,1072,1076,1077,1078,1079,1080,1083,1084,1085,1086,1087,1089,1091,1092,1096,1097,1098,1099,1101,1151,1155,1170,1171,1172,1173,1174,1175,1176,1177,1178,1188,1189,1190,1191,1192,1193,1194,1195,1197,1199,1201,1202,1203,1204],concat:[40,41,880,909,910,911,912,924,954,989,1107],concaten:[40,41,123,283,421,543,667,954,989,1107,1219],concatten:[40,41,880,909,910,911,912,924,1107],condit:[421,878,879,954,1050,1151,1159],conditon:[1151,1159],config:[40,41,1107],config_list:1107,configur:[40,41],conjunct:1262,connect:[1213,1236,1246,1247],consid:[40,41,826,827,1261,1265],consist:[40,41,880,912,1107,1170,1171,1248,1249,1262],constant:[880,889,890,954,972,1107,1151,1155,1201,1202,1203,1204,1205,1206,1227,1228,1232,1235,1248,1249,1250,1251,1262],constant_kwarg:1107,constant_pad:[283,421,543,667,954],constitu:[40,41],construct:[954,1041,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261],constructor:[40,41,42,954,958,1258,1259],consum:[880,1107],cont_feat_dim:[1188,1199],contaienr:[40,41],contain:[15,18,19,42,43,810,811,812,817,818,821,823,832,833,835,836,837,839,858,864,880,899,903,924,930,934,954,955,959,960,968,969,970,973,983,998,1013,1015,1025,1036,1037,1053,1055,1056,1058,1060,1061,1062,1086,1095,1103,1104,1105,1106,1107,1163,1164,1170,1172,1173,1174,1176,1178,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[421,667,954],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[421,954,1016,1188,1199,1236,1247],context_dim:[1236,1247],contextmanag:[59,60],continu:[43,1107,1262],contract:[40,41,1170,1171],contribut:[1219,1220],contributor:1219,control:1219,conv1d:[190,369,485,799,1188,1219,1236],conv1d_transpos:[190,369,485,799,1188],conv1dtranspos:[1219,1236],conv2d:[190,369,485,612,799,1188,1219,1236],conv2d_transpos:[190,369,485,799,1188],conv2dtranspos:[1219,1236],conv3d:[190,369,485,612,799,1188,1219,1236],conv3d_transpos:[190,369,485,799,1188],conv3dtranspos:[1219,1236],convent:[40,41,1170,1171],conver:[880,896,907,919,926,929,1107],convers:[16,17,18,19,40,41,1107,1219],convert:[15,16,17,18,19,40,41,43,880,907,908,930,936,942,943,954,1033,1044,1045,1069,1071,1075,1076,1082,1107,1151,1153,1160,1219,1226],convert_dtyp:930,convolut:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],cool:43,cooler:43,coordin:[954,1014,1086,1087,1089,1092],copi:[40,41,471,954,974,1107,1151,1153],copy_arrai:[421,667,954],copy_nest:1151,core:[419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,884,885,886,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1219],correct:[43,1219,1262],correctli:[40,41,826,827,1076,1079,1086,1092,1170,1172,1173,1174,1175,1176,1177,1178],correspond:[40,41,43,839,864,954,971,1163,1164],cos:[85,388,504,627,817,954,989,1086,1087,1101,1262],cosh:[85,388,504,627,756,817,1086],cosin:[817,819,820,1086,1087,1088,1094],cost:[1053,1055,1056,1058,1060,1061,1062,1103,1104,1105,1106],cost_fn:[1103,1106],could:1265,count:[40,41,835,836,837,1107,1170,1175,1177,1217],cprint:1263,cpu:[40,41,43,880,917,919,925,926,929,954,957,961,991,992,999,1009,1010,1018,1019,1020,1026,1027,1052,1107,1163,1164,1165,1166,1167,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1261,1262],creat:[40,41,810,811,812,880,889,890,954,957,961,990,991,992,999,1009,1010,1018,1019,1020,1026,1027,1043,1052,1053,1066,1107,1163,1164,1165,1166,1167,1219,1225,1226,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1265],create_if_abs:[40,41],create_vari:1227,creation:[40,41,42,43],creation_funct:[380,381,382,810,811,812],crop:[1069,1073],crop_siz:[1069,1073],cross:[283,667,954,1201,1202,1203,1204],cross_entropi:1201,cuda:[40,41,880,889,908,925,954,957,961,991,992,999,1009,1010,1018,1019,1020,1026,1027,1052,1107,1163,1164,1165,1166,1167,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259],cumprod:[123,283,421,667,954],cumsum:[667,954],cumul:[954,976,977],current:[40,41,42,43,880,889,913,914,916,920,930,936,944,953,954,978,993,1001,1005,1017,1021,1107,1151,1152,1159,1219,1265],current_framework:59,current_framework_str:[421,667,954,1107],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1213,d_in:[1188,1189,1190,1191,1192,1193,1194],d_out:[1188,1189,1190,1191,1192,1193,1194],da_can_termin:1107,da_dim_s:[880,1107],da_direct:1107,da_tune_step:[880,1107],dai:1265,daniel:1219,data:[40,41,42,43,810,811,812,814,815,817,818,821,823,835,836,837,839,858,864,880,882,883,884,885,886,887,892,893,894,908,930,934,935,936,940,941,942,943,944,945,946,953,954,957,961,983,990,999,1006,1019,1020,1024,1035,1039,1052,1053,1059,1067,1086,1095,1107,1188,1197,1219],data_format:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],data_type_funct:[383,385,386,813,814,815],dataset:[40,41],datatyp:[40,41,930,935,945,946],dcdw:[1053,1055,1056,1058,1060,1061],debug_info:1213,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1053,1060,1061,1252,1254,1255],decay_lambda:[1053,1060,1061,1252,1254,1255],decid:[40,41,1265],decompos:[1076,1077],decomposit:[1076,1077,1081],decor:43,decrement:[954,1002],dedic:[1053,1067,1225,1226],deep:[40,41,1219],deep_copi:[40,41],deeper:[880,902,906,912,1107,1151,1160,1219],deepli:[1151,1153],def:[43,60,81,205,384,500,623,881,888,891,931,932,933,1054,1107,1111,1118,1214,1218,1219,1228,1231,1234,1261,1262,1265],default_dev:43,default_devic:880,default_dtyp:[43,930],default_float_dtyp:930,default_int_dtyp:930,default_key_color:[40,41,42],default_nod:1107,default_rng:471,default_v:[954,979],defaultdevic:[880,881],defaultdtyp:[930,931],defaultfloatdtyp:[930,932],defaultintdtyp:[930,933],defer:43,defin:[43,954,975,1018,1020,1052,1163,1165],degre:[817,819,1086,1099,1101],del:1107,delta:[1053,1055,1107,1213],delta_dim_s:1107,delta_percent_mem:1107,delta_sf:1107,delta_util:1107,demo:1219,denomin:[954,988,995,1029,1036,1037,1205,1206,1250,1251],dens:[1236,1246],depend:[43,839,864,954,1050,1076,1081,1219],depth:[40,41,421,447,880,902,906,912,954,997,1018,1107,1151,1160,1213,1217,1248,1249],depth_cutoff:[40,41],depthwis:[1188,1195,1236,1243],depthwise_conv2d:[190,369,485,612,799,1188],depthwiseconv2d:[1219,1236],deriv:[1053,1055,1056,1058,1060,1061,1062,1151,1153,1160,1219,1248,1252,1256,1258],descend:[832,833,1076,1081],descent:[1053,1058,1252,1257],describ:[40,41,1170,1171],design:[1219,1220],desir:[40,41,880,925,930,934,954,957,961,999,1000,1019,1020,1052,1069,1074,1107,1170,1172,1173,1174,1176,1178],desired_aspect_ratio:[461,464,1069,1074],desired_percent_increas:1107,detail:1265,detect:[40,41,1151,1152,1159],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,817,818,821,835,836,837,839,864,880,915,917,918,927,930,934,935,941,944,945,946,953,954,956,957,961,962,963,998,1001,1005,1006,1039,1049,1053,1059,1086,1095,1103,1104,1105,1106,1107,1188,1199],dev:[40,41,42,43,116,277,419,421,422,425,436,437,438,445,446,447,448,449,450,455,471,472,536,659,880,883,884,886,887,889,890,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,916,919,920,921,922,923,924,925,926,929,954,957,961,991,992,999,1009,1010,1018,1019,1020,1026,1027,1052,1053,1068,1163,1164,1165,1166,1167,1225,1226,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259],dev_clon:[40,41,880],dev_clone_arrai:880,dev_clone_it:880,dev_clone_nest:880,dev_dist:[40,41,880],dev_dist_arrai:880,dev_dist_it:880,dev_dist_nest:880,dev_from_str:[43,116,277,419,536,659,880],dev_mapp:880,dev_str:[40,41],dev_to_str:[116,277,419,536,659,880],dev_unifi:880,dev_unify_arrai:880,dev_unify_it:880,dev_unify_nest:880,dev_util:880,devclonedit:880,devcloneditem:880,devclonednest:880,devdistit:880,devdistitem:880,devdistnest:880,develop:[1219,1262,1265],deviat:[40,41,1163,1166,1170,1176,1205,1206,1250,1251],devic:[21,40,41,43,380,381,382,420,421,435,810,811,812,882,883,884,885,886,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,954,957,961,990,991,992,999,1009,1010,1018,1019,1020,1026,1027,1052,1053,1068,1163,1164,1165,1166,1167,1219,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259],devmanag:[880,888],devmapp:[880,890],devmappermultiproc:880,diag:[1076,1081],diagon:[954,999],dict:[15,16,17,18,19,40,41,42,880,882,885,889,890,892,902,903,904,905,906,954,980,981,982,1011,1103,1104,1105,1107,1151,1153,1154,1155,1158,1160,1225,1226],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,813,814,880,899,900,903,904,1107,1188,1197,1219,1262,1265],differenti:[1219,1262],dilat:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],dim:[40,41,43,954,1018,1069,1070,1074,1076,1081,1107,1236,1247],dim_siz:[40,41,880,1107],dimens:[40,41,42,826,827,835,836,837,880,911,954,965,971,975,980,981,982,985,989,996,1008,1018,1023,1024,1034,1035,1038,1046,1048,1069,1073,1076,1079,1081,1103,1104,1105,1106,1107,1163,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1185,1188,1189,1190,1191,1192,1193,1194,1195,1198,1201,1203,1204,1236,1237,1238,1239,1240,1241,1242,1243,1246,1247],dimension:[40,41,471,835,836,837,954,1034,1035,1076,1081],direct:1107,directli:[43,1151,1160,1262,1265],directori:[954,1031,1042],discret:[1201,1203],disk:[40,41,1069,1071],distanc:[954,957],distribut:[40,41,880,899,903,904,905,906,1107,1163,1164,1165,1166,1167,1188,1196,1236,1244,1248,1249],distribute_nest:1107,distributedarrai:[40,41],distrubt:[1201,1203],dive:[1219,1262],divid:[40,41,954,1034,1036,1086],dividend:[1086,1095],divis:[954,988,995,1029,1036,1037,1053,1055,1056,1060,1086,1095,1252,1253,1254],divisor:[1053,1055,1056,1060,1086,1095,1252,1253,1254],doc:1219,docstr:43,doe:[40,41,43,954,957,1034,1261],doesn:1219,doing:43,domain:[1086,1087],don:1219,door:1265,dot:[1076,1078,1188,1199,1200,1236,1247],down:1261,downscal:[954,969,970],drag:[1219,1265],draw:[1163,1164,1166,1167],drawn:[1163,1164,1165,1166,1167],drop:[1219,1265],dropout:[1188,1219,1236,1247],dropout_r:[1236,1247],ds_tune_step:880,dtype:[40,41,43,123,283,380,381,382,383,385,386,421,422,425,426,435,438,448,455,543,667,810,811,812,813,814,815,934,935,936,937,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,957,961,990,999,1018,1019,1020,1052],dtype_bit:[123,283,421,543,667,930],dtype_from_str:[43,123,283,421,543,667,930],dtype_in:[421,431,432,433,930,936,941,942,943,944,945,946,953],dtype_to_str:[123,283,421,543,667,930],duplic:[40,41],dure:[40,41,43,878,879,954,1047,1053,1055,1056,1060,1103,1104,1105,1106,1248,1249,1252,1253,1254,1256],dynam:[421,427,878,879],each:[40,41,42,43,817,818,821,823,832,833,839,858,864,880,889,890,899,900,901,902,903,904,905,911,923,924,954,955,956,972,983,1023,1034,1038,1041,1051,1053,1056,1058,1060,1061,1062,1069,1072,1076,1081,1086,1089,1095,1097,1098,1107,1151,1155,1163,1164,1170,1171,1188,1189,1190,1191,1192,1193,1194,1195,1196,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1262],eager:1262,easi:1265,easili:1219,econom:1265,ecosystem:1219,edg:[954,968,972,1051],effect:[1053,1062],effective_grad:[1053,1062],effici:1265,einop:[40,41,954,980,981,982],einops_rearrang:[40,41,954],einops_reduc:[40,41,954],einops_repeat:[40,41,954],einstein:[40,41,1170,1171],einsum:[40,41,176,357,473,602,779,1170],either:[40,41,954,979,1011,1014,1016,1103,1104,1105,1106,1107,1236,1247,1248,1249,1262],eleg:1107,element:[40,41,43,471,817,818,819,820,821,823,824,832,833,835,836,837,839,858,864,880,901,905,911,930,934,954,955,957,959,960,962,963,967,968,969,970,976,977,983,986,987,988,999,1000,1013,1015,1023,1025,1034,1045,1050,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1107,1170,1171,1173,1175,1177,1180,1181,1182,1183,1184,1185,1186,1187,1188,1196,1236,1244],elementwis:[40,41],elementwise_affin:[1250,1251],elementwise_funct:[817,818,819,820,821,822,823,824],elemtn:[1163,1164],elif:1107,els:[954,964,979,984,1107],elsewher:[954,1050],emphas:1219,empti:[40,41,1107],enabl:[40,41,42,1219],encapsul:[813,815],encod:[954,989,1069,1071],end:[954,957,1219,1262],ensur:43,entir:[40,41,835,836,837,880,924,1107,1219,1236,1245],entri:[40,41,954,986,1009,1010,1034,1035],entropi:[1201,1202,1203,1204],enumer:1107,environ:1219,eps:[383,813,814],epsilon:[1053,1055,1056,1060,1201,1202,1203,1204,1205,1206,1250,1251,1252,1253,1254],equal:[40,41,421,543,667,817,819,821,954,956,962,963,972,1034,1051,1086,1099,1101,1163,1167],equality_matrix:[954,956],equat:[40,41,1170,1171],equival:[954,957,1086,1101],erf:[469,756,1086],error:[40,41,880,954,1035,1086,1096,1107,1180,1181,1248,1249,1252,1256],essenti:43,etc:[40,41,43,880,925,954,957,961,991,992,999,1009,1010,1018,1019,1020,1026,1027,1052,1107,1163,1164,1165,1166,1167,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1265],euler:809,evalu:[40,41,835,836,837,954,1014,1151,1152,1159],even:1265,evenli:[40,41,954,957,1009,1010,1034],everi:[954,956,1265],exact:[40,41],exampl:[43,878,879,954,968,1038,1219,1261,1262,1265],example_input:[421,427,878,879],exc_tb:1107,exc_typ:1107,exc_val:1107,exce:[954,1015],except:[40,41,44,47,835,836,837,954,957,964,971,979,1047,1107],excess_s:1107,excit:[1219,1262],exclud:[59,61,954,957,1163,1167],exclus:[40,41,421,429,443,456,458,954,976,1006,1053,1059,1163,1165],execut:[43,954,1047,1262],execute_with_gradi:[157,334,456,582,736,1053,1219,1261],exist:[40,41,954,979,1107,1219,1252,1256,1265],exp:[756,1086],expand:[40,41,954,985,989],expand_dim:[40,41,283,667,954,1107],expect:[954,958],explain:1262,explicitli:[1236,1245,1247,1248,1249,1262],expon:[43,839,864,954,1037],exponenti:[43,839,864,1086,1096,1097],expos:[954,961,973],express:[954,1014],exsit:[40,41],extend:43,extra:[40,41,42,1053,1057],eye:[1076,1078],fabian:1219,fabio:1219,factor:[880,889,922,923,924,1053,1055,1056,1060,1061,1076,1081,1107,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243,1252,1253,1254,1255],falck:1219,fall:[1248,1249,1252,1256],fallback_to_non_compil:[1248,1249,1252,1256],fals:[15,18,19,40,41,42,59,66,67,68,69,70,419,421,429,430,443,451,454,456,457,458,465,466,817,821,826,827,832,833,835,836,837,880,898,911,919,924,929,930,937,938,939,940,954,956,976,979,984,989,996,1006,1011,1032,1034,1048,1050,1053,1056,1057,1058,1059,1060,1061,1062,1076,1079,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1170,1172,1173,1174,1175,1176,1177,1178,1207,1208,1209,1213,1217,1225,1226,1248,1249,1252,1253,1254,1255,1256,1257],fan_in:1227,fan_mod:1227,fan_out:1227,far:[1151,1152,1159,1261],faster:[878,879],favourit:[1219,1261],feasibl:1265,feat_dim:[1188,1199,1200],fed:[880,924,1107],feed:[880,924,1107],field:1265,file:[40,41,43,954,1031,1042,1248,1249],filepath:[40,41],fill:[40,41,810,811,812,954,990,1019,1163,1165],fill_valu:[421,435,954,990],filter:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243,1265],filter_s:[1236,1237,1238],filter_shap:[1236,1239,1240,1241,1242,1243],find:[40,41,1265],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,204,205,383,384,499,500,622,623,813],finish:[1219,1265],finit:[817,821],first:[40,41,471,817,818,878,879,880,911,954,962,971,975,983,1009,1010,1038,1040,1053,1057,1076,1081,1103,1104,1105,1106,1107,1151,1152,1159,1163,1169,1170,1175,1177,1236,1247,1248,1249,1252,1256,1262,1265],firstlayersiren:[1219,1227],firstli:[1262,1265],fist:[880,924,1107],fit:[40,41,419,421,456,461,465,468,469,471,954,1023,1069,1074],fkt:1265,flag:[40,41,1053,1059],flat:[40,41,43,954,1023,1026],flat_list:[40,41],flatten:[40,41,826,827,954,989,1023,1170,1172,1173,1174,1176,1178],flatten_key_chain:[40,41,1248,1249],flexibl:[1219,1262],flip:[40,41,123,283,421,543,667,954],float32:[43,421,438,930,934,942,943,954,957,961,999,1019,1020,1052],float_dtyp:[930,938,948],float_img_to_uint8_img:1069,floor:[283,421,667,954,988,1107],floormod:[283,421,667,954],fluid:1265,fname:[1207,1209,1213,1248,1249],folder:[43,1219],follow:[40,41,43,813,815,880,924,954,1002,1003,1004,1036,1037,1053,1056,1058,1060,1061,1062,1107,1151,1155,1160,1188,1199,1200,1219,1236,1246,1252,1256],followng:[813,814],fomaml_step:1103,forget:[1053,1055,1056,1060,1252,1253,1254],fork:[954,1016],forkserv:[954,1016,1107],form:[15,16,17,18,19,40,41,954,961,1053,1056,1058,1060,1061,1062,1151,1153,1160,1188],format:[40,41,43,880,898,930,934,936,940,954,957,961,999,1019,1020,1052,1107,1170,1171,1219,1261,1262],format_fn:[40,41],format_key_chain:[40,41],forward:[1248,1249,1252,1256,1261],found:[40,41,42],fourier:[954,989],fourier_encod:954,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,95,101,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,202,203,205,206,207,210,211,212,213,214,217,223,226,227,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,344,345,346,347,349,350,353,354,355,356,358,359,360,361,362,363,364,365,368,370,371,372,373,374,375,376,381,382,384,385,386,389,390,391,392,393,394,395,398,404,407,408,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,462,463,464,466,467,470,472,474,475,476,477,478,479,480,483,484,486,487,488,489,490,491,492,497,498,500,501,502,505,506,507,508,509,510,511,514,520,523,524,532,537,538,539,540,541,542,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,583,584,585,586,588,589,590,592,593,594,598,599,600,601,603,604,605,606,607,608,609,613,614,615,620,621,623,624,625,628,629,630,631,632,633,634,637,643,646,647,655,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,747,748,749,750,751,752,754,755,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,814,815,817,818,819,820,821,822,823,824,827,832,833,836,837,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1084,1085,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1206,1208,1209,1211,1212,1214,1218,1219,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1264,1265],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1107,framewrk:[954,1016],freeli:43,frequenc:[954,989],from:[40,41,42,43,817,823,832,833,835,836,837,880,889,890,924,930,936,954,979,986,991,992,999,1024,1035,1043,1050,1053,1056,1060,1069,1073,1103,1104,1105,1106,1107,1151,1153,1160,1163,1164,1165,1166,1167,1170,1175,1177,1188,1196,1199,1219,1225,1226,1236,1244,1247,1252,1256,1261,1262],from_cal:[1248,1249],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[123,283,421,543,667,813,814,954,1219],full_matric:[1076,1081],fulli:[43,1219,1236,1246,1247,1261],func:[40,41,421,427,456,457,878,879,880,924,954,966,1053,1057,1107],further:1265,furthermor:1265,futur:1265,gain:1227,gamma:[1205,1206],gather:[40,41,123,283,421,543,667,954,992],gather_nd:[40,41,123,283,421,543,667,954],gauss:[1086,1096],gaussian:[1180,1181],geglu:[1219,1222],gelu:[367,482,788,1180,1219,1222],gener:[23,40,41,43,419,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,471,878,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1059,1163,1165,1167,1168,1219,1252,1256],geometr:[954,989],get:[40,41,813,814,815,880,889,890,898,913,914,919,923,926,929,930,940,941,954,958,993,994,995,1022,1107,1217,1219,1236,1245,1265],get_all_arrays_in_memori:954,get_all_arrays_on_dev:880,get_framework:59,get_initial_st:[1236,1245],get_min_bas:954,get_min_denomin:954,get_mod_kei:[1248,1249],get_num_dim:[421,667,954],get_param:1213,get_param_recurs:1213,get_referrers_recurs:954,getfullargspec:1107,gist:1219,give:[832,833,954,1024,1262],given:[40,41,43,810,811,812,832,833,880,913,919,922,923,924,926,929,930,934,954,957,961,968,976,977,986,992,1009,1010,1019,1020,1023,1026,1027,1034,1041,1046,1048,1052,1053,1055,1056,1058,1060,1061,1062,1076,1078,1082,1086,1087,1107,1151,1156,1157,1163,1166,1167,1169,1170,1173,1175,1176,1177,1178,1188,1189,1190,1191,1192,1193,1194,1195,1225,1226,1265],global:[40,41,42,880,889,890,897,922,923,924,930,937,938,939,954,978,994,995,1022,1028,1029,1030,1036,1037,1053,1068,1107,1205,1206,1211,1212,1219,1250,1251],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1219,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246],got:1219,gpu0:43,gpu2:43,gpu:[880,915,918,1107],gpu_is_avail:[419,880,1107],grad:[1219,1252,1256,1261],gradient:[25,40,41,457,458,459,460,880,924,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1072,1103,1104,1105,1106,1219,1252,1253,1254,1255,1256,1257,1261,1265],gradient_descent_upd:[1053,1103,1104,1105,1106],gradient_imag:[160,339,461,587,742,1069],gradienttrack:[1053,1054],graph:[1053,1056,1058,1060,1061,1062,1207,1208,1209,1214,1219,1248,1249],graph_compil:[1207,1208,1209,1210,1211,1212,1213,1217],greater:[40,41,954,957,987,1035,1163,1167],green:[40,41,42,1263,1264],grid:[954,1014],group:[1069,1074],guid:[1219,1220,1265],gym:1219,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1265,half:[954,957,1107,1163,1167],hand:1219,handl:[40,41,42,43,878,879,880,896,898,907,908,919,926,929,1053,1056,1058,1060,1061,1062,1107,1252,1253,1254,1255,1256,1257],has:[40,41,43,954,1038,1086,1091],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,954],hasattr:1107,have:[40,41,43,813,814,817,818,821,823,835,836,837,839,858,864,954,971,975,980,981,982,983,990,1038,1053,1059,1067,1076,1081,1086,1095,1107,1219,1261,1262],hdf5:[40,41,1248,1249],head:[1188,1199,1236,1247],head_dim:[1236,1247],height:[1069,1074],height_cutoff:[40,41],help:[59,383,419,420,880,892,893,894,895,930,1053,1213,1217,1219,1227,1229,1230,1232,1233,1235],helper:1219,here:[43,1219],hidden:[1188,1198,1236,1245],hierarch:[954,973],hierarchi:[40,41],high:[40,41,471,1163,1165,1167],higher:[1053,1056,1058,1060,1061,1062,1076,1081],highest:[1163,1165],highest_util:1107,highest_util_nod:1107,highli:1219,highlight:1265,highlight_subgraph:[1207,1209,1213],hint:43,hkt:1265,hold:[930,934,954,957,961,1026,1027],host:1219,hot:[954,1018],how:[1219,1236,1247,1248,1249,1262,1265],howev:[43,1262],http:1265,hyperbol:[817,820,1086,1088,1090,1093,1094,1100,1102,1180,1187],hypothet:1265,icon:1219,idea:1219,ident:[40,41,43,123,283,421,543,667,954],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[809,813,814],if_exist:[40,41],ignor:[40,41,1252,1256],ignore_key_error:[40,41],ignore_miss:[1252,1256],ignore_non:[40,41],iinfo:[80,204,383,499,622,813],imag:[27,462,463,464,954,1008,1070,1071,1072,1073,1074,1075,1188,1189,1190,1191,1192,1194,1195,1219,1265],image_dim:[1069,1073],imkkhk:1265,immedi:[1219,1262,1265],implement:[43,839,864,1219,1262,1265],in_featur:[1188,1197],includ:[40,41,43,835,836,837,954,957,998,1036,1037,1049,1151,1152,1163,1167,1236,1246,1247,1250,1251,1261],include_deriv:[1151,1153,1160],include_empti:[40,41],include_gener:[1207,1208,1209,1213,1248,1249],include_inf:[40,41,954,998,1049],include_nest:[1151,1152],include_self:[40,41],inclus:[1163,1165],incom:[1188,1197],increas:[880,902,906,912,954,972,985,1051,1107,1151,1160],increasingli:1265,increment:[954,1003,1107],increment_param_count:1213,inde:1219,indent:[40,41,42],independ:[1163,1164],index:[40,41,421,471,954,959,960,991,992,1014,1035,1038,1151,1154,1156,1157,1158,1161],index_nest:1151,indic:[40,41,421,436,437,447,449,450,832,833,954,959,960,991,992,1000,1018,1026,1027,1151,1152,1154,1156,1157,1158,1159,1161,1162,1163,1164,1180,1185,1188,1189,1190,1191,1192,1193,1194,1195,1205,1206,1236,1237,1238,1239,1240,1241,1242,1243,1248,1249],indices_wher:[123,283,421,667,954],inevit:1265,inf:[40,41,826,827,954,998,1007,1049,1086,1091],infer:[817,823,832,833,878,879,954,986,996,999,1024,1032,1069,1073,1262,1265],infin:[817,821,954,1007],inform:[813,814,815,1053,1064],init_c:[1188,1198],init_h:[1188,1198],init_on_first_step:[1252,1256],initi:[40,41,42,59,383,419,420,880,892,893,894,895,930,1053,1107,1188,1198,1213,1217,1219,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1252,1256],initialz:[1248,1249],inner:[1103,1104,1105,1106],inner_batch_fn:[1103,1104,1105],inner_batch_shap:[1188,1197],inner_cost_fn:[1103,1104,1105],inner_grad_step:[1103,1104,1105,1106],inner_learning_r:[1103,1104,1105,1106],inner_optimization_step:[1103,1104,1105,1106],inner_v:[1103,1104,1105],inp:1107,inplac:[40,41,954,964,1001,1005,1039,1053,1056,1058,1060,1061,1062,1225,1226,1252,1253,1254,1255,1256,1257],inplace_arrays_support:[421,954],inplace_decr:[123,283,421,543,667,954],inplace_incr:[123,283,421,543,667,954],inplace_oper:[0,11,12],inplace_upd:[40,41,123,283,421,543,667,954,1225,1226],inplace_variables_support:[421,954],input:[15,18,19,40,41,42,43,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,878,879,880,889,890,897,898,899,902,903,906,912,924,925,930,934,935,937,938,939,940,941,945,946,954,955,956,959,960,962,963,964,965,967,968,969,970,971,972,974,976,977,979,980,981,982,983,984,985,986,987,988,989,996,998,999,1000,1002,1003,1004,1006,1007,1008,1012,1013,1014,1015,1023,1025,1032,1033,1035,1038,1039,1040,1041,1043,1044,1045,1046,1048,1049,1051,1053,1057,1059,1064,1068,1069,1070,1071,1072,1073,1075,1076,1079,1081,1083,1084,1085,1086,1088,1090,1091,1093,1094,1095,1099,1100,1101,1102,1103,1104,1105,1106,1107,1163,1164,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1250,1251,1262],input_ax:[880,924,1107],input_channel:[1236,1237,1238,1239,1240,1241,1242,1245,1246],input_queu:1107,inputs_split:1107,insert:[954,985],insid:43,inspect:1107,inspir:1265,instal:1219,instanc:[15,16,17,18,19,40,41,43,471,839,858,864,880,889,1107,1225,1226,1258,1259],instead:[40,41,471,1170,1172,1173,1174,1175,1176,1177,1178,1265],int32:43,int64:[930,934,954,957,961,999,1019,1020,1052],int_dtyp:[930,939,949],integ:[40,41,471,813,815,817,818,826,827,835,836,837,930,946,954,957,967,987,1025,1034,1163,1165,1168],integr:1219,intend:43,inter:1219,interchang:[40,41,954,1040],interest:1219,interfac:[954,961,1262],intermedi:[40,41],intern:[40,41,880,1053,1067,1107,1151,1152,1159,1160,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1258,1259],interpol:[954,1008],intersect:[1086,1087],interv:[40,41,835,836,837,954,957,968,1009,1010,1086,1089,1163,1167],introduc:1265,inv:[746,1076,1265],invalid:[835,836,837],invalid_dtyp:930,invers:[1076,1078,1080,1086,1087,1088,1089,1090,1091,1093,1265],invert:[1076,1078,1080],invest:1265,invoc:[878,879],irrespect:1219,is_al:1107,is_arrai:[123,283,421,543,667,954,1107],is_float_dtyp:930,is_int_dtyp:930,is_mean:1107,is_sum:1107,is_var:[1213,1217],is_vari:[157,334,456,582,736,1053],isfinit:[85,209,388,504,627,817],isinf:[283,543,667,954],isinst:1107,isnan:[85,209,388,504,627,817],isnumer:1107,item:[15,19,40,41,839,851,852,880,889,890,892,899,901,903,905,911,930,937,954,973,997,1036,1037,1107,1151,1155,1156,1157,1160,1161,1162,1219,1248,1249,1261],iter:[15,16,17,18,19,40,41,42,878,879,880,883,884,886,887,889,890,893,894,901,903,904,905,906,911,924,954,956,965,971,972,986,999,1014,1019,1023,1024,1027,1032,1034,1038,1041,1046,1051,1107,1151,1152,1153,1155,1159,1160],iterbal:[880,901,905,911,1107],its:[471,832,833,880,924,954,999,1024,1040,1046,1107,1219],itself:[43,1151,1160],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,380,381,382,383,385,386,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,884,885,886,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1217,1219,1220,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1263,1264],ivy_backend:[40,41],ivy_bay:1265,ivyfcmodel:1261,ivyh:[40,41,42],ivymodul:[187,796],jame:1219,jax:[1053,1059,1219,1265],jax_concat:1219,jnp:1219,join:[40,41,954,971,1038,1107],journal:1219,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1219,1236,1245,1265],kaimingnorm:[1227,1231],kalman:1265,kalman_filt:1265,kalman_filter_step:1265,kalman_filter_upd:1265,keep:[40,41,880,925,954,1048,1107,1219,1265],keep_inner_v:[1103,1104,1105],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1103,1104,1105],keepdim:[40,41,421,454,465,466,826,827,835,836,837,954,1048,1076,1079,1170,1172,1173,1174,1175,1176,1177,1178],kei:[15,16,17,40,41,42,839,844,880,892,954,973,1103,1104,1105,1107,1151,1154,1158,1188,1199,1200,1219,1225,1226,1236,1247,1252,1256],kept:[40,41,42,1103,1104,1105],kera:1265,kernel:[1188,1198],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,880,889,890,902,906,912,954,958,980,981,982,1011,1107,1151,1155,1248,1249],keyword_color_dict:[40,41,42],kind:[813,814,815,1265],kwarg:[15,16,17,40,41,42,59,63,880,889,902,906,912,954,1011,1107,1207,1208,1209,1213,1225,1226,1248,1249],kwarg_stateful_idx:[1207,1208,1209,1213,1248,1249],kwargs_clon:1107,kwargs_dist:1107,kwargs_uni:1107,label:[1201,1202,1203,1204],lamb:[1053,1060,1219,1252],lamb_upd:1053,lambda:[1107,1252,1255,1257,1261],lar:[1053,1060,1061,1219,1252],larger:[813,814,954,968],largest:[40,41,813,814,815,954,959,987],lars_upd:1053,last:[40,41,835,836,837,954,957,975,1008,1034,1038,1076,1079,1081,1170,1175,1177,1180,1185,1188,1198,1236,1246],later:[40,41,954,966],latest:[1236,1245],layer:[1053,1056,1058,1060,1062,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206,1219,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1265],layer_norm:1205,layernorm:[1219,1250],layerwis:[1053,1061,1252,1255],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1151,1152,1159],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1180,1181,1182],leaky_relu:[788,1180],learn:[817,823,832,833,1053,1056,1058,1060,1061,1062,1103,1104,1105,1106,1163,1169,1219,1252,1253,1254,1255,1256,1257,1262,1265],learnabl:[1205,1206,1250,1251],leav:[15,18,19,40,41,1151,1152,1153,1159,1160],left:[40,41,826,827,1076,1079,1170,1172,1173,1174,1175,1176,1177,1178,1219],leftmost:[40,41],len:1107,length:[40,41,42,954,957,1024,1035,1046],lenton2021ivi:1219,lenton:1219,less:[40,41,43,85,209,388,504,627,817,954,967,1107,1163,1167],less_util_node_str:1107,let:[1262,1265],level:1219,librari:[1219,1261,1265],lightweight:1219,like:[43,1053,1059,1163,1167,1219,1261,1262,1265],limit:[40,41,42,813,814,815,954,968,969,970],linalg:[29,466,467,1077,1078,1079,1080,1081,1082,1219],linear0:[1219,1261],linear1:1219,linear2:1261,linear:[465,954,989,1008,1076,1180,1181,1182,1183,1188,1196,1219,1236,1237,1238,1239,1240,1241,1242,1243,1261],linear_algebra_extens:[826,827],linear_resampl:[123,283,421,543,667,954],linearli:[954,989],link:1219,linspac:[123,283,421,543,667,954,957],list:[15,18,19,40,41,43,380,381,382,810,811,812,835,836,837,880,889,890,899,900,902,903,904,906,909,910,924,954,957,961,963,1014,1033,1034,1043,1048,1103,1104,1105,1107,1151,1152,1153,1155,1159,1160,1188,1189,1190,1191,1192,1193,1194,1195,1219,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243],list_join:[40,41,42],list_stack:[40,41],liter:[826,827],littl:1262,load:[40,41],loaded_kwarg:1107,loader:1219,local_set:[954,997],locat:[43,817,822,954,1007,1163,1164],log:[756,954,1010,1086,1107,1201,1202,1203,1204,1219],log_all_op:1213,log_global_inference_abs_tim:[1210,1219],log_global_inference_rel_tim:[1210,1219],logarithm:[1086,1098],logic:[31,817,824,835,836,837,1084,1085,1219],logical_and:[348,753,1083],logical_not:[85,209,388,504,627,817],logical_or:[348,753,1083],logit:[1201,1204],logspac:[123,283,421,543,667,954],look:[43,1262,1265],loop:[1103,1104,1105,1106],loss:[1202,1203,1204,1219,1261],loss_fn:[1219,1261],lot:1262,low:[40,41,471,1163,1165,1167],lower:[40,41,954,1013,1163,1167],lower_depth:[1248,1249],lowest:[15,18,19,40,41,1151,1160,1163,1165],lstm:[1188,1198,1219,1236],lstm_updat:[43,1188],machin:[813,814,815,817,823,832,833,1163,1169,1219,1262,1265],mai:[954,957,979,983,1219,1262,1265],main:[954,999,1219],mainli:1219,make:[43,471,880,1107,1219,1262],maml:[1103,1104,1105],maml_step:1103,manag:[880,1107],mani:[40,41,43,954,1034,1219],manner:[15,18,19,40,41,43,1151,1160],manual:[1151,1152,1159,1265],map:[40,41,42,817,822,880,889,954,1007,1107,1151,1156,1157,1160,1236,1247,1261],map_cont:[40,41],map_nest_at_index:1151,map_nest_at_indic:1151,map_sequ:[40,41],mapper:[880,889,890,1107],mask:[1188,1199,1200],match:[40,41,954,1011],match_kwarg:954,math:[33,470,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1107,1219],mathbb:[1076,1082],mathbf:[1076,1082],mathemat:809,matmul:[43,283,421,543,667,954,1265],matplotlib:1262,matric:[1188,1197],matrix:[40,41,954,956,969,1012,1076,1077,1078,1079,1080,1082,1188,1197,1236,1246],matrix_norm:[40,41,164,343,465,591,746,1076],matter:1219,max:[40,41,383,813,814,815,954,969,970,981,1013,1026,1027,1107,1170,1172,1252,1254],max_batch_s:[40,41],max_chunk_s:[880,924,1107],max_depth:[40,41,880,884,887,894,902,906,912,954,997,1107,1151,1160],max_dev_dim_step_ratio:880,max_freq:[954,989],max_length:[40,41],max_node_dim_step_ratio:1107,max_norm:[40,41,954,969,970],max_split_factor_step_s:[880,1107],max_trust_ratio:[1053,1060,1252,1254],maxim:[1219,1262,1265],maximis:1219,maximum:[40,41,42,667,880,902,906,912,924,954,959,968,969,970,989,1053,1060,1107,1151,1160,1170,1172],mayb:[15,18,19],mdi:1107,mean:[40,41,471,880,909,910,911,912,924,954,981,1103,1104,1105,1106,1107,1151,1155,1163,1166,1170,1173,1176,1178,1227,1261,1265],measur:[1188,1199,1236,1247],mech:1219,mechan:[1219,1265],medic:1265,memori:[880,896,919,924,926,929,1107,1188,1198,1219],meshgrid:[283,421,667,954],messag:[1263,1264],meta:[35,1104,1105,1106,1219],method:[40,41,42,43,471,954,961,973,1014,1026,1027,1053,1060,1061,1107,1151,1152,1159,1160,1219,1236,1247,1248,1249,1262],might:[954,979,1265],min:[40,41,383,813,814,815,954,981,1015,1026,1027,1036,1107,1170,1174],min_bas:[954,1037],min_denomin:[954,1036],min_dev_dim_s:880,min_node_dim_s:1107,min_sf_tune_step:[880,1107],min_unit_dev_tune_step:880,min_unit_node_tune_step:1107,mind:1219,mini:[1205,1206,1250,1251],minimum:[40,41,667,880,930,934,954,957,960,961,968,994,995,1028,1029,1036,1037,1107,1170,1174],miss:[1252,1256],ml_framework:[817,823,832,833,954,957],mod:[954,988],mod_depth:[1248,1249],mod_height:[1248,1249],mod_with_top_mod_key_chain:[1248,1249],mode:[40,41,878,879,880,909,910,911,912,924,1076,1081,1107,1262],model:[1219,1261],modul:[40,41,42,59,954,1016,1107,1219,1220,1222,1223,1224,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1250,1251,1258,1259,1265],moment:[1053,1055,1056,1060,1252,1253,1254],more:[43,954,1038,1107,1219,1262,1265],more_util_node_str:1107,most:[40,41,43,1219,1265],move:[40,41,43,880,925,1107],much:[1219,1265],multi:[471,954,1016,1188,1199,1236,1247],multi_head_attent:1188,multi_index_nest:1151,multi_map:[40,41],multi_nod:1107,multidev:[880,891,892,893,912],multidevcontain:[40,41],multidevic:[880,889],multidevit:[880,883,886,889,890,894],multidevitem:[880,882,885],multidevnest:[880,884,887],multiheadattent:[1219,1236],multinod:[1107,1111],multinodecontain:1107,multinodeit:1107,multinodeitem:1107,multinodenest:1107,multinomi:[169,352,471,597,772,1163],multipl:[40,41,835,836,837,954,1011,1034,1076,1078,1170,1172,1173,1174,1175,1176,1178,1205,1206,1236,1246,1262],multipli:[40,41,954,976,1170,1175],multiprocess:[40,41,42,421,667,880,889,954,1107],must:[40,41,42,43,810,811,812,817,818,821,823,835,836,837,839,858,864,880,909,910,911,912,924,954,957,971,973,975,983,1013,1015,1027,1038,1086,1092,1095,1107,1163,1168,1252,1256],mutabl:[1151,1153,1160],mutlidevic:[880,889],mutlinod:1107,mw_tm1:[1053,1056,1060],mx_concat:1219,mxnet:[43,1219,1265],my_func:43,mymodel:1219,name:[878,879,1207,1208,1209,1213,1261],namespac:[43,1262],nan:[40,41,817,821,822,954,998,1049],nativ:[15,17,18,19,40,41,43,880,896,898,907,908,919,926,929,930,935,942,943,1107,1219,1220,1225,1226],native_modul:[1225,1226],native_module_class:[1225,1226],nativearrai:[15,18,19,43,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,839,858,864,880,898,924,925,930,934,940,945,946,954,955,956,957,959,960,961,962,963,965,967,968,969,970,971,972,974,975,976,977,980,981,982,983,985,986,987,988,989,991,992,996,998,999,1000,1007,1008,1009,1010,1012,1013,1014,1015,1018,1019,1020,1023,1024,1025,1026,1027,1032,1034,1035,1038,1040,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1107,1151,1153,1160],natur:[1086,1098,1265],ncdhw:[1188,1193,1194,1236,1241,1242],nchw:[1188,1191,1192,1195,1236,1239,1240,1243],ncw:[1188,1189,1190,1236,1237,1238],ndarrai:[43,380,381,382,383,385,386,471,954,1044],ndhwc:[1188,1193,1194,1236,1241,1242],nearest:[954,1025],need:[43,954,969,970,1188,1190,1192,1194,1219,1236,1238,1240,1242,1265],neg:[40,41,817,821,835,836,837,1170,1175,1177,1180,1182],negative_slop:1227,neither:1107,nest:[15,16,17,18,19,40,41,42,880,902,906,912,954,961,1043,1103,1104,1105,1107,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1248,1249,1252,1253,1254,1255,1256,1257],nested_indices_wher:1151,nested_map:[1107,1151],network:[1188,1197,1219,1220,1222,1236,1248,1249,1265],neural:[1188,1219,1222,1236,1261],new_node_percent_mem:1107,new_node_util:1107,new_node_utils_kei:1107,new_std:[1205,1206,1250,1251],newli:[878,879,954,965,966],newlin:[40,41,42],newshap:[954,965,1024],next:[813,814,1107,1248,1249,1252,1253,1254,1255,1256,1257],nhwc:[1188,1191,1192,1195,1236,1239,1240,1243],node:[40,41,1151,1152,1159],node_clon:1107,node_dist:1107,node_dist_arrai:1107,node_dist_it:1107,node_in:1107,node_mapp:1107,node_str:1107,node_to_str:1107,node_util:1107,nodedistit:1107,nodedistitem:1107,nodedistnest:1107,nodemanag:[1107,1118],nodemapp:1107,nodemappermultiproc:1107,noinspect:[43,881,931,932,933,1054,1107,1214],non:[40,41,835,836,837,878,879,930,944,1248,1249,1252,1256,1262],none:[40,41,42,43,59,61,64,380,381,382,419,421,422,425,427,434,435,436,437,438,445,446,447,448,449,450,451,452,453,455,465,466,471,472,810,811,812,813,814,815,817,823,826,827,832,833,835,836,837,878,879,880,889,890,896,897,922,923,924,925,930,937,938,939,954,957,961,978,979,984,986,990,991,992,997,999,1001,1002,1003,1004,1005,1009,1010,1016,1018,1019,1020,1023,1026,1027,1028,1029,1034,1035,1036,1037,1046,1047,1052,1053,1056,1058,1060,1061,1062,1068,1069,1073,1076,1079,1103,1104,1105,1106,1107,1151,1152,1155,1159,1160,1163,1164,1165,1166,1167,1170,1172,1173,1174,1175,1176,1177,1178,1188,1190,1192,1194,1197,1198,1199,1200,1205,1206,1207,1208,1209,1213,1217,1225,1226,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],norm:[40,41,826,827,954,969,970,1076,1079,1206,1219,1251,1252,1254],normal:[1163,1166,1205,1206,1250,1251],normalized_idx:[1205,1206],normalized_shap:[1250,1251],notat:[40,41,1170,1171],note:43,noth:[40,41,1262],notimplementederror:1107,now:[40,41,880,925,954,955,1107,1219,1236,1247,1248,1249,1261,1262,1265],np_concat:1219,np_finfo:383,ns_tune_step:1107,num:[421,445,446,954,1009,1010],num_arrai:[40,41],num_arrays_in_memori:954,num_arrays_on_dev:880,num_band:[954,989],num_channel:[1236,1243],num_chunk:1107,num_chunks_floor:1107,num_class:[1163,1164],num_cpu_cor:880,num_gpu:[116,419,880,1107],num_head:[1188,1199,1236,1247],num_kei:[1188,1199,1200],num_lay:[1236,1245],num_or_size_split:[40,41,421,451,954,1034],num_output:1107,num_queri:[1188,1199,1200],num_sampl:[421,444,471,472,954,1008,1069,1070,1163,1164],num_task:[1103,1104,1105,1106],number:[40,41,42,813,814,815,817,822,835,836,837,878,879,880,916,917,918,930,941,945,946,954,957,968,972,985,989,996,999,1008,1009,1010,1013,1017,1023,1034,1041,1045,1049,1051,1076,1081,1103,1104,1105,1106,1107,1163,1164,1168,1170,1172,1173,1174,1176,1178,1188,1199,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1262,1265],numer:[43,817,821,839,858,864,954,994,995,1028,1029,1036,1037,1086,1095,1227],numhead:[1188,1199],numpi:[40,41,380,381,382,383,385,386,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,954,1044,1076,1081,1170,1171,1219,1261,1262,1265],nwc:[1188,1189,1190,1236,1237,1238],obj:[40,41],object:[40,41,42,59,383,813,814,815,880,930,934,954,957,961,1053,1151,1154,1156,1157,1158,1161,1162,1163,1169,1213,1217,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249],object_in:[421,425,954,961],observ:1107,occupi:[813,814,815,954,1026,1027],off:[954,957],offer:1219,offset:[1205,1206],often:1262,old:[40,41],on_init:[1236,1247,1248,1249],onc:[880,924,1107,1163,1164,1219],one:[40,41,43,826,827,880,909,910,911,912,924,930,936,954,999,1011,1018,1026,1027,1035,1038,1076,1079,1107,1170,1171,1172,1173,1174,1175,1176,1177,1178,1219,1262,1265],one_hot:[123,421,543,667,954],onearrai:[954,985],ones:[40,41,77,201,380,496,619,810,954,999,1018,1020,1219],ones_lik:[123,283,421,543,667,954],ongo:43,onli:[40,41,43,471,880,1107,1151,1152,1153,1159,1252,1253,1254,1255,1256,1257,1261,1262],onlin:1219,onto:[880,909,910,925,1107,1151,1155,1160],oom:[880,1107],open:[954,957,1163,1167,1219,1265],opencv:1262,oper:[40,41,817,824,954,964,980,981,982,1009,1010,1039,1053,1056,1058,1060,1061,1062,1083,1084,1085,1188,1189,1190,1191,1192,1193,1194,1195,1197,1219,1220],operand:[40,41,1170,1171],oppos:[954,989],optim:[880,1053,1056,1058,1060,1061,1062,1103,1104,1105,1106,1107,1219,1253,1254,1255,1257,1261,1265],optimizer_upd:1053,option:[15,18,19,40,41,42,43,380,381,382,810,811,812,817,823,826,827,832,833,835,836,837,878,879,880,889,890,898,902,903,904,905,906,909,910,911,912,919,922,923,924,925,929,930,935,940,944,953,954,956,957,959,960,961,969,970,971,976,978,979,986,989,990,991,992,996,998,999,1006,1008,1009,1010,1011,1014,1016,1018,1019,1020,1023,1026,1027,1030,1032,1034,1035,1036,1037,1038,1046,1048,1049,1052,1053,1056,1058,1059,1060,1061,1062,1064,1069,1073,1076,1079,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1163,1164,1170,1172,1173,1174,1175,1176,1177,1178,1180,1181,1185,1188,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1262],ord:[954,986,1076,1081],order:[40,41,42,43,826,827,832,833,1053,1056,1058,1060,1061,1062,1076,1079,1103,1104,1105,1258,1259],ordered_node_util_kei:1107,org:1265,organ:43,origin:[40,41,42,826,827,954,1020,1024,1052,1076,1079],other:[40,41,43,839,841,842,847,849,850,854,856,857,858,859,860,862,864,865,866,867,868,869,871,872,873,875,876,877,878,879,954,956,957,999,1053,1057,1163,1167,1219,1261,1262,1265],other_i:[43,839,858,864],otherwis:[15,16,17,18,19,40,41,817,821,835,836,837,880,897,930,937,938,939,954,964,1046,1047,1050,1053,1059,1064,1068,1103,1104,1105,1107,1170,1172,1173,1174,1176,1178],our:[1219,1265],out:[471,839,858,954,957,1086,1091,1188,1196,1198,1219,1236,1244],out_feat_dim:[1188,1199],out_featur:[1188,1196,1197],out_i:[817,821],outdat:1265,outer:[1103,1104,1105,1106],outer_batch_fn:[1103,1104,1105],outer_batch_shap:[1188,1197],outer_cost_fn:[1103,1104,1105],outer_v:[1103,1104,1105],outlin:1262,output:[40,41,43,810,811,812,880,889,890,924,954,957,966,990,999,1023,1041,1053,1057,1086,1092,1107,1163,1165,1166,1167,1188,1190,1192,1194,1196,1198,1199,1200,1219,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247],output_ax:[880,924,1107],output_axi:1107,output_channel:[1236,1237,1238,1239,1240,1241,1242,1245,1246],output_connected_onli:[1207,1209,1213,1248,1249],output_queu:1107,output_shap:[1188,1190,1192,1194,1236,1238,1240,1242],outsid:[954,968],over:[40,41,826,827,835,836,837,954,986,1076,1079,1163,1167,1170,1172,1173,1174,1176,1178,1205,1206,1250,1251],overal:1262,overflow:[954,957],overhead:1262,overrid:[954,1018,1020,1052],overriden:[1252,1256],overwrit:[40,41,880,924,1107],overwrite_at_key_chain:[40,41],own:[1219,1262,1265],packag:[43,1262],pad:[954,972,989,1051,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],pad_width:[421,954,972,1051],page:1219,pair:[1188,1200],parallel:[880,889,890,1107],parallelis:[880,889,890,1107],param:[40,41,42,43,421,436,437,835,837,880,924,954,955,991,992,1018,1019,1107,1218,1219,1248,1249,1261],paramet:[15,16,17,18,19,40,41,42,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,839,858,864,878,879,880,889,890,896,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,919,922,923,924,925,926,929,930,934,935,936,940,941,942,943,944,945,946,953,954,956,957,959,960,961,962,963,964,965,966,967,968,969,970,971,972,974,975,976,977,979,980,981,982,983,984,985,986,987,988,989,990,991,992,996,998,999,1000,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1019,1020,1023,1024,1025,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1064,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261],parameter:[1163,1166,1167],params_all_empti:1213,pardo:1219,pars:[954,973],part:[1053,1056,1058,1060,1061,1062,1086,1091,1219,1248,1249,1262],partial:[40,41,1248,1249],particl:1265,particular:1265,pass:[40,41,42,880,889,924,930,935,954,966,1053,1067,1103,1104,1105,1107,1225,1226,1248,1249,1252,1256,1258,1259],pattern:[40,41,954,980,981,982],per:[880,1107,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],percent_used_mem_on_dev:880,percent_used_mem_on_nod:1107,percentag:[880,919,1107],perf_count:1107,perform:[40,41,43,832,833,835,836,837,880,954,959,960,976,980,981,982,1002,1003,1004,1008,1009,1010,1053,1056,1058,1060,1061,1062,1069,1070,1103,1104,1105,1106,1107,1151,1156,1157,1170,1172,1173,1174,1175,1176,1177,1178,1180,1185,1188,1196,1198],permissable_step:1107,permit:43,permut:[471,954,1040,1046],perpendicular:[954,975],person:1219,physci:1265,pickl:[40,41,1107],pickle_filepath:[40,41],pid:1213,pinv:[343,746,1076],pip:1219,pipelin:1261,pkk:1265,pkkm1:1265,pkm1km1:1265,place:[40,41,43,810,811,812,880,925,954,985,990,1002,1003,1004,1107,1252,1253,1254,1255,1256,1257],placehold:[1151,1160],pleas:471,point:[809,810,811,812,813,814,930,945,954,957,1086,1095],popul:[40,41,1163,1164],popular:1265,population_s:[471,472,1163,1164],portabl:[1219,1220],posit:[15,16,17,813,814,817,821,880,902,906,912,954,955,957,985,989,1107,1163,1168,1225,1226],possibi:[40,41],possibl:[954,1011,1043,1069,1074,1265],post:[1205,1206],post_shap:[40,41],power:[43,839,864,870,954,994,1028,1037,1227],practic:1219,pre:[880,1107,1219],pre_shap:[40,41],precis:[813,814],pred:[1201,1202,1203,1204],predict:[1201,1202,1203,1204,1265],preprint:1219,present:[40,41],preserv:[40,41,42,954,986,1053,1064],preserve_typ:[40,41,456,459,1053,1064],press:1219,prevent:[43,1053,1055,1056,1060,1107,1252,1253,1254],previou:[1053,1056,1060],previous:[954,966],prime:1219,print:[40,41,42,880,920,954,1021,1219,1261],print_all_arrays_in_memori:954,print_all_arrays_on_dev:880,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1252,1256],prob:[471,472,1163,1164,1188,1196,1236,1244],probabl:[1163,1164,1188,1196,1236,1244],problem:[43,1265],process:[43,880,889,890,919,929,954,1016,1107],process_specif:[880,919,929,1107],prod:[40,41,954,981],produc:[880,889,890,1107],product:[40,41,954,975,976,1012,1170,1171,1188,1199,1200,1236,1247],profil:[116,277,419,536,659,880,1107],project:[1219,1261,1262,1265],promot:[43,817,818,839,864,1086,1095],prompt:1219,properli:43,properti:[40,41,383,880,892,1107,1213,1217,1248,1249,1252,1253,1254,1255,1257],provid:[40,41,43,835,836,837,878,879,880,897,930,937,938,939,944,953,954,979,1018,1020,1027,1052,1053,1056,1058,1060,1061,1062,1068,1107,1219,1236,1245,1252,1253,1254,1255,1256,1257,1262],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1076,1080],ptype:[1213,1217],pure:[40,41,1219,1265],purpos:1265,put:1107,pybroadexcept:1107,pyprotectedmemb:[1107,1214],pyshadowingbuiltin:43,pyshadowingnam:[881,931,932,933,1054,1107],python:[40,41,880,919,929,954,957,1107,1219],pytorch:[1053,1056,1058,1060,1061,1062,1219,1252,1253,1254,1255,1256,1257,1261,1262,1265],pyunresolvedrefer:1107,quadrant:[1086,1092],queri:[40,41,839,853,874,880,913,923,1107,1188,1199,1200,1236,1247],query_dim:[1236,1247],query_kei:[40,41],queue:[40,41,42,880,889,890,954,1022,1030,1107],queue_class:[880,889,890,1107],queue_load_s:[40,41,42],queue_timeout:[40,41,42,954,1107],quick:[471,1219],quickli:1261,radian:[817,819,1086,1087,1089,1092,1099,1101],rai:[1086,1087],rais:[40,41,43,835,836,837,839,864,954,964,994,1028,1035,1037,1047,1107,1248,1249,1252,1256],ram:[880,919,926,929,1107],randint:[169,352,471,597,772,1163],random:[37,40,41,472,1164,1165,1166,1167,1168,1169,1219],random_crop:1069,random_norm:[169,352,471,597,772,1163],random_uniform:[169,352,471,597,772,1163],randomli:[471,1069,1073,1188,1196,1236,1244],randomness_factor:[1207,1209,1213,1248,1249],rang:[471,954,957,1009,1010,1086,1092,1107,1219,1261,1265],rank:[835,836,837,954,972,1048,1051],rate:[1053,1056,1058,1060,1061,1062,1103,1104,1105,1106,1236,1247,1252,1253,1254,1255,1256,1257],rather:[40,41,880,924,954,957,1006,1053,1059,1107],ratio:[880,1053,1060,1069,1074,1107,1252,1254],raw:[40,41],raw_delta:1107,reach:[880,902,906,912,1107,1151,1160],read:[40,41],readi:[1107,1261],real:[1086,1087,1091],realiti:1262,rearrang:[40,41,954,980,982],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1103,1105],receiv:[880,889,890,954,958,1011,1107,1236,1246],receivess:[880,1107],receiving_fn:1213,receivng:[1103,1106],recev:[1103,1104,1105],recognit:1265,recommend:1219,rectifi:[1180,1182,1183],recurr:[1188,1198],recurrent_bia:[1188,1198],recurrent_kernel:[1188,1198],recurs:[40,41,1151,1152,1153,1159,1160],redefin:43,reduc:[40,41,835,836,837,880,924,954,981,1107,1170,1172,1173,1174,1175,1176,1177,1178],reduce_max:[40,41,176,357,473,602,779,1170],reduce_mean:[40,41,176,357,473,602,779,1170,1219,1261],reduce_min:[40,41,176,357,473,602,779,1170],reduce_prod:[40,41,176,357,473,602,779,1170],reduce_std:[40,41,357,1170],reduce_sum:[40,41,176,357,473,602,779,1107,1170],reduce_var:[40,41,176,357,473,602,779,1170],reduct:[39,40,41,421,449,450,835,836,837,954,981,1026,1027,1171,1172,1173,1174,1175,1176,1177,1178,1219],refactor:43,refer:[835,836,837,1053,1055,1056,1076,1082,1236,1246,1265],reflected_oper:[0,13,14],regard:[880,1107],regardless:[40,41,878,879],register_paramet:1261,reimplement:1265,rel:[1053,1056,1058,1060,1061,1062],rel_slice_obj:1107,relev:[1252,1253,1254,1255,1256,1257],relu:[788,1180,1181,1182,1219,1261],remain:[43,954,1024,1151,1155],remaind:[40,41,954,988,1034],remov:[40,41,954,1035,1103,1104,1105],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,954,986],rep:[954,1041],repeat:[40,41,283,667,954,982,1041,1107,1262],repeated_config_check:[880,1107],repeatedli:[1151,1158],repetit:[40,41,954,1023,1041],replac:[40,41,43,471,472,954,968,1026,1027,1163,1164],repo:1219,repres:[43,930,936,941,1188,1197],represent:[40,41,42,43,809,813,814,815,817,818,880,907,908,930,936,942,943,954,1033,1043,1107],reptil:[1103,1106],reptile_step:1103,requir:[43,878,879,930,934,954,957,961,1225,1226],resampl:[954,1008],reshap:[40,41,43,471,667,954],reshape_lik:[40,41],respect:[817,818,823,839,858,954,983,1053,1055,1056,1057,1058,1060,1061,1062,1086,1095,1103,1104,1105,1106],respons:1107,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,817,818,821,823,824,826,827,835,836,837,839,858,864,880,889,954,957,983,1026,1027,1038,1076,1079,1083,1084,1085,1086,1095,1107,1170,1172,1173,1174,1175,1176,1177,1178,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1219],ret:1107,ret_dict:1107,ret_fn:[880,889,890,1107],retain:[1053,1057],retain_grad:[456,457,1053,1057],retreiv:1107,retrn:[954,1033],return_cont:[40,41],return_dict:[40,41],return_graph:[1207,1208,1209],return_inner_v:[1103,1104,1105,1106],return_sequ:[1236,1245],return_st:[1236,1245],rev:[954,979],revers:[40,41,954,979,986,1046],right:[40,41],rk_e:1265,robot:1219,ronald:1219,round:[283,421,667,954,957,1107],row:[954,999,1163,1164],rule:[43,817,818,839,864,954,957,1086,1095],run:[880,889,1053,1055,1056,1060,1103,1104,1105,1106,1107,1219,1220,1236,1247,1248,1249],safe:[880,889,1107],safety_factor:[880,1107],same:[15,16,17,40,41,43,880,889,890,924,925,930,934,954,955,967,971,987,988,991,992,1018,1020,1025,1026,1027,1038,1052,1053,1059,1064,1076,1081,1086,1091,1103,1104,1105,1107,1170,1171,1188,1189,1190,1191,1192,1193,1194,1195,1219,1236,1237,1238,1239,1240,1241,1242,1243,1261,1265],same_arrai:[40,41],sampl:[954,1008,1069,1070,1163,1164,1166,1167,1188,1196,1219,1236,1244],satisfi:[954,961,1076,1078,1082],save:[40,41,954,1031,1042,1069,1071,1248,1249],save_debug_info:1213,save_dir:[419,420,880,895,1107],save_to_disk:[1207,1209,1213,1248,1249],save_weight:[1248,1249],scalar:[954,968,1018,1045,1049],scale:[880,922,923,1053,1061,1107,1188,1196,1199,1200,1205,1206,1236,1244,1247,1252,1255],scaled_dot_product_attent:1188,scatter:[954,1018,1026,1027],scatter_flat:[123,283,421,543,667,954],scatter_nd:[123,283,421,543,667,954],scene:[1053,1056,1058,1060,1061,1062],schemat:1219,screen:[40,41],search:[15,18,19,40,41],second:[40,41,817,818,880,911,954,962,975,983,1022,1030,1040,1053,1055,1056,1060,1103,1105,1107,1252,1253,1254],secondli:1265,see:[43,59,383,419,420,471,817,818,835,836,837,839,858,864,880,892,893,894,895,930,954,957,1009,1010,1053,1086,1095,1213,1217,1219,1227,1229,1230,1232,1233,1235],seed:[40,41,169,471,772,1163],seed_valu:[40,41,471,1163,1168],seem:1219,seen_set:[954,997],select:[954,961,1035,1262,1265],self:[40,41,43,59,383,419,420,839,858,864,880,892,893,894,895,930,1053,1107,1213,1217,1219,1227,1229,1230,1232,1233,1235,1252,1256,1261,1265],self_i:[839,858],sent:1107,seper:[954,989],seq:[40,41,42,1170,1171,1248,1249],sequenc:[15,16,17,40,41,42,43,471,826,827,878,879,880,889,890,899,900,901,902,903,904,905,906,909,910,924,930,934,954,957,961,963,965,971,972,986,999,1011,1014,1019,1023,1024,1027,1034,1038,1041,1046,1051,1053,1057,1069,1073,1074,1076,1079,1107,1151,1162,1163,1165,1167,1170,1172,1173,1174,1175,1176,1177,1178,1188,1189,1190,1191,1192,1193,1194,1195,1205,1206,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1245,1248,1249,1250,1251,1252,1256,1258,1259],sequenti:1219,set:[15,18,19,40,41,826,827,880,909,910,922,923,924,954,956,978,999,1028,1029,1030,1031,1053,1056,1058,1059,1060,1061,1062,1076,1079,1107,1151,1152,1159,1161,1162,1163,1164,1168,1170,1172,1173,1174,1175,1176,1177,1178,1217,1219,1236,1245,1252,1253,1254,1255,1256,1257,1262,1265],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1217,set_debug_mod:44,set_default_devic:880,set_default_dtyp:930,set_default_float_dtyp:930,set_default_int_dtyp:930,set_default_nod:1107,set_exception_debug_mod:44,set_framework:[40,41,59,1107,1219,1261,1262,1265],set_ivy_backend:[40,41],set_min_bas:954,set_min_denomin:954,set_nest_at_index:1151,set_nest_at_indic:1151,set_param:1213,set_queue_timeout:954,set_split_factor:[880,1107],set_stat:[1252,1253,1254,1255,1256,1257],set_tmp_dir:954,set_with_grad:1053,setter:1107,sever:1265,sgd:[1219,1252],shape0:1107,shape:[40,41,43,380,381,382,421,435,450,471,667,810,811,812,880,892,930,934,954,955,965,967,971,972,985,986,987,988,990,992,996,999,1018,1019,1020,1023,1024,1025,1026,1027,1033,1035,1038,1051,1052,1069,1073,1076,1078,1086,1091,1092,1107,1163,1165,1166,1167,1170,1171,1188,1190,1192,1194,1213,1217,1236,1238,1239,1240,1241,1242,1243,1250,1251],shape_slic:[40,41],shape_to_tupl:954,share:[40,41,1219,1262],shift:1107,should:[40,41,42,43,471,817,818,821,839,858,864,878,879,880,954,965,966,973,1018,1024,1053,1056,1058,1060,1061,1062,1086,1095,1107,1170,1171,1219],show:[40,41,1213,1219,1265],show_debug_info:1213,show_graph:[1207,1219,1248,1249,1252,1256],show_mod_in_top_mod:[1248,1249],show_structur:[1248,1249],show_sub_contain:[40,41],show_v:[1248,1249],show_v_in_top_v:[1248,1249],shown:[40,41],shp:1107,shuffl:[40,41,169,471,772,1163],shuffle_h5_fil:[40,41],sigmoid:[788,1180,1219,1261],signatur:[43,59,383,419,420,421,456,461,465,468,469,471,880,892,893,894,895,930,1053,1213,1217,1227,1229,1230,1232,1233,1235],signific:1265,similar:[43,1188,1199,1236,1247],simpl:[43,954,984,1219,1262,1265],simplest:1262,simpli:[40,41,43,1219,1262,1265],simultan:1219,sin:[756,954,989,1086,1101,1262],sinco:1262,sine:[1086,1089,1090,1099,1100],singl:[40,41,878,879,880,889,890,909,910,911,912,954,1035,1045,1049,1069,1074,1107,1163,1166,1167,1170,1172,1173,1174,1175,1176,1177,1178,1219,1262,1265],singleton:[835,836,837],singular:[1076,1081],sinh:[756,1086],siren:[1219,1227],size:[40,41,42,421,449,826,827,880,903,904,905,906,922,923,924,954,957,965,1009,1010,1026,1034,1069,1073,1076,1079,1081,1107,1163,1164,1166,1167,1170,1172,1173,1174,1175,1176,1177,1178,1236,1237,1238],size_ordered_arrai:[40,41],skew:[1076,1082],skinv:1265,skip:[40,41],slice:[40,41,832,833,954,991,992,1107,1151,1158],slice_kei:[40,41],slice_obj:[40,41,1107],slice_via_kei:[40,41],slide:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],slope:[1180,1182],small:[1201,1202,1203,1204,1205,1206,1219,1250,1251,1262],smaller:[954,968],smallest:[40,41,813,814,815,954,960,967],smallest_norm:[383,813,814],softmax:[185,482,788,1180,1188,1199,1200],softplu:[788,1180],solv:1265,some:[40,41,43,954,957,1053,1055,1056,1058,1060,1061,1062,1067,1188,1196,1219,1236,1244,1262,1265],some_backend:43,some_namespac:43,someth:[43,1265],something_cool:43,somewher:[40,41],sort:[40,41,42,833,1076,1081,1107],sort_by_kei:[40,41],sorting_funct:[832,833],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,380,381,382,383,385,386,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,884,885,886,887,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1217,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1263,1264,1265],space:[954,957,989,1009,1010],spars:[1201,1204],sparse_cross_entropi:1201,spawn:[954,1016],specif:[40,41,43,880,922,954,973,980,981,982,1016,1103,1104,1105,1106,1107,1163,1169,1219,1248,1249,1261,1262],specifc:[1163,1164],specifi:[40,41,43,826,827,835,836,837,880,899,900,901,902,903,904,905,906,909,910,914,916,920,923,924,925,930,934,936,954,957,959,960,961,968,971,972,990,991,992,998,1009,1010,1038,1048,1051,1076,1079,1107,1151,1156,1157,1161,1162,1170,1171,1172,1173,1174,1175,1176,1177,1178],split:[40,41,123,283,421,543,667,880,889,903,904,905,906,922,923,924,954,1011,1107],split_arg:1107,split_factor:[880,889,1107],split_func_cal:[880,1107],split_siz:1107,spread:[880,912,1107],squar:[954,999,1076,1078],squeez:[123,283,421,543,667,954],stabil:[832,833,954,1036,1037],stabl:[832,833,954,994,995,1028,1029,1036,1037],stable_divid:954,stable_pow:954,stack:[40,41,283,667,954,1069,1074,1151,1152,1159,1236,1245],stack_imag:[160,339,461,587,742,1069],stacked_dim_s:1107,stage:43,standard:[40,41,43,813,814,1163,1166,1170,1176,1205,1206,1250,1251],start:[40,41,419,420,421,422,445,446,471,880,895,954,957,1009,1010,1107,1219,1262],starting_index:[40,41],starting_split_factor:[880,1107],state:[1107,1188,1198,1207,1208,1209,1213,1219,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261],statement:1262,static_argnam:[421,427,878,879],static_argnum:[421,427,878,879],std:[471,1163,1166],step:[40,41,421,422,880,954,957,1009,1010,1053,1055,1056,1058,1060,1061,1062,1103,1104,1105,1106,1107,1219,1252,1253,1254,1255,1256,1257,1261,1265],stephen:1219,stick:1219,still:[40,41],stochast:[1252,1257],stop:[40,41,419,420,421,422,445,446,880,895,924,954,957,1009,1010,1053,1056,1058,1060,1061,1062,1064,1103,1104,1105,1106,1107,1252,1253,1254,1255,1256,1257],stop_gradi:[40,41,334,456,582,736,880,924,1053,1056,1058,1060,1061,1062,1103,1104,1105,1106,1107,1252,1253,1254,1255,1256,1257],stopiter:1107,store:[40,41,954,989,1034,1053,1067,1248,1249],store_var:[1248,1249],str:[15,16,17,40,41,42,43,380,381,382,383,385,386,813,814,815,826,827,878,879,880,889,890,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,924,930,935,936,941,942,943,944,945,946,953,954,961,978,980,981,982,1014,1016,1019,1026,1027,1076,1079,1103,1104,1105,1106,1107,1151,1155,1170,1171,1225,1226,1236,1247,1248,1249],str_to_nod:1107,straight:1262,strength:[1219,1265],stride:[1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],string:[40,41,43,880,896,898,907,908,913,919,925,926,929,930,934,940,942,943,944,953,954,957,961,978,999,1019,1020,1052,1107,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243,1248,1249],structur:[40,41,42,43,954,973],structural_diff:[40,41],sub:[40,41,880,903,904,909,910,911,912,954,1034,1103,1104,1105,1106,1107],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1107,sub_mod:[1248,1249],sub_modul:[1258,1259],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1219,1220,1250,1251,1258,1259],subsequ:43,subset:43,substr:[40,41],suggest:1219,suitabl:[1069,1074],sum:[40,41,421,449,450,880,909,910,911,912,924,954,977,981,1026,1027,1107,1170,1171,1177],summat:[40,41,1170,1171],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,95,101,104,105,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,202,203,205,206,207,210,211,212,213,214,217,223,226,227,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,344,345,346,347,349,350,353,354,355,356,358,359,360,361,362,363,364,365,368,370,371,372,373,374,375,376,381,382,384,385,386,389,390,391,392,393,394,395,398,404,407,408,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,462,463,464,466,467,470,472,474,475,476,477,478,479,480,483,484,486,487,488,489,490,491,492,497,498,500,501,502,505,506,507,508,509,510,511,514,520,523,524,532,537,538,539,540,541,542,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,583,584,585,586,588,589,590,592,593,594,598,599,600,601,603,604,605,606,607,608,609,613,614,615,620,621,623,624,625,628,629,630,631,632,633,634,637,643,646,647,655,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,747,748,749,750,751,752,754,755,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,814,815,818,819,820,821,822,823,824,827,833,836,837,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1084,1085,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1206,1208,1209,1211,1212,1214,1218,1219,1223,1224,1226,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1264,1265],supports_inplac:954,suppos:1265,svd:[343,591,746,1076],swap:[40,41,954,1040],swapax:[40,41,543,667,954,1265],symmetr:[1076,1082],syntax:[419,421,456,461,465,468,469,471],tab:1219,take:[954,1008],taken:[1170,1172,1173,1174,1176,1178],tan:[756,1086,1091],tangent:[1086,1091,1092,1093,1101,1102,1180,1187],tanh:[756,788,1086,1180],target:[40,41,880,896,899,900,901,902,903,904,905,906,909,910,911,912,925,1107,1219],target_dict:[40,41],task:[1103,1104,1105,1106],team:1265,templat:1219,temporari:[954,1031,1042],tensor:[40,41,43,421,449,450,832,833,880,898,930,940,954,957,959,960,965,1009,1010,1013,1015,1018,1019,1020,1024,1026,1027,1034,1052,1107,1163,1164,1165,1188,1196,1198,1219,1236,1244,1246,1252,1253,1254,1255,1256,1257,1261,1262],tensorflow:[1188,1190,1192,1194,1219,1236,1238,1240,1242,1262,1265],term:[40,41,1188,1198,1219,1236,1246],termcolor:[40,41,42],termin:[40,41,42,1107],test:[817,821,835,836,837,930,945,946],tf_concat:1219,than:[40,41,813,814,880,924,954,957,967,968,987,1006,1013,1035,1038,1053,1059,1107,1163,1167,1219,1262],thei:[40,41,43,1086,1092,1103,1104,1105,1163,1164,1219,1258,1259,1262],them:[1219,1265],themselv:[1151,1152],therefor:43,thi:[40,41,42,43,826,827,880,902,906,912,919,924,929,954,957,989,1022,1024,1030,1053,1056,1058,1059,1060,1061,1062,1067,1076,1079,1107,1151,1155,1160,1170,1172,1173,1174,1175,1176,1177,1178,1188,1197,1219,1248,1249,1252,1253,1254,1255,1256,1257,1261,1262,1265],thing:[43,1219],those:[40,41,954,968,1053,1067,1076,1081,1107],though:43,threshold:[954,1013,1015],through:[40,41],tile:[283,543,667,954],time:[954,1041,1053,1056,1060,1103,1104,1105,1106,1107,1163,1164,1188,1198,1236,1247,1248,1249,1265],time_chronolog:[1207,1208,1213],time_infer:[1207,1208],timeout:[40,41,42,880,889,890,954,1022,1030,1107],timestep:[1188,1198,1236,1245],timing_fnam:[1207,1208],titl:1219,tmp_dir:954,tmp_dr:[954,1031],to_appli:[40,41],to_clon:[880,1107],to_dev:[40,41,116,277,419,536,659,880],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[880,1107],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1219],to_ivy_modul:[187,796,1219,1225],to_json:[40,41],to_kv_fn:[1188,1199],to_kv_v:[1188,1199],to_list:[40,41,421,667,954],to_multi_dev:[40,41],to_mut:[1151,1153,1160],to_n:[15,40,41,1219],to_nod:1107,to_numpi:[40,41,421,667,954,1219,1261],to_out_fn:[1188,1199],to_out_v:[1188,1199],to_q_fn:[1188,1199],to_q_v:[1188,1199],to_raw:[40,41],to_scalar:[421,667,954],todo:1107,togeth:[40,41,1258,1259],tool:[1219,1262],top_mod:[1248,1249],topic:1265,torch:[43,878,879,1219,1261,1262,1265],torch_concat:1219,torchfcmodel:1261,total:[40,41,42,880,926,1107],total_mem_on_dev:880,total_mem_on_nod:1107,tpu:[880,927,1107],tpu_is_avail:[419,536,659,880,1107],tpye:[930,941],trace:[40,41,954,1006],track:[880,1107,1151,1160,1248,1249],track_submod_call_ord:[1248,1249],track_submod_ret:[1248,1249],trail:[1250,1251],train:[1053,1055,1056,1060,1219,1220],trainabl:[1053,1059,1219,1220,1225,1226,1248,1249,1258],trainer:1219,tran:1265,transform:[1188,1196,1197],transpos:[40,41,123,283,421,667,880,911,954,1107,1188,1190,1192,1194,1236,1238,1240,1242],travers:[15,18,19,40,41,1151,1160],treat:[40,41,878,879],tree_depth:1217,tree_height:1213,tri:[40,41],trigonometr:[817,819,1086,1087,1091,1099],trim_kei:[40,41],trust:[1053,1060,1252,1254],truth:[817,823,824,839,858,954,983,1083,1084,1085],try_else_non:954,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[880,1107],tune_dev_alloc:880,tune_dev_split:880,tune_node_alloc:1107,tune_node_split:1107,tune_step:[880,1107],tupl:[15,16,17,18,19,40,41,43,380,381,382,810,811,812,826,827,835,836,837,878,879,954,972,989,990,1033,1051,1107,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1165,1170,1172,1173,1174,1175,1176,1177,1178],two:[40,41,954,957,962,975,1012,1040,1076,1079,1081],type:[15,18,40,41,42,43,59,385,386,419,420,810,811,812,814,815,817,818,821,823,835,836,837,839,858,864,880,892,893,894,895,907,908,912,924,930,934,935,936,940,941,942,943,944,945,946,953,954,955,957,961,967,971,973,983,987,988,990,999,1006,1018,1019,1020,1025,1039,1049,1052,1053,1059,1064,1086,1095,1107,1213,1217,1219,1227,1229,1230,1232,1233,1235,1248,1249,1262],types_to_iteratively_nest:[40,41,42],uint8:[1069,1071,1075],uint8_img_to_float_img:1069,unchang:[15,16,17,18,19],underli:[817,818],unif:1107,unifi:[40,41,880,909,910,911,912,924,1107,1219],uniform:[40,41,1163,1164,1166,1167,1227,1229,1230,1233,1234],uniformli:[1163,1165,1167],unify_arrai:1107,unify_it:1107,unify_nest:1107,union:[15,18,19,40,41,43,380,381,382,383,385,386,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,832,833,835,836,837,839,858,864,878,879,880,898,903,904,905,906,924,925,930,934,935,936,940,941,942,943,944,945,946,953,954,955,956,957,959,960,961,962,963,965,967,968,969,970,971,972,974,975,976,977,980,981,982,983,985,986,987,988,989,990,991,992,996,998,999,1000,1007,1008,1009,1010,1012,1013,1014,1015,1018,1019,1020,1023,1024,1025,1026,1027,1032,1033,1034,1035,1038,1040,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1107,1151,1152,1153,1159,1160],uniqu:[880,889,890,1103,1104,1105,1106,1107,1151,1155],unique_kwarg:1107,unit:[880,1086,1087,1089,1107,1180,1181,1182,1183],unitari:[1076,1081],unless:[954,1018,1020,1052],unlik:[880,1107],unnorm:[1163,1164],unpack:[954,1048],unrol:[1188,1198],unset:1262,unset_debug_mod:44,unset_default_devic:880,unset_default_dtyp:930,unset_default_float_dtyp:930,unset_default_int_dtyp:930,unset_framework:[59,1262],unset_with_grad:1053,unstack:[40,41,123,283,421,543,667,954],unus:[878,879],updat:[40,41,421,449,450,880,889,954,1004,1026,1027,1053,1055,1056,1058,1060,1061,1062,1103,1104,1105,1107,1151,1156,1157,1161,1162,1188,1198,1225,1226,1252,1253,1254,1255,1256,1257,1262,1265],update_backend:[40,41],update_config:[40,41],update_inference_tim:1213,upper:[40,41,1163,1167],upper_depth:[1248,1249],usabl:[1219,1265],usag:[880,924,1107],use:[40,41,42,43,471,880,889,890,915,927,954,1023,1036,1037,1107,1188,1199,1205,1206,1219,1250,1251,1262,1265],used:[40,41,43,471,880,889,919,922,923,929,930,941,954,994,995,1011,1020,1026,1027,1028,1029,1052,1053,1060,1061,1076,1079,1103,1104,1105,1106,1107,1151,1160,1236,1247,1252,1254,1255,1261,1262],used_dev:[880,889],used_mem_on_dev:880,used_mem_on_nod:1107,used_node_str:1107,used_node_strs_dict:1107,useful:[40,41,880,924,1107,1188,1197,1219,1262],user:[1219,1236,1247,1248,1249,1262,1265],uses:1219,using:[40,41,1053,1055,1056,1151,1154,1158,1170,1171,1188,1196,1200,1219,1236,1244,1261,1262,1265],util:[880,913,1107],utility_funct:[835,836,837],v_with_top_v_key_chain:[1248,1249],val:[40,41,421,440,441,442,839,874,954,1002,1003,1004,1028,1029,1217],valid:[835,836,837,930,935,954,1036,1037,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],valid_dtyp:930,valu:[40,41,421,817,822,823,824,832,833,839,858,880,892,923,924,954,955,957,959,960,968,969,970,972,973,979,983,989,990,991,992,1007,1009,1010,1013,1015,1022,1023,1024,1025,1026,1027,1028,1029,1030,1046,1049,1050,1051,1053,1057,1060,1069,1075,1076,1081,1083,1084,1085,1086,1096,1097,1098,1103,1104,1105,1107,1151,1155,1156,1157,1161,1162,1163,1166,1167,1170,1172,1174,1188,1199,1200,1205,1206,1213,1236,1247,1250,1251,1252,1254],value_is_nan:954,vanilla:[1103,1105],var_shap:1227,variabl:[15,16,17,18,19,40,41,334,456,582,736,954,964,1002,1003,1004,1005,1006,1039,1053,1056,1057,1058,1059,1060,1061,1062,1064,1067,1103,1104,1105,1106,1188,1199,1205,1206,1225,1226,1227,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],variable_data:[456,736,1053],varianc:[40,41,1170,1178,1265],varieti:1262,variou:[43,1219],vector:[40,41,465,467,826,827,954,970,975,1076,1081,1082,1188,1197,1236,1246],vector_norm:[40,41,94,216,397,513,636,826],vector_to_skew_symmetric_matrix:[164,343,465,591,746,1076],verbos:1264,veri:[43,1219],version:43,via:[1151,1152,1159,1262],view:[1069,1074],vision:1219,visual:1262,volum:[1188,1193],vw_tm1:[1053,1056,1060],wai:[1262,1265],wait:[40,41,42],want:[1219,1262,1265],warn:[59,66,67,68,69,70],warp:[461,462,1069,1070],watch:1261,weight:[1053,1055,1056,1058,1060,1061,1062,1188,1197,1198,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249,1252,1254,1255],weight_initi:[1236,1237,1238,1239,1240,1241,1242,1243,1245,1246],weights_path:[1248,1249],well:[40,41,954,998],were:[40,41,1107],what:1219,when:[40,41,42,43,880,954,966,1037,1050,1076,1081,1107,1219,1248,1249,1262,1265],where:[40,41,43,283,421,667,817,822,835,836,837,839,864,954,957,965,968,972,985,1000,1007,1018,1051,1076,1081,1151,1152,1159,1163,1164],wherea:43,wherebi:[1151,1160],whether:[15,18,19,40,41,42,835,836,837,878,879,880,898,911,915,919,924,927,929,930,940,944,945,946,953,954,956,962,963,976,979,984,989,996,998,1001,1005,1006,1011,1032,1039,1048,1049,1053,1056,1057,1058,1059,1060,1061,1062,1064,1103,1104,1105,1106,1107,1151,1152,1153,1155,1159,1160,1163,1164,1180,1181,1188,1196,1219,1225,1226,1236,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257],which:[40,41,42,43,471,810,811,812,813,814,815,826,827,835,836,837,878,879,880,889,890,898,903,904,905,906,909,910,911,912,914,916,920,922,923,924,930,935,940,944,953,954,957,961,971,973,975,976,977,979,986,990,991,992,993,999,1000,1008,1009,1010,1017,1018,1019,1020,1021,1023,1026,1027,1034,1038,1048,1050,1052,1053,1056,1057,1058,1060,1061,1062,1064,1066,1067,1069,1071,1076,1079,1086,1092,1107,1151,1155,1156,1157,1161,1162,1163,1164,1165,1166,1167,1170,1172,1173,1174,1175,1176,1177,1178,1180,1185,1188,1199,1200,1219,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1261,1262],whitespac:[40,41,42],whose:[43,839,864,954,961,966,1170,1171,1172,1173,1174,1176,1178],why:[1219,1220],width:[1069,1074],wiki:1265,wikipedia:1265,window:[1069,1074,1188,1189,1190,1191,1192,1193,1194,1195,1236,1237,1238,1239,1240,1241,1242,1243],wise:[40,41,43,817,818,819,823,824,839,858,864,954,967,968,983,987,988,1013,1015,1025,1053,1056,1058,1060,1062,1083,1084,1085,1086,1087,1089,1091,1092,1095,1096,1097,1098,1099,1101,1180,1181,1182,1183,1184,1185,1186,1187],wish:1262,with_arg_label:[1207,1209,1213,1248,1249],with_array_cach:[1207,1208,1209,1213],with_bia:[1236,1246],with_cal:[954,979],with_default_key_color:[40,41],with_edge_label:[1207,1209,1213,1248,1249],with_entries_as_list:[40,41],with_grad:[1053,1063,1248,1249],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1107,with_output_label:[1207,1209,1213,1248,1249],with_partial_v:[1248,1249],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,421,451,954,1034,1107],with_to_kv_fn:[1236,1247],with_to_out_fn:[1236,1247],with_to_q_fn:[1236,1247],within:[15,18,19,954,957,1076,1081,1163,1167],without:[40,41,43,954,1022,1024,1030,1151,1153,1262],wonder:1219,word:[15,16,17,954,957,1163,1167,1225,1226],work:[43,1261],worker:[880,889,890,1107],worker_class:[880,889,890,1107],worker_kwarg:1107,would:[43,832,833,1180,1185,1219,1262,1265],wrap:[15,40,41,42,43,419,421,456,461,465,468,469,471,954,966,1053,1067,1219],wrapper:43,write:[40,41,43,1219,1220,1265],written:[43,1219,1265],ws_new:[1053,1056,1058,1060,1061,1062],x1_i:[817,818,823,954,983,1086,1095],x2_i:[817,818,823,954,983,1086,1095],x_feat_dim:[1188,1199],x_i:[817,821],x_in:[1219,1261],x_inv:[1076,1078],x_max:[421,954,968],x_min:[421,954,968],x_sub:1107,xkk:1265,xkkm1:1265,xkm1km1:1265,xs0:1107,xs_t:1107,year:[1219,1265],yet:[1151,1160,1265],yield:[954,1050],you:[1219,1261,1262,1265],your:[1219,1261,1262,1265],your_awesome_project:1262,yourself:1219,zero:[40,41,77,201,380,496,619,810,835,836,837,954,972,1018,1020,1026,1027,1051,1052,1053,1055,1056,1060,1061,1188,1196,1219,1227,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1252,1253,1254,1255],zero_pad:[283,421,543,667,954],zeros_lik:[123,283,421,543,667,954],zip:1107,zk_e:1265},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":979,"function":[77,80,85,93,96,97,98,99,100,102,103,201,204,209,215,218,219,220,221,222,224,225,380,383,388,396,399,400,401,402,403,405,406,496,499,504,512,515,516,517,518,519,521,522,619,622,627,635,638,639,640,641,642,644,645,810,813,817,825,828,829,830,831,832,834,835],Ones:1232,Using:1262,abs:[284,544,668,955],aco:[757,1087],acosh:[758,1088],activ:[185,367,482,611,788,1180,1222],adam:1253,adam_step:1055,adam_upd:1056,algebra:[94,96,216,218,397,399,513,515,636,638,826,828],all:[104,226,407,523,646,836],all_equ:956,all_nested_indic:1152,ani:[105,227,408,524,647,837],api:[0,43,75,107,199,229,378,410,494,526,617,649,808],arang:[124,285,422,545,669,957],arg_nam:958,argmax:[125,423,546,670,959],argmin:[126,424,547,671,960],args_to_ivi:16,args_to_n:17,argsort:[101,223,404,520,643,833],arithmet:[1,108,230,411,527,650],arrai:[0,3,43,75,106,107,109,127,199,228,229,231,238,286,378,409,410,412,425,494,525,526,528,548,617,648,649,651,672,808,839,961],array_equ:[287,673,962],arrays_equ:963,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[759,1089],asinh:[760,1090],assert_supports_inplac:964,atan2:[762,1092],atan:[761,1091],atanh:[763,1093],attribut:[5,110,232,413,529,652],backend:[43,73],bilinear_resampl:[161,340,462,588,743,1070],binary_cross_entropi:1202,bitwis:[7,111,233,414,530,653],bitwise_and:[86,210,389,505,628,818],broadcast_to:[288,674,965],builder:51,builtin:[106,228,238,409,525,648,839],builtin_ab:[239,840],builtin_add:[240,841],builtin_and:[241,842],builtin_bool:[242,843],builtin_contain:[243,844],builtin_deepcopi:[244,845],builtin_dir:[245,846],builtin_eq:[246,847],builtin_float:[247,848],builtin_floordiv:[248,849],builtin_g:[249,850],builtin_getattr:[250,851],builtin_getattribut:[251,852],builtin_getitem:[252,853],builtin_gt:[253,854],builtin_int:[254,855],builtin_invert:[255,856],builtin_l:[256,857],builtin_lt:[257,532,655,858],builtin_mul:[258,859],builtin_n:[259,860],builtin_neg:[260,861],builtin_or:[261,862],builtin_po:[262,863],builtin_pow:[263,864],builtin_radd:[264,865],builtin_rand:[265,866],builtin_rfloordiv:[266,867],builtin_rmul:[267,868],builtin_ror:[268,869],builtin_rpow:[269,870],builtin_rsub:[270,871],builtin_rtruediv:[271,872],builtin_rxor:[272,873],builtin_setitem:[273,874],builtin_sub:[274,875],builtin_truediv:[275,876],builtin_xor:[276,877],cache_fn:966,cast:[128,289,426,549,675,934],ceil:[290,676,967],choleski:[747,1077],choose_random_framework:61,citat:1219,clear_framework_stack:62,clear_mem_on_dev:[661,896],clip:[291,677,968],clip_matrix_norm:969,clip_vector_norm:970,clone:1122,clone_arrai:1123,clone_it:1124,clone_nest:1125,clonedit:1109,cloneditem:1108,clonednest:1110,closest_valid_dtyp:935,code:1265,comparison:[9,112,234,415,531,654],compil:[292,427,678,878,879,1207],compile_graph:1208,concaten:[129,293,428,550,679,971],constant:[76,200,379,495,618,809],constant_pad:[294,551,680,972],contain:[40,41],container_typ:[681,973],content:1219,contribut:43,conv1d:[191,370,486,800,1189,1237],conv1d_transpos:[192,371,487,801,1190],conv1dtranspos:1238,conv2d:[193,372,488,613,802,1191,1239],conv2d_transpos:[194,373,489,803,1192],conv2dtranspos:1240,conv3d:[195,374,490,614,804,1193,1241],conv3d_transpos:[196,375,491,805,1194],conv3dtranspos:1242,convers:15,convert:[187,796,1225],convert_dtyp:936,copy_arrai:[682,974],copy_nest:1153,core:[115,237,418,535,658,838],cos:[87,390,506,629,819],cosh:[88,391,507,630,764,820,1094],cprint:1264,creation:[77,201,380,496,619,810],cross:[295,683,975],cross_entropi:1203,cumprod:[130,296,429,684,976],cumsum:[685,977],current_framework:63,current_framework_str:[686,978],data:[80,84,204,208,383,387,499,503,622,626,813,816],debug_mod:45,debugg:44,default_devic:897,default_dtyp:937,default_float_dtyp:938,default_int_dtyp:939,default_nod:1126,depthwise_conv2d:[197,376,492,615,806,1195],depthwiseconv2d:1243,design:43,dev:[118,279,538,662,898],dev_clon:899,dev_clone_arrai:900,dev_clone_it:901,dev_clone_nest:902,dev_dist:903,dev_dist_arrai:904,dev_dist_it:905,dev_dist_nest:906,dev_from_str:[119,280,539,663,907],dev_to_str:[120,281,540,664,908],dev_unifi:909,dev_unify_arrai:910,dev_unify_it:911,dev_unify_nest:912,dev_util:913,devclonedit:883,devcloneditem:882,devclonednest:884,devdistit:886,devdistitem:885,devdistnest:887,devic:[20,116,277,419,536,659,880],devmapp:889,devmappermultiproc:890,distribute_nest:1127,divid:1095,document:1219,dropout:[1196,1244],dtype:[131,297,430,552,687,930,940],dtype_bit:[132,298,431,553,688,941],dtype_from_str:[133,299,432,554,689,942],dtype_to_str:[134,300,433,555,690,943],ecosystem:52,einops_rearrang:980,einops_reduc:981,einops_repeat:982,einsum:[177,358,474,603,780,1171],elementwis:[85,209,388,504,627,817],equal:[556,691,983],erf:[470,765,1096],execute_with_gradi:[158,335,457,583,737,1057],exist:984,exp:[766,1097],expand_dim:[301,692,985],extens:[94,216,397,513,636,826],finfo:[82,206,385,501,624,814],firstlayersiren:1229,flip:[135,302,434,557,693,986],float_img_to_uint8_img:1071,floor:[303,694,987],floormod:[304,695,988],fomaml_step:1104,fourier_encod:989,framework:59,full:[136,305,435,558,696,990],func:72,gather:[137,306,436,559,697,991],gather_nd:[138,307,437,560,698,992],geglu:1223,gelu:[368,483,789,1181,1224],gener:[22,123,283,421,543,667,954],get_all_arrays_in_memori:993,get_all_arrays_on_dev:914,get_framework:64,get_min_bas:994,get_min_denomin:995,get_num_dim:[699,996],get_referrers_recurs:997,global:1210,glorotuniform:1230,gpu_is_avail:[915,1128],gradient:[24,157,334,456,582,736,1053],gradient_descent_upd:1058,gradient_imag:[162,341,463,589,744,1072],graph:1213,gym:53,handler:59,has_nan:998,helper:1215,ident:[139,308,438,561,700,999],iinfo:[83,207,386,502,625,815],imag:[26,160,339,461,587,742,1069],index_nest:1154,indices_wher:[140,309,439,701,1000],initi:1227,inplac:[11,113,235,416,533,656],inplace_arrays_support:1001,inplace_decr:[141,310,440,562,702,1002],inplace_incr:[142,311,441,563,703,1003],inplace_upd:[143,312,442,564,704,1004],inplace_variables_support:1005,inv:[748,1078],invalid_dtyp:944,is_arrai:[144,313,443,565,705,1006],is_float_dtyp:945,is_int_dtyp:946,is_vari:[159,336,458,584,738,1059],isfinit:[89,211,392,508,631,821],isinf:[314,566,706,1007],isnan:[90,212,393,509,632,822],ivi:[43,50,51,52,53,54,55,56,57,58,807,1261,1262,1265],ivymodul:[188,797],jax:74,lamb:1254,lamb_upd:1060,lar:1255,lars_upd:1061,layer:[190,369,485,612,799,1188,1236],layer_norm:1206,layernorm:1251,leaky_relu:[790,1182],less:[91,213,394,510,633,823],linalg:[28,164,343,465,591,746,1076],linear:[94,96,216,218,397,399,513,515,636,638,826,828,1197,1246],linear_resampl:[145,315,444,567,707,1008],linspac:[146,316,445,568,708,1009],log:[767,1098,1216],log_global_inference_abs_tim:1211,log_global_inference_rel_tim:1212,logic:[30,167,348,468,595,753,1083],logical_and:[349,754,1084],logical_not:[92,214,395,511,634,824],logical_or:[350,755,1085],logspac:[147,317,446,569,709,1010],loss:1201,lstm:1245,lstm_updat:1198,maml_step:1105,manipul:[97,219,400,516,639,829],map:1155,map_nest_at_index:1156,map_nest_at_indic:1157,match_kwarg:1011,math:[32,168,351,469,596,756,1086],matmul:[318,570,710,1012],matrix_norm:[165,344,466,592,749,1079],maximum:[711,1013],mech:54,memori:55,meshgrid:[319,712,1014],meta:[34,1103],method:[93,215,396,512,635,825],minimum:[713,1015],model:56,modul:[1248,1249,1261],multi:1107,multi_head_attent:1199,multi_index_nest:1158,multidevcontain:42,multidevit:893,multidevitem:892,multidevnest:894,multiheadattent:1247,multinodeit:1113,multinodeitem:1112,multinodenest:1114,multinomi:[170,353,472,598,773,1164],multiprocess:[714,1016],mxnet:198,nativ:1261,nest:1151,nested_indices_wher:1159,nested_map:1160,network:1261,next:1219,node:[1107,1129],node_dist:1130,node_dist_arrai:1131,node_dist_it:1132,node_str:1133,node_to_str:1134,node_util:1135,nodedistit:1116,nodedistitem:1115,nodedistnest:1117,nodemapp:1119,nodemappermultiproc:1120,norm:[1205,1250],num_arrays_in_memori:1017,num_arrays_on_dev:916,num_cpu_cor:917,num_gpu:[121,918,1136],numpi:377,nutshel:1219,one_hot:[148,447,571,715,1018],ones:[78,202,381,497,620,811,1019],ones_lik:[149,320,448,572,716,1020],oper:[1,3,7,9,11,13,43,108,109,111,112,113,114,230,231,233,234,235,236,411,412,414,415,416,417,527,528,530,531,533,534,650,651,653,654,656,657],optim:[1252,1256],optimizer_upd:1062,overview:1219,param:1217,percent_used_mem_on_dev:919,percent_used_mem_on_nod:1137,pinv:[345,750,1080],portabl:1265,print_all_arrays_in_memori:1021,print_all_arrays_on_dev:920,profil:[117,278,420,537,660,895,1121],queue_timeout:1022,randint:[171,354,599,774,1165],random:[36,169,352,471,597,772,1163],random_crop:1073,random_norm:[172,355,600,775,1166],random_uniform:[173,356,601,776,1167],reduce_max:[178,359,475,604,781,1172],reduce_mean:[179,360,476,605,782,1173],reduce_min:[180,361,477,606,783,1174],reduce_prod:[181,362,478,607,784,1175],reduce_std:[363,1176],reduce_sum:[182,364,479,608,785,1177],reduce_var:[183,365,480,609,786,1178],reduct:[38,176,357,473,602,779,1170],reflect:[13,114,236,417,534,657],relu:[791,1183],repeat:[321,717,1023],reptile_step:1106,reshap:[718,1024],robot:57,round:[322,719,1025],run:1262,scaled_dot_product_attent:1200,scatter_flat:[150,323,449,573,720,1026],scatter_nd:[151,324,450,574,721,1027],search:[98,220,401,517,640,830],seed:[174,777,1168],sequenti:[1258,1259],set:[99,221,402,518,641,831],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:921,set_default_dtyp:947,set_default_float_dtyp:948,set_default_int_dtyp:949,set_default_nod:1138,set_exception_debug_mod:48,set_framework:65,set_min_bas:1028,set_min_denomin:1029,set_nest_at_index:1161,set_nest_at_indic:1162,set_queue_timeout:1030,set_split_factor:[922,1139],set_tmp_dir:1031,set_with_grad:1063,sgd:1257,shape:[722,1032],shape_to_tupl:1033,show_graph:1209,shuffl:[175,778,1169],sigmoid:[792,1184],signatur:[93,215,396,512,635,825],sin:[768,1099],sinh:[769,1100],siren:1233,softmax:[186,484,793,1185],softplu:[794,1186],sort:[100,222,403,519,642,832],sparse_cross_entropi:1204,split:[152,325,451,575,723,1034],split_factor:[923,1140],split_func_cal:[924,1141],squeez:[153,326,452,576,724,1035],stable_divid:1036,stable_pow:1037,stack:[327,725,1038],stack_imag:[163,342,464,590,745,1074],statist:[102,224,405,521,644,834],stop_gradi:[337,459,585,739,1064],str_to_nod:1142,submodul:43,supports_inplac:1039,svd:[346,593,751,1081],swapax:[577,726,1040],tan:[770,1101],tanh:[771,795,1102,1187],tensorflow:493,tile:[328,578,727,1041],tmp_dir:1042,to_dev:[122,282,541,665,925],to_ivi:18,to_ivy_modul:[189,798,1226],to_list:[728,1043],to_n:19,to_nod:1143,to_numpi:[729,1044],to_scalar:[730,1045],torch:616,total_mem_on_dev:926,total_mem_on_nod:1144,tpu_is_avail:[542,666,927,1145],train:1261,trainabl:1261,transpos:[154,329,453,731,1046],tree:1219,try_else_non:1047,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,204,208,383,387,499,503,622,626,813,816],uint8_img_to_float_img:1075,unifi:1146,unify_arrai:1147,unify_it:1148,unify_nest:1149,unset_debug_mod:49,unset_default_devic:928,unset_default_dtyp:950,unset_default_float_dtyp:951,unset_default_int_dtyp:952,unset_framework:71,unset_with_grad:1065,unstack:[155,330,454,579,732,1048],used_mem_on_dev:929,used_mem_on_nod:1150,util:[103,225,406,522,645,835],valid_dtyp:953,value_is_nan:1049,variabl:[338,460,586,740,1066],variable_data:[741,1067],vector_norm:[95,217,398,514,637,827],vector_to_skew_symmetric_matrix:[166,347,467,594,752,1082],verbos:1263,vision:58,where:[331,733,1050,1219],why:1265,with_grad:1068,wrapper:72,write:1262,zero:[79,203,382,498,621,812,1235],zero_pad:[332,580,734,1051],zeros_lik:[156,333,455,581,735,1052]}})