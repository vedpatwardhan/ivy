Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/extra","array/extra/conversions","array/extra/conversions/args_to_ivy","array/extra/conversions/args_to_native","array/extra/conversions/to_ivy","array/extra/conversions/to_native","array/extra/device","array/extra/device/ArrayWithDevice","array/extra/general","array/extra/general/ArrayWithGeneral","array/extra/gradients","array/extra/gradients/ArrayWithGradients","array/extra/image","array/extra/image/ArrayWithImage","array/extra/linalg","array/extra/linalg/ArrayWithLinalg","array/extra/logic","array/extra/logic/ArrayWithLogic","array/extra/math","array/extra/math/ArrayWithMath","array/extra/meta","array/extra/meta/ArrayWithMeta","array/extra/random","array/extra/random/ArrayWithRandom","array/extra/reductions","array/extra/reductions/ArrayWithReductions","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","array/standard","array/standard/arithmetic_operators","array/standard/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/standard/array_operators","array/standard/array_operators/ArrayWithArrayAPIArrayOperators","array/standard/attributes","array/standard/attributes/ArrayWithArrayAPIAttributes","array/standard/bitwise_operators","array/standard/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/standard/comparison_operators","array/standard/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/standard/inplace_operators","array/standard/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/standard/reflected_operators","array/standard/reflected_operators/ArrayWithArrayAPIReflectedOperators","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional","functional/backends","functional/backends/jax","functional/backends/jax/extra","functional/backends/jax/extra/device","functional/backends/jax/extra/device/Profiler","functional/backends/jax/extra/device/dev","functional/backends/jax/extra/device/dev_from_str","functional/backends/jax/extra/device/dev_to_str","functional/backends/jax/extra/device/num_gpus","functional/backends/jax/extra/device/to_dev","functional/backends/jax/extra/general","functional/backends/jax/extra/general/arange","functional/backends/jax/extra/general/argmin","functional/backends/jax/extra/general/array","functional/backends/jax/extra/general/cast","functional/backends/jax/extra/general/concatenate","functional/backends/jax/extra/general/cumprod","functional/backends/jax/extra/general/dtype","functional/backends/jax/extra/general/dtype_bits","functional/backends/jax/extra/general/dtype_from_str","functional/backends/jax/extra/general/dtype_to_str","functional/backends/jax/extra/general/full","functional/backends/jax/extra/general/gather","functional/backends/jax/extra/general/gather_nd","functional/backends/jax/extra/general/identity","functional/backends/jax/extra/general/indices_where","functional/backends/jax/extra/general/inplace_decrement","functional/backends/jax/extra/general/inplace_increment","functional/backends/jax/extra/general/inplace_update","functional/backends/jax/extra/general/is_array","functional/backends/jax/extra/general/linear_resample","functional/backends/jax/extra/general/linspace","functional/backends/jax/extra/general/logspace","functional/backends/jax/extra/general/one_hot","functional/backends/jax/extra/general/scatter_flat","functional/backends/jax/extra/general/scatter_nd","functional/backends/jax/extra/general/split","functional/backends/jax/extra/general/squeeze","functional/backends/jax/extra/general/transpose","functional/backends/jax/extra/general/unstack","functional/backends/jax/extra/general/zeros_like","functional/backends/jax/extra/gradients","functional/backends/jax/extra/gradients/execute_with_gradients","functional/backends/jax/extra/gradients/is_variable","functional/backends/jax/extra/image","functional/backends/jax/extra/image/bilinear_resample","functional/backends/jax/extra/image/gradient_image","functional/backends/jax/extra/image/stack_images","functional/backends/jax/extra/linear_algebra","functional/backends/jax/extra/linear_algebra/matrix_norm","functional/backends/jax/extra/linear_algebra/qr","functional/backends/jax/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/extra/logic","functional/backends/jax/extra/math","functional/backends/jax/extra/random","functional/backends/jax/extra/random/multinomial","functional/backends/jax/extra/random/randint","functional/backends/jax/extra/random/random_normal","functional/backends/jax/extra/random/random_uniform","functional/backends/jax/extra/random/seed","functional/backends/jax/extra/random/shuffle","functional/backends/jax/extra/reductions","functional/backends/jax/extra/reductions/einsum","functional/backends/jax/extra/reductions/reduce_max","functional/backends/jax/extra/reductions/reduce_mean","functional/backends/jax/extra/reductions/reduce_min","functional/backends/jax/extra/reductions/reduce_prod","functional/backends/jax/extra/reductions/reduce_sum","functional/backends/jax/extra/reductions/reduce_var","functional/backends/jax/neural_net","functional/backends/jax/neural_net/activations","functional/backends/jax/neural_net/activations/softmax","functional/backends/jax/neural_net/converters","functional/backends/jax/neural_net/converters/IvyModule","functional/backends/jax/neural_net/converters/to_ivy_module","functional/backends/jax/neural_net/layers","functional/backends/jax/neural_net/layers/conv1d","functional/backends/jax/neural_net/layers/conv1d_transpose","functional/backends/jax/neural_net/layers/conv2d","functional/backends/jax/neural_net/layers/conv2d_transpose","functional/backends/jax/neural_net/layers/conv3d","functional/backends/jax/neural_net/layers/conv3d_transpose","functional/backends/jax/neural_net/layers/depthwise_conv2d","functional/backends/jax/standard","functional/backends/jax/standard/constants","functional/backends/jax/standard/creation_functions","functional/backends/jax/standard/creation_functions/empty","functional/backends/jax/standard/creation_functions/ones","functional/backends/jax/standard/creation_functions/ones_like","functional/backends/jax/standard/creation_functions/tril","functional/backends/jax/standard/creation_functions/zeros","functional/backends/jax/standard/data_type_functions","functional/backends/jax/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/standard/data_type_functions/finfo","functional/backends/jax/standard/data_type_functions/iinfo","functional/backends/jax/standard/data_types","functional/backends/jax/standard/elementwise_functions","functional/backends/jax/standard/elementwise_functions/acosh","functional/backends/jax/standard/elementwise_functions/asinh","functional/backends/jax/standard/elementwise_functions/bitwise_and","functional/backends/jax/standard/elementwise_functions/ceil","functional/backends/jax/standard/elementwise_functions/cos","functional/backends/jax/standard/elementwise_functions/cosh","functional/backends/jax/standard/elementwise_functions/equal","functional/backends/jax/standard/elementwise_functions/isfinite","functional/backends/jax/standard/elementwise_functions/isnan","functional/backends/jax/standard/elementwise_functions/less","functional/backends/jax/standard/elementwise_functions/less_equal","functional/backends/jax/standard/elementwise_functions/log10","functional/backends/jax/standard/elementwise_functions/log1p","functional/backends/jax/standard/elementwise_functions/log2","functional/backends/jax/standard/elementwise_functions/logical_not","functional/backends/jax/standard/elementwise_functions/logical_or","functional/backends/jax/standard/elementwise_functions/negative","functional/backends/jax/standard/elementwise_functions/sin","functional/backends/jax/standard/elementwise_functions/sinh","functional/backends/jax/standard/elementwise_functions/sqrt","functional/backends/jax/standard/elementwise_functions/tanh","functional/backends/jax/standard/function_and_method_signatures","functional/backends/jax/standard/linear_algebra","functional/backends/jax/standard/linear_algebra/diagonal","functional/backends/jax/standard/linear_algebra/matmul","functional/backends/jax/standard/linear_algebra/slogdet","functional/backends/jax/standard/linear_algebra/svd","functional/backends/jax/standard/linear_algebra/vector_norm","functional/backends/jax/standard/manipulation_functions","functional/backends/jax/standard/manipulation_functions/flip","functional/backends/jax/standard/searching_functions","functional/backends/jax/standard/searching_functions/argmax","functional/backends/jax/standard/set_functions","functional/backends/jax/standard/sorting_functions","functional/backends/jax/standard/sorting_functions/argsort","functional/backends/jax/standard/statistical_functions","functional/backends/jax/standard/statistical_functions/min","functional/backends/jax/standard/utility_functions","functional/backends/jax/standard/utility_functions/all","functional/backends/jax/standard/utility_functions/any","functional/backends/mxnet","functional/backends/mxnet/extra","functional/backends/mxnet/extra/device","functional/backends/mxnet/extra/device/Profiler","functional/backends/mxnet/extra/device/dev","functional/backends/mxnet/extra/device/dev_from_str","functional/backends/mxnet/extra/device/dev_to_str","functional/backends/mxnet/extra/device/to_dev","functional/backends/mxnet/extra/general","functional/backends/mxnet/extra/general/abs","functional/backends/mxnet/extra/general/arange","functional/backends/mxnet/extra/general/array","functional/backends/mxnet/extra/general/array_equal","functional/backends/mxnet/extra/general/broadcast_to","functional/backends/mxnet/extra/general/cast","functional/backends/mxnet/extra/general/clip","functional/backends/mxnet/extra/general/compile","functional/backends/mxnet/extra/general/concatenate","functional/backends/mxnet/extra/general/constant_pad","functional/backends/mxnet/extra/general/cross","functional/backends/mxnet/extra/general/cumprod","functional/backends/mxnet/extra/general/dtype","functional/backends/mxnet/extra/general/dtype_bits","functional/backends/mxnet/extra/general/dtype_from_str","functional/backends/mxnet/extra/general/dtype_to_str","functional/backends/mxnet/extra/general/expand_dims","functional/backends/mxnet/extra/general/floor","functional/backends/mxnet/extra/general/floormod","functional/backends/mxnet/extra/general/full","functional/backends/mxnet/extra/general/gather","functional/backends/mxnet/extra/general/gather_nd","functional/backends/mxnet/extra/general/identity","functional/backends/mxnet/extra/general/indices_where","functional/backends/mxnet/extra/general/inplace_decrement","functional/backends/mxnet/extra/general/inplace_increment","functional/backends/mxnet/extra/general/inplace_update","functional/backends/mxnet/extra/general/is_array","functional/backends/mxnet/extra/general/isinf","functional/backends/mxnet/extra/general/linear_resample","functional/backends/mxnet/extra/general/linspace","functional/backends/mxnet/extra/general/logspace","functional/backends/mxnet/extra/general/matmul","functional/backends/mxnet/extra/general/meshgrid","functional/backends/mxnet/extra/general/repeat","functional/backends/mxnet/extra/general/round","functional/backends/mxnet/extra/general/scatter_flat","functional/backends/mxnet/extra/general/scatter_nd","functional/backends/mxnet/extra/general/split","functional/backends/mxnet/extra/general/squeeze","functional/backends/mxnet/extra/general/stack","functional/backends/mxnet/extra/general/tile","functional/backends/mxnet/extra/general/transpose","functional/backends/mxnet/extra/general/unstack","functional/backends/mxnet/extra/general/where","functional/backends/mxnet/extra/general/zero_pad","functional/backends/mxnet/extra/general/zeros_like","functional/backends/mxnet/extra/gradients","functional/backends/mxnet/extra/gradients/execute_with_gradients","functional/backends/mxnet/extra/gradients/is_variable","functional/backends/mxnet/extra/gradients/stop_gradient","functional/backends/mxnet/extra/gradients/variable","functional/backends/mxnet/extra/image","functional/backends/mxnet/extra/image/bilinear_resample","functional/backends/mxnet/extra/image/gradient_image","functional/backends/mxnet/extra/image/stack_images","functional/backends/mxnet/extra/linear_algebra","functional/backends/mxnet/extra/linear_algebra/matrix_norm","functional/backends/mxnet/extra/linear_algebra/pinv","functional/backends/mxnet/extra/linear_algebra/qr","functional/backends/mxnet/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/extra/logic","functional/backends/mxnet/extra/logic/logical_and","functional/backends/mxnet/extra/logic/logical_or","functional/backends/mxnet/extra/math","functional/backends/mxnet/extra/random","functional/backends/mxnet/extra/random/multinomial","functional/backends/mxnet/extra/random/randint","functional/backends/mxnet/extra/random/random_normal","functional/backends/mxnet/extra/random/random_uniform","functional/backends/mxnet/extra/reductions","functional/backends/mxnet/extra/reductions/einsum","functional/backends/mxnet/extra/reductions/reduce_max","functional/backends/mxnet/extra/reductions/reduce_mean","functional/backends/mxnet/extra/reductions/reduce_min","functional/backends/mxnet/extra/reductions/reduce_prod","functional/backends/mxnet/extra/reductions/reduce_std","functional/backends/mxnet/extra/reductions/reduce_sum","functional/backends/mxnet/extra/reductions/reduce_var","functional/backends/mxnet/neural_net","functional/backends/mxnet/neural_net/activations","functional/backends/mxnet/neural_net/activations/gelu","functional/backends/mxnet/neural_net/layers","functional/backends/mxnet/neural_net/layers/conv1d","functional/backends/mxnet/neural_net/layers/conv1d_transpose","functional/backends/mxnet/neural_net/layers/conv2d","functional/backends/mxnet/neural_net/layers/conv2d_transpose","functional/backends/mxnet/neural_net/layers/conv3d","functional/backends/mxnet/neural_net/layers/conv3d_transpose","functional/backends/mxnet/neural_net/layers/depthwise_conv2d","functional/backends/mxnet/standard","functional/backends/mxnet/standard/constants","functional/backends/mxnet/standard/creation_functions","functional/backends/mxnet/standard/creation_functions/empty","functional/backends/mxnet/standard/creation_functions/ones","functional/backends/mxnet/standard/creation_functions/ones_like","functional/backends/mxnet/standard/creation_functions/tril","functional/backends/mxnet/standard/creation_functions/zeros","functional/backends/mxnet/standard/data_type_functions","functional/backends/mxnet/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/standard/data_type_functions/finfo","functional/backends/mxnet/standard/data_type_functions/iinfo","functional/backends/mxnet/standard/data_types","functional/backends/mxnet/standard/elementwise_functions","functional/backends/mxnet/standard/elementwise_functions/acosh","functional/backends/mxnet/standard/elementwise_functions/bitwise_and","functional/backends/mxnet/standard/elementwise_functions/ceil","functional/backends/mxnet/standard/elementwise_functions/isfinite","functional/backends/mxnet/standard/elementwise_functions/isnan","functional/backends/mxnet/standard/elementwise_functions/less","functional/backends/mxnet/standard/elementwise_functions/logical_not","functional/backends/mxnet/standard/elementwise_functions/negative","functional/backends/mxnet/standard/elementwise_functions/sin","functional/backends/mxnet/standard/elementwise_functions/sinh","functional/backends/mxnet/standard/elementwise_functions/sqrt","functional/backends/mxnet/standard/elementwise_functions/tanh","functional/backends/mxnet/standard/function_and_method_signatures","functional/backends/mxnet/standard/linear_algebra","functional/backends/mxnet/standard/linear_algebra/diagonal","functional/backends/mxnet/standard/linear_algebra/slogdet","functional/backends/mxnet/standard/linear_algebra/svd","functional/backends/mxnet/standard/linear_algebra/vector_norm","functional/backends/mxnet/standard/manipulation_functions","functional/backends/mxnet/standard/manipulation_functions/flip","functional/backends/mxnet/standard/searching_functions","functional/backends/mxnet/standard/searching_functions/argmax","functional/backends/mxnet/standard/set_functions","functional/backends/mxnet/standard/sorting_functions","functional/backends/mxnet/standard/sorting_functions/argsort","functional/backends/mxnet/standard/statistical_functions","functional/backends/mxnet/standard/utility_functions","functional/backends/mxnet/standard/utility_functions/all","functional/backends/mxnet/standard/utility_functions/any","functional/backends/numpy","functional/backends/numpy/extra","functional/backends/numpy/extra/device","functional/backends/numpy/extra/device/Profiler","functional/backends/numpy/extra/general","functional/backends/numpy/extra/general/arange","functional/backends/numpy/extra/general/argmin","functional/backends/numpy/extra/general/array","functional/backends/numpy/extra/general/cast","functional/backends/numpy/extra/general/compile","functional/backends/numpy/extra/general/concatenate","functional/backends/numpy/extra/general/cumprod","functional/backends/numpy/extra/general/dtype","functional/backends/numpy/extra/general/dtype_bits","functional/backends/numpy/extra/general/dtype_from_str","functional/backends/numpy/extra/general/dtype_to_str","functional/backends/numpy/extra/general/full","functional/backends/numpy/extra/general/gather","functional/backends/numpy/extra/general/gather_nd","functional/backends/numpy/extra/general/identity","functional/backends/numpy/extra/general/indices_where","functional/backends/numpy/extra/general/inplace_decrement","functional/backends/numpy/extra/general/inplace_increment","functional/backends/numpy/extra/general/inplace_update","functional/backends/numpy/extra/general/is_array","functional/backends/numpy/extra/general/linear_resample","functional/backends/numpy/extra/general/linspace","functional/backends/numpy/extra/general/logspace","functional/backends/numpy/extra/general/one_hot","functional/backends/numpy/extra/general/scatter_flat","functional/backends/numpy/extra/general/scatter_nd","functional/backends/numpy/extra/general/split","functional/backends/numpy/extra/general/squeeze","functional/backends/numpy/extra/general/transpose","functional/backends/numpy/extra/general/unstack","functional/backends/numpy/extra/general/zeros_like","functional/backends/numpy/extra/gradients","functional/backends/numpy/extra/gradients/execute_with_gradients","functional/backends/numpy/extra/gradients/is_variable","functional/backends/numpy/extra/gradients/stop_gradient","functional/backends/numpy/extra/gradients/variable","functional/backends/numpy/extra/image","functional/backends/numpy/extra/image/bilinear_resample","functional/backends/numpy/extra/image/gradient_image","functional/backends/numpy/extra/image/stack_images","functional/backends/numpy/extra/linear_algebra","functional/backends/numpy/extra/linear_algebra/matrix_norm","functional/backends/numpy/extra/linear_algebra/qr","functional/backends/numpy/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/extra/logic","functional/backends/numpy/extra/math","functional/backends/numpy/extra/math/erf","functional/backends/numpy/extra/random","functional/backends/numpy/extra/random/multinomial","functional/backends/numpy/extra/reductions","functional/backends/numpy/extra/reductions/einsum","functional/backends/numpy/extra/reductions/reduce_max","functional/backends/numpy/extra/reductions/reduce_mean","functional/backends/numpy/extra/reductions/reduce_min","functional/backends/numpy/extra/reductions/reduce_prod","functional/backends/numpy/extra/reductions/reduce_sum","functional/backends/numpy/extra/reductions/reduce_var","functional/backends/numpy/neural_net","functional/backends/numpy/neural_net/activations","functional/backends/numpy/neural_net/activations/gelu","functional/backends/numpy/neural_net/activations/softmax","functional/backends/numpy/neural_net/layers","functional/backends/numpy/neural_net/layers/conv1d","functional/backends/numpy/neural_net/layers/conv1d_transpose","functional/backends/numpy/neural_net/layers/conv2d","functional/backends/numpy/neural_net/layers/conv2d_transpose","functional/backends/numpy/neural_net/layers/conv3d","functional/backends/numpy/neural_net/layers/conv3d_transpose","functional/backends/numpy/neural_net/layers/depthwise_conv2d","functional/backends/numpy/standard","functional/backends/numpy/standard/constants","functional/backends/numpy/standard/creation_functions","functional/backends/numpy/standard/creation_functions/empty","functional/backends/numpy/standard/creation_functions/ones","functional/backends/numpy/standard/creation_functions/ones_like","functional/backends/numpy/standard/creation_functions/tril","functional/backends/numpy/standard/creation_functions/zeros","functional/backends/numpy/standard/data_type_functions","functional/backends/numpy/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/standard/data_type_functions/finfo","functional/backends/numpy/standard/data_type_functions/iinfo","functional/backends/numpy/standard/data_types","functional/backends/numpy/standard/elementwise_functions","functional/backends/numpy/standard/elementwise_functions/acosh","functional/backends/numpy/standard/elementwise_functions/asinh","functional/backends/numpy/standard/elementwise_functions/bitwise_and","functional/backends/numpy/standard/elementwise_functions/ceil","functional/backends/numpy/standard/elementwise_functions/cos","functional/backends/numpy/standard/elementwise_functions/cosh","functional/backends/numpy/standard/elementwise_functions/equal","functional/backends/numpy/standard/elementwise_functions/isfinite","functional/backends/numpy/standard/elementwise_functions/isnan","functional/backends/numpy/standard/elementwise_functions/less","functional/backends/numpy/standard/elementwise_functions/less_equal","functional/backends/numpy/standard/elementwise_functions/log10","functional/backends/numpy/standard/elementwise_functions/log1p","functional/backends/numpy/standard/elementwise_functions/log2","functional/backends/numpy/standard/elementwise_functions/logical_not","functional/backends/numpy/standard/elementwise_functions/logical_or","functional/backends/numpy/standard/elementwise_functions/negative","functional/backends/numpy/standard/elementwise_functions/sin","functional/backends/numpy/standard/elementwise_functions/sinh","functional/backends/numpy/standard/elementwise_functions/sqrt","functional/backends/numpy/standard/elementwise_functions/tanh","functional/backends/numpy/standard/function_and_method_signatures","functional/backends/numpy/standard/linear_algebra","functional/backends/numpy/standard/linear_algebra/diagonal","functional/backends/numpy/standard/linear_algebra/matmul","functional/backends/numpy/standard/linear_algebra/slogdet","functional/backends/numpy/standard/linear_algebra/svd","functional/backends/numpy/standard/linear_algebra/vector_norm","functional/backends/numpy/standard/manipulation_functions","functional/backends/numpy/standard/manipulation_functions/flip","functional/backends/numpy/standard/searching_functions","functional/backends/numpy/standard/searching_functions/argmax","functional/backends/numpy/standard/set_functions","functional/backends/numpy/standard/sorting_functions","functional/backends/numpy/standard/sorting_functions/argsort","functional/backends/numpy/standard/statistical_functions","functional/backends/numpy/standard/statistical_functions/min","functional/backends/numpy/standard/utility_functions","functional/backends/numpy/standard/utility_functions/all","functional/backends/numpy/standard/utility_functions/any","functional/backends/tensorflow","functional/backends/tensorflow/extra","functional/backends/tensorflow/extra/device","functional/backends/tensorflow/extra/device/Profiler","functional/backends/tensorflow/extra/device/dev","functional/backends/tensorflow/extra/device/dev_from_str","functional/backends/tensorflow/extra/device/dev_to_str","functional/backends/tensorflow/extra/device/to_dev","functional/backends/tensorflow/extra/device/tpu_is_available","functional/backends/tensorflow/extra/general","functional/backends/tensorflow/extra/general/abs","functional/backends/tensorflow/extra/general/arange","functional/backends/tensorflow/extra/general/argmin","functional/backends/tensorflow/extra/general/array","functional/backends/tensorflow/extra/general/cast","functional/backends/tensorflow/extra/general/concatenate","functional/backends/tensorflow/extra/general/constant_pad","functional/backends/tensorflow/extra/general/dtype","functional/backends/tensorflow/extra/general/dtype_bits","functional/backends/tensorflow/extra/general/dtype_from_str","functional/backends/tensorflow/extra/general/dtype_to_str","functional/backends/tensorflow/extra/general/full","functional/backends/tensorflow/extra/general/gather","functional/backends/tensorflow/extra/general/gather_nd","functional/backends/tensorflow/extra/general/identity","functional/backends/tensorflow/extra/general/inplace_decrement","functional/backends/tensorflow/extra/general/inplace_increment","functional/backends/tensorflow/extra/general/inplace_update","functional/backends/tensorflow/extra/general/is_array","functional/backends/tensorflow/extra/general/isinf","functional/backends/tensorflow/extra/general/linear_resample","functional/backends/tensorflow/extra/general/linspace","functional/backends/tensorflow/extra/general/logspace","functional/backends/tensorflow/extra/general/one_hot","functional/backends/tensorflow/extra/general/scatter_flat","functional/backends/tensorflow/extra/general/scatter_nd","functional/backends/tensorflow/extra/general/split","functional/backends/tensorflow/extra/general/squeeze","functional/backends/tensorflow/extra/general/swapaxes","functional/backends/tensorflow/extra/general/tile","functional/backends/tensorflow/extra/general/unstack","functional/backends/tensorflow/extra/general/zero_pad","functional/backends/tensorflow/extra/general/zeros_like","functional/backends/tensorflow/extra/gradients","functional/backends/tensorflow/extra/gradients/execute_with_gradients","functional/backends/tensorflow/extra/gradients/is_variable","functional/backends/tensorflow/extra/gradients/stop_gradient","functional/backends/tensorflow/extra/gradients/variable","functional/backends/tensorflow/extra/image","functional/backends/tensorflow/extra/image/bilinear_resample","functional/backends/tensorflow/extra/image/gradient_image","functional/backends/tensorflow/extra/image/stack_images","functional/backends/tensorflow/extra/linear_algebra","functional/backends/tensorflow/extra/linear_algebra/matrix_norm","functional/backends/tensorflow/extra/linear_algebra/qr","functional/backends/tensorflow/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/extra/logic","functional/backends/tensorflow/extra/math","functional/backends/tensorflow/extra/random","functional/backends/tensorflow/extra/random/multinomial","functional/backends/tensorflow/extra/random/randint","functional/backends/tensorflow/extra/random/random_normal","functional/backends/tensorflow/extra/random/random_uniform","functional/backends/tensorflow/extra/reductions","functional/backends/tensorflow/extra/reductions/einsum","functional/backends/tensorflow/extra/reductions/reduce_max","functional/backends/tensorflow/extra/reductions/reduce_mean","functional/backends/tensorflow/extra/reductions/reduce_min","functional/backends/tensorflow/extra/reductions/reduce_prod","functional/backends/tensorflow/extra/reductions/reduce_sum","functional/backends/tensorflow/extra/reductions/reduce_var","functional/backends/tensorflow/neural_net","functional/backends/tensorflow/neural_net/activations","functional/backends/tensorflow/neural_net/layers","functional/backends/tensorflow/neural_net/layers/conv2d","functional/backends/tensorflow/neural_net/layers/conv3d","functional/backends/tensorflow/neural_net/layers/depthwise_conv2d","functional/backends/tensorflow/standard","functional/backends/tensorflow/standard/constants","functional/backends/tensorflow/standard/creation_functions","functional/backends/tensorflow/standard/creation_functions/empty","functional/backends/tensorflow/standard/creation_functions/ones","functional/backends/tensorflow/standard/creation_functions/ones_like","functional/backends/tensorflow/standard/creation_functions/tril","functional/backends/tensorflow/standard/creation_functions/zeros","functional/backends/tensorflow/standard/data_type_functions","functional/backends/tensorflow/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/standard/data_type_functions/finfo","functional/backends/tensorflow/standard/data_type_functions/iinfo","functional/backends/tensorflow/standard/data_types","functional/backends/tensorflow/standard/elementwise_functions","functional/backends/tensorflow/standard/elementwise_functions/acosh","functional/backends/tensorflow/standard/elementwise_functions/asinh","functional/backends/tensorflow/standard/elementwise_functions/bitwise_and","functional/backends/tensorflow/standard/elementwise_functions/ceil","functional/backends/tensorflow/standard/elementwise_functions/cos","functional/backends/tensorflow/standard/elementwise_functions/cosh","functional/backends/tensorflow/standard/elementwise_functions/equal","functional/backends/tensorflow/standard/elementwise_functions/isfinite","functional/backends/tensorflow/standard/elementwise_functions/isnan","functional/backends/tensorflow/standard/elementwise_functions/less","functional/backends/tensorflow/standard/elementwise_functions/less_equal","functional/backends/tensorflow/standard/elementwise_functions/log10","functional/backends/tensorflow/standard/elementwise_functions/log1p","functional/backends/tensorflow/standard/elementwise_functions/log2","functional/backends/tensorflow/standard/elementwise_functions/logical_not","functional/backends/tensorflow/standard/elementwise_functions/logical_or","functional/backends/tensorflow/standard/elementwise_functions/negative","functional/backends/tensorflow/standard/elementwise_functions/sin","functional/backends/tensorflow/standard/elementwise_functions/sinh","functional/backends/tensorflow/standard/elementwise_functions/sqrt","functional/backends/tensorflow/standard/elementwise_functions/tanh","functional/backends/tensorflow/standard/function_and_method_signatures","functional/backends/tensorflow/standard/linear_algebra","functional/backends/tensorflow/standard/linear_algebra/diagonal","functional/backends/tensorflow/standard/linear_algebra/matmul","functional/backends/tensorflow/standard/linear_algebra/slogdet","functional/backends/tensorflow/standard/linear_algebra/svd","functional/backends/tensorflow/standard/linear_algebra/vector_norm","functional/backends/tensorflow/standard/manipulation_functions","functional/backends/tensorflow/standard/manipulation_functions/flip","functional/backends/tensorflow/standard/searching_functions","functional/backends/tensorflow/standard/searching_functions/argmax","functional/backends/tensorflow/standard/set_functions","functional/backends/tensorflow/standard/sorting_functions","functional/backends/tensorflow/standard/sorting_functions/argsort","functional/backends/tensorflow/standard/statistical_functions","functional/backends/tensorflow/standard/statistical_functions/min","functional/backends/tensorflow/standard/utility_functions","functional/backends/tensorflow/standard/utility_functions/all","functional/backends/tensorflow/standard/utility_functions/any","functional/backends/torch","functional/backends/torch/extra","functional/backends/torch/extra/device","functional/backends/torch/extra/device/Profiler","functional/backends/torch/extra/device/clear_mem_on_dev","functional/backends/torch/extra/device/dev","functional/backends/torch/extra/device/dev_from_str","functional/backends/torch/extra/device/dev_to_str","functional/backends/torch/extra/device/to_dev","functional/backends/torch/extra/device/tpu_is_available","functional/backends/torch/extra/general","functional/backends/torch/extra/general/abs","functional/backends/torch/extra/general/arange","functional/backends/torch/extra/general/argmin","functional/backends/torch/extra/general/array","functional/backends/torch/extra/general/array_equal","functional/backends/torch/extra/general/broadcast_to","functional/backends/torch/extra/general/cast","functional/backends/torch/extra/general/clip","functional/backends/torch/extra/general/compile","functional/backends/torch/extra/general/concatenate","functional/backends/torch/extra/general/constant_pad","functional/backends/torch/extra/general/container_types","functional/backends/torch/extra/general/copy_array","functional/backends/torch/extra/general/cross","functional/backends/torch/extra/general/cumprod","functional/backends/torch/extra/general/cumsum","functional/backends/torch/extra/general/current_framework_str","functional/backends/torch/extra/general/dtype","functional/backends/torch/extra/general/dtype_bits","functional/backends/torch/extra/general/dtype_from_str","functional/backends/torch/extra/general/dtype_to_str","functional/backends/torch/extra/general/expand_dims","functional/backends/torch/extra/general/floor","functional/backends/torch/extra/general/floormod","functional/backends/torch/extra/general/full","functional/backends/torch/extra/general/gather","functional/backends/torch/extra/general/gather_nd","functional/backends/torch/extra/general/get_num_dims","functional/backends/torch/extra/general/identity","functional/backends/torch/extra/general/indices_where","functional/backends/torch/extra/general/inplace_decrement","functional/backends/torch/extra/general/inplace_increment","functional/backends/torch/extra/general/inplace_update","functional/backends/torch/extra/general/is_array","functional/backends/torch/extra/general/isinf","functional/backends/torch/extra/general/linear_resample","functional/backends/torch/extra/general/linspace","functional/backends/torch/extra/general/logspace","functional/backends/torch/extra/general/maximum","functional/backends/torch/extra/general/meshgrid","functional/backends/torch/extra/general/minimum","functional/backends/torch/extra/general/multiprocessing","functional/backends/torch/extra/general/one_hot","functional/backends/torch/extra/general/repeat","functional/backends/torch/extra/general/reshape","functional/backends/torch/extra/general/round","functional/backends/torch/extra/general/scatter_flat","functional/backends/torch/extra/general/scatter_nd","functional/backends/torch/extra/general/shape","functional/backends/torch/extra/general/split","functional/backends/torch/extra/general/squeeze","functional/backends/torch/extra/general/stack","functional/backends/torch/extra/general/swapaxes","functional/backends/torch/extra/general/tile","functional/backends/torch/extra/general/to_list","functional/backends/torch/extra/general/to_numpy","functional/backends/torch/extra/general/to_scalar","functional/backends/torch/extra/general/transpose","functional/backends/torch/extra/general/unstack","functional/backends/torch/extra/general/where","functional/backends/torch/extra/general/zero_pad","functional/backends/torch/extra/general/zeros_like","functional/backends/torch/extra/gradients","functional/backends/torch/extra/gradients/execute_with_gradients","functional/backends/torch/extra/gradients/is_variable","functional/backends/torch/extra/gradients/stop_gradient","functional/backends/torch/extra/gradients/variable","functional/backends/torch/extra/gradients/variable_data","functional/backends/torch/extra/image","functional/backends/torch/extra/image/bilinear_resample","functional/backends/torch/extra/image/gradient_image","functional/backends/torch/extra/image/stack_images","functional/backends/torch/extra/linear_algebra","functional/backends/torch/extra/linear_algebra/cholesky","functional/backends/torch/extra/linear_algebra/inv","functional/backends/torch/extra/linear_algebra/matrix_norm","functional/backends/torch/extra/linear_algebra/pinv","functional/backends/torch/extra/linear_algebra/qr","functional/backends/torch/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/extra/logic","functional/backends/torch/extra/logic/logical_and","functional/backends/torch/extra/logic/logical_or","functional/backends/torch/extra/math","functional/backends/torch/extra/math/acos","functional/backends/torch/extra/math/asin","functional/backends/torch/extra/math/atan","functional/backends/torch/extra/math/atan2","functional/backends/torch/extra/math/atanh","functional/backends/torch/extra/math/cosh","functional/backends/torch/extra/math/erf","functional/backends/torch/extra/math/exp","functional/backends/torch/extra/math/log","functional/backends/torch/extra/math/tan","functional/backends/torch/extra/random","functional/backends/torch/extra/random/multinomial","functional/backends/torch/extra/random/randint","functional/backends/torch/extra/random/random_normal","functional/backends/torch/extra/random/random_uniform","functional/backends/torch/extra/random/seed","functional/backends/torch/extra/random/shuffle","functional/backends/torch/extra/reductions","functional/backends/torch/extra/reductions/einsum","functional/backends/torch/extra/reductions/reduce_max","functional/backends/torch/extra/reductions/reduce_mean","functional/backends/torch/extra/reductions/reduce_min","functional/backends/torch/extra/reductions/reduce_prod","functional/backends/torch/extra/reductions/reduce_sum","functional/backends/torch/extra/reductions/reduce_var","functional/backends/torch/neural_net","functional/backends/torch/neural_net/activations","functional/backends/torch/neural_net/activations/gelu","functional/backends/torch/neural_net/activations/leaky_relu","functional/backends/torch/neural_net/activations/relu","functional/backends/torch/neural_net/activations/sigmoid","functional/backends/torch/neural_net/activations/softmax","functional/backends/torch/neural_net/activations/softplus","functional/backends/torch/neural_net/activations/tanh","functional/backends/torch/neural_net/converters","functional/backends/torch/neural_net/converters/IvyModule","functional/backends/torch/neural_net/converters/to_ivy_module","functional/backends/torch/neural_net/layers","functional/backends/torch/neural_net/layers/conv1d","functional/backends/torch/neural_net/layers/conv1d_transpose","functional/backends/torch/neural_net/layers/conv2d","functional/backends/torch/neural_net/layers/conv2d_transpose","functional/backends/torch/neural_net/layers/conv3d","functional/backends/torch/neural_net/layers/conv3d_transpose","functional/backends/torch/neural_net/layers/depthwise_conv2d","functional/backends/torch/standard","functional/backends/torch/standard/constants","functional/backends/torch/standard/creation_functions","functional/backends/torch/standard/creation_functions/empty","functional/backends/torch/standard/creation_functions/ones","functional/backends/torch/standard/creation_functions/ones_like","functional/backends/torch/standard/creation_functions/tril","functional/backends/torch/standard/creation_functions/zeros","functional/backends/torch/standard/data_type_functions","functional/backends/torch/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/standard/data_type_functions/finfo","functional/backends/torch/standard/data_type_functions/iinfo","functional/backends/torch/standard/data_types","functional/backends/torch/standard/elementwise_functions","functional/backends/torch/standard/elementwise_functions/acosh","functional/backends/torch/standard/elementwise_functions/asinh","functional/backends/torch/standard/elementwise_functions/bitwise_and","functional/backends/torch/standard/elementwise_functions/ceil","functional/backends/torch/standard/elementwise_functions/cos","functional/backends/torch/standard/elementwise_functions/cosh","functional/backends/torch/standard/elementwise_functions/equal","functional/backends/torch/standard/elementwise_functions/isfinite","functional/backends/torch/standard/elementwise_functions/isnan","functional/backends/torch/standard/elementwise_functions/less","functional/backends/torch/standard/elementwise_functions/less_equal","functional/backends/torch/standard/elementwise_functions/log10","functional/backends/torch/standard/elementwise_functions/log1p","functional/backends/torch/standard/elementwise_functions/log2","functional/backends/torch/standard/elementwise_functions/logical_not","functional/backends/torch/standard/elementwise_functions/logical_or","functional/backends/torch/standard/elementwise_functions/negative","functional/backends/torch/standard/elementwise_functions/sin","functional/backends/torch/standard/elementwise_functions/sinh","functional/backends/torch/standard/elementwise_functions/sqrt","functional/backends/torch/standard/elementwise_functions/tanh","functional/backends/torch/standard/function_and_method_signatures","functional/backends/torch/standard/linear_algebra","functional/backends/torch/standard/linear_algebra/diagonal","functional/backends/torch/standard/linear_algebra/matmul","functional/backends/torch/standard/linear_algebra/slogdet","functional/backends/torch/standard/linear_algebra/svd","functional/backends/torch/standard/linear_algebra/vector_norm","functional/backends/torch/standard/manipulation_functions","functional/backends/torch/standard/manipulation_functions/flip","functional/backends/torch/standard/searching_functions","functional/backends/torch/standard/searching_functions/argmax","functional/backends/torch/standard/set_functions","functional/backends/torch/standard/sorting_functions","functional/backends/torch/standard/sorting_functions/argsort","functional/backends/torch/standard/statistical_functions","functional/backends/torch/standard/statistical_functions/min","functional/backends/torch/standard/utility_functions","functional/backends/torch/standard/utility_functions/all","functional/backends/torch/standard/utility_functions/any","functional/ivy","functional/ivy/extra","functional/ivy/extra/compilation","functional/ivy/extra/compilation/compile","functional/ivy/extra/device","functional/ivy/extra/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/device/DevClonedItem","functional/ivy/extra/device/DevClonedIter","functional/ivy/extra/device/DevClonedNest","functional/ivy/extra/device/DevDistItem","functional/ivy/extra/device/DevDistIter","functional/ivy/extra/device/DevDistNest","functional/ivy/extra/device/DevManager:\n\n    def __init__","functional/ivy/extra/device/DevMapper","functional/ivy/extra/device/DevMapperMultiProc","functional/ivy/extra/device/MultiDev:\n\n    def __init__","functional/ivy/extra/device/MultiDevItem","functional/ivy/extra/device/MultiDevIter","functional/ivy/extra/device/MultiDevNest","functional/ivy/extra/device/Profiler","functional/ivy/extra/device/clear_mem_on_dev","functional/ivy/extra/device/default_device","functional/ivy/extra/device/dev","functional/ivy/extra/device/dev_clone","functional/ivy/extra/device/dev_clone_array","functional/ivy/extra/device/dev_clone_iter","functional/ivy/extra/device/dev_clone_nest","functional/ivy/extra/device/dev_dist","functional/ivy/extra/device/dev_dist_array","functional/ivy/extra/device/dev_dist_iter","functional/ivy/extra/device/dev_dist_nest","functional/ivy/extra/device/dev_from_str","functional/ivy/extra/device/dev_to_str","functional/ivy/extra/device/dev_unify","functional/ivy/extra/device/dev_unify_array","functional/ivy/extra/device/dev_unify_iter","functional/ivy/extra/device/dev_unify_nest","functional/ivy/extra/device/dev_util","functional/ivy/extra/device/get_all_arrays_on_dev","functional/ivy/extra/device/gpu_is_available","functional/ivy/extra/device/num_arrays_on_dev","functional/ivy/extra/device/num_cpu_cores","functional/ivy/extra/device/num_gpus","functional/ivy/extra/device/percent_used_mem_on_dev","functional/ivy/extra/device/print_all_arrays_on_dev","functional/ivy/extra/device/set_default_device","functional/ivy/extra/device/set_split_factor","functional/ivy/extra/device/split_factor","functional/ivy/extra/device/split_func_call","functional/ivy/extra/device/to_dev","functional/ivy/extra/device/total_mem_on_dev","functional/ivy/extra/device/tpu_is_available","functional/ivy/extra/device/unset_default_device","functional/ivy/extra/device/used_mem_on_dev","functional/ivy/extra/dtype","functional/ivy/extra/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/cast","functional/ivy/extra/dtype/closest_valid_dtype","functional/ivy/extra/dtype/convert_dtype","functional/ivy/extra/dtype/default_dtype","functional/ivy/extra/dtype/default_float_dtype","functional/ivy/extra/dtype/default_int_dtype","functional/ivy/extra/dtype/dtype","functional/ivy/extra/dtype/dtype_bits","functional/ivy/extra/dtype/dtype_from_str","functional/ivy/extra/dtype/dtype_to_str","functional/ivy/extra/dtype/invalid_dtype","functional/ivy/extra/dtype/is_float_dtype","functional/ivy/extra/dtype/is_int_dtype","functional/ivy/extra/dtype/set_default_dtype","functional/ivy/extra/dtype/set_default_float_dtype","functional/ivy/extra/dtype/set_default_int_dtype","functional/ivy/extra/dtype/unset_default_dtype","functional/ivy/extra/dtype/unset_default_float_dtype","functional/ivy/extra/dtype/unset_default_int_dtype","functional/ivy/extra/dtype/valid_dtype","functional/ivy/extra/general","functional/ivy/extra/general/abs","functional/ivy/extra/general/all_equal","functional/ivy/extra/general/arange","functional/ivy/extra/general/arg_names","functional/ivy/extra/general/argmin","functional/ivy/extra/general/array","functional/ivy/extra/general/array_equal","functional/ivy/extra/general/arrays_equal","functional/ivy/extra/general/assert_supports_inplace","functional/ivy/extra/general/broadcast_to","functional/ivy/extra/general/cache_fn","functional/ivy/extra/general/clip","functional/ivy/extra/general/clip_matrix_norm","functional/ivy/extra/general/clip_vector_norm","functional/ivy/extra/general/concatenate","functional/ivy/extra/general/constant_pad","functional/ivy/extra/general/container_types","functional/ivy/extra/general/copy_array","functional/ivy/extra/general/cross","functional/ivy/extra/general/cumprod","functional/ivy/extra/general/cumsum","functional/ivy/extra/general/current_framework_str","functional/ivy/extra/general/default","functional/ivy/extra/general/einops_rearrange","functional/ivy/extra/general/einops_reduce","functional/ivy/extra/general/einops_repeat","functional/ivy/extra/general/equal","functional/ivy/extra/general/exists","functional/ivy/extra/general/expand_dims","functional/ivy/extra/general/floor","functional/ivy/extra/general/floormod","functional/ivy/extra/general/fourier_encode","functional/ivy/extra/general/full","functional/ivy/extra/general/gather","functional/ivy/extra/general/gather_nd","functional/ivy/extra/general/get_all_arrays_in_memory","functional/ivy/extra/general/get_min_base","functional/ivy/extra/general/get_min_denominator","functional/ivy/extra/general/get_num_dims","functional/ivy/extra/general/get_referrers_recursive","functional/ivy/extra/general/has_nans","functional/ivy/extra/general/identity","functional/ivy/extra/general/indices_where","functional/ivy/extra/general/inplace_arrays_supported","functional/ivy/extra/general/inplace_decrement","functional/ivy/extra/general/inplace_increment","functional/ivy/extra/general/inplace_update","functional/ivy/extra/general/inplace_variables_supported","functional/ivy/extra/general/is_array","functional/ivy/extra/general/isinf","functional/ivy/extra/general/linear_resample","functional/ivy/extra/general/linspace","functional/ivy/extra/general/logspace","functional/ivy/extra/general/match_kwargs","functional/ivy/extra/general/matmul","functional/ivy/extra/general/maximum","functional/ivy/extra/general/meshgrid","functional/ivy/extra/general/minimum","functional/ivy/extra/general/multiprocessing","functional/ivy/extra/general/num_arrays_in_memory","functional/ivy/extra/general/one_hot","functional/ivy/extra/general/ones","functional/ivy/extra/general/print_all_arrays_in_memory","functional/ivy/extra/general/queue_timeout","functional/ivy/extra/general/repeat","functional/ivy/extra/general/reshape","functional/ivy/extra/general/round","functional/ivy/extra/general/scatter_flat","functional/ivy/extra/general/scatter_nd","functional/ivy/extra/general/set_min_base","functional/ivy/extra/general/set_min_denominator","functional/ivy/extra/general/set_queue_timeout","functional/ivy/extra/general/set_tmp_dir","functional/ivy/extra/general/shape","functional/ivy/extra/general/shape_to_tuple","functional/ivy/extra/general/split","functional/ivy/extra/general/squeeze","functional/ivy/extra/general/stable_divide","functional/ivy/extra/general/stable_pow","functional/ivy/extra/general/stack","functional/ivy/extra/general/supports_inplace","functional/ivy/extra/general/swapaxes","functional/ivy/extra/general/tile","functional/ivy/extra/general/tmp_dir","functional/ivy/extra/general/to_list","functional/ivy/extra/general/to_numpy","functional/ivy/extra/general/to_scalar","functional/ivy/extra/general/transpose","functional/ivy/extra/general/try_else_none","functional/ivy/extra/general/unstack","functional/ivy/extra/general/value_is_nan","functional/ivy/extra/general/where","functional/ivy/extra/general/zero_pad","functional/ivy/extra/general/zeros_like","functional/ivy/extra/gradients","functional/ivy/extra/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/gradients/adam_step","functional/ivy/extra/gradients/adam_update","functional/ivy/extra/gradients/execute_with_gradients","functional/ivy/extra/gradients/gradient_descent_update","functional/ivy/extra/gradients/is_variable","functional/ivy/extra/gradients/lamb_update","functional/ivy/extra/gradients/lars_update","functional/ivy/extra/gradients/optimizer_update","functional/ivy/extra/gradients/set_with_grads","functional/ivy/extra/gradients/stop_gradient","functional/ivy/extra/gradients/unset_with_grads","functional/ivy/extra/gradients/variable","functional/ivy/extra/gradients/variable_data","functional/ivy/extra/gradients/with_grads","functional/ivy/extra/image","functional/ivy/extra/image/bilinear_resample","functional/ivy/extra/image/float_img_to_uint8_img","functional/ivy/extra/image/gradient_image","functional/ivy/extra/image/random_crop","functional/ivy/extra/image/stack_images","functional/ivy/extra/image/uint8_img_to_float_img","functional/ivy/extra/linalg","functional/ivy/extra/linalg/cholesky","functional/ivy/extra/linalg/inv","functional/ivy/extra/linalg/matrix_norm","functional/ivy/extra/linalg/pinv","functional/ivy/extra/linalg/qr","functional/ivy/extra/linalg/vector_to_skew_symmetric_matrix","functional/ivy/extra/logic","functional/ivy/extra/logic/logical_and","functional/ivy/extra/logic/logical_or","functional/ivy/extra/math","functional/ivy/extra/math/acos","functional/ivy/extra/math/asin","functional/ivy/extra/math/atan","functional/ivy/extra/math/atan2","functional/ivy/extra/math/atanh","functional/ivy/extra/math/cosh","functional/ivy/extra/math/divide","functional/ivy/extra/math/erf","functional/ivy/extra/math/exp","functional/ivy/extra/math/log","functional/ivy/extra/math/tan","functional/ivy/extra/math/tanh","functional/ivy/extra/meta","functional/ivy/extra/meta/fomaml_step","functional/ivy/extra/meta/maml_step","functional/ivy/extra/meta/reptile_step","functional/ivy/extra/multi_node","functional/ivy/extra/multi_node/ClonedItem","functional/ivy/extra/multi_node/ClonedIter","functional/ivy/extra/multi_node/ClonedNest","functional/ivy/extra/multi_node/MultiNode:\n\n    def __init__","functional/ivy/extra/multi_node/MultiNodeItem","functional/ivy/extra/multi_node/MultiNodeIter","functional/ivy/extra/multi_node/MultiNodeNest","functional/ivy/extra/multi_node/NodeDistItem","functional/ivy/extra/multi_node/NodeDistIter","functional/ivy/extra/multi_node/NodeDistNest","functional/ivy/extra/multi_node/NodeManager:\n\n    def __init__","functional/ivy/extra/multi_node/NodeMapper","functional/ivy/extra/multi_node/NodeMapperMultiProc","functional/ivy/extra/multi_node/Profiler","functional/ivy/extra/multi_node/clone","functional/ivy/extra/multi_node/clone_array","functional/ivy/extra/multi_node/clone_iter","functional/ivy/extra/multi_node/clone_nest","functional/ivy/extra/multi_node/default_node","functional/ivy/extra/multi_node/distribute_nest","functional/ivy/extra/multi_node/gpu_is_available","functional/ivy/extra/multi_node/node","functional/ivy/extra/multi_node/node_dist","functional/ivy/extra/multi_node/node_dist_array","functional/ivy/extra/multi_node/node_dist_iter","functional/ivy/extra/multi_node/node_str","functional/ivy/extra/multi_node/node_to_str","functional/ivy/extra/multi_node/node_util","functional/ivy/extra/multi_node/num_gpus","functional/ivy/extra/multi_node/percent_used_mem_on_node","functional/ivy/extra/multi_node/set_default_node","functional/ivy/extra/multi_node/set_split_factor","functional/ivy/extra/multi_node/split_factor","functional/ivy/extra/multi_node/split_func_call","functional/ivy/extra/multi_node/str_to_node","functional/ivy/extra/multi_node/to_node","functional/ivy/extra/multi_node/total_mem_on_node","functional/ivy/extra/multi_node/tpu_is_available","functional/ivy/extra/multi_node/unify","functional/ivy/extra/multi_node/unify_array","functional/ivy/extra/multi_node/unify_iter","functional/ivy/extra/multi_node/unify_nest","functional/ivy/extra/multi_node/used_mem_on_node","functional/ivy/extra/nest","functional/ivy/extra/nest/all_nested_indices","functional/ivy/extra/nest/copy_nest","functional/ivy/extra/nest/index_nest","functional/ivy/extra/nest/map","functional/ivy/extra/nest/map_nest_at_index","functional/ivy/extra/nest/map_nest_at_indices","functional/ivy/extra/nest/multi_index_nest","functional/ivy/extra/nest/nested_indices_where","functional/ivy/extra/nest/nested_map","functional/ivy/extra/nest/set_nest_at_index","functional/ivy/extra/nest/set_nest_at_indices","functional/ivy/extra/random","functional/ivy/extra/random/multinomial","functional/ivy/extra/random/randint","functional/ivy/extra/random/random_normal","functional/ivy/extra/random/random_uniform","functional/ivy/extra/random/seed","functional/ivy/extra/random/shuffle","functional/ivy/extra/reductions","functional/ivy/extra/reductions/einsum","functional/ivy/extra/reductions/reduce_max","functional/ivy/extra/reductions/reduce_mean","functional/ivy/extra/reductions/reduce_min","functional/ivy/extra/reductions/reduce_prod","functional/ivy/extra/reductions/reduce_std","functional/ivy/extra/reductions/reduce_sum","functional/ivy/extra/reductions/reduce_var","functional/ivy/neural_net","functional/ivy/neural_net/activations","functional/ivy/neural_net/activations/gelu","functional/ivy/neural_net/activations/leaky_relu","functional/ivy/neural_net/activations/relu","functional/ivy/neural_net/activations/sigmoid","functional/ivy/neural_net/activations/softmax","functional/ivy/neural_net/activations/softplus","functional/ivy/neural_net/activations/tanh","functional/ivy/neural_net/layers","functional/ivy/neural_net/layers/conv1d","functional/ivy/neural_net/layers/conv1d_transpose","functional/ivy/neural_net/layers/conv2d","functional/ivy/neural_net/layers/conv2d_transpose","functional/ivy/neural_net/layers/conv3d","functional/ivy/neural_net/layers/conv3d_transpose","functional/ivy/neural_net/layers/depthwise_conv2d","functional/ivy/neural_net/layers/dropout","functional/ivy/neural_net/layers/linear","functional/ivy/neural_net/layers/lstm_update","functional/ivy/neural_net/layers/multi_head_attention","functional/ivy/neural_net/layers/scaled_dot_product_attention","functional/ivy/neural_net/losses","functional/ivy/neural_net/losses/binary_cross_entropy","functional/ivy/neural_net/losses/cross_entropy","functional/ivy/neural_net/losses/sparse_cross_entropy","functional/ivy/neural_net/norms","functional/ivy/neural_net/norms/layer_norm","functional/ivy/standard","functional/ivy/standard/constants","functional/ivy/standard/creation_functions","functional/ivy/standard/creation_functions/empty","functional/ivy/standard/creation_functions/ones","functional/ivy/standard/creation_functions/ones_like","functional/ivy/standard/creation_functions/tril","functional/ivy/standard/creation_functions/zeros","functional/ivy/standard/data_type_functions","functional/ivy/standard/data_type_functions/finfo","functional/ivy/standard/data_type_functions/iinfo","functional/ivy/standard/data_types","functional/ivy/standard/elementwise_functions","functional/ivy/standard/elementwise_functions/acosh","functional/ivy/standard/elementwise_functions/asinh","functional/ivy/standard/elementwise_functions/bitwise_and","functional/ivy/standard/elementwise_functions/ceil","functional/ivy/standard/elementwise_functions/cos","functional/ivy/standard/elementwise_functions/cosh","functional/ivy/standard/elementwise_functions/isfinite","functional/ivy/standard/elementwise_functions/isnan","functional/ivy/standard/elementwise_functions/less","functional/ivy/standard/elementwise_functions/less_equal","functional/ivy/standard/elementwise_functions/log10","functional/ivy/standard/elementwise_functions/log1p","functional/ivy/standard/elementwise_functions/log2","functional/ivy/standard/elementwise_functions/logical_not","functional/ivy/standard/elementwise_functions/logical_or","functional/ivy/standard/elementwise_functions/negative","functional/ivy/standard/elementwise_functions/sin","functional/ivy/standard/elementwise_functions/sinh","functional/ivy/standard/elementwise_functions/sqrt","functional/ivy/standard/elementwise_functions/tanh","functional/ivy/standard/function_and_method_signatures","functional/ivy/standard/linear_algebra","functional/ivy/standard/linear_algebra/diagonal","functional/ivy/standard/linear_algebra/matmul","functional/ivy/standard/linear_algebra/slodget","functional/ivy/standard/linear_algebra/svd","functional/ivy/standard/linear_algebra/vector_norm","functional/ivy/standard/manipulation_functions","functional/ivy/standard/manipulation_functions/flip","functional/ivy/standard/searching_functions","functional/ivy/standard/searching_functions/argmax","functional/ivy/standard/set_functions","functional/ivy/standard/sorting_functions","functional/ivy/standard/sorting_functions/argsort","functional/ivy/standard/statistical_functions","functional/ivy/standard/statistical_functions/min","functional/ivy/standard/utility_functions","functional/ivy/standard/utility_functions/all","functional/ivy/standard/utility_functions/any","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/extra.rst","array/extra/conversions.rst","array/extra/conversions/args_to_ivy.rst","array/extra/conversions/args_to_native.rst","array/extra/conversions/to_ivy.rst","array/extra/conversions/to_native.rst","array/extra/device.rst","array/extra/device/ArrayWithDevice.rst","array/extra/general.rst","array/extra/general/ArrayWithGeneral.rst","array/extra/gradients.rst","array/extra/gradients/ArrayWithGradients.rst","array/extra/image.rst","array/extra/image/ArrayWithImage.rst","array/extra/linalg.rst","array/extra/linalg/ArrayWithLinalg.rst","array/extra/logic.rst","array/extra/logic/ArrayWithLogic.rst","array/extra/math.rst","array/extra/math/ArrayWithMath.rst","array/extra/meta.rst","array/extra/meta/ArrayWithMeta.rst","array/extra/random.rst","array/extra/random/ArrayWithRandom.rst","array/extra/reductions.rst","array/extra/reductions/ArrayWithReductions.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","array/standard.rst","array/standard/arithmetic_operators.rst","array/standard/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/standard/array_operators.rst","array/standard/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/standard/attributes.rst","array/standard/attributes/ArrayWithArrayAPIAttributes.rst","array/standard/bitwise_operators.rst","array/standard/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/standard/comparison_operators.rst","array/standard/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/standard/inplace_operators.rst","array/standard/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/standard/reflected_operators.rst","array/standard/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/extra.rst","functional/backends/jax/extra/device.rst","functional/backends/jax/extra/device/Profiler.rst","functional/backends/jax/extra/device/dev.rst","functional/backends/jax/extra/device/dev_from_str.rst","functional/backends/jax/extra/device/dev_to_str.rst","functional/backends/jax/extra/device/num_gpus.rst","functional/backends/jax/extra/device/to_dev.rst","functional/backends/jax/extra/general.rst","functional/backends/jax/extra/general/arange.rst","functional/backends/jax/extra/general/argmin.rst","functional/backends/jax/extra/general/array.rst","functional/backends/jax/extra/general/cast.rst","functional/backends/jax/extra/general/concatenate.rst","functional/backends/jax/extra/general/cumprod.rst","functional/backends/jax/extra/general/dtype.rst","functional/backends/jax/extra/general/dtype_bits.rst","functional/backends/jax/extra/general/dtype_from_str.rst","functional/backends/jax/extra/general/dtype_to_str.rst","functional/backends/jax/extra/general/full.rst","functional/backends/jax/extra/general/gather.rst","functional/backends/jax/extra/general/gather_nd.rst","functional/backends/jax/extra/general/identity.rst","functional/backends/jax/extra/general/indices_where.rst","functional/backends/jax/extra/general/inplace_decrement.rst","functional/backends/jax/extra/general/inplace_increment.rst","functional/backends/jax/extra/general/inplace_update.rst","functional/backends/jax/extra/general/is_array.rst","functional/backends/jax/extra/general/linear_resample.rst","functional/backends/jax/extra/general/linspace.rst","functional/backends/jax/extra/general/logspace.rst","functional/backends/jax/extra/general/one_hot.rst","functional/backends/jax/extra/general/scatter_flat.rst","functional/backends/jax/extra/general/scatter_nd.rst","functional/backends/jax/extra/general/split.rst","functional/backends/jax/extra/general/squeeze.rst","functional/backends/jax/extra/general/transpose.rst","functional/backends/jax/extra/general/unstack.rst","functional/backends/jax/extra/general/zeros_like.rst","functional/backends/jax/extra/gradients.rst","functional/backends/jax/extra/gradients/execute_with_gradients.rst","functional/backends/jax/extra/gradients/is_variable.rst","functional/backends/jax/extra/image.rst","functional/backends/jax/extra/image/bilinear_resample.rst","functional/backends/jax/extra/image/gradient_image.rst","functional/backends/jax/extra/image/stack_images.rst","functional/backends/jax/extra/linear_algebra.rst","functional/backends/jax/extra/linear_algebra/matrix_norm.rst","functional/backends/jax/extra/linear_algebra/qr.rst","functional/backends/jax/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/extra/logic.rst","functional/backends/jax/extra/math.rst","functional/backends/jax/extra/random.rst","functional/backends/jax/extra/random/multinomial.rst","functional/backends/jax/extra/random/randint.rst","functional/backends/jax/extra/random/random_normal.rst","functional/backends/jax/extra/random/random_uniform.rst","functional/backends/jax/extra/random/seed.rst","functional/backends/jax/extra/random/shuffle.rst","functional/backends/jax/extra/reductions.rst","functional/backends/jax/extra/reductions/einsum.rst","functional/backends/jax/extra/reductions/reduce_max.rst","functional/backends/jax/extra/reductions/reduce_mean.rst","functional/backends/jax/extra/reductions/reduce_min.rst","functional/backends/jax/extra/reductions/reduce_prod.rst","functional/backends/jax/extra/reductions/reduce_sum.rst","functional/backends/jax/extra/reductions/reduce_var.rst","functional/backends/jax/neural_net.rst","functional/backends/jax/neural_net/activations.rst","functional/backends/jax/neural_net/activations/softmax.rst","functional/backends/jax/neural_net/converters.rst","functional/backends/jax/neural_net/converters/IvyModule.rst","functional/backends/jax/neural_net/converters/to_ivy_module.rst","functional/backends/jax/neural_net/layers.rst","functional/backends/jax/neural_net/layers/conv1d.rst","functional/backends/jax/neural_net/layers/conv1d_transpose.rst","functional/backends/jax/neural_net/layers/conv2d.rst","functional/backends/jax/neural_net/layers/conv2d_transpose.rst","functional/backends/jax/neural_net/layers/conv3d.rst","functional/backends/jax/neural_net/layers/conv3d_transpose.rst","functional/backends/jax/neural_net/layers/depthwise_conv2d.rst","functional/backends/jax/standard.rst","functional/backends/jax/standard/constants.rst","functional/backends/jax/standard/creation_functions.rst","functional/backends/jax/standard/creation_functions/empty.rst","functional/backends/jax/standard/creation_functions/ones.rst","functional/backends/jax/standard/creation_functions/ones_like.rst","functional/backends/jax/standard/creation_functions/tril.rst","functional/backends/jax/standard/creation_functions/zeros.rst","functional/backends/jax/standard/data_type_functions.rst","functional/backends/jax/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/standard/data_type_functions/finfo.rst","functional/backends/jax/standard/data_type_functions/iinfo.rst","functional/backends/jax/standard/data_types.rst","functional/backends/jax/standard/elementwise_functions.rst","functional/backends/jax/standard/elementwise_functions/acosh.rst","functional/backends/jax/standard/elementwise_functions/asinh.rst","functional/backends/jax/standard/elementwise_functions/bitwise_and.rst","functional/backends/jax/standard/elementwise_functions/ceil.rst","functional/backends/jax/standard/elementwise_functions/cos.rst","functional/backends/jax/standard/elementwise_functions/cosh.rst","functional/backends/jax/standard/elementwise_functions/equal.rst","functional/backends/jax/standard/elementwise_functions/isfinite.rst","functional/backends/jax/standard/elementwise_functions/isnan.rst","functional/backends/jax/standard/elementwise_functions/less.rst","functional/backends/jax/standard/elementwise_functions/less_equal.rst","functional/backends/jax/standard/elementwise_functions/log10.rst","functional/backends/jax/standard/elementwise_functions/log1p.rst","functional/backends/jax/standard/elementwise_functions/log2.rst","functional/backends/jax/standard/elementwise_functions/logical_not.rst","functional/backends/jax/standard/elementwise_functions/logical_or.rst","functional/backends/jax/standard/elementwise_functions/negative.rst","functional/backends/jax/standard/elementwise_functions/sin.rst","functional/backends/jax/standard/elementwise_functions/sinh.rst","functional/backends/jax/standard/elementwise_functions/sqrt.rst","functional/backends/jax/standard/elementwise_functions/tanh.rst","functional/backends/jax/standard/function_and_method_signatures.rst","functional/backends/jax/standard/linear_algebra.rst","functional/backends/jax/standard/linear_algebra/diagonal.rst","functional/backends/jax/standard/linear_algebra/matmul.rst","functional/backends/jax/standard/linear_algebra/slogdet.rst","functional/backends/jax/standard/linear_algebra/svd.rst","functional/backends/jax/standard/linear_algebra/vector_norm.rst","functional/backends/jax/standard/manipulation_functions.rst","functional/backends/jax/standard/manipulation_functions/flip.rst","functional/backends/jax/standard/searching_functions.rst","functional/backends/jax/standard/searching_functions/argmax.rst","functional/backends/jax/standard/set_functions.rst","functional/backends/jax/standard/sorting_functions.rst","functional/backends/jax/standard/sorting_functions/argsort.rst","functional/backends/jax/standard/statistical_functions.rst","functional/backends/jax/standard/statistical_functions/min.rst","functional/backends/jax/standard/utility_functions.rst","functional/backends/jax/standard/utility_functions/all.rst","functional/backends/jax/standard/utility_functions/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/extra.rst","functional/backends/mxnet/extra/device.rst","functional/backends/mxnet/extra/device/Profiler.rst","functional/backends/mxnet/extra/device/dev.rst","functional/backends/mxnet/extra/device/dev_from_str.rst","functional/backends/mxnet/extra/device/dev_to_str.rst","functional/backends/mxnet/extra/device/to_dev.rst","functional/backends/mxnet/extra/general.rst","functional/backends/mxnet/extra/general/abs.rst","functional/backends/mxnet/extra/general/arange.rst","functional/backends/mxnet/extra/general/array.rst","functional/backends/mxnet/extra/general/array_equal.rst","functional/backends/mxnet/extra/general/broadcast_to.rst","functional/backends/mxnet/extra/general/cast.rst","functional/backends/mxnet/extra/general/clip.rst","functional/backends/mxnet/extra/general/compile.rst","functional/backends/mxnet/extra/general/concatenate.rst","functional/backends/mxnet/extra/general/constant_pad.rst","functional/backends/mxnet/extra/general/cross.rst","functional/backends/mxnet/extra/general/cumprod.rst","functional/backends/mxnet/extra/general/dtype.rst","functional/backends/mxnet/extra/general/dtype_bits.rst","functional/backends/mxnet/extra/general/dtype_from_str.rst","functional/backends/mxnet/extra/general/dtype_to_str.rst","functional/backends/mxnet/extra/general/expand_dims.rst","functional/backends/mxnet/extra/general/floor.rst","functional/backends/mxnet/extra/general/floormod.rst","functional/backends/mxnet/extra/general/full.rst","functional/backends/mxnet/extra/general/gather.rst","functional/backends/mxnet/extra/general/gather_nd.rst","functional/backends/mxnet/extra/general/identity.rst","functional/backends/mxnet/extra/general/indices_where.rst","functional/backends/mxnet/extra/general/inplace_decrement.rst","functional/backends/mxnet/extra/general/inplace_increment.rst","functional/backends/mxnet/extra/general/inplace_update.rst","functional/backends/mxnet/extra/general/is_array.rst","functional/backends/mxnet/extra/general/isinf.rst","functional/backends/mxnet/extra/general/linear_resample.rst","functional/backends/mxnet/extra/general/linspace.rst","functional/backends/mxnet/extra/general/logspace.rst","functional/backends/mxnet/extra/general/matmul.rst","functional/backends/mxnet/extra/general/meshgrid.rst","functional/backends/mxnet/extra/general/repeat.rst","functional/backends/mxnet/extra/general/round.rst","functional/backends/mxnet/extra/general/scatter_flat.rst","functional/backends/mxnet/extra/general/scatter_nd.rst","functional/backends/mxnet/extra/general/split.rst","functional/backends/mxnet/extra/general/squeeze.rst","functional/backends/mxnet/extra/general/stack.rst","functional/backends/mxnet/extra/general/tile.rst","functional/backends/mxnet/extra/general/transpose.rst","functional/backends/mxnet/extra/general/unstack.rst","functional/backends/mxnet/extra/general/where.rst","functional/backends/mxnet/extra/general/zero_pad.rst","functional/backends/mxnet/extra/general/zeros_like.rst","functional/backends/mxnet/extra/gradients.rst","functional/backends/mxnet/extra/gradients/execute_with_gradients.rst","functional/backends/mxnet/extra/gradients/is_variable.rst","functional/backends/mxnet/extra/gradients/stop_gradient.rst","functional/backends/mxnet/extra/gradients/variable.rst","functional/backends/mxnet/extra/image.rst","functional/backends/mxnet/extra/image/bilinear_resample.rst","functional/backends/mxnet/extra/image/gradient_image.rst","functional/backends/mxnet/extra/image/stack_images.rst","functional/backends/mxnet/extra/linear_algebra.rst","functional/backends/mxnet/extra/linear_algebra/matrix_norm.rst","functional/backends/mxnet/extra/linear_algebra/pinv.rst","functional/backends/mxnet/extra/linear_algebra/qr.rst","functional/backends/mxnet/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/extra/logic.rst","functional/backends/mxnet/extra/logic/logical_and.rst","functional/backends/mxnet/extra/logic/logical_or.rst","functional/backends/mxnet/extra/math.rst","functional/backends/mxnet/extra/random.rst","functional/backends/mxnet/extra/random/multinomial.rst","functional/backends/mxnet/extra/random/randint.rst","functional/backends/mxnet/extra/random/random_normal.rst","functional/backends/mxnet/extra/random/random_uniform.rst","functional/backends/mxnet/extra/reductions.rst","functional/backends/mxnet/extra/reductions/einsum.rst","functional/backends/mxnet/extra/reductions/reduce_max.rst","functional/backends/mxnet/extra/reductions/reduce_mean.rst","functional/backends/mxnet/extra/reductions/reduce_min.rst","functional/backends/mxnet/extra/reductions/reduce_prod.rst","functional/backends/mxnet/extra/reductions/reduce_std.rst","functional/backends/mxnet/extra/reductions/reduce_sum.rst","functional/backends/mxnet/extra/reductions/reduce_var.rst","functional/backends/mxnet/neural_net.rst","functional/backends/mxnet/neural_net/activations.rst","functional/backends/mxnet/neural_net/activations/gelu.rst","functional/backends/mxnet/neural_net/layers.rst","functional/backends/mxnet/neural_net/layers/conv1d.rst","functional/backends/mxnet/neural_net/layers/conv1d_transpose.rst","functional/backends/mxnet/neural_net/layers/conv2d.rst","functional/backends/mxnet/neural_net/layers/conv2d_transpose.rst","functional/backends/mxnet/neural_net/layers/conv3d.rst","functional/backends/mxnet/neural_net/layers/conv3d_transpose.rst","functional/backends/mxnet/neural_net/layers/depthwise_conv2d.rst","functional/backends/mxnet/standard.rst","functional/backends/mxnet/standard/constants.rst","functional/backends/mxnet/standard/creation_functions.rst","functional/backends/mxnet/standard/creation_functions/empty.rst","functional/backends/mxnet/standard/creation_functions/ones.rst","functional/backends/mxnet/standard/creation_functions/ones_like.rst","functional/backends/mxnet/standard/creation_functions/tril.rst","functional/backends/mxnet/standard/creation_functions/zeros.rst","functional/backends/mxnet/standard/data_type_functions.rst","functional/backends/mxnet/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/standard/data_type_functions/finfo.rst","functional/backends/mxnet/standard/data_type_functions/iinfo.rst","functional/backends/mxnet/standard/data_types.rst","functional/backends/mxnet/standard/elementwise_functions.rst","functional/backends/mxnet/standard/elementwise_functions/acosh.rst","functional/backends/mxnet/standard/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/standard/elementwise_functions/ceil.rst","functional/backends/mxnet/standard/elementwise_functions/isfinite.rst","functional/backends/mxnet/standard/elementwise_functions/isnan.rst","functional/backends/mxnet/standard/elementwise_functions/less.rst","functional/backends/mxnet/standard/elementwise_functions/logical_not.rst","functional/backends/mxnet/standard/elementwise_functions/negative.rst","functional/backends/mxnet/standard/elementwise_functions/sin.rst","functional/backends/mxnet/standard/elementwise_functions/sinh.rst","functional/backends/mxnet/standard/elementwise_functions/sqrt.rst","functional/backends/mxnet/standard/elementwise_functions/tanh.rst","functional/backends/mxnet/standard/function_and_method_signatures.rst","functional/backends/mxnet/standard/linear_algebra.rst","functional/backends/mxnet/standard/linear_algebra/diagonal.rst","functional/backends/mxnet/standard/linear_algebra/slogdet.rst","functional/backends/mxnet/standard/linear_algebra/svd.rst","functional/backends/mxnet/standard/linear_algebra/vector_norm.rst","functional/backends/mxnet/standard/manipulation_functions.rst","functional/backends/mxnet/standard/manipulation_functions/flip.rst","functional/backends/mxnet/standard/searching_functions.rst","functional/backends/mxnet/standard/searching_functions/argmax.rst","functional/backends/mxnet/standard/set_functions.rst","functional/backends/mxnet/standard/sorting_functions.rst","functional/backends/mxnet/standard/sorting_functions/argsort.rst","functional/backends/mxnet/standard/statistical_functions.rst","functional/backends/mxnet/standard/utility_functions.rst","functional/backends/mxnet/standard/utility_functions/all.rst","functional/backends/mxnet/standard/utility_functions/any.rst","functional/backends/numpy.rst","functional/backends/numpy/extra.rst","functional/backends/numpy/extra/device.rst","functional/backends/numpy/extra/device/Profiler.rst","functional/backends/numpy/extra/general.rst","functional/backends/numpy/extra/general/arange.rst","functional/backends/numpy/extra/general/argmin.rst","functional/backends/numpy/extra/general/array.rst","functional/backends/numpy/extra/general/cast.rst","functional/backends/numpy/extra/general/compile.rst","functional/backends/numpy/extra/general/concatenate.rst","functional/backends/numpy/extra/general/cumprod.rst","functional/backends/numpy/extra/general/dtype.rst","functional/backends/numpy/extra/general/dtype_bits.rst","functional/backends/numpy/extra/general/dtype_from_str.rst","functional/backends/numpy/extra/general/dtype_to_str.rst","functional/backends/numpy/extra/general/full.rst","functional/backends/numpy/extra/general/gather.rst","functional/backends/numpy/extra/general/gather_nd.rst","functional/backends/numpy/extra/general/identity.rst","functional/backends/numpy/extra/general/indices_where.rst","functional/backends/numpy/extra/general/inplace_decrement.rst","functional/backends/numpy/extra/general/inplace_increment.rst","functional/backends/numpy/extra/general/inplace_update.rst","functional/backends/numpy/extra/general/is_array.rst","functional/backends/numpy/extra/general/linear_resample.rst","functional/backends/numpy/extra/general/linspace.rst","functional/backends/numpy/extra/general/logspace.rst","functional/backends/numpy/extra/general/one_hot.rst","functional/backends/numpy/extra/general/scatter_flat.rst","functional/backends/numpy/extra/general/scatter_nd.rst","functional/backends/numpy/extra/general/split.rst","functional/backends/numpy/extra/general/squeeze.rst","functional/backends/numpy/extra/general/transpose.rst","functional/backends/numpy/extra/general/unstack.rst","functional/backends/numpy/extra/general/zeros_like.rst","functional/backends/numpy/extra/gradients.rst","functional/backends/numpy/extra/gradients/execute_with_gradients.rst","functional/backends/numpy/extra/gradients/is_variable.rst","functional/backends/numpy/extra/gradients/stop_gradient.rst","functional/backends/numpy/extra/gradients/variable.rst","functional/backends/numpy/extra/image.rst","functional/backends/numpy/extra/image/bilinear_resample.rst","functional/backends/numpy/extra/image/gradient_image.rst","functional/backends/numpy/extra/image/stack_images.rst","functional/backends/numpy/extra/linear_algebra.rst","functional/backends/numpy/extra/linear_algebra/matrix_norm.rst","functional/backends/numpy/extra/linear_algebra/qr.rst","functional/backends/numpy/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/extra/logic.rst","functional/backends/numpy/extra/math.rst","functional/backends/numpy/extra/math/erf.rst","functional/backends/numpy/extra/random.rst","functional/backends/numpy/extra/random/multinomial.rst","functional/backends/numpy/extra/reductions.rst","functional/backends/numpy/extra/reductions/einsum.rst","functional/backends/numpy/extra/reductions/reduce_max.rst","functional/backends/numpy/extra/reductions/reduce_mean.rst","functional/backends/numpy/extra/reductions/reduce_min.rst","functional/backends/numpy/extra/reductions/reduce_prod.rst","functional/backends/numpy/extra/reductions/reduce_sum.rst","functional/backends/numpy/extra/reductions/reduce_var.rst","functional/backends/numpy/neural_net.rst","functional/backends/numpy/neural_net/activations.rst","functional/backends/numpy/neural_net/activations/gelu.rst","functional/backends/numpy/neural_net/activations/softmax.rst","functional/backends/numpy/neural_net/layers.rst","functional/backends/numpy/neural_net/layers/conv1d.rst","functional/backends/numpy/neural_net/layers/conv1d_transpose.rst","functional/backends/numpy/neural_net/layers/conv2d.rst","functional/backends/numpy/neural_net/layers/conv2d_transpose.rst","functional/backends/numpy/neural_net/layers/conv3d.rst","functional/backends/numpy/neural_net/layers/conv3d_transpose.rst","functional/backends/numpy/neural_net/layers/depthwise_conv2d.rst","functional/backends/numpy/standard.rst","functional/backends/numpy/standard/constants.rst","functional/backends/numpy/standard/creation_functions.rst","functional/backends/numpy/standard/creation_functions/empty.rst","functional/backends/numpy/standard/creation_functions/ones.rst","functional/backends/numpy/standard/creation_functions/ones_like.rst","functional/backends/numpy/standard/creation_functions/tril.rst","functional/backends/numpy/standard/creation_functions/zeros.rst","functional/backends/numpy/standard/data_type_functions.rst","functional/backends/numpy/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/standard/data_type_functions/finfo.rst","functional/backends/numpy/standard/data_type_functions/iinfo.rst","functional/backends/numpy/standard/data_types.rst","functional/backends/numpy/standard/elementwise_functions.rst","functional/backends/numpy/standard/elementwise_functions/acosh.rst","functional/backends/numpy/standard/elementwise_functions/asinh.rst","functional/backends/numpy/standard/elementwise_functions/bitwise_and.rst","functional/backends/numpy/standard/elementwise_functions/ceil.rst","functional/backends/numpy/standard/elementwise_functions/cos.rst","functional/backends/numpy/standard/elementwise_functions/cosh.rst","functional/backends/numpy/standard/elementwise_functions/equal.rst","functional/backends/numpy/standard/elementwise_functions/isfinite.rst","functional/backends/numpy/standard/elementwise_functions/isnan.rst","functional/backends/numpy/standard/elementwise_functions/less.rst","functional/backends/numpy/standard/elementwise_functions/less_equal.rst","functional/backends/numpy/standard/elementwise_functions/log10.rst","functional/backends/numpy/standard/elementwise_functions/log1p.rst","functional/backends/numpy/standard/elementwise_functions/log2.rst","functional/backends/numpy/standard/elementwise_functions/logical_not.rst","functional/backends/numpy/standard/elementwise_functions/logical_or.rst","functional/backends/numpy/standard/elementwise_functions/negative.rst","functional/backends/numpy/standard/elementwise_functions/sin.rst","functional/backends/numpy/standard/elementwise_functions/sinh.rst","functional/backends/numpy/standard/elementwise_functions/sqrt.rst","functional/backends/numpy/standard/elementwise_functions/tanh.rst","functional/backends/numpy/standard/function_and_method_signatures.rst","functional/backends/numpy/standard/linear_algebra.rst","functional/backends/numpy/standard/linear_algebra/diagonal.rst","functional/backends/numpy/standard/linear_algebra/matmul.rst","functional/backends/numpy/standard/linear_algebra/slogdet.rst","functional/backends/numpy/standard/linear_algebra/svd.rst","functional/backends/numpy/standard/linear_algebra/vector_norm.rst","functional/backends/numpy/standard/manipulation_functions.rst","functional/backends/numpy/standard/manipulation_functions/flip.rst","functional/backends/numpy/standard/searching_functions.rst","functional/backends/numpy/standard/searching_functions/argmax.rst","functional/backends/numpy/standard/set_functions.rst","functional/backends/numpy/standard/sorting_functions.rst","functional/backends/numpy/standard/sorting_functions/argsort.rst","functional/backends/numpy/standard/statistical_functions.rst","functional/backends/numpy/standard/statistical_functions/min.rst","functional/backends/numpy/standard/utility_functions.rst","functional/backends/numpy/standard/utility_functions/all.rst","functional/backends/numpy/standard/utility_functions/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/extra.rst","functional/backends/tensorflow/extra/device.rst","functional/backends/tensorflow/extra/device/Profiler.rst","functional/backends/tensorflow/extra/device/dev.rst","functional/backends/tensorflow/extra/device/dev_from_str.rst","functional/backends/tensorflow/extra/device/dev_to_str.rst","functional/backends/tensorflow/extra/device/to_dev.rst","functional/backends/tensorflow/extra/device/tpu_is_available.rst","functional/backends/tensorflow/extra/general.rst","functional/backends/tensorflow/extra/general/abs.rst","functional/backends/tensorflow/extra/general/arange.rst","functional/backends/tensorflow/extra/general/argmin.rst","functional/backends/tensorflow/extra/general/array.rst","functional/backends/tensorflow/extra/general/cast.rst","functional/backends/tensorflow/extra/general/concatenate.rst","functional/backends/tensorflow/extra/general/constant_pad.rst","functional/backends/tensorflow/extra/general/dtype.rst","functional/backends/tensorflow/extra/general/dtype_bits.rst","functional/backends/tensorflow/extra/general/dtype_from_str.rst","functional/backends/tensorflow/extra/general/dtype_to_str.rst","functional/backends/tensorflow/extra/general/full.rst","functional/backends/tensorflow/extra/general/gather.rst","functional/backends/tensorflow/extra/general/gather_nd.rst","functional/backends/tensorflow/extra/general/identity.rst","functional/backends/tensorflow/extra/general/inplace_decrement.rst","functional/backends/tensorflow/extra/general/inplace_increment.rst","functional/backends/tensorflow/extra/general/inplace_update.rst","functional/backends/tensorflow/extra/general/is_array.rst","functional/backends/tensorflow/extra/general/isinf.rst","functional/backends/tensorflow/extra/general/linear_resample.rst","functional/backends/tensorflow/extra/general/linspace.rst","functional/backends/tensorflow/extra/general/logspace.rst","functional/backends/tensorflow/extra/general/one_hot.rst","functional/backends/tensorflow/extra/general/scatter_flat.rst","functional/backends/tensorflow/extra/general/scatter_nd.rst","functional/backends/tensorflow/extra/general/split.rst","functional/backends/tensorflow/extra/general/squeeze.rst","functional/backends/tensorflow/extra/general/swapaxes.rst","functional/backends/tensorflow/extra/general/tile.rst","functional/backends/tensorflow/extra/general/unstack.rst","functional/backends/tensorflow/extra/general/zero_pad.rst","functional/backends/tensorflow/extra/general/zeros_like.rst","functional/backends/tensorflow/extra/gradients.rst","functional/backends/tensorflow/extra/gradients/execute_with_gradients.rst","functional/backends/tensorflow/extra/gradients/is_variable.rst","functional/backends/tensorflow/extra/gradients/stop_gradient.rst","functional/backends/tensorflow/extra/gradients/variable.rst","functional/backends/tensorflow/extra/image.rst","functional/backends/tensorflow/extra/image/bilinear_resample.rst","functional/backends/tensorflow/extra/image/gradient_image.rst","functional/backends/tensorflow/extra/image/stack_images.rst","functional/backends/tensorflow/extra/linear_algebra.rst","functional/backends/tensorflow/extra/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/extra/linear_algebra/qr.rst","functional/backends/tensorflow/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/extra/logic.rst","functional/backends/tensorflow/extra/math.rst","functional/backends/tensorflow/extra/random.rst","functional/backends/tensorflow/extra/random/multinomial.rst","functional/backends/tensorflow/extra/random/randint.rst","functional/backends/tensorflow/extra/random/random_normal.rst","functional/backends/tensorflow/extra/random/random_uniform.rst","functional/backends/tensorflow/extra/reductions.rst","functional/backends/tensorflow/extra/reductions/einsum.rst","functional/backends/tensorflow/extra/reductions/reduce_max.rst","functional/backends/tensorflow/extra/reductions/reduce_mean.rst","functional/backends/tensorflow/extra/reductions/reduce_min.rst","functional/backends/tensorflow/extra/reductions/reduce_prod.rst","functional/backends/tensorflow/extra/reductions/reduce_sum.rst","functional/backends/tensorflow/extra/reductions/reduce_var.rst","functional/backends/tensorflow/neural_net.rst","functional/backends/tensorflow/neural_net/activations.rst","functional/backends/tensorflow/neural_net/layers.rst","functional/backends/tensorflow/neural_net/layers/conv2d.rst","functional/backends/tensorflow/neural_net/layers/conv3d.rst","functional/backends/tensorflow/neural_net/layers/depthwise_conv2d.rst","functional/backends/tensorflow/standard.rst","functional/backends/tensorflow/standard/constants.rst","functional/backends/tensorflow/standard/creation_functions.rst","functional/backends/tensorflow/standard/creation_functions/empty.rst","functional/backends/tensorflow/standard/creation_functions/ones.rst","functional/backends/tensorflow/standard/creation_functions/ones_like.rst","functional/backends/tensorflow/standard/creation_functions/tril.rst","functional/backends/tensorflow/standard/creation_functions/zeros.rst","functional/backends/tensorflow/standard/data_type_functions.rst","functional/backends/tensorflow/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/standard/data_type_functions/finfo.rst","functional/backends/tensorflow/standard/data_type_functions/iinfo.rst","functional/backends/tensorflow/standard/data_types.rst","functional/backends/tensorflow/standard/elementwise_functions.rst","functional/backends/tensorflow/standard/elementwise_functions/acosh.rst","functional/backends/tensorflow/standard/elementwise_functions/asinh.rst","functional/backends/tensorflow/standard/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/standard/elementwise_functions/ceil.rst","functional/backends/tensorflow/standard/elementwise_functions/cos.rst","functional/backends/tensorflow/standard/elementwise_functions/cosh.rst","functional/backends/tensorflow/standard/elementwise_functions/equal.rst","functional/backends/tensorflow/standard/elementwise_functions/isfinite.rst","functional/backends/tensorflow/standard/elementwise_functions/isnan.rst","functional/backends/tensorflow/standard/elementwise_functions/less.rst","functional/backends/tensorflow/standard/elementwise_functions/less_equal.rst","functional/backends/tensorflow/standard/elementwise_functions/log10.rst","functional/backends/tensorflow/standard/elementwise_functions/log1p.rst","functional/backends/tensorflow/standard/elementwise_functions/log2.rst","functional/backends/tensorflow/standard/elementwise_functions/logical_not.rst","functional/backends/tensorflow/standard/elementwise_functions/logical_or.rst","functional/backends/tensorflow/standard/elementwise_functions/negative.rst","functional/backends/tensorflow/standard/elementwise_functions/sin.rst","functional/backends/tensorflow/standard/elementwise_functions/sinh.rst","functional/backends/tensorflow/standard/elementwise_functions/sqrt.rst","functional/backends/tensorflow/standard/elementwise_functions/tanh.rst","functional/backends/tensorflow/standard/function_and_method_signatures.rst","functional/backends/tensorflow/standard/linear_algebra.rst","functional/backends/tensorflow/standard/linear_algebra/diagonal.rst","functional/backends/tensorflow/standard/linear_algebra/matmul.rst","functional/backends/tensorflow/standard/linear_algebra/slogdet.rst","functional/backends/tensorflow/standard/linear_algebra/svd.rst","functional/backends/tensorflow/standard/linear_algebra/vector_norm.rst","functional/backends/tensorflow/standard/manipulation_functions.rst","functional/backends/tensorflow/standard/manipulation_functions/flip.rst","functional/backends/tensorflow/standard/searching_functions.rst","functional/backends/tensorflow/standard/searching_functions/argmax.rst","functional/backends/tensorflow/standard/set_functions.rst","functional/backends/tensorflow/standard/sorting_functions.rst","functional/backends/tensorflow/standard/sorting_functions/argsort.rst","functional/backends/tensorflow/standard/statistical_functions.rst","functional/backends/tensorflow/standard/statistical_functions/min.rst","functional/backends/tensorflow/standard/utility_functions.rst","functional/backends/tensorflow/standard/utility_functions/all.rst","functional/backends/tensorflow/standard/utility_functions/any.rst","functional/backends/torch.rst","functional/backends/torch/extra.rst","functional/backends/torch/extra/device.rst","functional/backends/torch/extra/device/Profiler.rst","functional/backends/torch/extra/device/clear_mem_on_dev.rst","functional/backends/torch/extra/device/dev.rst","functional/backends/torch/extra/device/dev_from_str.rst","functional/backends/torch/extra/device/dev_to_str.rst","functional/backends/torch/extra/device/to_dev.rst","functional/backends/torch/extra/device/tpu_is_available.rst","functional/backends/torch/extra/general.rst","functional/backends/torch/extra/general/abs.rst","functional/backends/torch/extra/general/arange.rst","functional/backends/torch/extra/general/argmin.rst","functional/backends/torch/extra/general/array.rst","functional/backends/torch/extra/general/array_equal.rst","functional/backends/torch/extra/general/broadcast_to.rst","functional/backends/torch/extra/general/cast.rst","functional/backends/torch/extra/general/clip.rst","functional/backends/torch/extra/general/compile.rst","functional/backends/torch/extra/general/concatenate.rst","functional/backends/torch/extra/general/constant_pad.rst","functional/backends/torch/extra/general/container_types.rst","functional/backends/torch/extra/general/copy_array.rst","functional/backends/torch/extra/general/cross.rst","functional/backends/torch/extra/general/cumprod.rst","functional/backends/torch/extra/general/cumsum.rst","functional/backends/torch/extra/general/current_framework_str.rst","functional/backends/torch/extra/general/dtype.rst","functional/backends/torch/extra/general/dtype_bits.rst","functional/backends/torch/extra/general/dtype_from_str.rst","functional/backends/torch/extra/general/dtype_to_str.rst","functional/backends/torch/extra/general/expand_dims.rst","functional/backends/torch/extra/general/floor.rst","functional/backends/torch/extra/general/floormod.rst","functional/backends/torch/extra/general/full.rst","functional/backends/torch/extra/general/gather.rst","functional/backends/torch/extra/general/gather_nd.rst","functional/backends/torch/extra/general/get_num_dims.rst","functional/backends/torch/extra/general/identity.rst","functional/backends/torch/extra/general/indices_where.rst","functional/backends/torch/extra/general/inplace_decrement.rst","functional/backends/torch/extra/general/inplace_increment.rst","functional/backends/torch/extra/general/inplace_update.rst","functional/backends/torch/extra/general/is_array.rst","functional/backends/torch/extra/general/isinf.rst","functional/backends/torch/extra/general/linear_resample.rst","functional/backends/torch/extra/general/linspace.rst","functional/backends/torch/extra/general/logspace.rst","functional/backends/torch/extra/general/maximum.rst","functional/backends/torch/extra/general/meshgrid.rst","functional/backends/torch/extra/general/minimum.rst","functional/backends/torch/extra/general/multiprocessing.rst","functional/backends/torch/extra/general/one_hot.rst","functional/backends/torch/extra/general/repeat.rst","functional/backends/torch/extra/general/reshape.rst","functional/backends/torch/extra/general/round.rst","functional/backends/torch/extra/general/scatter_flat.rst","functional/backends/torch/extra/general/scatter_nd.rst","functional/backends/torch/extra/general/shape.rst","functional/backends/torch/extra/general/split.rst","functional/backends/torch/extra/general/squeeze.rst","functional/backends/torch/extra/general/stack.rst","functional/backends/torch/extra/general/swapaxes.rst","functional/backends/torch/extra/general/tile.rst","functional/backends/torch/extra/general/to_list.rst","functional/backends/torch/extra/general/to_numpy.rst","functional/backends/torch/extra/general/to_scalar.rst","functional/backends/torch/extra/general/transpose.rst","functional/backends/torch/extra/general/unstack.rst","functional/backends/torch/extra/general/where.rst","functional/backends/torch/extra/general/zero_pad.rst","functional/backends/torch/extra/general/zeros_like.rst","functional/backends/torch/extra/gradients.rst","functional/backends/torch/extra/gradients/execute_with_gradients.rst","functional/backends/torch/extra/gradients/is_variable.rst","functional/backends/torch/extra/gradients/stop_gradient.rst","functional/backends/torch/extra/gradients/variable.rst","functional/backends/torch/extra/gradients/variable_data.rst","functional/backends/torch/extra/image.rst","functional/backends/torch/extra/image/bilinear_resample.rst","functional/backends/torch/extra/image/gradient_image.rst","functional/backends/torch/extra/image/stack_images.rst","functional/backends/torch/extra/linear_algebra.rst","functional/backends/torch/extra/linear_algebra/cholesky.rst","functional/backends/torch/extra/linear_algebra/inv.rst","functional/backends/torch/extra/linear_algebra/matrix_norm.rst","functional/backends/torch/extra/linear_algebra/pinv.rst","functional/backends/torch/extra/linear_algebra/qr.rst","functional/backends/torch/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/extra/logic.rst","functional/backends/torch/extra/logic/logical_and.rst","functional/backends/torch/extra/logic/logical_or.rst","functional/backends/torch/extra/math.rst","functional/backends/torch/extra/math/acos.rst","functional/backends/torch/extra/math/asin.rst","functional/backends/torch/extra/math/atan.rst","functional/backends/torch/extra/math/atan2.rst","functional/backends/torch/extra/math/atanh.rst","functional/backends/torch/extra/math/cosh.rst","functional/backends/torch/extra/math/erf.rst","functional/backends/torch/extra/math/exp.rst","functional/backends/torch/extra/math/log.rst","functional/backends/torch/extra/math/tan.rst","functional/backends/torch/extra/random.rst","functional/backends/torch/extra/random/multinomial.rst","functional/backends/torch/extra/random/randint.rst","functional/backends/torch/extra/random/random_normal.rst","functional/backends/torch/extra/random/random_uniform.rst","functional/backends/torch/extra/random/seed.rst","functional/backends/torch/extra/random/shuffle.rst","functional/backends/torch/extra/reductions.rst","functional/backends/torch/extra/reductions/einsum.rst","functional/backends/torch/extra/reductions/reduce_max.rst","functional/backends/torch/extra/reductions/reduce_mean.rst","functional/backends/torch/extra/reductions/reduce_min.rst","functional/backends/torch/extra/reductions/reduce_prod.rst","functional/backends/torch/extra/reductions/reduce_sum.rst","functional/backends/torch/extra/reductions/reduce_var.rst","functional/backends/torch/neural_net.rst","functional/backends/torch/neural_net/activations.rst","functional/backends/torch/neural_net/activations/gelu.rst","functional/backends/torch/neural_net/activations/leaky_relu.rst","functional/backends/torch/neural_net/activations/relu.rst","functional/backends/torch/neural_net/activations/sigmoid.rst","functional/backends/torch/neural_net/activations/softmax.rst","functional/backends/torch/neural_net/activations/softplus.rst","functional/backends/torch/neural_net/activations/tanh.rst","functional/backends/torch/neural_net/converters.rst","functional/backends/torch/neural_net/converters/IvyModule.rst","functional/backends/torch/neural_net/converters/to_ivy_module.rst","functional/backends/torch/neural_net/layers.rst","functional/backends/torch/neural_net/layers/conv1d.rst","functional/backends/torch/neural_net/layers/conv1d_transpose.rst","functional/backends/torch/neural_net/layers/conv2d.rst","functional/backends/torch/neural_net/layers/conv2d_transpose.rst","functional/backends/torch/neural_net/layers/conv3d.rst","functional/backends/torch/neural_net/layers/conv3d_transpose.rst","functional/backends/torch/neural_net/layers/depthwise_conv2d.rst","functional/backends/torch/standard.rst","functional/backends/torch/standard/constants.rst","functional/backends/torch/standard/creation_functions.rst","functional/backends/torch/standard/creation_functions/empty.rst","functional/backends/torch/standard/creation_functions/ones.rst","functional/backends/torch/standard/creation_functions/ones_like.rst","functional/backends/torch/standard/creation_functions/tril.rst","functional/backends/torch/standard/creation_functions/zeros.rst","functional/backends/torch/standard/data_type_functions.rst","functional/backends/torch/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/standard/data_type_functions/finfo.rst","functional/backends/torch/standard/data_type_functions/iinfo.rst","functional/backends/torch/standard/data_types.rst","functional/backends/torch/standard/elementwise_functions.rst","functional/backends/torch/standard/elementwise_functions/acosh.rst","functional/backends/torch/standard/elementwise_functions/asinh.rst","functional/backends/torch/standard/elementwise_functions/bitwise_and.rst","functional/backends/torch/standard/elementwise_functions/ceil.rst","functional/backends/torch/standard/elementwise_functions/cos.rst","functional/backends/torch/standard/elementwise_functions/cosh.rst","functional/backends/torch/standard/elementwise_functions/equal.rst","functional/backends/torch/standard/elementwise_functions/isfinite.rst","functional/backends/torch/standard/elementwise_functions/isnan.rst","functional/backends/torch/standard/elementwise_functions/less.rst","functional/backends/torch/standard/elementwise_functions/less_equal.rst","functional/backends/torch/standard/elementwise_functions/log10.rst","functional/backends/torch/standard/elementwise_functions/log1p.rst","functional/backends/torch/standard/elementwise_functions/log2.rst","functional/backends/torch/standard/elementwise_functions/logical_not.rst","functional/backends/torch/standard/elementwise_functions/logical_or.rst","functional/backends/torch/standard/elementwise_functions/negative.rst","functional/backends/torch/standard/elementwise_functions/sin.rst","functional/backends/torch/standard/elementwise_functions/sinh.rst","functional/backends/torch/standard/elementwise_functions/sqrt.rst","functional/backends/torch/standard/elementwise_functions/tanh.rst","functional/backends/torch/standard/function_and_method_signatures.rst","functional/backends/torch/standard/linear_algebra.rst","functional/backends/torch/standard/linear_algebra/diagonal.rst","functional/backends/torch/standard/linear_algebra/matmul.rst","functional/backends/torch/standard/linear_algebra/slogdet.rst","functional/backends/torch/standard/linear_algebra/svd.rst","functional/backends/torch/standard/linear_algebra/vector_norm.rst","functional/backends/torch/standard/manipulation_functions.rst","functional/backends/torch/standard/manipulation_functions/flip.rst","functional/backends/torch/standard/searching_functions.rst","functional/backends/torch/standard/searching_functions/argmax.rst","functional/backends/torch/standard/set_functions.rst","functional/backends/torch/standard/sorting_functions.rst","functional/backends/torch/standard/sorting_functions/argsort.rst","functional/backends/torch/standard/statistical_functions.rst","functional/backends/torch/standard/statistical_functions/min.rst","functional/backends/torch/standard/utility_functions.rst","functional/backends/torch/standard/utility_functions/all.rst","functional/backends/torch/standard/utility_functions/any.rst","functional/ivy.rst","functional/ivy/extra.rst","functional/ivy/extra/compilation.rst","functional/ivy/extra/compilation/compile.rst","functional/ivy/extra/device.rst","functional/ivy/extra/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/device/DevClonedItem.rst","functional/ivy/extra/device/DevClonedIter.rst","functional/ivy/extra/device/DevClonedNest.rst","functional/ivy/extra/device/DevDistItem.rst","functional/ivy/extra/device/DevDistIter.rst","functional/ivy/extra/device/DevDistNest.rst","functional/ivy/extra/device/DevManager:\n\n    def __init__.rst","functional/ivy/extra/device/DevMapper.rst","functional/ivy/extra/device/DevMapperMultiProc.rst","functional/ivy/extra/device/MultiDev:\n\n    def __init__.rst","functional/ivy/extra/device/MultiDevItem.rst","functional/ivy/extra/device/MultiDevIter.rst","functional/ivy/extra/device/MultiDevNest.rst","functional/ivy/extra/device/Profiler.rst","functional/ivy/extra/device/clear_mem_on_dev.rst","functional/ivy/extra/device/default_device.rst","functional/ivy/extra/device/dev.rst","functional/ivy/extra/device/dev_clone.rst","functional/ivy/extra/device/dev_clone_array.rst","functional/ivy/extra/device/dev_clone_iter.rst","functional/ivy/extra/device/dev_clone_nest.rst","functional/ivy/extra/device/dev_dist.rst","functional/ivy/extra/device/dev_dist_array.rst","functional/ivy/extra/device/dev_dist_iter.rst","functional/ivy/extra/device/dev_dist_nest.rst","functional/ivy/extra/device/dev_from_str.rst","functional/ivy/extra/device/dev_to_str.rst","functional/ivy/extra/device/dev_unify.rst","functional/ivy/extra/device/dev_unify_array.rst","functional/ivy/extra/device/dev_unify_iter.rst","functional/ivy/extra/device/dev_unify_nest.rst","functional/ivy/extra/device/dev_util.rst","functional/ivy/extra/device/get_all_arrays_on_dev.rst","functional/ivy/extra/device/gpu_is_available.rst","functional/ivy/extra/device/num_arrays_on_dev.rst","functional/ivy/extra/device/num_cpu_cores.rst","functional/ivy/extra/device/num_gpus.rst","functional/ivy/extra/device/percent_used_mem_on_dev.rst","functional/ivy/extra/device/print_all_arrays_on_dev.rst","functional/ivy/extra/device/set_default_device.rst","functional/ivy/extra/device/set_split_factor.rst","functional/ivy/extra/device/split_factor.rst","functional/ivy/extra/device/split_func_call.rst","functional/ivy/extra/device/to_dev.rst","functional/ivy/extra/device/total_mem_on_dev.rst","functional/ivy/extra/device/tpu_is_available.rst","functional/ivy/extra/device/unset_default_device.rst","functional/ivy/extra/device/used_mem_on_dev.rst","functional/ivy/extra/dtype.rst","functional/ivy/extra/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/cast.rst","functional/ivy/extra/dtype/closest_valid_dtype.rst","functional/ivy/extra/dtype/convert_dtype.rst","functional/ivy/extra/dtype/default_dtype.rst","functional/ivy/extra/dtype/default_float_dtype.rst","functional/ivy/extra/dtype/default_int_dtype.rst","functional/ivy/extra/dtype/dtype.rst","functional/ivy/extra/dtype/dtype_bits.rst","functional/ivy/extra/dtype/dtype_from_str.rst","functional/ivy/extra/dtype/dtype_to_str.rst","functional/ivy/extra/dtype/invalid_dtype.rst","functional/ivy/extra/dtype/is_float_dtype.rst","functional/ivy/extra/dtype/is_int_dtype.rst","functional/ivy/extra/dtype/set_default_dtype.rst","functional/ivy/extra/dtype/set_default_float_dtype.rst","functional/ivy/extra/dtype/set_default_int_dtype.rst","functional/ivy/extra/dtype/unset_default_dtype.rst","functional/ivy/extra/dtype/unset_default_float_dtype.rst","functional/ivy/extra/dtype/unset_default_int_dtype.rst","functional/ivy/extra/dtype/valid_dtype.rst","functional/ivy/extra/general.rst","functional/ivy/extra/general/abs.rst","functional/ivy/extra/general/all_equal.rst","functional/ivy/extra/general/arange.rst","functional/ivy/extra/general/arg_names.rst","functional/ivy/extra/general/argmin.rst","functional/ivy/extra/general/array.rst","functional/ivy/extra/general/array_equal.rst","functional/ivy/extra/general/arrays_equal.rst","functional/ivy/extra/general/assert_supports_inplace.rst","functional/ivy/extra/general/broadcast_to.rst","functional/ivy/extra/general/cache_fn.rst","functional/ivy/extra/general/clip.rst","functional/ivy/extra/general/clip_matrix_norm.rst","functional/ivy/extra/general/clip_vector_norm.rst","functional/ivy/extra/general/concatenate.rst","functional/ivy/extra/general/constant_pad.rst","functional/ivy/extra/general/container_types.rst","functional/ivy/extra/general/copy_array.rst","functional/ivy/extra/general/cross.rst","functional/ivy/extra/general/cumprod.rst","functional/ivy/extra/general/cumsum.rst","functional/ivy/extra/general/current_framework_str.rst","functional/ivy/extra/general/default.rst","functional/ivy/extra/general/einops_rearrange.rst","functional/ivy/extra/general/einops_reduce.rst","functional/ivy/extra/general/einops_repeat.rst","functional/ivy/extra/general/equal.rst","functional/ivy/extra/general/exists.rst","functional/ivy/extra/general/expand_dims.rst","functional/ivy/extra/general/floor.rst","functional/ivy/extra/general/floormod.rst","functional/ivy/extra/general/fourier_encode.rst","functional/ivy/extra/general/full.rst","functional/ivy/extra/general/gather.rst","functional/ivy/extra/general/gather_nd.rst","functional/ivy/extra/general/get_all_arrays_in_memory.rst","functional/ivy/extra/general/get_min_base.rst","functional/ivy/extra/general/get_min_denominator.rst","functional/ivy/extra/general/get_num_dims.rst","functional/ivy/extra/general/get_referrers_recursive.rst","functional/ivy/extra/general/has_nans.rst","functional/ivy/extra/general/identity.rst","functional/ivy/extra/general/indices_where.rst","functional/ivy/extra/general/inplace_arrays_supported.rst","functional/ivy/extra/general/inplace_decrement.rst","functional/ivy/extra/general/inplace_increment.rst","functional/ivy/extra/general/inplace_update.rst","functional/ivy/extra/general/inplace_variables_supported.rst","functional/ivy/extra/general/is_array.rst","functional/ivy/extra/general/isinf.rst","functional/ivy/extra/general/linear_resample.rst","functional/ivy/extra/general/linspace.rst","functional/ivy/extra/general/logspace.rst","functional/ivy/extra/general/match_kwargs.rst","functional/ivy/extra/general/matmul.rst","functional/ivy/extra/general/maximum.rst","functional/ivy/extra/general/meshgrid.rst","functional/ivy/extra/general/minimum.rst","functional/ivy/extra/general/multiprocessing.rst","functional/ivy/extra/general/num_arrays_in_memory.rst","functional/ivy/extra/general/one_hot.rst","functional/ivy/extra/general/ones.rst","functional/ivy/extra/general/print_all_arrays_in_memory.rst","functional/ivy/extra/general/queue_timeout.rst","functional/ivy/extra/general/repeat.rst","functional/ivy/extra/general/reshape.rst","functional/ivy/extra/general/round.rst","functional/ivy/extra/general/scatter_flat.rst","functional/ivy/extra/general/scatter_nd.rst","functional/ivy/extra/general/set_min_base.rst","functional/ivy/extra/general/set_min_denominator.rst","functional/ivy/extra/general/set_queue_timeout.rst","functional/ivy/extra/general/set_tmp_dir.rst","functional/ivy/extra/general/shape.rst","functional/ivy/extra/general/shape_to_tuple.rst","functional/ivy/extra/general/split.rst","functional/ivy/extra/general/squeeze.rst","functional/ivy/extra/general/stable_divide.rst","functional/ivy/extra/general/stable_pow.rst","functional/ivy/extra/general/stack.rst","functional/ivy/extra/general/supports_inplace.rst","functional/ivy/extra/general/swapaxes.rst","functional/ivy/extra/general/tile.rst","functional/ivy/extra/general/tmp_dir.rst","functional/ivy/extra/general/to_list.rst","functional/ivy/extra/general/to_numpy.rst","functional/ivy/extra/general/to_scalar.rst","functional/ivy/extra/general/transpose.rst","functional/ivy/extra/general/try_else_none.rst","functional/ivy/extra/general/unstack.rst","functional/ivy/extra/general/value_is_nan.rst","functional/ivy/extra/general/where.rst","functional/ivy/extra/general/zero_pad.rst","functional/ivy/extra/general/zeros_like.rst","functional/ivy/extra/gradients.rst","functional/ivy/extra/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/gradients/adam_step.rst","functional/ivy/extra/gradients/adam_update.rst","functional/ivy/extra/gradients/execute_with_gradients.rst","functional/ivy/extra/gradients/gradient_descent_update.rst","functional/ivy/extra/gradients/is_variable.rst","functional/ivy/extra/gradients/lamb_update.rst","functional/ivy/extra/gradients/lars_update.rst","functional/ivy/extra/gradients/optimizer_update.rst","functional/ivy/extra/gradients/set_with_grads.rst","functional/ivy/extra/gradients/stop_gradient.rst","functional/ivy/extra/gradients/unset_with_grads.rst","functional/ivy/extra/gradients/variable.rst","functional/ivy/extra/gradients/variable_data.rst","functional/ivy/extra/gradients/with_grads.rst","functional/ivy/extra/image.rst","functional/ivy/extra/image/bilinear_resample.rst","functional/ivy/extra/image/float_img_to_uint8_img.rst","functional/ivy/extra/image/gradient_image.rst","functional/ivy/extra/image/random_crop.rst","functional/ivy/extra/image/stack_images.rst","functional/ivy/extra/image/uint8_img_to_float_img.rst","functional/ivy/extra/linalg.rst","functional/ivy/extra/linalg/cholesky.rst","functional/ivy/extra/linalg/inv.rst","functional/ivy/extra/linalg/matrix_norm.rst","functional/ivy/extra/linalg/pinv.rst","functional/ivy/extra/linalg/qr.rst","functional/ivy/extra/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/extra/logic.rst","functional/ivy/extra/logic/logical_and.rst","functional/ivy/extra/logic/logical_or.rst","functional/ivy/extra/math.rst","functional/ivy/extra/math/acos.rst","functional/ivy/extra/math/asin.rst","functional/ivy/extra/math/atan.rst","functional/ivy/extra/math/atan2.rst","functional/ivy/extra/math/atanh.rst","functional/ivy/extra/math/cosh.rst","functional/ivy/extra/math/divide.rst","functional/ivy/extra/math/erf.rst","functional/ivy/extra/math/exp.rst","functional/ivy/extra/math/log.rst","functional/ivy/extra/math/tan.rst","functional/ivy/extra/math/tanh.rst","functional/ivy/extra/meta.rst","functional/ivy/extra/meta/fomaml_step.rst","functional/ivy/extra/meta/maml_step.rst","functional/ivy/extra/meta/reptile_step.rst","functional/ivy/extra/multi_node.rst","functional/ivy/extra/multi_node/ClonedItem.rst","functional/ivy/extra/multi_node/ClonedIter.rst","functional/ivy/extra/multi_node/ClonedNest.rst","functional/ivy/extra/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/extra/multi_node/MultiNodeItem.rst","functional/ivy/extra/multi_node/MultiNodeIter.rst","functional/ivy/extra/multi_node/MultiNodeNest.rst","functional/ivy/extra/multi_node/NodeDistItem.rst","functional/ivy/extra/multi_node/NodeDistIter.rst","functional/ivy/extra/multi_node/NodeDistNest.rst","functional/ivy/extra/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/extra/multi_node/NodeMapper.rst","functional/ivy/extra/multi_node/NodeMapperMultiProc.rst","functional/ivy/extra/multi_node/Profiler.rst","functional/ivy/extra/multi_node/clone.rst","functional/ivy/extra/multi_node/clone_array.rst","functional/ivy/extra/multi_node/clone_iter.rst","functional/ivy/extra/multi_node/clone_nest.rst","functional/ivy/extra/multi_node/default_node.rst","functional/ivy/extra/multi_node/distribute_nest.rst","functional/ivy/extra/multi_node/gpu_is_available.rst","functional/ivy/extra/multi_node/node.rst","functional/ivy/extra/multi_node/node_dist.rst","functional/ivy/extra/multi_node/node_dist_array.rst","functional/ivy/extra/multi_node/node_dist_iter.rst","functional/ivy/extra/multi_node/node_str.rst","functional/ivy/extra/multi_node/node_to_str.rst","functional/ivy/extra/multi_node/node_util.rst","functional/ivy/extra/multi_node/num_gpus.rst","functional/ivy/extra/multi_node/percent_used_mem_on_node.rst","functional/ivy/extra/multi_node/set_default_node.rst","functional/ivy/extra/multi_node/set_split_factor.rst","functional/ivy/extra/multi_node/split_factor.rst","functional/ivy/extra/multi_node/split_func_call.rst","functional/ivy/extra/multi_node/str_to_node.rst","functional/ivy/extra/multi_node/to_node.rst","functional/ivy/extra/multi_node/total_mem_on_node.rst","functional/ivy/extra/multi_node/tpu_is_available.rst","functional/ivy/extra/multi_node/unify.rst","functional/ivy/extra/multi_node/unify_array.rst","functional/ivy/extra/multi_node/unify_iter.rst","functional/ivy/extra/multi_node/unify_nest.rst","functional/ivy/extra/multi_node/used_mem_on_node.rst","functional/ivy/extra/nest.rst","functional/ivy/extra/nest/all_nested_indices.rst","functional/ivy/extra/nest/copy_nest.rst","functional/ivy/extra/nest/index_nest.rst","functional/ivy/extra/nest/map.rst","functional/ivy/extra/nest/map_nest_at_index.rst","functional/ivy/extra/nest/map_nest_at_indices.rst","functional/ivy/extra/nest/multi_index_nest.rst","functional/ivy/extra/nest/nested_indices_where.rst","functional/ivy/extra/nest/nested_map.rst","functional/ivy/extra/nest/set_nest_at_index.rst","functional/ivy/extra/nest/set_nest_at_indices.rst","functional/ivy/extra/random.rst","functional/ivy/extra/random/multinomial.rst","functional/ivy/extra/random/randint.rst","functional/ivy/extra/random/random_normal.rst","functional/ivy/extra/random/random_uniform.rst","functional/ivy/extra/random/seed.rst","functional/ivy/extra/random/shuffle.rst","functional/ivy/extra/reductions.rst","functional/ivy/extra/reductions/einsum.rst","functional/ivy/extra/reductions/reduce_max.rst","functional/ivy/extra/reductions/reduce_mean.rst","functional/ivy/extra/reductions/reduce_min.rst","functional/ivy/extra/reductions/reduce_prod.rst","functional/ivy/extra/reductions/reduce_std.rst","functional/ivy/extra/reductions/reduce_sum.rst","functional/ivy/extra/reductions/reduce_var.rst","functional/ivy/neural_net.rst","functional/ivy/neural_net/activations.rst","functional/ivy/neural_net/activations/gelu.rst","functional/ivy/neural_net/activations/leaky_relu.rst","functional/ivy/neural_net/activations/relu.rst","functional/ivy/neural_net/activations/sigmoid.rst","functional/ivy/neural_net/activations/softmax.rst","functional/ivy/neural_net/activations/softplus.rst","functional/ivy/neural_net/activations/tanh.rst","functional/ivy/neural_net/layers.rst","functional/ivy/neural_net/layers/conv1d.rst","functional/ivy/neural_net/layers/conv1d_transpose.rst","functional/ivy/neural_net/layers/conv2d.rst","functional/ivy/neural_net/layers/conv2d_transpose.rst","functional/ivy/neural_net/layers/conv3d.rst","functional/ivy/neural_net/layers/conv3d_transpose.rst","functional/ivy/neural_net/layers/depthwise_conv2d.rst","functional/ivy/neural_net/layers/dropout.rst","functional/ivy/neural_net/layers/linear.rst","functional/ivy/neural_net/layers/lstm_update.rst","functional/ivy/neural_net/layers/multi_head_attention.rst","functional/ivy/neural_net/layers/scaled_dot_product_attention.rst","functional/ivy/neural_net/losses.rst","functional/ivy/neural_net/losses/binary_cross_entropy.rst","functional/ivy/neural_net/losses/cross_entropy.rst","functional/ivy/neural_net/losses/sparse_cross_entropy.rst","functional/ivy/neural_net/norms.rst","functional/ivy/neural_net/norms/layer_norm.rst","functional/ivy/standard.rst","functional/ivy/standard/constants.rst","functional/ivy/standard/creation_functions.rst","functional/ivy/standard/creation_functions/empty.rst","functional/ivy/standard/creation_functions/ones.rst","functional/ivy/standard/creation_functions/ones_like.rst","functional/ivy/standard/creation_functions/tril.rst","functional/ivy/standard/creation_functions/zeros.rst","functional/ivy/standard/data_type_functions.rst","functional/ivy/standard/data_type_functions/finfo.rst","functional/ivy/standard/data_type_functions/iinfo.rst","functional/ivy/standard/data_types.rst","functional/ivy/standard/elementwise_functions.rst","functional/ivy/standard/elementwise_functions/acosh.rst","functional/ivy/standard/elementwise_functions/asinh.rst","functional/ivy/standard/elementwise_functions/bitwise_and.rst","functional/ivy/standard/elementwise_functions/ceil.rst","functional/ivy/standard/elementwise_functions/cos.rst","functional/ivy/standard/elementwise_functions/cosh.rst","functional/ivy/standard/elementwise_functions/isfinite.rst","functional/ivy/standard/elementwise_functions/isnan.rst","functional/ivy/standard/elementwise_functions/less.rst","functional/ivy/standard/elementwise_functions/less_equal.rst","functional/ivy/standard/elementwise_functions/log10.rst","functional/ivy/standard/elementwise_functions/log1p.rst","functional/ivy/standard/elementwise_functions/log2.rst","functional/ivy/standard/elementwise_functions/logical_not.rst","functional/ivy/standard/elementwise_functions/logical_or.rst","functional/ivy/standard/elementwise_functions/negative.rst","functional/ivy/standard/elementwise_functions/sin.rst","functional/ivy/standard/elementwise_functions/sinh.rst","functional/ivy/standard/elementwise_functions/sqrt.rst","functional/ivy/standard/elementwise_functions/tanh.rst","functional/ivy/standard/function_and_method_signatures.rst","functional/ivy/standard/linear_algebra.rst","functional/ivy/standard/linear_algebra/diagonal.rst","functional/ivy/standard/linear_algebra/matmul.rst","functional/ivy/standard/linear_algebra/slodget.rst","functional/ivy/standard/linear_algebra/svd.rst","functional/ivy/standard/linear_algebra/vector_norm.rst","functional/ivy/standard/manipulation_functions.rst","functional/ivy/standard/manipulation_functions/flip.rst","functional/ivy/standard/searching_functions.rst","functional/ivy/standard/searching_functions/argmax.rst","functional/ivy/standard/set_functions.rst","functional/ivy/standard/sorting_functions.rst","functional/ivy/standard/sorting_functions/argsort.rst","functional/ivy/standard/statistical_functions.rst","functional/ivy/standard/statistical_functions/min.rst","functional/ivy/standard/utility_functions.rst","functional/ivy/standard/utility_functions/all.rst","functional/ivy/standard/utility_functions/any.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],extra:[22,0,0,"-"],general:[48,0,0,"-"],gradients:[50,0,0,"-"],image:[52,0,0,"-"],linalg:[54,0,0,"-"],logic:[56,0,0,"-"],math:[58,0,0,"-"],meta:[60,0,0,"-"],random:[62,0,0,"-"],reductions:[64,0,0,"-"],standard:[66,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.extra":{device:[28,0,0,"-"],general:[30,0,0,"-"],gradients:[32,0,0,"-"],image:[34,0,0,"-"],linalg:[36,0,0,"-"],logic:[38,0,0,"-"],math:[40,0,0,"-"],meta:[42,0,0,"-"],random:[44,0,0,"-"],reductions:[46,0,0,"-"]},"ivy.array.extra.device":{ArrayWithDevice:[29,1,1,""]},"ivy.array.extra.general":{ArrayWithGeneral:[31,1,1,""]},"ivy.array.extra.gradients":{ArrayWithGradients:[33,1,1,""]},"ivy.array.extra.image":{ArrayWithImage:[35,1,1,""]},"ivy.array.extra.linalg":{ArrayWithLinalg:[37,1,1,""]},"ivy.array.extra.logic":{ArrayWithLogic:[39,1,1,""]},"ivy.array.extra.math":{ArrayWithMath:[41,1,1,""]},"ivy.array.extra.meta":{ArrayWithMeta:[43,1,1,""]},"ivy.array.extra.random":{ArrayWithRandom:[45,1,1,""]},"ivy.array.extra.reductions":{ArrayWithReductions:[47,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[49,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[51,1,1,""]},"ivy.array.image":{ArrayWithImage:[53,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[55,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[57,1,1,""]},"ivy.array.math":{ArrayWithMath:[59,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[61,1,1,""]},"ivy.array.random":{ArrayWithRandom:[63,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[65,1,1,""]},"ivy.array.standard":{ArrayWithArrayAPI:[66,1,1,""],arithmetic_operators:[67,0,0,"-"],array_operators:[69,0,0,"-"],attributes:[71,0,0,"-"],bitwise_operators:[73,0,0,"-"],comparison_operators:[75,0,0,"-"],inplace_operators:[77,0,0,"-"],reflected_operators:[79,0,0,"-"]},"ivy.array.standard.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[68,1,1,""]},"ivy.array.standard.array_operators":{ArrayWithArrayAPIArrayOperators:[70,1,1,""]},"ivy.array.standard.attributes":{ArrayWithArrayAPIAttributes:[72,1,1,""]},"ivy.array.standard.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[74,1,1,""]},"ivy.array.standard.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[76,1,1,""]},"ivy.array.standard.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[78,1,1,""]},"ivy.array.standard.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[80,1,1,""]},"ivy.container":{Container:[82,1,1,""],MultiDevContainer:[83,1,1,""]},"ivy.container.Container":{__init__:[82,3,1,""],all_false:[82,3,1,""],all_key_chains:[82,3,1,""],all_true:[82,3,1,""],arrays_as_lists:[82,3,1,""],as_arrays:[82,3,1,""],as_bools:[82,3,1,""],as_ones:[82,3,1,""],as_random_uniform:[82,3,1,""],as_variables:[82,3,1,""],as_zeros:[82,3,1,""],assert_contains_sub_container:[82,3,1,""],assert_contains_sub_structure:[82,3,1,""],assert_identical:[82,3,1,""],assert_identical_structure:[82,3,1,""],at_key_chain:[82,3,1,""],at_key_chains:[82,3,1,""],at_keys:[82,3,1,""],clip:[82,3,1,""],clip_vector_norm:[82,3,1,""],combine:[82,3,1,""],common_key_chains:[82,3,1,""],concat:[82,3,1,""],config:[82,3,1,""],contains_sub_container:[82,3,1,""],contains_sub_structure:[82,3,1,""],copy:[82,3,1,""],create_if_absent:[82,3,1,""],cutoff_at_depth:[82,3,1,""],cutoff_at_height:[82,3,1,""],deep_copy:[82,3,1,""],dev:[82,3,1,""],dev_clone:[82,3,1,""],dev_dist:[82,3,1,""],dev_str:[82,3,1,""],diff:[82,3,1,""],dtype:[82,3,1,""],einops_rearrange:[82,3,1,""],einops_reduce:[82,3,1,""],einops_repeat:[82,3,1,""],einsum:[82,3,1,""],expand_dims:[82,3,1,""],find_sub_container:[82,3,1,""],find_sub_structure:[82,3,1,""],flatten_key_chain:[82,3,1,""],flatten_key_chains:[82,3,1,""],flip:[82,3,1,""],format_key_chains:[82,3,1,""],from_disk_as_hdf5:[82,3,1,""],from_disk_as_json:[82,3,1,""],from_disk_as_pickled:[82,3,1,""],from_flat_list:[82,3,1,""],from_numpy:[82,3,1,""],gather:[82,3,1,""],gather_nd:[82,3,1,""],h5_file_size:[82,3,1,""],has_key:[82,3,1,""],has_key_chain:[82,3,1,""],has_nans:[82,3,1,""],identical:[82,3,1,""],identical_array_shapes:[82,3,1,""],identical_configs:[82,3,1,""],identical_structure:[82,3,1,""],if_exists:[82,3,1,""],inplace_update:[82,3,1,""],ivy:[82,3,1,""],key_chains_containing:[82,3,1,""],list_join:[82,3,1,""],list_stack:[82,3,1,""],map:[82,3,1,""],map_conts:[82,3,1,""],matrix_norm:[82,3,1,""],max_depth:[82,3,1,""],maximum:[82,3,1,""],minimum:[82,3,1,""],multi_map:[82,3,1,""],num_arrays:[82,3,1,""],overwrite_at_key_chain:[82,3,1,""],overwrite_at_key_chains:[82,3,1,""],prune_empty:[82,3,1,""],prune_key_chain:[82,3,1,""],prune_key_chains:[82,3,1,""],prune_key_from_key_chains:[82,3,1,""],prune_keys:[82,3,1,""],prune_keys_from_key_chains:[82,3,1,""],reduce:[82,3,1,""],reduce_max:[82,3,1,""],reduce_mean:[82,3,1,""],reduce_min:[82,3,1,""],reduce_prod:[82,3,1,""],reduce_std:[82,3,1,""],reduce_sum:[82,3,1,""],reduce_var:[82,3,1,""],remove_key_length_limit:[82,3,1,""],remove_print_limit:[82,3,1,""],repeat:[82,3,1,""],reshape:[82,3,1,""],reshape_like:[82,3,1,""],restructure:[82,3,1,""],restructure_key_chains:[82,3,1,""],set_at_key_chain:[82,3,1,""],set_at_key_chains:[82,3,1,""],set_at_keys:[82,3,1,""],set_framework:[82,3,1,""],set_ivy_backend:[82,3,1,""],shape:[82,3,1,""],shapes:[82,3,1,""],show:[82,3,1,""],show_sub_container:[82,3,1,""],shuffle:[82,3,1,""],shuffle_h5_file:[82,3,1,""],size_ordered_arrays:[82,3,1,""],slice_keys:[82,3,1,""],slice_via_key:[82,3,1,""],sort_by_key:[82,3,1,""],split:[82,3,1,""],stack:[82,3,1,""],stop_gradients:[82,3,1,""],structural_diff:[82,3,1,""],swapaxes:[82,3,1,""],to_dev:[82,3,1,""],to_dict:[82,3,1,""],to_disk_as_hdf5:[82,3,1,""],to_disk_as_json:[82,3,1,""],to_disk_as_pickled:[82,3,1,""],to_flat_list:[82,3,1,""],to_iterator:[82,3,1,""],to_iterator_keys:[82,3,1,""],to_iterator_values:[82,3,1,""],to_ivy:[82,3,1,""],to_jsonable:[82,3,1,""],to_list:[82,3,1,""],to_multi_dev:[82,3,1,""],to_native:[82,3,1,""],to_numpy:[82,3,1,""],to_raw:[82,3,1,""],trim_key:[82,3,1,""],try_kc:[82,3,1,""],unify:[82,3,1,""],unstack:[82,3,1,""],update_config:[82,3,1,""],vector_norm:[82,3,1,""],with_default_key_color:[82,3,1,""],with_entries_as_lists:[82,3,1,""],with_ivy_backend:[82,3,1,""],with_key_length_limit:[82,3,1,""],with_print_indent:[82,3,1,""],with_print_limit:[82,3,1,""],with_print_line_spacing:[82,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[83,3,1,""],at_dev:[83,3,1,""],at_devs:[83,3,1,""]},"ivy.debugger":{debug_mode:[86,2,1,""],set_breakpoint_debug_mode:[87,2,1,""],set_debug_mode:[88,2,1,""],set_exception_debug_mode:[89,2,1,""],unset_debug_mode:[90,2,1,""]},"ivy.framework_handler":{ContextManager:[100,1,1,""],choose_random_framework:[102,2,1,""],clear_framework_stack:[103,2,1,""],current_framework:[104,2,1,""],get_framework:[105,2,1,""],set_framework:[106,2,1,""],try_import_ivy_jax:[107,2,1,""],try_import_ivy_mxnet:[108,2,1,""],try_import_ivy_numpy:[109,2,1,""],try_import_ivy_tf:[110,2,1,""],try_import_ivy_torch:[111,2,1,""],unset_framework:[112,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[100,3,1,""]},"ivy.functional":{backends:[115,0,0,"-"],ivy:[846,0,0,"-"]},"ivy.functional.backends.numpy.extra":{device:[396,0,0,"-"],general:[398,0,0,"-"],gradients:[430,0,0,"-"],image:[435,0,0,"-"],linear_algebra:[439,0,0,"-"],logic:[443,0,0,"-"],math:[444,0,0,"-"],random:[446,0,0,"-"]},"ivy.functional.backends.numpy.extra.device":{Profiler:[397,1,1,""],clear_mem_on_dev:[396,2,1,""],dev:[396,2,1,""],dev_from_str:[396,2,1,""],dev_to_str:[396,2,1,""],gpu_is_available:[396,2,1,""],num_gpus:[396,2,1,""],to_dev:[396,2,1,""],tpu_is_available:[396,2,1,""]},"ivy.functional.backends.numpy.extra.device.Profiler":{__init__:[397,3,1,""],start:[397,3,1,""],stop:[397,3,1,""]},"ivy.functional.backends.numpy.extra.general":{abs:[398,2,1,""],arange:[399,2,1,""],argmin:[400,2,1,""],array:[401,2,1,""],asarray:[398,2,1,""],astype:[398,2,1,""],cast:[402,2,1,""],clip:[398,2,1,""],compile:[403,2,1,""],concatenate:[404,2,1,""],constant_pad:[398,2,1,""],container_types:[398,2,1,""],copy_array:[398,2,1,""],cumprod:[405,2,1,""],current_framework_str:[398,2,1,""],dtype:[406,2,1,""],dtype_bits:[407,2,1,""],dtype_from_str:[408,2,1,""],dtype_to_str:[409,2,1,""],floor:[398,2,1,""],floormod:[398,2,1,""],full:[410,2,1,""],gather:[411,2,1,""],gather_nd:[412,2,1,""],get_num_dims:[398,2,1,""],identity:[413,2,1,""],indices_where:[414,2,1,""],inplace_arrays_supported:[398,2,1,""],inplace_decrement:[415,2,1,""],inplace_increment:[416,2,1,""],inplace_update:[417,2,1,""],inplace_variables_supported:[398,2,1,""],is_array:[418,2,1,""],linear_resample:[419,2,1,""],linspace:[420,2,1,""],logspace:[421,2,1,""],meshgrid:[398,2,1,""],multiprocessing:[398,2,1,""],one_hot:[422,2,1,""],round:[398,2,1,""],scatter_flat:[423,2,1,""],scatter_nd:[424,2,1,""],shape:[398,2,1,""],split:[425,2,1,""],squeeze:[426,2,1,""],to_list:[398,2,1,""],to_numpy:[398,2,1,""],to_scalar:[398,2,1,""],transpose:[427,2,1,""],unstack:[428,2,1,""],where:[398,2,1,""],zero_pad:[398,2,1,""],zeros_like:[429,2,1,""]},"ivy.functional.backends.numpy.extra.gradients":{execute_with_gradients:[431,2,1,""],is_variable:[432,2,1,""],stop_gradient:[433,2,1,""],variable:[434,2,1,""],variable_data:[430,2,1,""]},"ivy.functional.backends.numpy.extra.image":{bilinear_resample:[436,2,1,""],gradient_image:[437,2,1,""],stack_images:[438,2,1,""]},"ivy.functional.backends.numpy.extra.linear_algebra":{matrix_norm:[440,2,1,""],qr:[441,2,1,""],vector_to_skew_symmetric_matrix:[442,2,1,""]},"ivy.functional.backends.numpy.extra.math":{erf:[445,2,1,""]},"ivy.functional.backends.numpy.extra.random":{multinomial:[447,2,1,""],randint:[446,2,1,""],random_normal:[446,2,1,""],random_uniform:[446,2,1,""],seed:[446,2,1,""],shuffle:[446,2,1,""]},"ivy.functional.backends.numpy.standard":{constants:[469,0,0,"-"],creation_functions:[470,0,0,"-"],data_type_functions:[476,0,0,"-"],data_types:[480,0,0,"-"]},"ivy.functional.backends.numpy.standard.creation_functions":{empty:[471,2,1,""],ones:[472,2,1,""],ones_like:[473,2,1,""],tril:[474,2,1,""],zeros:[475,2,1,""]},"ivy.functional.backends.numpy.standard.data_type_functions":{Finfo:[476,1,1,""],finfo:[478,2,1,""],iinfo:[479,2,1,""]},"ivy.functional.backends.numpy.standard.data_type_functions.Finfo":{__init__:[476,3,1,""],bits:[476,3,1,""],eps:[476,3,1,""],max:[476,3,1,""],min:[476,3,1,""],smallest_normal:[476,3,1,""]},"ivy.functional.ivy.extra":{compilation:[848,0,0,"-"],device:[850,0,0,"-"],dtype:[900,0,0,"-"],general:[924,0,0,"-"],gradients:[1019,0,0,"-"],image:[1035,0,0,"-"],linalg:[1042,0,0,"-"],logic:[1049,0,0,"-"],math:[1052,0,0,"-"],meta:[1065,0,0,"-"],multi_node:[1069,0,0,"-"],nest:[1113,0,0,"-"],random:[1125,0,0,"-"],reductions:[1132,0,0,"-"]},"ivy.functional.ivy.extra.compilation":{compile:[849,2,1,""]},"ivy.functional.ivy.extra.device":{DefaultDevice:[850,1,1,""],DevClonedItem:[852,1,1,""],DevClonedIter:[853,1,1,""],DevClonedNest:[854,1,1,""],DevDistItem:[855,1,1,""],DevDistIter:[856,1,1,""],DevDistNest:[857,1,1,""],DevManager:[850,1,1,""],DevMapper:[859,1,1,""],DevMapperMultiProc:[860,1,1,""],MultiDev:[850,1,1,""],MultiDevItem:[862,1,1,""],MultiDevIter:[863,1,1,""],MultiDevNest:[864,1,1,""],Profiler:[865,1,1,""],clear_mem_on_dev:[866,2,1,""],default_device:[867,2,1,""],dev:[868,2,1,""],dev_clone:[869,2,1,""],dev_clone_array:[870,2,1,""],dev_clone_iter:[871,2,1,""],dev_clone_nest:[872,2,1,""],dev_dist:[873,2,1,""],dev_dist_array:[874,2,1,""],dev_dist_iter:[875,2,1,""],dev_dist_nest:[876,2,1,""],dev_from_str:[877,2,1,""],dev_to_str:[878,2,1,""],dev_unify:[879,2,1,""],dev_unify_array:[880,2,1,""],dev_unify_iter:[881,2,1,""],dev_unify_nest:[882,2,1,""],dev_util:[883,2,1,""],get_all_arrays_on_dev:[884,2,1,""],gpu_is_available:[885,2,1,""],num_arrays_on_dev:[886,2,1,""],num_cpu_cores:[887,2,1,""],num_gpus:[888,2,1,""],percent_used_mem_on_dev:[889,2,1,""],print_all_arrays_on_dev:[890,2,1,""],set_default_device:[891,2,1,""],set_split_factor:[892,2,1,""],split_factor:[893,2,1,""],split_func_call:[894,2,1,""],to_dev:[895,2,1,""],total_mem_on_dev:[896,2,1,""],tpu_is_available:[897,2,1,""],unset_default_device:[898,2,1,""],used_mem_on_dev:[899,2,1,""]},"ivy.functional.ivy.extra.device.DefaultDevice":{__init__:[850,3,1,""]},"ivy.functional.ivy.extra.device.DevManager":{__init__:[850,3,1,""],da_tune_step:[850,3,1,""],dim_size:[850,3,1,""],ds_tune_step:[850,3,1,""],map:[850,3,1,""],repeated_config_check:[850,3,1,""],tune_step:[850,3,1,""],tuned:[850,3,1,""]},"ivy.functional.ivy.extra.device.DevMapper":{__init__:[859,3,1,""],map:[859,3,1,""]},"ivy.functional.ivy.extra.device.DevMapperMultiProc":{__init__:[860,3,1,""]},"ivy.functional.ivy.extra.device.MultiDev":{__init__:[850,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevItem":{__init__:[862,3,1,""],items:[862,3,1,""],keys:[862,3,1,""],shape:[862,3,1,""],values:[862,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevIter":{__init__:[863,3,1,""],at_dev:[863,3,1,""],at_devs:[863,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevNest":{__init__:[864,3,1,""],at_dev:[864,3,1,""]},"ivy.functional.ivy.extra.device.Profiler":{__init__:[865,3,1,""],start:[865,3,1,""],stop:[865,3,1,""]},"ivy.functional.ivy.extra.dtype":{DefaultDtype:[900,1,1,""],DefaultFloatDtype:[900,1,1,""],DefaultIntDtype:[900,1,1,""],astype:[900,2,1,""],cast:[904,2,1,""],closest_valid_dtype:[905,2,1,""],convert_dtype:[906,2,1,""],default_dtype:[907,2,1,""],default_float_dtype:[908,2,1,""],default_int_dtype:[909,2,1,""],dtype:[910,2,1,""],dtype_bits:[911,2,1,""],dtype_from_str:[912,2,1,""],dtype_to_str:[913,2,1,""],invalid_dtype:[914,2,1,""],is_float_dtype:[915,2,1,""],is_int_dtype:[916,2,1,""],set_default_dtype:[917,2,1,""],set_default_float_dtype:[918,2,1,""],set_default_int_dtype:[919,2,1,""],unset_default_dtype:[920,2,1,""],unset_default_float_dtype:[921,2,1,""],unset_default_int_dtype:[922,2,1,""],valid_dtype:[923,2,1,""]},"ivy.functional.ivy.extra.dtype.DefaultDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.extra.dtype.DefaultFloatDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.extra.dtype.DefaultIntDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.extra.general":{"default":[947,2,1,""],abs:[925,2,1,""],all_equal:[926,2,1,""],arange:[927,2,1,""],arg_names:[928,2,1,""],argmin:[929,2,1,""],array:[930,2,1,""],array_equal:[931,2,1,""],arrays_equal:[932,2,1,""],asarray:[924,2,1,""],assert_supports_inplace:[933,2,1,""],broadcast_to:[934,2,1,""],cache_fn:[935,2,1,""],clip:[936,2,1,""],clip_matrix_norm:[937,2,1,""],clip_vector_norm:[938,2,1,""],concatenate:[939,2,1,""],constant_pad:[940,2,1,""],container_types:[941,2,1,""],copy_array:[942,2,1,""],cross:[943,2,1,""],cumprod:[944,2,1,""],cumsum:[945,2,1,""],current_framework_str:[946,2,1,""],einops_rearrange:[948,2,1,""],einops_reduce:[949,2,1,""],einops_repeat:[950,2,1,""],equal:[951,2,1,""],exists:[952,2,1,""],expand_dims:[953,2,1,""],floor:[954,2,1,""],floormod:[955,2,1,""],fourier_encode:[956,2,1,""],full:[957,2,1,""],gather:[958,2,1,""],gather_nd:[959,2,1,""],get_all_arrays_in_memory:[960,2,1,""],get_min_base:[961,2,1,""],get_min_denominator:[962,2,1,""],get_num_dims:[963,2,1,""],get_referrers_recursive:[964,2,1,""],has_nans:[965,2,1,""],identity:[966,2,1,""],indices_where:[967,2,1,""],inplace_arrays_supported:[968,2,1,""],inplace_decrement:[969,2,1,""],inplace_increment:[970,2,1,""],inplace_update:[971,2,1,""],inplace_variables_supported:[972,2,1,""],is_array:[973,2,1,""],isinf:[974,2,1,""],linear_resample:[975,2,1,""],linspace:[976,2,1,""],logspace:[977,2,1,""],match_kwargs:[978,2,1,""],matmul:[979,2,1,""],maximum:[980,2,1,""],meshgrid:[981,2,1,""],minimum:[982,2,1,""],multiprocessing:[983,2,1,""],num_arrays_in_memory:[984,2,1,""],one_hot:[985,2,1,""],ones:[986,2,1,""],print_all_arrays_in_memory:[987,2,1,""],queue_timeout:[988,2,1,""],repeat:[989,2,1,""],reshape:[990,2,1,""],round:[991,2,1,""],scatter_flat:[992,2,1,""],scatter_nd:[993,2,1,""],set_min_base:[994,2,1,""],set_min_denominator:[995,2,1,""],set_queue_timeout:[996,2,1,""],set_tmp_dir:[997,2,1,""],shape:[998,2,1,""],shape_to_tuple:[999,2,1,""],split:[1000,2,1,""],squeeze:[1001,2,1,""],stable_divide:[1002,2,1,""],stable_pow:[1003,2,1,""],stack:[1004,2,1,""],supports_inplace:[1005,2,1,""],swapaxes:[1006,2,1,""],tile:[1007,2,1,""],tmp_dir:[1008,2,1,""],to_list:[1009,2,1,""],to_numpy:[1010,2,1,""],to_scalar:[1011,2,1,""],transpose:[1012,2,1,""],try_else_none:[1013,2,1,""],unstack:[1014,2,1,""],value_is_nan:[1015,2,1,""],where:[1016,2,1,""],zero_pad:[1017,2,1,""],zeros_like:[1018,2,1,""]},"ivy.functional.ivy.extra.gradients":{GradientTracking:[1019,1,1,""],adam_step:[1021,2,1,""],adam_update:[1022,2,1,""],execute_with_gradients:[1023,2,1,""],gradient_descent_update:[1024,2,1,""],is_variable:[1025,2,1,""],lamb_update:[1026,2,1,""],lars_update:[1027,2,1,""],optimizer_update:[1028,2,1,""],set_with_grads:[1029,2,1,""],stop_gradient:[1030,2,1,""],unset_with_grads:[1031,2,1,""],variable:[1032,2,1,""],variable_data:[1033,2,1,""],with_grads:[1034,2,1,""]},"ivy.functional.ivy.extra.gradients.GradientTracking":{__init__:[1019,3,1,""]},"ivy.functional.ivy.extra.image":{bilinear_resample:[1036,2,1,""],float_img_to_uint8_img:[1037,2,1,""],gradient_image:[1038,2,1,""],random_crop:[1039,2,1,""],stack_images:[1040,2,1,""],uint8_img_to_float_img:[1041,2,1,""]},"ivy.functional.ivy.extra.linalg":{cholesky:[1043,2,1,""],inv:[1044,2,1,""],matrix_norm:[1045,2,1,""],pinv:[1046,2,1,""],qr:[1047,2,1,""],vector_to_skew_symmetric_matrix:[1048,2,1,""]},"ivy.functional.ivy.extra.logic":{logical_and:[1050,2,1,""],logical_or:[1051,2,1,""]},"ivy.functional.ivy.extra.math":{acos:[1053,2,1,""],asin:[1054,2,1,""],atan2:[1056,2,1,""],atan:[1055,2,1,""],atanh:[1057,2,1,""],cosh:[1058,2,1,""],divide:[1059,2,1,""],erf:[1060,2,1,""],exp:[1061,2,1,""],log:[1062,2,1,""],tan:[1063,2,1,""],tanh:[1064,2,1,""]},"ivy.functional.ivy.extra.meta":{fomaml_step:[1066,2,1,""],maml_step:[1067,2,1,""],reptile_step:[1068,2,1,""]},"ivy.functional.ivy.extra.multi_node":{split_factors:[1069,4,1,""]},"ivy.functional.ivy.extra.nest":{all_nested_indices:[1114,2,1,""],copy_nest:[1115,2,1,""],index_nest:[1116,2,1,""],map:[1117,2,1,""],map_nest_at_index:[1118,2,1,""],map_nest_at_indices:[1119,2,1,""],multi_index_nest:[1120,2,1,""],nested_indices_where:[1121,2,1,""],nested_map:[1122,2,1,""],set_nest_at_index:[1123,2,1,""],set_nest_at_indices:[1124,2,1,""]},"ivy.functional.ivy.extra.random":{multinomial:[1126,2,1,""],randint:[1127,2,1,""],random_normal:[1128,2,1,""],random_uniform:[1129,2,1,""],seed:[1130,2,1,""],shuffle:[1131,2,1,""]},"ivy.functional.ivy.extra.reductions":{einsum:[1133,2,1,""],reduce_max:[1134,2,1,""],reduce_mean:[1135,2,1,""],reduce_min:[1136,2,1,""],reduce_prod:[1137,2,1,""],reduce_std:[1138,2,1,""],reduce_sum:[1139,2,1,""],reduce_var:[1140,2,1,""]},"ivy.functional.ivy.neural_net":{activations:[1142,0,0,"-"],layers:[1150,0,0,"-"],losses:[1163,0,0,"-"],norms:[1167,0,0,"-"]},"ivy.functional.ivy.neural_net.activations":{gelu:[1143,2,1,""],leaky_relu:[1144,2,1,""],relu:[1145,2,1,""],sigmoid:[1146,2,1,""],softmax:[1147,2,1,""],softplus:[1148,2,1,""],tanh:[1149,2,1,""]},"ivy.functional.ivy.neural_net.layers":{conv1d:[1151,2,1,""],conv1d_transpose:[1152,2,1,""],conv2d:[1153,2,1,""],conv2d_transpose:[1154,2,1,""],conv3d:[1155,2,1,""],conv3d_transpose:[1156,2,1,""],depthwise_conv2d:[1157,2,1,""],dropout:[1158,2,1,""],linear:[1159,2,1,""],lstm_update:[1160,2,1,""],multi_head_attention:[1161,2,1,""],scaled_dot_product_attention:[1162,2,1,""]},"ivy.functional.ivy.neural_net.losses":{binary_cross_entropy:[1164,2,1,""],cross_entropy:[1165,2,1,""],sparse_cross_entropy:[1166,2,1,""]},"ivy.functional.ivy.neural_net.norms":{layer_norm:[1168,2,1,""]},"ivy.functional.ivy.standard":{constants:[1170,0,0,"-"],creation_functions:[1171,0,0,"-"],data_type_functions:[1177,0,0,"-"],data_types:[1180,0,0,"-"],elementwise_functions:[1181,0,0,"-"],function_and_method_signatures:[1202,0,0,"-"],linear_algebra:[1203,0,0,"-"],manipulation_functions:[1209,0,0,"-"],searching_functions:[1211,0,0,"-"],set_functions:[1213,0,0,"-"],sorting_functions:[1214,0,0,"-"],statistical_functions:[1216,0,0,"-"],utility_functions:[1218,0,0,"-"]},"ivy.functional.ivy.standard.constants":{e:[1170,4,1,""],nan:[1170,4,1,""],pi:[1170,4,1,""]},"ivy.functional.ivy.standard.creation_functions":{empty:[1172,2,1,""],ones:[1173,2,1,""],ones_like:[1174,2,1,""],tril:[1175,2,1,""],zeros:[1176,2,1,""]},"ivy.functional.ivy.standard.data_type_functions":{finfo:[1178,2,1,""],iinfo:[1179,2,1,""]},"ivy.functional.ivy.standard.elementwise_functions":{acosh:[1182,2,1,""],asinh:[1183,2,1,""],bitwise_and:[1184,2,1,""],ceil:[1185,2,1,""],cos:[1186,2,1,""],cosh:[1187,2,1,""],isfinite:[1188,2,1,""],isnan:[1189,2,1,""],less:[1190,2,1,""],less_equal:[1191,2,1,""],log10:[1192,2,1,""],log1p:[1193,2,1,""],log2:[1194,2,1,""],logical_not:[1195,2,1,""],logical_or:[1196,2,1,""],negative:[1197,2,1,""],sin:[1198,2,1,""],sinh:[1199,2,1,""],sqrt:[1200,2,1,""],tanh:[1201,2,1,""]},"ivy.functional.ivy.standard.linear_algebra":{diagonal:[1204,2,1,""],matmul:[1205,2,1,""],slodget:[1206,2,1,""],svd:[1207,2,1,""],vector_norm:[1208,2,1,""]},"ivy.functional.ivy.standard.manipulation_functions":{flip:[1210,2,1,""]},"ivy.functional.ivy.standard.searching_functions":{argmax:[1212,2,1,""]},"ivy.functional.ivy.standard.sorting_functions":{argsort:[1215,2,1,""]},"ivy.functional.ivy.standard.statistical_functions":{min:[1217,2,1,""]},"ivy.functional.ivy.standard.utility_functions":{all:[1219,2,1,""],any:[1220,2,1,""]},"ivy.stateful":{activations:[1224,0,0,"-"],converters:[1227,0,0,"-"],initializers:[1229,0,0,"-"],layers:[1238,0,0,"-"],module:[1250,0,0,"-"],norms:[1252,0,0,"-"],optimizers:[1254,0,0,"-"],sequential:[1260,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1225,1,1,""],GELU:[1226,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1225,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1226,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1228,2,1,""]},"ivy.stateful.initializers":{Constant:[1229,1,1,""],FirstLayerSiren:[1231,1,1,""],GlorotUniform:[1232,1,1,""],KaimingNormal:[1229,1,1,""],Ones:[1234,1,1,""],Siren:[1235,1,1,""],Uniform:[1229,1,1,""],Zeros:[1237,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1229,3,1,""],create_variables:[1229,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1231,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1232,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1229,3,1,""],create_variables:[1229,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1234,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1235,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1229,3,1,""],create_variables:[1229,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1237,3,1,""]},"ivy.stateful.layers":{Conv1D:[1239,1,1,""],Conv1DTranspose:[1240,1,1,""],Conv2D:[1241,1,1,""],Conv2DTranspose:[1242,1,1,""],Conv3D:[1243,1,1,""],Conv3DTranspose:[1244,1,1,""],DepthwiseConv2D:[1245,1,1,""],Dropout:[1246,1,1,""],LSTM:[1247,1,1,""],Linear:[1248,1,1,""],MultiHeadAttention:[1249,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1239,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1240,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1241,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1242,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1243,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1244,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1245,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1246,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1247,3,1,""],get_initial_state:[1247,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1248,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1249,3,1,""]},"ivy.stateful.module":{Module:[1251,1,1,""]},"ivy.stateful.module.Module":{__init__:[1251,3,1,""],build:[1251,3,1,""],build_mode:[1251,3,1,""],built:[1251,3,1,""],check_submod_rets:[1251,3,1,""],get_mod_key:[1251,3,1,""],mod_depth:[1251,3,1,""],mod_height:[1251,3,1,""],mod_with_top_mod_key_chain:[1251,3,1,""],save_weights:[1251,3,1,""],show_mod_in_top_mod:[1251,3,1,""],show_structure:[1251,3,1,""],show_v_in_top_v:[1251,3,1,""],sub_mods:[1251,3,1,""],track_submod_call_order:[1251,3,1,""],track_submod_rets:[1251,3,1,""],v_with_top_v_key_chains:[1251,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1253,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1253,3,1,""]},"ivy.stateful.optimizers":{Adam:[1255,1,1,""],LAMB:[1256,1,1,""],LARS:[1257,1,1,""],Optimizer:[1258,1,1,""],SGD:[1259,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1255,3,1,""],set_state:[1255,3,1,""],state:[1255,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1256,3,1,""],set_state:[1256,3,1,""],state:[1256,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1257,3,1,""],set_state:[1257,3,1,""],state:[1257,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1258,3,1,""],set_state:[1258,3,1,""],step:[1258,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1259,3,1,""],set_state:[1259,3,1,""],state:[1259,3,1,""]},"ivy.stateful.sequential":{Sequential:[1261,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1261,3,1,""]},"ivy.verbosity":{cprint:[1266,2,1,""]},ivy:{"debugger":[85,0,0,"-"],container:[81,0,0,"-"],framework_handler:[100,0,0,"-"],func_wrapper:[113,0,0,"-"],verbosity:[1265,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1254,1255,1256],"02886":1221,"100":[1069,1221,1263],"141592653589793":1170,"2021":1221,"2102":1221,"360":[1052,1063],"718281828459045":1170,"754":[1170,1177,1178,1181,1200],"999":[1019,1021,1022,1026,1254,1255,1256],"abstract":[850,865,1221,1254,1258],"boolean":[81,82,850,885,897,900,914,923,924,926,931,932,965,967,968,972,973,974,1005,1015,1019,1025,1049,1050,1051,1065,1066,1067,1069,1181,1184,1195,1196],"break":84,"case":[15,18,19,81,82,83,84,850,889,896,899,924,927,990,992,993,1042,1045,1047,1069,1113,1116,1120,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200,1221,1238,1249,1250,1251,1254,1258,1267],"catch":[924,947],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,100,396,397,476,850,852,853,854,855,856,857,859,860,862,863,864,865,877,878,900,924,928,978,1019,1033,1069,1113,1115,1122,1163,1165,1166,1177,1179,1221,1224,1225,1226,1227,1228,1229,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1267],"default":[15,18,19,81,82,83,84,847,848,849,850,859,860,867,868,872,873,874,875,876,879,880,881,882,889,892,893,894,899,900,907,908,909,910,924,926,927,929,937,938,939,940,943,944,945,956,957,958,963,965,966,975,977,978,981,983,986,988,989,992,993,996,998,1000,1002,1003,1012,1014,1015,1019,1022,1024,1025,1026,1027,1028,1030,1034,1042,1045,1047,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1175,1176,1203,1204,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261],"final":[81,82,84,924,956,976,977,1069,1238,1249,1264],"float":[81,82,83,850,859,860,883,889,892,896,899,900,908,915,924,927,937,938,940,956,957,961,962,977,994,995,996,1002,1003,1019,1021,1022,1024,1026,1027,1028,1035,1037,1041,1052,1059,1065,1066,1067,1068,1069,1125,1128,1129,1142,1144,1150,1158,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1176,1177,1178,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200,1201,1203,1208,1238,1246,1249,1252,1253,1254,1255,1256,1257,1258,1259],"function":[15,81,82,84,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,471,472,473,474,475,478,479,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1178,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1210,1212,1215,1217,1219,1220,1221,1224,1225,1226,1254,1257,1258,1259,1263,1264,1267],"import":[84,1221,1264,1267],"int":[81,82,83,84,446,470,471,472,474,475,848,849,850,872,873,874,875,876,879,880,881,882,887,888,894,900,909,911,916,924,929,934,939,940,944,945,948,949,950,953,956,957,958,963,966,975,976,977,985,986,989,990,992,993,998,999,1000,1001,1004,1006,1007,1012,1014,1017,1019,1021,1022,1026,1035,1039,1040,1042,1045,1065,1066,1067,1068,1069,1113,1122,1125,1126,1127,1129,1130,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1161,1163,1165,1166,1167,1168,1171,1172,1173,1175,1176,1177,1178,1179,1203,1204,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1252,1253],"long":[84,1150,1160],"new":[81,82,84,446,900,904,924,925,934,948,949,950,953,956,957,958,959,986,990,992,993,994,995,1002,1003,1004,1019,1022,1024,1026,1027,1028,1035,1037,1039,1041,1052,1057,1058,1064,1069,1113,1123,1124,1125,1126,1167,1168,1171,1172,1173,1174,1176,1181,1193,1221,1227,1228,1238,1248,1252,1253,1254,1255,1256,1257,1258,1259,1264,1267],"public":[924,941],"return":[15,16,17,18,19,81,82,83,84,446,848,849,850,859,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,885,886,888,889,893,894,895,896,897,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,989,990,991,992,993,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1175,1176,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1206,1207,1208,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1227,1228,1238,1247,1248,1254,1258,1263,1264,1267],"short":[84,1150,1160,1221,1267],"static":[81,82,848,849],"super":1069,"true":[81,82,83,398,403,430,433,446,447,848,849,850,924,926,933,935,952,956,965,967,1015,1016,1019,1022,1024,1025,1026,1027,1028,1030,1042,1045,1065,1066,1067,1068,1069,1113,1114,1121,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1163,1164,1165,1166,1181,1188,1189,1195,1196,1203,1207,1208,1211,1212,1214,1215,1218,1219,1220,1238,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],"try":[81,82,924,1013,1069],"var":[81,82,1065,1066,1067,1267],"while":[81,82,83,1069,1181,1195,1196],AND:[1049,1050,1181,1184,1218,1219],But:1267,For:[84,924,927,936,1004,1019,1025,1033,1042,1047,1052,1053,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200,1221,1227,1228,1264,1267],Its:[1052,1055],NOT:[1181,1195],Not:1170,One:[81,82,84,924,949,990,1125,1127,1267],Ones:[1221,1229],PRs:84,Such:[924,941],That:1264,The:[15,16,17,18,19,81,82,83,84,848,849,850,859,860,866,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,911,912,913,914,923,924,927,930,931,934,935,937,938,939,940,942,943,946,947,951,956,958,959,966,969,970,971,973,975,977,979,981,983,986,989,990,992,993,994,995,996,999,1000,1001,1002,1003,1004,1007,1015,1018,1019,1021,1022,1024,1026,1027,1028,1030,1033,1035,1037,1039,1041,1042,1045,1047,1052,1053,1054,1055,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1171,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1206,1207,1208,1209,1210,1214,1215,1218,1219,1220,1221,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1256,1257,1258,1264,1267],There:[84,1221,1264],These:[84,1221],Use:84,Used:[1113,1114,1121,1250,1251],Using:[1221,1222,1267],With:[81,82,1042,1045,1132,1134,1135,1136,1137,1138,1139,1140,1211,1212,1221,1263,1267],__array__:[924,930],__call__:[1238,1249,1250,1251],__del__:1069,__dict__:[1069,1264],__enter__:1069,__exit__:1069,__getitem__:1069,__getstate__:1069,__init__:[81,82,83,84,100,101,207,360,396,397,476,477,608,801,850,851,858,859,860,861,862,863,864,865,900,901,902,903,1019,1020,1069,1073,1080,1221,1224,1225,1226,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1267],__iter__:1069,__len__:1069,__next__:1069,__repr__:1069,_assign_vari:1263,_axi:1069,_base:[1113,1114,1121],_compute_node_da_ratio:1069,_compute_node_strs_da:1069,_concat_unify_arrai:1069,_counter:1069,_cur_framework:[84,1069],_da_direct:1069,_da_directions_flip:1069,_da_step_tim:1069,_da_tim:1069,_da_tune_count:1069,_data:1069,_delta_da_dim_s:1069,_delta_sf:1069,_dict:1069,_dim_siz:1069,_first_da_tune_step:1069,_first_ns_tune_step:1069,_fn:1069,_forward:[1221,1263],_get_kalman_param:1267,_get_prior:1267,_get_some_model:1267,_index:[1113,1114,1121],_input_queu:1069,_length:1069,_max_depth:1069,_max_node_dim_step_ratio:1069,_max_node_dim_step_s:1069,_max_split_factor_step_s:1069,_mean_unify_arrai:1069,_min_bas:[924,1003,1167,1168,1252,1253],_min_denomin:[924,1002],_min_node_dim_s:1069,_min_sf_tune_step:1069,_min_unit_node_tune_step:1069,_model:1267,_node_mapp:1069,_node_percent_mem:1069,_node_str:1069,_node_str_da_ratio:1069,_node_strs_da:1069,_node_strs_kei:1069,_node_strs_n:1069,_node_util:1069,_ns_step_tim:1069,_ns_time:1069,_ns_tune_count:1069,_num_nod:1069,_num_work:1069,_observed_config:1069,_output_queu:1069,_paramet:1263,_percent_mem_inc_per_sf:1069,_percent_mem_inc_per_unit_da_dim:1069,_percent_util_inc_per_unit_da_dim:1069,_ret_fn:1069,_safety_factor:1069,_save_dir:1069,_shift_da_split:1069,_shift_n:1069,_slice:1069,_step:[1254,1258],_sum_unify_arrai:1069,_timeout:1069,_tune:1069,_tune_da:1069,_tune_n:1069,_tune_step:1069,_unit_da_tune_count:1069,_unroll_step:1267,_with_node_mappig:1069,_worker:1069,_worker_class:1069,_worker_fn:1069,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,850,859,865,1069,1250,1251,1254,1258],abil:1221,abl:[81,82],about:[1177,1178,1179],abov:[84,1125,1127,1171,1175,1203,1204],above_height:[81,82],abs:[260,398,531,663,847,924,1069,1203,1208],absolut:[81,82,924,925,1203,1206],abstractmethod:1069,accept:[15,84,1181,1195,1196,1221],access:[81,82,84,1264],accord:[81,82,924,940,958,992,993,1012,1017,1177,1178],accordingli:[1203,1208,1218,1219,1220],accur:[100,396,397,476,850,862,863,864,865,900,1019,1229,1231,1232,1234,1235,1237],aco:[746,847,1052],acosh:[211,364,481,612,805,1169,1181],across:[81,82,850,859,860,869,870,872,873,874,875,876,882,892,893,924,929,931,932,1069,1113,1117],act:84,activ:[1141,1143,1144,1145,1146,1147,1148,1149,1221,1225,1226],actual:1264,adam:[1019,1021,1022,1026,1221,1254,1256,1263],adam_step:[847,1019],adam_upd:[847,1019],adapt:[1019,1027,1254,1257],add:[81,82,84,1069,1163,1164,1165,1166,1167,1168,1221,1252,1253,1264],added:[84,924,1002,1003,1260,1261],adding:[84,924,934],addit:[81,82,84,924,948,949,950,1167,1168,1238,1248],addition:84,address:84,adher:84,adjac:[924,927],adopt:[84,924,941],affect:[924,927],affin:[1252,1253],after:[924,975,1019,1022,1023,1024,1026,1027,1028,1035,1036,1167,1168,1181,1200,1254,1255,1256,1257,1258,1259,1267],after_1:[924,940,1017],after_n:[924,940,1017],again:84,against:[81,82,1042,1045,1132,1134,1135,1136,1137,1138,1139,1140,1203,1205,1211,1212],agnost:[84,1221,1263,1264],aim:1267,algebra:[1042,1169],algorithm:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245,1267],align:[81,82,84,924,934],aliv:[850,884,886,890,924,960,984,987],all:[15,16,17,18,19,81,82,84,249,391,519,650,843,848,849,850,859,884,890,924,925,926,931,932,941,960,966,987,1001,1042,1047,1065,1066,1067,1068,1069,1113,1114,1115,1121,1122,1125,1126,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1160,1169,1171,1175,1203,1208,1209,1210,1218,1221,1264,1267],all_depth:[81,82],all_equ:[847,924],all_fals:[81,82],all_key_chain:[81,82],all_nested_indic:[847,1113],all_tru:[81,82],alloc:[84,850,1069,1171,1175],allow:[924,976,977,978,1250,1251],allow_dupl:[924,978],alon:[850,889,899,1069,1221],along:[81,82,84,446,850,873,874,875,876,879,880,881,882,894,924,939,944,945,958,975,976,977,989,1000,1004,1007,1014,1042,1045,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1203,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220],alongsid:[1263,1264],alpha:[1142,1144],alphabet:[81,82,83],alphabetical_kei:[81,82,83],alreadi:[81,82,84,850,1069,1181,1185],also:[81,82,84,924,927,1019,1022,1065,1066,1067,1068,1113,1114,1115,1121,1122,1150,1159,1221,1238,1248,1263],altern:1263,alwai:[81,82,84,1019,1025,1030],among:[81,82],amount:[850,896,1069,1221],angl:[1052,1053,1056,1181,1187,1199,1201],ani:[15,16,17,18,19,81,82,84,249,391,519,650,843,848,849,850,852,855,859,860,862,871,872,875,876,881,924,926,927,930,947,948,949,950,951,952,965,973,978,1002,1003,1019,1023,1069,1113,1114,1117,1121,1122,1123,1124,1125,1129,1169,1181,1191,1218,1221,1227,1228,1250,1251,1263,1264,1267],anoth:[81,82,84,900,906,1221],another_backend:84,anyth:[84,1267],anywai:84,apart:84,api:[1221,1222],appear:[84,924,953],append:[81,82,1069,1203,1204,1205],appli:[15,18,19,81,82,924,948,949,950,1019,1026,1027,1049,1050,1051,1065,1066,1067,1113,1117,1120,1122,1142,1143,1144,1145,1146,1147,1148,1149,1150,1159,1161,1162,1167,1168,1203,1207,1221,1224,1225,1226,1252,1253],applic:[1113,1117,1122,1150,1161,1162,1221,1267],appropri:[1211,1212],approxim:[1142,1143,1181,1182,1183,1186,1187,1192,1193,1194,1198,1199,1201],arang:[125,260,398,446,531,663,847,924,976,977],arbitrari:[81,82,850,879,880,882,1069],arc:[1052,1056],arcco:[1052,1053],arctan:[1052,1055],area:[1181,1182,1183,1221],arg:[15,16,17,81,82,84,100,104,850,859,872,876,882,894,924,948,949,950,993,1069,1227,1228,1250,1251],arg_nam:[847,924],arg_stateful_idx:[1250,1251],argmax:[242,385,512,643,836,1169,1211],argmin:[125,398,531,663,847,924],args_clon:1069,args_dist:1069,args_to_ivi:[15,23,1221],args_to_n:[15,23,1221],args_uni:1069,argsort:[245,388,515,646,839,1169,1214],argument:[15,16,17,18,19,81,82,83,84,100,104,848,849,850,859,860,872,876,882,924,927,928,935,947,978,993,1052,1053,1069,1113,1117,1227,1228,1250,1251],aris:[1221,1267],arithmet:[1132,1135,1138,1140],arithmetic_oper:[0,1,2,66,67,68],around:[81,82,83],arr:446,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,125,260,398,446,531,663,847,850,868,869,870,873,874,875,876,879,880,881,882,884,886,890,894,895,900,904,910,915,916,924,925,926,927,929,931,932,933,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,957,958,959,960,963,965,966,967,968,969,970,971,973,974,975,976,977,979,980,981,982,984,985,986,987,989,990,991,992,993,998,1000,1001,1004,1005,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1021,1022,1025,1026,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1113,1115,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1238,1246,1247,1249,1254,1258,1263,1264],arrang:[924,948],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,84],array_api_methods_to_test:84,array_equ:[260,663,847,924],array_lik:[446,924,930],array_modul:84,array_oper:[0,3,4,66,69,70],arrays_as_list:[81,82],arrays_equ:[81,82,847,924],arraywitharrayapi:[0,66],arraywitharrayapiarithmeticoper:[0,1,66,67],arraywitharrayapiarrayoper:[0,3,66,69],arraywitharrayapiattribut:[0,5,66,71],arraywitharrayapibitwiseoper:[0,7,66,73],arraywitharrayapicomparisonoper:[0,9,66,75],arraywitharrayapiinplaceoper:[0,11,66,77],arraywitharrayapireflectedoper:[0,13,66,79],arraywithdevic:[20,28,1221],arraywithgener:[30,48,1221],arraywithgradi:[32,50,1221],arraywithimag:[34,52,1221],arraywithlinalg:[36,54,1221],arraywithlog:[38,56,1221],arraywithmath:[40,58,1221],arraywithmeta:[42,60,1221],arraywithrandom:[44,62,1221],arraywithreduct:[46,64,1221],arriv:[81,82,83],articl:1221,arxiv:1221,as_arrai:[81,82,924,963,998],as_bool:[81,82],as_on:[81,82],as_random_uniform:[81,82],as_str:[396,398,406,850,868,900,907,908,909,910],as_tensor:398,as_vari:[81,82],as_zero:[81,82],asarrai:[398,924],ascend:[1214,1215],asin:[746,847,1052],asinh:[211,481,612,805,1169,1181],aspect:[1035,1040],assert:[81,82,924,933,1069],assert_contains_sub_contain:[81,82],assert_contains_sub_structur:[81,82],assert_ident:[81,82],assert_identical_structur:[81,82],assert_is_bool:[81,82],assert_supports_inplac:[847,924],associ:[84,1042,1048],assum:[1181,1186,1198,1264,1267],astyp:[398,900],asynchron:[81,82,83],at_dev:[81,83,850,863,864],at_kei:[81,82],at_key_chain:[81,82],at_nod:1069,atan2:[746,847,1052],atan:[746,847,1052],atanh:[746,847,1052],attent:[84,1150,1161,1162,1238,1249],attribut:[0,6,66,72,81,82,924,1018,1177,1178,1179],audienc:[1221,1264],author:1221,automat:84,avail:[81,82,84,850,885,887,888,897,924,949,1069],averag:[1019,1021,1022,1026,1065,1066,1067,1132,1135],average_across_step:[1065,1066,1067],avoid:[84,850,1069,1264],axes:[81,82,84,398,427,439,440,850,894,924,929,940,953,1006,1012,1017,1042,1045,1069,1132,1134,1135,1136,1137,1138,1139,1140,1203,1208,1209,1210,1211,1212,1216,1217,1218,1219,1220],axes_length:[81,82,924,948,949,950],axi:[81,82,398,400,404,405,411,419,420,421,425,426,428,850,852,855,862,873,874,875,876,879,880,881,882,894,924,929,939,940,943,944,945,953,958,975,976,977,989,1000,1001,1004,1006,1007,1014,1017,1069,1125,1131,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1163,1165,1166,1203,1204,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220],axis0:[81,82,924,1006],axis1:[81,82,924,1006,1203,1204],axis2:[1203,1204],back:[84,1250,1251,1254,1258],backend:[15,17,19,81,82,114,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,470,471,472,473,474,475,476,478,479,850,885,888,897,900,906,914,923,924,968,972,1019,1022,1024,1026,1027,1028,1033,1069,1221,1222,1227,1228,1254,1255,1256,1257,1258,1259,1263,1264,1267],backend_nam:84,background:[1221,1264],backprop:1267,backward:[1218,1219,1220,1263],band:[924,956],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,100,396,397,398,421,476,850,852,853,854,855,856,857,859,860,862,863,864,865,900,924,961,977,994,1003,1019,1069,1132,1133,1181,1192,1193,1194,1221,1224,1225,1226,1229,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1267],basi:84,batch:[81,82,850,892,893,924,956,966,1035,1039,1065,1066,1067,1068,1069,1150,1159,1167,1168,1203,1207,1208,1252,1253],batch_shap:[398,413,924,966,985,1035,1036,1037,1038,1039,1040,1041,1042,1048,1125,1126,1150,1160,1161,1162,1238,1247],batch_siz:[446,447,1069,1125,1126,1150,1151,1152,1153,1154,1155,1156,1157],bayesian:1267,becaus:[84,924,927],becom:[84,924,936,1052,1056,1267],been:[924,948,949,950,1125,1126],befor:[81,82,84,850,894,1065,1066,1067,1069,1113,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1161,1162,1267],before_1:[924,940,1017],before_n:[924,940,1017],begin:[1113,1114,1121,1264],behaviour:[84,1267],behind:[1019,1022,1024,1026,1027,1028,1221],being:[81,82,84,924,927,988,996,1069],believ:84,belong:[81,82],below:[84,1171,1175,1203,1204,1221,1264,1267],below_depth:[81,82],benefit:1221,bernoul:[1150,1158,1238,1246],best:[84,924,978,1221],beta1:[1019,1021,1022,1026,1254,1255,1256],beta2:[1019,1021,1022,1026,1254,1255,1256],beta:[1167,1168],between:[81,82,83,924,927,1042,1047,1113,1117,1125,1127,1163,1165,1166,1177,1178,1254,1256],bia:[1150,1159,1160,1238,1239,1240,1241,1242,1243,1244,1245,1248],bias_initi:[1238,1239,1240,1241,1242,1243,1244,1245,1248],bilinear:[1035,1036],bilinear_resampl:[159,313,435,570,732,847,1035],bilinearli:[1035,1036],binari:[1163,1164,1181,1184],binary_cross_entropi:[1141,1163],bit:[476,900,911,1035,1037,1041,1177,1178,1179,1221],bitwis:[1181,1184],bitwise_and:[211,364,481,612,805,1169,1181],bitwise_oper:[0,7,8,66,73,74],block:[1221,1264],bool:[15,18,19,81,82,83,84,848,849,850,868,881,885,889,894,897,899,900,910,924,926,931,932,944,947,951,952,956,963,965,973,978,998,1000,1014,1015,1016,1019,1022,1023,1024,1025,1026,1027,1028,1030,1042,1045,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1181,1188,1189,1190,1191,1195,1196,1203,1207,1208,1211,1212,1214,1215,1216,1217,1218,1219,1220,1227,1228,1238,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],both:[84,924,943,1203,1205],bottom:1221,boundari:[81,82,1125,1129],branch:[84,848,849],brittl:84,broadcast:[81,82,924,934,951,980,981,982,989,1042,1045,1052,1056,1059,1132,1134,1135,1136,1137,1138,1139,1140,1181,1184,1190,1191,1196,1203,1205,1208,1211,1212,1218,1219,1220],broadcast_to:[260,663,847,924],build:[1069,1221,1238,1249,1250,1251],build_mod:[1238,1249,1250,1251],builder:[84,1221],built:[850,924,927,1069,1238,1249,1250,1251],busi:84,bypass:1264,cach:[850,866,924,935],cache_fn:[847,924],calcul:[81,82,83,1052,1059,1181,1182,1183,1186,1187,1192,1193,1194,1198,1199,1200,1201],call:[84,850,894,924,988,996,1013,1019,1023,1069,1113,1114,1117,1121,1238,1249,1250,1251,1254,1258,1264,1267],callabl:[81,82,848,849,850,859,860,894,924,935,947,949,978,1013,1065,1066,1067,1068,1069,1113,1117,1118,1119,1121,1122,1150,1161],can:[84,850,892,893,894,924,990,1035,1037,1069,1221,1263,1264,1267],cancel_join_thread:1069,cannot:84,captur:1221,cast:[81,82,125,260,398,531,663,847,900,924,939,1035,1037,1041],catch_except:[924,947],categori:84,caus:84,ceil:[211,364,481,612,805,924,927,1169,1181],cell:[1150,1160,1238,1247],certain:[81,82,924,927,976,977],chain:[81,82,1065,1066,1067,1260,1261],chang:[84,850,924,990,1069,1113,1115,1122,1221,1263],channel:[924,956,1035,1037,1038,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248],check:[15,16,17,18,19,81,82,84,850,889,899,900,905,914,923,924,933,952,965,973,1005,1015,1019,1025,1069,1113,1114,1121,1221,1264],check_nest:[1113,1121],check_shap:[81,82],check_submod_ret:[1250,1251],check_typ:[81,82],choic:[1221,1264],choleski:[736,847,1042],choos:[924,1016,1042,1047,1052,1056,1181,1195,1196,1221],choose_random_framework:100,chosen:[81,82,924,927,1016],chunk:[850,892,893,894,1069],chunk_siz:[850,894,1069],circl:[1052,1053,1054],clark:1221,clear:[84,850,866,1069],clear_framework_stack:100,clear_mem_on_dev:[396,655,847,850],click:1221,clip:[81,82,260,398,663,847,924,937,938,980,982,1221],clip_matrix_norm:[847,924],clip_max:[81,82],clip_min:[81,82],clip_vector_norm:[81,82,847,924],clipped_delta:1069,clone:[81,82,847,850,869,870,871,872,1069],clone_arrai:[847,1069],clone_it:[847,1069],clone_nest:[847,1069],clonedit:[847,1069],cloneditem:[847,1069],clonednest:[847,1069],close:[84,1035,1040,1052,1054,1069,1267],closest:[900,905,1181,1185],closest_valid_dtyp:[847,900],code:[81,82,83,84,446,1221,1222,1263,1264],codebas:[850,892,893,1069,1221,1264,1267],codomain:[1181,1182,1183,1186,1187,1192,1194,1198,1199,1200,1201],colab:1221,collect:[15,81,82,396,398,430,435,439,443,444,446,848,850,900,924,1019,1035,1042,1049,1052,1069,1113,1125,1132,1142,1150,1163,1167,1224,1238,1252,1254],color:[81,82,83,1265,1266],column:[924,966],combin:[81,82,83,1035,1040,1221,1267],combined_batch_s:1069,come:1264,command:1221,comment:84,commit:1267,common:[81,82,84,1052,1056],common_key_chain:[81,82],commun:[84,1221,1264],communuti:84,compar:[81,82,924,926,931,932,1214,1215],comparison_oper:[0,9,10,66,75,76],compat:[924,951,990,1052,1059,1181,1184,1190,1191,1196,1203,1208,1218,1219,1220,1221,1267],compil:[260,398,663,847,1250,1251,1254,1255,1256,1257,1258,1259],compile_on_next_step:[1250,1251,1254,1255,1256,1257,1258,1259],complet:[81,82,84,1042,1047,1069],complex:[1264,1267],compliant:[1181,1195,1196],compon:[924,943],composit:84,comput:[81,82,850,894,924,937,938,944,945,951,979,1019,1021,1022,1023,1024,1026,1027,1028,1030,1032,1035,1038,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1060,1061,1062,1063,1113,1117,1132,1133,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1159,1161,1163,1164,1165,1166,1181,1184,1190,1191,1195,1196,1197,1203,1205,1206,1208,1216,1217],concat:[81,82,850,879,880,881,882,894,924,956,1069],concaten:[81,82,125,260,398,531,663,847,924,956,1069,1221],concatten:[81,82,850,879,880,881,882,894,1069],condit:[398,848,849,924,1016,1113,1121],conditon:[1113,1121],config:[81,82,1069],config_list:1069,configur:[81,82],conflict:84,conform:84,conjunct:1264,connect:[1238,1248,1249],consid:[81,82,1042,1047,1181,1195,1196,1263,1267],consist:[81,82,850,882,1069,1132,1133,1250,1251,1264],constant:[850,859,860,924,940,1069,1113,1117,1163,1164,1165,1166,1167,1168,1169,1229,1230,1234,1237,1250,1251,1252,1253,1264],constant_kwarg:1069,constant_pad:[260,398,531,663,847,924],constitu:[81,82],construct:[924,1007,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263],constructor:[81,82,83,924,928,1260,1261],consum:[850,1069],cont_feat_dim:[1150,1161],contaienr:[81,82],contain:[15,18,19,83,850,869,873,894,900,904,924,925,929,936,937,938,941,951,965,980,982,991,1002,1003,1019,1021,1022,1024,1026,1027,1028,1052,1059,1065,1066,1067,1068,1069,1125,1126,1132,1134,1135,1136,1138,1140,1171,1173,1175,1176,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1208,1216,1217,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261],container0:[81,82],container_combine_method:[81,82,83],container_rightmost:[81,82],container_typ:[398,663,847,924],contains_sub_contain:[81,82],contains_sub_structur:[81,82],content:[81,82],context:[398,924,983,1150,1161,1238,1249],context_dim:[1238,1249],contextmanag:[100,101],continu:[84,1069,1264],contract:[81,82,1132,1133],contribut:[1221,1222],contributor:[84,1221],control:1221,conv1d:[190,343,460,784,1141,1150,1221,1238],conv1d_transpos:[190,343,460,784,1141,1150],conv1dtranspos:[1221,1238],conv2d:[190,343,460,595,784,1141,1150,1221,1238],conv2d_transpos:[190,343,460,784,1141,1150],conv2dtranspos:[1221,1238],conv3d:[190,343,460,595,784,1141,1150,1221,1238],conv3d_transpos:[190,343,460,784,1141,1150],conv3dtranspos:[1221,1238],convent:[81,82,1132,1133,1203,1205],conver:[850,866,877,889,896,899,1069],convers:[16,17,18,19,81,82,1069,1221],convert:[15,16,17,18,19,81,82,84,850,877,878,900,906,912,913,924,999,1010,1011,1035,1037,1041,1042,1048,1069,1113,1115,1122,1221,1228],convert_dtyp:[847,900],convolut:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],cool:84,cooler:84,coordin:[924,981,1052,1053,1054,1056],copi:[81,82,84,446,924,942,1069,1113,1115],copy_arrai:[398,663,847,924],copy_nest:[847,1113],core:[850,887,1221],corner:84,correct:[84,1221,1264],correctli:[81,82,84,1042,1045,1052,1056,1132,1134,1135,1136,1137,1138,1139,1140,1211,1212],correspond:[81,82,924,939,1125,1126],cos:[211,481,612,805,924,956,1052,1053,1063,1169,1181,1264],cosh:[211,481,612,746,805,847,1052,1169,1181],cosin:[1052,1053,1058,1181,1182,1186,1187],cost:[1019,1021,1022,1024,1026,1027,1028,1065,1066,1067,1068],cost_fn:[1065,1068],could:1267,count:[81,82,1069,1132,1137,1139,1209,1210,1218,1219,1220],cours:84,cprint:1265,cpu:[81,82,84,850,887,889,895,896,899,924,927,930,958,959,966,976,977,985,986,992,993,1018,1069,1125,1126,1127,1128,1129,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261,1263,1264],creat:[81,82,850,859,860,924,927,930,957,958,959,966,976,977,985,986,992,993,1009,1018,1019,1032,1069,1125,1126,1127,1128,1129,1171,1172,1173,1174,1176,1221,1222,1227,1228,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1267],create_if_abs:[81,82],create_vari:1229,creation:[81,82,83,84,1169],creation_funct:[470,471,472,473,474,475,1171,1172,1173,1174,1175,1176],crop:[1035,1039],crop_siz:[1035,1039],cross:[260,663,847,924,1163,1164,1165,1166],cross_entropi:[1141,1163],cuda:[81,82,850,859,878,895,924,927,930,958,959,966,976,977,985,986,992,993,1018,1069,1125,1126,1127,1128,1129,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261],cumprod:[125,260,398,663,847,924],cumsum:[663,847,924],cumul:[924,944,945],current:[81,82,83,84,850,859,883,884,886,890,900,906,914,923,924,946,960,968,972,984,987,1069,1113,1114,1121,1221,1267],current_framework:100,current_framework_str:[398,663,847,924,1069],cutoff_at_depth:[81,82],cutoff_at_height:[81,82],d_in:[1150,1151,1152,1153,1154,1155,1156],d_out:[1150,1151,1152,1153,1154,1155,1156],da_can_termin:1069,da_dim_s:[850,1069],da_direct:1069,da_tune_step:[850,1069],dai:[84,1267],daniel:1221,data:[81,82,83,84,850,852,853,854,855,856,857,862,863,864,878,900,904,905,906,910,911,912,913,914,915,916,923,924,927,930,951,957,966,973,986,990,1001,1005,1018,1019,1025,1033,1052,1059,1069,1150,1159,1169,1171,1172,1173,1174,1175,1176,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1214,1215,1218,1219,1220,1221],data_format:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],data_type_funct:[476,478,479,1177,1178,1179],dataset:[81,82],datatyp:[81,82,900,905,915,916],dcdw:[1019,1021,1022,1024,1026,1027],debug_mod:85,debug_mode_in:[85,88],debugg:[86,87,88,89,90],decai:[1019,1026,1027,1254,1256,1257],decay_lambda:[1019,1026,1027,1254,1256,1257],decid:[81,82,1267],decompos:[1042,1043,1047],decomposit:[1042,1043,1047,1203,1207],decrement:[924,969],dedic:[1019,1033,1227,1228],deep:[81,82,1221],deep_copi:[81,82],deeper:[850,872,876,882,1069,1113,1122,1221],deepli:[1113,1115],def:[84,101,207,360,477,608,801,851,858,861,901,902,903,1020,1069,1073,1080,1221,1230,1233,1236,1263,1264,1267],default_dev:84,default_devic:[847,850],default_dtyp:[84,847,900],default_float_dtyp:[847,900],default_int_dtyp:[847,900],default_key_color:[81,82,83],default_nod:[847,1069],default_rng:446,default_v:[924,947],defaultdevic:[850,851],defaultdtyp:[900,901],defaultfloatdtyp:[900,902],defaultintdtyp:[900,903],defin:[84,924,943,985,1018,1125,1127],definit:84,degre:[1052,1063],del:1069,delai:84,delet:84,delta:[1019,1021,1069],delta_dim_s:1069,delta_percent_mem:1069,delta_sf:1069,delta_util:1069,demo:1221,denomin:[924,955,962,995,1002,1003,1167,1168,1252,1253],denot:84,dens:[1238,1248],depend:[924,1016,1181,1182,1183,1186,1187,1192,1193,1194,1198,1199,1201,1203,1207,1214,1215,1221],depth:[81,82,398,422,850,872,876,882,924,964,985,1069,1113,1122,1250,1251],depth_cutoff:[81,82],depthwis:[1150,1157,1238,1245],depthwise_conv2d:[190,343,460,595,784,1141,1150],depthwiseconv2d:[1221,1238],deriv:[1019,1021,1022,1024,1026,1027,1028,1113,1115,1122,1171,1174,1221,1250,1254,1258,1260],descend:[1203,1207,1214,1215],descent:[1019,1024,1254,1259],describ:[81,82,1132,1133],descript:[1203,1208],design:[1221,1222],desir:[81,82,850,895,900,904,924,927,930,966,967,986,1018,1035,1040,1069,1132,1134,1135,1136,1138,1140],desired_aspect_ratio:[435,438,1035,1040],desired_percent_increas:1069,detail:1267,detect:[81,82,1113,1114,1121],detect_key_diff:[81,82],detect_shape_diff:[81,82],detect_value_diff:[81,82],determin:[81,82,850,885,887,888,897,900,904,905,911,914,915,916,923,924,926,927,930,931,932,965,968,972,973,1005,1015,1019,1025,1052,1059,1065,1066,1067,1068,1069,1150,1161,1181,1182,1183,1184,1186,1187,1188,1189,1192,1194,1198,1199,1200,1203,1204,1205,1206,1208,1218,1219,1220],dev:[81,82,83,84,118,254,396,398,399,401,411,412,413,420,421,422,423,424,429,446,447,470,473,524,655,847,850,853,854,856,857,859,860,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,886,889,890,891,892,893,894,895,896,899,924,927,930,958,959,966,976,977,985,986,992,993,1018,1019,1034,1125,1126,1127,1128,1129,1171,1174,1227,1228,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261],dev_clon:[81,82,847,850],dev_clone_arrai:[847,850],dev_clone_it:[847,850],dev_clone_nest:[847,850],dev_dist:[81,82,847,850],dev_dist_arrai:[847,850],dev_dist_it:[847,850],dev_dist_nest:[847,850],dev_from_str:[84,118,254,396,524,655,847,850],dev_mapp:850,dev_str:[81,82],dev_to_str:[118,254,396,524,655,847,850],dev_unifi:[847,850],dev_unify_arrai:[847,850],dev_unify_it:[847,850],dev_unify_nest:[847,850],dev_util:[847,850],devclonedit:[847,850],devcloneditem:[847,850],devclonednest:[847,850],devdistit:[847,850],devdistitem:[847,850],devdistnest:[847,850],develop:[84,1221,1264,1267],deviat:[81,82,1125,1128,1132,1138,1167,1168,1252,1253],devic:[21,29,81,82,84,397,398,410,470,471,472,475,847,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,924,927,930,957,958,959,966,976,977,985,986,992,993,1018,1019,1034,1125,1126,1127,1128,1129,1171,1172,1173,1174,1175,1176,1221,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261],devmanag:[850,858],devmapp:[847,850,860],devmappermultiproc:[847,850],diag:[1203,1207],diagon:[234,378,504,635,828,924,966,1169,1171,1175,1203],dict:[15,16,17,18,19,81,82,83,850,852,855,859,860,862,872,873,874,875,876,924,948,949,950,978,1065,1066,1067,1069,1113,1115,1116,1117,1120,1122,1227,1228],dict_in:[81,82,83],dictat:84,dictionari:[81,82,83],diff:[81,82],diff_kei:[81,82],differ:[81,82,83,84,850,869,870,873,874,1042,1047,1069,1150,1159,1177,1178,1221,1264,1267],differenti:[1221,1264],dilat:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],dim:[81,82,924,985,1035,1036,1040,1069,1203,1207,1238,1249],dim_siz:[81,82,850,1069],dimens:[81,82,83,850,881,924,934,939,943,948,949,950,953,956,963,975,985,989,990,1000,1001,1004,1012,1014,1035,1039,1042,1045,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1160,1163,1165,1166,1171,1175,1203,1204,1205,1207,1208,1209,1210,1211,1212,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245,1248,1249],dimension:[81,82,446,924,1000,1001,1203,1205,1207,1208,1218,1219,1220],direct:1069,directli:[84,1113,1122,1264,1267],directori:[924,997,1008],discord:84,discret:[1163,1165],discuss:84,disk:[81,82,1035,1037],distanc:[924,927],distribut:[81,82,850,869,873,874,875,876,1069,1125,1126,1127,1128,1129,1150,1158,1238,1246,1250,1251],distribute_nest:[847,1069],distributedarrai:[81,82],distrubt:[1163,1165],dive:[1221,1264],divid:[81,82,847,924,1000,1002,1052],dividend:[1052,1059],divis:[924,955,962,995,1002,1003,1019,1021,1022,1026,1052,1059,1254,1255,1256],divisor:[1019,1021,1022,1026,1052,1059,1254,1255,1256],doc:1221,docstr:84,document:84,doe:[81,82,84,924,927,1000,1263],doesn:[1042,1047,1221],doing:84,domain:[1052,1053,1181,1182,1183,1186,1187,1192,1194,1198,1199,1200,1201],don:[84,1221],done:84,door:1267,dot:[1042,1044,1150,1161,1162,1238,1249],down:1263,downscal:[924,937,938],drag:[1221,1267],draw:[1125,1126,1128,1129],drawn:[1125,1126,1127,1128,1129],drop:[1221,1267],dropout:[1141,1150,1221,1238,1249],dropout_r:[1238,1249],ds_tune_step:850,dtype:[81,82,84,125,260,398,399,401,402,410,413,429,470,471,472,473,475,476,478,479,531,663,847,904,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,927,930,957,966,985,986,1018,1171,1172,1173,1174,1176,1177,1178,1179,1211,1212],dtype_bit:[125,260,398,531,663,847,900],dtype_from_str:[84,125,260,398,531,663,847,900],dtype_in:[398,407,408,409,900,906,911,912,913,914,915,916,923],dtype_to_str:[125,260,398,531,663,847,900],duplic:[81,82,84],dure:[81,82,84,848,849,924,1013,1019,1021,1022,1026,1065,1066,1067,1068,1203,1205,1250,1251,1254,1255,1256,1258],dynam:[84,398,403,848,849],each:[81,82,83,84,850,859,860,869,870,871,872,873,874,875,881,893,894,924,925,926,940,951,989,1000,1004,1007,1017,1019,1022,1024,1026,1027,1028,1035,1038,1052,1054,1059,1061,1062,1069,1113,1117,1125,1126,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1158,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1207,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1264],eager:1264,easi:1267,easili:1221,econom:1267,ecosystem:1221,edg:[924,936,940,1017],effect:[1019,1028],effective_grad:[1019,1028],effici:1267,einop:[81,82,924,948,949,950],einops_rearrang:[81,82,847,924],einops_reduc:[81,82,847,924],einops_repeat:[81,82,847,924],einstein:[81,82,1132,1133],einsum:[81,82,176,331,448,585,764,847,1132],either:[81,82,84,924,947,978,981,983,1065,1066,1067,1068,1069,1181,1192,1194,1198,1203,1205,1238,1249,1250,1251,1264],eleg:1069,element:[81,82,446,850,871,875,881,900,904,924,925,927,929,931,932,936,937,938,944,945,951,954,955,966,967,980,982,989,991,1000,1011,1016,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1132,1133,1135,1137,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1158,1171,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1209,1210,1216,1217,1218,1219,1220,1238,1246],elementwis:[81,82,1169],elementwise_affin:[1252,1253],elementwise_funct:[1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],elemtn:[1125,1126],elif:1069,els:[84,924,933,947,952,1069],elsewher:[924,1016],emphas:1221,empti:[81,82,200,353,470,601,794,1042,1047,1069,1169,1171,1218,1219,1220],enabl:[81,82,83,84,1221],encapsul:[1177,1179],encod:[924,956,1035,1037],end:[924,927,1221,1264],engag:84,ensur:84,entir:[81,82,850,894,1069,1218,1219,1220,1221,1238,1247],entri:[81,82,924,976,977,1000,1001],entropi:[1163,1164,1165,1166],enumer:1069,environ:1221,eps:[476,1177,1178],epsilon:[1019,1021,1022,1026,1163,1164,1165,1166,1167,1168,1252,1253,1254,1255,1256],equal:[81,82,211,481,612,805,847,924,926,931,932,940,1000,1017,1052,1063,1125,1129,1181,1188,1203,1204,1214,1215],equality_matrix:[924,926],equat:[81,82,1132,1133],equival:[924,927,1052,1063,1181,1195,1196,1203,1208],erf:[444,746,847,1052],error:[81,82,84,850,924,1001,1052,1060,1069,1142,1143,1250,1251,1254,1258],etc:[81,82,84,850,895,924,927,930,958,959,966,976,977,985,986,992,993,1018,1069,1125,1126,1127,1128,1129,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261,1267],euclidean:[1203,1208],euler:1170,evalu:[81,82,924,981,1113,1114,1121,1181,1192,1193,1194,1197,1218,1219,1220],even:[84,1267],evenli:[81,82,924,927,976,977,1000],everi:[84,924,926,1267],exact:[81,82],exampl:[84,848,849,924,936,1004,1042,1047,1221,1263,1264,1267],example_input:[398,403,848,849],exc_tb:1069,exc_typ:1069,exc_val:1069,exce:[924,982],except:[81,82,85,88,924,927,933,939,947,1013,1069,1218,1219,1220],excess_s:1069,excit:[1221,1264],exclud:[100,102,924,927,1125,1129],exclus:[81,82,398,405,418,430,432,924,944,973,1019,1025,1125,1127],execut:[84,924,1013,1264],execute_with_gradi:[156,308,430,565,726,847,1019,1221,1263],exist:[81,82,847,924,947,1069,1221,1254,1258,1267],exp:[746,847,1052],expand:[81,82,924,953,956],expand_dim:[81,82,260,663,847,924,1069],expect:[924,928],explain:[84,1264],explicitli:[84,1238,1247,1249,1250,1251,1264],expon:[924,1003],exponenti:[1052,1060,1061],expos:[924,930,941],express:[924,981,1181,1186,1198],exsit:[81,82],extend:84,extens:84,extra:[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,81,82,83,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1221],eye:[1042,1044],fabian:1221,fabio:1221,factor:[850,859,892,893,894,1019,1021,1022,1026,1027,1069,1150,1151,1152,1153,1154,1155,1156,1157,1203,1207,1238,1239,1240,1241,1242,1243,1244,1245,1254,1255,1256,1257],fail:84,falck:1221,fall:[1250,1251,1254,1258],fallback_to_non_compil:[1250,1251,1254,1258],fals:[15,18,19,81,82,83,100,107,108,109,110,111,396,398,405,406,418,425,428,430,431,432,439,440,850,868,881,889,894,899,900,907,908,909,910,924,926,944,947,952,956,963,973,978,998,1000,1014,1016,1019,1022,1023,1024,1025,1026,1027,1028,1042,1045,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1132,1134,1135,1136,1137,1138,1139,1140,1181,1188,1189,1195,1196,1203,1208,1211,1212,1214,1215,1216,1217,1218,1219,1220,1227,1228,1250,1251,1254,1255,1256,1257,1258,1259],fan_in:1229,fan_mod:1229,fan_out:1229,far:[1113,1114,1121,1263],faster:[848,849],favourit:[1221,1263],feasibl:1267,feat_dim:[1150,1161,1162],fed:[850,894,1069],feed:[850,894,1069],few:84,field:1267,file:[81,82,84,924,997,1008,1250,1251],filepath:[81,82],fill:[81,82,924,957,986,1125,1127,1171,1172,1173,1174,1176],fill_valu:[398,410,924,957],filter:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245,1267],filter_s:[1238,1239,1240],filter_shap:[1238,1241,1242,1243,1244,1245],find:[81,82,84,1267],find_sub_contain:[81,82],find_sub_structur:[81,82],finfo:[206,207,359,360,476,477,607,608,800,801,1169,1177],finish:[1221,1267],finit:[1181,1188],first:[81,82,84,446,848,849,850,881,924,931,939,943,951,976,977,1004,1006,1019,1023,1065,1066,1067,1068,1069,1113,1114,1121,1125,1131,1132,1137,1139,1181,1184,1190,1191,1196,1203,1204,1205,1207,1238,1249,1250,1251,1254,1258,1264,1267],firstlayersiren:[1221,1229],firstli:[1264,1267],fist:[850,894,1069],fit:[81,82,396,398,430,435,439,443,444,446,924,989,1035,1040],fix:84,fkt:1267,flag:[81,82,84,1019,1025],flat:[81,82,924,989,992],flat_list:[81,82],flatten:[81,82,924,956,989,1132,1134,1135,1136,1138,1140,1203,1208,1211,1212],flatten_key_chain:[81,82,1250,1251],flexibl:[1221,1264],flip:[81,82,240,383,510,641,834,1169,1209],float32:[84,398,413,900,904,912,913,924,927,930,966,986,1018],float_dtyp:[900,908,918],float_img_to_uint8_img:[847,1035],floor:[260,398,663,847,924,955,1069],floormod:[260,398,663,847,924],fluid:1267,folder:[84,1221],follow:[81,82,84,850,894,924,969,970,971,1002,1003,1019,1022,1024,1026,1027,1028,1069,1113,1117,1122,1150,1161,1162,1177,1179,1203,1208,1221,1238,1248,1254,1258],followng:[1177,1178],fomaml_step:[847,1065],forget:[1019,1021,1022,1026,1254,1255,1256],fork:[924,983,1221,1222],forkserv:[924,983,1069],form:[15,16,17,18,19,81,82,924,930,1019,1022,1024,1026,1027,1028,1113,1115,1122,1150,1171,1175,1203,1204],format:[81,82,84,850,868,900,904,906,910,924,927,930,966,986,1018,1069,1132,1133,1221,1263,1264],format_fn:[81,82],format_key_chain:[81,82],forward:[1250,1251,1254,1258,1263],found:[81,82,83],fourier:[924,956],fourier_encod:[847,924],framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,24,25,26,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,68,70,72,74,76,78,80,81,82,83,84,86,87,88,89,90,101,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,201,202,203,204,205,207,208,209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,241,243,246,248,250,251,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,314,315,316,318,319,320,321,323,324,327,328,329,330,332,333,334,335,336,337,338,339,342,344,345,346,347,348,349,350,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,384,386,389,392,393,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,436,437,438,440,441,442,445,447,449,450,451,452,453,454,455,458,459,461,462,463,464,465,466,467,471,472,473,474,475,477,478,479,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,505,506,507,508,509,511,513,516,518,520,521,525,526,527,528,529,530,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,566,567,568,569,571,572,573,575,576,577,581,582,583,584,586,587,588,589,590,591,592,596,597,598,602,603,604,605,606,608,609,610,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,636,637,638,639,640,642,644,647,649,651,652,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,727,728,729,730,731,733,734,735,737,738,739,740,741,742,744,745,747,748,749,750,751,752,753,754,755,756,758,759,760,761,762,763,765,766,767,768,769,770,771,774,775,776,777,778,779,780,782,783,785,786,787,788,789,790,791,795,796,797,798,799,801,802,803,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,829,830,831,832,833,835,837,840,842,844,845,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1172,1173,1174,1175,1176,1178,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205,1206,1207,1208,1210,1212,1215,1216,1217,1219,1220,1221,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1266,1267],framework_handl:[100,102,103,104,105,106,107,108,109,110,111,112],framework_str:1069,framewrk:[924,983],free:84,freed:84,freeli:84,frequenc:[924,956],from:[81,82,83,84,850,859,860,894,900,906,924,947,958,959,966,990,1001,1009,1016,1019,1022,1026,1035,1039,1042,1047,1065,1066,1067,1068,1069,1113,1115,1122,1125,1126,1127,1128,1129,1132,1137,1139,1150,1158,1161,1171,1174,1181,1200,1203,1204,1209,1210,1216,1217,1218,1219,1220,1221,1227,1228,1238,1246,1249,1254,1258,1263,1264],from_cal:[1250,1251],from_disk_as_hdf5:[81,82],from_disk_as_json:[81,82],from_disk_as_pickl:[81,82],from_flat_list:[81,82],from_numpi:[81,82],frustrat:84,full:[84,125,260,398,531,663,847,924,1042,1047,1177,1178,1221],full_matric:[1203,1207],fulli:[84,1221,1238,1248,1249,1263],func:[81,82,398,403,430,431,848,849,850,894,924,935,1019,1023,1069],further:[84,1267],furthermor:1267,futur:1267,gain:1229,gamma:[1167,1168],gather:[81,82,125,260,398,531,663,847,924,959],gather_nd:[81,82,125,260,398,531,663,847,924],gauss:[1052,1060],gaussian:[1142,1143],geglu:[1221,1224],gelu:[341,457,773,1141,1142,1221,1224],gener:[31,49,81,82,84,396,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,446,847,848,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1025,1125,1127,1129,1130,1221,1254,1258],geometr:[924,956],get:[81,82,84,850,859,860,868,883,884,889,893,896,899,900,910,911,924,928,960,961,962,988,1069,1177,1178,1179,1221,1238,1247,1267],get_all_arrays_in_memori:[847,924],get_all_arrays_on_dev:[847,850],get_framework:100,get_initial_st:[1238,1247],get_min_bas:[847,924],get_min_denomin:[847,924],get_mod_kei:[1250,1251],get_num_dim:[398,663,847,924],get_referrers_recurs:[847,924],getfullargspec:1069,gist:1221,give:[84,924,990,1264],given:[81,82,84,850,883,889,892,893,894,896,899,900,904,924,927,930,936,944,945,959,976,977,986,989,992,993,1000,1007,1012,1014,1018,1019,1021,1022,1024,1026,1027,1028,1042,1044,1048,1052,1053,1069,1113,1118,1119,1125,1128,1129,1131,1132,1135,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1171,1172,1209,1210,1227,1228,1267],global:[81,82,83,850,859,860,867,892,893,894,900,907,908,909,924,946,961,962,988,994,995,996,1002,1003,1019,1034,1069,1167,1168,1252,1253],global_framework:[100,104],global_norm:[81,82],glorotuniform:[1221,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248],good:84,googl:1221,got:[84,1221],gpu0:84,gpu2:84,gpu:[850,885,888,1069],gpu_is_avail:[396,847,850,1069],grad:[1221,1254,1258,1263],gradient:[33,51,81,82,431,432,433,434,847,850,894,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1038,1065,1066,1067,1068,1221,1254,1255,1256,1257,1258,1259,1263,1267],gradient_descent_upd:[847,1019,1065,1066,1067,1068],gradient_imag:[159,313,435,570,732,847,1035],gradienttrack:[1019,1020],graph:[1019,1022,1024,1026,1027,1028,1250,1251],greater:[81,82,924,927,954,1001,1125,1129],green:[81,82,83,1265,1266],grid:[924,981],group:[1035,1040],guid:[84,1221,1222,1267],gym:1221,h5_file_s:[81,82],h5_obj_or_filepath:[81,82],h5py:[81,82],had:1267,half:[924,927,1069,1125,1129],hand:1221,handl:[81,82,83,84,848,849,850,866,868,877,878,889,896,899,1019,1022,1024,1026,1027,1028,1069,1254,1255,1256,1257,1258,1259],happen:84,has:[81,82,84,924,1004,1042,1047,1052,1055,1203,1205,1206,1211,1212],has_kei:[81,82],has_key_chain:[81,82],has_nan:[81,82,847,924],hasattr:1069,have:[81,82,84,924,939,943,948,949,950,951,957,1004,1019,1025,1033,1052,1059,1069,1171,1172,1173,1174,1175,1176,1177,1178,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1205,1207,1208,1209,1210,1211,1212,1214,1215,1218,1219,1220,1221,1263,1264],haven:84,hdf5:[81,82,1250,1251],head:[1150,1161,1238,1249],head_dim:[1238,1249],height:[1035,1040],height_cutoff:[81,82],help:[84,100,396,397,476,850,862,863,864,865,900,1019,1221,1229,1231,1232,1234,1235,1237],here:[84,1221],hidden:[1150,1160,1238,1247],hierarch:[924,941],hierarchi:[81,82],high:[81,82,446,1125,1127,1129],higher:[1019,1022,1024,1026,1027,1028,1203,1207],highest:[1125,1127],highest_util:1069,highest_util_nod:1069,highli:1221,highlight:1267,hint:84,hkt:1267,hold:[900,904,924,927,930,992,993],host:1221,hot:[924,985],how:[1221,1238,1249,1250,1251,1264,1267],howev:[84,1264],http:1267,hyperbol:[1052,1057,1058,1064,1142,1149,1181,1182,1183,1187,1199,1201],hypothet:[84,1267],icon:1221,idea:1221,ident:[81,82,84,125,260,398,531,663,847,924],identical_array_shap:[81,82],identical_config:[81,82],identical_structur:[81,82],ieee:[1170,1177,1178,1181,1200],if_exist:[81,82],ignor:[81,82,1254,1258],ignore_key_error:[81,82],ignore_miss:[1254,1258],ignore_non:[81,82],iii:84,iinfo:[206,359,476,607,800,1169,1177],imag:[35,53,436,437,438,847,924,975,1036,1037,1038,1039,1040,1041,1150,1151,1152,1153,1154,1156,1157,1221,1267],image_dim:[1035,1039],imkkhk:1267,immedi:[1221,1264,1267],implement:[84,1181,1182,1183,1186,1187,1192,1193,1194,1198,1199,1201,1214,1215,1221,1264,1267],in_featur:[1150,1159],inadvert:84,includ:[81,82,84,924,927,965,1002,1003,1015,1113,1114,1125,1129,1203,1208,1218,1219,1220,1238,1248,1249,1252,1253,1263],include_deriv:[1113,1115,1122],include_empti:[81,82],include_inf:[81,82,924,965,1015],include_nest:[1113,1114],include_self:[81,82],inclus:[84,1125,1127],incom:[1150,1159],increas:[850,872,876,882,924,940,953,1017,1069,1113,1122],increasingli:1267,increment:[924,970,1069],inde:1221,indent:[81,82,83],independ:[1125,1126],index:[81,82,398,446,924,929,958,959,981,1001,1004,1113,1116,1118,1119,1120,1123,1211,1212,1214,1215],index_nest:[847,1113],indic:[81,82,398,411,412,422,423,424,924,929,958,959,967,985,992,993,1113,1114,1116,1118,1119,1120,1121,1123,1124,1125,1126,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1203,1208,1211,1212,1214,1215,1238,1239,1240,1241,1242,1243,1244,1245,1250,1251],indices_wher:[125,260,398,663,847,924],indistinguish:[1181,1200],inevit:1267,inf:[81,82,924,965,974,1015,1052,1055,1203,1208],infer:[848,849,924,963,966,990,998,1035,1039,1042,1047,1171,1174,1216,1217,1264,1267],infin:[924,974,1181,1182,1183,1185,1186,1187,1188,1192,1194,1198,1199,1200,1201,1203,1208,1218,1219,1220],infinit:[1181,1200],inform:[1019,1030,1177,1178,1179],init_c:[1150,1160],init_h:[1150,1160],init_on_first_step:[1254,1258],initi:[81,82,83,84,100,396,397,476,850,862,863,864,865,900,1019,1069,1150,1160,1221,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1254,1258],initialz:[1250,1251],inner:[1065,1066,1067,1068,1203,1205],inner_batch_fn:[1065,1066,1067],inner_batch_shap:[1150,1159],inner_cost_fn:[1065,1066,1067],inner_grad_step:[1065,1066,1067,1068],inner_learning_r:[1065,1066,1067,1068],inner_optimization_step:[1065,1066,1067,1068],inner_v:[1065,1066,1067],innermost:[1171,1175,1203,1204],inp:1069,inplac:[81,82,924,933,968,972,1005,1019,1022,1024,1026,1027,1028,1227,1228,1254,1255,1256,1257,1258,1259],inplace_arrays_support:[398,847,924],inplace_decr:[125,260,398,531,663,847,924],inplace_incr:[125,260,398,531,663,847,924],inplace_oper:[0,11,12,66,77,78],inplace_upd:[81,82,125,260,398,531,663,847,924,1227,1228],inplace_variables_support:[398,847,924],input:[15,18,19,81,82,83,84,848,849,850,859,860,867,868,869,872,873,876,882,894,895,900,904,905,907,908,909,910,911,915,916,924,925,926,929,931,932,933,934,936,937,938,939,940,942,944,945,947,948,949,950,951,952,953,954,955,956,963,965,966,967,969,970,971,973,974,975,979,980,981,982,989,991,998,999,1001,1004,1005,1006,1007,1009,1010,1011,1012,1014,1015,1017,1019,1023,1025,1030,1034,1035,1036,1037,1038,1039,1041,1042,1045,1047,1049,1050,1051,1052,1055,1057,1058,1059,1063,1064,1065,1066,1067,1068,1069,1125,1126,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1171,1174,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1252,1253,1264],input_ax:[850,894,1069],input_channel:[1238,1239,1240,1241,1242,1243,1244,1247,1248],input_queu:1069,inputs_split:1069,insert:[924,953,1211,1212],insid:84,inspect:1069,inspir:1267,instal:1221,instanc:[15,16,17,18,19,81,82,84,446,850,859,1069,1227,1228,1260,1261],instead:[81,82,84,446,1132,1134,1135,1136,1137,1138,1139,1140,1267],int32:84,int64:[900,904,924,927,930,966,986,1018],int_dtyp:[900,909,919],integ:[81,82,446,900,916,924,927,954,991,1000,1125,1127,1130,1177,1179,1181,1184,1185,1203,1208,1218,1219,1220],integr:1221,intend:84,inter:1221,interact:1221,interchang:[81,82,924,1006],interest:1221,interfac:[924,930,1264],intermedi:[81,82],intern:[81,82,850,1019,1033,1069,1113,1114,1121,1122,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1260,1261],interpol:[924,975],intersect:[1052,1053],interv:[81,82,924,927,936,976,977,1052,1054,1125,1129,1218,1219,1220],introduc:1267,inv:[736,847,1042,1267],invalid:[1218,1219,1220],invalid_dtyp:[847,900],invers:[1042,1044,1046,1052,1053,1054,1055,1057,1181,1182,1183,1267],invert:[1042,1044,1046],invest:1267,investig:84,invoc:[848,849],irrespect:1221,is_al:1069,is_arrai:[125,260,398,531,663,847,924,1069],is_float_dtyp:[847,900],is_int_dtyp:[847,900],is_mean:1069,is_sum:1069,is_vari:[156,308,430,565,726,847,1019],isfinit:[211,364,481,612,805,1169,1181],isinf:[260,531,663,847,924],isinst:1069,isnan:[211,364,481,612,805,1169,1181],isnumer:1069,issu:[1221,1222],issue_numb:84,item:[15,19,81,82,850,859,860,862,869,871,873,875,881,900,907,924,941,964,1002,1003,1069,1113,1117,1118,1119,1122,1123,1124,1221,1250,1251,1263],iter:[15,16,17,18,19,81,82,83,848,849,850,853,854,856,857,859,860,863,864,871,873,874,875,876,881,894,924,926,934,939,940,966,981,986,989,990,993,998,1000,1004,1007,1012,1017,1069,1113,1114,1115,1117,1121,1122],iterbal:[850,871,875,881,1069],its:[446,850,894,924,966,990,1006,1012,1069,1203,1205,1221],itself:[1113,1122],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,100,102,103,104,105,106,107,108,109,110,111,112,114,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,470,471,472,473,474,475,476,478,479,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1265,1266],ivy_backend:[81,82],ivy_bay:1267,ivy_test:84,ivyfcmodel:1263,ivyh:[81,82,83],ivymodul:[187,781],jame:1221,jax:[84,1019,1025,1221,1267],jax_concat:1221,jnp:1221,join:[81,82,924,939,1004,1069],journal:1221,json:[81,82],json_filepath:[81,82],jsonabl:[81,82],just:[84,1221,1238,1247,1267],kaimingnorm:[1229,1233],kalman:1267,kalman_filt:1267,kalman_filter_step:1267,kalman_filter_upd:1267,keep:[81,82,850,895,924,1014,1069,1221,1222,1267],keep_inner_v:[1065,1066,1067],keep_non:[81,82],keep_orig:[81,82],keep_outer_v:[1065,1066,1067],keepdim:[81,82,398,428,439,440,924,1014,1042,1045,1132,1134,1135,1136,1137,1138,1139,1140,1203,1208,1211,1212,1216,1217,1218,1219,1220],kei:[15,16,17,81,82,83,84,850,862,924,941,1065,1066,1067,1069,1113,1116,1120,1150,1161,1162,1221,1227,1228,1238,1249,1254,1258],kept:[81,82,83,1065,1066,1067],kera:1267,kernel:[1150,1160],key1:[81,82],key2:[81,82],key3:[81,82],key_chain:[81,82],key_chains_contain:[81,82],key_length_limit:[81,82,83],key_slic:[81,82],keychain:[81,82],keychain_map:[81,82],keyword:[15,16,17,81,82,83,850,859,860,872,876,882,924,928,948,949,950,978,1069,1113,1117,1250,1251],keyword_color_dict:[81,82,83],kind:[1177,1178,1179,1267],kwarg:[15,16,17,81,82,83,100,104,850,859,872,876,882,924,978,1069,1227,1228,1250,1251],kwarg_stateful_idx:[1250,1251],kwargs_clon:1069,kwargs_dist:1069,kwargs_uni:1069,label:[84,1163,1164,1165,1166],lamb:[1019,1026,1221,1254],lamb_upd:[847,1019],lambda:[1069,1254,1257,1259,1263],lar:[1019,1026,1027,1221,1254],larger:[924,936,1177,1178],largest:[81,82,924,954,1177,1178,1179],lars_upd:[847,1019],last:[81,82,924,927,943,975,1000,1004,1042,1045,1132,1137,1139,1142,1147,1150,1160,1203,1204,1207,1209,1210,1214,1215,1218,1219,1220,1238,1248],later:[81,82,924,935],latest:[1238,1247],layer:[1019,1022,1024,1026,1028,1141,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1221,1229,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261,1267],layer_norm:[1141,1167],layernorm:[1221,1252],layerwis:[1019,1027,1254,1257],lead:[81,82,83],leading_shap:[81,82],leaf:[15,18,19,81,82,1113,1114,1121],leaf_keys_onli:[81,82],leafwis:[81,82],leaki:[1142,1143,1144],leaky_relu:[773,1141,1142],learn:[1019,1022,1024,1026,1027,1028,1042,1047,1065,1066,1067,1068,1125,1131,1216,1217,1221,1254,1255,1256,1257,1258,1259,1264,1267],learnabl:[1167,1168,1252,1253],least:[84,1203,1205],leav:[15,18,19,81,82,1113,1114,1115,1121,1122],left:[81,82,84,1042,1045,1132,1134,1135,1136,1137,1138,1139,1140,1211,1212,1221],leftmost:[81,82],len:1069,length:[81,82,83,924,927,990,1001,1012],lenton2021ivi:1221,lenton:1221,less:[81,82,84,211,364,481,612,805,1069,1125,1129,1169,1181,1182,1185,1192,1194,1200,1203,1208],less_equ:[211,481,612,805,1169,1181],less_util_node_str:1069,let:[1264,1267],level:1221,librari:[1181,1195,1196,1221,1263,1267],lightweight:1221,like:[84,1019,1025,1125,1129,1221,1263,1264,1267],likewis:84,limit:[81,82,83,84,924,936,937,938,1177,1178,1179],linalg:[37,55,847,1043,1044,1045,1046,1047,1048,1221],line:84,linear0:[1221,1263],linear1:1221,linear2:1263,linear:[924,956,975,1042,1141,1142,1143,1144,1145,1150,1158,1169,1221,1238,1239,1240,1241,1242,1243,1244,1245,1263],linear_algebra:[439,440,441,442,1203,1204,1205,1206,1207,1208],linear_resampl:[125,260,398,531,663,847,924],linearli:[924,956],link:[84,1221],linspac:[125,260,398,531,663,847,924,927],list:[15,18,19,81,82,470,471,472,475,850,859,860,869,870,872,873,874,876,879,880,894,924,927,930,932,981,999,1000,1009,1014,1065,1066,1067,1069,1113,1114,1115,1117,1121,1122,1150,1151,1152,1153,1154,1155,1156,1157,1171,1172,1173,1176,1209,1210,1218,1219,1220,1221,1222,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245],list_join:[81,82,83],list_stack:[81,82],liter:[1203,1208],littl:1264,load:[81,82],loaded_kwarg:1069,loader:1221,local:84,local_set:[924,964],locat:[84,924,974,1125,1126],log10:[211,481,612,805,1169,1181],log1p:[211,481,612,805,1169,1181],log2:[211,481,612,805,1169,1181],log:[746,847,924,977,1052,1069,1163,1164,1165,1166,1181,1193,1203,1206],logarithm:[1052,1062,1181,1192,1193,1194,1203,1206],logdet:[1203,1206],logic:[39,57,847,1050,1051,1181,1195,1196,1218,1219,1220,1221],logical_and:[322,743,847,1049],logical_not:[211,364,481,612,805,1169,1181],logical_or:[211,322,481,612,743,805,847,1049,1169,1181],logit:[1163,1166],logspac:[125,260,398,531,663,847,924],look:[84,1264,1267],loop:[1065,1066,1067,1068],loss:[1141,1164,1165,1166,1221,1263],loss_fn:[1221,1263],lot:1264,low:[81,82,446,1125,1127,1129],lower:[81,82,84,924,980,1125,1129,1171,1175],lower_depth:[1250,1251],lowest:[15,18,19,81,82,1113,1122,1125,1127],lstm:[1150,1160,1221,1238],lstm_updat:[84,1141,1150],machin:[1042,1047,1125,1131,1177,1178,1179,1216,1217,1221,1264,1267],made:84,mai:[924,927,947,951,1181,1191,1195,1196,1214,1215,1221,1264,1267],main:[924,966,1171,1175,1203,1204,1221],mainli:1221,maintain:[84,1214,1215],make:[84,446,850,1069,1221,1264],maml:[1065,1066,1067],maml_step:[847,1065],manag:[850,1069],manhattan:[1203,1208],mani:[81,82,84,924,1000,1221],manipul:1169,manipulation_funct:[1209,1210],manner:[15,18,19,81,82,84,1113,1122],manual:[1113,1114,1121,1267],map:[81,82,83,847,850,859,924,974,1069,1113,1118,1119,1122,1238,1249,1263],map_cont:[81,82],map_nest_at_index:[847,1113],map_nest_at_indic:[847,1113],map_sequ:[81,82],mapper:[850,859,860,1069],mark:84,mask:[1150,1161,1162],master:84,match:[81,82,924,978],match_kwarg:[847,924],math:[41,59,445,847,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1221],mathbb:[1042,1048],mathbf:[1042,1048],mathemat:[1170,1203,1208],matmul:[84,234,260,504,635,828,847,924,1169,1203,1267],matplotlib:1264,matric:[1150,1159,1171,1175,1203,1204],matrix:[81,82,924,926,937,979,1042,1043,1044,1045,1046,1047,1048,1150,1159,1171,1175,1203,1204,1205,1238,1248],matrix_norm:[81,82,163,317,439,574,736,847,1042],matter:1221,max:[81,82,476,924,937,938,949,980,992,993,1069,1132,1134,1177,1178,1179,1254,1256],max_batch_s:[81,82],max_chunk_s:[850,894,1069],max_depth:[81,82,850,854,857,864,872,876,882,924,964,1069,1113,1122],max_dev_dim_step_ratio:850,max_freq:[924,956],max_length:[81,82],max_node_dim_step_ratio:1069,max_norm:[81,82,924,937,938],max_split_factor_step_s:[850,1069],max_trust_ratio:[1019,1026,1254,1256],maxim:[1221,1264,1267],maximis:1221,maximum:[81,82,83,663,847,850,872,876,882,894,924,936,937,938,956,1019,1026,1069,1113,1122,1132,1134,1211,1212],mayb:[15,18,19],mdi:1069,mean:[81,82,446,850,879,880,881,882,894,924,949,1065,1066,1067,1068,1069,1113,1117,1125,1128,1132,1135,1138,1140,1229,1263,1267],measur:[1150,1161,1238,1249],mech:1221,mechan:[1221,1267],medic:1267,member:84,memori:[850,866,889,894,896,899,1069,1150,1160,1221],mention:84,merg:84,merge_with_upstream:84,meshgrid:[260,398,663,847,924],messag:[1265,1266],meta:[43,61,847,1066,1067,1068,1221],method:[81,82,83,84,446,924,930,941,981,992,993,1019,1026,1027,1069,1113,1114,1121,1122,1169,1221,1238,1249,1250,1251,1264],might:[924,947,1267],min:[81,82,247,476,517,648,841,924,949,982,992,993,1002,1042,1047,1069,1132,1136,1169,1177,1178,1179,1203,1208,1216],min_bas:[924,1003],min_denomin:[924,1002],min_dev_dim_s:850,min_node_dim_s:1069,min_sf_tune_step:[850,1069],min_unit_dev_tune_step:850,min_unit_node_tune_step:1069,mind:1221,mini:[1167,1168,1252,1253],minimum:[81,82,663,847,850,900,904,924,927,929,930,936,961,962,994,995,1002,1003,1069,1132,1136,1216,1217],miss:[1254,1258],ml_framework:[924,927,1042,1047],mod:[924,955],mod_depth:[1250,1251],mod_height:[1250,1251],mod_with_top_mod_key_chain:[1250,1251],mode:[81,82,439,441,848,849,850,879,880,881,882,894,1042,1047,1069,1203,1207,1264],model:[1221,1263],modul:[81,82,83,100,924,983,1069,1221,1222,1224,1225,1226,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1252,1253,1260,1261,1267],moment:[1019,1021,1022,1026,1254,1255,1256],more:[84,924,1004,1069,1203,1205,1209,1210,1221,1264,1267],more_util_node_str:1069,most:[81,82,1042,1047,1221,1267],move:[81,82,84,850,895,1069],much:[84,1221,1267],multi:[446,847,924,983,1150,1161,1238,1249],multi_head_attent:[1141,1150],multi_index_nest:[847,1113],multi_map:[81,82],multi_nod:1069,multidev:[850,861,862,863,882],multidevcontain:[81,82],multidevic:[850,859],multidevit:[847,850,853,856,859,860,864],multidevitem:[847,850,852,855],multidevnest:[847,850,854,857],multiheadattent:[1221,1238],multinod:[1069,1073],multinodecontain:1069,multinodeit:[847,1069],multinodeitem:[847,1069],multinodenest:[847,1069],multinomi:[169,326,446,580,757,847,1125],multipl:[81,82,924,978,1000,1042,1044,1132,1134,1135,1136,1137,1138,1140,1167,1168,1218,1219,1220,1238,1248,1264],multipli:[81,82,924,944,1132,1137],multiprocess:[81,82,83,398,663,847,850,859,924,1069],must:[81,82,83,84,850,879,880,881,882,894,924,927,939,941,943,951,980,982,993,1004,1052,1056,1059,1069,1125,1130,1171,1172,1173,1174,1175,1176,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1214,1215,1216,1217,1218,1219,1220,1254,1258],mutabl:[1113,1115,1122],mutlidevic:[850,859],mutlinod:1069,mw_tm1:[1019,1022,1026],mx_concat:1221,mxn:[1171,1175,1203,1204],mxnet:[1221,1267],my_func:84,mymodel:1221,name:[84,848,849,1263],name_of_your_branch:84,name_of_your_pr_branch:84,namespac:[84,1264],nan:[81,82,84,924,965,1015,1170,1181,1182,1183,1185,1186,1187,1188,1189,1192,1194,1198,1199,1200,1218,1219,1220],nativ:[15,17,18,19,81,82,84,850,866,868,877,878,889,896,899,900,905,912,913,1069,1221,1222,1227,1228],native_modul:[1227,1228],native_module_class:[1227,1228],nativearrai:[15,18,19,84,850,868,894,895,900,904,910,915,916,924,925,926,927,929,930,931,932,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,958,959,963,965,966,967,974,975,976,977,979,980,981,982,985,986,989,990,991,992,993,998,1000,1001,1004,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1069,1113,1115,1122,1171,1174,1175,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220],natur:[1052,1062,1181,1193,1203,1206,1267],ncdhw:[1150,1155,1156,1238,1243,1244],nchw:[1150,1153,1154,1157,1238,1241,1242,1245],ncw:[1150,1151,1152,1238,1239,1240],ndarrai:[446,470,471,472,473,474,475,476,478,479,924,1010],ndhwc:[1150,1155,1156,1238,1243,1244],nearest:[924,991],need:[84,924,937,938,1150,1152,1154,1156,1221,1238,1240,1242,1244,1267],neg:[81,82,211,364,481,612,805,1132,1137,1139,1142,1144,1169,1181,1188,1203,1208,1209,1210,1218,1219,1220],negative_slop:1229,neither:1069,nest:[15,16,17,18,19,81,82,83,847,850,872,876,882,924,930,1009,1065,1066,1067,1069,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1250,1251,1254,1255,1256,1257,1258,1259],nested_indices_wher:[847,1113],nested_map:[847,1069,1113],network:[1150,1159,1221,1222,1224,1238,1250,1251,1267],neural:[1150,1221,1224,1238,1263],neural_net:[1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168],never:84,new_node_percent_mem:1069,new_node_util:1069,new_node_utils_kei:1069,new_std:[1167,1168,1252,1253],newli:[84,848,849,924,934,935],newlin:[81,82,83],newshap:[924,934,990],next:[1069,1177,1178,1250,1251,1254,1255,1256,1257,1258,1259],nhwc:[1150,1153,1154,1157,1238,1241,1242,1245],node:[81,82,847,1113,1114,1121],node_clon:1069,node_dist:[847,1069],node_dist_arrai:[847,1069],node_dist_it:[847,1069],node_in:1069,node_mapp:1069,node_str:[847,1069],node_to_str:[847,1069],node_util:[847,1069],nodedistit:[847,1069],nodedistitem:[847,1069],nodedistnest:[847,1069],nodemanag:[1069,1080],nodemapp:[847,1069],nodemappermultiproc:[847,1069],noinspect:[851,901,902,903,1020,1069],non:[81,82,848,849,900,914,1181,1195,1196,1203,1208,1218,1219,1220,1250,1251,1254,1258,1264],none:[81,82,83,84,100,102,105,396,398,399,401,403,410,411,412,413,420,421,422,423,424,425,426,427,429,439,440,446,447,470,471,472,473,475,848,849,850,859,860,866,867,892,893,894,895,900,907,908,909,924,927,930,946,947,952,957,958,959,964,966,968,969,970,971,972,976,977,983,985,986,989,992,993,994,995,1000,1001,1002,1003,1012,1013,1018,1019,1022,1024,1026,1027,1028,1034,1035,1039,1042,1045,1047,1065,1066,1067,1068,1069,1113,1114,1117,1121,1122,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1152,1154,1156,1159,1160,1161,1162,1167,1168,1171,1172,1173,1174,1176,1177,1178,1179,1203,1208,1209,1210,1211,1212,1216,1217,1218,1219,1220,1227,1228,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261],norm:[81,82,924,937,938,1042,1045,1141,1168,1203,1208,1221,1253,1254,1256],normal:[1125,1128,1167,1168,1252,1253],normalized_idx:[1167,1168],normalized_shap:[1252,1253],notat:[81,82,1132,1133],note:[84,1042,1047],noth:[81,82,1264],notimplementederror:1069,now:[81,82,84,850,895,924,925,1069,1221,1238,1249,1250,1251,1263,1264,1267],np_concat:1221,np_finfo:476,ns_tune_step:1069,num:[398,420,421,924,976,977],num_arrai:[81,82],num_arrays_in_memori:[847,924],num_arrays_on_dev:[847,850],num_band:[924,956],num_channel:[1238,1245],num_chunk:1069,num_chunks_floor:1069,num_class:[1125,1126],num_cpu_cor:[847,850],num_gpu:[118,396,847,850,1069],num_head:[1150,1161,1238,1249],num_kei:[1150,1161,1162],num_lay:[1238,1247],num_or_size_split:[81,82,398,425,924,1000],num_output:1069,num_queri:[1150,1161,1162],num_sampl:[398,419,446,447,924,975,1035,1036,1125,1126],num_task:[1065,1066,1067,1068],number:[81,82,83,848,849,850,886,887,888,900,911,915,916,924,927,936,940,953,956,963,966,975,976,977,980,984,989,1000,1007,1011,1015,1017,1065,1066,1067,1068,1069,1125,1126,1130,1132,1134,1135,1136,1138,1140,1150,1161,1170,1177,1178,1179,1181,1185,1203,1206,1207,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1264,1267],numer:[84,924,961,962,994,995,1002,1003,1052,1059,1181,1185,1188,1189,1190,1195,1196,1197,1203,1205,1229],numhead:[1150,1161],numpi:[81,82,84,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,470,471,472,473,474,475,476,478,479,924,1010,1042,1047,1132,1133,1203,1207,1221,1263,1264,1267],nwc:[1150,1151,1152,1238,1239,1240],obj:[81,82],object:[81,82,83,100,476,850,900,904,924,927,930,1019,1113,1116,1118,1119,1120,1123,1124,1125,1131,1177,1178,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1250,1251],object_in:[398,401,924,930],observ:1069,obvious:84,occupi:[924,992,993,1177,1178,1179],off:[924,927,1203,1204],offer:1221,offset:[1167,1168,1203,1204],often:1264,old:[81,82],on_init:[1238,1249,1250,1251],onc:[84,850,894,1069,1125,1126,1221],one:[81,82,84,850,879,880,881,882,894,900,906,924,966,978,985,992,993,1001,1004,1042,1045,1069,1132,1133,1134,1135,1136,1137,1138,1139,1140,1203,1205,1208,1209,1210,1211,1212,1221,1264,1267],one_hot:[125,398,531,663,847,924],onearrai:[924,953],ones:[81,82,200,353,470,601,794,847,924,966,985,1169,1171,1174,1221],ones_lik:[200,353,470,601,794,1169,1171],ongo:84,onli:[81,82,84,446,850,1042,1047,1069,1113,1114,1115,1121,1181,1195,1196,1203,1205,1209,1210,1254,1255,1256,1257,1258,1259,1263,1264],onlin:[84,1221],onto:[850,879,880,895,1069,1113,1117,1122],oom:[850,1069],open:[924,927,1125,1129,1221,1267],opencv:1264,oper:[81,82,84,924,933,948,949,950,976,977,1005,1019,1022,1024,1026,1027,1028,1049,1050,1051,1150,1151,1152,1153,1154,1155,1156,1157,1159],operand:[81,82,1132,1133,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200],oppos:[924,956],optim:[850,1019,1022,1024,1026,1027,1028,1065,1066,1067,1068,1069,1221,1255,1256,1257,1259,1263,1267],optimizer_upd:[847,1019],option:[15,18,19,81,82,83,84,470,471,472,473,475,848,849,850,859,860,868,872,873,874,875,876,879,880,881,882,889,892,893,894,895,899,900,905,910,914,923,924,926,927,929,930,937,938,939,944,946,947,956,957,958,959,963,965,966,973,975,976,977,978,981,983,985,986,989,992,993,996,998,1000,1001,1002,1003,1004,1012,1014,1015,1018,1019,1022,1024,1025,1026,1027,1028,1030,1035,1039,1042,1045,1047,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1176,1203,1208,1209,1210,1211,1212,1216,1217,1218,1219,1220,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1264],ord:[1203,1207,1208],order:[81,82,83,84,1019,1022,1024,1026,1027,1028,1042,1045,1065,1066,1067,1203,1208,1209,1210,1214,1215,1260,1261],ordered_node_util_kei:1069,org:1267,organ:84,origin:[81,82,83,924,990,1018,1042,1045],other:[81,82,84,848,849,924,926,927,966,1019,1023,1125,1129,1221,1263,1264,1267],otherwis:[15,16,17,18,19,81,82,850,867,900,907,908,909,924,933,1012,1013,1016,1019,1025,1030,1034,1065,1066,1067,1069,1132,1134,1135,1136,1138,1140,1181,1188,1189,1203,1208,1211,1212,1218,1219,1220],our:[84,1221,1267],out:[84,446,924,927,1052,1055,1150,1158,1160,1171,1173,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1198,1199,1200,1203,1204,1205,1206,1208,1209,1210,1211,1212,1214,1215,1218,1219,1220,1221,1238,1246],out_feat_dim:[1150,1161],out_featur:[1150,1158,1159],out_i:[1181,1188,1189],outdat:1267,outer:[1065,1066,1067,1068],outer_batch_fn:[1065,1066,1067],outer_batch_shap:[1150,1159],outer_cost_fn:[1065,1066,1067],outer_v:[1065,1066,1067],outlin:1264,output:[81,82,84,850,859,860,894,924,927,935,957,966,989,1007,1019,1023,1052,1056,1069,1125,1127,1128,1129,1150,1152,1154,1156,1158,1160,1161,1162,1171,1172,1173,1174,1176,1209,1210,1221,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249],output_ax:[850,894,1069],output_axi:1069,output_channel:[1238,1239,1240,1241,1242,1243,1244,1247,1248],output_queu:1069,output_shap:[1150,1152,1154,1156,1238,1240,1242,1244],outsid:[924,936],over:[81,82,1042,1045,1125,1129,1132,1134,1135,1136,1138,1140,1167,1168,1203,1208,1218,1219,1220,1252,1253],overal:1264,overflow:[924,927],overhead:1264,overrid:[924,985,1018],overriden:[1254,1258],overwrit:[81,82,850,894,1069],overwrite_at_key_chain:[81,82],own:[1221,1264,1267],packag:[84,1264],pad:[924,940,956,1017,1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],pad_width:[398,924,940,1017],page:1221,pair:[1150,1162],parallel:[850,859,860,1069],parallelis:[850,859,860,1069],param:[81,82,83,398,411,412,850,894,924,925,958,959,985,986,1069,1171,1172,1174,1211,1212,1216,1217,1250,1251,1263],paramet:[15,16,17,18,19,81,82,83,84,848,849,850,859,860,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,910,911,912,913,914,915,916,923,924,926,927,929,930,931,932,933,934,935,936,937,938,939,940,942,943,944,945,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,969,970,971,973,974,975,976,977,978,979,980,981,982,983,986,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1174,1181,1191,1197,1201,1203,1204,1207,1216,1217,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263],parameter:[1125,1128,1129],pardo:1221,pars:[924,941],part:[1019,1022,1024,1026,1027,1028,1052,1055,1171,1175,1221,1250,1251,1264],partial:[81,82,84,1250,1251],particl:1267,particular:[84,1267],pass:[81,82,83,84,850,859,894,900,905,924,935,1019,1033,1065,1066,1067,1069,1227,1228,1250,1251,1254,1258,1260,1261],pattern:[81,82,924,948,949,950],peopl:84,per:[850,1069,1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],percent_used_mem_on_dev:[847,850],percent_used_mem_on_nod:[847,1069],percentag:[850,889,1069],perf_count:1069,perform:[81,82,84,850,924,929,944,948,949,950,969,970,971,975,976,977,1019,1022,1024,1026,1027,1028,1035,1036,1065,1066,1067,1068,1069,1113,1118,1119,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1158,1160,1218,1219,1220],period:84,permissable_step:1069,permit:84,permut:[446,924,1006,1012],perpendicular:[924,943],person:[84,1221],physci:1267,pickl:[81,82,1069],pickle_filepath:[81,82],pinv:[317,736,847,1042],pip:1221,pipelin:1263,pkk:1267,pkkm1:1267,pkm1km1:1267,place:[81,82,84,850,895,924,953,957,969,970,971,1069,1171,1172,1173,1174,1176,1254,1255,1256,1257,1258,1259],placehold:[84,1113,1122],pleas:[84,446,1042,1047],point:[84,900,915,924,927,1052,1059,1170,1171,1172,1173,1176,1177,1178,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200,1201,1203,1208],popul:[81,82,1125,1126],popular:1267,population_s:[446,447,1125,1126],portabl:[1221,1222],posit:[15,16,17,850,872,876,882,924,925,927,953,956,1069,1125,1130,1177,1178,1181,1188,1218,1219,1220,1227,1228],possibi:[81,82],possibl:[84,924,978,1009,1035,1040,1267],post:[1167,1168],post_shap:[81,82],power:[924,961,994,1003,1229],practic:1221,pre:[850,1069,1221],pre_shap:[81,82],precis:[1177,1178,1181,1200],pred:[1163,1164,1165,1166],predict:[1163,1164,1165,1166,1267],prepend:[1203,1205],preprint:1221,present:[81,82],preserv:[81,82,83,1019,1030,1209,1210],preserve_typ:[81,82,430,433,1019,1030],press:1221,prevent:[84,1019,1021,1022,1026,1069,1254,1255,1256],prevet:84,previou:[1019,1022,1026],previous:[924,935],prime:1221,print:[81,82,83,850,890,924,987,1221,1263],print_all_arrays_in_memori:[847,924],print_all_arrays_on_dev:[847,850],print_ind:[81,82,83],print_limit:[81,82,83],print_line_spac:[81,82,83],prioriti:[81,82,84,100,104],privat:[1254,1258],prob:[446,447,1125,1126,1150,1158,1238,1246],probabl:[1125,1126,1150,1158,1238,1246],problem:[84,1267],process:[84,850,859,860,889,899,924,983,1069],process_specif:[850,889,899,1069],prod:[81,82,924,949],produc:[850,859,860,1069],product:[81,82,924,943,944,979,1132,1133,1150,1161,1162,1203,1205,1238,1249],profil:[118,254,396,524,655,847,850,1069],progress:84,project:[1221,1263,1264,1267],promot:[1052,1059,1181,1182,1183,1184,1186,1187,1192,1194,1198,1199,1200,1203,1205,1208],prompt:1221,properti:[81,82,476,850,862,1069,1250,1251,1254,1255,1256,1257,1259],provid:[81,82,84,848,849,850,867,900,907,908,909,914,923,924,947,985,993,1018,1019,1022,1024,1026,1027,1028,1034,1069,1209,1210,1211,1212,1218,1219,1220,1221,1238,1247,1254,1255,1256,1257,1258,1259,1264],prune:[81,82],prune_empti:[81,82],prune_kei:[81,82],prune_key_chain:[81,82],prune_key_from_key_chain:[81,82],prune_keys_from_key_chain:[81,82],prune_unappli:[81,82],pseudo:[1042,1046],pull:[1221,1222],pure:[81,82,1221,1267],purpos:[84,1267],put:1069,pybroadexcept:1069,pyprotectedmemb:1069,pyshadowingnam:[851,901,902,903,1020,1069],python:[81,82,850,889,899,924,927,1069,1221],pytorch:[1019,1022,1024,1026,1027,1028,1042,1047,1221,1254,1255,1256,1257,1258,1259,1263,1264,1267],pyunresolvedrefer:1069,quadrant:[1052,1056],qualiti:84,queri:[81,82,850,883,893,1069,1150,1161,1162,1238,1249],query_dim:[1238,1249],query_kei:[81,82],queue:[81,82,83,850,859,860,924,988,996,1069],queue_class:[850,859,860,1069],queue_load_s:[81,82,83],queue_timeout:[81,82,83,847,924,1069],quick:[446,1221],quickli:[84,1263],radian:[1052,1053,1054,1056,1063,1181,1186,1198],rai:[1052,1053],rais:[81,82,924,933,961,994,1001,1003,1013,1069,1218,1219,1220,1250,1251,1254,1258],ram:[850,889,896,899,1069],randint:[169,326,446,580,757,847,1125],random:[45,63,81,82,447,847,1126,1127,1128,1129,1130,1131,1221],random_crop:[847,1035],random_norm:[169,326,446,580,757,847,1125],random_uniform:[169,326,446,580,757,847,1125],randomli:[446,1035,1039,1150,1158,1238,1246],rang:[446,924,927,976,977,1052,1056,1069,1221,1263,1267],rank:[924,940,1014,1017,1203,1208,1218,1219,1220],rate:[1019,1022,1024,1026,1027,1028,1065,1066,1067,1068,1238,1249,1254,1255,1256,1257,1258,1259],rather:[81,82,84,850,894,924,927,973,1019,1025,1069],ratio:[850,1019,1026,1035,1040,1069,1254,1256],raw:[81,82,1042,1047],raw_delta:1069,reach:[84,850,872,876,882,1069,1113,1122],read:[81,82],readi:[1069,1263],real:[1052,1053,1055],realiti:1264,rearrang:[81,82,924,948,950],rebuild:[81,82,83],rebuild_child_contain:[81,82,83],rece:[1065,1067],receiv:[84,850,859,860,924,928,978,1069,1238,1248],receivess:[850,1069],receivng:[1065,1068],recev:[1065,1066,1067],recognit:1267,recommend:[1181,1195,1196,1221],rectifi:[1142,1144,1145],recurr:[1150,1160],recurrent_bia:[1150,1160],recurrent_kernel:[1150,1160],recurs:[81,82,1113,1114,1115,1121,1122],reduc:[81,82,850,894,924,949,1042,1047,1069,1132,1134,1135,1136,1137,1138,1139,1140,1211,1212,1218,1219,1220],reduce_max:[81,82,176,331,448,585,764,847,1132],reduce_mean:[81,82,176,331,448,585,764,847,1132,1221,1263],reduce_min:[81,82,176,331,448,585,764,847,1132],reduce_prod:[81,82,176,331,448,585,764,847,1132],reduce_std:[81,82,331,847,1132],reduce_sum:[81,82,176,331,448,585,764,847,1069,1132],reduce_var:[81,82,176,331,448,585,764,847,1132],reduct:[47,65,81,82,398,423,424,847,924,949,992,993,1133,1134,1135,1136,1137,1138,1139,1140,1218,1219,1220,1221],refactor:84,refer:[84,1019,1021,1022,1042,1048,1181,1193,1218,1219,1220,1238,1248,1267],reflect:84,reflected_oper:[0,13,14,66,79,80],regard:[850,1069],regardless:[81,82,848,849],register_paramet:1263,reimplement:1267,rel:[1019,1022,1024,1026,1027,1028,1203,1204,1209,1210,1214,1215],rel_slice_obj:1069,relat:84,relev:[1254,1255,1256,1257,1258,1259],relu:[773,1141,1142,1143,1144,1221,1263],remain:[84,924,990,1113,1117],remaind:[81,82,924,955,1000],remov:[81,82,84,924,1001,1065,1066,1067,1203,1204,1205,1211,1212],remove_key_length_limit:[81,82],remove_print_limit:[81,82],reorder:[81,82,1209,1210],rep:[924,1007],repeat:[81,82,84,260,663,847,924,950,1007,1069,1264],repeated_config_check:[850,1069],repeatedli:[1113,1120],repetit:[81,82,924,989,1007],replac:[81,82,84,446,447,924,936,992,993,1125,1126],repo:[84,1221],repositori:84,repres:[84,900,906,911,1150,1159,1181,1182,1183,1187,1199,1201,1203,1206],represent:[81,82,83,84,850,877,878,900,906,912,913,924,999,1009,1069,1170,1177,1178,1179,1181,1184],reptil:[1065,1068],reptile_step:[847,1065],request:[1221,1222],requir:[84,848,849,900,904,924,927,930,1181,1200,1227,1228],resampl:[924,975],reserv:84,reshap:[81,82,446,663,847,924],reshape_lik:[81,82],respect:[924,951,1019,1021,1022,1023,1024,1026,1027,1028,1042,1047,1052,1059,1065,1066,1067,1068,1181,1184,1190,1191,1196],respond:84,respons:[84,1069],restor:[81,82],restructur:[81,82],restructure_key_chain:[81,82],result:[81,82,83,850,859,924,927,951,992,993,1004,1042,1045,1049,1050,1051,1052,1059,1069,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204,1208,1211,1212,1218,1219,1220,1221],ret:1069,ret_dict:1069,ret_fn:[850,859,860,1069],retain:[1019,1023],retain_grad:[430,431,1019,1023],retreiv:1069,retrn:[924,999],return_cont:[81,82],return_dict:[81,82],return_inner_v:[1065,1066,1067,1068],return_sequ:[1238,1247],return_st:[1238,1247],rev:[924,947],revers:[81,82,924,947,1012,1209,1210],review:84,right:[81,82,84],rk_e:1267,robot:1221,ronald:1221,root:[84,1181,1200],round:[260,398,663,847,924,927,1069,1181,1185,1200],row:[924,966,1125,1126],rule:[924,927,1052,1059],run:[84,850,859,1019,1021,1022,1026,1065,1066,1067,1068,1069,1221,1222,1238,1249,1250,1251],safe:[850,859,1069],safety_factor:[850,1069],same:[15,16,17,81,82,84,850,859,860,894,895,900,904,924,925,939,954,955,958,959,985,991,992,993,1004,1018,1019,1025,1030,1052,1055,1065,1066,1067,1069,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1171,1174,1175,1181,1185,1203,1204,1207,1209,1210,1211,1212,1214,1215,1221,1238,1239,1240,1241,1242,1243,1244,1245,1263,1267],same_arrai:[81,82],sampl:[924,975,1035,1036,1125,1126,1128,1129,1150,1158,1221,1238,1246],satisfi:[924,930,1042,1044,1048],save:[81,82,924,997,1008,1035,1037,1250,1251],save_dir:[396,397,850,865,1069],save_weight:[1250,1251],scalar:[924,936,985,1011,1015,1203,1208],scale:[850,892,893,1019,1027,1069,1150,1158,1161,1162,1167,1168,1238,1246,1249,1254,1257],scaled_dot_product_attent:[1141,1150],scatter:[924,985,992,993],scatter_flat:[125,260,398,531,663,847,924],scatter_nd:[125,260,398,531,663,847,924],scene:[1019,1022,1024,1026,1027,1028],schemat:1221,screen:[81,82],script:84,search:[15,18,19,81,82,1169],searching_funct:[1211,1212],second:[81,82,850,881,924,931,943,951,988,996,1006,1019,1021,1022,1026,1065,1067,1069,1181,1184,1190,1191,1196,1203,1204,1205,1254,1255,1256],secondli:1267,sector:[1181,1182,1183],see:[100,396,397,446,476,850,862,863,864,865,900,924,927,976,977,1019,1052,1059,1181,1184,1190,1196,1203,1208,1218,1219,1220,1221,1229,1231,1232,1234,1235,1237],seed:[81,82,169,446,757,847,1125],seed_valu:[81,82,446,1125,1130],seem:1221,seen_set:[924,964],select:[924,930,1001,1264,1267],self:[81,82,100,396,397,476,850,862,863,864,865,900,1019,1069,1221,1229,1231,1232,1234,1235,1237,1254,1258,1263,1267],sent:1069,seper:[84,924,956],seq:[81,82,83,1132,1133,1250,1251],sequenc:[15,16,17,81,82,83,84,446,848,849,850,859,860,869,870,871,872,873,874,875,876,879,880,894,900,904,924,927,930,932,934,939,940,966,978,981,986,989,990,993,1000,1004,1007,1012,1017,1019,1023,1035,1039,1040,1042,1045,1069,1113,1124,1125,1127,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1247,1250,1251,1252,1253,1254,1258,1260,1261],sequenti:1221,seri:84,set:[15,18,19,81,82,850,879,880,892,893,894,924,926,946,966,994,995,996,997,1019,1022,1024,1025,1026,1027,1028,1042,1045,1069,1113,1114,1121,1123,1124,1125,1126,1130,1132,1134,1135,1136,1137,1138,1139,1140,1169,1211,1212,1214,1215,1221,1238,1247,1254,1255,1256,1257,1258,1259,1264,1267],set_at_kei:[81,82],set_at_key_chain:[81,82],set_breakpoint_debug_mod:85,set_debug_mod:85,set_default_devic:[847,850],set_default_dtyp:[847,900],set_default_float_dtyp:[847,900],set_default_int_dtyp:[847,900],set_default_nod:[847,1069],set_exception_debug_mod:85,set_framework:[81,82,84,100,1069,1221,1263,1264,1267],set_ivy_backend:[81,82],set_min_bas:[847,924],set_min_denomin:[847,924],set_nest_at_index:[847,1113],set_nest_at_indic:[847,1113],set_queue_timeout:[847,924],set_split_factor:[847,850,1069],set_stat:[1254,1255,1256,1257,1258,1259],set_tmp_dir:[847,924],set_with_grad:[847,1019],setter:1069,sever:1267,sgd:[1221,1254],shape0:1069,shape:[81,82,84,398,410,424,446,470,471,472,475,663,847,850,862,900,904,924,925,934,939,940,953,954,955,957,959,963,966,985,986,989,990,991,992,993,999,1001,1004,1017,1018,1035,1039,1042,1044,1047,1052,1055,1056,1069,1125,1127,1128,1129,1132,1133,1150,1152,1154,1156,1171,1172,1173,1174,1175,1176,1203,1204,1205,1209,1210,1211,1212,1214,1215,1238,1240,1241,1242,1243,1244,1245,1252,1253],shape_slic:[81,82],shape_to_tupl:[847,924],share:[81,82,1221,1264],shift:1069,should:[81,82,83,84,446,848,849,850,924,934,935,941,985,990,1019,1022,1024,1026,1027,1028,1052,1059,1069,1132,1133,1171,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1205,1208,1211,1212,1221],show:[81,82,1221,1267],show_mod_in_top_mod:[1250,1251],show_structur:[1250,1251],show_sub_contain:[81,82],show_v:[1250,1251],show_v_in_top_v:[1250,1251],shown:[81,82],shp:1069,shuffl:[81,82,169,446,757,847,1125],shuffle_h5_fil:[81,82],side:84,sigmoid:[773,1141,1142,1221,1263],sign:[1203,1206],signatur:[84,100,396,397,398,430,435,439,443,444,446,476,850,862,863,864,865,900,1019,1169,1229,1231,1232,1234,1235,1237],signific:1267,similar:[84,1150,1161,1238,1249],similarli:[1042,1047],simpl:[84,924,952,1221,1264,1267],simpler:84,simplest:1264,simpli:[81,82,84,1221,1264,1267],simultan:1221,sin:[211,364,481,612,805,924,956,1052,1063,1169,1181,1264],sinco:1264,sine:[1052,1054,1181,1183,1198,1199],singl:[81,82,848,849,850,859,860,879,880,881,882,924,1001,1011,1015,1035,1040,1069,1125,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1221,1264,1267],singleton:[1203,1208,1218,1219,1220],singular:[1203,1207],sinh:[211,364,481,612,805,1169,1181],siren:[1221,1229],situat:84,size:[81,82,83,398,423,850,873,874,875,876,892,893,894,924,927,934,976,977,992,1000,1035,1039,1042,1045,1069,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1203,1204,1207,1211,1212,1218,1219,1220,1238,1239,1240],size_ordered_arrai:[81,82],skew:[1042,1048],skinv:1267,skip:[81,82],slice:[81,82,924,958,959,1069,1113,1120],slice_kei:[81,82],slice_obj:[81,82,1069],slice_via_kei:[81,82],slide:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],slodget:[1169,1203],slogdet:[234,378,504,635,828],slope:[1142,1144],small:[1163,1164,1165,1166,1167,1168,1221,1252,1253,1264],smaller:[924,936],smallest:[81,82,924,929,1177,1178,1179,1181,1185],smallest_norm:[476,1177,1178],softmax:[185,457,773,1141,1142,1150,1161,1162],softplu:[773,1141,1142],solut:84,solv:1267,some:[81,82,84,924,927,1019,1021,1022,1024,1026,1027,1028,1033,1150,1158,1221,1238,1246,1264,1267],some_backend:84,some_namespac:84,someth:[84,1267],something_cool:84,sometim:84,somewher:[81,82],soon:84,sort:[81,82,83,1069,1169,1203,1207,1215],sort_by_kei:[81,82],sorting_funct:[1214,1215],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,100,102,103,104,105,106,107,108,109,110,111,112,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,470,471,472,473,474,475,476,478,479,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1224,1225,1226,1227,1228,1229,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1265,1266,1267],space:[924,927,956,976,977],spars:[1163,1166],sparse_cross_entropi:[1141,1163],spawn:[924,983],special:[84,1181,1182,1183,1185,1186,1187,1192,1194,1198,1199,1200],specif:[81,82,84,850,892,924,941,948,949,950,983,1065,1066,1067,1068,1069,1125,1131,1181,1195,1196,1221,1250,1251,1263,1264],specifc:[1125,1126],specifi:[81,82,850,869,870,871,872,873,874,875,876,879,880,884,886,890,893,894,895,900,904,906,924,927,929,930,936,939,940,957,958,959,965,976,977,1004,1014,1017,1042,1045,1069,1113,1118,1119,1123,1124,1132,1133,1134,1135,1136,1137,1138,1139,1140,1171,1172,1173,1175,1176,1203,1204,1208,1209,1210,1211,1212,1214,1215,1218,1219,1220],sphinx:84,split:[81,82,125,260,398,531,663,847,850,859,873,874,875,876,892,893,894,924,978,1069],split_arg:1069,split_factor:[847,850,859,1069],split_func_cal:[847,850,1069],split_siz:1069,spread:[850,882,1069],sqrt:[211,364,481,612,805,1169,1181,1203,1208],squar:[924,966,1042,1044,1181,1200,1203,1206],squeez:[125,260,398,531,663,847,924],stabil:[924,1002,1003,1214,1215],stabl:[924,961,962,994,995,1002,1003,1214,1215],stable_divid:[847,924],stable_pow:[847,924],stack:[81,82,260,663,847,924,1035,1040,1113,1114,1121,1171,1175,1203,1204,1205,1238,1247],stack_imag:[159,313,435,570,732,847,1035],stacked_dim_s:1069,stage:84,standard:[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,470,471,472,473,474,475,476,478,479,1125,1128,1132,1138,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1252,1253],start:[81,82,84,396,397,398,399,420,421,446,850,865,924,927,976,977,1069,1221,1264],starting_index:[81,82],starting_split_factor:[850,1069],state:[1069,1150,1160,1221,1224,1225,1226,1227,1228,1229,1231,1232,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263],statement:1264,static_argnam:[398,403,848,849],static_argnum:[398,403,848,849],statist:1169,statistical_funct:[1216,1217],std:[446,1125,1128],step:[81,82,398,399,850,924,927,976,977,1019,1021,1022,1024,1026,1027,1028,1065,1066,1067,1068,1069,1221,1254,1255,1256,1257,1258,1259,1263,1267],stephen:1221,stick:1221,still:[81,82,84],stochast:[1254,1259],stop:[81,82,396,397,398,399,420,421,850,865,894,924,927,976,977,1019,1022,1024,1026,1027,1028,1030,1065,1066,1067,1068,1069,1254,1255,1256,1257,1258,1259],stop_gradi:[81,82,308,430,565,726,847,850,894,1019,1022,1024,1026,1027,1028,1065,1066,1067,1068,1069,1254,1255,1256,1257,1258,1259],stopiter:1069,store:[81,82,924,956,1000,1019,1033,1250,1251],store_var:[1250,1251],str:[15,16,17,81,82,83,84,470,471,472,473,475,476,478,479,848,849,850,859,860,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,894,900,905,906,911,912,913,914,915,916,923,924,930,946,948,949,950,981,983,986,992,993,1042,1045,1047,1065,1066,1067,1068,1069,1113,1117,1132,1133,1171,1174,1177,1178,1179,1227,1228,1238,1249,1250,1251],str_to_nod:[847,1069],straight:1264,strength:[1221,1267],stride:[1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],string:[81,82,84,850,866,868,877,878,883,889,895,896,899,900,904,910,912,913,914,923,924,927,930,946,966,986,1018,1069,1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245,1250,1251],structur:[81,82,83,84,924,941],structural_diff:[81,82],style:84,sub:[81,82,84,850,873,874,879,880,881,882,924,1000,1065,1066,1067,1068,1069,1203,1204],sub_cont:[81,82],sub_cont_or_keychain:[81,82],sub_cont_to_find:[81,82],sub_item:1069,sub_mod:[1250,1251],sub_modul:[1260,1261],sub_str:[81,82],sub_struc_to_find:[81,82],submodul:[1221,1222,1252,1253,1260,1261],subsequ:84,subset:84,substr:[81,82],suffici:[1042,1047],suggest:1221,suitabl:[1035,1040],sum:[81,82,398,423,424,850,879,880,881,882,894,924,945,949,992,993,1069,1132,1133,1139,1203,1208],summat:[81,82,1132,1133],support:[2,4,6,8,10,12,14,16,17,18,19,21,24,25,26,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,68,70,72,74,76,78,80,81,82,83,86,87,88,89,90,101,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,201,202,203,204,205,207,208,209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,241,243,246,248,250,251,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,314,315,316,318,319,320,321,323,324,327,328,329,330,332,333,334,335,336,337,338,339,342,344,345,346,347,348,349,350,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,379,380,381,382,384,386,389,392,393,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,436,437,438,440,441,442,445,447,449,450,451,452,453,454,455,458,459,461,462,463,464,465,466,467,471,472,473,474,475,477,478,479,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,505,506,507,508,509,511,513,516,518,520,521,525,526,527,528,529,530,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,566,567,568,569,571,572,573,575,576,577,581,582,583,584,586,587,588,589,590,591,592,596,597,598,602,603,604,605,606,608,609,610,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,636,637,638,639,640,642,644,647,649,651,652,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,727,728,729,730,731,733,734,735,737,738,739,740,741,742,744,745,747,748,749,750,751,752,753,754,755,756,758,759,760,761,762,763,765,766,767,768,769,770,771,774,775,776,777,778,779,780,782,783,785,786,787,788,789,790,791,795,796,797,798,799,801,802,803,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,829,830,831,832,833,835,837,840,842,844,845,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1172,1173,1174,1175,1176,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1210,1212,1215,1217,1219,1220,1221,1225,1226,1228,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1266,1267],supports_inplac:[847,924],suppos:1267,sure:84,svd:[234,378,504,635,828,1169,1203],swap:[81,82,924,1006],swapax:[81,82,531,663,847,924,1267],symmetr:[1042,1048],syntax:[396,398,430,435,439,443,444,446],tab:1221,take:[84,924,975],taken:[84,1132,1134,1135,1136,1138,1140,1203,1204],tan:[746,847,1052,1055],tangent:[1052,1055,1056,1057,1063,1064,1142,1149,1181,1201],tanh:[211,364,481,612,773,805,847,1052,1141,1142,1169,1181],target:[81,82,850,866,869,870,871,872,873,874,875,876,879,880,881,882,895,1069,1221],target_dict:[81,82],task:[84,1065,1066,1067,1068],team:[84,1267],templat:1221,temporari:[924,997,1008],tensor:[81,82,84,398,423,424,850,868,900,910,924,927,929,934,976,977,980,982,985,986,990,992,993,1000,1018,1069,1125,1126,1127,1150,1158,1160,1221,1238,1246,1248,1254,1255,1256,1257,1258,1259,1263,1264],tensorflow:[84,1042,1047,1150,1152,1154,1156,1221,1238,1240,1242,1244,1264,1267],term:[81,82,84,1150,1160,1221,1238,1248],termcolor:[81,82,83],termin:[81,82,83,1069],test:[84,900,915,916,1181,1188,1189,1218,1219,1220],test_array_api:84,tf_concat:1221,than:[81,82,84,850,894,924,927,936,954,973,980,1001,1004,1019,1025,1069,1125,1129,1177,1178,1181,1182,1185,1192,1194,1200,1203,1205,1208,1209,1210,1221,1264],thei:[81,82,1052,1056,1065,1066,1067,1125,1126,1221,1260,1261,1264],them:[1221,1267],themselv:[1113,1114],therefor:84,thi:[81,82,83,84,850,872,876,882,889,894,899,924,927,956,988,990,996,1019,1022,1024,1025,1026,1027,1028,1033,1042,1045,1069,1113,1117,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1159,1181,1195,1196,1203,1206,1211,1212,1221,1250,1251,1254,1255,1256,1257,1258,1259,1263,1264,1267],thing:[84,1221],those:[81,82,84,924,936,1019,1033,1069,1203,1207],though:84,thought:84,threshold:[924,980,982],through:[81,82,84],tick:84,tickbox:84,tile:[260,531,663,847,924],time:[84,924,1007,1019,1022,1026,1065,1066,1067,1068,1069,1125,1126,1150,1160,1238,1249,1250,1251,1267],timeout:[81,82,83,850,859,860,924,988,996,1069],timestep:[1150,1160,1238,1247],titl:[84,1221],tmp_dir:[847,924],tmp_dr:[924,997],to_appli:[81,82],to_clon:[850,1069],to_dev:[81,82,118,254,396,524,655,847,850],to_dict:[81,82],to_disk_as_hdf5:[81,82],to_disk_as_json:[81,82],to_disk_as_pickl:[81,82],to_distribut:[850,1069],to_flat_list:[81,82],to_iter:[81,82],to_iterator_kei:[81,82],to_iterator_valu:[81,82],to_ivi:[15,23,81,82,1221],to_ivy_modul:[187,781,1221,1227],to_json:[81,82],to_kv_fn:[1150,1161],to_kv_v:[1150,1161],to_list:[81,82,398,663,847,924],to_multi_dev:[81,82],to_mut:[1113,1115,1122],to_n:[15,23,81,82,1221],to_nod:[847,1069],to_numpi:[81,82,398,663,847,924,1221,1263],to_out_fn:[1150,1161],to_out_v:[1150,1161],to_q_fn:[1150,1161],to_q_v:[1150,1161],to_raw:[81,82],to_scalar:[398,663,847,924],todo:[1069,1221,1222],togeth:[81,82,1260,1261],tool:[1221,1264],top_mod:[1250,1251],topic:1267,torch:[84,848,849,1221,1263,1264,1267],torch_concat:1221,torchfcmodel:1263,total:[81,82,83,850,896,1069],total_mem_on_dev:[847,850],total_mem_on_nod:[847,1069],tpu:[850,897,1069],tpu_is_avail:[396,524,655,847,850,1069],trace:[81,82,924,973],track:[84,850,1069,1113,1122,1250,1251],track_submod_call_ord:[1250,1251],track_submod_ret:[1250,1251],trail:[1252,1253],train:[1019,1021,1022,1026,1221,1222],trainabl:[1019,1025,1221,1222,1227,1228,1250,1251,1260],trainer:1221,tran:1267,transform:[1150,1158,1159],transpos:[81,82,125,260,398,663,847,850,881,924,1069,1150,1152,1154,1156,1238,1240,1242,1244],travers:[15,18,19,81,82,1113,1122],treat:[81,82,848,849],tri:[81,82],triangular:[1171,1175],trigonometr:[1052,1053,1055],tril:[200,353,470,601,794,1169,1171],trim_kei:[81,82],trust:[1019,1026,1254,1256],truth:[924,951,1049,1050,1051,1181,1190,1191],try_else_non:[847,924],try_import_ivy_jax:100,try_import_ivy_mxnet:100,try_import_ivy_numpi:100,try_import_ivy_tf:100,try_import_ivy_torch:100,try_kc:[81,82],tune:[850,1069],tune_dev_alloc:850,tune_dev_split:850,tune_node_alloc:1069,tune_node_split:1069,tune_step:[850,1069],tupl:[15,16,17,18,19,81,82,84,470,471,472,475,848,849,924,940,956,957,999,1017,1069,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1127,1132,1134,1135,1136,1137,1138,1139,1140,1171,1172,1173,1176,1203,1207,1208,1209,1210,1216,1217,1218,1219,1220],tutori:84,two:[81,82,924,927,931,943,979,1006,1042,1045,1171,1175,1203,1204,1205,1206,1207],type:[15,18,81,82,83,84,100,396,397,478,479,850,862,863,864,865,877,878,882,894,900,904,905,906,910,911,912,913,914,915,916,923,924,925,927,930,939,941,951,954,955,957,966,973,985,986,991,1005,1015,1018,1019,1025,1030,1052,1059,1069,1169,1171,1172,1173,1174,1175,1176,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1214,1215,1218,1219,1220,1221,1229,1231,1232,1234,1235,1237,1250,1251,1264],types_to_iteratively_nest:[81,82,83],uint8:[1035,1037,1041],uint8_img_to_float_img:[847,1035],unabl:84,unchang:[15,16,17,18,19],uncom:84,underli:[1181,1184],underwai:84,unecessari:84,unfairli:84,unif:1069,unifi:[81,82,847,850,879,880,881,882,894,1069,1221],uniform:[81,82,1125,1126,1128,1129,1229,1231,1232,1235,1236],uniformli:[1125,1127,1129],unify_arrai:[847,1069],unify_it:[847,1069],unify_nest:[847,1069],uniniti:[1171,1172],union:[15,18,19,81,82,84,470,471,472,473,475,476,478,479,848,849,850,868,873,874,875,876,894,895,900,904,905,906,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,957,958,959,963,965,966,967,974,975,976,977,979,980,981,982,985,986,989,990,991,992,993,998,999,1000,1001,1004,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1069,1113,1114,1115,1121,1122,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220],uniqu:[850,859,860,1065,1066,1067,1068,1069,1113,1117],unique_kwarg:1069,unit:[84,850,1052,1053,1054,1069,1142,1143,1144,1145],unitari:[1203,1207],unless:[924,985,1018],unlik:[850,1069],unnorm:[1125,1126],unpack:[924,1014],unrol:[1150,1160],unset:1264,unset_debug_mod:85,unset_default_devic:[847,850],unset_default_dtyp:[847,900],unset_default_float_dtyp:[847,900],unset_default_int_dtyp:[847,900],unset_framework:[100,1264],unset_with_grad:[847,1019],unstack:[81,82,125,260,398,531,663,847,924],until:84,unus:[848,849],updat:[81,82,398,423,424,850,859,924,971,992,993,1019,1021,1022,1024,1026,1027,1028,1065,1066,1067,1069,1113,1118,1119,1123,1124,1150,1160,1221,1222,1227,1228,1254,1255,1256,1257,1258,1259,1264,1267],update_backend:[81,82],update_config:[81,82],upon:84,upper:[81,82,1125,1129],upper_depth:[1250,1251],upstream:84,usabl:[1221,1267],usag:[850,894,1069],use:[81,82,83,84,446,850,859,860,885,897,924,989,1002,1003,1042,1047,1069,1150,1161,1167,1168,1221,1252,1253,1264,1267],used:[81,82,84,446,850,859,889,892,893,899,900,911,924,961,962,978,992,993,994,995,1018,1019,1026,1027,1042,1045,1065,1066,1067,1068,1069,1113,1122,1203,1204,1238,1249,1254,1256,1257,1263,1264],used_dev:[850,859],used_mem_on_dev:[847,850],used_mem_on_nod:[847,1069],used_node_str:1069,used_node_strs_dict:1069,useful:[81,82,850,894,1069,1150,1159,1221,1264],user:[1221,1238,1249,1250,1251,1264,1267],uses:1221,using:[81,82,84,1019,1021,1022,1113,1116,1120,1132,1133,1150,1158,1162,1221,1238,1246,1263,1264,1267],util:[850,883,1069,1169],utility_funct:[1218,1219,1220],v_with_top_v_key_chain:[1250,1251],val:[81,82,398,415,416,417,924,969,970,971,994,995],valid:[900,905,924,1002,1003,1150,1151,1152,1153,1154,1155,1156,1157,1218,1219,1220,1238,1239,1240,1241,1242,1243,1244,1245],valid_dtyp:[847,900],valu:[81,82,398,850,862,893,894,924,925,927,929,936,937,938,940,941,947,951,956,957,958,959,974,976,977,980,982,988,989,990,991,992,993,994,995,996,1012,1015,1016,1017,1019,1023,1026,1035,1041,1049,1050,1051,1052,1060,1061,1062,1065,1066,1067,1069,1113,1117,1118,1119,1123,1124,1125,1128,1129,1132,1134,1136,1150,1161,1162,1167,1168,1181,1185,1190,1191,1203,1206,1207,1208,1211,1212,1214,1215,1216,1217,1238,1249,1252,1253,1254,1256],value_is_nan:[847,924],vanilla:[1065,1067],var_shap:1229,variabl:[15,16,17,18,19,81,82,308,430,565,726,847,924,933,969,970,971,972,973,1005,1019,1022,1023,1024,1025,1026,1027,1028,1030,1033,1065,1066,1067,1068,1150,1161,1167,1168,1227,1228,1229,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261],variable_data:[430,726,847,1019],varianc:[81,82,1132,1140,1267],varieti:1264,variou:[84,1221],vector:[81,82,439,442,924,938,943,1042,1048,1150,1159,1203,1205,1207,1208,1238,1248],vector_norm:[81,82,234,378,504,635,828,1169,1203],vector_to_skew_symmetric_matrix:[163,317,439,574,736,847,1042],verbos:1266,veri:[84,1221],verifi:84,via:[1113,1114,1121,1264],view:[1035,1040],vision:1221,visual:1264,volum:[1150,1155],vw_tm1:[1019,1022,1026],wai:[1264,1267],wait:[81,82,83,84],want:[84,1221,1264,1267],warn:[100,107,108,109,110,111],warp:[435,436,1035,1036],watch:1263,websit:84,weight:[1019,1021,1022,1024,1026,1027,1028,1150,1159,1160,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1250,1251,1254,1256,1257],weight_initi:[1238,1239,1240,1241,1242,1243,1244,1245,1247,1248],weights_path:[1250,1251],well:[81,82,924,965],were:[81,82,1069],what:[84,1221],when:[81,82,83,84,850,924,935,1003,1016,1069,1203,1207,1221,1250,1251,1264,1267],where:[81,82,84,260,398,663,847,924,927,934,936,940,953,967,974,985,1017,1113,1114,1121,1125,1126,1181,1193,1203,1207,1218,1219,1220],wherea:84,wherebi:[1113,1122],whether:[15,18,19,81,82,83,848,849,850,868,881,885,889,894,897,899,900,910,914,915,916,923,924,926,931,932,944,947,952,956,963,965,968,972,973,978,998,1005,1014,1015,1019,1022,1023,1024,1025,1026,1027,1028,1030,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1142,1143,1150,1158,1181,1189,1218,1219,1220,1221,1227,1228,1238,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],which:[81,82,83,84,446,848,849,850,859,860,868,873,874,875,876,879,880,881,882,884,886,890,892,893,894,900,905,910,914,923,924,927,930,939,941,943,944,945,947,957,958,959,960,966,967,975,976,977,984,985,986,987,989,992,993,1000,1004,1014,1016,1018,1019,1022,1023,1024,1026,1027,1028,1030,1032,1033,1035,1037,1042,1045,1052,1056,1069,1113,1117,1118,1119,1123,1124,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1161,1162,1171,1172,1173,1174,1175,1176,1177,1178,1179,1203,1204,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1260,1261,1263,1264],whilst:84,whitespac:[81,82,83],who:84,whose:[924,930,935,1132,1133,1134,1135,1136,1138,1140,1171,1175,1181,1182,1183,1186,1187,1198,1199,1201,1203,1204,1209,1210],why:[1221,1222],width:[1035,1040],wiki:1267,wikipedia:1267,window:[1035,1040,1150,1151,1152,1153,1154,1155,1156,1157,1238,1239,1240,1241,1242,1243,1244,1245],wise:[81,82,924,936,951,954,955,980,982,991,1019,1022,1024,1026,1028,1049,1050,1051,1052,1053,1054,1055,1056,1059,1060,1061,1062,1063,1142,1143,1144,1145,1146,1147,1148,1149,1181,1184,1190,1191,1195,1196],wish:1264,with_bia:[1238,1248],with_cal:[924,947],with_default_key_color:[81,82],with_entries_as_list:[81,82],with_grad:[847,1019,1029],with_ivy_backend:[81,82],with_key_length_limit:[81,82],with_node_map:1069,with_partial_v:[1250,1251],with_print_ind:[81,82],with_print_limit:[81,82],with_print_line_spac:[81,82],with_remaind:[81,82,398,425,924,1000,1069],with_to_kv_fn:[1238,1249],with_to_out_fn:[1238,1249],with_to_q_fn:[1238,1249],within:[15,18,19,84,924,927,1125,1129,1203,1207],without:[81,82,84,924,988,990,996,1113,1115,1264],wonder:1221,word:[15,16,17,924,927,1125,1129,1227,1228],work:[84,1263],worker:[850,859,860,1069],worker_class:[850,859,860,1069],worker_kwarg:1069,would:[84,1142,1147,1221,1264,1267],wrap:[15,81,82,83,84,396,398,430,435,439,443,444,446,924,935,1019,1033,1221],write:[81,82,84,1221,1222,1267],written:[84,1221,1267],ws_new:[1019,1022,1024,1026,1027,1028],x1_i:[924,951,1052,1059,1181,1184,1190,1191,1196],x2_i:[924,951,1052,1059,1181,1184,1190,1191,1196],x_feat_dim:[1150,1161],x_i:[1181,1182,1183,1185,1186,1187,1188,1189,1192,1194,1195,1198,1199,1200,1201],x_in:[1221,1263],x_inv:[1042,1044],x_max:[398,924,936],x_min:[398,924,936],x_sub:1069,xkk:1267,xkkm1:1267,xkm1km1:1267,xs0:1069,xs_t:1069,year:[1221,1267],yet:[1113,1122,1267],yield:[924,1016],you:[84,1221,1263,1264,1267],your:[1221,1222,1263,1264,1267],your_awesome_project:1264,yourself:[84,1221],yourslef:84,youtub:84,zero:[81,82,200,353,470,601,794,924,940,985,992,993,1017,1018,1019,1021,1022,1026,1027,1150,1158,1169,1171,1172,1175,1181,1195,1196,1203,1205,1208,1218,1219,1220,1221,1229,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1254,1255,1256,1257],zero_pad:[260,398,531,663,847,924],zeros_lik:[125,260,398,531,663,847,924],zip:1069,zk_e:1267},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","Extra","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Standard","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Functional","Backends","Jax","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Mxnet","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Neural net","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Numpy","Extra","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Tensorflow","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Torch","Extra","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Ivy","Extra","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Neural Net","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":947,"function":[114,200,206,211,233,240,242,244,245,247,249,353,359,364,377,383,385,387,388,390,391,470,476,481,503,510,512,514,515,517,519,601,607,612,634,641,643,645,646,648,650,794,800,805,827,834,836,838,839,841,843,1171,1177,1181,1202,1209,1211,1213,1214,1216,1218],Ones:1234,Using:1264,abs:[261,532,664,925],aco:[747,1053],acosh:[212,365,482,613,806,1182],activ:[185,341,457,594,773,1142,1224],adam:1255,adam_step:1021,adam_upd:1022,algebra:[163,234,317,378,439,504,574,635,736,828,1203],all:[250,392,520,651,844,1219],all_equ:926,all_nested_indic:1114,ani:[251,393,521,652,845,1220],api:[0,84],arang:[126,262,399,533,665,927],arg_nam:928,argmax:[243,386,513,644,837,1212],argmin:[127,400,534,666,929],args_to_ivi:[16,24],args_to_n:[17,25],argsort:[246,389,516,647,840,1215],arithmet:[1,67],arrai:[0,3,69,84,128,263,401,535,667,930],array_equ:[264,668,931],arrays_equ:932,arraywitharrayapiarithmeticoper:[2,68],arraywitharrayapiarrayoper:[4,70],arraywitharrayapiattribut:[6,72],arraywitharrayapibitwiseoper:[8,74],arraywitharrayapicomparisonoper:[10,76],arraywitharrayapiinplaceoper:[12,78],arraywitharrayapireflectedoper:[14,80],arraywithdevic:[21,29],arraywithgener:[31,49],arraywithgradi:[33,51],arraywithimag:[35,53],arraywithlinalg:[37,55],arraywithlog:[39,57],arraywithmath:[41,59],arraywithmeta:[43,61],arraywithrandom:[45,63],arraywithreduct:[47,65],asin:[748,1054],asinh:[213,483,614,807,1183],assert_supports_inplac:933,atan2:[750,1056],atan:[749,1055],atanh:[751,1057],attribut:[5,71],backend:[84,115],bilinear_resampl:[160,314,436,571,733,1036],binary_cross_entropi:1164,bitwis:[7,73],bitwise_and:[214,366,484,615,808,1184],broadcast_to:[265,669,934],builder:92,cache_fn:935,cast:[129,266,402,536,670,904],ceil:[215,367,485,616,809,1185],choleski:[737,1043],choose_random_framework:102,citat:1221,clear_framework_stack:103,clear_mem_on_dev:[657,866],clip:[267,671,936],clip_matrix_norm:937,clip_vector_norm:938,clone:1084,clone_arrai:1085,clone_it:1086,clone_nest:1087,clonedit:1071,cloneditem:1070,clonednest:1072,closest_valid_dtyp:905,code:1267,comparison:[9,75],compil:[268,403,672,848,849],concaten:[130,269,404,537,673,939],constant:[199,352,469,600,793,1170],constant_pad:[270,538,674,940],contain:[81,82],container_typ:[675,941],content:1221,contribut:84,conv1d:[191,344,461,785,1151,1239],conv1d_transpos:[192,345,462,786,1152],conv1dtranspos:1240,conv2d:[193,346,463,596,787,1153,1241],conv2d_transpos:[194,347,464,788,1154],conv2dtranspos:1242,conv3d:[195,348,465,597,789,1155,1243],conv3d_transpos:[196,349,466,790,1156],conv3dtranspos:1244,convers:[15,23],convert:[187,781,1227],convert_dtyp:906,copy_arrai:[676,942],copy_nest:1115,cos:[216,486,617,810,1186],cosh:[217,487,618,752,811,1058,1187],cprint:1266,creat:84,creation:[200,353,470,601,794,1171],cross:[271,677,943],cross_entropi:1165,cumprod:[131,272,405,678,944],cumsum:[679,945],current_framework:104,current_framework_str:[680,946],data:[206,210,359,363,476,480,607,611,800,804,1177,1180],debug_mod:86,debugg:85,default_devic:867,default_dtyp:907,default_float_dtyp:908,default_int_dtyp:909,default_nod:1088,depthwise_conv2d:[197,350,467,598,791,1157],depthwiseconv2d:1245,design:84,dev:[120,256,526,658,868],dev_clon:869,dev_clone_arrai:870,dev_clone_it:871,dev_clone_nest:872,dev_dist:873,dev_dist_arrai:874,dev_dist_it:875,dev_dist_nest:876,dev_from_str:[121,257,527,659,877],dev_to_str:[122,258,528,660,878],dev_unifi:879,dev_unify_arrai:880,dev_unify_it:881,dev_unify_nest:882,dev_util:883,devclonedit:853,devcloneditem:852,devclonednest:854,devdistit:856,devdistitem:855,devdistnest:857,devic:[20,28,118,254,396,524,655,850],devmapp:859,devmappermultiproc:860,diagon:[235,379,505,636,829,1204],distribute_nest:1089,divid:1059,document:1221,dropout:[1158,1246],dtype:[132,273,406,539,681,900,910],dtype_bit:[133,274,407,540,682,911],dtype_from_str:[134,275,408,541,683,912],dtype_to_str:[135,276,409,542,684,913],ecosystem:93,einops_rearrang:948,einops_reduc:949,einops_repeat:950,einsum:[177,332,449,586,765,1133],elementwis:[211,364,481,612,805,1181],empti:[201,354,471,602,795,1172],equal:[218,488,619,812,951],erf:[445,753,1060],execute_with_gradi:[157,309,431,566,727,1023],exist:952,exp:[754,1061],expand_dim:[277,685,953],extra:[22,117,253,395,523,654,847],finfo:[208,361,478,609,802,1178],firstlayersiren:1231,flip:[241,384,511,642,835,1210],float_img_to_uint8_img:1037,floor:[278,686,954],floormod:[279,687,955],fomaml_step:1066,fork:84,fourier_encod:956,framework:100,full:[136,280,410,543,688,957],func:113,gather:[137,281,411,544,689,958],gather_nd:[138,282,412,545,690,959],geglu:1225,gelu:[342,458,774,1143,1226],gener:[30,48,125,260,398,531,663,924],get_all_arrays_in_memori:960,get_all_arrays_on_dev:884,get_framework:105,get_min_bas:961,get_min_denomin:962,get_num_dim:[691,963],get_referrers_recurs:964,glorotuniform:1232,gpu_is_avail:[885,1090],gradient:[32,50,156,308,430,565,726,1019],gradient_descent_upd:1024,gradient_imag:[161,315,437,572,734,1038],gym:94,handler:100,has_nan:965,ident:[139,283,413,546,692,966],iinfo:[209,362,479,610,803,1179],imag:[34,52,159,313,435,570,732,1035],index_nest:1116,indices_wher:[140,284,414,693,967],initi:1229,inplac:[11,77],inplace_arrays_support:968,inplace_decr:[141,285,415,547,694,969],inplace_incr:[142,286,416,548,695,970],inplace_upd:[143,287,417,549,696,971],inplace_variables_support:972,inv:[738,1044],invalid_dtyp:914,is_arrai:[144,288,418,550,697,973],is_float_dtyp:915,is_int_dtyp:916,is_vari:[158,310,432,567,728,1025],isfinit:[219,368,489,620,813,1188],isinf:[289,551,698,974],isnan:[220,369,490,621,814,1189],issu:84,ivi:[84,91,92,93,94,95,96,97,98,99,846,1263,1264,1267],ivymodul:[188,782],jax:116,keep:84,lamb:1256,lamb_upd:1026,lar:1257,lars_upd:1027,layer:[190,343,460,595,784,1150,1238],layer_norm:1168,layernorm:1253,leaky_relu:[775,1144],less:[221,370,491,622,815,1190],less_equ:[222,492,623,816,1191],linalg:[36,54,1042],linear:[163,234,317,378,439,504,574,635,736,828,1159,1203,1248],linear_resampl:[145,290,419,552,699,975],linspac:[146,291,420,553,700,976],list:84,log10:[223,493,624,817,1192],log1p:[224,494,625,818,1193],log2:[225,495,626,819,1194],log:[755,1062],logic:[38,56,167,322,443,578,743,1049],logical_and:[323,744,1050],logical_not:[226,371,496,627,820,1195],logical_or:[227,324,497,628,745,821,1051,1196],logspac:[147,292,421,554,701,977],loss:1163,lstm:1247,lstm_updat:1160,maml_step:1067,manipul:[240,383,510,641,834,1209],map:1117,map_nest_at_index:1118,map_nest_at_indic:1119,match_kwarg:978,math:[40,58,168,325,444,579,746,1052],matmul:[236,293,506,637,830,979,1205],matrix_norm:[164,318,440,575,739,1045],maximum:[702,980],mech:95,memori:96,meshgrid:[294,703,981],meta:[42,60,1065],method:[233,377,503,634,827,1202],min:[248,518,649,842,1217],minimum:[704,982],model:97,modul:[1250,1251,1263],multi:1069,multi_head_attent:1161,multi_index_nest:1120,multidevcontain:83,multidevit:863,multidevitem:862,multidevnest:864,multiheadattent:1249,multinodeit:1075,multinodeitem:1074,multinodenest:1076,multinomi:[170,327,447,581,758,1126],multiprocess:[705,983],mxnet:252,nativ:1263,neg:[228,372,498,629,822,1197],nest:1113,nested_indices_wher:1121,nested_map:1122,net:[184,340,456,593,772,1141],network:1263,neural:[184,340,456,593,772,1141],next:1221,node:[1069,1091],node_dist:1092,node_dist_arrai:1093,node_dist_it:1094,node_str:1095,node_to_str:1096,node_util:1097,nodedistit:1078,nodedistitem:1077,nodedistnest:1079,nodemapp:1081,nodemappermultiproc:1082,norm:[1167,1252],num_arrays_in_memori:984,num_arrays_on_dev:886,num_cpu_cor:887,num_gpu:[123,888,1098],numpi:394,nutshel:1221,one_hot:[148,422,555,706,985],ones:[202,355,472,603,796,986,1173],ones_lik:[203,356,473,604,797,1174],oper:[1,3,7,9,11,13,67,69,73,75,77,79],optim:[1254,1258],optimizer_upd:1028,overview:1221,percent_used_mem_on_dev:889,percent_used_mem_on_nod:1099,pinv:[319,740,1046],portabl:1267,print_all_arrays_in_memori:987,print_all_arrays_on_dev:890,profil:[119,255,397,525,656,865,1083],pull:84,queue_timeout:988,randint:[171,328,582,759,1127],random:[44,62,169,326,446,580,757,1125],random_crop:1039,random_norm:[172,329,583,760,1128],random_uniform:[173,330,584,761,1129],reduce_max:[178,333,450,587,766,1134],reduce_mean:[179,334,451,588,767,1135],reduce_min:[180,335,452,589,768,1136],reduce_prod:[181,336,453,590,769,1137],reduce_std:[337,1138],reduce_sum:[182,338,454,591,770,1139],reduce_var:[183,339,455,592,771,1140],reduct:[46,64,176,331,448,585,764,1132],reflect:[13,79],relu:[776,1145],repeat:[295,707,989],reptile_step:1068,request:84,reshap:[708,990],robot:98,round:[296,709,991],run:1264,scaled_dot_product_attent:1162,scatter_flat:[149,297,423,556,710,992],scatter_nd:[150,298,424,557,711,993],search:[242,385,512,643,836,1211],seed:[174,762,1130],sequenti:[1260,1261],set:[244,387,514,645,838,1213],set_breakpoint_debug_mod:87,set_debug_mod:88,set_default_devic:891,set_default_dtyp:917,set_default_float_dtyp:918,set_default_int_dtyp:919,set_default_nod:1100,set_exception_debug_mod:89,set_framework:106,set_min_bas:994,set_min_denomin:995,set_nest_at_index:1123,set_nest_at_indic:1124,set_queue_timeout:996,set_split_factor:[892,1101],set_tmp_dir:997,set_with_grad:1029,sgd:1259,shape:[712,998],shape_to_tupl:999,shuffl:[175,763,1131],sigmoid:[777,1146],signatur:[233,377,503,634,827,1202],sin:[229,373,499,630,823,1198],sinh:[230,374,500,631,824,1199],siren:1235,slodget:1206,slogdet:[237,380,507,638,831],softmax:[186,459,778,1147],softplu:[779,1148],sort:[245,388,515,646,839,1214],sparse_cross_entropi:1166,split:[151,299,425,558,713,1000],split_factor:[893,1102],split_func_cal:[894,1103],sqrt:[231,375,501,632,825,1200],squeez:[152,300,426,559,714,1001],stable_divid:1002,stable_pow:1003,stack:[301,715,1004],stack_imag:[162,316,438,573,735,1040],standard:[66,84,198,351,468,599,792,1169],statist:[247,390,517,648,841,1216],stop_gradi:[311,433,568,729,1030],str_to_nod:1104,submodul:84,supports_inplac:1005,svd:[238,381,508,639,832,1207],swapax:[560,716,1006],tan:[756,1063],tanh:[232,376,502,633,780,826,1064,1149,1201],tensorflow:522,tile:[302,561,717,1007],tmp_dir:1008,to_dev:[124,259,529,661,895],to_ivi:[18,26],to_ivy_modul:[189,783,1228],to_list:[718,1009],to_n:[19,27],to_nod:1105,to_numpi:[719,1010],to_scalar:[720,1011],todo:84,torch:653,total_mem_on_dev:896,total_mem_on_nod:1106,tpu_is_avail:[530,662,897,1107],train:1263,trainabl:1263,transpos:[153,303,427,721,1012],tree:1221,tril:[204,357,474,605,798,1175],try_else_non:1013,try_import_ivy_jax:107,try_import_ivy_mxnet:108,try_import_ivy_numpi:109,try_import_ivy_tf:110,try_import_ivy_torch:111,type:[206,210,359,363,476,480,607,611,800,804,1177,1180],uint8_img_to_float_img:1041,unifi:1108,unify_arrai:1109,unify_it:1110,unify_nest:1111,unset_debug_mod:90,unset_default_devic:898,unset_default_dtyp:920,unset_default_float_dtyp:921,unset_default_int_dtyp:922,unset_framework:112,unset_with_grad:1031,unstack:[154,304,428,562,722,1014],updat:84,used_mem_on_dev:899,used_mem_on_nod:1112,util:[249,391,519,650,843,1218],valid_dtyp:923,value_is_nan:1015,variabl:[312,434,569,730,1032],variable_data:[731,1033],vector_norm:[239,382,509,640,833,1208],vector_to_skew_symmetric_matrix:[166,321,442,577,742,1048],verbos:1265,vision:99,where:[305,723,1016,1221],why:1267,with_grad:1034,wrapper:113,write:1264,your:84,zero:[205,358,475,606,799,1176,1237],zero_pad:[306,563,724,1017],zeros_lik:[155,307,429,564,725,1018]}})