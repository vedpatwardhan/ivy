Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[798,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[351,0,0,"-"],creation_functions:[352,0,0,"-"],data_type_functions:[358,0,0,"-"],data_types:[362,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[353,2,1,""],ones:[354,2,1,""],ones_like:[355,2,1,""],tril:[356,2,1,""],zeros:[357,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[358,1,1,""],finfo:[360,2,1,""],iinfo:[361,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[358,3,1,""],bits:[358,3,1,""],eps:[358,3,1,""],max:[358,3,1,""],min:[358,3,1,""],smallest_normal:[358,3,1,""]},"ivy.functional.backends.numpy.core":{device:[403,0,0,"-"],general:[405,0,0,"-"],gradients:[437,0,0,"-"],image:[442,0,0,"-"],linear_algebra:[446,0,0,"-"],logic:[450,0,0,"-"],math:[451,0,0,"-"],random:[453,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[404,1,1,""],clear_mem_on_dev:[403,2,1,""],dev:[403,2,1,""],dev_from_str:[403,2,1,""],dev_to_str:[403,2,1,""],gpu_is_available:[403,2,1,""],num_gpus:[403,2,1,""],to_dev:[403,2,1,""],tpu_is_available:[403,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[404,3,1,""],start:[404,3,1,""],stop:[404,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[405,2,1,""],arange:[406,2,1,""],argmin:[407,2,1,""],array:[408,2,1,""],asarray:[405,2,1,""],astype:[405,2,1,""],cast:[409,2,1,""],clip:[405,2,1,""],compile:[410,2,1,""],concatenate:[411,2,1,""],constant_pad:[405,2,1,""],container_types:[405,2,1,""],copy_array:[405,2,1,""],cumprod:[412,2,1,""],current_framework_str:[405,2,1,""],dtype:[413,2,1,""],dtype_bits:[414,2,1,""],dtype_from_str:[415,2,1,""],dtype_to_str:[416,2,1,""],floor:[405,2,1,""],floormod:[405,2,1,""],full:[417,2,1,""],gather:[418,2,1,""],gather_nd:[419,2,1,""],get_num_dims:[405,2,1,""],identity:[420,2,1,""],indices_where:[421,2,1,""],inplace_arrays_supported:[405,2,1,""],inplace_decrement:[422,2,1,""],inplace_increment:[423,2,1,""],inplace_update:[424,2,1,""],inplace_variables_supported:[405,2,1,""],is_array:[425,2,1,""],linear_resample:[426,2,1,""],linspace:[427,2,1,""],logspace:[428,2,1,""],matmul:[405,2,1,""],meshgrid:[405,2,1,""],multiprocessing:[405,2,1,""],one_hot:[429,2,1,""],round:[405,2,1,""],scatter_flat:[430,2,1,""],scatter_nd:[431,2,1,""],shape:[405,2,1,""],split:[432,2,1,""],squeeze:[433,2,1,""],to_list:[405,2,1,""],to_numpy:[405,2,1,""],to_scalar:[405,2,1,""],transpose:[434,2,1,""],unstack:[435,2,1,""],where:[405,2,1,""],zero_pad:[405,2,1,""],zeros_like:[436,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[438,2,1,""],is_variable:[439,2,1,""],stop_gradient:[440,2,1,""],variable:[441,2,1,""],variable_data:[437,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[443,2,1,""],gradient_image:[444,2,1,""],stack_images:[445,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[447,2,1,""],qr:[448,2,1,""],vector_to_skew_symmetric_matrix:[449,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[452,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[454,2,1,""],randint:[453,2,1,""],random_normal:[453,2,1,""],random_uniform:[453,2,1,""],seed:[453,2,1,""],shuffle:[453,2,1,""]},"ivy.functional.ivy":{array_api:[799,0,0,"-"],core:[849,0,0,"-"],nn:[1144,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[800,0,0,"-"],creation_functions:[801,0,0,"-"],data_type_functions:[807,0,0,"-"],data_types:[810,0,0,"-"],elementwise_functions:[811,0,0,"-"],function_and_method_signatures:[831,0,0,"-"],linear_algebra:[832,0,0,"-"],manipulation_functions:[837,0,0,"-"],searching_functions:[839,0,0,"-"],set_functions:[841,0,0,"-"],sorting_functions:[842,0,0,"-"],statistical_functions:[844,0,0,"-"],utility_functions:[846,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[800,4,1,""],nan:[800,4,1,""],pi:[800,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[802,2,1,""],ones:[803,2,1,""],ones_like:[804,2,1,""],tril:[805,2,1,""],zeros:[806,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[808,2,1,""],iinfo:[809,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[812,2,1,""],asinh:[813,2,1,""],bitwise_and:[814,2,1,""],ceil:[815,2,1,""],cos:[816,2,1,""],cosh:[817,2,1,""],isfinite:[818,2,1,""],isnan:[819,2,1,""],less:[820,2,1,""],less_equal:[821,2,1,""],log10:[822,2,1,""],log1p:[823,2,1,""],log2:[824,2,1,""],logical_not:[825,2,1,""],logical_or:[826,2,1,""],negative:[827,2,1,""],sin:[828,2,1,""],sqrt:[829,2,1,""],tanh:[830,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[833,2,1,""],slodget:[834,2,1,""],svd:[835,2,1,""],vector_norm:[836,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[838,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[840,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[843,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[845,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[847,2,1,""],any:[848,2,1,""]},"ivy.functional.ivy.core":{compilation:[850,0,0,"-"],device:[852,0,0,"-"],dtype:[902,0,0,"-"],general:[926,0,0,"-"],gradients:[1021,0,0,"-"],image:[1037,0,0,"-"],linalg:[1044,0,0,"-"],logic:[1051,0,0,"-"],math:[1054,0,0,"-"],meta:[1068,0,0,"-"],multi_node:[1072,0,0,"-"],nest:[1116,0,0,"-"],random:[1128,0,0,"-"],reductions:[1135,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[851,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[852,1,1,""],DevClonedItem:[854,1,1,""],DevClonedIter:[855,1,1,""],DevClonedNest:[856,1,1,""],DevDistItem:[857,1,1,""],DevDistIter:[858,1,1,""],DevDistNest:[859,1,1,""],DevManager:[852,1,1,""],DevMapper:[861,1,1,""],DevMapperMultiProc:[862,1,1,""],MultiDev:[852,1,1,""],MultiDevItem:[864,1,1,""],MultiDevIter:[865,1,1,""],MultiDevNest:[866,1,1,""],Profiler:[867,1,1,""],clear_mem_on_dev:[868,2,1,""],default_device:[869,2,1,""],dev:[870,2,1,""],dev_clone:[871,2,1,""],dev_clone_array:[872,2,1,""],dev_clone_iter:[873,2,1,""],dev_clone_nest:[874,2,1,""],dev_dist:[875,2,1,""],dev_dist_array:[876,2,1,""],dev_dist_iter:[877,2,1,""],dev_dist_nest:[878,2,1,""],dev_from_str:[879,2,1,""],dev_to_str:[880,2,1,""],dev_unify:[881,2,1,""],dev_unify_array:[882,2,1,""],dev_unify_iter:[883,2,1,""],dev_unify_nest:[884,2,1,""],dev_util:[885,2,1,""],get_all_arrays_on_dev:[886,2,1,""],gpu_is_available:[887,2,1,""],num_arrays_on_dev:[888,2,1,""],num_cpu_cores:[889,2,1,""],num_gpus:[890,2,1,""],percent_used_mem_on_dev:[891,2,1,""],print_all_arrays_on_dev:[892,2,1,""],set_default_device:[893,2,1,""],set_split_factor:[894,2,1,""],split_factor:[895,2,1,""],split_func_call:[896,2,1,""],to_dev:[897,2,1,""],total_mem_on_dev:[898,2,1,""],tpu_is_available:[899,2,1,""],unset_default_device:[900,2,1,""],used_mem_on_dev:[901,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[852,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[852,3,1,""],da_tune_step:[852,3,1,""],dim_size:[852,3,1,""],ds_tune_step:[852,3,1,""],map:[852,3,1,""],repeated_config_check:[852,3,1,""],tune_step:[852,3,1,""],tuned:[852,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[861,3,1,""],map:[861,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[862,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[852,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[864,3,1,""],items:[864,3,1,""],keys:[864,3,1,""],shape:[864,3,1,""],values:[864,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[865,3,1,""],at_dev:[865,3,1,""],at_devs:[865,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[866,3,1,""],at_dev:[866,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[867,3,1,""],start:[867,3,1,""],stop:[867,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[902,1,1,""],DefaultFloatDtype:[902,1,1,""],DefaultIntDtype:[902,1,1,""],astype:[902,2,1,""],cast:[906,2,1,""],closest_valid_dtype:[907,2,1,""],convert_dtype:[908,2,1,""],default_dtype:[909,2,1,""],default_float_dtype:[910,2,1,""],default_int_dtype:[911,2,1,""],dtype:[912,2,1,""],dtype_bits:[913,2,1,""],dtype_from_str:[914,2,1,""],dtype_to_str:[915,2,1,""],invalid_dtype:[916,2,1,""],is_float_dtype:[917,2,1,""],is_int_dtype:[918,2,1,""],set_default_dtype:[919,2,1,""],set_default_float_dtype:[920,2,1,""],set_default_int_dtype:[921,2,1,""],unset_default_dtype:[922,2,1,""],unset_default_float_dtype:[923,2,1,""],unset_default_int_dtype:[924,2,1,""],valid_dtype:[925,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.general":{"default":[949,2,1,""],abs:[927,2,1,""],all_equal:[928,2,1,""],arange:[929,2,1,""],arg_names:[930,2,1,""],argmin:[931,2,1,""],array:[932,2,1,""],array_equal:[933,2,1,""],arrays_equal:[934,2,1,""],asarray:[926,2,1,""],assert_supports_inplace:[935,2,1,""],broadcast_to:[936,2,1,""],cache_fn:[937,2,1,""],clip:[938,2,1,""],clip_matrix_norm:[939,2,1,""],clip_vector_norm:[940,2,1,""],concatenate:[941,2,1,""],constant_pad:[942,2,1,""],container_types:[943,2,1,""],copy_array:[944,2,1,""],cross:[945,2,1,""],cumprod:[946,2,1,""],cumsum:[947,2,1,""],current_framework_str:[948,2,1,""],einops_rearrange:[950,2,1,""],einops_reduce:[951,2,1,""],einops_repeat:[952,2,1,""],equal:[953,2,1,""],exists:[954,2,1,""],expand_dims:[955,2,1,""],floor:[956,2,1,""],floormod:[957,2,1,""],fourier_encode:[958,2,1,""],full:[959,2,1,""],gather:[960,2,1,""],gather_nd:[961,2,1,""],get_all_arrays_in_memory:[962,2,1,""],get_min_base:[963,2,1,""],get_min_denominator:[964,2,1,""],get_num_dims:[965,2,1,""],get_referrers_recursive:[966,2,1,""],has_nans:[967,2,1,""],identity:[968,2,1,""],indices_where:[969,2,1,""],inplace_arrays_supported:[970,2,1,""],inplace_decrement:[971,2,1,""],inplace_increment:[972,2,1,""],inplace_update:[973,2,1,""],inplace_variables_supported:[974,2,1,""],is_array:[975,2,1,""],isinf:[976,2,1,""],linear_resample:[977,2,1,""],linspace:[978,2,1,""],logspace:[979,2,1,""],match_kwargs:[980,2,1,""],matmul:[981,2,1,""],maximum:[982,2,1,""],meshgrid:[983,2,1,""],minimum:[984,2,1,""],multiprocessing:[985,2,1,""],num_arrays_in_memory:[986,2,1,""],one_hot:[987,2,1,""],ones:[988,2,1,""],print_all_arrays_in_memory:[989,2,1,""],queue_timeout:[990,2,1,""],repeat:[991,2,1,""],reshape:[992,2,1,""],round:[993,2,1,""],scatter_flat:[994,2,1,""],scatter_nd:[995,2,1,""],set_min_base:[996,2,1,""],set_min_denominator:[997,2,1,""],set_queue_timeout:[998,2,1,""],set_tmp_dir:[999,2,1,""],shape:[1000,2,1,""],shape_to_tuple:[1001,2,1,""],split:[1002,2,1,""],squeeze:[1003,2,1,""],stable_divide:[1004,2,1,""],stable_pow:[1005,2,1,""],stack:[1006,2,1,""],supports_inplace:[1007,2,1,""],swapaxes:[1008,2,1,""],tile:[1009,2,1,""],tmp_dir:[1010,2,1,""],to_list:[1011,2,1,""],to_numpy:[1012,2,1,""],to_scalar:[1013,2,1,""],transpose:[1014,2,1,""],try_else_none:[1015,2,1,""],unstack:[1016,2,1,""],value_is_nan:[1017,2,1,""],where:[1018,2,1,""],zero_pad:[1019,2,1,""],zeros_like:[1020,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1021,1,1,""],adam_step:[1023,2,1,""],adam_update:[1024,2,1,""],execute_with_gradients:[1025,2,1,""],gradient_descent_update:[1026,2,1,""],is_variable:[1027,2,1,""],lamb_update:[1028,2,1,""],lars_update:[1029,2,1,""],optimizer_update:[1030,2,1,""],set_with_grads:[1031,2,1,""],stop_gradient:[1032,2,1,""],unset_with_grads:[1033,2,1,""],variable:[1034,2,1,""],variable_data:[1035,2,1,""],with_grads:[1036,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1021,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1038,2,1,""],float_img_to_uint8_img:[1039,2,1,""],gradient_image:[1040,2,1,""],random_crop:[1041,2,1,""],stack_images:[1042,2,1,""],uint8_img_to_float_img:[1043,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1045,2,1,""],inv:[1046,2,1,""],matrix_norm:[1047,2,1,""],pinv:[1048,2,1,""],qr:[1049,2,1,""],vector_to_skew_symmetric_matrix:[1050,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1052,2,1,""],logical_or:[1053,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1055,2,1,""],asin:[1056,2,1,""],atan2:[1058,2,1,""],atan:[1057,2,1,""],atanh:[1059,2,1,""],cosh:[1060,2,1,""],divide:[1061,2,1,""],erf:[1062,2,1,""],exp:[1063,2,1,""],log:[1064,2,1,""],sinh:[1065,2,1,""],tan:[1066,2,1,""],tanh:[1067,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1069,2,1,""],maml_step:[1070,2,1,""],reptile_step:[1071,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1072,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1117,2,1,""],copy_nest:[1118,2,1,""],index_nest:[1119,2,1,""],map:[1120,2,1,""],map_nest_at_index:[1121,2,1,""],map_nest_at_indices:[1122,2,1,""],multi_index_nest:[1123,2,1,""],nested_indices_where:[1124,2,1,""],nested_map:[1125,2,1,""],set_nest_at_index:[1126,2,1,""],set_nest_at_indices:[1127,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1129,2,1,""],randint:[1130,2,1,""],random_normal:[1131,2,1,""],random_uniform:[1132,2,1,""],seed:[1133,2,1,""],shuffle:[1134,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1136,2,1,""],reduce_max:[1137,2,1,""],reduce_mean:[1138,2,1,""],reduce_min:[1139,2,1,""],reduce_prod:[1140,2,1,""],reduce_std:[1141,2,1,""],reduce_sum:[1142,2,1,""],reduce_var:[1143,2,1,""]},"ivy.functional.ivy.nn":{activations:[1145,0,0,"-"],layers:[1153,0,0,"-"],losses:[1166,0,0,"-"],norms:[1170,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1146,2,1,""],leaky_relu:[1147,2,1,""],relu:[1148,2,1,""],sigmoid:[1149,2,1,""],softmax:[1150,2,1,""],softplus:[1151,2,1,""],tanh:[1152,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1154,2,1,""],conv1d_transpose:[1155,2,1,""],conv2d:[1156,2,1,""],conv2d_transpose:[1157,2,1,""],conv3d:[1158,2,1,""],conv3d_transpose:[1159,2,1,""],depthwise_conv2d:[1160,2,1,""],dropout:[1161,2,1,""],linear:[1162,2,1,""],lstm_update:[1163,2,1,""],multi_head_attention:[1164,2,1,""],scaled_dot_product_attention:[1165,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1167,2,1,""],cross_entropy:[1168,2,1,""],sparse_cross_entropy:[1169,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1171,2,1,""]},"ivy.stateful":{activations:[1175,0,0,"-"],converters:[1178,0,0,"-"],initializers:[1180,0,0,"-"],layers:[1189,0,0,"-"],module:[1201,0,0,"-"],norms:[1203,0,0,"-"],optimizers:[1205,0,0,"-"],sequential:[1211,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1176,1,1,""],GELU:[1177,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1176,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1177,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1179,2,1,""]},"ivy.stateful.initializers":{Constant:[1180,1,1,""],FirstLayerSiren:[1182,1,1,""],GlorotUniform:[1183,1,1,""],KaimingNormal:[1180,1,1,""],Ones:[1185,1,1,""],Siren:[1186,1,1,""],Uniform:[1180,1,1,""],Zeros:[1188,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1180,3,1,""],create_variables:[1180,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1182,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1183,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1180,3,1,""],create_variables:[1180,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1185,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1180,3,1,""],create_variables:[1180,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1188,3,1,""]},"ivy.stateful.layers":{Conv1D:[1190,1,1,""],Conv1DTranspose:[1191,1,1,""],Conv2D:[1192,1,1,""],Conv2DTranspose:[1193,1,1,""],Conv3D:[1194,1,1,""],Conv3DTranspose:[1195,1,1,""],DepthwiseConv2D:[1196,1,1,""],Dropout:[1197,1,1,""],LSTM:[1198,1,1,""],Linear:[1199,1,1,""],MultiHeadAttention:[1200,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1190,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1191,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1192,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1195,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1197,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1198,3,1,""],get_initial_state:[1198,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1199,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1200,3,1,""]},"ivy.stateful.module":{Module:[1202,1,1,""]},"ivy.stateful.module.Module":{__init__:[1202,3,1,""],build:[1202,3,1,""],build_mode:[1202,3,1,""],built:[1202,3,1,""],check_submod_rets:[1202,3,1,""],get_mod_key:[1202,3,1,""],mod_depth:[1202,3,1,""],mod_height:[1202,3,1,""],mod_with_top_mod_key_chain:[1202,3,1,""],save_weights:[1202,3,1,""],show_mod_in_top_mod:[1202,3,1,""],show_structure:[1202,3,1,""],show_v_in_top_v:[1202,3,1,""],sub_mods:[1202,3,1,""],track_submod_call_order:[1202,3,1,""],track_submod_rets:[1202,3,1,""],v_with_top_v_key_chains:[1202,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1204,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1204,3,1,""]},"ivy.stateful.optimizers":{Adam:[1206,1,1,""],LAMB:[1207,1,1,""],LARS:[1208,1,1,""],Optimizer:[1209,1,1,""],SGD:[1210,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1206,3,1,""],set_state:[1206,3,1,""],state:[1206,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1207,3,1,""],set_state:[1207,3,1,""],state:[1207,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1208,3,1,""],set_state:[1208,3,1,""],state:[1208,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1209,3,1,""],set_state:[1209,3,1,""],step:[1209,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.sequential":{Sequential:[1212,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1212,3,1,""]},"ivy.verbosity":{cprint:[1217,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1216,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1205,1206,1207],"02886":1172,"100":[1072,1172,1214],"141592653589793":800,"2021":1172,"2102":1172,"360":[1054,1066],"718281828459045":800,"754":[800,807,808,811,829],"999":[1021,1023,1024,1028,1205,1206,1207],"abstract":[852,867,1172,1205,1209],"boolean":[40,41,811,814,825,826,852,887,899,902,916,925,926,928,933,934,967,969,970,974,975,976,1007,1017,1021,1027,1051,1052,1053,1068,1069,1070,1072],"break":43,"case":[15,18,19,40,41,42,43,811,812,813,815,816,817,822,824,828,829,852,891,898,901,926,929,992,994,995,1044,1047,1049,1072,1116,1119,1123,1172,1189,1200,1201,1202,1205,1209,1218],"catch":[926,949],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,403,404,807,809,852,854,855,856,857,858,859,861,862,864,865,866,867,879,880,902,926,930,980,1021,1035,1072,1116,1118,1125,1166,1168,1169,1172,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1218],"default":[15,18,19,40,41,42,43,801,802,803,804,805,806,832,833,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,861,862,869,870,874,875,876,877,878,881,882,883,884,891,894,895,896,901,902,909,910,911,912,926,928,929,931,939,940,941,942,945,946,947,958,959,960,965,967,968,977,979,980,983,985,988,990,991,994,995,998,1000,1002,1004,1005,1014,1016,1017,1021,1024,1026,1027,1028,1029,1030,1032,1036,1044,1047,1049,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1128,1129,1131,1132,1135,1137,1138,1139,1140,1141,1142,1143,1145,1146,1150,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212],"final":[40,41,43,926,958,978,979,1072,1189,1200,1215],"float":[40,41,42,800,801,802,803,806,807,808,811,812,813,815,816,817,822,824,828,829,830,832,836,852,861,862,885,891,894,898,901,902,910,917,926,929,939,940,942,958,959,963,964,979,996,997,998,1004,1005,1021,1023,1024,1026,1028,1029,1030,1037,1039,1043,1054,1061,1068,1069,1070,1071,1072,1128,1131,1132,1145,1147,1153,1161,1164,1165,1166,1167,1168,1169,1170,1171,1189,1197,1200,1203,1204,1205,1206,1207,1208,1209,1210],"function":[15,40,41,43,353,354,355,356,357,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,800,802,803,804,805,806,808,809,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,838,840,843,845,847,848,850,851,852,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1175,1176,1177,1205,1208,1209,1210,1214,1215,1218],"import":[43,1172,1215,1218],"int":[40,41,42,43,352,353,354,356,357,453,801,802,803,805,806,807,808,809,832,833,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,874,875,876,877,878,881,882,883,884,889,890,896,902,911,913,918,926,931,936,941,942,946,947,950,951,952,955,958,959,960,965,968,977,978,979,987,988,991,992,994,995,1000,1001,1002,1003,1006,1008,1009,1014,1016,1019,1021,1023,1024,1028,1037,1041,1042,1044,1047,1068,1069,1070,1071,1072,1116,1125,1128,1129,1130,1132,1133,1135,1137,1138,1139,1140,1141,1142,1143,1145,1150,1153,1154,1155,1156,1157,1158,1159,1160,1164,1166,1168,1169,1170,1171,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1203,1204],"long":[43,1153,1163],"new":[40,41,43,453,801,802,803,804,806,811,823,902,906,926,927,936,950,951,952,955,958,959,960,961,988,992,994,995,996,997,1004,1005,1006,1021,1024,1026,1028,1029,1030,1037,1039,1041,1043,1054,1059,1060,1065,1067,1072,1116,1126,1127,1128,1129,1170,1171,1172,1178,1179,1189,1199,1203,1204,1205,1206,1207,1208,1209,1210,1215,1218],"public":[926,943],"return":[15,16,17,18,19,40,41,42,43,453,801,802,803,804,805,806,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,827,828,829,830,832,833,834,835,836,839,840,842,843,844,845,846,847,848,850,851,852,861,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,890,891,895,896,897,898,899,901,902,906,907,908,909,910,911,912,913,914,915,916,917,918,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,965,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,991,992,993,994,995,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1178,1179,1189,1198,1199,1205,1209,1214,1215,1218],"short":[43,1153,1163,1172,1218],"static":[40,41,850,851],"super":1072,"true":[40,41,42,405,410,437,440,453,454,811,818,819,825,826,832,835,836,839,840,842,843,846,847,848,850,851,852,926,928,935,937,954,958,967,969,1017,1018,1021,1024,1026,1027,1028,1029,1030,1032,1044,1047,1068,1069,1070,1071,1072,1116,1117,1124,1128,1129,1135,1137,1138,1139,1140,1141,1142,1143,1145,1146,1153,1161,1166,1167,1168,1169,1189,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210],"try":[40,41,926,1015,1072],"var":[40,41,1068,1069,1070,1218],"while":[40,41,42,811,825,826,1072],AND:[811,814,846,847,1051,1052],But:1218,For:[43,811,812,813,815,816,817,822,824,828,829,926,929,938,1006,1021,1027,1035,1044,1049,1054,1055,1172,1178,1179,1215,1218],Its:[1054,1057],NOT:[811,825],Not:800,One:[40,41,43,926,951,992,1128,1130,1218],Ones:[1172,1180],PRs:43,Such:[926,943],That:1215,The:[15,16,17,18,19,40,41,42,43,801,805,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,828,829,830,832,833,834,835,836,837,838,842,843,846,847,848,850,851,852,861,862,868,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,891,894,895,896,897,898,901,902,906,907,908,913,914,915,916,925,926,929,932,933,936,937,939,940,941,942,944,945,948,949,953,958,960,961,968,971,972,973,975,977,979,981,983,985,988,991,992,994,995,996,997,998,1001,1002,1003,1004,1005,1006,1009,1017,1020,1021,1023,1024,1026,1028,1029,1030,1032,1035,1037,1039,1041,1043,1044,1047,1049,1054,1055,1056,1057,1061,1062,1063,1064,1066,1068,1069,1070,1071,1072,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1215,1218],There:[43,1172,1215],These:[43,1172],Use:43,Used:[1116,1117,1124,1201,1202],Using:[1172,1173,1218],With:[40,41,839,840,1044,1047,1135,1137,1138,1139,1140,1141,1142,1143,1172,1214,1218],__array__:[926,932],__call__:[1189,1200,1201,1202],__del__:1072,__dict__:[1072,1215],__enter__:1072,__exit__:1072,__getitem__:1072,__getstate__:1072,__init__:[40,41,42,43,59,60,84,218,358,359,403,404,485,615,852,853,860,861,862,863,864,865,866,867,902,903,904,905,1021,1022,1072,1076,1083,1172,1175,1176,1177,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1218],__iter__:1072,__len__:1072,__next__:1072,__repr__:1072,_assign_vari:1214,_axi:1072,_base:[1116,1117,1124],_compute_node_da_ratio:1072,_compute_node_strs_da:1072,_concat_unify_arrai:1072,_counter:1072,_cur_framework:[43,1072],_da_direct:1072,_da_directions_flip:1072,_da_step_tim:1072,_da_tim:1072,_da_tune_count:1072,_data:1072,_delta_da_dim_s:1072,_delta_sf:1072,_dict:1072,_dim_siz:1072,_first_da_tune_step:1072,_first_ns_tune_step:1072,_fn:1072,_forward:[1172,1214],_get_kalman_param:1218,_get_prior:1218,_get_some_model:1218,_index:[1116,1117,1124],_input_queu:1072,_length:1072,_max_depth:1072,_max_node_dim_step_ratio:1072,_max_node_dim_step_s:1072,_max_split_factor_step_s:1072,_mean_unify_arrai:1072,_min_bas:[926,1005,1170,1171,1203,1204],_min_denomin:[926,1004],_min_node_dim_s:1072,_min_sf_tune_step:1072,_min_unit_node_tune_step:1072,_model:1218,_node_mapp:1072,_node_percent_mem:1072,_node_str:1072,_node_str_da_ratio:1072,_node_strs_da:1072,_node_strs_kei:1072,_node_strs_n:1072,_node_util:1072,_ns_step_tim:1072,_ns_time:1072,_ns_tune_count:1072,_num_nod:1072,_num_work:1072,_observed_config:1072,_output_queu:1072,_paramet:1214,_percent_mem_inc_per_sf:1072,_percent_mem_inc_per_unit_da_dim:1072,_percent_util_inc_per_unit_da_dim:1072,_ret_fn:1072,_safety_factor:1072,_save_dir:1072,_shift_da_split:1072,_shift_n:1072,_slice:1072,_step:[1205,1209],_sum_unify_arrai:1072,_timeout:1072,_tune:1072,_tune_da:1072,_tune_n:1072,_tune_step:1072,_unit_da_tune_count:1072,_unroll_step:1218,_with_node_mappig:1072,_worker:1072,_worker_class:1072,_worker_fn:1072,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,852,861,867,1072,1201,1202,1205,1209],abil:1172,abl:[40,41],about:[807,808,809],abov:[43,801,805,832,833,1128,1130],above_height:[40,41],abs:[258,405,536,667,832,836,926,1072],absolut:[40,41,832,834,926,927],abstractmethod:1072,accept:[15,43,811,825,826,1172],access:[40,41,43,1215],accord:[40,41,807,808,926,942,960,994,995,1014,1019],accordingli:[832,836,846,847,848],accur:[59,358,403,404,852,864,865,866,867,902,1021,1180,1182,1183,1185,1186,1188],aco:[751,1054],acosh:[88,222,363,489,619,811],across:[40,41,852,861,862,871,872,874,875,876,877,878,884,894,895,926,931,933,934,1072,1116,1120],act:43,activ:[1146,1147,1148,1149,1150,1151,1152,1172,1176,1177],actual:1215,adam:[1021,1023,1024,1028,1172,1205,1207,1214],adam_step:1021,adam_upd:1021,adapt:[1021,1029,1205,1208],add:[40,41,43,1072,1166,1167,1168,1169,1170,1171,1172,1203,1204,1215],added:[43,926,1004,1005,1211,1212],adding:[43,926,936],addit:[40,41,43,926,950,951,952,1170,1171,1189,1199],addition:43,address:43,adher:43,adjac:[926,929],adopt:[43,926,943],affect:[926,929],affin:[1203,1204],after:[811,829,926,977,1021,1024,1025,1026,1028,1029,1030,1037,1038,1170,1171,1205,1206,1207,1208,1209,1210,1218],after_1:[926,942,1019],after_n:[926,942,1019],again:43,against:[40,41,839,840,1044,1047,1135,1137,1138,1139,1140,1141,1142,1143],agnost:[43,1172,1214,1215],aim:1218,algebra:1044,algorithm:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196,1218],align:[40,41,43,926,936],aliv:[852,886,888,892,926,962,986,989],all:[15,16,17,18,19,40,41,43,124,248,399,525,655,801,805,832,836,837,838,846,850,851,852,861,886,892,926,927,928,933,934,943,962,968,989,1003,1044,1049,1068,1069,1070,1071,1072,1116,1117,1118,1124,1125,1128,1129,1132,1135,1137,1138,1139,1140,1141,1142,1143,1153,1163,1172,1215,1218],all_depth:[40,41],all_equ:926,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1116,all_tru:[40,41],alloc:[43,801,805,852,1072],allow:[926,978,979,980,1201,1202],allow_dupl:[926,980],alon:[852,891,901,1072,1172],along:[40,41,43,453,832,836,837,838,839,840,842,843,844,845,846,847,848,852,875,876,877,878,881,882,883,884,896,926,941,946,947,960,977,978,979,991,1002,1006,1009,1016,1044,1047,1068,1069,1070,1071,1072,1128,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143],alongsid:[1214,1215],alpha:[1145,1147],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,811,815,852,1072],also:[40,41,43,926,929,1021,1024,1068,1069,1070,1071,1116,1117,1118,1124,1125,1153,1162,1172,1189,1199,1214],altern:1214,alwai:[40,41,43,1021,1027,1032],among:[40,41],amount:[852,898,1072,1172],angl:[811,817,830,1054,1055,1058],ani:[15,16,17,18,19,40,41,43,124,248,399,525,655,811,821,846,850,851,852,854,857,861,862,864,873,874,877,878,883,926,928,929,932,949,950,951,952,953,954,967,975,980,1004,1005,1021,1025,1072,1116,1117,1120,1124,1125,1126,1127,1128,1132,1172,1178,1179,1201,1202,1214,1215,1218],anoth:[40,41,43,902,908,1172],another_backend:43,anyth:[43,1218],anywai:43,apart:43,api:[1172,1173],appear:[43,926,955],append:[40,41,832,833,1072],appli:[15,18,19,40,41,832,835,926,950,951,952,1021,1028,1029,1051,1052,1053,1068,1069,1070,1116,1120,1123,1125,1145,1146,1147,1148,1149,1150,1151,1152,1153,1162,1164,1165,1170,1171,1172,1175,1176,1177,1203,1204],applic:[1116,1120,1125,1153,1164,1165,1172,1218],appropri:[839,840],approxim:[811,812,813,816,817,822,823,824,828,830,1145,1146],arang:[135,258,405,453,536,667,926,978,979],arbitrari:[40,41,852,881,882,884,1072],arc:[1054,1058],arcco:[1054,1055],arctan:[1054,1057],area:[811,812,813,1172],arg:[15,16,17,40,41,43,59,63,852,861,874,878,884,896,926,950,951,952,995,1072,1178,1179,1201,1202],arg_nam:926,arg_stateful_idx:[1201,1202],argmax:[117,242,392,518,648,839],argmin:[135,405,536,667,926],args_clon:1072,args_dist:1072,args_to_ivi:[15,1172],args_to_n:[15,1172],args_uni:1072,argsort:[120,245,395,521,651,842],argument:[15,16,17,18,19,40,41,42,43,59,63,850,851,852,861,862,874,878,884,926,929,930,937,949,980,995,1054,1055,1072,1116,1120,1178,1179,1201,1202],aris:[1172,1218],arithmet:[1135,1138,1141,1143],arithmetic_oper:[0,1,2],around:[40,41,42],arr:453,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,258,405,453,536,667,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,839,840,842,843,844,845,846,847,848,852,870,871,872,875,876,877,878,881,882,883,884,886,888,892,896,897,902,906,912,917,918,926,927,928,929,931,933,934,935,936,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,959,960,961,962,965,967,968,969,970,971,972,973,975,976,977,978,979,981,982,983,984,986,987,988,989,991,992,993,994,995,1000,1002,1003,1006,1007,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1023,1024,1027,1028,1032,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1072,1116,1118,1125,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1189,1197,1198,1200,1205,1209,1214,1215],arrang:[926,950],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,352,353,354,355,356,357,358,360,361,800,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,839,840,842,843,844,845,846,847,848],array_api_methods_to_test:43,array_equ:[258,667,926],array_lik:[453,926,932],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,926],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1172],arraywithgener:[22,1172],arraywithgradi:[24,1172],arraywithimag:[26,1172],arraywithlinalg:[28,1172],arraywithlog:[30,1172],arraywithmath:[32,1172],arraywithmeta:[34,1172],arraywithrandom:[36,1172],arraywithreduct:[38,1172],arriv:[40,41,42],articl:1172,arxiv:1172,as_arrai:[40,41,926,965,1000],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[403,405,413,852,870,902,909,910,911,912],as_tensor:405,as_vari:[40,41],as_zero:[40,41],asarrai:[405,926],ascend:[842,843],asin:[751,1054],asinh:[88,363,489,619,811],aspect:[1037,1042],assert:[40,41,926,935,1072],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:926,associ:[43,1044,1050],assum:[811,816,828,1215,1218],astyp:[405,902],asynchron:[40,41,42],at_dev:[40,42,852,865,866],at_kei:[40,41],at_key_chain:[40,41],at_nod:1072,atan2:[751,1054],atan:[751,1054],atanh:[751,1054],attent:[43,1153,1164,1165,1189,1200],attribut:[0,6,40,41,807,808,809,926,1020],audienc:[1172,1215],author:1172,automat:43,avail:[40,41,43,852,887,889,890,899,926,951,1072],averag:[1021,1023,1024,1028,1068,1069,1070,1135,1138],average_across_step:[1068,1069,1070],avoid:[43,852,1072,1215],axes:[40,41,43,405,434,446,447,832,836,837,838,839,840,844,845,846,847,848,852,896,926,931,942,955,1008,1014,1019,1044,1047,1072,1135,1137,1138,1139,1140,1141,1142,1143],axes_length:[40,41,926,950,951,952],axi:[40,41,405,407,411,412,418,426,427,428,432,433,435,832,833,836,837,838,839,840,842,843,844,845,846,847,848,852,854,857,864,875,876,877,878,881,882,883,884,896,926,931,941,942,945,946,947,955,960,977,978,979,991,1002,1003,1006,1008,1009,1016,1019,1072,1128,1134,1135,1137,1138,1139,1140,1141,1142,1143,1145,1150,1166,1168,1169],axis0:[40,41,926,1008],axis1:[40,41,832,833,926,1008],axis2:[832,833],back:[43,1201,1202,1205,1209],backend:[15,17,19,40,41,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,852,887,890,899,902,908,916,925,926,970,974,1021,1024,1026,1028,1029,1030,1035,1072,1172,1173,1178,1179,1205,1206,1207,1208,1209,1210,1214,1215,1218],backend_nam:43,background:[1172,1215],backprop:1218,backward:[846,847,848,1214],band:[926,958],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,403,404,405,428,811,822,823,824,852,854,855,856,857,858,859,861,862,864,865,866,867,902,926,963,979,996,1005,1021,1072,1135,1136,1172,1175,1176,1177,1180,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1218],basi:43,batch:[40,41,832,835,836,852,894,895,926,958,968,1037,1041,1068,1069,1070,1071,1072,1153,1162,1170,1171,1203,1204],batch_shap:[405,420,926,968,987,1037,1038,1039,1040,1041,1042,1043,1044,1050,1128,1129,1153,1163,1164,1165,1189,1198],batch_siz:[453,454,1072,1128,1129,1153,1154,1155,1156,1157,1158,1159,1160],bayesian:1218,becaus:[43,926,929],becom:[43,926,938,1054,1058,1218],been:[926,950,951,952,1128,1129],befor:[40,41,43,852,896,1068,1069,1070,1072,1116,1125,1135,1137,1138,1139,1140,1141,1142,1143,1153,1164,1165,1218],before_1:[926,942,1019],before_n:[926,942,1019],begin:[1116,1117,1124,1215],behaviour:[43,1218],behind:[1021,1024,1026,1028,1029,1030,1172],being:[40,41,43,926,929,990,998,1072],believ:43,belong:[40,41],below:[43,801,805,832,833,1172,1215,1218],below_depth:[40,41],benefit:1172,bernoul:[1153,1161,1189,1197],best:[43,926,980,1172],beta1:[1021,1023,1024,1028,1205,1206,1207],beta2:[1021,1023,1024,1028,1205,1206,1207],beta:[1170,1171],between:[40,41,42,807,808,926,929,1044,1049,1116,1120,1128,1130,1166,1168,1169,1205,1207],bia:[1153,1162,1163,1189,1190,1191,1192,1193,1194,1195,1196,1199],bias_initi:[1189,1190,1191,1192,1193,1194,1195,1196,1199],bilinear:[1037,1038],bilinear_resampl:[169,311,442,576,737,1037],bilinearli:[1037,1038],binari:[811,814,1166,1167],binary_cross_entropi:1166,bit:[358,807,808,809,902,913,1037,1039,1043,1172],bitwis:[811,814],bitwise_and:[88,222,363,489,619,811],bitwise_oper:[0,7,8],block:[1172,1215],bool:[15,18,19,40,41,42,43,811,818,819,820,821,825,826,832,835,836,839,840,842,843,844,845,846,847,848,850,851,852,870,883,887,891,896,899,901,902,912,926,928,933,934,946,949,953,954,958,965,967,975,980,1000,1002,1016,1017,1018,1021,1024,1025,1026,1027,1028,1029,1030,1032,1044,1047,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1128,1129,1135,1137,1138,1139,1140,1141,1142,1143,1145,1146,1153,1161,1178,1179,1189,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210],both:[43,926,945],bottom:1172,boundari:[40,41,1128,1132],branch:[43,850,851],brittl:43,broadcast:[40,41,811,814,820,821,826,832,836,839,840,846,847,848,926,936,953,982,983,984,991,1044,1047,1054,1058,1061,1135,1137,1138,1139,1140,1141,1142,1143],broadcast_to:[258,667,926],build:[1072,1172,1189,1200,1201,1202],build_mod:[1189,1200,1201,1202],builder:[43,1172],built:[852,926,929,1072,1189,1200,1201,1202],busi:43,bypass:1215,cach:[852,868,926,937],cache_fn:926,calcul:[40,41,42,811,812,813,816,817,822,823,824,828,829,830,1054,1061],call:[43,852,896,926,990,998,1015,1021,1025,1072,1116,1117,1120,1124,1189,1200,1201,1202,1205,1209,1215,1218],callabl:[40,41,850,851,852,861,862,896,926,937,949,951,980,1015,1068,1069,1070,1071,1072,1116,1120,1121,1122,1124,1125,1153,1164],can:[43,852,894,895,896,926,992,1037,1039,1072,1172,1214,1215,1218],cancel_join_thread:1072,cannot:43,captur:1172,cast:[40,41,135,258,405,536,667,902,926,941,1037,1039,1043],catch_except:[926,949],categori:43,caus:43,ceil:[88,222,363,489,619,811,926,929],cell:[1153,1163,1189,1198],certain:[40,41,926,929,978,979],chain:[40,41,1068,1069,1070,1211,1212],chang:[43,852,926,992,1072,1116,1118,1125,1172,1214],channel:[926,958,1037,1039,1040,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199],check:[15,16,17,18,19,40,41,43,852,891,901,902,907,916,925,926,935,954,967,975,1007,1017,1021,1027,1072,1116,1117,1124,1172,1215],check_nest:[1116,1124],check_shap:[40,41],check_submod_ret:[1201,1202],check_typ:[40,41],choic:[1172,1215],choleski:[741,1044],choos:[811,825,826,926,1018,1044,1049,1054,1058,1172],choose_random_framework:59,chosen:[40,41,926,929,1018],chunk:[852,894,895,896,1072],chunk_siz:[852,896,1072],circl:[1054,1055,1056],clark:1172,clear:[43,852,868,1072],clear_framework_stack:59,clear_mem_on_dev:[403,659,852],click:1172,clip:[40,41,258,405,667,926,939,940,982,984,1172],clip_matrix_norm:926,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,926],clipped_delta:1072,clone:[40,41,852,871,872,873,874,1072],clone_arrai:1072,clone_it:1072,clone_nest:1072,clonedit:1072,cloneditem:1072,clonednest:1072,close:[43,1037,1042,1054,1056,1072,1218],closest:[811,815,902,907],closest_valid_dtyp:902,code:[40,41,42,43,453,1172,1173,1214,1215],codebas:[852,894,895,1072,1172,1215,1218],codomain:[811,812,813,816,817,822,824,828,829,830],colab:1172,collect:[15,40,41,403,405,437,442,446,450,451,453,850,852,902,926,1021,1037,1044,1051,1054,1072,1116,1128,1135,1145,1153,1166,1170,1175,1189,1203,1205],color:[40,41,42,1216,1217],column:[926,968],combin:[40,41,42,1037,1042,1172,1218],combined_batch_s:1072,come:1215,command:1172,comment:43,commit:1218,common:[40,41,43,1054,1058],common_key_chain:[40,41],commun:[43,1172,1215],communuti:43,compar:[40,41,842,843,926,928,933,934],comparison_oper:[0,9,10],compat:[811,814,820,821,826,832,836,846,847,848,926,953,992,1054,1061,1172,1218],compil:[258,405,667,1201,1202,1205,1206,1207,1208,1209,1210],compile_on_next_step:[1201,1202,1205,1206,1207,1208,1209,1210],complet:[40,41,43,1044,1049,1072],complex:[1215,1218],compliant:[811,825,826],compon:[926,945],composit:43,comput:[40,41,811,814,820,821,825,826,827,832,834,836,844,845,852,896,926,939,940,946,947,953,981,1021,1023,1024,1025,1026,1028,1029,1030,1032,1034,1037,1040,1044,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1062,1063,1064,1066,1116,1120,1135,1136,1137,1138,1139,1140,1141,1142,1143,1153,1154,1155,1156,1157,1158,1159,1160,1162,1164,1166,1167,1168,1169],concat:[40,41,852,881,882,883,884,896,926,958,1072],concaten:[40,41,135,258,405,536,667,926,958,1072,1172],concatten:[40,41,852,881,882,883,884,896,1072],condit:[405,850,851,926,1018,1116,1124],conditon:[1116,1124],config:[40,41,1072],config_list:1072,configur:[40,41],conflict:43,conform:43,conjunct:1215,connect:[1189,1199,1200],consid:[40,41,811,825,826,1044,1049,1214,1218],consist:[40,41,852,884,1072,1135,1136,1201,1202,1215],constant:[852,861,862,926,942,1072,1116,1120,1166,1167,1168,1169,1170,1171,1180,1181,1185,1188,1201,1202,1203,1204,1215],constant_kwarg:1072,constant_pad:[258,405,536,667,926],constitu:[40,41],construct:[926,1009,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214],constructor:[40,41,42,926,930,1211,1212],consum:[852,1072],cont_feat_dim:[1153,1164],contaienr:[40,41],contain:[15,18,19,42,801,803,805,806,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,836,844,845,846,847,848,852,871,875,896,902,906,926,927,931,938,939,940,943,953,967,982,984,993,1004,1005,1021,1023,1024,1026,1028,1029,1030,1054,1061,1068,1069,1070,1071,1072,1128,1129,1135,1137,1138,1139,1141,1143,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[405,667,926],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[405,926,985,1153,1164,1189,1200],context_dim:[1189,1200],contextmanag:[59,60],continu:[43,1072,1215],contract:[40,41,1135,1136],contribut:[1172,1173],contributor:[43,1172],control:1172,conv1d:[200,341,467,790,1153,1172,1189],conv1d_transpos:[200,341,467,790,1153],conv1dtranspos:[1172,1189],conv2d:[200,341,467,601,790,1153,1172,1189],conv2d_transpos:[200,341,467,790,1153],conv2dtranspos:[1172,1189],conv3d:[200,341,467,601,790,1153,1172,1189],conv3d_transpos:[200,341,467,790,1153],conv3dtranspos:[1172,1189],convent:[40,41,1135,1136],conver:[852,868,879,891,898,901,1072],convers:[16,17,18,19,40,41,1072,1172],convert:[15,16,17,18,19,40,41,43,852,879,880,902,908,914,915,926,1001,1012,1013,1037,1039,1043,1044,1050,1072,1116,1118,1125,1172,1179],convert_dtyp:902,convolut:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],cool:43,cooler:43,coordin:[926,983,1054,1055,1056,1058],copi:[40,41,43,453,926,944,1072,1116,1118],copy_arrai:[405,667,926],copy_nest:1116,core:[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,850,851,852,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1172],corner:43,correct:[43,1172,1215],correctli:[40,41,43,839,840,1044,1047,1054,1058,1135,1137,1138,1139,1140,1141,1142,1143],correspond:[40,41,926,941,1128,1129],cos:[88,363,489,619,811,926,958,1054,1055,1066,1215],cosh:[88,363,489,619,751,811,1054],cosin:[811,812,816,817,1054,1055,1060],cost:[1021,1023,1024,1026,1028,1029,1030,1068,1069,1070,1071],cost_fn:[1068,1071],could:1218,count:[40,41,837,838,846,847,848,1072,1135,1140,1142],cours:43,cprint:1216,cpu:[40,41,43,852,889,891,897,898,901,926,929,932,960,961,968,978,979,987,988,994,995,1020,1072,1128,1129,1130,1131,1132,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1214,1215],creat:[40,41,801,802,803,804,806,852,861,862,926,929,932,959,960,961,968,978,979,987,988,994,995,1011,1020,1021,1034,1072,1128,1129,1130,1131,1132,1172,1173,1178,1179,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1218],create_if_abs:[40,41],create_vari:1180,creation:[40,41,42,43],creation_funct:[352,353,354,355,356,357,801,802,803,804,805,806],crop:[1037,1041],crop_siz:[1037,1041],cross:[258,667,926,1166,1167,1168,1169],cross_entropi:1166,cuda:[40,41,852,861,880,897,926,929,932,960,961,968,978,979,987,988,994,995,1020,1072,1128,1129,1130,1131,1132,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212],cumprod:[135,258,405,667,926],cumsum:[667,926],cumul:[926,946,947],current:[40,41,42,43,852,861,885,886,888,892,902,908,916,925,926,948,962,970,974,986,989,1072,1116,1117,1124,1172,1218],current_framework:59,current_framework_str:[405,667,926,1072],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1153,1154,1155,1156,1157,1158,1159],d_out:[1153,1154,1155,1156,1157,1158,1159],da_can_termin:1072,da_dim_s:[852,1072],da_direct:1072,da_tune_step:[852,1072],dai:1218,daniel:1172,data:[40,41,42,43,801,802,803,804,805,806,808,809,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,828,829,830,832,833,836,837,838,842,843,846,847,848,852,854,855,856,857,858,859,864,865,866,880,902,906,907,908,912,913,914,915,916,917,918,925,926,929,932,953,959,968,975,988,992,1003,1007,1020,1021,1027,1035,1054,1061,1072,1153,1162,1172],data_format:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],data_type_funct:[358,360,361,807,808,809],dataset:[40,41],datatyp:[40,41,902,907,917,918],dcdw:[1021,1023,1024,1026,1028,1029],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1021,1028,1029,1205,1207,1208],decay_lambda:[1021,1028,1029,1205,1207,1208],decid:[40,41,1218],decompos:[1044,1045,1049],decomposit:[832,835,1044,1045,1049],decrement:[926,971],dedic:[1021,1035,1178,1179],deep:[40,41,1172],deep_copi:[40,41],deeper:[852,874,878,884,1072,1116,1125,1172],deepli:[1116,1118],def:[43,60,84,218,359,485,615,853,860,863,903,904,905,1022,1072,1076,1083,1172,1181,1184,1187,1214,1215,1218],default_dev:43,default_devic:852,default_dtyp:[43,902],default_float_dtyp:902,default_int_dtyp:902,default_key_color:[40,41,42],default_nod:1072,default_rng:453,default_v:[926,949],defaultdevic:[852,853],defaultdtyp:[902,903],defaultfloatdtyp:[902,904],defaultintdtyp:[902,905],defin:[43,926,945,987,1020,1128,1130],definit:43,degre:[1054,1066],del:1072,delai:43,delet:43,delta:[1021,1023,1072],delta_dim_s:1072,delta_percent_mem:1072,delta_sf:1072,delta_util:1072,demo:1172,denomin:[926,957,964,997,1004,1005,1170,1171,1203,1204],denot:43,dens:[1189,1199],depend:[811,812,813,816,817,822,823,824,828,830,832,835,842,843,926,1018,1172],depth:[40,41,405,429,852,874,878,884,926,966,987,1072,1116,1125,1201,1202],depth_cutoff:[40,41],depthwis:[1153,1160,1189,1196],depthwise_conv2d:[200,341,467,601,790,1153],depthwiseconv2d:[1172,1189],deriv:[801,804,1021,1023,1024,1026,1028,1029,1030,1116,1118,1125,1172,1201,1205,1209,1211],descend:[832,835,842,843],descent:[1021,1026,1205,1210],describ:[40,41,1135,1136],descript:[832,836],design:[1172,1173],desir:[40,41,852,897,902,906,926,929,932,968,969,988,1020,1037,1042,1072,1135,1137,1138,1139,1141,1143],desired_aspect_ratio:[442,445,1037,1042],desired_percent_increas:1072,detail:1218,detect:[40,41,1116,1117,1124],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,811,812,813,814,816,817,818,819,822,824,828,829,832,833,834,836,846,847,848,852,887,889,890,899,902,906,907,913,916,917,918,925,926,928,929,932,933,934,967,970,974,975,1007,1017,1021,1027,1054,1061,1068,1069,1070,1071,1072,1153,1164],dev:[40,41,42,43,128,252,352,355,403,405,406,408,418,419,420,427,428,429,430,431,436,453,454,529,659,801,804,852,855,856,858,859,861,862,865,866,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,888,891,892,893,894,895,896,897,898,901,926,929,932,960,961,968,978,979,987,988,994,995,1020,1021,1036,1128,1129,1130,1131,1132,1178,1179,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212],dev_clon:[40,41,852],dev_clone_arrai:852,dev_clone_it:852,dev_clone_nest:852,dev_dist:[40,41,852],dev_dist_arrai:852,dev_dist_it:852,dev_dist_nest:852,dev_from_str:[43,128,252,403,529,659,852],dev_mapp:852,dev_str:[40,41],dev_to_str:[128,252,403,529,659,852],dev_unifi:852,dev_unify_arrai:852,dev_unify_it:852,dev_unify_nest:852,dev_util:852,devclonedit:852,devcloneditem:852,devclonednest:852,devdistit:852,devdistitem:852,devdistnest:852,develop:[43,1172,1215,1218],deviat:[40,41,1128,1131,1135,1141,1170,1171,1203,1204],devic:[21,40,41,43,352,353,354,357,404,405,417,801,802,803,804,805,806,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,926,929,932,959,960,961,968,978,979,987,988,994,995,1020,1021,1036,1128,1129,1130,1131,1132,1172,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212],devmanag:[852,860],devmapp:[852,862],devmappermultiproc:852,diag:[832,835],diagon:[110,235,385,511,641,801,805,832,926,968],dict:[15,16,17,18,19,40,41,42,852,854,857,861,862,864,874,875,876,877,878,926,950,951,952,980,1068,1069,1070,1072,1116,1118,1119,1120,1123,1125,1178,1179],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,807,808,852,871,872,875,876,1044,1049,1072,1153,1162,1172,1215,1218],differenti:[1172,1215],dilat:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],dim:[40,41,832,835,926,987,1037,1038,1042,1072,1189,1200],dim_siz:[40,41,852,1072],dimens:[40,41,42,801,805,832,833,835,836,837,838,839,840,846,847,848,852,883,926,936,941,945,950,951,952,955,958,965,977,987,991,992,1002,1003,1006,1014,1016,1037,1041,1044,1047,1068,1069,1070,1071,1072,1128,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1150,1153,1154,1155,1156,1157,1158,1159,1160,1163,1166,1168,1169,1189,1190,1191,1192,1193,1194,1195,1196,1199,1200],dimension:[40,41,453,832,835,836,846,847,848,926,1002,1003],direct:1072,directli:[43,1116,1125,1215,1218],directori:[926,999,1010],discord:43,discret:[1166,1168],discuss:43,disk:[40,41,1037,1039],distanc:[926,929],distribut:[40,41,852,871,875,876,877,878,1072,1128,1129,1130,1131,1132,1153,1161,1189,1197,1201,1202],distribute_nest:1072,distributedarrai:[40,41],distrubt:[1166,1168],dive:[1172,1215],divid:[40,41,926,1002,1004,1054],dividend:[1054,1061],divis:[926,957,964,997,1004,1005,1021,1023,1024,1028,1054,1061,1205,1206,1207],divisor:[1021,1023,1024,1028,1054,1061,1205,1206,1207],doc:1172,docstr:43,document:43,doe:[40,41,43,926,929,1002,1214],doesn:[1044,1049,1172],doing:43,domain:[811,812,813,816,817,822,824,828,829,830,1054,1055],don:[43,1172],done:43,door:1218,dot:[1044,1046,1153,1164,1165,1189,1200],down:1214,downscal:[926,939,940],drag:[1172,1218],draw:[1128,1129,1131,1132],drawn:[1128,1129,1130,1131,1132],drop:[1172,1218],dropout:[1153,1172,1189,1200],dropout_r:[1189,1200],ds_tune_step:852,dtype:[40,41,43,135,258,352,353,354,355,357,358,360,361,405,406,408,409,417,420,436,536,667,801,802,803,804,806,807,808,809,839,840,906,907,908,909,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,929,932,959,968,987,988,1020],dtype_bit:[135,258,405,536,667,902],dtype_from_str:[43,135,258,405,536,667,902],dtype_in:[405,414,415,416,902,908,913,914,915,916,917,918,925],dtype_to_str:[135,258,405,536,667,902],duplic:[40,41,43],dure:[40,41,43,850,851,926,1015,1021,1023,1024,1028,1068,1069,1070,1071,1201,1202,1205,1206,1207,1209],dynam:[43,405,410,850,851],each:[40,41,42,43,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,835,852,861,862,871,872,873,874,875,876,877,883,895,896,926,927,928,942,953,991,1002,1006,1009,1019,1021,1024,1026,1028,1029,1030,1037,1040,1054,1056,1061,1063,1064,1072,1116,1120,1128,1129,1135,1136,1153,1154,1155,1156,1157,1158,1159,1160,1161,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1215],eager:1215,easi:1218,easili:1172,econom:1218,ecosystem:1172,edg:[926,938,942,1019],effect:[1021,1030],effective_grad:[1021,1030],effici:1218,einop:[40,41,926,950,951,952],einops_rearrang:[40,41,926],einops_reduc:[40,41,926],einops_repeat:[40,41,926],einstein:[40,41,1135,1136],einsum:[40,41,186,329,455,591,770,1135],either:[40,41,43,811,822,824,828,926,949,980,983,985,1068,1069,1070,1071,1072,1189,1200,1201,1202,1215],eleg:1072,element:[40,41,453,801,805,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,837,838,844,845,846,847,848,852,873,877,883,902,906,926,927,929,931,933,934,938,939,940,946,947,953,956,957,968,969,982,984,991,993,1002,1013,1018,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1072,1135,1136,1138,1140,1142,1145,1146,1147,1148,1149,1150,1151,1152,1153,1161,1189,1197],elementwis:[40,41],elementwise_affin:[1203,1204],elementwise_funct:[811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],elemtn:[1128,1129],elif:1072,els:[43,926,935,949,954,1072],elsewher:[926,1018],emphas:1172,empti:[40,41,77,211,352,478,608,801,846,847,848,1044,1049,1072],enabl:[40,41,42,43,1172],encapsul:[807,809],encod:[926,958,1037,1039],end:[926,929,1172,1215],engag:43,ensur:43,entir:[40,41,846,847,848,852,896,1072,1172,1189,1198],entri:[40,41,926,978,979,1002,1003],entropi:[1166,1167,1168,1169],enumer:1072,environ:1172,eps:[358,807,808],epsilon:[1021,1023,1024,1028,1166,1167,1168,1169,1170,1171,1203,1204,1205,1206,1207],equal:[40,41,88,363,489,619,811,818,832,833,842,843,926,928,933,934,942,1002,1019,1054,1066,1128,1132],equality_matrix:[926,928],equat:[40,41,1135,1136],equival:[811,825,826,832,836,926,929,1054,1066],erf:[451,751,1054],error:[40,41,43,852,926,1003,1054,1062,1072,1145,1146,1201,1202,1205,1209],etc:[40,41,43,852,897,926,929,932,960,961,968,978,979,987,988,994,995,1020,1072,1128,1129,1130,1131,1132,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1218],euclidean:[832,836],euler:800,evalu:[40,41,811,822,823,824,827,846,847,848,926,983,1116,1117,1124],even:[43,1218],evenli:[40,41,926,929,978,979,1002],everi:[43,926,928,1218],exact:[40,41],exampl:[43,850,851,926,938,1006,1044,1049,1172,1214,1215,1218],example_input:[405,410,850,851],exc_tb:1072,exc_typ:1072,exc_val:1072,exce:[926,984],except:[40,41,44,47,846,847,848,926,929,935,941,949,1015,1072],excess_s:1072,excit:[1172,1215],exclud:[59,61,926,929,1128,1132],exclus:[40,41,405,412,425,437,439,926,946,975,1021,1027,1128,1130],execut:[43,926,1015,1215],execute_with_gradi:[166,306,437,571,731,1021,1172,1214],exist:[40,41,926,949,1072,1172,1205,1209,1218],exp:[751,1054],expand:[40,41,926,955,958],expand_dim:[40,41,258,667,926,1072],expect:[926,930],explain:[43,1215],explicitli:[43,1189,1198,1200,1201,1202,1215],expon:[926,1005],exponenti:[1054,1062,1063],expos:[926,932,943],express:[811,816,828,926,983],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1021,1025],eye:[1044,1046],fabian:1172,fabio:1172,factor:[832,835,852,861,894,895,896,1021,1023,1024,1028,1029,1072,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196,1205,1206,1207,1208],fail:43,falck:1172,fall:[1201,1202,1205,1209],fallback_to_non_compil:[1201,1202,1205,1209],fals:[15,18,19,40,41,42,59,66,67,68,69,70,403,405,412,413,425,432,435,437,438,439,446,447,811,818,819,825,826,832,836,839,840,842,843,844,845,846,847,848,852,870,883,891,896,901,902,909,910,911,912,926,928,946,949,954,958,965,975,980,1000,1002,1016,1018,1021,1024,1025,1026,1027,1028,1029,1030,1044,1047,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1135,1137,1138,1139,1140,1141,1142,1143,1178,1179,1201,1202,1205,1206,1207,1208,1209,1210],fan_in:1180,fan_mod:1180,fan_out:1180,far:[1116,1117,1124,1214],faster:[850,851],favourit:[1172,1214],feasibl:1218,feat_dim:[1153,1164,1165],fed:[852,896,1072],feed:[852,896,1072],few:43,field:1218,file:[40,41,43,926,999,1010,1201,1202],filepath:[40,41],fill:[40,41,801,802,803,804,806,926,959,988,1128,1130],fill_valu:[405,417,926,959],filter:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196,1218],filter_s:[1189,1190,1191],filter_shap:[1189,1192,1193,1194,1195,1196],find:[40,41,43,1218],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,217,218,358,359,484,485,614,615,807],finish:[1172,1218],finit:[811,818],first:[40,41,43,453,811,814,820,821,826,832,833,835,850,851,852,883,926,933,941,945,953,978,979,1006,1008,1021,1025,1068,1069,1070,1071,1072,1116,1117,1124,1128,1134,1135,1140,1142,1189,1200,1201,1202,1205,1209,1215,1218],firstlayersiren:[1172,1180],firstli:[1215,1218],fist:[852,896,1072],fit:[40,41,403,405,437,442,446,450,451,453,926,991,1037,1042],fix:43,fkt:1218,flag:[40,41,43,1021,1027],flat:[40,41,926,991,994],flat_list:[40,41],flatten:[40,41,832,836,839,840,926,958,991,1135,1137,1138,1139,1141,1143],flatten_key_chain:[40,41,1201,1202],flexibl:[1172,1215],flip:[40,41,115,240,390,516,646,837],float32:[43,405,420,902,906,914,915,926,929,932,968,988,1020],float_dtyp:[902,910,920],float_img_to_uint8_img:1037,floor:[258,405,667,926,957,1072],floormod:[258,405,667,926],fluid:1218,folder:[43,1172],follow:[40,41,43,807,809,832,836,852,896,926,971,972,973,1004,1005,1021,1024,1026,1028,1029,1030,1072,1116,1120,1125,1153,1164,1165,1172,1189,1199,1205,1209],followng:[807,808],fomaml_step:1068,forget:[1021,1023,1024,1028,1205,1206,1207],fork:[926,985,1172,1173],forkserv:[926,985,1072],form:[15,16,17,18,19,40,41,801,805,832,833,926,932,1021,1024,1026,1028,1029,1030,1116,1118,1125,1153],format:[40,41,43,852,870,902,906,908,912,926,929,932,968,988,1020,1072,1135,1136,1172,1214,1215],format_fn:[40,41],format_key_chain:[40,41],forward:[1201,1202,1205,1209,1214],found:[40,41,42],fourier:[926,958],fourier_encod:926,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,512,513,514,515,517,519,522,524,526,527,530,531,532,533,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,577,578,579,581,582,583,587,588,589,590,592,593,594,595,596,597,598,602,603,604,609,610,611,612,613,615,616,617,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,642,643,644,645,647,649,652,654,656,657,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,732,733,734,735,736,738,739,740,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,759,760,761,762,764,765,766,767,768,769,771,772,773,774,775,776,777,780,781,782,783,784,785,786,788,789,791,792,793,794,795,796,797,802,803,804,805,806,808,809,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,833,834,835,836,838,840,843,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1171,1172,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1217,1218],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1072,framewrk:[926,985],free:43,freed:43,freeli:43,frequenc:[926,958],from:[40,41,42,43,801,804,811,829,832,833,837,838,844,845,846,847,848,852,861,862,896,902,908,926,949,960,961,968,992,1003,1011,1018,1021,1024,1028,1037,1041,1044,1049,1068,1069,1070,1071,1072,1116,1118,1125,1128,1129,1130,1131,1132,1135,1140,1142,1153,1161,1164,1172,1178,1179,1189,1197,1200,1205,1209,1214,1215],from_cal:[1201,1202],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,135,258,405,536,667,807,808,926,1044,1049,1172],full_matric:[832,835],fulli:[43,1172,1189,1199,1200,1214],func:[40,41,405,410,437,438,850,851,852,896,926,937,1021,1025,1072],further:[43,1218],furthermor:1218,futur:1218,gain:1180,gamma:[1170,1171],gather:[40,41,135,258,405,536,667,926,961],gather_nd:[40,41,135,258,405,536,667,926],gauss:[1054,1062],gaussian:[1145,1146],geglu:[1172,1175],gelu:[339,464,779,1145,1172,1175],gener:[23,40,41,43,403,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,453,850,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1027,1128,1130,1132,1133,1172,1205,1209],geometr:[926,958],get:[40,41,43,807,808,809,852,861,862,870,885,886,891,895,898,901,902,912,913,926,930,962,963,964,990,1072,1172,1189,1198,1218],get_all_arrays_in_memori:926,get_all_arrays_on_dev:852,get_framework:59,get_initial_st:[1189,1198],get_min_bas:926,get_min_denomin:926,get_mod_kei:[1201,1202],get_num_dim:[405,667,926],get_referrers_recurs:926,getfullargspec:1072,gist:1172,give:[43,926,992,1215],given:[40,41,43,801,802,837,838,852,885,891,894,895,896,898,901,902,906,926,929,932,938,946,947,961,978,979,988,991,994,995,1002,1009,1014,1016,1020,1021,1023,1024,1026,1028,1029,1030,1044,1046,1050,1054,1055,1072,1116,1121,1122,1128,1131,1132,1134,1135,1138,1140,1141,1142,1143,1153,1154,1155,1156,1157,1158,1159,1160,1178,1179,1218],global:[40,41,42,852,861,862,869,894,895,896,902,909,910,911,926,948,963,964,990,996,997,998,1004,1005,1021,1036,1072,1170,1171,1203,1204],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1172,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199],good:43,googl:1172,got:[43,1172],gpu0:43,gpu2:43,gpu:[852,887,890,1072],gpu_is_avail:[403,852,1072],grad:[1172,1205,1209,1214],gradient:[25,40,41,438,439,440,441,852,896,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1040,1068,1069,1070,1071,1172,1205,1206,1207,1208,1209,1210,1214,1218],gradient_descent_upd:[1021,1068,1069,1070,1071],gradient_imag:[169,311,442,576,737,1037],gradienttrack:[1021,1022],graph:[1021,1024,1026,1028,1029,1030,1201,1202],greater:[40,41,926,929,956,1003,1128,1132],green:[40,41,42,1216,1217],grid:[926,983],group:[1037,1042],guid:[43,1172,1173,1218],gym:1172,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1218,half:[926,929,1072,1128,1132],hand:1172,handl:[40,41,42,43,850,851,852,868,870,879,880,891,898,901,1021,1024,1026,1028,1029,1030,1072,1205,1206,1207,1208,1209,1210],happen:43,has:[40,41,43,832,834,839,840,926,1006,1044,1049,1054,1057],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,926],hasattr:1072,have:[40,41,43,801,802,803,804,805,806,807,808,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,828,829,830,832,833,835,836,837,838,839,840,842,843,846,847,848,926,941,945,950,951,952,953,959,1006,1021,1027,1035,1054,1061,1072,1172,1214,1215],haven:43,hdf5:[40,41,1201,1202],head:[1153,1164,1189,1200],head_dim:[1189,1200],height:[1037,1042],height_cutoff:[40,41],help:[43,59,358,403,404,852,864,865,866,867,902,1021,1172,1180,1182,1183,1185,1186,1188],here:[43,1172],hidden:[1153,1163,1189,1198],hierarch:[926,943],hierarchi:[40,41],high:[40,41,453,1128,1130,1132],higher:[832,835,1021,1024,1026,1028,1029,1030],highest:[1128,1130],highest_util:1072,highest_util_nod:1072,highli:1172,highlight:1218,hint:43,hkt:1218,hold:[902,906,926,929,932,994,995],host:1172,hot:[926,987],hour:43,how:[1172,1189,1200,1201,1202,1215,1218],howev:[43,1215],http:1218,hyperbol:[811,812,813,817,830,1054,1059,1060,1065,1067,1145,1152],hypothet:[43,1218],icon:1172,idea:1172,ident:[40,41,43,135,258,405,536,667,926],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[800,807,808,811,829],if_exist:[40,41],ignor:[40,41,1205,1209],ignore_key_error:[40,41],ignore_miss:[1205,1209],ignore_non:[40,41],iii:43,iinfo:[83,217,358,484,614,807],imag:[27,443,444,445,926,977,1038,1039,1040,1041,1042,1043,1153,1154,1155,1156,1157,1159,1160,1172,1218],image_dim:[1037,1041],imkkhk:1218,immedi:[1172,1215,1218],implement:[43,811,812,813,816,817,822,823,824,828,830,842,843,1172,1215,1218],in_featur:[1153,1162],inadvert:43,includ:[40,41,43,832,836,846,847,848,926,929,967,1004,1005,1017,1116,1117,1128,1132,1189,1199,1200,1203,1204,1214],include_deriv:[1116,1118,1125],include_empti:[40,41],include_inf:[40,41,926,967,1017],include_nest:[1116,1117],include_self:[40,41],inclus:[43,1128,1130],incom:[1153,1162],increas:[852,874,878,884,926,942,955,1019,1072,1116,1125],increasingli:1218,increment:[926,972,1072],inde:1172,indent:[40,41,42],independ:[1128,1129],index:[40,41,405,453,839,840,842,843,926,931,960,961,983,1003,1006,1116,1119,1121,1122,1123,1126],index_nest:1116,indic:[40,41,405,418,419,429,430,431,832,836,839,840,842,843,926,931,960,961,969,987,994,995,1116,1117,1119,1121,1122,1123,1124,1126,1127,1128,1129,1145,1150,1153,1154,1155,1156,1157,1158,1159,1160,1170,1171,1189,1190,1191,1192,1193,1194,1195,1196,1201,1202],indices_wher:[135,258,405,667,926],indistinguish:[811,829],inevit:1218,inf:[40,41,832,836,926,967,976,1017,1054,1057],infer:[801,804,844,845,850,851,926,965,968,992,1000,1037,1041,1044,1049,1215,1218],infin:[811,812,813,815,816,817,818,822,824,828,829,830,832,836,846,847,848,926,976],infinit:[811,829],inform:[807,808,809,1021,1032],init_c:[1153,1163],init_h:[1153,1163],init_on_first_step:[1205,1209],initi:[40,41,42,43,59,358,403,404,852,864,865,866,867,902,1021,1072,1153,1163,1172,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1205,1209],initialz:[1201,1202],inner:[1068,1069,1070,1071],inner_batch_fn:[1068,1069,1070],inner_batch_shap:[1153,1162],inner_cost_fn:[1068,1069,1070],inner_grad_step:[1068,1069,1070,1071],inner_learning_r:[1068,1069,1070,1071],inner_optimization_step:[1068,1069,1070,1071],inner_v:[1068,1069,1070],innermost:[801,805,832,833],inp:1072,inplac:[40,41,926,935,970,974,1007,1021,1024,1026,1028,1029,1030,1178,1179,1205,1206,1207,1208,1209,1210],inplace_arrays_support:[405,926],inplace_decr:[135,258,405,536,667,926],inplace_incr:[135,258,405,536,667,926],inplace_oper:[0,11,12],inplace_upd:[40,41,135,258,405,536,667,926,1178,1179],inplace_variables_support:[405,926],input:[15,18,19,40,41,42,43,801,804,805,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,835,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,861,862,869,870,871,874,875,878,884,896,897,902,906,907,909,910,911,912,913,917,918,926,927,928,931,933,934,935,936,938,939,940,941,942,944,946,947,949,950,951,952,953,954,955,956,957,958,965,967,968,969,971,972,973,975,976,977,981,982,983,984,991,993,1000,1001,1003,1006,1007,1008,1009,1011,1012,1013,1014,1016,1017,1019,1021,1025,1027,1032,1036,1037,1038,1039,1040,1041,1043,1044,1047,1049,1051,1052,1053,1054,1057,1059,1060,1061,1065,1066,1067,1068,1069,1070,1071,1072,1128,1129,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1170,1171,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204,1215],input_ax:[852,896,1072],input_channel:[1189,1190,1191,1192,1193,1194,1195,1198,1199],input_queu:1072,inputs_split:1072,insert:[839,840,926,955],insid:43,inspect:1072,inspir:1218,instal:1172,instanc:[15,16,17,18,19,40,41,43,453,852,861,1072,1178,1179,1211,1212],instead:[40,41,43,453,1135,1137,1138,1139,1140,1141,1142,1143,1218],int32:43,int64:[902,906,926,929,932,968,988,1020],int_dtyp:[902,911,921],integ:[40,41,453,807,809,811,814,815,832,836,846,847,848,902,918,926,929,956,993,1002,1128,1130,1133],integr:1172,intend:43,inter:1172,interact:1172,interchang:[40,41,926,1008],interest:1172,interfac:[926,932,1215],intermedi:[40,41],intern:[40,41,852,1021,1035,1072,1116,1117,1124,1125,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1211,1212],interpol:[926,977],intersect:[1054,1055],interv:[40,41,846,847,848,926,929,938,978,979,1054,1056,1128,1132],introduc:1218,inv:[741,1044,1218],invalid:[846,847,848],invalid_dtyp:902,invers:[811,812,813,1044,1046,1048,1054,1055,1056,1057,1059,1218],invert:[1044,1046,1048],invest:1218,investig:43,invoc:[850,851],irrespect:1172,is_al:1072,is_arrai:[135,258,405,536,667,926,1072],is_float_dtyp:902,is_int_dtyp:902,is_mean:1072,is_sum:1072,is_vari:[166,306,437,571,731,1021],isfinit:[88,222,363,489,619,811],isinf:[258,536,667,926],isinst:1072,isnan:[88,222,363,489,619,811],isnumer:1072,issu:[1172,1173],issue_numb:43,item:[15,19,40,41,852,861,862,864,871,873,875,877,883,902,909,926,943,966,1004,1005,1072,1116,1120,1121,1122,1125,1126,1127,1172,1201,1202,1214],iter:[15,16,17,18,19,40,41,42,850,851,852,855,856,858,859,861,862,865,866,873,875,876,877,878,883,896,926,928,936,941,942,968,983,988,991,992,995,1000,1002,1006,1009,1014,1019,1072,1116,1117,1118,1120,1124,1125],iterbal:[852,873,877,883,1072],its:[453,852,896,926,968,992,1008,1014,1072,1172],itself:[1116,1125],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,800,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1216,1217],ivy_backend:[40,41],ivy_bay:1218,ivy_test:43,ivyfcmodel:1214,ivyh:[40,41,42],ivymodul:[197,787],jame:1172,jax:[43,1021,1027,1172,1218],jax_concat:1172,jnp:1172,join:[40,41,926,941,1006,1072],journal:1172,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1172,1189,1198,1218],kaimingnorm:[1180,1184],kalman:1218,kalman_filt:1218,kalman_filter_step:1218,kalman_filter_upd:1218,keep:[40,41,852,897,926,1016,1072,1172,1173,1218],keep_inner_v:[1068,1069,1070],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1068,1069,1070],keepdim:[40,41,405,435,446,447,832,836,839,840,844,845,846,847,848,926,1016,1044,1047,1135,1137,1138,1139,1140,1141,1142,1143],kei:[15,16,17,40,41,42,43,852,864,926,943,1068,1069,1070,1072,1116,1119,1123,1153,1164,1165,1172,1178,1179,1189,1200,1205,1209],kept:[40,41,42,1068,1069,1070],kera:1218,kernel:[1153,1163],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,852,861,862,874,878,884,926,930,950,951,952,980,1072,1116,1120,1201,1202],keyword_color_dict:[40,41,42],kind:[807,808,809,1218],kwarg:[15,16,17,40,41,42,59,63,852,861,874,878,884,926,980,1072,1178,1179,1201,1202],kwarg_stateful_idx:[1201,1202],kwargs_clon:1072,kwargs_dist:1072,kwargs_uni:1072,label:[43,1166,1167,1168,1169],lamb:[1021,1028,1172,1205],lamb_upd:1021,lambda:[1072,1205,1208,1210,1214],lar:[1021,1028,1029,1172,1205],larger:[807,808,926,938],largest:[40,41,807,808,809,926,956],lars_upd:1021,last:[40,41,832,833,835,837,838,842,843,846,847,848,926,929,945,977,1002,1006,1044,1047,1135,1140,1142,1145,1150,1153,1163,1189,1199],later:[40,41,926,937],latest:[1189,1198],layer:[1021,1024,1026,1028,1030,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1170,1171,1172,1180,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1218],layer_norm:1170,layernorm:[1172,1203],layerwis:[1021,1029,1205,1208],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1116,1117,1124],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1145,1146,1147],leaky_relu:[779,1145],learn:[844,845,1021,1024,1026,1028,1029,1030,1044,1049,1068,1069,1070,1071,1128,1134,1172,1205,1206,1207,1208,1209,1210,1215,1218],learnabl:[1170,1171,1203,1204],least:43,leav:[15,18,19,40,41,1116,1117,1118,1124,1125],left:[40,41,43,839,840,1044,1047,1135,1137,1138,1139,1140,1141,1142,1143,1172],leftmost:[40,41],len:1072,length:[40,41,42,926,929,992,1003,1014],lenton2021ivi:1172,lenton:1172,less:[40,41,43,88,222,363,489,619,811,812,815,822,824,829,832,836,1072,1128,1132],less_equ:[88,363,489,619,811],less_util_node_str:1072,let:[1215,1218],level:1172,librari:[811,825,826,1172,1214,1218],lightweight:1172,like:[43,1021,1027,1128,1132,1172,1214,1215,1218],likewis:43,limit:[40,41,42,43,807,808,809,926,938,939,940],linalg:[29,1045,1046,1047,1048,1049,1050,1172],line:43,linear0:[1172,1214],linear1:1172,linear2:1214,linear:[926,958,977,1044,1145,1146,1147,1148,1153,1161,1172,1189,1190,1191,1192,1193,1194,1195,1196,1214],linear_algebra:[446,447,448,449,832,833,834,835,836],linear_resampl:[135,258,405,536,667,926],linearli:[926,958],link:[43,1172],linspac:[135,258,405,536,667,926,929],list:[15,18,19,40,41,352,353,354,357,801,802,803,806,837,838,846,847,848,852,861,862,871,872,874,875,876,878,881,882,896,926,929,932,934,983,1001,1002,1011,1016,1068,1069,1070,1072,1116,1117,1118,1120,1124,1125,1153,1154,1155,1156,1157,1158,1159,1160,1172,1173,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196],list_join:[40,41,42],list_stack:[40,41],liter:[832,836],littl:1215,load:[40,41],loaded_kwarg:1072,loader:1172,local:43,local_set:[926,966],locat:[43,926,976,1128,1129],log10:[88,363,489,619,811],log1p:[88,363,489,619,811],log2:[88,363,489,619,811],log:[751,811,823,832,834,926,979,1054,1072,1166,1167,1168,1169],logarithm:[811,822,823,824,832,834,1054,1064],logdet:[832,834],logic:[31,811,825,826,846,847,848,1052,1053,1172],logical_and:[320,748,1051],logical_not:[88,222,363,489,619,811],logical_or:[88,320,363,489,619,748,811,1051],logit:[1166,1169],logspac:[135,258,405,536,667,926],look:[43,1215,1218],loop:[1068,1069,1070,1071],loss:[1167,1168,1169,1172,1214],loss_fn:[1172,1214],lot:1215,low:[40,41,453,1128,1130,1132],lower:[40,41,43,801,805,926,982,1128,1132],lower_depth:[1201,1202],lowest:[15,18,19,40,41,1116,1125,1128,1130],lstm:[1153,1163,1172,1189],lstm_updat:[43,1153],machin:[807,808,809,844,845,1044,1049,1128,1134,1172,1215,1218],made:43,mai:[811,821,825,826,842,843,926,929,949,953,1172,1215,1218],main:[801,805,832,833,926,968,1172],mainli:1172,maintain:[43,842,843],make:[43,453,852,1072,1172,1215],maml:[1068,1069,1070],maml_step:1068,manag:[852,1072],manhattan:[832,836],mani:[40,41,43,926,1002,1172],manipulation_funct:[837,838],manner:[15,18,19,40,41,43,1116,1125],manual:[1116,1117,1124,1218],map:[40,41,42,852,861,926,976,1072,1116,1121,1122,1125,1189,1200,1214],map_cont:[40,41],map_nest_at_index:1116,map_nest_at_indic:1116,map_sequ:[40,41],mapper:[852,861,862,1072],mark:43,mask:[1153,1164,1165],master:43,match:[40,41,926,980],match_kwarg:926,math:[33,452,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1072,1172],mathbb:[1044,1050],mathbf:[1044,1050],mathemat:[800,832,836],matmul:[43,258,405,536,667,926,1218],matplotlib:1215,matric:[801,805,832,833,1153,1162],matrix:[40,41,801,805,832,833,926,928,939,981,1044,1045,1046,1047,1048,1049,1050,1153,1162,1189,1199],matrix_norm:[40,41,173,315,446,580,741,1044],matter:1172,max:[40,41,358,807,808,809,926,939,940,951,982,994,995,1072,1135,1137,1205,1207],max_batch_s:[40,41],max_chunk_s:[852,896,1072],max_depth:[40,41,852,856,859,866,874,878,884,926,966,1072,1116,1125],max_dev_dim_step_ratio:852,max_freq:[926,958],max_length:[40,41],max_node_dim_step_ratio:1072,max_norm:[40,41,926,939,940],max_split_factor_step_s:[852,1072],max_trust_ratio:[1021,1028,1205,1207],maxim:[1172,1215,1218],maximis:1172,maximum:[40,41,42,667,839,840,852,874,878,884,896,926,938,939,940,958,1021,1028,1072,1116,1125,1135,1137],mayb:[15,18,19],mdi:1072,mean:[40,41,453,852,881,882,883,884,896,926,951,1068,1069,1070,1071,1072,1116,1120,1128,1131,1135,1138,1141,1143,1180,1214,1218],measur:[1153,1164,1189,1200],mech:1172,mechan:[1172,1218],medic:1218,member:43,memori:[852,868,891,896,898,901,1072,1153,1163,1172],mention:43,merg:43,merge_with_upstream:43,meshgrid:[258,405,667,926],messag:[1216,1217],meta:[35,1069,1070,1071,1172],method:[40,41,42,43,453,926,932,943,983,994,995,1021,1028,1029,1072,1116,1117,1124,1125,1172,1189,1200,1201,1202,1215],might:[926,949,1218],min:[40,41,122,358,397,523,653,807,808,809,832,836,844,926,951,984,994,995,1004,1044,1049,1072,1135,1139],min_bas:[926,1005],min_denomin:[926,1004],min_dev_dim_s:852,min_node_dim_s:1072,min_sf_tune_step:[852,1072],min_unit_dev_tune_step:852,min_unit_node_tune_step:1072,mind:1172,mini:[1170,1171,1203,1204],minimum:[40,41,667,844,845,852,902,906,926,929,931,932,938,963,964,996,997,1004,1005,1072,1135,1139],miss:[1205,1209],ml_framework:[926,929,1044,1049],mod:[926,957],mod_depth:[1201,1202],mod_height:[1201,1202],mod_with_top_mod_key_chain:[1201,1202],mode:[40,41,446,448,832,835,850,851,852,881,882,883,884,896,1044,1049,1072,1215],model:[1172,1214],modul:[40,41,42,59,926,985,1072,1172,1173,1175,1176,1177,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204,1211,1212,1218],moment:[1021,1023,1024,1028,1205,1206,1207],more:[43,837,838,926,1006,1072,1172,1215,1218],more_util_node_str:1072,most:[40,41,1044,1049,1172,1218],move:[40,41,43,852,897,1072],much:[43,1172,1218],multi:[453,926,985,1153,1164,1189,1200],multi_head_attent:1153,multi_index_nest:1116,multi_map:[40,41],multi_nod:1072,multidev:[852,863,864,865,884],multidevcontain:[40,41],multidevic:[852,861],multidevit:[852,855,858,861,862,866],multidevitem:[852,854,857],multidevnest:[852,856,859],multiheadattent:[1172,1189],multinod:[1072,1076],multinodecontain:1072,multinodeit:1072,multinodeitem:1072,multinodenest:1072,multinomi:[179,324,453,586,763,1128],multipl:[40,41,846,847,848,926,980,1002,1044,1046,1135,1137,1138,1139,1140,1141,1143,1170,1171,1189,1199,1215],multipli:[40,41,926,946,1135,1140],multiprocess:[40,41,42,405,667,852,861,926,1072],must:[40,41,42,43,801,802,803,804,805,806,811,812,813,814,815,816,817,818,820,821,822,824,825,826,828,829,830,832,833,836,837,838,842,843,844,845,846,847,848,852,881,882,883,884,896,926,929,941,943,945,953,982,984,995,1006,1054,1058,1061,1072,1128,1133,1205,1209],mutabl:[1116,1118,1125],mutlidevic:[852,861],mutlinod:1072,mw_tm1:[1021,1024,1028],mx_concat:1172,mxn:[801,805,832,833],mxnet:[1172,1218],my_func:43,mymodel:1172,name:[43,850,851,1214],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1215],nan:[40,41,43,800,811,812,813,815,816,817,818,819,822,824,828,829,846,847,848,926,967,1017],nativ:[15,17,18,19,40,41,43,852,868,870,879,880,891,898,901,902,907,914,915,1072,1172,1173,1178,1179],native_modul:[1178,1179],native_module_class:[1178,1179],nativearrai:[15,18,19,43,801,804,805,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,834,835,836,837,838,839,840,842,843,844,845,846,847,848,852,870,896,897,902,906,912,917,918,926,927,928,929,931,932,933,934,936,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,960,961,965,967,968,969,976,977,978,979,981,982,983,984,987,988,991,992,993,994,995,1000,1002,1003,1006,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1072,1116,1118,1125],natur:[811,823,832,834,1054,1064,1218],ncdhw:[1153,1158,1159,1189,1194,1195],nchw:[1153,1156,1157,1160,1189,1192,1193,1196],ncw:[1153,1154,1155,1189,1190,1191],ndarrai:[352,353,354,355,356,357,358,360,361,453,926,1012],ndhwc:[1153,1158,1159,1189,1194,1195],nearest:[926,993],need:[43,926,939,940,1153,1155,1157,1159,1172,1189,1191,1193,1195,1218],neg:[40,41,88,222,363,489,619,811,818,832,836,837,838,846,847,848,1135,1140,1142,1145,1147],negative_slop:1180,neither:1072,nest:[15,16,17,18,19,40,41,42,852,874,878,884,926,932,1011,1068,1069,1070,1072,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1201,1202,1205,1206,1207,1208,1209,1210],nested_indices_wher:1116,nested_map:[1072,1116],network:[1153,1162,1172,1173,1175,1189,1201,1202,1218],neural:[1153,1172,1175,1189,1214],never:43,new_node_percent_mem:1072,new_node_util:1072,new_node_utils_kei:1072,new_std:[1170,1171,1203,1204],newli:[43,850,851,926,936,937],newlin:[40,41,42],newshap:[926,936,992],next:[807,808,1072,1201,1202,1205,1206,1207,1208,1209,1210],nhwc:[1153,1156,1157,1160,1189,1192,1193,1196],node:[40,41,1116,1117,1124],node_clon:1072,node_dist:1072,node_dist_arrai:1072,node_dist_it:1072,node_in:1072,node_mapp:1072,node_str:1072,node_to_str:1072,node_util:1072,nodedistit:1072,nodedistitem:1072,nodedistnest:1072,nodemanag:[1072,1083],nodemapp:1072,nodemappermultiproc:1072,noinspect:[853,903,904,905,1022,1072],non:[40,41,811,825,826,832,836,846,847,848,850,851,902,916,1201,1202,1205,1209,1215],none:[40,41,42,43,59,61,64,352,353,354,355,357,403,405,406,408,410,417,418,419,420,427,428,429,430,431,432,433,434,436,446,447,453,454,801,802,803,804,806,807,808,809,832,836,837,838,839,840,844,845,846,847,848,850,851,852,861,862,868,869,894,895,896,897,902,909,910,911,926,929,932,948,949,954,959,960,961,966,968,970,971,972,973,974,978,979,985,987,988,991,994,995,996,997,1002,1003,1004,1005,1014,1015,1020,1021,1024,1026,1028,1029,1030,1036,1037,1041,1044,1047,1049,1068,1069,1070,1071,1072,1116,1117,1120,1124,1125,1128,1129,1130,1131,1132,1135,1137,1138,1139,1140,1141,1142,1143,1153,1155,1157,1159,1162,1163,1164,1165,1170,1171,1178,1179,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212],norm:[40,41,832,836,926,939,940,1044,1047,1171,1172,1204,1205,1207],normal:[1128,1131,1170,1171,1203,1204],normalized_idx:[1170,1171],normalized_shap:[1203,1204],notat:[40,41,1135,1136],note:[43,1044,1049],noth:[40,41,1215],notimplementederror:1072,now:[40,41,43,852,897,926,927,1072,1172,1189,1200,1201,1202,1214,1215,1218],np_concat:1172,np_finfo:358,ns_tune_step:1072,num:[405,427,428,926,978,979],num_arrai:[40,41],num_arrays_in_memori:926,num_arrays_on_dev:852,num_band:[926,958],num_channel:[1189,1196],num_chunk:1072,num_chunks_floor:1072,num_class:[1128,1129],num_cpu_cor:852,num_gpu:[128,403,852,1072],num_head:[1153,1164,1189,1200],num_kei:[1153,1164,1165],num_lay:[1189,1198],num_or_size_split:[40,41,405,432,926,1002],num_output:1072,num_queri:[1153,1164,1165],num_sampl:[405,426,453,454,926,977,1037,1038,1128,1129],num_task:[1068,1069,1070,1071],number:[40,41,42,800,807,808,809,811,815,832,834,835,846,847,848,850,851,852,888,889,890,902,913,917,918,926,929,938,942,955,958,965,968,977,978,979,982,986,991,1002,1009,1013,1017,1019,1068,1069,1070,1071,1072,1128,1129,1133,1135,1137,1138,1139,1141,1143,1153,1164,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1215,1218],numer:[43,811,815,818,819,820,825,826,827,926,963,964,996,997,1004,1005,1054,1061,1180],numhead:[1153,1164],numpi:[40,41,43,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,832,835,926,1012,1044,1049,1135,1136,1172,1214,1215,1218],nwc:[1153,1154,1155,1189,1190,1191],obj:[40,41],object:[40,41,42,59,358,807,808,852,902,906,926,929,932,1021,1116,1119,1121,1122,1123,1126,1127,1128,1134,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202],object_in:[405,408,926,932],observ:1072,obvious:43,occupi:[807,808,809,926,994,995],off:[832,833,926,929],offer:1172,offset:[832,833,1170,1171],often:1215,old:[40,41],on_init:[1189,1200,1201,1202],onc:[43,852,896,1072,1128,1129,1172],one:[40,41,43,832,836,837,838,839,840,852,881,882,883,884,896,902,908,926,968,980,987,994,995,1003,1006,1044,1047,1072,1135,1136,1137,1138,1139,1140,1141,1142,1143,1172,1215,1218],one_hot:[135,405,536,667,926],onearrai:[926,955],ones:[40,41,77,211,352,478,608,801,804,926,968,987,1172],ones_lik:[77,211,352,478,608,801],ongo:43,onli:[40,41,43,453,811,825,826,837,838,852,1044,1049,1072,1116,1117,1118,1124,1205,1206,1207,1208,1209,1210,1214,1215],onlin:[43,1172],onto:[852,881,882,897,1072,1116,1120,1125],oom:[852,1072],open:[926,929,1128,1132,1172,1218],opencv:1215,oper:[40,41,43,926,935,950,951,952,978,979,1007,1021,1024,1026,1028,1029,1030,1051,1052,1053,1153,1154,1155,1156,1157,1158,1159,1160,1162],operand:[40,41,811,812,813,815,816,817,822,824,828,829,1135,1136],oppos:[926,958],optim:[852,1021,1024,1026,1028,1029,1030,1068,1069,1070,1071,1072,1172,1206,1207,1208,1210,1214,1218],optimizer_upd:1021,option:[15,18,19,40,41,42,43,352,353,354,355,357,801,802,803,804,806,832,836,837,838,839,840,844,845,846,847,848,850,851,852,861,862,870,874,875,876,877,878,881,882,883,884,891,894,895,896,897,901,902,907,912,916,925,926,928,929,931,932,939,940,941,946,948,949,958,959,960,961,965,967,968,975,977,978,979,980,983,985,987,988,991,994,995,998,1000,1002,1003,1004,1005,1006,1014,1016,1017,1020,1021,1024,1026,1027,1028,1029,1030,1032,1037,1041,1044,1047,1049,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1128,1129,1135,1137,1138,1139,1140,1141,1142,1143,1145,1146,1150,1153,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1215],ord:[832,835,836],order:[40,41,42,43,832,836,837,838,842,843,1021,1024,1026,1028,1029,1030,1044,1047,1068,1069,1070,1211,1212],ordered_node_util_kei:1072,org:1218,organ:43,origin:[40,41,42,926,992,1020,1044,1047],other:[40,41,43,850,851,926,928,929,968,1021,1025,1128,1132,1172,1214,1215,1218],otherwis:[15,16,17,18,19,40,41,811,818,819,832,836,839,840,846,847,848,852,869,902,909,910,911,926,935,1014,1015,1018,1021,1027,1032,1036,1068,1069,1070,1072,1135,1137,1138,1139,1141,1143],our:[43,1172,1218],out:[43,453,801,803,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,828,829,832,833,834,836,837,838,839,840,842,843,846,847,848,926,929,1054,1057,1153,1161,1163,1172,1189,1197],out_feat_dim:[1153,1164],out_featur:[1153,1161,1162],out_i:[811,818,819],outdat:1218,outer:[1068,1069,1070,1071],outer_batch_fn:[1068,1069,1070],outer_batch_shap:[1153,1162],outer_cost_fn:[1068,1069,1070],outer_v:[1068,1069,1070],outlin:1215,output:[40,41,43,801,802,803,804,806,837,838,852,861,862,896,926,929,937,959,968,991,1009,1021,1025,1054,1058,1072,1128,1130,1131,1132,1153,1155,1157,1159,1161,1163,1164,1165,1172,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200],output_ax:[852,896,1072],output_axi:1072,output_channel:[1189,1190,1191,1192,1193,1194,1195,1198,1199],output_queu:1072,output_shap:[1153,1155,1157,1159,1189,1191,1193,1195],outsid:[926,938],over:[40,41,832,836,846,847,848,1044,1047,1128,1132,1135,1137,1138,1139,1141,1143,1170,1171,1203,1204],overal:1215,overflow:[926,929],overhead:1215,overrid:[926,987,1020],overriden:[1205,1209],overwrit:[40,41,852,896,1072],overwrite_at_key_chain:[40,41],own:[1172,1215,1218],packag:[43,1215],pad:[926,942,958,1019,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],pad_width:[405,926,942,1019],page:1172,pair:[1153,1165],parallel:[852,861,862,1072],parallelis:[852,861,862,1072],param:[40,41,42,405,418,419,801,802,804,839,840,844,845,852,896,926,927,960,961,987,988,1072,1201,1202,1214],paramet:[15,16,17,18,19,40,41,42,43,801,802,804,811,821,827,830,832,833,835,844,845,850,851,852,861,862,868,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,891,894,895,896,897,898,901,902,906,907,908,912,913,914,915,916,917,918,925,926,928,929,931,932,933,934,935,936,937,938,939,940,941,942,944,945,946,947,949,950,951,952,953,954,955,956,957,958,959,960,961,965,967,968,969,971,972,973,975,976,977,978,979,980,981,982,983,984,985,988,991,992,993,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1032,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214],parameter:[1128,1131,1132],pardo:1172,pars:[926,943],part:[801,805,1021,1024,1026,1028,1029,1030,1054,1057,1172,1201,1202,1215],partial:[40,41,43,1201,1202],particl:1218,particular:[43,1218],pass:[40,41,42,43,852,861,896,902,907,926,937,1021,1035,1068,1069,1070,1072,1178,1179,1201,1202,1205,1209,1211,1212],pattern:[40,41,926,950,951,952],peopl:43,per:[852,1072,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],percent_used_mem_on_dev:852,percent_used_mem_on_nod:1072,percentag:[852,891,1072],perf_count:1072,perform:[40,41,43,846,847,848,852,926,931,946,950,951,952,971,972,973,977,978,979,1021,1024,1026,1028,1029,1030,1037,1038,1068,1069,1070,1071,1072,1116,1121,1122,1135,1137,1138,1139,1140,1141,1142,1143,1145,1150,1153,1161,1163],period:43,permissable_step:1072,permit:43,permut:[453,926,1008,1014],perpendicular:[926,945],person:[43,1172],physci:1218,pickl:[40,41,1072],pickle_filepath:[40,41],pinv:[315,741,1044],pip:1172,pipelin:1214,pkk:1218,pkkm1:1218,pkm1km1:1218,place:[40,41,43,801,802,803,804,806,852,897,926,955,959,971,972,973,1072,1205,1206,1207,1208,1209,1210],placehold:[43,1116,1125],pleas:[43,453,1044,1049],point:[43,800,801,802,803,806,807,808,811,812,813,815,816,817,822,824,828,829,830,832,836,902,917,926,929,1054,1061],popul:[40,41,1128,1129],popular:1218,population_s:[453,454,1128,1129],portabl:[1172,1173],posit:[15,16,17,807,808,811,818,846,847,848,852,874,878,884,926,927,929,955,958,1072,1128,1133,1178,1179],possibi:[40,41],possibl:[43,926,980,1011,1037,1042,1218],post:[1170,1171],post_shap:[40,41],power:[926,963,996,1005,1180],practic:1172,pre:[852,1072,1172],pre_shap:[40,41],precis:[807,808,811,829],pred:[1166,1167,1168,1169],predict:[1166,1167,1168,1169,1218],preprint:1172,present:[40,41],preserv:[40,41,42,837,838,1021,1032],preserve_typ:[40,41,437,440,1021,1032],press:1172,prevent:[43,1021,1023,1024,1028,1072,1205,1206,1207],prevet:43,previou:[1021,1024,1028],previous:[926,937],prime:1172,print:[40,41,42,852,892,926,989,1172,1214],print_all_arrays_in_memori:926,print_all_arrays_on_dev:852,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1205,1209],prob:[453,454,1128,1129,1153,1161,1189,1197],probabl:[1128,1129,1153,1161,1189,1197],problem:[43,1218],process:[43,852,861,862,891,901,926,985,1072],process_specif:[852,891,901,1072],prod:[40,41,926,951],produc:[852,861,862,1072],product:[40,41,926,945,946,981,1135,1136,1153,1164,1165,1189,1200],profil:[128,252,403,529,659,852,1072],progress:43,project:[1172,1214,1215,1218],promot:[811,812,813,814,816,817,822,824,828,829,832,836,1054,1061],prompt:1172,properti:[40,41,358,852,864,1072,1201,1202,1205,1206,1207,1208,1210],provid:[40,41,43,837,838,839,840,846,847,848,850,851,852,869,902,909,910,911,916,925,926,949,987,995,1020,1021,1024,1026,1028,1029,1030,1036,1072,1172,1189,1198,1205,1206,1207,1208,1209,1210,1215],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1044,1048],pull:[1172,1173],pure:[40,41,1172,1218],purpos:[43,1218],put:1072,pybroadexcept:1072,pyprotectedmemb:1072,pyshadowingnam:[853,903,904,905,1022,1072],python:[40,41,852,891,901,926,929,1072,1172],pytorch:[1021,1024,1026,1028,1029,1030,1044,1049,1172,1205,1206,1207,1208,1209,1210,1214,1215,1218],pyunresolvedrefer:1072,quadrant:[1054,1058],qualiti:43,queri:[40,41,852,885,895,1072,1153,1164,1165,1189,1200],query_dim:[1189,1200],query_kei:[40,41],queue:[40,41,42,852,861,862,926,990,998,1072],queue_class:[852,861,862,1072],queue_load_s:[40,41,42],queue_timeout:[40,41,42,926,1072],quick:[453,1172],quickli:[43,1214],radian:[811,816,828,1054,1055,1056,1058,1066],rai:[1054,1055],rais:[40,41,846,847,848,926,935,963,996,1003,1005,1015,1072,1201,1202,1205,1209],ram:[852,891,898,901,1072],randint:[179,324,453,586,763,1128],random:[37,40,41,454,1129,1130,1131,1132,1133,1134,1172],random_crop:1037,random_norm:[179,324,453,586,763,1128],random_uniform:[179,324,453,586,763,1128],randomli:[453,1037,1041,1153,1161,1189,1197],rang:[453,926,929,978,979,1054,1058,1072,1172,1214,1218],rank:[832,836,846,847,848,926,942,1016,1019],rate:[1021,1024,1026,1028,1029,1030,1068,1069,1070,1071,1189,1200,1205,1206,1207,1208,1209,1210],rather:[40,41,43,852,896,926,929,975,1021,1027,1072],ratio:[852,1021,1028,1037,1042,1072,1205,1207],raw:[40,41,1044,1049],raw_delta:1072,reach:[43,852,874,878,884,1072,1116,1125],read:[40,41],readi:[1072,1214],real:[1054,1055,1057],realiti:1215,rearrang:[40,41,926,950,952],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1068,1070],receiv:[43,852,861,862,926,930,980,1072,1189,1199],receivess:[852,1072],receivng:[1068,1071],recev:[1068,1069,1070],recognit:1218,recommend:[811,825,826,1172],rectifi:[1145,1147,1148],recurr:[1153,1163],recurrent_bia:[1153,1163],recurrent_kernel:[1153,1163],recurs:[40,41,1116,1117,1118,1124,1125],reduc:[40,41,839,840,846,847,848,852,896,926,951,1044,1049,1072,1135,1137,1138,1139,1140,1141,1142,1143],reduce_max:[40,41,186,329,455,591,770,1135],reduce_mean:[40,41,186,329,455,591,770,1135,1172,1214],reduce_min:[40,41,186,329,455,591,770,1135],reduce_prod:[40,41,186,329,455,591,770,1135],reduce_std:[40,41,329,1135],reduce_sum:[40,41,186,329,455,591,770,1072,1135],reduce_var:[40,41,186,329,455,591,770,1135],reduct:[39,40,41,405,430,431,846,847,848,926,951,994,995,1136,1137,1138,1139,1140,1141,1142,1143,1172],refactor:43,refer:[43,811,823,846,847,848,1021,1023,1024,1044,1050,1189,1199,1218],reflect:43,reflected_oper:[0,13,14],regard:[852,1072],regardless:[40,41,850,851],register_paramet:1214,reimplement:1218,rel:[832,833,837,838,842,843,1021,1024,1026,1028,1029,1030],rel_slice_obj:1072,relat:43,relev:[1205,1206,1207,1208,1209,1210],relu:[779,1145,1146,1147,1172,1214],remain:[43,926,992,1116,1120],remaind:[40,41,926,957,1002],remov:[40,41,43,832,833,839,840,926,1003,1068,1069,1070],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,837,838],rep:[926,1009],repeat:[40,41,43,258,667,926,952,1009,1072,1215],repeated_config_check:[852,1072],repeatedli:[1116,1123],repetit:[40,41,926,991,1009],replac:[40,41,43,453,454,926,938,994,995,1128,1129],repo:[43,1172],repositori:43,repres:[43,811,812,813,817,830,832,834,902,908,913,1153,1162],represent:[40,41,42,43,800,807,808,809,811,814,852,879,880,902,908,914,915,926,1001,1011,1072],reptil:[1068,1071],reptile_step:1068,request:[1172,1173],requir:[43,811,829,850,851,902,906,926,929,932,1178,1179],resampl:[926,977],reserv:43,reshap:[40,41,453,667,926],reshape_lik:[40,41],respect:[811,814,820,821,826,926,953,1021,1023,1024,1025,1026,1028,1029,1030,1044,1049,1054,1061,1068,1069,1070,1071],respond:43,respons:[43,1072],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,832,833,836,839,840,846,847,848,852,861,926,929,953,994,995,1006,1044,1047,1051,1052,1053,1054,1061,1072,1135,1137,1138,1139,1140,1141,1142,1143,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1172],ret:1072,ret_dict:1072,ret_fn:[852,861,862,1072],retain:[1021,1025],retain_grad:[437,438,1021,1025],retreiv:1072,retrn:[926,1001],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1068,1069,1070,1071],return_sequ:[1189,1198],return_st:[1189,1198],rev:[926,949],revers:[40,41,837,838,926,949,1014],review:43,right:[40,41,43],rk_e:1218,robot:1172,ronald:1172,root:[43,811,829],round:[258,405,667,811,815,829,926,929,1072],row:[926,968,1128,1129],rule:[926,929,1054,1061],run:[43,852,861,1021,1023,1024,1028,1068,1069,1070,1071,1072,1172,1173,1189,1200,1201,1202],safe:[852,861,1072],safety_factor:[852,1072],same:[15,16,17,40,41,43,801,804,805,811,815,832,833,835,837,838,839,840,842,843,852,861,862,896,897,902,906,926,927,941,956,957,960,961,987,993,994,995,1006,1020,1021,1027,1032,1054,1057,1068,1069,1070,1072,1135,1136,1153,1154,1155,1156,1157,1158,1159,1160,1172,1189,1190,1191,1192,1193,1194,1195,1196,1214,1218],same_arrai:[40,41],sampl:[926,977,1037,1038,1128,1129,1131,1132,1153,1161,1172,1189,1197],satisfi:[926,932,1044,1046,1050],save:[40,41,926,999,1010,1037,1039,1201,1202],save_dir:[403,404,852,867,1072],save_weight:[1201,1202],scalar:[832,836,926,938,987,1013,1017],scale:[852,894,895,1021,1029,1072,1153,1161,1164,1165,1170,1171,1189,1197,1200,1205,1208],scaled_dot_product_attent:1153,scatter:[926,987,994,995],scatter_flat:[135,258,405,536,667,926],scatter_nd:[135,258,405,536,667,926],scene:[1021,1024,1026,1028,1029,1030],schemat:1172,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[839,840],second:[40,41,811,814,820,821,826,832,833,852,883,926,933,945,953,990,998,1008,1021,1023,1024,1028,1068,1070,1072,1205,1206,1207],secondli:1218,sector:[811,812,813],see:[59,358,403,404,453,811,814,820,826,832,836,846,847,848,852,864,865,866,867,902,926,929,978,979,1021,1054,1061,1172,1180,1182,1183,1185,1186,1188],seed:[40,41,179,453,763,1128],seed_valu:[40,41,453,1128,1133],seem:1172,seen_set:[926,966],select:[926,932,1003,1215,1218],self:[40,41,59,358,403,404,852,864,865,866,867,902,1021,1072,1172,1180,1182,1183,1185,1186,1188,1205,1209,1214,1218],sent:1072,seper:[43,926,958],seq:[40,41,42,1135,1136,1201,1202],sequenc:[15,16,17,40,41,42,43,453,850,851,852,861,862,871,872,873,874,875,876,877,878,881,882,896,902,906,926,929,932,934,936,941,942,968,980,983,988,991,992,995,1002,1006,1009,1014,1019,1021,1025,1037,1041,1042,1044,1047,1072,1116,1127,1128,1130,1132,1135,1137,1138,1139,1140,1141,1142,1143,1153,1154,1155,1156,1157,1158,1159,1160,1170,1171,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1198,1201,1202,1203,1204,1205,1209,1211,1212],sequenti:1172,seri:43,set:[15,18,19,40,41,839,840,842,843,852,881,882,894,895,896,926,928,948,968,996,997,998,999,1021,1024,1026,1027,1028,1029,1030,1044,1047,1072,1116,1117,1124,1126,1127,1128,1129,1133,1135,1137,1138,1139,1140,1141,1142,1143,1172,1189,1198,1205,1206,1207,1208,1209,1210,1215,1218],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:852,set_default_dtyp:902,set_default_float_dtyp:902,set_default_int_dtyp:902,set_default_nod:1072,set_exception_debug_mod:44,set_framework:[40,41,43,59,1072,1172,1214,1215,1218],set_ivy_backend:[40,41],set_min_bas:926,set_min_denomin:926,set_nest_at_index:1116,set_nest_at_indic:1116,set_queue_timeout:926,set_split_factor:[852,1072],set_stat:[1205,1206,1207,1208,1209,1210],set_tmp_dir:926,set_with_grad:1021,setter:1072,sever:1218,sgd:[1172,1205],shape0:1072,shape:[40,41,43,352,353,354,357,405,417,431,453,667,801,802,803,804,805,806,832,833,837,838,839,840,842,843,852,864,902,906,926,927,936,941,942,955,956,957,959,961,965,968,987,988,991,992,993,994,995,1001,1003,1006,1019,1020,1037,1041,1044,1046,1049,1054,1057,1058,1072,1128,1130,1131,1132,1135,1136,1153,1155,1157,1159,1189,1191,1192,1193,1194,1195,1196,1203,1204],shape_slic:[40,41],shape_to_tupl:926,share:[40,41,1172,1215],shift:1072,should:[40,41,42,43,453,801,805,811,812,813,814,815,816,817,818,819,820,822,824,825,826,828,829,830,832,833,836,839,840,850,851,852,926,936,937,943,987,992,1021,1024,1026,1028,1029,1030,1054,1061,1072,1135,1136,1172],show:[40,41,1172,1218],show_mod_in_top_mod:[1201,1202],show_structur:[1201,1202],show_sub_contain:[40,41],show_v:[1201,1202],show_v_in_top_v:[1201,1202],shown:[40,41],shp:1072,shuffl:[40,41,179,453,763,1128],shuffle_h5_fil:[40,41],side:43,sigmoid:[779,1145,1172,1214],sign:[832,834],signatur:[43,59,358,403,404,405,437,442,446,450,451,453,852,864,865,866,867,902,1021,1180,1182,1183,1185,1186,1188],signific:1218,similar:[43,1153,1164,1189,1200],similarli:[1044,1049],simpl:[43,926,954,1172,1215,1218],simpler:43,simplest:1215,simpli:[40,41,43,1172,1215,1218],simultan:1172,sin:[88,222,363,489,619,811,926,958,1054,1066,1215],sinco:1215,sine:[811,813,828,1054,1056,1065],singl:[40,41,850,851,852,861,862,881,882,883,884,926,1003,1013,1017,1037,1042,1072,1128,1131,1132,1135,1137,1138,1139,1140,1141,1142,1143,1172,1215,1218],singleton:[832,836,846,847,848],singular:[832,835],sinh:[751,1054],siren:[1172,1180],situat:43,size:[40,41,42,405,430,832,833,835,839,840,846,847,848,852,875,876,877,878,894,895,896,926,929,936,978,979,994,1002,1037,1041,1044,1047,1072,1128,1129,1131,1132,1135,1137,1138,1139,1140,1141,1142,1143,1189,1190,1191],size_ordered_arrai:[40,41],skew:[1044,1050],skinv:1218,skip:[40,41],slice:[40,41,926,960,961,1072,1116,1123],slice_kei:[40,41],slice_obj:[40,41,1072],slice_via_kei:[40,41],slide:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],slodget:832,slogdet:[110,235,385,511,641],slope:[1145,1147],small:[1166,1167,1168,1169,1170,1171,1172,1203,1204,1215],smaller:[926,938],smallest:[40,41,807,808,809,811,815,926,931],smallest_norm:[358,807,808],softmax:[195,464,779,1145,1153,1164,1165],softplu:[779,1145],solut:43,solv:1218,some:[40,41,43,926,929,1021,1023,1024,1026,1028,1029,1030,1035,1153,1161,1172,1189,1197,1215,1218],some_backend:43,some_namespac:43,someth:[43,1218],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,832,835,843,1072],sort_by_kei:[40,41],sorting_funct:[842,843],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1216,1217,1218],space:[926,929,958,978,979],spars:[1166,1169],sparse_cross_entropi:1166,spawn:[926,985],special:[43,811,812,813,815,816,817,822,824,828,829],specif:[40,41,43,811,825,826,852,894,926,943,950,951,952,985,1068,1069,1070,1071,1072,1128,1134,1172,1201,1202,1214,1215],specifc:[1128,1129],specifi:[40,41,801,802,803,805,806,832,833,836,837,838,839,840,842,843,846,847,848,852,871,872,873,874,875,876,877,878,881,882,886,888,892,895,896,897,902,906,908,926,929,931,932,938,941,942,959,960,961,967,978,979,1006,1016,1019,1044,1047,1072,1116,1121,1122,1126,1127,1135,1136,1137,1138,1139,1140,1141,1142,1143],sphinx:43,split:[40,41,135,258,405,536,667,852,861,875,876,877,878,894,895,896,926,980,1072],split_arg:1072,split_factor:[852,861,1072],split_func_cal:[852,1072],split_siz:1072,spread:[852,884,1072],sqrt:[88,222,363,489,619,811,832,836],squar:[811,829,832,834,926,968,1044,1046],squeez:[135,258,405,536,667,926],stabil:[842,843,926,1004,1005],stabl:[842,843,926,963,964,996,997,1004,1005],stable_divid:926,stable_pow:926,stack:[40,41,258,667,801,805,832,833,926,1037,1042,1116,1117,1124,1189,1198],stack_imag:[169,311,442,576,737,1037],stacked_dim_s:1072,stage:43,standard:[40,41,807,808,1128,1131,1135,1141,1170,1171,1172,1173,1203,1204],start:[40,41,43,403,404,405,406,427,428,453,852,867,926,929,978,979,1072,1172,1215],starting_index:[40,41],starting_split_factor:[852,1072],state:[1072,1153,1163,1172,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214],statement:1215,static_argnam:[405,410,850,851],static_argnum:[405,410,850,851],statistical_funct:[844,845],std:[453,1128,1131],step:[40,41,405,406,852,926,929,978,979,1021,1023,1024,1026,1028,1029,1030,1068,1069,1070,1071,1072,1172,1205,1206,1207,1208,1209,1210,1214,1218],stephen:1172,stick:1172,still:[40,41,43],stochast:[1205,1210],stop:[40,41,403,404,405,406,427,428,852,867,896,926,929,978,979,1021,1024,1026,1028,1029,1030,1032,1068,1069,1070,1071,1072,1205,1206,1207,1208,1209,1210],stop_gradi:[40,41,306,437,571,731,852,896,1021,1024,1026,1028,1029,1030,1068,1069,1070,1071,1072,1205,1206,1207,1208,1209,1210],stopiter:1072,store:[40,41,926,958,1002,1021,1035,1201,1202],store_var:[1201,1202],str:[15,16,17,40,41,42,43,352,353,354,355,357,358,360,361,801,804,807,808,809,850,851,852,861,862,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,896,902,907,908,913,914,915,916,917,918,925,926,932,948,950,951,952,983,985,988,994,995,1044,1047,1049,1068,1069,1070,1071,1072,1116,1120,1135,1136,1178,1179,1189,1200,1201,1202],str_to_nod:1072,straight:1215,strength:[1172,1218],stride:[1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],string:[40,41,43,852,868,870,879,880,885,891,897,898,901,902,906,912,914,915,916,925,926,929,932,948,968,988,1020,1072,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196,1201,1202],structur:[40,41,42,43,926,943],structural_diff:[40,41],style:43,sub:[40,41,43,832,833,852,875,876,881,882,883,884,926,1002,1068,1069,1070,1071,1072],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1072,sub_mod:[1201,1202],sub_modul:[1211,1212],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1172,1173,1203,1204,1211,1212],subsequ:43,subset:43,substr:[40,41],suffici:[1044,1049],suggest:1172,suitabl:[1037,1042],sum:[40,41,405,430,431,832,836,852,881,882,883,884,896,926,947,951,994,995,1072,1135,1136,1142],summat:[40,41,1135,1136],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,512,513,514,515,517,519,522,524,526,527,530,531,532,533,534,535,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,577,578,579,581,582,583,587,588,589,590,592,593,594,595,596,597,598,602,603,604,609,610,611,612,613,615,616,617,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,642,643,644,645,647,649,652,654,656,657,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,732,733,734,735,736,738,739,740,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,759,760,761,762,764,765,766,767,768,769,771,772,773,774,775,776,777,780,781,782,783,784,785,786,788,789,791,792,793,794,795,796,797,802,803,804,805,806,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,838,840,843,845,847,848,851,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1171,1172,1176,1177,1179,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1217,1218],supports_inplac:926,suppos:1218,sure:43,svd:[110,235,385,511,641,832],swap:[40,41,926,1008],swapax:[40,41,536,667,926,1218],symmetr:[1044,1050],syntax:[403,405,437,442,446,450,451,453],tab:1172,take:[43,926,977],taken:[43,832,833,1135,1137,1138,1139,1141,1143],tan:[751,1054,1057],tangent:[811,830,1054,1057,1058,1059,1066,1067,1145,1152],tanh:[88,222,363,489,619,779,811,1054,1145],target:[40,41,852,868,871,872,873,874,875,876,877,878,881,882,883,884,897,1072,1172],target_dict:[40,41],task:[43,1068,1069,1070,1071],team:[43,1218],templat:1172,temporari:[926,999,1010],tensor:[40,41,43,405,430,431,852,870,902,912,926,929,931,936,978,979,982,984,987,988,992,994,995,1002,1020,1072,1128,1129,1130,1153,1161,1163,1172,1189,1197,1199,1205,1206,1207,1208,1209,1210,1214,1215],tensorflow:[43,1044,1049,1153,1155,1157,1159,1172,1189,1191,1193,1195,1215,1218],term:[40,41,43,1153,1163,1172,1189,1199],termcolor:[40,41,42],termin:[40,41,42,1072],test:[43,811,818,819,846,847,848,902,917,918],test_array_api:43,tf_concat:1172,than:[40,41,43,807,808,811,812,815,822,824,829,832,836,837,838,852,896,926,929,938,956,975,982,1003,1006,1021,1027,1072,1128,1132,1172,1215],thei:[40,41,1054,1058,1068,1069,1070,1128,1129,1172,1211,1212,1215],them:[1172,1218],themselv:[1116,1117],therefor:43,thi:[40,41,42,43,811,825,826,832,834,839,840,852,874,878,884,891,896,901,926,929,958,990,992,998,1021,1024,1026,1027,1028,1029,1030,1035,1044,1047,1072,1116,1120,1125,1135,1137,1138,1139,1140,1141,1142,1143,1153,1162,1172,1201,1202,1205,1206,1207,1208,1209,1210,1214,1215,1218],thing:[43,1172],those:[40,41,43,832,835,926,938,1021,1035,1072],though:43,thought:43,threshold:[926,982,984],through:[40,41,43],tick:43,tickbox:43,tile:[258,536,667,926],time:[43,926,1009,1021,1024,1028,1068,1069,1070,1071,1072,1128,1129,1153,1163,1189,1200,1201,1202,1218],timeout:[40,41,42,852,861,862,926,990,998,1072],timestep:[1153,1163,1189,1198],titl:[43,1172],tmp_dir:926,tmp_dr:[926,999],to_appli:[40,41],to_clon:[852,1072],to_dev:[40,41,128,252,403,529,659,852],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[852,1072],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1172],to_ivy_modul:[197,787,1172,1178],to_json:[40,41],to_kv_fn:[1153,1164],to_kv_v:[1153,1164],to_list:[40,41,405,667,926],to_multi_dev:[40,41],to_mut:[1116,1118,1125],to_n:[15,40,41,1172],to_nod:1072,to_numpi:[40,41,405,667,926,1172,1214],to_out_fn:[1153,1164],to_out_v:[1153,1164],to_q_fn:[1153,1164],to_q_v:[1153,1164],to_raw:[40,41],to_scalar:[405,667,926],todo:[1072,1172,1173],togeth:[40,41,1211,1212],tool:[1172,1215],top_mod:[1201,1202],topic:1218,torch:[43,850,851,1172,1214,1215,1218],torch_concat:1172,torchfcmodel:1214,total:[40,41,42,852,898,1072],total_mem_on_dev:852,total_mem_on_nod:1072,tpu:[852,899,1072],tpu_is_avail:[403,529,659,852,1072],trace:[40,41,926,975],track:[43,852,1072,1116,1125,1201,1202],track_submod_call_ord:[1201,1202],track_submod_ret:[1201,1202],trail:[1203,1204],train:[1021,1023,1024,1028,1172,1173],trainabl:[1021,1027,1172,1173,1178,1179,1201,1202,1211],trainer:1172,tran:1218,transform:[1153,1161,1162],transpos:[40,41,135,258,405,667,852,883,926,1072,1153,1155,1157,1159,1189,1191,1193,1195],travers:[15,18,19,40,41,1116,1125],treat:[40,41,850,851],tri:[40,41],triangular:[801,805],trigonometr:[1054,1055,1057],tril:[77,211,352,478,608,801],trim_kei:[40,41],trust:[1021,1028,1205,1207],truth:[811,820,821,926,953,1051,1052,1053],try_else_non:926,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[852,1072],tune_dev_alloc:852,tune_dev_split:852,tune_node_alloc:1072,tune_node_split:1072,tune_step:[852,1072],tupl:[15,16,17,18,19,40,41,43,352,353,354,357,801,802,803,806,832,835,836,837,838,844,845,846,847,848,850,851,926,942,958,959,1001,1019,1072,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1130,1135,1137,1138,1139,1140,1141,1142,1143],tutori:43,two:[40,41,801,805,832,833,834,835,926,929,933,945,981,1008,1044,1047],type:[15,18,40,41,42,43,59,360,361,403,404,801,802,803,804,805,806,808,809,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,828,829,830,832,833,836,837,838,842,843,846,847,848,852,864,865,866,867,879,880,884,896,902,906,907,908,912,913,914,915,916,917,918,925,926,927,929,932,941,943,953,956,957,959,968,975,987,988,993,1007,1017,1020,1021,1027,1032,1054,1061,1072,1172,1180,1182,1183,1185,1186,1188,1201,1202,1215],types_to_iteratively_nest:[40,41,42],uint8:[1037,1039,1043],uint8_img_to_float_img:1037,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[811,814],underwai:43,unecessari:43,unfairli:43,unif:1072,unifi:[40,41,852,881,882,883,884,896,1072,1172],uniform:[40,41,1128,1129,1131,1132,1180,1182,1183,1186,1187],uniformli:[1128,1130,1132],unify_arrai:1072,unify_it:1072,unify_nest:1072,uniniti:[801,802],union:[15,18,19,40,41,43,352,353,354,355,357,358,360,361,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,834,835,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,870,875,876,877,878,896,897,902,906,907,908,912,913,914,915,916,917,918,925,926,927,928,929,931,932,933,934,936,938,939,940,941,942,944,945,946,947,950,951,952,953,955,956,957,958,959,960,961,965,967,968,969,976,977,978,979,981,982,983,984,987,988,991,992,993,994,995,1000,1001,1002,1003,1006,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1072,1116,1117,1118,1124,1125],uniqu:[852,861,862,1068,1069,1070,1071,1072,1116,1120],unique_kwarg:1072,unit:[43,852,1054,1055,1056,1072,1145,1146,1147,1148],unitari:[832,835],unless:[926,987,1020],unlik:[852,1072],unnorm:[1128,1129],unpack:[926,1016],unrol:[1153,1163],unset:1215,unset_debug_mod:44,unset_default_devic:852,unset_default_dtyp:902,unset_default_float_dtyp:902,unset_default_int_dtyp:902,unset_framework:[59,1215],unset_with_grad:1021,unstack:[40,41,135,258,405,536,667,926],until:43,unus:[850,851],updat:[40,41,405,430,431,852,861,926,973,994,995,1021,1023,1024,1026,1028,1029,1030,1068,1069,1070,1072,1116,1121,1122,1126,1127,1153,1163,1172,1173,1178,1179,1205,1206,1207,1208,1209,1210,1215,1218],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1128,1132],upper_depth:[1201,1202],upstream:43,usabl:[1172,1218],usag:[852,896,1072],use:[40,41,42,43,453,852,861,862,887,899,926,991,1004,1005,1044,1049,1072,1153,1164,1170,1171,1172,1203,1204,1215,1218],used:[40,41,43,453,832,833,852,861,891,894,895,901,902,913,926,963,964,980,994,995,996,997,1020,1021,1028,1029,1044,1047,1068,1069,1070,1071,1072,1116,1125,1189,1200,1205,1207,1208,1214,1215],used_dev:[852,861],used_mem_on_dev:852,used_mem_on_nod:1072,used_node_str:1072,used_node_strs_dict:1072,useful:[40,41,852,896,1072,1153,1162,1172,1215],user:[1172,1189,1200,1201,1202,1215,1218],uses:1172,using:[40,41,43,1021,1023,1024,1116,1119,1123,1135,1136,1153,1161,1165,1172,1189,1197,1214,1215,1218],util:[852,885,1072],utility_funct:[846,847,848],v_with_top_v_key_chain:[1201,1202],val:[40,41,405,422,423,424,926,971,972,973,996,997],valid:[846,847,848,902,907,926,1004,1005,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],valid_dtyp:902,valu:[40,41,405,811,815,820,821,832,834,835,836,839,840,842,843,844,845,852,864,895,896,926,927,929,931,938,939,940,942,943,949,953,958,959,960,961,976,978,979,982,984,990,991,992,993,994,995,996,997,998,1014,1017,1018,1019,1021,1025,1028,1037,1043,1051,1052,1053,1054,1062,1063,1064,1068,1069,1070,1072,1116,1120,1121,1122,1126,1127,1128,1131,1132,1135,1137,1139,1153,1164,1165,1170,1171,1189,1200,1203,1204,1205,1207],value_is_nan:926,vanilla:[1068,1070],var_shap:1180,variabl:[15,16,17,18,19,40,41,306,437,571,731,926,935,971,972,973,974,975,1007,1021,1024,1025,1026,1027,1028,1029,1030,1032,1035,1068,1069,1070,1071,1153,1164,1170,1171,1178,1179,1180,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212],variable_data:[437,731,1021],varianc:[40,41,1135,1143,1218],varieti:1215,variou:[43,1172],vector:[40,41,446,449,832,835,836,926,940,945,1044,1050,1153,1162,1189,1199],vector_norm:[40,41,110,235,385,511,641,832],vector_to_skew_symmetric_matrix:[173,315,446,580,741,1044],verbos:1217,veri:[43,1172],verifi:43,via:[1116,1117,1124,1215],view:[1037,1042],vision:1172,visual:1215,volum:[1153,1158],vw_tm1:[1021,1024,1028],wai:[1215,1218],wait:[40,41,42,43],want:[43,1172,1215,1218],warn:[59,66,67,68,69,70],warp:[442,443,1037,1038],watch:1214,websit:43,weight:[1021,1023,1024,1026,1028,1029,1030,1153,1162,1163,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202,1205,1207,1208],weight_initi:[1189,1190,1191,1192,1193,1194,1195,1196,1198,1199],weights_path:[1201,1202],well:[40,41,926,967],were:[40,41,1072],what:[43,1172],when:[40,41,42,43,832,835,852,926,937,1005,1018,1072,1172,1201,1202,1215,1218],where:[40,41,43,258,405,667,811,823,832,835,846,847,848,926,929,936,938,942,955,969,976,987,1019,1116,1117,1124,1128,1129],wherea:43,wherebi:[1116,1125],whether:[15,18,19,40,41,42,811,819,846,847,848,850,851,852,870,883,887,891,896,899,901,902,912,916,917,918,925,926,928,933,934,946,949,954,958,965,967,970,974,975,980,1000,1007,1016,1017,1021,1024,1025,1026,1027,1028,1029,1030,1032,1068,1069,1070,1071,1072,1116,1117,1118,1120,1124,1125,1128,1129,1145,1146,1153,1161,1172,1178,1179,1189,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210],which:[40,41,42,43,453,801,802,803,804,805,806,807,808,809,832,833,836,837,838,839,840,842,843,844,845,846,847,848,850,851,852,861,862,870,875,876,877,878,881,882,883,884,886,888,892,894,895,896,902,907,912,916,925,926,929,932,941,943,945,946,947,949,959,960,961,962,968,969,977,978,979,986,987,988,989,991,994,995,1002,1006,1016,1018,1020,1021,1024,1025,1026,1028,1029,1030,1032,1034,1035,1037,1039,1044,1047,1054,1058,1072,1116,1120,1121,1122,1126,1127,1128,1129,1130,1131,1132,1135,1137,1138,1139,1140,1141,1142,1143,1145,1150,1153,1164,1165,1172,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1214,1215],whilst:43,whitespac:[40,41,42],who:43,whose:[801,805,811,812,813,816,817,828,830,832,833,837,838,926,932,937,1135,1136,1137,1138,1139,1141,1143],why:[1172,1173],width:[1037,1042],wiki:1218,wikipedia:1218,window:[1037,1042,1153,1154,1155,1156,1157,1158,1159,1160,1189,1190,1191,1192,1193,1194,1195,1196],wise:[40,41,811,814,820,821,825,826,926,938,953,956,957,982,984,993,1021,1024,1026,1028,1030,1051,1052,1053,1054,1055,1056,1057,1058,1061,1062,1063,1064,1066,1145,1146,1147,1148,1149,1150,1151,1152],wish:1215,with_bia:[1189,1199],with_cal:[926,949],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1021,1031],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1072,with_partial_v:[1201,1202],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,405,432,926,1002,1072],with_to_kv_fn:[1189,1200],with_to_out_fn:[1189,1200],with_to_q_fn:[1189,1200],within:[15,18,19,43,832,835,926,929,1128,1132],without:[40,41,43,926,990,992,998,1116,1118,1215],wonder:1172,word:[15,16,17,926,929,1128,1132,1178,1179],work:[43,1214],worker:[852,861,862,1072],worker_class:[852,861,862,1072],worker_kwarg:1072,would:[43,1145,1150,1172,1215,1218],wrap:[15,40,41,42,43,403,405,437,442,446,450,451,453,926,937,1021,1035,1172],write:[40,41,43,1172,1173,1218],written:[43,1172,1218],ws_new:[1021,1024,1026,1028,1029,1030],x1_i:[811,814,820,821,826,926,953,1054,1061],x2_i:[811,814,820,821,826,926,953,1054,1061],x_feat_dim:[1153,1164],x_i:[811,812,813,815,816,817,818,819,822,824,825,828,829,830],x_in:[1172,1214],x_inv:[1044,1046],x_max:[405,926,938],x_min:[405,926,938],x_sub:1072,xkk:1218,xkkm1:1218,xkm1km1:1218,xs0:1072,xs_t:1072,year:[1172,1218],yet:[1116,1125,1218],yield:[926,1018],you:[43,1172,1214,1215,1218],your:[1172,1173,1214,1215,1218],your_awesome_project:1215,yourself:[43,1172],yourslef:43,youtub:43,zero:[40,41,77,211,352,478,608,801,802,805,811,825,826,832,836,846,847,848,926,942,987,994,995,1019,1020,1021,1023,1024,1028,1029,1153,1161,1172,1180,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1205,1206,1207,1208],zero_pad:[258,405,536,667,926],zeros_lik:[135,258,405,536,667,926],zip:1072,zk_e:1218},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":949,"function":[77,83,88,109,115,117,119,120,122,124,211,217,222,234,240,242,244,245,247,248,352,358,363,384,390,392,394,395,397,399,478,484,489,510,516,518,520,521,523,525,608,614,619,640,646,648,650,651,653,655,801,807,811,831,837,839,841,842,844,846],Ones:1185,Using:1215,abs:[259,537,668,927],aco:[752,1055],acosh:[89,223,364,490,620,812],activ:[195,339,464,600,779,1145,1175],adam:1206,adam_step:1023,adam_upd:1024,algebra:[110,173,235,315,385,446,511,580,641,741,832],all:[125,249,400,526,656,847],all_equ:928,all_nested_indic:1117,ani:[126,250,401,527,657,848],api:[0,43,75,209,350,476,606,799],arang:[136,260,406,538,669,929],arg_nam:930,argmax:[118,243,393,519,649,840],argmin:[137,407,539,670,931],args_to_ivi:16,args_to_n:17,argsort:[121,246,396,522,652,843],arithmet:1,arrai:[0,3,43,75,138,209,261,350,408,476,540,606,671,799,932],array_equ:[262,672,933],arrays_equ:934,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[753,1056],asinh:[90,365,491,621,813],assert_supports_inplac:935,atan2:[755,1058],atan:[754,1057],atanh:[756,1059],attribut:5,backend:[43,73],bilinear_resampl:[170,312,443,577,738,1038],binary_cross_entropi:1167,bitwis:7,bitwise_and:[91,224,366,492,622,814],broadcast_to:[263,673,936],builder:51,cache_fn:937,cast:[139,264,409,541,674,906],ceil:[92,225,367,493,623,815],choleski:[742,1045],choose_random_framework:61,citat:1172,clear_framework_stack:62,clear_mem_on_dev:[661,868],clip:[265,675,938],clip_matrix_norm:939,clip_vector_norm:940,clone:1087,clone_arrai:1088,clone_it:1089,clone_nest:1090,clonedit:1074,cloneditem:1073,clonednest:1075,closest_valid_dtyp:907,code:1218,comparison:9,compil:[266,410,676,850,851],concaten:[140,267,411,542,677,941],constant:[76,210,351,477,607,800],constant_pad:[268,543,678,942],contain:[40,41],container_typ:[679,943],content:1172,contribut:43,conv1d:[201,342,468,791,1154,1190],conv1d_transpos:[202,343,469,792,1155],conv1dtranspos:1191,conv2d:[203,344,470,602,793,1156,1192],conv2d_transpos:[204,345,471,794,1157],conv2dtranspos:1193,conv3d:[205,346,472,603,795,1158,1194],conv3d_transpos:[206,347,473,796,1159],conv3dtranspos:1195,convers:15,convert:[197,787,1178],convert_dtyp:908,copy_arrai:[680,944],copy_nest:1118,core:[127,251,402,528,658,849],cos:[93,368,494,624,816],cosh:[94,369,495,625,757,817,1060],cprint:1217,creat:43,creation:[77,211,352,478,608,801],cross:[269,681,945],cross_entropi:1168,cumprod:[141,270,412,682,946],cumsum:[683,947],current_framework:63,current_framework_str:[684,948],data:[83,87,217,221,358,362,484,488,614,618,807,810],debug_mod:45,debugg:44,default_devic:869,default_dtyp:909,default_float_dtyp:910,default_int_dtyp:911,default_nod:1091,depthwise_conv2d:[207,348,474,604,797,1160],depthwiseconv2d:1196,design:43,dev:[130,254,531,662,870],dev_clon:871,dev_clone_arrai:872,dev_clone_it:873,dev_clone_nest:874,dev_dist:875,dev_dist_arrai:876,dev_dist_it:877,dev_dist_nest:878,dev_from_str:[131,255,532,663,879],dev_to_str:[132,256,533,664,880],dev_unifi:881,dev_unify_arrai:882,dev_unify_it:883,dev_unify_nest:884,dev_util:885,devclonedit:855,devcloneditem:854,devclonednest:856,devdistit:858,devdistitem:857,devdistnest:859,devic:[20,128,252,403,529,659,852],devmapp:861,devmappermultiproc:862,diagon:[111,236,386,512,642,833],distribute_nest:1092,divid:1061,document:1172,dropout:[1161,1197],dtype:[142,271,413,544,685,902,912],dtype_bit:[143,272,414,545,686,913],dtype_from_str:[144,273,415,546,687,914],dtype_to_str:[145,274,416,547,688,915],ecosystem:52,einops_rearrang:950,einops_reduc:951,einops_repeat:952,einsum:[187,330,456,592,771,1136],elementwis:[88,222,363,489,619,811],empti:[78,212,353,479,609,802],equal:[95,370,496,626,953],erf:[452,758,1062],execute_with_gradi:[167,307,438,572,732,1025],exist:954,exp:[759,1063],expand_dim:[275,689,955],finfo:[85,219,360,486,616,808],firstlayersiren:1182,flip:[116,241,391,517,647,838],float_img_to_uint8_img:1039,floor:[276,690,956],floormod:[277,691,957],fomaml_step:1069,fork:43,fourier_encod:958,framework:59,full:[146,278,417,548,692,959],func:72,gather:[147,279,418,549,693,960],gather_nd:[148,280,419,550,694,961],geglu:1176,gelu:[340,465,780,1146,1177],gener:[22,135,258,405,536,667,926],get_all_arrays_in_memori:962,get_all_arrays_on_dev:886,get_framework:64,get_min_bas:963,get_min_denomin:964,get_num_dim:[695,965],get_referrers_recurs:966,glorotuniform:1183,gpu_is_avail:[887,1093],gradient:[24,166,306,437,571,731,1021],gradient_descent_upd:1026,gradient_imag:[171,313,444,578,739,1040],gym:53,handler:59,has_nan:967,ident:[149,281,420,551,696,968],iinfo:[86,220,361,487,617,809],imag:[26,169,311,442,576,737,1037],index_nest:1119,indices_wher:[150,282,421,697,969],initi:1180,inplac:11,inplace_arrays_support:970,inplace_decr:[151,283,422,552,698,971],inplace_incr:[152,284,423,553,699,972],inplace_upd:[153,285,424,554,700,973],inplace_variables_support:974,inv:[743,1046],invalid_dtyp:916,is_arrai:[154,286,425,555,701,975],is_float_dtyp:917,is_int_dtyp:918,is_vari:[168,308,439,573,733,1027],isfinit:[96,226,371,497,627,818],isinf:[287,556,702,976],isnan:[97,227,372,498,628,819],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,798,1214,1215,1218],ivymodul:[198,788],jax:74,keep:43,lamb:1207,lamb_upd:1028,lar:1208,lars_upd:1029,layer:[200,341,467,601,790,1153,1189],layer_norm:1171,layernorm:1204,leaky_relu:[781,1147],less:[98,228,373,499,629,820],less_equ:[99,374,500,630,821],linalg:[28,1044],linear:[110,173,235,315,385,446,511,580,641,741,832,1162,1199],linear_resampl:[155,288,426,557,703,977],linspac:[156,289,427,558,704,978],list:43,log10:[100,375,501,631,822],log1p:[101,376,502,632,823],log2:[102,377,503,633,824],log:[760,1064],logic:[30,177,320,450,584,748,1051],logical_and:[321,749,1052],logical_not:[103,229,378,504,634,825],logical_or:[104,322,379,505,635,750,826,1053],logspac:[157,290,428,559,705,979],loss:1166,lstm:1198,lstm_updat:1163,maml_step:1070,manipul:[115,240,390,516,646,837],map:1120,map_nest_at_index:1121,map_nest_at_indic:1122,match_kwarg:980,math:[32,178,323,451,585,751,1054],matmul:[291,560,706,981],matrix_norm:[174,316,447,581,744,1047],maximum:[707,982],mech:54,memori:55,meshgrid:[292,708,983],meta:[34,1068],method:[109,234,384,510,640,831],min:[123,398,524,654,845],minimum:[709,984],model:56,modul:[1201,1202,1214],multi:1072,multi_head_attent:1164,multi_index_nest:1123,multidevcontain:42,multidevit:865,multidevitem:864,multidevnest:866,multiheadattent:1200,multinodeit:1078,multinodeitem:1077,multinodenest:1079,multinomi:[180,325,454,587,764,1129],multiprocess:[710,985],mxnet:208,nativ:1214,neg:[105,230,380,506,636,827],nest:1116,nested_indices_wher:1124,nested_map:1125,network:1214,next:1172,node:[1072,1094],node_dist:1095,node_dist_arrai:1096,node_dist_it:1097,node_str:1098,node_to_str:1099,node_util:1100,nodedistit:1081,nodedistitem:1080,nodedistnest:1082,nodemapp:1084,nodemappermultiproc:1085,norm:[1170,1203],num_arrays_in_memori:986,num_arrays_on_dev:888,num_cpu_cor:889,num_gpu:[133,890,1101],numpi:349,nutshel:1172,one_hot:[158,429,561,711,987],ones:[79,213,354,480,610,803,988],ones_lik:[80,214,355,481,611,804],oper:[1,3,7,9,11,13],optim:[1205,1209],optimizer_upd:1030,overview:1172,percent_used_mem_on_dev:891,percent_used_mem_on_nod:1102,pinv:[317,745,1048],portabl:1218,print_all_arrays_in_memori:989,print_all_arrays_on_dev:892,profil:[129,253,404,530,660,867,1086],pull:43,queue_timeout:990,randint:[181,326,588,765,1130],random:[36,179,324,453,586,763,1128],random_crop:1041,random_norm:[182,327,589,766,1131],random_uniform:[183,328,590,767,1132],reduce_max:[188,331,457,593,772,1137],reduce_mean:[189,332,458,594,773,1138],reduce_min:[190,333,459,595,774,1139],reduce_prod:[191,334,460,596,775,1140],reduce_std:[335,1141],reduce_sum:[192,336,461,597,776,1142],reduce_var:[193,337,462,598,777,1143],reduct:[38,186,329,455,591,770,1135],reflect:13,relu:[782,1148],repeat:[293,712,991],reptile_step:1071,request:43,reshap:[713,992],robot:57,round:[294,714,993],run:1215,scaled_dot_product_attent:1165,scatter_flat:[159,295,430,562,715,994],scatter_nd:[160,296,431,563,716,995],search:[117,242,392,518,648,839],seed:[184,768,1133],sequenti:[1211,1212],set:[119,244,394,520,650,841],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:893,set_default_dtyp:919,set_default_float_dtyp:920,set_default_int_dtyp:921,set_default_nod:1103,set_exception_debug_mod:48,set_framework:65,set_min_bas:996,set_min_denomin:997,set_nest_at_index:1126,set_nest_at_indic:1127,set_queue_timeout:998,set_split_factor:[894,1104],set_tmp_dir:999,set_with_grad:1031,sgd:1210,shape:[717,1000],shape_to_tupl:1001,shuffl:[185,769,1134],sigmoid:[783,1149],signatur:[109,234,384,510,640,831],sin:[106,231,381,507,637,828],sinh:[761,1065],siren:1186,slodget:834,slogdet:[112,237,387,513,643],softmax:[196,466,784,1150],softplu:[785,1151],sort:[120,245,395,521,651,842],sparse_cross_entropi:1169,split:[161,297,432,564,718,1002],split_factor:[895,1105],split_func_cal:[896,1106],sqrt:[107,232,382,508,638,829],squeez:[162,298,433,565,719,1003],stable_divid:1004,stable_pow:1005,stack:[299,720,1006],stack_imag:[172,314,445,579,740,1042],standard:43,statist:[122,247,397,523,653,844],stop_gradi:[309,440,574,734,1032],str_to_nod:1107,submodul:43,supports_inplac:1007,svd:[113,238,388,514,644,835],swapax:[566,721,1008],tan:[762,1066],tanh:[108,233,383,509,639,786,830,1067,1152],tensorflow:475,tile:[300,567,722,1009],tmp_dir:1010,to_dev:[134,257,534,665,897],to_ivi:18,to_ivy_modul:[199,789,1179],to_list:[723,1011],to_n:19,to_nod:1108,to_numpi:[724,1012],to_scalar:[725,1013],todo:43,torch:605,total_mem_on_dev:898,total_mem_on_nod:1109,tpu_is_avail:[535,666,899,1110],train:1214,trainabl:1214,transpos:[163,301,434,726,1014],tree:1172,tril:[81,215,356,482,612,805],try_else_non:1015,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,217,221,358,362,484,488,614,618,807,810],uint8_img_to_float_img:1043,unifi:1111,unify_arrai:1112,unify_it:1113,unify_nest:1114,unset_debug_mod:49,unset_default_devic:900,unset_default_dtyp:922,unset_default_float_dtyp:923,unset_default_int_dtyp:924,unset_framework:71,unset_with_grad:1033,unstack:[164,302,435,568,727,1016],updat:43,used_mem_on_dev:901,used_mem_on_nod:1115,util:[124,248,399,525,655,846],valid_dtyp:925,value_is_nan:1017,variabl:[310,441,575,735,1034],variable_data:[736,1035],vector_norm:[114,239,389,515,645,836],vector_to_skew_symmetric_matrix:[176,319,449,583,747,1050],verbos:1216,vision:58,where:[303,728,1018,1172],why:1218,with_grad:1036,wrapper:72,write:1215,your:43,zero:[82,216,357,483,613,806,1188],zero_pad:[304,569,729,1019],zeros_lik:[165,305,436,570,730,1020]}})