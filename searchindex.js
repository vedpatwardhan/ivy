Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argsort", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/det", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einsum", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/gather_nd", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/inv", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/layer_norm", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/min", "array/array_methods/multiply", "array/array_methods/negative", "array/array_methods/not_equal", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/trace", "array/array_methods/trunc", "array/array_methods/unique_counts", "array/array_methods/var", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/zero_pad", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container/MultiDevContainer", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/at_dev", "container/container_methods/at_devs", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/clip", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross_entropy", "container/container_methods/divide", "container/container_methods/einsum", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/gather_nd", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/matmul", "container/container_methods/max", "container/container_methods/mean", "container/container_methods/min", "container/container_methods/multiply", "container/container_methods/negative", "container/container_methods/not_equal", "container/container_methods/optimizer_update", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/random_uniform", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_adam_step", "container/container_methods/static_adam_update", "container/container_methods/static_add", "container/container_methods/static_all_equal", "container/container_methods/static_argsort", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_can_cast", "container/container_methods/static_clip", "container/container_methods/static_cross_entropy", "container/container_methods/static_divide", "container/container_methods/static_gather_nd", "container/container_methods/static_gradient_descent_update", "container/container_methods/static_is_variable", "container/container_methods/static_lamb_update", "container/container_methods/static_lars_update", "container/container_methods/static_multiply", "container/container_methods/static_optimizer_update", "container/container_methods/static_randint", "container/container_methods/static_random_uniform", "container/container_methods/static_roll", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_subtract", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_unique_counts", "container/container_methods/std", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tile", "container/container_methods/trunc", "container/container_methods/unique_counts", "container/container_methods/var", "container/container_methods/zero_pad", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argsort.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/det.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einsum.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/gather_nd.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/inv.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/layer_norm.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/min.rst", "array/array_methods/multiply.rst", "array/array_methods/negative.rst", "array/array_methods/not_equal.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/trace.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_counts.rst", "array/array_methods/var.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/zero_pad.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container/MultiDevContainer.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/at_dev.rst", "container/container_methods/at_devs.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/clip.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/divide.rst", "container/container_methods/einsum.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/matmul.rst", "container/container_methods/max.rst", "container/container_methods/mean.rst", "container/container_methods/min.rst", "container/container_methods/multiply.rst", "container/container_methods/negative.rst", "container/container_methods/not_equal.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/random_uniform.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_adam_step.rst", "container/container_methods/static_adam_update.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gradient_descent_update.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_lamb_update.rst", "container/container_methods/static_lars_update.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_optimizer_update.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/std.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tile.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_counts.rst", "container/container_methods/var.rst", "container/container_methods/zero_pad.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argsort array", "asin array", "asinh array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "can_cast array", "ceil array", "cholesky array", "clip array", "concat array", "constant_pad array", "cos array", "cosh array", "cross array", "cross_entropy array", "det array", "diagonal array", "divide array", "eigh array", "eigvalsh array", "einsum array", "equal array", "erf array", "exp array", "expand_dims array", "expm1 array", "flip array", "floor array", "floor_divide array", "gather_nd array", "greater array", "greater_equal array", "inv array", "isfinite array", "isinf array", "isnan array", "layer_norm array", "less array", "less_equal array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "min array", "multiply array", "negative array", "not_equal array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "remainder array", "repeat array", "reshape array", "roll array", "round array", "sign array", "sin array", "sinh array", "solve array", "sort array", "sparse_cross_entropy array", "sqrt array", "square array", "squeeze array", "stack array", "std array", "subtract array", "sum array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "trace array", "trunc array", "unique_counts array", "var array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "zero_pad array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argsort container", "asin container", "asinh container", "at_dev container", "at_devs container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "can_cast container", "ceil container", "clip container", "clip_vector_norm container", "concat container", "constant_pad container", "cos container", "cosh container", "cross_entropy container", "divide container", "einsum container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "flip container", "floor container", "floor_divide container", "gather_nd container", "gradient_descent_update container", "greater container", "greater_equal container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "less container", "less_equal container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "matmul container", "max container", "mean container", "min container", "multiply container", "negative container", "not_equal container", "optimizer_update container", "permute_dims container", "positive container", "pow container", "prod container", "random_uniform container", "remainder container", "repeat container", "reshape container", "roll container", "round container", "sign container", "sin container", "sinh container", "sort container", "sparse_cross_entropy container", "sqrt container", "square container", "squeeze container", "stack container", "static_abs container", "static_adam_step container", "static_adam_update container", "static_add container", "static_all_equal container", "static_argsort container", "static_binary_cross_entropy container", "static_can_cast container", "static_clip container", "static_cross_entropy container", "static_divide container", "static_gather_nd container", "static_gradient_descent_update container", "static_is_variable container", "static_lamb_update container", "static_lars_update container", "static_multiply container", "static_optimizer_update container", "static_randint container", "static_random_uniform container", "static_roll container", "static_sort container", "static_sparse_cross_entropy container", "static_subtract container", "static_tan container", "static_tanh container", "static_unique_counts container", "std container", "subtract container", "sum container", "swapaxes container", "tan container", "tanh container", "tile container", "trunc container", "unique_counts container", "var container", "zero_pad container", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 8, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 280, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 362, 363, 365, 369, 370, 371, 372, 374, 376, 377, 379, 380, 381, 391, 392, 393, 434, 457, 471, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 759, 766, 803, 809, 828, 833, 835, 837, 839, 869, 1034, 1036, 1046, 1069, 1072, 1136, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 527, 531, 535, 540, 544, 548, 552, 556, 560, 564, 568, 572, 576, 580, 584, 588, 592, 596, 601, 605, 609, 613, 617, 621, 625, 629, 633, 637, 641, 645, 649, 653, 657, 661, 665, 669, 673, 677, 681, 685, 689, 690, 691, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732, 736, 740, 745, 750, 755, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 840, 844, 845, 849, 853, 857, 861, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 891, 894, 897, 900, 903, 906, 910, 913, 914, 917, 920, 923, 926, 929, 930, 933, 936, 939, 942, 945, 948, 951, 954, 955, 960, 965, 970, 971, 976, 980, 984, 988, 992, 996, 1000, 1004, 1009, 1010, 1014, 1018, 1022, 1026, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1058, 1059, 1062, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1082, 1083, 1084, 1089, 1094, 1095, 1099, 1103, 1107, 1111, 1115, 1119, 1123, 1127, 1128, 1132, 1136, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183], "arrai": [0, 1, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 180, 181, 182, 183, 184, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 393, 394, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 445, 446, 447, 452, 454, 457, 459, 460, 462, 466, 471, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 509, 511, 515, 516, 521, 522, 524, 525, 526, 527, 530, 531, 534, 535, 537, 538, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 586, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 619, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 758, 759, 760, 762, 763, 764, 767, 768, 769, 771, 772, 774, 776, 777, 778, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 796, 798, 799, 800, 801, 802, 803, 805, 806, 808, 811, 812, 813, 815, 816, 821, 822, 825, 827, 828, 829, 831, 832, 833, 835, 837, 838, 839, 840, 842, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 866, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 913, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 973, 974, 975, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1046, 1047, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1139, 1141, 1157, 1165, 1168], "arraywithactiv": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 369, 370, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183], "base": [0, 1, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 178, 179, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 365, 368, 370, 376, 392, 415, 425, 434, 471, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 521, 609, 653, 656, 657, 660, 661, 664, 665, 668, 708, 711, 759, 794, 817, 824, 833, 1074, 1075, 1076, 1080, 1082, 1094, 1095, 1098, 1122, 1143, 1144, 1145, 1148, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "abc": [0, 1, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 180, 181, 378, 471, 480, 486, 759, 784, 1169, 1170, 1173, 1177], "activ": [1, 2, 8, 159, 160, 179, 185, 192, 353, 354, 356, 357, 359, 361, 380, 405, 406, 407, 408, 409, 410, 411, 1136, 1144, 1145], "support": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183], "framework": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 360, 364, 366, 367, 368, 369, 372, 374, 375, 378, 381, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183], "array_method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 443, 444, 522, 523, 528, 531, 532, 536, 540, 541, 544, 545, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 569, 572, 573, 576, 577, 580, 581, 584, 585, 589, 593, 597, 602, 605, 606, 610, 613, 614, 618, 621, 622, 626, 629, 630, 633, 634, 637, 638, 641, 642, 645, 646, 649, 650, 653, 654, 657, 658, 661, 662, 665, 666, 669, 670, 673, 674, 677, 678, 681, 682, 685, 686, 691, 692, 696, 697, 700, 701, 704, 705, 708, 709, 712, 713, 716, 717, 720, 721, 724, 725, 728, 729, 732, 733, 736, 737, 740, 742, 747, 752, 755, 756, 760, 761, 788, 789, 835, 836, 885, 886, 888, 889, 892, 894, 895, 897, 898, 900, 901, 904, 905, 906, 907, 910, 911, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 931, 934, 935, 936, 937, 939, 940, 942, 943, 945, 946, 948, 949, 951, 952, 955, 956, 960, 961, 965, 966, 971, 972, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1001, 1004, 1005, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1053, 1054, 1076, 1078, 1084, 1085, 1089, 1090, 1095, 1096, 1099, 1100, 1103, 1104, 1107, 1108, 1111, 1112, 1115, 1116, 1120, 1123, 1124, 1128, 1129, 1132, 1133], "ab": [2, 129, 130, 185, 279, 323, 324, 365, 368, 521, 526, 708, 711, 884, 948, 950, 1136], "self": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 369, 370, 376, 378, 379, 380, 381, 443, 444, 445, 471, 522, 523, 524, 528, 529, 530, 531, 532, 533, 536, 537, 538, 540, 541, 542, 544, 545, 546, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 564, 565, 566, 568, 569, 570, 572, 573, 574, 576, 577, 578, 580, 581, 582, 584, 585, 586, 589, 590, 591, 593, 594, 595, 597, 598, 599, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 633, 634, 635, 637, 638, 639, 641, 642, 643, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 661, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 677, 678, 679, 681, 682, 683, 685, 686, 687, 691, 692, 693, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 733, 734, 736, 737, 738, 740, 742, 743, 747, 748, 749, 752, 753, 754, 755, 756, 757, 760, 761, 762, 772, 773, 788, 789, 790, 835, 836, 837, 840, 841, 845, 846, 849, 850, 853, 854, 857, 858, 861, 862, 885, 886, 888, 889, 892, 894, 895, 897, 898, 900, 901, 904, 905, 906, 907, 908, 910, 911, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 931, 934, 935, 936, 937, 939, 940, 942, 943, 945, 946, 948, 949, 951, 952, 955, 956, 957, 960, 961, 962, 965, 966, 967, 971, 972, 973, 976, 977, 978, 980, 981, 982, 984, 985, 986, 988, 989, 990, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1053, 1054, 1055, 1063, 1064, 1076, 1078, 1079, 1084, 1085, 1086, 1089, 1090, 1091, 1095, 1096, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1173, 1177], "out": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 129, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187, 188, 191, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 288, 289, 290, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 323, 324, 325, 326, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 392, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 442, 471, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 771, 772, 773, 774, 776, 777, 778, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1157, 1165], "none": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 161, 163, 166, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 361, 363, 366, 370, 371, 372, 373, 374, 376, 378, 380, 381, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 440, 442, 443, 445, 447, 449, 450, 451, 454, 457, 471, 480, 481, 489, 490, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 765, 771, 772, 773, 774, 776, 777, 778, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 797, 799, 800, 804, 810, 812, 815, 816, 817, 818, 823, 824, 830, 833, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1040, 1045, 1046, 1047, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1146, 1147, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "instanc": [2, 3, 6, 7, 8, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 159, 160, 180, 181, 182, 183, 185, 186, 189, 191, 192, 194, 211, 212, 213, 228, 230, 268, 280, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 345, 346, 353, 354, 358, 362, 363, 365, 366, 369, 371, 373, 374, 379, 380, 381, 394, 402, 404, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 444, 445, 446, 471, 480, 512, 521, 522, 523, 524, 525, 535, 536, 537, 540, 543, 551, 556, 560, 563, 580, 583, 584, 585, 586, 587, 592, 604, 617, 618, 619, 621, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 747, 748, 750, 752, 753, 754, 759, 760, 761, 762, 776, 787, 788, 789, 790, 803, 827, 829, 835, 836, 837, 839, 871, 874, 877, 883, 884, 885, 887, 888, 890, 891, 954, 955, 958, 970, 971, 972, 973, 984, 987, 988, 991, 996, 999, 1004, 1005, 1006, 1007, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1146, 1147], "variant": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 362, 363, 443, 444, 445, 447, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1059, 1061, 1076, 1077, 1078, 1079], "thi": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 443, 444, 445, 446, 447, 471, 495, 499, 503, 510, 515, 520, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 560, 563, 576, 579, 580, 583, 584, 585, 586, 587, 592, 613, 616, 617, 618, 619, 621, 669, 677, 680, 681, 684, 700, 703, 712, 715, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 764, 786, 787, 788, 789, 790, 792, 803, 814, 819, 833, 835, 836, 837, 839, 840, 842, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 869, 871, 874, 880, 883, 884, 891, 893, 910, 912, 929, 970, 971, 972, 973, 975, 984, 987, 988, 991, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1014, 1017, 1034, 1040, 1046, 1047, 1052, 1053, 1056, 1059, 1061, 1069, 1070, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1087, 1094, 1099, 1102, 1103, 1106, 1115, 1118, 1123, 1126, 1127, 1128, 1131, 1136, 1142, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "simpli": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 180, 181, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 357, 362, 363, 365, 366, 369, 370, 372, 373, 374, 376, 380, 381, 443, 444, 445, 447, 521, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 613, 616, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1059, 1061, 1076, 1077, 1078, 1079], "wrap": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 160, 180, 181, 182, 183, 184, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 354, 360, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 381, 393, 394, 402, 443, 444, 445, 447, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 759, 760, 761, 762, 764, 770, 788, 789, 790, 792, 833, 835, 836, 837, 839, 869, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1059, 1061, 1076, 1077, 1078, 1079], "function": [2, 3, 6, 7, 8, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 159, 160, 161, 165, 166, 167, 175, 180, 181, 185, 186, 189, 191, 192, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 367, 369, 373, 375, 377, 378, 379, 380, 391, 392, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 534, 535, 536, 537, 538, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 585, 586, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 618, 619, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 913, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1139, 1141, 1143, 1144, 1145, 1173, 1176, 1178], "so": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 175, 176, 180, 181, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 357, 361, 362, 363, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 393, 394, 402, 443, 444, 445, 447, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1034, 1035, 1045, 1059, 1061, 1076, 1077, 1078, 1079, 1136], "docstr": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 358, 359, 360, 361, 366, 370, 374, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 444, 445, 446, 447, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 560, 563, 580, 583, 584, 585, 586, 587, 592, 617, 618, 619, 621, 669, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 884, 891, 970, 971, 972, 973, 975, 984, 987, 988, 991, 1004, 1005, 1006, 1007, 1008, 1059, 1061, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "also": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 175, 176, 180, 181, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 355, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 444, 445, 446, 447, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 560, 563, 580, 583, 584, 585, 586, 587, 592, 617, 618, 619, 621, 669, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 764, 787, 788, 789, 790, 792, 803, 833, 835, 836, 837, 839, 840, 842, 871, 874, 880, 883, 884, 891, 970, 971, 972, 973, 975, 984, 987, 988, 991, 1004, 1005, 1006, 1007, 1008, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1044, 1045, 1046, 1052, 1053, 1056, 1059, 1061, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131, 1157, 1167], "appli": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 118, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 180, 181, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 357, 358, 362, 363, 365, 366, 368, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 391, 393, 404, 405, 406, 407, 408, 409, 410, 411, 434, 443, 444, 445, 447, 462, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 759, 760, 761, 762, 764, 781, 782, 783, 788, 789, 790, 792, 833, 835, 836, 837, 839, 853, 855, 857, 859, 871, 880, 882, 883, 884, 905, 914, 916, 923, 925, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1014, 1017, 1030, 1031, 1032, 1034, 1040, 1043, 1046, 1047, 1052, 1053, 1056, 1059, 1061, 1076, 1077, 1078, 1079, 1136, 1143, 1144, 1145, 1171, 1172], "minim": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 362, 373, 376, 443, 444, 445, 447, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 971, 972, 973, 975, 1004, 1005, 1006, 1008, 1059, 1061, 1076, 1077, 1078, 1079], "chang": [2, 3, 6, 7, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 177, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 357, 358, 359, 362, 364, 365, 370, 376, 380, 393, 443, 444, 445, 447, 471, 522, 523, 524, 526, 536, 537, 539, 551, 556, 584, 585, 586, 618, 619, 621, 669, 746, 747, 748, 751, 752, 753, 754, 760, 761, 762, 764, 788, 789, 790, 792, 835, 836, 837, 839, 884, 888, 890, 970, 971, 972, 973, 975, 1000, 1003, 1004, 1005, 1006, 1008, 1034, 1036, 1046, 1059, 1061, 1076, 1077, 1078, 1079, 1136, 1142], "exampl": [2, 3, 6, 7, 8, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 159, 160, 161, 165, 166, 167, 173, 177, 182, 183, 185, 186, 189, 191, 192, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 353, 354, 356, 357, 358, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 392, 393, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 422, 423, 426, 428, 429, 432, 433, 434, 440, 443, 444, 445, 446, 447, 455, 456, 471, 490, 491, 493, 505, 506, 507, 508, 509, 512, 514, 516, 518, 519, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 559, 560, 563, 564, 567, 576, 579, 580, 583, 584, 585, 586, 587, 588, 592, 604, 609, 617, 618, 619, 621, 625, 628, 629, 632, 645, 648, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 767, 768, 776, 777, 784, 787, 788, 789, 790, 791, 792, 795, 806, 821, 822, 827, 828, 829, 833, 835, 836, 837, 838, 839, 871, 872, 874, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 903, 914, 916, 920, 922, 933, 939, 941, 942, 944, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1115, 1118, 1119, 1122, 1127, 1128, 1131, 1136], "us": [2, 3, 8, 129, 130, 159, 160, 161, 166, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 192, 323, 324, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 392, 393, 404, 406, 407, 408, 409, 410, 411, 414, 434, 453, 471, 480, 481, 506, 510, 513, 514, 515, 516, 518, 520, 521, 522, 523, 524, 540, 543, 560, 563, 580, 583, 592, 604, 628, 629, 632, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 759, 787, 794, 795, 809, 815, 816, 817, 818, 823, 824, 833, 835, 838, 840, 842, 853, 855, 857, 859, 871, 877, 879, 880, 882, 883, 884, 891, 894, 896, 910, 912, 954, 955, 958, 970, 984, 987, 988, 991, 996, 999, 1004, 1007, 1018, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1043, 1044, 1045, 1047, 1052, 1053, 1056, 1069, 1070, 1071, 1072, 1074, 1075, 1094, 1095, 1098, 1122, 1127, 1128, 1131, 1136, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176], "x": [2, 3, 7, 25, 26, 28, 47, 49, 88, 99, 106, 107, 112, 118, 121, 122, 125, 126, 129, 130, 131, 132, 143, 144, 151, 152, 161, 165, 173, 180, 181, 182, 183, 185, 186, 191, 211, 212, 213, 228, 230, 268, 278, 279, 282, 284, 286, 287, 290, 292, 297, 299, 300, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 347, 348, 359, 361, 362, 363, 366, 367, 370, 373, 374, 376, 378, 379, 380, 381, 404, 405, 406, 407, 408, 409, 410, 411, 415, 417, 419, 421, 423, 426, 427, 429, 430, 431, 432, 433, 434, 440, 442, 443, 444, 445, 446, 447, 452, 471, 490, 491, 492, 493, 496, 497, 505, 509, 514, 516, 521, 522, 523, 524, 525, 526, 527, 530, 531, 534, 535, 536, 537, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 580, 583, 584, 585, 586, 587, 588, 591, 592, 595, 604, 605, 608, 609, 613, 616, 617, 618, 619, 621, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 653, 656, 657, 660, 661, 664, 665, 668, 669, 677, 680, 689, 690, 696, 699, 704, 707, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 767, 768, 769, 771, 772, 774, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 799, 801, 802, 803, 805, 806, 807, 808, 812, 821, 822, 825, 827, 828, 829, 831, 832, 833, 844, 849, 851, 852, 866, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 910, 912, 913, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 933, 935, 936, 938, 939, 941, 942, 944, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1035, 1040, 1044, 1045, 1046, 1052, 1053, 1056, 1057, 1059, 1060, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1168], "2": [2, 3, 6, 7, 10, 25, 26, 28, 36, 47, 49, 88, 106, 107, 108, 112, 115, 125, 126, 129, 130, 131, 132, 133, 134, 139, 140, 143, 144, 151, 152, 161, 165, 180, 181, 182, 183, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 357, 359, 363, 367, 370, 374, 375, 376, 378, 379, 380, 381, 393, 404, 406, 407, 408, 409, 411, 414, 415, 422, 423, 426, 428, 429, 433, 434, 440, 443, 444, 445, 446, 447, 471, 490, 491, 493, 505, 507, 509, 516, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 548, 551, 552, 555, 556, 560, 563, 564, 567, 576, 579, 580, 583, 584, 585, 586, 587, 588, 592, 604, 609, 617, 618, 619, 621, 625, 628, 629, 632, 645, 648, 665, 668, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 767, 768, 771, 772, 774, 777, 784, 787, 788, 789, 790, 791, 792, 806, 821, 822, 827, 833, 835, 836, 837, 838, 839, 871, 874, 875, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 895, 896, 903, 905, 906, 909, 910, 912, 914, 916, 920, 922, 923, 925, 926, 928, 933, 939, 940, 941, 942, 944, 948, 949, 950, 954, 955, 958, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1136], "6": [2, 3, 6, 7, 26, 28, 129, 130, 133, 134, 143, 144, 182, 183, 185, 186, 191, 212, 279, 282, 290, 297, 323, 324, 325, 326, 341, 342, 359, 363, 367, 370, 378, 379, 380, 404, 406, 407, 409, 415, 423, 471, 493, 509, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 560, 563, 564, 567, 580, 583, 584, 585, 586, 587, 592, 604, 617, 628, 629, 632, 669, 689, 690, 696, 699, 716, 719, 732, 735, 736, 739, 745, 750, 759, 768, 777, 787, 788, 791, 792, 822, 827, 833, 835, 836, 838, 871, 874, 877, 878, 883, 884, 888, 890, 891, 894, 896, 920, 922, 933, 939, 941, 954, 955, 958, 965, 968, 970, 971, 972, 974, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1007, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1069, 1070, 1073, 1074, 1075, 1076, 1080, 1094, 1095, 1098, 1099, 1102, 1122], "1": [2, 3, 6, 7, 10, 12, 25, 26, 28, 33, 34, 36, 47, 49, 56, 88, 94, 95, 106, 107, 112, 114, 125, 126, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 161, 167, 173, 176, 177, 180, 181, 182, 183, 185, 186, 189, 191, 194, 196, 211, 212, 213, 219, 228, 230, 240, 264, 268, 273, 274, 280, 282, 283, 284, 286, 287, 288, 290, 297, 298, 299, 300, 301, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 359, 363, 366, 370, 373, 374, 375, 376, 378, 379, 380, 381, 393, 404, 406, 407, 408, 409, 411, 415, 416, 423, 424, 425, 426, 428, 429, 433, 434, 440, 443, 444, 445, 446, 447, 454, 471, 475, 478, 480, 485, 490, 491, 493, 495, 499, 503, 505, 508, 509, 516, 521, 522, 523, 524, 525, 527, 530, 531, 534, 535, 536, 537, 539, 540, 543, 551, 552, 555, 556, 560, 563, 564, 567, 576, 579, 580, 583, 584, 585, 586, 587, 588, 591, 592, 595, 604, 609, 613, 616, 617, 618, 619, 621, 625, 628, 629, 632, 645, 648, 653, 656, 657, 660, 661, 664, 665, 668, 669, 689, 690, 696, 699, 700, 703, 708, 711, 716, 719, 720, 723, 724, 727, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 767, 768, 776, 777, 784, 787, 788, 789, 790, 791, 792, 806, 812, 815, 816, 821, 822, 824, 827, 828, 829, 831, 833, 835, 836, 837, 838, 839, 871, 872, 873, 874, 875, 876, 877, 878, 879, 883, 884, 885, 887, 888, 889, 890, 891, 894, 895, 896, 903, 914, 916, 920, 922, 930, 932, 933, 939, 941, 942, 944, 945, 946, 947, 948, 950, 954, 955, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1034, 1046, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1102, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "0": [2, 3, 6, 10, 26, 28, 29, 30, 36, 44, 47, 56, 88, 99, 100, 106, 107, 110, 112, 113, 129, 130, 131, 132, 133, 134, 139, 140, 143, 144, 145, 146, 151, 152, 155, 156, 161, 165, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 194, 211, 212, 213, 215, 216, 225, 228, 238, 239, 240, 264, 268, 278, 279, 280, 281, 282, 283, 286, 287, 290, 293, 294, 297, 298, 299, 303, 304, 305, 306, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 361, 362, 363, 376, 378, 379, 380, 381, 404, 406, 407, 408, 409, 410, 411, 415, 416, 420, 424, 425, 429, 430, 431, 432, 433, 434, 440, 443, 445, 446, 447, 454, 471, 473, 476, 480, 483, 487, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 509, 512, 514, 515, 519, 521, 522, 523, 525, 526, 527, 530, 531, 534, 535, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 568, 571, 576, 579, 580, 583, 584, 585, 586, 587, 588, 591, 592, 595, 604, 609, 613, 616, 617, 618, 619, 621, 628, 629, 632, 653, 656, 657, 660, 665, 668, 669, 689, 690, 691, 694, 696, 699, 700, 703, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 761, 762, 763, 764, 767, 768, 771, 772, 774, 776, 777, 778, 784, 787, 788, 791, 792, 797, 806, 812, 815, 816, 821, 827, 828, 829, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 857, 858, 859, 860, 871, 872, 874, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 895, 896, 903, 933, 939, 941, 942, 943, 944, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 992, 995, 996, 999, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1026, 1028, 1034, 1046, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1131, 1136, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180], "y": [2, 3, 7, 10, 26, 28, 47, 49, 88, 106, 107, 112, 129, 130, 131, 132, 143, 144, 151, 152, 182, 183, 185, 186, 191, 194, 212, 213, 228, 230, 268, 279, 282, 283, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 323, 324, 325, 326, 337, 338, 341, 342, 345, 346, 361, 363, 367, 370, 376, 378, 404, 406, 407, 408, 409, 410, 411, 415, 422, 423, 426, 428, 429, 433, 434, 440, 471, 491, 505, 509, 514, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 552, 555, 556, 560, 563, 564, 567, 576, 579, 580, 583, 584, 585, 586, 587, 588, 592, 604, 609, 617, 618, 619, 621, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 767, 768, 776, 777, 784, 785, 787, 788, 789, 790, 791, 792, 821, 827, 828, 829, 833, 844, 871, 877, 878, 880, 884, 885, 887, 888, 890, 891, 903, 920, 922, 939, 941, 942, 944, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1018, 1021, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1115, 1118, 1119, 1122, 1127, 1128, 1131], "print": [2, 3, 6, 7, 8, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 159, 160, 161, 165, 166, 167, 173, 180, 181, 182, 183, 184, 185, 186, 191, 192, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 353, 354, 356, 363, 370, 376, 378, 379, 380, 404, 406, 407, 408, 409, 410, 411, 415, 422, 423, 426, 428, 429, 432, 433, 434, 440, 443, 444, 445, 446, 447, 455, 456, 471, 491, 505, 506, 507, 508, 509, 511, 514, 518, 521, 522, 523, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 559, 560, 563, 564, 567, 576, 579, 580, 583, 584, 585, 586, 587, 588, 592, 604, 609, 617, 618, 619, 621, 625, 628, 629, 632, 645, 648, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 767, 768, 776, 777, 784, 787, 788, 789, 790, 791, 792, 795, 813, 821, 822, 827, 828, 829, 833, 835, 836, 838, 839, 871, 872, 874, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 903, 920, 922, 933, 939, 941, 942, 944, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 973, 974, 975, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1115, 1118, 1119, 1122, 1127, 1128, 1131, 1136], "return": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 161, 165, 166, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466, 470, 471, 480, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 817, 818, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 859, 860, 861, 862, 863, 864, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1047, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1141, 1146, 1147, 1157, 1166, 1167, 1173, 1177], "type": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 360, 361, 362, 363, 368, 369, 370, 372, 373, 374, 376, 378, 379, 381, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466, 470, 471, 487, 488, 489, 490, 491, 493, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 770, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 798, 799, 801, 802, 803, 805, 806, 807, 808, 812, 815, 816, 817, 818, 821, 823, 824, 825, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 840, 842, 843, 845, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 859, 860, 861, 862, 863, 864, 866, 868, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168], "aco": [2, 129, 130, 185, 323, 324, 521, 531, 1136], "acosh": [2, 129, 130, 185, 323, 324, 434, 455, 456, 521, 530, 591, 595, 1136], "adam_step": [2, 133, 134, 185, 280, 327, 328, 833, 839], "mw": [2, 6, 133, 134, 185, 189, 280, 327, 328, 380, 833, 835, 836, 837, 838, 839, 840, 842], "vw": [2, 6, 133, 134, 185, 189, 280, 327, 328, 380, 833, 835, 836, 837, 838, 839, 840, 842], "step": [2, 6, 133, 134, 177, 180, 181, 185, 189, 190, 238, 280, 281, 293, 327, 328, 356, 357, 359, 363, 367, 369, 370, 371, 372, 376, 379, 380, 381, 392, 415, 416, 424, 425, 471, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 847, 853, 854, 855, 856, 857, 859, 861, 863, 1030, 1031, 1032, 1033, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "beta1": [2, 6, 133, 134, 185, 189, 190, 238, 280, 281, 293, 327, 328, 380, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 1173, 1174, 1175], "9": [2, 6, 7, 28, 129, 130, 133, 134, 143, 144, 182, 183, 185, 189, 190, 191, 238, 280, 281, 282, 293, 297, 323, 324, 327, 328, 341, 342, 359, 363, 379, 380, 521, 535, 536, 537, 539, 560, 563, 564, 567, 669, 689, 690, 716, 719, 732, 735, 736, 739, 759, 787, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 871, 874, 877, 878, 884, 888, 890, 891, 894, 896, 920, 922, 933, 939, 941, 970, 971, 972, 974, 988, 991, 996, 999, 1004, 1007, 1009, 1057, 1058, 1059, 1060, 1061, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122, 1173, 1174, 1175], "beta2": [2, 6, 133, 134, 185, 189, 190, 238, 280, 281, 293, 327, 328, 380, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 1173, 1174, 1175], "999": [2, 6, 133, 134, 185, 189, 190, 238, 280, 281, 293, 304, 311, 323, 324, 327, 328, 380, 521, 551, 556, 750, 751, 753, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 1173, 1174, 1175], "epsilon": [2, 6, 18, 34, 56, 95, 133, 134, 141, 142, 145, 146, 185, 189, 190, 204, 219, 238, 240, 274, 280, 281, 285, 288, 293, 301, 327, 328, 335, 336, 339, 340, 366, 370, 373, 380, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 884, 905, 914, 916, 923, 925, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 1052, 1053, 1054, 1055, 1056, 1171, 1172, 1173, 1174, 1175], "1e": [2, 6, 18, 34, 56, 95, 133, 134, 141, 142, 145, 146, 185, 189, 190, 204, 219, 238, 240, 274, 280, 281, 285, 288, 293, 301, 327, 328, 335, 336, 339, 340, 366, 370, 373, 380, 381, 759, 795, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 884, 933, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 1052, 1053, 1054, 1055, 1056, 1136, 1173, 1174, 1175, 1176, 1178], "07": [2, 6, 18, 34, 95, 133, 134, 141, 142, 185, 189, 190, 204, 219, 238, 274, 280, 281, 285, 288, 293, 301, 327, 328, 335, 336, 380, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 854, 855, 856, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 1173, 1174, 1175], "With": [2, 6, 10, 112, 131, 132, 133, 134, 151, 152, 176, 177, 180, 181, 182, 183, 185, 194, 279, 282, 283, 287, 290, 297, 299, 303, 304, 305, 314, 323, 324, 325, 326, 337, 338, 341, 342, 345, 346, 356, 363, 365, 376, 404, 406, 407, 408, 409, 410, 411, 415, 426, 434, 443, 446, 471, 493, 509, 521, 522, 525, 526, 535, 539, 540, 543, 551, 556, 560, 563, 580, 583, 584, 587, 592, 604, 617, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 750, 751, 754, 759, 760, 761, 762, 763, 764, 768, 776, 777, 784, 787, 788, 791, 792, 822, 827, 828, 829, 833, 835, 836, 838, 871, 874, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 910, 912, 939, 941, 954, 955, 958, 965, 968, 970, 971, 974, 975, 984, 987, 988, 991, 996, 999, 1004, 1007, 1008, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1122, 1127, 1128, 1131], "input": [2, 6, 118, 121, 122, 133, 134, 180, 181, 182, 183, 184, 185, 189, 279, 280, 282, 283, 287, 290, 297, 299, 303, 304, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 394, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 459, 460, 461, 462, 466, 471, 480, 481, 490, 491, 492, 493, 495, 496, 499, 503, 509, 515, 516, 521, 522, 525, 526, 527, 530, 531, 534, 535, 538, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 746, 749, 750, 751, 754, 755, 758, 759, 760, 763, 764, 765, 767, 768, 769, 771, 772, 774, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 796, 798, 799, 801, 802, 803, 805, 806, 807, 808, 812, 815, 816, 821, 822, 825, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 844, 849, 851, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 975, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1008, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1171, 1172], "dcdw": [2, 6, 133, 134, 185, 189, 190, 231, 238, 239, 280, 281, 291, 293, 294, 327, 328, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 853, 854, 855, 856, 857, 858, 859, 860], "3": [2, 6, 7, 10, 25, 28, 47, 49, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 182, 183, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 356, 359, 363, 367, 370, 376, 378, 379, 380, 381, 404, 406, 407, 408, 409, 414, 415, 423, 426, 429, 432, 433, 434, 443, 444, 445, 446, 447, 471, 490, 493, 509, 516, 521, 522, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 560, 563, 576, 579, 580, 583, 584, 586, 587, 592, 604, 609, 617, 618, 619, 621, 625, 628, 629, 632, 645, 648, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 748, 750, 751, 753, 754, 759, 760, 761, 762, 767, 768, 777, 784, 787, 788, 789, 790, 791, 792, 821, 822, 827, 829, 833, 835, 836, 837, 838, 839, 871, 872, 873, 874, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 903, 914, 916, 920, 922, 933, 939, 941, 942, 944, 951, 953, 954, 955, 958, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1013, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1119, 1122, 1127, 1128, 1131, 1136], "adam_step_delta": [2, 6, 133, 134, 185, 189, 280, 327, 328, 833, 835, 836, 837, 838, 839], "639": [2, 6, 133, 134, 833, 835, 836, 838], "11": [2, 6, 133, 134, 182, 183, 185, 191, 282, 297, 323, 324, 341, 342, 363, 370, 521, 535, 537, 539, 560, 563, 669, 716, 719, 759, 777, 787, 835, 836, 884, 894, 896, 920, 922, 954, 965, 968, 970, 988, 991, 996, 999, 1057, 1059, 1060, 1061, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122], "32": [2, 6, 133, 134, 379, 404, 406, 521, 580, 583, 835, 836, 871, 874, 877, 884, 920, 922, 1069, 1073, 1094, 1095, 1098, 1122], "63": [2, 6, 133, 134, 521, 732, 735, 835, 836, 884, 885, 887, 920, 922, 1094, 1095, 1098, 1122], "00121": [2, 6, 133, 134, 835, 836], "0102": [2, 6, 133, 134, 835, 836], "0397": [2, 6, 133, 134, 835, 836], "add": [2, 8, 129, 130, 159, 160, 180, 181, 182, 183, 185, 192, 282, 283, 323, 324, 325, 326, 353, 354, 356, 357, 358, 360, 361, 362, 366, 367, 369, 370, 374, 376, 378, 393, 521, 522, 525, 539, 669, 760, 764, 1052, 1053, 1056, 1136, 1142, 1171, 1172], "x2": [2, 7, 10, 16, 19, 21, 22, 23, 24, 33, 37, 41, 48, 50, 51, 57, 58, 63, 64, 66, 67, 68, 75, 77, 78, 82, 85, 93, 101, 108, 114, 129, 130, 131, 132, 139, 140, 180, 181, 185, 191, 194, 202, 205, 207, 208, 209, 210, 220, 222, 229, 232, 233, 241, 242, 247, 248, 250, 251, 252, 256, 258, 262, 265, 282, 283, 289, 295, 302, 307, 323, 324, 325, 326, 333, 334, 363, 374, 434, 466, 471, 509, 521, 535, 536, 537, 538, 539, 552, 553, 554, 555, 560, 561, 562, 563, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 645, 646, 647, 648, 649, 650, 651, 652, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 740, 741, 742, 743, 744, 759, 760, 761, 762, 763, 764, 871, 876, 884, 888, 889, 890, 906, 907, 908, 909, 920, 921, 922, 930, 931, 932, 939, 940, 941, 945, 946, 947, 1069, 1073], "4": [2, 7, 28, 129, 130, 143, 144, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 211, 212, 213, 228, 230, 268, 279, 280, 282, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 363, 367, 370, 376, 378, 379, 380, 381, 404, 406, 407, 409, 415, 423, 426, 429, 433, 434, 443, 445, 446, 447, 471, 493, 509, 521, 522, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 552, 555, 556, 560, 563, 580, 583, 584, 586, 587, 592, 604, 617, 619, 621, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 748, 750, 751, 753, 754, 759, 768, 777, 786, 787, 788, 790, 791, 792, 822, 827, 833, 835, 837, 838, 839, 871, 874, 875, 876, 878, 881, 883, 884, 888, 890, 891, 894, 896, 903, 914, 916, 920, 922, 939, 941, 942, 944, 954, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1006, 1007, 1008, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1136, 1173, 1174, 1175, 1176, 1178], "5": [2, 7, 10, 26, 28, 47, 129, 130, 131, 132, 143, 144, 182, 183, 185, 186, 189, 191, 211, 212, 213, 228, 268, 279, 280, 282, 286, 287, 290, 297, 299, 303, 304, 310, 311, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 357, 359, 363, 367, 374, 378, 379, 380, 404, 406, 407, 409, 415, 423, 426, 429, 432, 433, 434, 443, 445, 446, 447, 471, 493, 509, 521, 522, 524, 525, 526, 535, 536, 537, 539, 540, 543, 551, 556, 559, 560, 563, 576, 579, 580, 583, 584, 585, 586, 587, 592, 604, 617, 618, 619, 621, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 748, 749, 750, 751, 753, 754, 759, 760, 761, 768, 777, 787, 788, 791, 792, 822, 827, 833, 835, 837, 838, 839, 871, 874, 876, 877, 883, 884, 885, 887, 888, 890, 891, 894, 896, 903, 920, 922, 939, 941, 942, 944, 954, 965, 968, 970, 971, 972, 973, 974, 975, 976, 979, 984, 987, 988, 991, 996, 999, 1000, 1003, 1004, 1006, 1007, 1008, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1157, 1168], "z": [2, 7, 49, 129, 130, 131, 132, 182, 183, 185, 191, 230, 282, 290, 323, 324, 325, 326, 363, 367, 370, 376, 378, 471, 505, 521, 535, 536, 537, 539, 560, 563, 580, 583, 604, 628, 629, 632, 669, 689, 690, 759, 767, 768, 787, 788, 789, 790, 792, 821, 884, 888, 890, 954, 955, 958, 960, 963, 970, 971, 974, 1069, 1070, 1094, 1095, 1098, 1099, 1102, 1122], "7": [2, 7, 28, 129, 130, 143, 144, 182, 183, 185, 191, 282, 297, 323, 324, 341, 342, 357, 359, 363, 366, 370, 373, 404, 406, 407, 471, 493, 521, 522, 525, 535, 536, 537, 539, 560, 563, 564, 567, 580, 583, 584, 587, 592, 604, 609, 617, 628, 629, 632, 669, 689, 690, 716, 719, 732, 735, 745, 750, 759, 768, 777, 787, 833, 835, 838, 840, 842, 853, 855, 871, 877, 878, 883, 884, 888, 890, 891, 894, 896, 920, 922, 939, 941, 954, 955, 958, 960, 963, 965, 968, 970, 971, 972, 974, 984, 987, 988, 991, 996, 999, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122], "add_ivy_array_instance_method": [2, 159], "cl": [2, 8, 159, 160, 185, 192, 353, 354], "modul": [2, 8, 159, 160, 161, 165, 166, 177, 180, 181, 182, 183, 184, 185, 192, 353, 354, 356, 359, 365, 366, 367, 369, 373, 376, 377, 379, 381, 392, 393, 759, 810, 1057, 1058, 1062, 1136, 1143, 1144, 1145, 1146, 1147, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1171, 1172, 1179, 1180], "to_ignor": [2, 8, 159, 160, 185, 192, 353, 354, 1034, 1045], "loop": [2, 8, 159, 160, 185, 192, 353, 354, 367, 393, 1030, 1031, 1032, 1033], "over": [2, 8, 159, 160, 161, 165, 175, 177, 180, 181, 185, 192, 353, 354, 356, 362, 363, 367, 373, 378, 393, 884, 910, 912, 939, 941, 945, 947, 948, 950, 1052, 1053, 1056, 1057, 1063, 1065, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1171, 1172], "all": [2, 8, 118, 119, 120, 121, 122, 157, 158, 159, 160, 175, 176, 177, 180, 181, 185, 192, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 392, 393, 394, 402, 412, 413, 415, 416, 430, 431, 471, 480, 505, 511, 759, 760, 763, 767, 768, 793, 813, 828, 871, 881, 884, 930, 932, 939, 941, 948, 950, 970, 988, 991, 1004, 1007, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1045, 1046, 1047, 1057, 1058, 1063, 1065, 1127, 1136, 1139, 1141], "gener": [2, 8, 132, 159, 160, 180, 181, 185, 192, 326, 353, 354, 357, 358, 359, 360, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 392, 393, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 712, 715, 732, 735, 736, 739, 760, 763, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 849, 851, 970, 984, 987, 1004, 1007, 1057, 1058, 1059, 1060, 1063, 1065, 1067, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1136, 1173, 1177], "etc": [2, 8, 159, 160, 177, 180, 181, 185, 192, 353, 354, 356, 357, 358, 361, 363, 365, 369, 370, 371, 374, 376, 378, 379, 393, 415, 424, 425, 759, 787, 788, 791, 812, 815, 816, 1057, 1058, 1059, 1060, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "_wrap_funct": [2, 8, 159, 160, 185, 192, 353, 354, 366, 368], "paramet": [2, 8, 118, 119, 120, 121, 122, 159, 160, 161, 165, 166, 180, 181, 182, 183, 184, 185, 192, 353, 354, 361, 362, 365, 378, 379, 392, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 763, 765, 766, 767, 768, 769, 770, 771, 772, 774, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 835, 838, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1139, 1141, 1146, 1147, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "we": [2, 8, 159, 160, 161, 166, 167, 173, 174, 175, 176, 177, 185, 192, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 392, 393, 833, 844, 1136, 1142], "want": [2, 8, 159, 160, 161, 166, 176, 185, 192, 353, 354, 355, 356, 357, 365, 379, 380, 381, 393], "list": [2, 8, 118, 119, 120, 121, 122, 159, 160, 180, 181, 185, 189, 192, 280, 305, 314, 327, 328, 345, 346, 353, 354, 356, 358, 359, 361, 363, 371, 372, 374, 376, 379, 380, 381, 393, 415, 416, 417, 418, 426, 427, 428, 432, 434, 441, 471, 480, 481, 490, 492, 493, 496, 497, 500, 501, 515, 759, 768, 822, 827, 831, 835, 837, 839, 871, 872, 873, 874, 875, 876, 877, 878, 884, 939, 941, 970, 976, 979, 988, 991, 1009, 1014, 1017, 1034, 1035, 1036, 1040, 1045, 1046, 1052, 1053, 1056, 1069, 1072, 1074, 1076, 1077, 1079, 1080, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "option": [2, 8, 118, 119, 120, 121, 122, 159, 160, 161, 166, 180, 181, 182, 183, 185, 192, 353, 354, 356, 357, 361, 362, 363, 366, 370, 371, 372, 373, 374, 376, 381, 393, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 442, 448, 449, 450, 451, 458, 470, 471, 490, 514, 515, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 765, 771, 772, 774, 777, 778, 779, 781, 782, 783, 785, 787, 788, 791, 799, 810, 812, 815, 816, 823, 824, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1040, 1045, 1046, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1073, 1074, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "iter": [2, 8, 118, 119, 120, 121, 122, 159, 160, 177, 180, 181, 182, 183, 184, 185, 192, 353, 354, 370, 376, 379, 412, 413, 471, 493, 494, 496, 497, 498, 499, 502, 515, 759, 760, 763, 816, 821, 970, 980, 983, 996, 999, 1009, 1022, 1025, 1026, 1029, 1034, 1035, 1036, 1040, 1044, 1045, 1046], "ani": [2, 8, 118, 119, 120, 157, 158, 159, 160, 161, 165, 173, 175, 176, 177, 180, 181, 185, 192, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 443, 446, 471, 516, 521, 522, 525, 535, 540, 543, 584, 587, 601, 604, 617, 628, 629, 632, 649, 652, 700, 703, 732, 735, 736, 739, 745, 759, 760, 763, 780, 781, 782, 783, 784, 787, 798, 805, 806, 807, 808, 823, 824, 833, 844, 871, 874, 881, 883, 970, 1004, 1007, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1052, 1053, 1056, 1057, 1063, 1065, 1074, 1076, 1080, 1094, 1099, 1102, 1127, 1128, 1131, 1136], "item": [2, 8, 118, 122, 159, 160, 180, 181, 371, 376, 378, 379, 381, 434, 449, 471, 480, 481, 483, 490, 492, 494, 496, 498, 502, 759, 775, 797, 823, 824, 1034, 1039, 1040, 1041, 1042, 1046, 1050, 1051, 1136, 1169, 1170], "don": [2, 8, 159, 160, 177, 185, 192, 353, 354, 356, 357, 358, 371, 380, 393], "t": [2, 8, 159, 160, 161, 166, 176, 177, 185, 192, 353, 354, 356, 357, 358, 359, 363, 371, 376, 378, 379, 380, 381, 393, 759, 768, 871, 880, 881], "an": [2, 8, 118, 121, 122, 159, 160, 176, 177, 180, 181, 185, 192, 353, 354, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 404, 407, 408, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 446, 454, 459, 460, 462, 471, 493, 497, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 770, 771, 772, 774, 776, 785, 786, 787, 799, 803, 805, 806, 807, 808, 828, 829, 830, 833, 849, 851, 866, 868, 869, 871, 874, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 913, 914, 916, 917, 919, 923, 925, 926, 928, 929, 930, 932, 933, 942, 944, 945, 947, 948, 950, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1040, 1052, 1053, 1056, 1057, 1059, 1060, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1146, 1147, 1169, 1170, 1173, 1174, 1175, 1177], "default": [2, 8, 118, 119, 120, 121, 122, 159, 160, 161, 166, 180, 181, 182, 183, 184, 185, 192, 353, 354, 357, 362, 363, 366, 367, 370, 371, 372, 374, 380, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 442, 449, 450, 451, 452, 471, 480, 481, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 510, 512, 513, 514, 515, 516, 519, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 763, 765, 771, 772, 774, 777, 778, 781, 782, 783, 785, 786, 787, 788, 791, 796, 797, 798, 799, 800, 803, 804, 805, 806, 808, 809, 810, 812, 814, 815, 816, 819, 821, 823, 824, 831, 832, 833, 835, 838, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1047, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1146, 1147, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "As": [2, 8, 159, 160, 175, 185, 192, 353, 354, 357, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 393, 1074, 1075, 1076, 1080, 1082], "shown": [2, 8, 159, 160, 180, 181, 185, 192, 353, 354, 357, 363, 374, 376, 378, 393, 521, 560, 563, 580, 583, 592, 716, 719, 750, 884, 891, 970, 984, 987, 988, 991, 1074, 1075, 1083, 1084, 1087], "appropri": [2, 8, 159, 160, 185, 192, 353, 354, 357, 368, 521, 535, 691, 694, 1069, 1070], "from": [2, 8, 118, 119, 120, 121, 122, 159, 160, 161, 165, 166, 167, 175, 176, 177, 180, 181, 182, 183, 184, 185, 192, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 415, 416, 417, 419, 421, 422, 423, 426, 427, 429, 433, 434, 443, 446, 462, 471, 480, 481, 490, 505, 509, 514, 515, 521, 625, 732, 735, 759, 780, 787, 788, 791, 827, 833, 840, 842, 853, 855, 871, 879, 882, 884, 894, 896, 933, 945, 947, 970, 988, 991, 1000, 1003, 1010, 1013, 1030, 1031, 1032, 1033, 1034, 1036, 1046, 1047, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1069, 1073, 1074, 1075, 1081, 1094, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1142, 1146, 1147, 1157, 1165, 1168, 1173, 1177], "our": [2, 8, 159, 160, 175, 176, 185, 192, 353, 354, 355, 356, 357, 363, 370, 375, 378, 379, 380, 381, 393, 1136], "toi": [2, 8, 159, 160, 185, 192, 353, 354], "arrayexampl": [2, 8, 159, 160], "import": [2, 8, 159, 160, 161, 165, 176, 185, 192, 353, 354, 358, 361, 362, 363, 367, 369, 370, 371, 372, 373, 376, 378, 379, 381, 393, 471, 512, 1136, 1142], "pass": [2, 8, 159, 160, 161, 165, 180, 181, 182, 183, 184, 185, 192, 353, 354, 358, 362, 363, 364, 365, 366, 367, 369, 370, 373, 374, 378, 393, 434, 448, 471, 480, 515, 521, 552, 555, 759, 770, 803, 833, 869, 1030, 1031, 1032, 1146, 1147, 1169, 1170, 1173, 1177, 1179, 1180], "hasattr": [2, 8, 159, 160, 185, 192, 353, 354, 378], "relu": [2, 8, 159, 160, 182, 183, 379, 380, 404, 405, 406, 1136], "softmax": [2, 8, 159, 160, 182, 183, 404, 871, 882, 883, 1136], "true": [2, 8, 10, 12, 25, 94, 103, 125, 126, 131, 132, 139, 140, 153, 154, 159, 160, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 363, 365, 366, 370, 371, 373, 376, 378, 379, 380, 381, 404, 405, 412, 413, 415, 424, 434, 440, 443, 444, 445, 446, 447, 471, 490, 507, 511, 512, 521, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 563, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 583, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 680, 681, 683, 684, 685, 687, 691, 693, 695, 696, 698, 700, 702, 703, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 772, 773, 777, 784, 786, 788, 790, 792, 798, 799, 806, 821, 827, 829, 832, 833, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 871, 879, 884, 885, 887, 906, 908, 910, 912, 933, 934, 936, 948, 950, 954, 955, 957, 958, 959, 960, 962, 963, 964, 965, 967, 968, 969, 970, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1009, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1044, 1045, 1047, 1053, 1055, 1057, 1058, 1063, 1064, 1066, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1101, 1102, 1103, 1105, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1157, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178], "axi": [2, 9, 11, 12, 29, 33, 34, 44, 46, 72, 73, 74, 83, 86, 88, 94, 95, 98, 99, 100, 102, 113, 114, 115, 139, 140, 141, 142, 143, 144, 153, 154, 155, 156, 157, 158, 180, 181, 185, 193, 195, 196, 215, 219, 225, 227, 253, 254, 255, 263, 266, 268, 273, 274, 277, 278, 284, 288, 299, 300, 301, 306, 308, 315, 335, 336, 337, 338, 347, 348, 349, 350, 351, 352, 363, 366, 370, 371, 373, 374, 376, 378, 381, 392, 404, 409, 415, 424, 425, 471, 473, 476, 483, 496, 497, 498, 499, 500, 501, 502, 503, 515, 759, 777, 778, 787, 831, 884, 888, 889, 890, 894, 896, 945, 946, 947, 948, 949, 950, 954, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 976, 977, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 996, 997, 998, 999, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1057, 1068, 1069, 1070, 1071, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "keepdim": [2, 9, 11, 69, 72, 73, 74, 83, 100, 102, 113, 115, 139, 140, 155, 156, 157, 158, 180, 181, 185, 193, 195, 253, 254, 255, 263, 306, 308, 315, 349, 350, 351, 352, 759, 831, 884, 910, 911, 912, 948, 949, 950, 1069, 1070, 1071, 1094, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "fals": [2, 9, 10, 11, 12, 27, 69, 72, 73, 74, 83, 94, 100, 102, 113, 115, 118, 119, 120, 121, 122, 131, 132, 139, 140, 153, 154, 155, 156, 157, 158, 161, 168, 169, 170, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 363, 370, 373, 379, 380, 381, 434, 440, 443, 445, 446, 447, 452, 471, 490, 491, 502, 506, 507, 510, 515, 518, 520, 521, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 563, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 680, 681, 683, 684, 685, 687, 691, 693, 695, 696, 698, 700, 702, 703, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 767, 768, 772, 773, 777, 780, 784, 786, 788, 790, 792, 796, 803, 805, 806, 808, 809, 821, 831, 833, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 884, 885, 886, 887, 906, 908, 910, 911, 912, 933, 948, 949, 950, 955, 957, 959, 960, 962, 964, 965, 967, 969, 970, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1009, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1047, 1053, 1055, 1057, 1058, 1063, 1064, 1066, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1146, 1147, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "all_equ": [2, 131, 132, 185, 283, 325, 326, 759, 764], "equality_matrix": [2, 10, 131, 132, 185, 194, 283, 325, 326, 759, 760, 761, 762, 763, 764], "contain": [2, 10, 118, 121, 122, 131, 132, 175, 178, 179, 180, 181, 184, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 365, 366, 371, 373, 374, 375, 376, 377, 380, 381, 393, 404, 407, 408, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 471, 492, 493, 496, 505, 509, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 761, 763, 765, 768, 771, 772, 774, 776, 777, 784, 787, 788, 791, 798, 807, 827, 828, 829, 833, 835, 838, 840, 845, 849, 853, 857, 861, 871, 874, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 980, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1004, 1007, 1009, 1010, 1014, 1018, 1021, 1022, 1026, 1030, 1031, 1032, 1033, 1034, 1047, 1052, 1053, 1056, 1057, 1058, 1059, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1177, 1179, 1180], "x1": [2, 10, 131, 132, 185, 194, 282, 283, 289, 295, 302, 323, 324, 325, 326, 363, 374, 434, 466, 471, 509, 521, 535, 538, 539, 552, 555, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 600, 601, 604, 612, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 689, 690, 691, 694, 695, 700, 703, 708, 711, 712, 715, 740, 741, 744, 759, 760, 761, 762, 763, 764, 767, 871, 876, 884, 888, 890, 906, 909, 920, 922, 930, 932, 939, 941, 945, 947, 1069, 1073], "mix": [2, 10, 131, 132, 182, 183, 185, 360, 363, 365, 376, 434, 462, 471, 509, 521, 535, 560, 563, 580, 583, 604, 628, 629, 632, 689, 690, 700, 703, 759, 760, 761, 776, 784, 787, 788, 791, 827, 828, 829, 871, 874, 877, 878, 883, 884, 939, 941, 954, 955, 958, 965, 968, 970, 971, 974, 1052, 1053, 1056, 1069, 1073, 1094, 1095, 1098, 1103, 1106, 1122], "nativearrai": [2, 10, 49, 118, 121, 122, 131, 132, 361, 363, 366, 369, 370, 373, 374, 376, 378, 381, 394, 402, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 419, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 440, 441, 442, 443, 446, 452, 454, 457, 459, 460, 462, 466, 471, 490, 491, 493, 509, 515, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 761, 763, 767, 768, 771, 772, 774, 776, 777, 778, 781, 782, 783, 785, 786, 787, 788, 789, 791, 796, 798, 799, 801, 802, 803, 812, 815, 816, 821, 822, 827, 828, 829, 831, 832, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 866, 868, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1036, 1046, 1052, 1053, 1056, 1057, 1058, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "native_arrai": [2, 10, 131, 132, 161, 167, 173, 182, 183, 185, 194, 283, 325, 326, 404, 406, 407, 408, 409, 410, 411, 415, 426, 434, 443, 446, 471, 493, 509, 521, 522, 525, 540, 543, 560, 563, 580, 583, 584, 587, 604, 617, 628, 629, 632, 689, 690, 696, 699, 700, 703, 732, 735, 736, 739, 750, 759, 760, 761, 762, 763, 764, 768, 776, 777, 784, 787, 788, 791, 822, 827, 828, 829, 833, 835, 838, 871, 874, 877, 878, 883, 884, 888, 890, 891, 894, 896, 939, 941, 954, 955, 958, 965, 968, 970, 971, 974, 984, 987, 988, 991, 996, 999, 1009, 1018, 1021, 1052, 1053, 1056, 1057, 1058, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131], "argsort": [2, 153, 154, 185, 347, 348, 1083], "descend": [2, 12, 94, 153, 154, 185, 196, 273, 284, 300, 347, 348, 884, 933, 935, 936, 938, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "stabl": [2, 12, 94, 153, 154, 185, 196, 273, 284, 300, 347, 348, 356, 376, 393, 759, 794, 795, 817, 818, 823, 824, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], "asin": [2, 129, 130, 185, 323, 324, 521, 1136], "asinh": [2, 129, 130, 185, 323, 324, 521, 1136], "atan": [2, 129, 130, 185, 323, 324, 521, 556, 1136], "atan2": [2, 129, 130, 185, 323, 324, 521, 1136], "atanh": [2, 129, 130, 185, 323, 324, 521, 551, 749, 754, 1136], "binary_cross_entropi": [2, 141, 142, 185, 335, 336, 954], "pred": [2, 18, 34, 95, 141, 142, 185, 204, 219, 274, 285, 288, 301, 335, 336, 366, 370, 373, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969], "bitwise_and": [2, 129, 130, 185, 323, 324, 521], "bitwise_invert": [2, 129, 130, 185, 323, 324, 521], "bitwise_left_shift": [2, 129, 130, 185, 323, 324, 521], "bitwise_or": [2, 129, 130, 185, 323, 324, 521], "bitwise_right_shift": [2, 129, 130, 185, 323, 324, 521], "bitwise_xor": [2, 129, 130, 185, 323, 324, 521], "can_cast": [2, 125, 126, 185, 286, 319, 320, 366, 371, 434, 447], "dtype": [2, 25, 83, 102, 125, 126, 155, 156, 180, 181, 185, 211, 263, 286, 308, 319, 320, 349, 350, 361, 363, 366, 371, 372, 378, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 428, 429, 432, 433, 434, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 471, 511, 521, 576, 579, 759, 767, 768, 812, 828, 871, 879, 970, 984, 987, 1052, 1053, 1056, 1057, 1063, 1065, 1069, 1070, 1071, 1083, 1089, 1092, 1094, 1095, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1121, 1127, 1128, 1131, 1136, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1179, 1180], "float32": [2, 25, 125, 126, 185, 211, 286, 319, 320, 363, 371, 434, 438, 439, 443, 444, 445, 446, 447, 455, 1052, 1053, 1056], "float64": [2, 25, 125, 126, 371, 434, 440, 443, 444, 446, 455], "bool": [2, 25, 118, 119, 120, 121, 122, 125, 126, 180, 181, 185, 192, 353, 354, 363, 370, 371, 373, 381, 412, 413, 415, 422, 434, 440, 443, 444, 446, 449, 450, 451, 452, 455, 458, 459, 460, 470, 471, 490, 491, 506, 515, 518, 521, 560, 563, 564, 567, 572, 575, 580, 583, 601, 604, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 673, 676, 677, 680, 681, 684, 700, 703, 759, 760, 763, 767, 768, 777, 780, 784, 786, 796, 798, 803, 805, 806, 807, 808, 821, 831, 832, 833, 866, 884, 885, 887, 910, 912, 933, 948, 950, 970, 1009, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1057, 1058, 1069, 1070, 1071, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "ceil": [2, 129, 130, 185, 323, 324, 415, 416, 521, 1136], "choleski": [2, 139, 140, 182, 183, 884], "upper": [2, 27, 139, 140, 180, 181, 415, 420, 431, 884, 885, 886, 887, 926, 928, 1057, 1063, 1065], "clip": [2, 143, 144, 180, 181, 185, 287, 337, 338, 366, 370, 373, 376, 379, 381, 521, 689, 690, 759, 771, 772, 774, 970, 975, 1136], "x_min": [2, 28, 143, 144, 180, 181, 185, 213, 287, 337, 338, 376, 381, 970, 971, 972, 973, 974, 975], "x_max": [2, 28, 143, 144, 180, 181, 185, 213, 287, 337, 338, 376, 381, 970, 971, 972, 973, 974, 975], "roll": [2, 28, 143, 144, 185, 299, 337, 338, 370, 374, 970, 971, 972, 1008], "8": [2, 28, 143, 144, 182, 183, 185, 282, 297, 323, 324, 341, 342, 356, 359, 363, 370, 375, 379, 404, 408, 471, 493, 521, 535, 539, 560, 563, 584, 587, 592, 604, 628, 629, 632, 669, 689, 690, 716, 719, 732, 735, 736, 739, 750, 759, 768, 787, 833, 835, 838, 871, 878, 884, 888, 890, 891, 894, 896, 920, 922, 939, 941, 954, 955, 958, 970, 971, 972, 974, 988, 991, 996, 999, 1009, 1057, 1058, 1059, 1060, 1061, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122, 1136, 1157, 1168], "concat": [2, 143, 144, 180, 181, 185, 337, 338, 471, 500, 501, 502, 503, 515, 759, 786, 970, 1136], "xs": [2, 29, 143, 144, 185, 215, 337, 338, 370, 471, 494, 498, 500, 501, 502, 759, 760, 763, 768, 833, 844, 970, 976, 977, 978, 979], "constant_pad": [2, 143, 144, 185, 337, 338, 970], "pad_width": [2, 30, 117, 143, 144, 185, 216, 316, 337, 338, 970, 980, 981, 982, 983, 1026, 1027, 1028, 1029], "valu": [2, 30, 112, 143, 144, 151, 152, 180, 181, 182, 183, 184, 185, 216, 316, 337, 338, 357, 363, 365, 366, 370, 371, 372, 373, 374, 376, 378, 381, 393, 415, 416, 420, 422, 423, 424, 425, 434, 440, 449, 450, 451, 471, 483, 514, 515, 521, 522, 525, 527, 535, 540, 543, 548, 584, 587, 599, 601, 604, 605, 608, 617, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 689, 690, 691, 694, 700, 703, 704, 707, 708, 711, 716, 719, 750, 755, 758, 759, 771, 772, 774, 775, 780, 786, 787, 788, 791, 797, 800, 804, 814, 815, 816, 817, 818, 819, 832, 833, 835, 838, 840, 842, 844, 853, 855, 866, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 882, 883, 884, 893, 905, 914, 916, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 948, 950, 970, 971, 974, 980, 981, 982, 983, 996, 999, 1000, 1003, 1026, 1028, 1029, 1030, 1031, 1032, 1034, 1038, 1039, 1040, 1041, 1042, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177], "co": [2, 129, 130, 176, 185, 323, 324, 376, 392, 521, 530, 531, 595, 759, 786, 1136], "cosh": [2, 129, 130, 185, 323, 324, 521, 530, 531, 1136], "cross": [2, 139, 140, 182, 183, 884, 954, 955, 958, 960, 963, 965, 968, 1136], "cross_entropi": [2, 141, 142, 185, 335, 336, 366, 370, 373, 954, 965, 968], "det": [2, 139, 140, 182, 183, 884, 929], "diagon": [2, 139, 140, 182, 183, 415, 420, 430, 431, 884, 942, 944], "offset": [2, 36, 56, 110, 139, 140, 145, 146, 185, 240, 339, 340, 884, 894, 895, 896, 942, 943, 944, 1052, 1053, 1054, 1055, 1056], "axis1": [2, 36, 105, 139, 140, 143, 144, 185, 309, 337, 338, 884, 894, 895, 896, 970, 1018, 1019, 1020, 1021], "axis2": [2, 36, 139, 140, 884, 894, 895, 896], "divid": [2, 129, 130, 180, 181, 185, 323, 324, 363, 369, 521, 620, 621, 624, 759, 823, 970, 1009], "eigh": [2, 139, 140, 182, 183, 884], "namedtupl": [2, 38, 84, 139, 140, 884, 897, 898, 899, 926, 927, 928, 933, 1074, 1075, 1076, 1080], "eigvalsh": [2, 139, 140, 182, 183, 884], "einsum": [2, 155, 156, 185, 349, 350, 1094, 1122], "equat": [2, 40, 155, 156, 185, 221, 349, 350, 884, 930, 932, 1094, 1095, 1096, 1097, 1098, 1122], "equal": [2, 129, 130, 180, 181, 185, 323, 324, 363, 370, 371, 415, 420, 422, 423, 434, 440, 521, 568, 571, 576, 579, 629, 633, 636, 637, 640, 708, 711, 716, 719, 759, 760, 763, 767, 768, 884, 894, 896, 905, 914, 916, 923, 925, 970, 971, 974, 980, 983, 1009, 1026, 1029, 1057, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1103, 1106, 1115, 1118, 1119, 1123, 1126], "erf": [2, 129, 130, 185, 323, 324, 521], "exp": [2, 129, 130, 185, 323, 324, 521, 538, 613, 616, 669, 672, 1136], "expand_dim": [2, 143, 144, 185, 337, 338, 376, 379, 970, 1136], "expm1": [2, 129, 130, 185, 323, 324, 521], "flip": [2, 143, 144, 185, 337, 338, 378, 379, 381, 521, 564, 567, 970, 996, 999, 1136], "floor": [2, 129, 130, 185, 323, 324, 521, 576, 579, 621, 759, 785, 1136], "floor_divid": [2, 129, 130, 185, 323, 324, 521, 599, 620], "gather_nd": [2, 131, 132, 180, 181, 185, 290, 325, 326, 759, 792, 1136], "indic": [2, 49, 131, 132, 180, 181, 185, 230, 290, 325, 326, 359, 377, 381, 404, 409, 521, 720, 723, 759, 787, 788, 789, 790, 791, 792, 799, 812, 815, 816, 871, 872, 873, 874, 875, 876, 877, 878, 884, 948, 950, 970, 1004, 1007, 1034, 1035, 1037, 1039, 1041, 1042, 1043, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1069, 1070, 1071, 1072, 1074, 1075, 1081, 1083, 1084, 1087, 1089, 1092, 1136, 1139, 1141, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1169, 1170], "union": [2, 49, 103, 118, 121, 122, 131, 132, 139, 140, 180, 181, 361, 363, 366, 369, 370, 371, 372, 373, 374, 376, 381, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 504, 510, 512, 514, 515, 516, 517, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 763, 767, 768, 771, 772, 774, 777, 778, 781, 782, 783, 785, 786, 787, 788, 789, 791, 796, 798, 799, 801, 802, 803, 812, 815, 816, 821, 822, 827, 828, 829, 831, 832, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 866, 868, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1045, 1046, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "greater": [2, 129, 130, 180, 181, 185, 323, 324, 521, 527, 540, 543, 552, 555, 568, 571, 576, 579, 599, 604, 617, 620, 621, 624, 629, 708, 711, 712, 715, 720, 723, 755, 758, 884, 888, 890, 970, 1010, 1013, 1057, 1063, 1065], "greater_equ": [2, 129, 130, 185, 323, 324, 521, 604, 628], "inv": [2, 139, 140, 182, 183, 378, 884, 923, 1136], "isfinit": [2, 129, 130, 185, 323, 324, 521], "isinf": [2, 129, 130, 185, 323, 324, 521], "isnan": [2, 129, 130, 185, 323, 324, 521], "layer_norm": [2, 145, 146, 185, 339, 340, 1052], "normalized_idx": [2, 56, 145, 146, 185, 240, 339, 340, 1052, 1053, 1054, 1055, 1056], "05": [2, 56, 145, 146, 185, 240, 339, 340, 471, 833, 835, 838, 1052, 1053, 1054, 1055, 1056], "scale": [2, 56, 145, 146, 185, 240, 339, 340, 370, 471, 513, 514, 833, 857, 859, 871, 879, 882, 883, 1052, 1053, 1054, 1055, 1056, 1157, 1165, 1168, 1173, 1176], "new_std": [2, 56, 145, 146, 185, 240, 339, 340, 1052, 1053, 1054, 1055, 1056, 1171, 1172], "less": [2, 129, 130, 176, 180, 181, 185, 323, 324, 357, 363, 370, 374, 375, 376, 521, 527, 530, 531, 534, 540, 543, 552, 555, 584, 587, 591, 595, 653, 656, 657, 660, 665, 668, 708, 711, 712, 715, 720, 723, 732, 735, 884, 905, 914, 916, 923, 925, 948, 950, 1057, 1063, 1065, 1094, 1123, 1126], "less_equ": [2, 129, 130, 185, 323, 324, 521], "log": [2, 129, 130, 185, 323, 324, 356, 357, 366, 370, 373, 376, 379, 415, 425, 521, 538, 612, 661, 664, 669, 672, 884, 893, 929, 1136], "log10": [2, 129, 130, 185, 323, 324, 521], "log1p": [2, 129, 130, 185, 323, 324, 521], "log2": [2, 129, 130, 185, 323, 324, 521], "logaddexp": [2, 129, 130, 185, 323, 324, 521, 538, 612], "logical_and": [2, 129, 130, 185, 323, 324, 521, 1136], "logical_not": [2, 129, 130, 185, 323, 324, 521, 1136], "logical_or": [2, 129, 130, 185, 323, 324, 521, 1136], "logical_xor": [2, 129, 130, 185, 323, 324, 521], "matmul": [2, 139, 140, 185, 333, 334, 361, 367, 376, 884, 933, 1136], "matrix_norm": [2, 139, 140, 180, 181, 884], "ord": [2, 69, 115, 139, 140, 180, 181, 884, 910, 911, 912, 948, 949, 950], "fro": [2, 69, 139, 140, 884, 910, 911, 912], "matrix_rank": [2, 139, 140, 182, 183, 884], "rtol": [2, 70, 80, 139, 140, 884, 905, 914, 915, 916, 923, 924, 925], "matrix_transpos": [2, 139, 140, 182, 183, 378, 884], "max": [2, 155, 156, 180, 181, 185, 349, 350, 434, 454, 457, 521, 689, 759, 771, 772, 774, 782, 815, 816, 884, 905, 914, 916, 923, 925, 1094, 1173, 1175], "mean": [2, 155, 156, 180, 181, 185, 192, 349, 350, 353, 354, 356, 357, 360, 363, 366, 370, 371, 372, 373, 376, 378, 379, 380, 381, 392, 393, 471, 500, 501, 502, 503, 515, 759, 782, 1030, 1031, 1032, 1033, 1034, 1040, 1057, 1062, 1074, 1075, 1094, 1136, 1148], "min": [2, 155, 156, 180, 181, 185, 349, 350, 434, 454, 457, 521, 690, 759, 782, 815, 816, 823, 884, 926, 928, 933, 935, 936, 938, 948, 950, 1094], "multipli": [2, 129, 130, 185, 323, 324, 363, 367, 369, 521, 759, 777], "neg": [2, 129, 130, 185, 323, 324, 366, 370, 373, 404, 406, 415, 416, 420, 521, 633, 636, 637, 640, 691, 694, 708, 711, 712, 715, 884, 933, 945, 947, 948, 950, 970, 988, 991, 1004, 1007, 1127, 1128, 1131, 1132, 1135], "not_equ": [2, 129, 130, 185, 323, 324, 521], "outer": [2, 139, 140, 182, 183, 884, 1030, 1031, 1032, 1033], "permute_dim": [2, 143, 144, 185, 337, 338, 970], "ax": [2, 79, 108, 139, 140, 143, 144, 180, 181, 185, 260, 337, 338, 361, 363, 371, 378, 471, 515, 759, 777, 884, 910, 912, 930, 932, 939, 940, 941, 948, 950, 970, 980, 983, 988, 991, 992, 993, 994, 995, 1004, 1007, 1010, 1013, 1018, 1021, 1026, 1029, 1069, 1070, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "pinv": [2, 139, 140, 182, 183, 884, 905, 1136], "posit": [2, 118, 119, 120, 129, 130, 185, 323, 324, 374, 379, 392, 414, 415, 420, 434, 454, 471, 495, 499, 503, 521, 522, 525, 633, 636, 637, 640, 691, 694, 712, 715, 759, 786, 884, 885, 887, 970, 984, 987, 1004, 1007, 1057, 1067, 1069, 1072, 1127, 1128, 1131, 1132, 1135, 1146, 1147], "pow": [2, 129, 130, 185, 323, 324, 521], "prod": [2, 155, 156, 180, 181, 185, 349, 350, 363, 371, 759, 782, 1094], "qr": [2, 139, 140, 182, 183, 884], "mode": [2, 84, 139, 140, 180, 181, 356, 363, 370, 393, 412, 413, 471, 500, 501, 502, 503, 515, 521, 535, 691, 694, 884, 926, 927, 928], "reduc": [2, 84, 139, 140, 180, 181, 378, 471, 515, 759, 782, 884, 926, 927, 928, 1069, 1070, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "remaind": [2, 129, 130, 180, 181, 185, 323, 324, 521, 759, 785, 970, 1009], "repeat": [2, 143, 144, 180, 181, 185, 337, 338, 357, 362, 363, 367, 369, 370, 759, 783, 970, 1022, 1025], "reshap": [2, 143, 144, 180, 181, 185, 337, 338, 373, 376, 378, 381, 970, 1136], "shape": [2, 87, 143, 144, 180, 181, 185, 189, 267, 280, 297, 298, 305, 314, 327, 328, 337, 338, 341, 342, 345, 346, 357, 361, 362, 363, 371, 372, 373, 374, 376, 378, 379, 380, 381, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 471, 483, 511, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 781, 782, 783, 785, 788, 791, 796, 799, 812, 815, 816, 822, 833, 835, 837, 839, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1077, 1079, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1122, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1171, 1172], "shift": [2, 88, 143, 144, 185, 268, 299, 337, 338, 363, 374, 521, 568, 571, 576, 579, 970, 1004, 1005, 1006, 1007, 1008], "round": [2, 129, 130, 175, 176, 177, 185, 323, 324, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 521, 535, 584, 587, 599, 617, 620, 621, 624, 691, 694, 732, 735, 755, 758, 1136], "sign": [2, 129, 130, 176, 185, 323, 324, 356, 377, 381, 415, 416, 521, 522, 525, 535, 552, 555, 576, 579, 691, 694, 712, 715, 884, 893, 929, 1074, 1075, 1076, 1080, 1082, 1094, 1111, 1114, 1119], "sin": [2, 129, 130, 185, 323, 324, 369, 376, 521, 759, 786, 1136], "sinh": [2, 129, 130, 185, 323, 324, 521, 1136], "solv": [2, 139, 140, 182, 183, 377, 392, 884], "sort": [2, 154, 180, 181, 182, 183, 184, 185, 348, 361, 884, 897, 899, 933, 935, 936, 938, 1084, 1087], "sparse_cross_entropi": [2, 141, 142, 185, 335, 336, 954], "sqrt": [2, 129, 130, 185, 323, 324, 521, 884, 948, 950], "squar": [2, 129, 130, 185, 323, 324, 521, 732, 735, 871, 874, 884, 885, 887, 891, 893, 897, 899, 900, 902, 903, 913, 929, 930, 932, 933], "squeez": [2, 143, 144, 185, 337, 338, 970, 1136], "stack": [2, 143, 144, 180, 181, 185, 337, 338, 376, 415, 430, 431, 884, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 913, 914, 916, 917, 919, 923, 925, 926, 928, 933, 935, 936, 938, 942, 944, 970, 1034, 1035, 1044, 1045, 1136, 1157, 1166], "std": [2, 155, 156, 185, 349, 350, 363, 1057, 1062, 1074, 1075, 1094], "correct": [2, 100, 113, 155, 156, 185, 306, 315, 349, 350, 357, 358, 360, 366, 370, 371, 372, 374, 434, 466, 970, 971, 974, 1094, 1115, 1116, 1117, 1118, 1123, 1124, 1125, 1126, 1136], "subtract": [2, 129, 130, 185, 323, 324, 363, 369, 521], "sum": [2, 155, 156, 180, 181, 185, 349, 350, 366, 370, 371, 373, 376, 471, 500, 501, 502, 503, 515, 521, 535, 538, 612, 669, 672, 759, 778, 782, 815, 816, 871, 883, 884, 933, 942, 944, 948, 950, 1094, 1095, 1098, 1115, 1118], "svd": [2, 139, 140, 182, 183, 884, 936, 1136], "full_matric": [2, 103, 139, 140, 884, 933, 934, 936], "tupl": [2, 103, 112, 118, 119, 120, 121, 122, 139, 140, 151, 152, 180, 181, 361, 370, 371, 372, 374, 378, 379, 380, 393, 415, 417, 418, 422, 427, 428, 432, 434, 442, 456, 471, 490, 759, 786, 822, 871, 874, 877, 878, 881, 884, 905, 914, 916, 923, 925, 933, 934, 936, 939, 941, 948, 950, 970, 976, 979, 980, 983, 988, 991, 992, 995, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1039, 1041, 1042, 1043, 1045, 1046, 1048, 1049, 1050, 1051, 1057, 1062, 1063, 1065, 1069, 1072, 1074, 1075, 1076, 1078, 1080, 1081, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "svdval": [2, 139, 140, 182, 183, 884, 935], "swapax": [2, 143, 144, 185, 337, 338, 970], "axis0": [2, 105, 143, 144, 185, 309, 337, 338, 970, 1018, 1019, 1020, 1021], "tan": [2, 129, 130, 185, 303, 323, 324, 362, 366, 370, 373, 374, 376, 521, 540, 543, 551, 556, 746, 754, 1074, 1075, 1083, 1084, 1087, 1136], "56": [2, 106, 129, 130, 185, 303, 310, 323, 324, 363, 521, 551, 556, 732, 735, 745, 746, 747, 748, 754, 833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "19": [2, 106, 129, 130, 185, 303, 310, 323, 324, 363, 521, 551, 556, 580, 583, 745, 746, 747, 748, 754, 884, 894, 896], "tanh": [2, 129, 130, 185, 304, 323, 324, 376, 404, 521, 551, 556, 751, 1136], "762": [2, 107, 129, 130, 185, 311, 323, 324, 404, 411, 521, 551, 556, 750, 752, 753], "964": [2, 107, 129, 130, 185, 311, 323, 324, 404, 411, 521, 551, 556, 750, 752, 753], "tensordot": [2, 139, 140, 182, 183, 884], "tile": [2, 143, 144, 185, 337, 338, 970, 1136], "rep": [2, 109, 143, 144, 185, 312, 337, 338, 970, 1022, 1023, 1024, 1025], "trace": [2, 139, 140, 180, 181, 182, 183, 376, 393, 759, 805, 806, 808, 884], "trunc": [2, 129, 130, 185, 323, 324, 521], "unique_count": [2, 151, 152, 185, 305, 345, 346, 1074, 1077], "uc": [2, 112, 151, 152, 1076, 1078], "count": [2, 112, 151, 152, 363, 379, 471, 509, 884, 945, 947, 970, 988, 991, 1074, 1075, 1076, 1078, 1080, 1127, 1128, 1131, 1132, 1135], "var": [2, 155, 156, 185, 192, 349, 350, 353, 354, 363, 376, 1030, 1031, 1032, 1094], "vecdot": [2, 139, 140, 182, 183, 884], "vector_norm": [2, 139, 140, 180, 181, 884], "vector_to_skew_symmetric_matrix": [2, 139, 140, 182, 183, 884, 1136], "zero_pad": [2, 143, 144, 185, 337, 338, 970, 1136], "method": [3, 6, 7, 8, 10, 25, 26, 28, 47, 49, 88, 106, 107, 112, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 151, 152, 159, 160, 180, 181, 182, 183, 184, 186, 189, 191, 192, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 353, 354, 358, 361, 362, 363, 365, 366, 369, 374, 376, 377, 380, 381, 393, 404, 406, 407, 408, 409, 410, 411, 415, 421, 443, 444, 445, 447, 521, 522, 523, 524, 526, 536, 537, 539, 540, 543, 551, 556, 560, 563, 580, 583, 584, 585, 586, 587, 592, 604, 617, 618, 619, 621, 628, 629, 632, 669, 689, 690, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 746, 747, 748, 750, 751, 752, 753, 754, 759, 760, 761, 762, 764, 775, 776, 787, 788, 789, 790, 792, 815, 816, 827, 829, 833, 835, 836, 837, 839, 853, 855, 857, 859, 871, 877, 883, 884, 885, 887, 888, 890, 891, 954, 955, 958, 970, 971, 972, 973, 975, 984, 987, 988, 991, 996, 999, 1004, 1005, 1006, 1008, 1009, 1018, 1021, 1034, 1035, 1045, 1046, 1047, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1136, 1157, 1168, 1169, 1170], "collect": [118, 180, 181, 365, 392, 404, 412, 471, 759, 833, 871, 954, 1034, 1047, 1052, 1057, 1143, 1157, 1171, 1173], "accept": [118, 356, 357, 362, 363, 365, 366, 369, 370, 372, 373, 374, 378, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 677, 680, 681, 684, 700, 703, 712, 715, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1103, 1106, 1127, 1128, 1131, 1136], "args_to_ivi": 118, "arg": [118, 119, 120, 161, 165, 180, 181, 359, 376, 378, 380, 471, 480, 495, 499, 503, 515, 759, 816, 1146, 1147, 1169, 1170], "include_deriv": [118, 119, 120, 121, 122, 1034, 1036, 1046], "kwarg": [118, 119, 120, 161, 165, 178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 376, 378, 380, 471, 480, 495, 499, 503, 759, 809, 1146, 1147, 1169, 1170], "keyword": [118, 119, 120, 180, 181, 182, 183, 184, 361, 371, 372, 373, 374, 379, 415, 426, 471, 480, 481, 495, 499, 503, 759, 766, 809, 1034, 1040, 1094, 1119, 1169, 1170], "variabl": [118, 119, 120, 121, 122, 180, 181, 182, 183, 362, 367, 370, 371, 373, 374, 379, 380, 381, 393, 759, 769, 801, 802, 803, 804, 805, 806, 808, 825, 833, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 866, 869, 871, 882, 884, 930, 932, 1030, 1031, 1032, 1033, 1052, 1053, 1056, 1136, 1146, 1147, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "form": [118, 119, 120, 121, 122, 176, 180, 181, 355, 366, 380, 381, 415, 417, 427, 430, 431, 759, 765, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 914, 916, 917, 919, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 1034, 1036, 1046], "nest": [118, 119, 120, 121, 122, 180, 181, 182, 183, 184, 361, 366, 369, 370, 378, 379, 380, 393, 471, 495, 499, 503, 759, 827, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "otherwis": [118, 119, 120, 121, 122, 161, 173, 180, 181, 369, 371, 372, 374, 376, 378, 415, 416, 434, 440, 443, 446, 449, 450, 451, 471, 490, 521, 633, 636, 637, 640, 641, 644, 759, 769, 830, 833, 849, 851, 866, 884, 885, 887, 891, 945, 947, 948, 950, 1030, 1031, 1032, 1034, 1047, 1069, 1070, 1071, 1073, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "argument": [118, 119, 120, 121, 122, 161, 165, 166, 175, 180, 181, 182, 183, 184, 358, 360, 361, 362, 363, 365, 366, 367, 369, 370, 376, 378, 379, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 462, 471, 480, 481, 495, 499, 503, 521, 522, 525, 535, 540, 543, 584, 587, 617, 700, 703, 732, 735, 736, 739, 745, 759, 765, 766, 770, 780, 787, 809, 816, 871, 874, 883, 970, 1004, 1007, 1034, 1040, 1052, 1053, 1056, 1074, 1076, 1080, 1094, 1099, 1102, 1119, 1127, 1128, 1131, 1139, 1141, 1146, 1147, 1169, 1170], "ar": [118, 119, 120, 175, 176, 177, 180, 181, 182, 183, 184, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 393, 394, 402, 415, 416, 471, 480, 481, 505, 509, 511, 515, 521, 588, 677, 680, 681, 684, 716, 719, 724, 727, 745, 759, 760, 763, 767, 768, 769, 793, 799, 800, 804, 811, 813, 825, 871, 880, 884, 888, 890, 905, 906, 909, 910, 912, 914, 916, 923, 925, 933, 935, 936, 938, 945, 947, 970, 971, 974, 988, 991, 1004, 1007, 1034, 1036, 1040, 1046, 1057, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1074, 1075, 1136, 1179, 1180], "unchang": [118, 119, 120, 121, 122], "The": [118, 119, 120, 121, 122, 161, 165, 166, 174, 175, 177, 180, 181, 182, 183, 184, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 392, 404, 405, 406, 409, 411, 412, 413, 415, 416, 421, 425, 430, 431, 434, 438, 439, 440, 448, 453, 455, 456, 458, 461, 466, 470, 471, 480, 481, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 510, 511, 512, 513, 514, 515, 517, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 745, 749, 750, 754, 755, 758, 759, 765, 767, 770, 771, 779, 780, 786, 788, 791, 801, 802, 803, 805, 806, 807, 808, 810, 815, 816, 817, 818, 819, 822, 823, 824, 832, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 866, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1009, 1022, 1025, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1062, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1146, 1147, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "check": [118, 119, 120, 121, 122, 175, 176, 177, 180, 181, 356, 357, 370, 375, 376, 378, 379, 380, 381, 392, 434, 448, 455, 456, 458, 470, 471, 510, 520, 759, 769, 784, 798, 805, 806, 807, 808, 825, 832, 833, 849, 851, 884, 897, 899, 1034, 1035, 1044, 1045, 1046, 1136], "dict": [118, 119, 120, 121, 122, 161, 173, 180, 181, 182, 183, 184, 370, 379, 380, 471, 480, 481, 490, 493, 496, 497, 498, 499, 759, 765, 781, 782, 783, 1034, 1036, 1037, 1040, 1043, 1046, 1047], "whether": [118, 119, 120, 121, 122, 180, 181, 182, 183, 184, 185, 192, 353, 354, 355, 356, 371, 373, 374, 404, 405, 412, 413, 434, 440, 452, 458, 459, 460, 470, 471, 490, 491, 502, 506, 507, 510, 511, 515, 518, 520, 521, 641, 644, 759, 760, 763, 767, 768, 777, 780, 784, 786, 796, 798, 800, 803, 804, 805, 806, 807, 808, 809, 821, 825, 831, 832, 833, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 866, 871, 879, 884, 897, 899, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1047, 1057, 1058, 1127, 1128, 1131, 1132, 1135, 1146, 1147, 1157, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178], "recurs": [118, 119, 120, 121, 122, 180, 181, 356, 359, 366, 370, 380, 393, 1034, 1035, 1036, 1044, 1045, 1046], "deriv": [118, 119, 120, 121, 122, 371, 372, 378, 380, 415, 419, 423, 429, 433, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1034, 1036, 1046, 1169, 1173, 1177, 1179], "str": [118, 119, 120, 161, 166, 180, 181, 371, 372, 412, 413, 415, 426, 434, 438, 448, 449, 450, 453, 454, 457, 458, 459, 460, 463, 464, 465, 470, 471, 487, 490, 491, 493, 496, 497, 498, 499, 515, 759, 765, 779, 781, 782, 783, 810, 815, 816, 871, 872, 874, 876, 877, 878, 884, 926, 928, 1030, 1031, 1032, 1033, 1034, 1040, 1094, 1095, 1098, 1122], "kei": [118, 119, 120, 180, 181, 182, 183, 184, 370, 379, 471, 483, 759, 765, 775, 871, 882, 883, 1030, 1031, 1032, 1034, 1037, 1043, 1047, 1146, 1147, 1157, 1168, 1173, 1177], "word": [118, 119, 120, 415, 416, 1057, 1063, 1065, 1146, 1147], "ret": [118, 119, 120, 121, 122, 161, 165, 166, 173, 180, 181, 361, 362, 376, 381, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 446, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 470, 471, 480, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 514, 515, 516, 517, 518, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 763, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 815, 816, 821, 823, 824, 825, 827, 828, 829, 831, 832, 833, 835, 838, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1044, 1045, 1046, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1139, 1141, 1146, 1147, 1173, 1177], "same": [118, 119, 120, 175, 177, 180, 181, 356, 357, 359, 361, 363, 365, 366, 369, 370, 372, 373, 374, 376, 378, 380, 381, 415, 416, 419, 423, 426, 429, 430, 431, 433, 434, 440, 441, 442, 471, 480, 481, 515, 521, 522, 525, 535, 564, 567, 584, 587, 617, 691, 694, 712, 715, 716, 719, 720, 723, 755, 758, 759, 785, 787, 788, 791, 812, 815, 816, 833, 849, 851, 866, 871, 872, 873, 874, 875, 876, 877, 878, 883, 884, 885, 887, 888, 890, 891, 894, 896, 897, 899, 900, 902, 903, 905, 917, 919, 923, 925, 926, 928, 930, 932, 933, 942, 944, 945, 947, 970, 976, 979, 988, 991, 992, 995, 1004, 1007, 1010, 1013, 1014, 1017, 1030, 1031, 1032, 1034, 1047, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1119, 1122, 1123, 1126, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "convert": [118, 119, 120, 121, 122, 177, 180, 181, 369, 376, 393, 394, 402, 415, 417, 427, 434, 438, 439, 471, 487, 488, 489, 490, 510, 517, 520, 759, 822, 828, 829, 884, 951, 953, 1034, 1036, 1046, 1047, 1147], "args_to_n": [118, 373, 378], "nativ": [118, 120, 121, 122, 161, 167, 180, 181, 371, 373, 378, 379, 415, 427, 434, 438, 439, 448, 471, 487, 488, 489, 490, 491, 510, 517, 520, 759, 803, 805, 808, 1146, 1147], "backend": [118, 120, 122, 165, 166, 167, 173, 175, 180, 181, 357, 358, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 377, 378, 381, 434, 455, 456, 458, 470, 471, 506, 508, 518, 759, 800, 803, 804, 810, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 869, 1136, 1142, 1146, 1147, 1173, 1174, 1175, 1176, 1177, 1178], "to_ivi": [118, 180, 181, 378, 1034, 1047], "If": [118, 121, 122, 161, 165, 166, 167, 175, 180, 181, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 381, 393, 415, 416, 418, 419, 420, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 440, 442, 462, 471, 490, 514, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 677, 680, 681, 684, 691, 694, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 759, 803, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 885, 887, 888, 890, 905, 910, 912, 914, 916, 923, 925, 926, 928, 930, 932, 933, 945, 947, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 984, 987, 988, 991, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1030, 1031, 1032, 1034, 1046, 1047, 1057, 1062, 1063, 1065, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "set": [118, 121, 122, 152, 161, 165, 166, 167, 173, 175, 180, 181, 346, 355, 357, 360, 361, 366, 368, 369, 370, 371, 372, 373, 376, 378, 379, 471, 490, 500, 501, 512, 513, 514, 515, 521, 552, 555, 759, 760, 763, 817, 818, 819, 820, 833, 840, 842, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 884, 888, 890, 905, 910, 912, 914, 916, 923, 925, 930, 932, 1034, 1035, 1044, 1045, 1046, 1050, 1051, 1057, 1067, 1069, 1070, 1075, 1076, 1080, 1081, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1115, 1118, 1123, 1126, 1157, 1166, 1173, 1174, 1175, 1176, 1177, 1178], "leaf": [118, 121, 122, 180, 181, 366, 370, 379, 1034, 1035, 1044, 1045], "within": [118, 121, 122, 357, 365, 380, 393, 415, 416, 1057, 1063, 1065], "mayb": [118, 121, 122, 356, 376, 378], "manner": [118, 121, 122, 175, 180, 181, 361, 362, 372, 379, 392, 393, 1034, 1046], "travers": [118, 121, 122, 180, 181, 370, 376, 378, 1034, 1046], "lowest": [118, 121, 122, 180, 181, 366, 393, 1034, 1046, 1057, 1059, 1060], "leav": [118, 121, 122, 180, 181, 182, 183, 185, 362, 363, 365, 366, 370, 371, 373, 374, 379, 380, 970, 1014, 1017, 1034, 1035, 1036, 1044, 1045, 1046], "search": [118, 121, 122, 150, 175, 180, 181, 344, 356, 361, 363, 365, 1070, 1071, 1072, 1073], "s": [118, 121, 122, 161, 165, 166, 167, 173, 176, 177, 180, 181, 355, 356, 357, 359, 360, 362, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 414, 415, 426, 430, 431, 434, 455, 456, 471, 490, 514, 521, 712, 715, 759, 768, 833, 840, 842, 845, 847, 853, 855, 861, 863, 884, 933, 935, 936, 938, 1034, 1040, 1046, 1094, 1115, 1118, 1123, 1126, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "case": [118, 121, 122, 176, 180, 181, 182, 183, 184, 356, 357, 358, 361, 362, 363, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 380, 381, 393, 415, 426, 471, 510, 517, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 580, 583, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 759, 803, 815, 816, 884, 910, 912, 970, 1000, 1003, 1034, 1037, 1043, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126, 1157, 1168, 1169, 1170, 1173, 1177], "to_n": [118, 180, 181], "convers": [119, 120, 121, 122, 177, 180, 181, 375, 377, 381, 392, 393, 1136, 1142], "arraywithcr": 123, "creation": [124, 180, 181, 182, 183, 184, 318, 361, 371, 372, 376, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "data_typ": [125, 126, 319, 320, 361, 371, 434, 438, 439, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470], "arraywithdatatyp": 125, "arraywithdevic": [127, 378], "devic": [128, 176, 180, 181, 185, 264, 297, 298, 322, 341, 342, 357, 360, 361, 366, 368, 371, 378, 379, 393, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 759, 787, 788, 791, 812, 815, 816, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1146, 1147, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "arraywithelementwis": [129, 358, 369], "elementwis": [130, 180, 181, 324, 361, 366, 376, 381, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758], "arraywithgener": [131, 378], "arraywithgradi": [133, 378], "gradient": [134, 180, 181, 328, 361, 370, 379, 380, 392, 393, 471, 515, 835, 838, 840, 842, 844, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 866, 867, 868, 869, 870, 1030, 1031, 1032, 1033, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "arraywithimag": [135, 378], "imag": [136, 330, 356, 359, 361, 376, 377, 379, 381, 392, 871, 872, 873, 874, 875, 877, 878, 1136], "arraywithlay": 137, "layer": [138, 175, 332, 361, 362, 376, 377, 380, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 1052, 1053, 1056, 1136, 1148, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "linear_algebra": [139, 140, 333, 334, 361, 378, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 913, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953], "arraywithlinearalgebra": 139, "arraywithloss": 141, "loss": [142, 336, 361, 366, 379, 380, 381, 955, 958, 960, 963, 965, 968, 1136], "arraywithmanipul": 143, "manipul": [144, 175, 338, 361, 381, 392, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029], "arraywithnorm": 145, "norm": [146, 180, 181, 340, 361, 759, 771, 772, 774, 884, 910, 912, 948, 950, 1053, 1056, 1136, 1172, 1173, 1175], "arraywithrandom": [147, 378], "random": [148, 180, 181, 342, 361, 372, 381, 392, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1068, 1136], "arraywithsearch": 149, "arraywithset": 151, "arraywithsort": 153, "arraywithstatist": 155, "statist": [156, 185, 192, 350, 353, 354, 361, 371, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126], "arraywithutil": 157, "util": [158, 352, 361, 372, 471, 504, 1128, 1131, 1132, 1135], "backend_handl": [161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 1136], "contextmanag": [161, 162], "object": [161, 180, 181, 182, 183, 184, 185, 378, 381, 415, 421, 434, 454, 471, 516, 833, 1034, 1037, 1039, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1057, 1068, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1169, 1170], "__init__": [161, 162, 165, 166, 180, 181, 182, 183, 184, 185, 361, 367, 371, 376, 378, 379, 380, 381, 434, 435, 436, 437, 471, 472, 479, 480, 481, 482, 483, 484, 485, 486, 833, 834, 1057, 1058, 1062, 1136, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "choose_random_backend": 161, "exclud": [161, 163, 363, 376, 415, 416, 1057, 1063, 1065], "clear_backend_stack": 161, "current_backend": [161, 182, 183, 361, 366], "current": [161, 165, 166, 173, 177, 180, 181, 182, 183, 184, 356, 357, 358, 359, 366, 372, 376, 381, 392, 393, 434, 455, 456, 458, 470, 471, 480, 504, 505, 509, 511, 759, 793, 800, 804, 811, 813, 1034, 1035, 1044, 1045, 1136], "prioriti": [161, 165, 180, 181, 357, 373], "global_backend": [161, 165], "which": [161, 165, 166, 175, 176, 177, 180, 181, 182, 183, 184, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 392, 393, 404, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 443, 446, 448, 452, 454, 457, 458, 470, 471, 480, 481, 491, 496, 497, 498, 499, 500, 501, 502, 503, 505, 509, 511, 513, 514, 515, 521, 712, 715, 759, 765, 777, 778, 780, 787, 788, 791, 793, 799, 803, 811, 812, 813, 815, 816, 831, 833, 840, 842, 844, 845, 847, 853, 855, 857, 859, 861, 863, 866, 868, 869, 871, 882, 884, 888, 890, 894, 896, 910, 912, 930, 932, 933, 945, 947, 948, 950, 954, 960, 963, 965, 968, 970, 976, 979, 988, 991, 996, 999, 1004, 1007, 1009, 1014, 1017, 1034, 1039, 1040, 1041, 1042, 1047, 1048, 1049, 1050, 1051, 1057, 1058, 1059, 1060, 1063, 1065, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1139, 1141, 1146, 1147, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "try": [161, 165, 174, 176, 177, 180, 181, 356, 357, 358, 359, 369, 370, 378, 393, 759, 830, 1136], "infer": [161, 165, 360, 367, 371, 372, 376, 381, 412, 413, 415, 416, 417, 419, 422, 423, 427, 429, 433, 521, 625, 759, 796, 821, 970, 1000, 1003], "when": [161, 165, 175, 176, 180, 181, 182, 183, 184, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 393, 434, 440, 471, 521, 535, 613, 616, 708, 711, 759, 770, 803, 824, 954, 955, 958, 960, 963, 965, 968, 1034, 1045, 1069, 1070, 1071, 1073, 1094, 1099, 1102, 1107, 1110, 1115, 1118, 1123, 1126, 1136, 1169, 1170], "global": [161, 165, 166, 167, 173, 180, 181, 182, 183, 184, 366, 367, 371, 372, 376, 434, 449, 450, 451, 471, 480, 481, 513, 514, 515, 759, 794, 795, 814, 817, 818, 819, 823, 824, 1052, 1053, 1056, 1171, 1172], "numpi": [161, 165, 166, 167, 175, 176, 180, 181, 357, 358, 365, 367, 371, 372, 373, 374, 376, 378, 381, 759, 828, 1094, 1095, 1098, 1122, 1136], "np": [161, 165, 369, 371, 372, 373, 374, 378, 379, 381, 1136], "py": [161, 165, 166, 357, 361, 362, 366, 367, 371, 372, 374, 376, 378, 380, 381, 1057, 1058, 1062], "noqa": [161, 165, 166, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 560, 563, 580, 583, 584, 587, 592, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1094, 1099, 1102], "set_backend": [161, 165, 166, 173, 366, 367, 368, 371, 434, 455, 456, 471, 512, 759, 821, 1136], "ha": [161, 165, 166, 175, 176, 177, 180, 181, 357, 362, 363, 366, 367, 368, 371, 372, 376, 378, 380, 381, 392, 393, 415, 426, 471, 490, 521, 522, 525, 691, 694, 708, 711, 884, 893, 906, 909, 929, 930, 932, 933, 942, 944, 970, 984, 987, 1010, 1013, 1074, 1075, 1076, 1080, 1082, 1094, 1103, 1106, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "jax": [161, 165, 166, 167, 176, 177, 357, 358, 367, 371, 372, 373, 374, 376, 378, 381, 393, 833, 849, 851, 1074, 1075, 1076, 1080, 1082, 1136], "get_backend": [161, 366, 367], "specifi": [161, 166, 180, 181, 360, 365, 366, 371, 372, 373, 374, 376, 379, 380, 381, 415, 416, 418, 422, 424, 425, 428, 430, 431, 432, 434, 440, 442, 471, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 509, 511, 514, 515, 516, 521, 712, 715, 759, 765, 777, 787, 788, 791, 798, 831, 884, 894, 896, 910, 912, 939, 941, 942, 944, 945, 947, 948, 950, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 988, 991, 1004, 1007, 1010, 1013, 1014, 1017, 1026, 1029, 1034, 1039, 1041, 1042, 1048, 1049, 1050, 1051, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1094, 1095, 1098, 1111, 1114, 1119, 1122, 1127, 1128, 1131, 1132, 1135], "isn": [161, 166, 357, 379, 393], "associ": [161, 166, 357, 366, 368, 393, 521, 535, 691, 694, 884, 905, 914, 916, 923, 925, 951, 953], "retriev": [161, 166, 357, 759, 765], "i": [161, 166, 357, 359, 360, 376, 379, 381, 415, 416, 426, 521, 522, 525, 552, 555, 568, 571, 576, 579, 584, 587, 599, 617, 620, 621, 624, 633, 636, 689, 690, 696, 699, 708, 711, 712, 715, 759, 767, 768, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 888, 890, 905, 906, 909, 914, 916, 923, 925, 930, 932, 933, 942, 944, 948, 950, 970, 1014, 1017, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1122, 1123, 1126], "e": [161, 166, 176, 177, 355, 357, 359, 360, 370, 379, 393, 414, 415, 426, 434, 439, 462, 471, 487, 521, 522, 525, 552, 555, 568, 571, 576, 579, 584, 587, 599, 609, 617, 620, 621, 624, 633, 636, 653, 656, 661, 664, 689, 690, 696, 699, 708, 711, 712, 715, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 888, 890, 905, 906, 909, 914, 916, 923, 925, 930, 932, 933, 948, 950, 970, 1014, 1017, 1057, 1062, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "one": [161, 166, 176, 177, 180, 181, 185, 194, 279, 282, 283, 287, 290, 297, 299, 323, 324, 325, 326, 337, 338, 341, 342, 356, 357, 363, 366, 369, 370, 371, 373, 374, 375, 378, 379, 381, 393, 415, 416, 426, 434, 441, 443, 446, 471, 500, 501, 502, 503, 515, 522, 526, 539, 669, 759, 760, 762, 763, 764, 788, 792, 809, 812, 815, 816, 884, 906, 909, 910, 912, 920, 922, 926, 928, 945, 947, 948, 950, 970, 971, 975, 984, 987, 988, 991, 1004, 1007, 1008, 1010, 1013, 1059, 1061, 1069, 1070, 1072, 1074, 1075, 1076, 1080, 1081, 1082, 1094, 1095, 1098, 1122, 1136], "torch": [161, 166, 173, 357, 361, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 412, 413, 434, 455, 456, 471, 512, 759, 821, 970, 984, 987, 1136], "tensorflow": [161, 166, 173, 176, 177, 357, 358, 371, 372, 373, 374, 376, 381, 393, 1136], "mxnet": [161, 166, 176, 358, 371, 372, 373, 376, 381, 1136], "either": [161, 166, 173, 180, 181, 356, 357, 359, 362, 363, 366, 367, 370, 371, 372, 376, 378, 379, 393, 415, 421, 521, 535, 538, 552, 555, 612, 637, 640, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 712, 715, 720, 723, 724, 727, 745, 759, 780, 805, 809, 810, 884, 906, 909, 1030, 1031, 1032, 1033, 1094, 1111, 1114, 1119, 1157, 1168, 1169, 1170], "doesn": [161, 166, 356, 359, 363, 371, 376, 393], "matter": [161, 166, 175, 363], "been": [161, 166, 357, 362, 366, 367, 370, 371, 372, 374, 376, 392, 393, 471, 490, 759, 781, 782, 783, 1057, 1058], "ivy_np": [161, 166], "ivy_jax": [161, 166], "subsequ": [161, 167, 356, 363, 365, 366, 369, 373, 374, 380], "call": [161, 167, 173, 176, 182, 183, 185, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 471, 515, 759, 814, 819, 830, 833, 844, 1034, 1035, 1040, 1044, 1045, 1157, 1168, 1169, 1170, 1173, 1177], "ndarrai": [161, 167, 369, 371, 372, 373, 374, 378, 415, 417, 427, 759, 828], "Or": [161, 167, 379], "jaxlib": [161, 167, 356, 371, 372, 374, 378], "xla_extens": [161, 167, 371, 372, 374, 378], "devicearrai": [161, 167, 378], "try_import_ivy_jax": 161, "warn": [161, 168, 169, 170, 171, 172], "try_import_ivy_mxnet": 161, "try_import_ivy_numpi": 161, "try_import_ivy_tf": 161, "try_import_ivy_torch": 161, "unset_backend": [161, 367], "unset": [161, 173, 367, 376, 378], "adjust": [161, 173, 1094, 1115, 1118, 1123, 1126], "previous": [161, 173, 356, 359, 365, 366, 376, 759, 770], "implement": [161, 173, 358, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 434, 440, 462, 471, 516, 521, 522, 525, 527, 530, 531, 534, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 609, 613, 616, 653, 656, 657, 660, 661, 664, 665, 668, 691, 694, 708, 711, 712, 715, 724, 727, 728, 731, 745, 750, 884, 897, 899, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1136], "wa": [161, 173, 176, 180, 181, 363, 376, 378, 759, 830, 1034, 1047, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "last": [161, 173, 177, 180, 181, 357, 363, 367, 393, 404, 409, 471, 490, 871, 881, 884, 888, 890, 894, 896, 910, 912, 942, 944, 945, 947, 954, 960, 963, 965, 968, 970, 988, 991, 1004, 1007, 1009, 1014, 1017, 1083, 1084, 1087, 1089, 1092, 1127, 1128, 1131, 1132, 1135, 1157, 1167], "henc": [161, 173, 1074, 1075, 1076, 1080, 1082], "here": [161, 173, 356, 357, 358, 361, 363, 370, 374, 376, 377, 378, 379, 380, 381, 392, 393], "tensor": [161, 173, 175, 180, 181, 361, 366, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 415, 424, 425, 434, 452, 521, 560, 563, 689, 690, 759, 812, 815, 816, 871, 879, 881, 884, 939, 941, 970, 984, 987, 1000, 1003, 1009, 1057, 1058, 1069, 1072, 1136, 1157, 1165, 1167], "howev": [161, 173, 176, 356, 358, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 393], "befor": [161, 173, 180, 181, 356, 357, 358, 362, 365, 369, 371, 372, 373, 376, 379, 393, 471, 515, 521, 755, 758, 871, 882, 883, 1030, 1031, 1032, 1034, 1046, 1074, 1075, 1076, 1080, 1082, 1094, 1111, 1114, 1119], "becom": [161, 173, 175, 177, 357, 363, 370, 376, 381, 393, 970, 971, 974], "swap": [161, 173, 970, 1018, 1021], "python": [161, 173, 174, 175, 176, 356, 357, 359, 376, 378, 379, 393, 415, 416, 471, 510, 520, 521, 712, 715, 1136, 1142], "op": [161, 173, 361, 376, 393], "eagertensor": [161, 173], "def": [162, 358, 361, 363, 366, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 435, 436, 437, 472, 479, 482, 834, 1136, 1149, 1152, 1155], "ml": [174, 176, 177, 355, 375, 376, 377, 379, 380, 381, 392, 1136, 1142], "explos": [174, 176, 1136], "A": [174, 175, 176, 177, 180, 181, 182, 183, 184, 359, 360, 365, 366, 370, 371, 372, 376, 379, 393, 415, 420, 427, 471, 480, 481, 515, 521, 704, 707, 759, 795, 827, 884, 893, 920, 922, 929, 930, 932, 933, 970, 1009, 1014, 1017, 1034, 1035, 1037, 1039, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1094, 1095, 1098, 1122, 1127, 1128, 1131, 1132, 1135, 1136, 1179, 1180], "huge": [174, 176, 379, 1136], "number": [174, 175, 180, 181, 182, 183, 184, 185, 356, 363, 370, 372, 373, 376, 379, 381, 412, 413, 414, 415, 416, 417, 420, 424, 425, 426, 427, 434, 441, 453, 454, 457, 459, 460, 462, 471, 507, 508, 509, 521, 535, 552, 555, 584, 587, 599, 617, 620, 621, 624, 689, 690, 691, 694, 708, 711, 712, 715, 716, 719, 720, 723, 755, 758, 759, 760, 763, 786, 795, 796, 811, 829, 832, 871, 882, 884, 893, 897, 899, 914, 916, 929, 933, 945, 947, 970, 971, 974, 980, 983, 992, 995, 996, 999, 1004, 1007, 1009, 1014, 1017, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1057, 1058, 1067, 1069, 1072, 1074, 1075, 1076, 1080, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168], "tool": [174, 177, 357, 377, 381, 392, 393, 1136], "have": [174, 175, 176, 177, 180, 181, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 392, 393, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 454, 471, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 781, 782, 783, 785, 788, 791, 799, 812, 815, 816, 833, 849, 851, 866, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "explod": [174, 175, 1136], "onto": [174, 175, 471, 500, 501, 1034, 1040, 1046, 1136], "scene": [174, 175, 360, 375, 377, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1136], "b": [174, 177, 182, 183, 185, 186, 189, 191, 194, 211, 212, 213, 228, 230, 268, 279, 280, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 310, 311, 314, 319, 320, 323, 324, 325, 326, 327, 328, 337, 338, 341, 342, 345, 346, 355, 360, 363, 366, 367, 370, 375, 376, 377, 379, 380, 381, 391, 434, 443, 445, 446, 447, 471, 493, 521, 522, 524, 525, 526, 535, 537, 539, 540, 543, 551, 556, 560, 563, 580, 583, 584, 586, 587, 592, 604, 617, 619, 621, 628, 629, 632, 669, 696, 699, 700, 703, 716, 719, 732, 735, 736, 739, 745, 746, 748, 750, 751, 753, 754, 759, 760, 762, 763, 764, 767, 768, 776, 777, 784, 787, 788, 790, 791, 792, 829, 833, 835, 837, 838, 839, 871, 874, 877, 878, 883, 884, 885, 887, 888, 890, 891, 920, 922, 930, 932, 939, 941, 951, 953, 954, 955, 958, 970, 971, 973, 974, 975, 984, 987, 988, 991, 996, 999, 1004, 1006, 1007, 1008, 1014, 1017, 1018, 1021, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1063, 1065, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1099, 1102, 1122, 1127, 1128, 1131, 1136, 1142], "why": [174, 176, 357, 370, 373, 374, 378, 1136], "unifi": [174, 176, 180, 181, 369, 376, 393, 471, 500, 501, 502, 503, 515, 1136], "should": [174, 176, 180, 181, 182, 183, 184, 185, 192, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 412, 413, 415, 426, 430, 431, 434, 442, 471, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 609, 612, 613, 616, 617, 633, 636, 637, 640, 641, 644, 645, 648, 653, 656, 657, 660, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 770, 803, 812, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 883, 884, 885, 887, 888, 890, 891, 894, 896, 903, 905, 906, 909, 914, 916, 920, 922, 923, 925, 926, 928, 930, 932, 933, 939, 941, 942, 944, 945, 947, 948, 950, 970, 1000, 1003, 1057, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1082, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1136], "them": [174, 175, 176, 177, 365, 367, 369, 370, 376, 378, 379, 380, 393, 1136], "c": [174, 176, 177, 185, 297, 341, 342, 355, 360, 363, 366, 370, 375, 376, 377, 379, 393, 521, 700, 703, 759, 767, 768, 776, 829, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 877, 970, 1014, 1017, 1059, 1061, 1069, 1072, 1094, 1095, 1098, 1115, 1118, 1122, 1123, 1126, 1136, 1142], "standard": [174, 360, 361, 362, 364, 365, 369, 373, 374, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 454, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1057, 1062, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1115, 1118, 1123, 1126, 1127, 1128, 1131, 1136, 1142, 1171, 1172], "re": [174, 175, 176, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 381, 393, 471, 515, 759, 781, 884, 939, 941, 970, 1004, 1007, 1069, 1073, 1136], "collabor": [174, 175, 176, 1136], "consortium": [174, 176, 1136, 1142], "data": [174, 176, 180, 181, 182, 183, 184, 360, 361, 362, 366, 368, 370, 372, 373, 374, 378, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 442, 443, 446, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 470, 471, 473, 474, 475, 476, 477, 478, 483, 484, 485, 487, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 767, 768, 805, 806, 808, 825, 833, 849, 851, 869, 871, 880, 884, 885, 887, 888, 890, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 930, 932, 933, 939, 941, 942, 944, 945, 947, 948, 950, 970, 984, 987, 988, 991, 992, 995, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1057, 1068, 1069, 1070, 1071, 1072, 1083, 1084, 1087, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1142, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168], "api": [174, 175, 356, 357, 360, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 375, 377, 379, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131, 1136, 1142], "open": [175, 176, 177, 355, 356, 359, 362, 392, 415, 416, 1057, 1059, 1060, 1063, 1065, 1136], "project": [175, 176, 177, 356, 357, 359, 361, 367, 378, 380, 392, 393, 1057, 1058, 1062], "grown": 175, "consider": [175, 363, 374], "recent": [175, 176, 356, 357], "year": [175, 177, 393, 1136], "especi": [175, 356], "deep": [175, 180, 181, 355, 357, 358, 375, 379, 1136], "learn": [175, 176, 356, 358, 360, 366, 375, 381, 392, 521, 625, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1030, 1031, 1032, 1033, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "can": [175, 176, 177, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 392, 393, 415, 417, 427, 434, 443, 446, 471, 513, 514, 515, 884, 903, 970, 1000, 1003, 1057, 1059, 1060, 1136, 1142], "seen": [175, 176, 363, 378, 379], "rapidli": 175, "increas": [175, 471, 495, 499, 503, 970, 980, 983, 1026, 1029, 1034, 1046], "github": [175, 357, 358, 362, 365], "repo": [175, 176, 177, 356, 357, 364, 376, 378, 379, 380, 381, 392, 1136, 1142], "term": [175, 357, 370, 871, 881, 1157, 1167], "time": [175, 176, 177, 356, 357, 358, 365, 366, 370, 371, 374, 376, 379, 381, 393, 833, 840, 842, 853, 855, 871, 881, 970, 1022, 1025, 1030, 1031, 1032, 1033, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1157, 1168, 1169, 1170], "These": [175, 176, 177, 357, 362, 363, 365, 366, 370, 371, 373, 374, 376, 377, 379, 380, 381, 393, 884, 897, 899, 1136, 1142], "written": [175, 356, 361, 362, 369, 373, 374, 376, 378, 381, 393], "mani": [175, 176, 177, 180, 181, 356, 357, 358, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 393, 970, 1009], "differ": [175, 176, 177, 180, 181, 182, 183, 184, 356, 357, 360, 361, 362, 363, 365, 366, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 393, 434, 454, 471, 492, 493, 496, 497, 521, 535, 691, 694, 740, 744, 871, 880, 970, 1014, 1017, 1094, 1111, 1114, 1119, 1136], "while": [175, 176, 180, 181, 182, 183, 184, 356, 357, 363, 367, 373, 380, 381, 393, 521, 677, 680, 681, 684, 1074, 1075, 1094, 1103, 1106], "wonder": [175, 177, 378], "thing": [175, 176, 177, 356, 357, 358, 367, 378, 379], "research": [175, 392], "develop": [175, 176, 177, 355, 356, 357, 358, 392, 393, 1136], "consid": [175, 176, 180, 181, 361, 366, 377, 378, 379, 521, 677, 680, 681, 684, 1074, 1075, 1076, 1080, 1082], "speed": 175, "evolv": 175, "sharabl": 175, "code": [175, 176, 177, 180, 181, 182, 183, 184, 185, 189, 280, 327, 328, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 391, 393, 404, 406, 407, 408, 409, 410, 411, 471, 493, 516, 521, 580, 583, 736, 739, 833, 835, 837, 838, 839, 871, 877, 878, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1095, 1098, 1122, 1136, 1142], "significantli": 175, "hinder": [175, 374], "librari": [175, 176, 177, 376, 381, 391, 393, 471, 516, 521, 613, 616, 677, 680, 681, 684, 884, 897, 899, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1136], "outdat": 175, "month": 175, "rigor": 175, "maintain": [175, 357, 1083, 1084, 1087, 1089, 1092], "against": [175, 180, 181, 365, 393, 434, 441, 884, 905, 906, 909, 910, 912, 914, 916, 923, 925, 1069, 1070], "newest": 175, "version": [175, 176, 177, 356, 362, 376, 378, 884, 897, 899, 1136], "For": [175, 176, 177, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 415, 416, 426, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 833, 849, 851, 869, 884, 933, 942, 944, 970, 971, 974, 1014, 1017, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1107, 1110, 1119, 1146, 1147], "softwar": [175, 176, 356, 357], "pipelin": [175, 369, 381], "where": [175, 176, 177, 180, 181, 182, 183, 355, 356, 357, 358, 359, 362, 366, 367, 369, 370, 371, 372, 373, 376, 379, 380, 381, 393, 415, 422, 423, 426, 521, 552, 555, 609, 661, 664, 691, 694, 708, 711, 759, 799, 803, 812, 884, 897, 899, 905, 914, 916, 923, 925, 926, 928, 933, 935, 936, 938, 942, 944, 945, 947, 970, 971, 974, 980, 983, 984, 987, 992, 995, 1014, 1017, 1026, 1029, 1034, 1035, 1045, 1057, 1058, 1069, 1072, 1094, 1115, 1118, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "rapid": [175, 176, 356], "prototyp": 175, "vital": [175, 381], "signific": [175, 176, 393], "bottleneck": 175, "new": [175, 176, 177, 180, 181, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 370, 371, 373, 375, 378, 381, 392, 415, 418, 421, 422, 423, 428, 429, 432, 433, 434, 466, 521, 551, 556, 559, 661, 664, 704, 707, 749, 754, 759, 781, 782, 783, 786, 787, 788, 791, 815, 816, 817, 818, 823, 824, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 970, 984, 987, 1000, 1003, 1014, 1017, 1034, 1039, 1050, 1051, 1052, 1053, 1056, 1136, 1146, 1147, 1157, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178], "futur": [175, 177, 356, 357, 378, 393, 884, 897, 899], "avail": [175, 180, 181, 356, 357, 362, 372, 393, 471, 490, 506, 507, 508, 518, 759, 782], "specif": [175, 180, 181, 358, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 392, 393, 434, 462, 471, 513, 516, 521, 677, 680, 681, 684, 759, 781, 782, 783, 810, 884, 897, 899, 939, 941, 970, 1014, 1017, 1030, 1031, 1032, 1033, 1057, 1058, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1136, 1139, 1141, 1142, 1169, 1170], "quickli": [175, 177, 356, 357, 379, 380], "obsolet": [175, 177], "user": [175, 176, 356, 357, 359, 360, 365, 367, 370, 373, 375, 393, 1157, 1168, 1169, 1170], "constantli": 175, "invent": 175, "wheel": 175, "desir": [175, 180, 181, 434, 440, 443, 446, 471, 516, 759, 799, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168], "provid": [175, 180, 181, 356, 357, 362, 363, 366, 369, 370, 371, 372, 373, 374, 376, 380, 392, 393, 412, 413, 415, 426, 434, 449, 450, 451, 458, 462, 470, 471, 490, 759, 780, 812, 816, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 945, 947, 970, 988, 991, 1014, 1017, 1069, 1070, 1094, 1115, 1118, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1173, 1174, 1175, 1176, 1177, 1178], "simultan": [175, 177], "modern": [175, 176], "simpl": [175, 356, 357, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 376, 378, 380, 381, 393, 759, 784], "scalabl": [175, 376], "must": [175, 177, 180, 181, 182, 183, 184, 356, 357, 358, 361, 362, 363, 366, 369, 370, 371, 372, 374, 376, 380, 381, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 471, 500, 501, 502, 503, 515, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 781, 782, 783, 785, 788, 791, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1173, 1177], "determin": [175, 180, 181, 362, 366, 370, 371, 372, 434, 443, 446, 448, 453, 458, 459, 460, 470, 471, 506, 507, 508, 518, 521, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 588, 591, 592, 595, 596, 609, 612, 613, 616, 633, 636, 637, 640, 641, 644, 653, 656, 657, 660, 665, 668, 669, 672, 685, 688, 691, 694, 708, 711, 712, 715, 724, 727, 728, 731, 732, 735, 745, 749, 750, 754, 759, 760, 763, 767, 768, 798, 800, 804, 805, 806, 807, 808, 825, 832, 833, 849, 851, 871, 882, 884, 885, 887, 888, 890, 891, 893, 894, 896, 903, 905, 906, 909, 914, 916, 920, 922, 923, 925, 929, 930, 932, 942, 944, 945, 947, 948, 950, 1030, 1031, 1032, 1033, 1074, 1075, 1076, 1080, 1082, 1127, 1128, 1131, 1132, 1135], "exactli": [175, 177, 363, 370, 372, 1136, 1142], "common": [175, 180, 181, 358, 363, 366, 368, 370, 372, 393], "ground": [175, 365], "li": 175, "between": [175, 180, 181, 182, 183, 184, 363, 365, 366, 369, 370, 374, 375, 377, 378, 379, 381, 392, 415, 416, 434, 454, 521, 552, 555, 708, 711, 954, 955, 958, 960, 963, 965, 968, 970, 984, 987, 1014, 1017, 1034, 1040, 1057, 1059, 1060, 1074, 1075, 1076, 1080, 1082, 1136, 1173, 1175], "find": [175, 180, 181, 356, 357, 376, 379, 1074, 1075, 1076, 1080, 1082, 1136], "exist": [175, 176, 180, 181, 182, 183, 356, 358, 359, 362, 363, 364, 365, 366, 367, 368, 373, 376, 393, 759, 780, 1173, 1177], "essenti": [175, 176, 358, 363, 366, 372], "order": [175, 180, 181, 182, 183, 184, 356, 357, 359, 362, 363, 367, 369, 370, 371, 372, 374, 378, 379, 381, 393, 521, 552, 555, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 897, 899, 910, 912, 933, 935, 936, 938, 948, 950, 970, 988, 991, 1030, 1031, 1032, 1069, 1072, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1179, 1180], "design": [175, 176, 360, 373, 376, 378, 393], "univers": 175, "abstract": [175, 370, 380, 393, 471, 486, 1173, 1177], "In": [175, 177, 356, 357, 361, 362, 363, 366, 367, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 471, 510, 516, 517, 520, 521, 535, 691, 694, 712, 715, 759, 765, 803, 970, 1000, 1003, 1057, 1063, 1065, 1136], "languag": [175, 177, 376], "first": [175, 176, 356, 357, 359, 363, 366, 369, 370, 374, 376, 378, 379, 381, 412, 413, 415, 424, 425, 434, 461, 466, 471, 490, 502, 521, 535, 538, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 599, 601, 604, 612, 620, 621, 624, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 740, 744, 759, 767, 833, 844, 884, 888, 890, 894, 896, 897, 899, 906, 909, 920, 922, 926, 928, 933, 939, 941, 945, 947, 970, 976, 979, 1004, 1007, 1014, 1017, 1018, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1044, 1045, 1057, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1157, 1168, 1169, 1170, 1173, 1177], "see": [175, 355, 356, 357, 358, 364, 366, 370, 372, 374, 378, 379, 392, 393, 415, 416, 421, 424, 425, 434, 442, 462, 521, 535, 538, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 612, 613, 616, 645, 648, 669, 672, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 740, 744, 884, 905, 914, 916, 923, 925, 930, 932, 945, 947, 948, 950, 1069, 1071, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "clear": [175, 176, 177, 357, 358, 363, 365, 371, 372, 376, 378, 471, 489], "front": [175, 375, 376, 379, 1136, 1142], "runner": 175, "look": [175, 356, 357, 359, 361, 363, 366, 367, 370, 371, 372, 374, 376, 378, 380, 381, 1136], "littl": [175, 378], "deeper": [175, 357, 360, 375, 471, 495, 499, 503, 1034, 1045, 1046], "follow": [175, 176, 180, 181, 356, 357, 358, 359, 361, 362, 363, 365, 367, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 393, 434, 457, 471, 515, 521, 712, 715, 759, 801, 802, 803, 823, 824, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 882, 883, 884, 926, 928, 948, 950, 1034, 1040, 1046, 1074, 1075, 1076, 1080, 1082, 1136, 1157, 1167, 1173, 1177], "core": [175, 356, 358, 372, 376, 381, 471, 507, 1136], "principl": 175, "oper": [175, 180, 181, 182, 183, 185, 356, 358, 362, 363, 366, 369, 370, 372, 373, 379, 380, 415, 424, 425, 434, 462, 521, 535, 576, 579, 580, 583, 604, 628, 629, 632, 696, 699, 700, 703, 712, 715, 736, 739, 759, 769, 781, 782, 783, 825, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 880], "expos": [175, 376, 380, 759, 775], "almost": [175, 357, 370, 377, 379], "ident": [175, 177, 180, 181, 366, 368, 370, 378, 379, 393, 471, 505, 1034, 1047, 1136], "uniqu": [175, 366, 370, 393, 471, 480, 481, 1030, 1031, 1032, 1033, 1034, 1040, 1074, 1075, 1076, 1080, 1081, 1082], "syntax": [175, 176], "There": [175, 356, 357, 363, 366, 369, 370, 371, 376, 379, 393], "onli": [175, 180, 181, 355, 356, 357, 361, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 391, 393, 471, 511, 521, 677, 680, 681, 684, 884, 906, 909, 926, 928, 970, 988, 991, 1034, 1035, 1036, 1044, 1045, 1069, 1070, 1071, 1094, 1103, 1106, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "wai": [175, 176, 356, 367, 373, 378, 379, 380, 381, 393], "unsurprisingli": [175, 363], "fundament": [175, 370, 376], "consist": [175, 180, 181, 369, 373, 471, 503, 884, 897, 899, 1094, 1095, 1098, 1122, 1169, 1170], "each": [175, 176, 177, 180, 181, 182, 183, 184, 185, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 381, 392, 393, 404, 407, 408, 410, 415, 426, 434, 441, 471, 480, 481, 492, 493, 494, 495, 496, 497, 498, 502, 515, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 760, 763, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 884, 885, 887, 888, 890, 891, 897, 899, 905, 906, 909, 914, 916, 917, 919, 923, 925, 930, 932, 933, 970, 980, 983, 996, 999, 1004, 1007, 1009, 1014, 1017, 1022, 1025, 1026, 1029, 1034, 1040, 1047, 1057, 1058, 1069, 1072, 1074, 1075, 1076, 1080, 1094, 1095, 1098, 1122, 1136, 1142, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "veri": [175, 176, 356, 357, 361, 363, 365, 366, 370, 372, 373, 374, 377, 379, 380, 381, 393, 1136], "similar": [175, 361, 370, 371, 372, 379, 393, 521, 712, 715, 871, 882, 1157, 1168], "convent": [175, 392, 884, 906, 909, 1094, 1095, 1098, 1122], "those": [175, 180, 181, 356, 357, 358, 370, 376, 381, 415, 416, 833, 869, 884, 926, 928, 933, 970, 971, 974], "introduc": [175, 370, 379, 970, 1004, 1007, 1074, 1075], "2006": 175, "therefor": [175, 357, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 380, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 584, 587, 617, 700, 703, 732, 735, 736, 739, 745, 759, 787, 871, 874, 883, 970, 1004, 1007, 1052, 1053, 1056, 1074, 1076, 1080, 1094, 1099, 1102, 1127, 1128, 1131], "present": [175, 180, 181, 357, 364, 370, 371, 372, 373, 374, 376], "itself": [175, 356, 357, 370, 373, 374, 380, 392, 393, 759, 765, 1034, 1046], "cut": 175, "cloth": 175, "adher": [175, 176, 362, 364, 376, 381], "semant": [175, 376, 381, 521, 712, 715], "up": [175, 176, 177, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 392, 393], "hopefulli": [175, 176, 177, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392], "paint": [175, 376], "pictur": [175, 376], "how": [175, 177, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 392, 393, 1136, 1142, 1157, 1168, 1169, 1170], "pleas": [175, 176, 177, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 1136], "discuss": [175, 176, 177, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 1136], "faq": [175, 176, 177, 376, 378, 379, 380, 381, 392], "reach": [175, 176, 177, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 471, 495, 499, 503, 1034, 1046], "discord": [175, 176, 177, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 392, 1136], "you": [175, 176, 177, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 392, 393, 1136, 1142], "question": [175, 176, 177, 356, 357, 363, 365, 376, 378, 379, 380, 381, 392, 393, 1136], "central": 176, "goal": [176, 358], "being": [176, 177, 180, 181, 356, 357, 363, 365, 368, 369, 370, 371, 372, 373, 374, 376, 379, 392, 393, 415, 416, 759, 814, 819, 1074, 1081, 1136], "would": [176, 356, 357, 359, 360, 362, 363, 365, 367, 368, 369, 370, 373, 374, 375, 376, 378, 380, 381, 393, 404, 409, 471, 516, 1136], "entir": [176, 177, 180, 181, 357, 363, 364, 365, 369, 370, 373, 378, 379, 380, 381, 393, 471, 515, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1166], "forgiven": 176, "rais": [176, 180, 181, 357, 373, 376, 378, 434, 442, 521, 609, 708, 711, 759, 769, 794, 803, 817, 824, 830, 884, 906, 909, 913, 945, 947, 970, 1010, 1013, 1014, 1017, 1069, 1072, 1094, 1099, 1102, 1107, 1110, 1127, 1128, 1131, 1132, 1135, 1169, 1170, 1173, 1177], "eyebrow": 176, "somehow": 176, "pytorch": [176, 177, 358, 366, 371, 372, 373, 374, 376, 378, 381, 393, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "other": [176, 180, 181, 182, 183, 185, 356, 357, 361, 362, 363, 365, 366, 369, 370, 373, 376, 378, 380, 381, 391, 392, 393, 412, 413, 415, 416, 521, 613, 616, 759, 760, 763, 765, 833, 844, 1057, 1063, 1065, 1074, 1081, 1094, 1115, 1118, 1123, 1126, 1136], "strong": [176, 393], "industri": 176, "back": [176, 369, 375, 376, 378, 393, 1136, 1142, 1169, 1170, 1173, 1177], "momentum": 176, "won": [176, 177, 357, 381], "ad": [176, 185, 192, 353, 354, 356, 357, 358, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 376, 380, 393, 759, 823, 824, 884, 897, 899, 970, 984, 987, 1179, 1180], "just": [176, 177, 356, 357, 362, 363, 365, 366, 373, 376, 378, 379, 393, 1094, 1095, 1098, 1122, 1157, 1166], "make": [176, 177, 356, 357, 358, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 471], "problem": [176, 357, 369, 378], "even": [176, 177, 356, 357, 362, 366, 371, 372, 374, 378, 379, 380, 381, 393, 521, 708, 711, 716, 719], "wors": 176, "rather": [176, 180, 181, 361, 362, 365, 370, 381, 393, 415, 416, 471, 515, 759, 805, 806, 808, 833, 849, 851], "funni": 176, "comic": 176, "strip": 176, "easi": [176, 356, 357, 366, 370], "feasibl": 176, "space": [176, 415, 416, 424, 425, 759, 786], "unlik": [176, 363, 370, 471], "charger": 176, "charact": 176, "encod": [176, 379, 759, 786], "instant": [176, 1136], "messag": [176, 357, 376, 378, 1182, 1183], "much": [176, 357, 361, 369, 370, 373, 376, 378, 379], "doe": [176, 180, 181, 357, 359, 360, 361, 362, 363, 365, 366, 367, 371, 373, 374, 376, 378, 379, 393, 521, 580, 583, 759, 803, 970, 1009], "mandat": [176, 365, 373], "adopt": [176, 357, 369], "continu": [176, 177, 364, 365, 393], "own": [176, 177, 356, 362, 376, 393], "signatur": [176, 361, 362, 363, 370, 371, 372, 373, 374, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "replac": [176, 180, 181, 357, 359, 363, 365, 368, 370, 371, 372, 376, 378, 381, 393, 759, 815, 816, 970, 971, 974, 1057, 1058], "your": [176, 177, 355, 356, 358, 359, 361, 362, 379, 380, 393, 1136], "10": [176, 178, 179, 180, 181, 182, 183, 184, 185, 238, 293, 297, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 359, 363, 370, 376, 378, 379, 415, 422, 425, 471, 521, 560, 563, 564, 567, 592, 604, 628, 629, 632, 657, 660, 732, 735, 759, 777, 787, 814, 819, 833, 853, 854, 855, 856, 871, 877, 884, 891, 894, 896, 920, 922, 939, 941, 970, 988, 991, 996, 999, 1009, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1069, 1072, 1074, 1075, 1094, 1095, 1098, 1099, 1102, 1122, 1173, 1175], "100": [176, 177, 185, 297, 341, 342, 379, 380, 381, 393, 521, 732, 735, 1059, 1061, 1136], "despit": [176, 370, 372], "distinct": [176, 362, 370, 373, 375, 1074, 1075, 1076, 1080, 1082, 1136], "still": [176, 180, 181, 362, 365, 371, 378, 380, 393, 1136], "believ": [176, 357], "share": [176, 180, 181, 363, 365, 366, 367, 370, 376, 434, 466], "bring": [176, 376, 377], "benefit": [176, 177, 356, 357, 369, 370, 373, 378, 379, 393], "unrel": [176, 357], "what": [176, 177, 357, 360, 362, 363, 368, 370, 374, 375, 376, 378, 379, 380, 381, 392, 393, 1136], "again": [176, 177, 357, 361, 363, 370, 373, 379, 381, 393], "contrari": 176, "bumpi": 176, "road": 176, "allud": [176, 379], "most": [176, 180, 181, 356, 357, 361, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 393, 884, 897, 899], "technolog": 176, "sector": [176, 521, 530, 531, 534, 544, 547, 551, 556, 559, 591, 595, 749, 754], "full": [176, 177, 182, 183, 357, 362, 371, 374, 376, 393, 415, 434, 454, 521, 604, 628, 629, 632, 871, 877, 884, 926, 928, 930, 932, 933, 1052, 1053, 1056], "success": 176, "reason": [176, 357, 361, 363, 366, 369, 370, 371, 373, 376, 378, 521, 712, 715], "build": [176, 355, 356, 366, 375, 377, 380, 381, 393, 1074, 1075, 1076, 1080, 1082, 1136, 1157, 1168, 1169, 1170], "custom": [176, 380], "comput": [176, 177, 180, 181, 356, 366, 370, 376, 379, 393, 471, 515, 521, 535, 560, 563, 572, 575, 580, 583, 601, 604, 605, 608, 625, 628, 629, 632, 645, 648, 649, 652, 673, 676, 677, 680, 681, 684, 685, 688, 691, 694, 696, 699, 700, 703, 759, 771, 772, 774, 777, 778, 833, 835, 838, 840, 842, 844, 845, 847, 853, 855, 857, 859, 861, 863, 866, 868, 871, 872, 873, 874, 875, 876, 877, 878, 880, 882, 884, 885, 887, 888, 890, 893, 897, 899, 900, 902, 903, 906, 909, 910, 912, 926, 928, 929, 930, 932, 933, 945, 947, 948, 950, 954, 955, 958, 960, 963, 965, 968, 1034, 1040, 1074, 1075, 1076, 1080, 1082, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126], "thank": [176, 379], "interoper": 176, "compon": [176, 376], "bio": [176, 356], "hardwar": [176, 356], "initi": [176, 180, 181, 182, 183, 184, 357, 367, 371, 372, 471, 871, 881, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1177], "pcie": 176, "interfac": [176, 381, 393], "motherboard": 176, "raid": 176, "storag": [176, 379], "virtual": [176, 357, 359], "bluetooth": 176, "wireless": 176, "exchang": 176, "btx": 176, "factor": [176, 471, 480, 513, 514, 515, 833, 835, 838, 840, 842, 853, 855, 857, 859, 871, 872, 873, 874, 875, 876, 877, 878, 884, 885, 887, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1173, 1174, 1175, 1176], "sata": 176, "connect": [176, 356, 380, 381, 1157, 1167, 1168], "host": [176, 393], "bu": 176, "adapt": [176, 833, 857, 859, 1173, 1176], "html": [176, 359, 362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "enabl": [176, 180, 181, 182, 183, 184, 356, 357, 365, 366, 369, 370, 373, 375, 376, 377, 379, 381, 393], "anyon": [176, 355, 393], "websit": 176, "tcp": 176, "ip": 176, "node": [176, 180, 181, 370, 1034, 1035, 1044, 1045], "commun": [176, 355, 357, 358, 393, 1136, 1142], "network": [176, 366, 370, 376, 380, 392, 871, 880, 1136, 1143, 1157, 1169, 1170], "smtp": 176, "possibl": [176, 355, 356, 357, 358, 362, 363, 365, 370, 371, 373, 376, 379, 392, 393, 759, 809, 827, 1094, 1099, 1102, 1107, 1110], "send": 176, "gmail": 176, "outlook": 176, "pop": 176, "email": 176, "ieee": [176, 414, 434, 454, 521, 535, 613, 616, 691, 694, 712, 715, 732, 735], "754": [176, 414, 434, 454, 521, 535, 613, 616, 691, 694, 712, 715, 732, 735], "allow": [176, 376, 393, 415, 424, 425, 759, 809, 1169, 1170], "calcul": [176, 180, 181, 182, 183, 184, 362, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 596, 609, 612, 613, 616, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 691, 694, 708, 711, 724, 727, 728, 731, 732, 735, 740, 744, 745, 750, 954, 955, 958, 960, 963, 965, 968, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "live": [176, 177], "depend": [176, 356, 357, 362, 368, 370, 371, 376, 393, 434, 440, 521, 522, 525, 527, 530, 531, 534, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 609, 613, 616, 653, 656, 657, 660, 661, 664, 665, 668, 708, 711, 724, 727, 728, 731, 745, 750, 884, 897, 899, 926, 928, 930, 932, 933, 1069, 1073, 1083, 1084, 1087, 1089, 1092], "did": [176, 358, 381], "aris": [176, 393], "until": [176, 357, 393, 1136], "substanti": [176, 357, 365, 369], "innov": 176, "growth": 176, "usag": [176, 376, 471, 515], "relev": [176, 356, 358, 363, 370, 371, 379, 1173, 1174, 1175, 1176, 1177, 1178], "area": [176, 373, 391, 521, 530, 531, 534, 544, 547, 551, 556, 559, 591, 595, 749, 754, 1136], "necess": 176, "parti": [176, 393], "could": [176, 177, 356, 357, 363, 365, 370, 371, 373, 376, 378, 379, 380, 1074, 1075, 1076, 1080, 1082], "easili": [176, 357, 379, 380, 381, 393, 1136], "engag": [176, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "regard": [176, 370, 471], "effect": [176, 362, 369, 370, 374, 393, 415, 426, 833, 861, 863, 1094, 1115, 1118, 1123, 1126], "2015": 176, "sinc": [176, 356, 357, 393], "alongsid": 176, "machin": [176, 356, 366, 392, 434, 454, 457, 521, 625, 884, 905, 914, 916, 923, 925], "given": [176, 177, 180, 181, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 378, 380, 381, 392, 415, 416, 418, 424, 425, 471, 504, 510, 512, 513, 514, 515, 517, 520, 759, 777, 778, 788, 791, 815, 816, 831, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 872, 873, 874, 875, 876, 877, 878, 884, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 984, 987, 988, 991, 996, 999, 1004, 1007, 1009, 1022, 1025, 1034, 1041, 1042, 1057, 1059, 1060, 1062, 1063, 1065, 1068, 1083, 1089, 1092, 1146, 1147], "frame": [176, 392], "matur": [176, 393], "state": [176, 362, 374, 375, 376, 377, 379, 392, 521, 691, 694, 871, 881, 1136, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "than": [176, 180, 181, 357, 361, 363, 365, 370, 373, 376, 379, 380, 381, 393, 415, 416, 434, 454, 471, 515, 521, 527, 530, 531, 534, 540, 543, 552, 555, 568, 571, 576, 579, 584, 587, 591, 595, 599, 617, 620, 621, 624, 653, 656, 657, 660, 665, 668, 689, 708, 711, 712, 715, 720, 723, 732, 735, 755, 758, 759, 805, 806, 808, 833, 849, 851, 884, 888, 890, 905, 906, 909, 914, 916, 923, 925, 948, 950, 970, 971, 974, 988, 991, 1010, 1013, 1057, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1094, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "preced": [176, 380], "mention": [176, 356, 357, 363, 366, 373, 374], "aros": 176, "70": [176, 884, 920, 922, 1094, 1095, 1098, 1122], "80": [176, 884, 920, 922, 1094, 1095, 1098, 1122], "90": [176, 185, 297, 341, 342, 521, 580, 583, 716, 719, 884, 920, 922, 1059, 1061, 1094, 1095, 1098, 1122], "effort": [176, 355, 393], "stage": [176, 355, 357, 359, 360, 1136], "complet": [176, 180, 181, 357, 358, 369, 370, 378, 379, 884, 926, 928], "natur": [176, 363, 369, 370, 392, 521, 609, 653, 656, 661, 664, 884, 893, 929], "like": [176, 356, 357, 359, 360, 361, 362, 363, 365, 372, 373, 374, 375, 376, 378, 379, 380, 381, 392, 393, 833, 849, 851, 1057, 1063, 1065, 1136], "certainli": 176, "mission": [176, 1136], "creat": [176, 180, 181, 355, 356, 357, 359, 371, 372, 373, 376, 377, 380, 391, 392, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 432, 433, 471, 480, 481, 759, 787, 788, 791, 812, 815, 816, 827, 833, 868, 1057, 1058, 1059, 1060, 1063, 1065, 1136, 1142, 1146, 1147, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "At": [176, 358], "process": [176, 177, 355, 356, 357, 359, 366, 370, 376, 381, 471, 480, 481, 510, 520], "ourselv": 176, "lead": [176, 177, 180, 181, 182, 183, 184, 393, 884, 926, 928, 933], "quansight": 176, "compani": 176, "made": [176, 357, 358, 370, 373, 376, 378], "organ": [176, 361, 366, 369, 370], "panda": 176, "scipi": 176, "conda": [176, 356, 359], "dask": [176, 1074, 1075, 1076, 1080, 1082], "apach": 176, "onnx": 176, "scikit": 176, "jupyt": 176, "aw": 176, "cupi": 176, "net": [176, 177, 376, 381], "sympi": 176, "rai": [176, 521, 552, 555], "modin": 176, "spyder": 176, "includ": [176, 180, 181, 357, 358, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 392, 393, 415, 416, 417, 427, 759, 798, 832, 884, 948, 950, 1034, 1035, 1057, 1063, 1065, 1069, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1139, 1141, 1157, 1167, 1168, 1171, 1172], "member": [176, 357], "googl": [176, 1136], "octoml": 176, "einop": [176, 180, 181, 759, 781, 782, 783], "further": [176, 177, 357, 359, 363, 369, 375, 379, 380, 1136], "sponsor": 176, "lg": 176, "electron": 176, "microsoft": 176, "d": [176, 177, 185, 297, 341, 342, 355, 356, 360, 370, 379, 759, 768, 776, 871, 872, 873, 874, 875, 876, 877, 878, 884, 894, 896, 920, 922, 1059, 1061, 1136, 1142], "shaw": 176, "intel": 176, "togeth": [176, 180, 181, 369, 370, 380, 381, 393, 1179, 1180], "major": [176, 371, 372, 393, 1069, 1072], "involv": [176, 355, 359, 360, 371, 381, 434, 462, 521, 535, 691, 694, 1136, 1142], "anoth": [176, 180, 181, 356, 357, 366, 370, 371, 378, 381, 415, 421, 434, 441, 443, 446], "promis": 176, "pursuit": 176, "unif": [176, 355, 378, 1136, 1142], "clearli": [176, 358, 363], "lot": [176, 177, 368, 378, 393], "thought": [176, 356, 357, 374], "care": [176, 357, 381], "attent": [176, 357, 369, 370, 871, 882, 883, 1157, 1168], "gone": [176, 375], "simplifi": [176, 376, 377, 378, 380], "compat": [176, 374, 393, 434, 442, 521, 535, 538, 552, 555, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 601, 604, 612, 620, 621, 624, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 740, 744, 884, 905, 914, 916, 923, 925, 930, 932, 939, 941, 945, 947, 948, 950, 970, 1000, 1003, 1069, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "excit": [176, 355, 360, 1136], "complianc": 176, "hope": [176, 393], "due": [176, 356, 370, 373, 521, 691, 694], "suit": [176, 356, 360, 364, 365, 379, 392], "some": [176, 177, 180, 181, 356, 357, 358, 361, 362, 363, 366, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 392, 393, 521, 613, 616, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 869, 871, 879, 1136, 1157, 1165], "motiv": [176, 378], "great": [176, 177, 365, 376, 378], "convinc": 176, "celebr": 176, "encourag": [176, 392, 393, 1136, 1142], "foundat": 176, "point": [177, 357, 362, 363, 369, 373, 374, 376, 378, 379, 392, 414, 415, 416, 418, 420, 422, 428, 432, 434, 440, 454, 459, 462, 521, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 580, 583, 584, 587, 588, 591, 592, 595, 596, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 745, 749, 750, 754, 755, 758, 884, 885, 887, 891, 897, 899, 900, 902, 903, 905, 914, 916, 923, 925, 926, 928, 930, 932, 933, 948, 950, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "mai": [177, 356, 357, 370, 378, 380, 415, 416, 421, 471, 516, 521, 601, 604, 628, 629, 632, 649, 652, 677, 680, 681, 684, 759, 780, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110], "ask": [177, 376, 378, 393, 1136], "perfectli": 177, "happi": [177, 356, 393], "abund": 177, "better": [177, 360, 375, 378, 379, 380], "ll": [177, 355, 357, 363, 370, 373, 379], "give": [177, 356, 357, 360, 362, 363, 367, 374, 378, 970, 1000, 1003], "two": [177, 182, 183, 185, 362, 363, 365, 369, 370, 375, 379, 381, 415, 416, 420, 426, 430, 431, 434, 461, 466, 521, 576, 579, 716, 719, 759, 767, 884, 885, 887, 891, 893, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 930, 932, 933, 935, 936, 938, 942, 944, 945, 947, 970, 1018, 1021, 1074, 1075, 1076, 1080, 1081, 1082, 1136], "streamlin": 177, "workflow": [177, 357, 379, 391, 1136], "save": [177, 180, 181, 393, 759, 820, 1169, 1170], "week": [177, 357, 358, 1136], "let": [177, 362, 363, 370, 371, 372, 376, 378, 379, 380, 381, 1094, 1103, 1106, 1115, 1118, 1119, 1123, 1126, 1136], "sai": [177, 356, 368, 378], "deepmind": 177, "releas": [177, 356, 358, 1136], "awesom": 177, "paper": 177, "love": 177, "choic": [177, 356, 373, 379, 1094, 1115, 1118, 1123, 1126], "perceiverio": 177, "happen": [177, 356, 357, 379], "slew": 177, "rush": 177, "f": [177, 359, 360, 370, 376, 379, 381, 521, 625, 759, 800, 804], "g": [177, 360, 370, 393, 434, 439, 462, 471, 487, 1057, 1062, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1107, 1110, 1111, 1114, 1119], "inevit": 177, "deviat": [177, 1052, 1053, 1056, 1057, 1062, 1094, 1115, 1118, 1171, 1172], "origin": [177, 180, 181, 182, 183, 184, 367, 368, 371, 376, 378, 521, 552, 555, 884, 910, 912, 970, 1000, 1003, 1004, 1007], "often": [177, 366, 393], "erron": 177, "train": [177, 366, 370, 372, 379, 380, 381, 391, 392, 393, 833, 835, 838, 840, 842, 853, 855, 1136], "poor": 177, "converg": 177, "perform": [177, 180, 181, 361, 363, 365, 366, 367, 369, 370, 372, 373, 374, 376, 379, 393, 404, 409, 415, 424, 425, 471, 759, 777, 781, 782, 783, 801, 802, 803, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 879, 881, 884, 933, 1030, 1031, 1032, 1033, 1034, 1041, 1042, 1127, 1128, 1131, 1132, 1135], "issu": [177, 355, 358, 376, 378, 380, 393], "publish": [177, 393], "manag": [177, 355, 373, 393, 471], "get": [177, 180, 181, 355, 356, 358, 360, 366, 371, 372, 373, 376, 377, 378, 379, 380, 434, 452, 453, 454, 457, 471, 480, 481, 490, 491, 504, 505, 510, 514, 517, 520, 759, 766, 793, 794, 795, 814, 1136, 1142, 1157, 1166], "work": [177, 356, 357, 358, 360, 365, 370, 371, 372, 375, 376, 377, 378, 380, 381, 1136, 1142], "repositori": [177, 356, 357, 359, 364], "pull": [177, 355, 356, 359, 361, 393], "request": [177, 355, 361, 471, 507], "confus": [177, 373], "do": [177, 180, 181, 356, 357, 358, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 393, 521, 712, 715, 759, 803, 833, 849, 851, 869, 1034, 1035, 1044, 1045, 1046], "expect": [177, 393, 759, 766, 1136], "codebas": [177, 355, 360, 361, 373, 375, 471, 513, 514, 1136], "total": [177, 180, 181, 182, 183, 184, 355, 357, 363, 365, 372, 379, 380, 393, 471, 517, 1069, 1072, 1094, 1115, 1118, 1123, 1126], "hour": 177, "spent": 177, "spin": 177, "off": [177, 375, 884, 894, 896, 942, 944], "test": [177, 356, 358, 360, 363, 393, 434, 459, 460, 521, 633, 636, 637, 640, 641, 644, 1127, 1128, 1131, 1132, 1135], "error": [177, 180, 181, 356, 365, 369, 372, 374, 378, 393, 404, 405, 471, 521, 605, 608, 1094, 1099, 1102, 1107, 1110, 1169, 1170, 1173, 1177], "address": [177, 357, 358, 369, 376], "sake": 177, "singl": [177, 180, 181, 357, 361, 363, 365, 366, 368, 370, 373, 374, 376, 379, 380, 381, 393, 471, 480, 481, 500, 501, 502, 503, 759, 829, 832, 1057, 1062, 1063, 1065, 1074, 1075], "multipl": [177, 180, 181, 185, 194, 282, 283, 287, 290, 297, 299, 323, 324, 325, 326, 337, 338, 341, 342, 357, 363, 366, 370, 393, 521, 539, 669, 691, 694, 759, 760, 762, 763, 764, 788, 792, 809, 884, 903, 970, 971, 974, 975, 1004, 1007, 1008, 1009, 1052, 1053, 1056, 1059, 1061, 1069, 1070, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1167], "line": [177, 356, 363, 369, 377, 378, 379, 380, 391, 1136, 1142], "directli": [177, 357, 361, 362, 366, 369, 370, 371, 372, 373, 374, 376, 378, 380, 381, 392, 393, 1034, 1046], "graph": [177, 366, 370, 377, 393, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1074, 1075, 1076, 1080, 1082, 1169, 1170], "guarante": [177, 369, 393, 1074, 1075], "turn": [177, 363, 370], "take": [177, 355, 356, 357, 362, 363, 365, 370, 371, 372, 376, 378, 380, 381, 393, 521, 580, 583, 1136, 1142], "few": [177, 357, 358, 366, 370, 371, 372, 373, 377, 378, 379, 380, 391, 1136, 1142], "second": [177, 356, 363, 373, 378, 434, 461, 466, 471, 502, 521, 535, 538, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 599, 601, 604, 612, 620, 621, 624, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 740, 744, 759, 767, 814, 819, 833, 835, 838, 840, 842, 853, 855, 884, 888, 890, 894, 896, 897, 899, 906, 909, 920, 922, 926, 928, 933, 939, 941, 945, 947, 970, 1014, 1017, 1018, 1021, 1030, 1032, 1074, 1075, 1076, 1080, 1173, 1174, 1175], "automat": [177, 356, 357, 366, 370, 374, 375, 376, 377, 380, 381, 1136], "everyon": [177, 355, 357, 393], "regardless": [177, 180, 181, 355, 378, 381, 412, 413], "wouldn": 177, "nice": [177, 365], "write": [177, 180, 181, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 373, 376, 378, 381, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 442, 471, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 778, 781, 782, 783, 785, 787, 788, 791, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1073, 1074, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "onc": [177, 356, 357, 370, 371, 372, 376, 379, 393, 471, 515, 884, 903, 933, 1057, 1058], "know": [177, 357, 1074, 1075, 1076, 1080, 1082], "among": [177, 180, 181, 365], "frantic": 177, "port": 177, "lucid": 177, "honk": 177, "improv": [177, 357, 366, 376], "understand": [177, 356, 357, 358, 359, 360, 362, 363, 364, 374, 375], "pattern": [177, 180, 181, 362, 371, 759, 781, 782, 783], "hasn": 177, "now": [177, 180, 181, 356, 359, 361, 368, 370, 371, 374, 378, 379, 381, 392, 393, 1157, 1168, 1169, 1170], "spend": 177, "torchvis": 177, "probabl": [177, 871, 879, 1057, 1058, 1157, 1165], "sonnet": 177, "about": [177, 356, 357, 364, 375, 376, 380, 381, 393, 434, 454, 457], "next": [177, 356, 357, 358, 359, 362, 363, 367, 368, 378, 379, 434, 454, 1136, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "everyth": [177, 357, 358, 377, 393], "zero": [177, 180, 181, 182, 183, 363, 369, 370, 371, 372, 374, 376, 379, 380, 404, 406, 407, 415, 418, 420, 426, 430, 431, 433, 434, 440, 521, 535, 540, 543, 568, 571, 592, 613, 616, 617, 677, 680, 681, 684, 689, 690, 691, 694, 696, 699, 700, 703, 708, 711, 712, 715, 716, 719, 732, 735, 736, 739, 745, 750, 759, 777, 812, 815, 816, 833, 835, 838, 840, 842, 853, 855, 857, 859, 871, 879, 884, 891, 905, 906, 909, 914, 916, 923, 925, 945, 947, 948, 950, 970, 984, 987, 988, 991, 996, 999, 1004, 1007, 1026, 1029, 1052, 1053, 1056, 1057, 1059, 1060, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1173, 1174, 1175, 1176], "need": [177, 356, 357, 358, 359, 361, 362, 363, 364, 366, 369, 370, 373, 376, 378, 379, 392, 393, 759, 771, 772, 774, 970, 971, 974, 984, 987], "said": 177, "high": [177, 180, 181, 185, 264, 297, 298, 341, 342, 358, 379, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1066], "level": [177, 355, 358, 366, 375, 376, 379, 380, 381, 393], "optim": [177, 373, 377, 379, 381, 392, 471, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1030, 1031, 1032, 1033, 1136, 1174, 1175, 1176, 1178], "trainer": [177, 391, 393, 1136], "statu": 177, "quo": 177, "kera": 177, "dopamin": 177, "ignit": 177, "catalyst": 177, "lightn": 177, "fastai": 177, "haiku": [177, 381], "flax": [177, 381, 393], "trax": [177, 381], "objax": [177, 381], "idea": [177, 392], "fulli": [177, 369, 370, 374, 376, 377, 378, 379, 380, 381, 393, 1157, 1167, 1168], "offer": [177, 380], "containerwithactiv": [178, 182, 183], "dict_in": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "queue": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 379, 471, 480, 481, 759, 814, 819], "queue_load_s": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "container_combine_method": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "list_join": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "queue_timeout": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 759], "print_limit": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "key_length_limit": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "print_ind": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "print_line_spac": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "ivyh": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "default_key_color": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "green": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 1182, 1183], "keyword_color_dict": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "rebuild_child_contain": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "types_to_iteratively_nest": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "alphabetical_kei": [178, 179, 180, 181, 182, 183, 184, 185, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "containerbas": [178, 179, 180, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 370], "__getitem__": [180, 181, 370], "queri": [180, 181, 370, 371, 378, 471, 504, 514, 871, 882, 883, 1157, 1168], "slice": [180, 181, 759, 787, 788, 791, 1034, 1043], "chain": [180, 181, 369, 370, 380, 381, 393, 1030, 1031, 1032, 1034, 1047, 1179, 1180], "element": [180, 181, 362, 376, 381, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 422, 423, 430, 431, 471, 494, 498, 502, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 767, 768, 771, 772, 774, 777, 778, 785, 799, 828, 829, 871, 879, 884, 888, 890, 897, 899, 906, 909, 926, 928, 933, 970, 971, 974, 988, 991, 996, 999, 1004, 1007, 1009, 1010, 1013, 1057, 1058, 1069, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1083, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1165], "represent": [180, 181, 182, 183, 184, 392, 414, 434, 438, 439, 454, 457, 471, 487, 488, 521, 522, 525, 535, 560, 563, 572, 575, 580, 583, 685, 688, 691, 694, 759, 765, 822, 827], "dictionari": [180, 181, 182, 183, 184, 379, 393, 471, 514], "around": [180, 181, 182, 183, 184, 357, 366, 369, 374, 378, 393], "sequenc": [180, 181, 182, 183, 184, 363, 371, 392, 412, 413, 471, 480, 481, 759, 768, 809, 970, 1009, 1014, 1017, 1057, 1059, 1060, 1094, 1099, 1102, 1157, 1166, 1171, 1172, 1179, 1180], "multiprocess": [180, 181, 182, 183, 184, 379, 393, 471, 480, 759], "asynchron": [180, 181, 182, 183, 184], "wait": [180, 181, 182, 183, 184, 357], "size": [180, 181, 182, 183, 184, 378, 379, 415, 424, 425, 471, 513, 514, 515, 759, 815, 821, 871, 883, 884, 894, 896, 910, 912, 920, 922, 926, 928, 933, 945, 947, 970, 984, 987, 1004, 1007, 1009, 1010, 1013, 1057, 1058, 1062, 1063, 1065, 1069, 1070, 1072, 1127, 1128, 1131, 1132, 1135, 1157, 1158, 1159], "dimens": [180, 181, 182, 183, 184, 363, 376, 379, 404, 409, 415, 430, 431, 471, 502, 759, 781, 782, 783, 786, 796, 812, 831, 871, 872, 873, 874, 875, 876, 877, 878, 881, 884, 885, 887, 888, 890, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 945, 947, 948, 950, 954, 960, 963, 965, 968, 970, 976, 979, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1030, 1031, 1032, 1033, 1057, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1082, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168], "combin": [180, 181, 182, 183, 184, 357, 363, 365, 366, 369, 370, 381, 884, 888, 890], "arriv": [180, 181, 182, 183, 184], "timeout": [180, 181, 182, 183, 184, 471, 480, 481, 759, 814, 819], "limit": [180, 181, 182, 183, 184, 357, 363, 365, 376, 379, 381, 393, 434, 454, 457, 759, 771, 772, 774, 970, 971, 974], "maximum": [180, 181, 182, 183, 184, 363, 376, 379, 381, 471, 495, 499, 503, 515, 521, 759, 771, 772, 774, 786, 833, 853, 855, 970, 971, 974, 1034, 1046, 1069, 1070, 1094, 1099, 1102, 1107, 1110, 1136], "length": [180, 181, 182, 183, 184, 379, 415, 416, 426, 884, 933, 935, 936, 938, 970, 1000, 1003], "whitespac": [180, 181, 182, 183, 184], "indent": [180, 181, 182, 183, 184, 379], "extra": [180, 181, 182, 183, 184, 363, 368, 369, 376, 833, 844], "newlin": [180, 181, 182, 183, 184, 362], "handl": [180, 181, 182, 183, 184, 360, 365, 366, 368, 370, 371, 372, 373, 374, 380, 393, 412, 413, 471, 487, 488, 489, 490, 491, 505, 509, 510, 517, 520, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1173, 1174, 1175, 1176, 1177, 1178], "result": [180, 181, 182, 183, 184, 361, 362, 363, 365, 369, 370, 371, 373, 374, 379, 393, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 442, 462, 471, 480, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 778, 781, 782, 783, 785, 787, 788, 791, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1047, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1082, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136], "color": [180, 181, 182, 183, 184, 1182, 1183], "termin": [180, 181, 182, 183, 184, 356, 357, 359, 370, 376, 379], "map": [180, 181, 182, 183, 184, 365, 366, 370, 374, 379, 392, 393, 471, 480, 1034, 1041, 1042, 1046, 1047, 1157, 1168], "termcolor": [180, 181, 182, 183, 184], "rebuild": [180, 181, 182, 183, 184], "found": [180, 181, 182, 183, 184, 356, 357, 362, 369, 370, 471, 505], "constructor": [180, 181, 182, 183, 184, 371, 372, 378, 759, 766, 1179, 1180], "param": [180, 181, 182, 183, 184, 185, 290, 325, 326, 376, 381, 759, 765, 787, 788, 791, 792], "kept": [180, 181, 182, 183, 184, 357, 373, 1030, 1031, 1032], "structur": [180, 181, 182, 183, 184, 359, 361, 366, 369, 370, 379, 380, 759, 775, 1034, 1047], "alphabet": [180, 181, 182, 183, 184], "preserv": [180, 181, 182, 183, 184, 381, 393, 833, 866, 970, 988, 991], "__setitem__": [180, 181, 369, 370, 378], "val": [180, 181, 373, 378, 759, 801, 802, 803, 817, 818], "after": [180, 181, 363, 370, 371, 375, 434, 466, 521, 732, 735, 833, 840, 842, 844, 845, 847, 853, 855, 857, 859, 861, 863, 1052, 1053, 1056, 1173, 1174, 1175, 1176, 1177, 1178], "updat": [180, 181, 356, 357, 358, 359, 360, 363, 364, 368, 369, 370, 371, 374, 376, 378, 379, 381, 393, 471, 480, 759, 803, 815, 816, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 881, 1030, 1031, 1032, 1034, 1041, 1042, 1050, 1051, 1146, 1147, 1173, 1174, 1175, 1176, 1177, 1178], "all_fals": [180, 181], "assert_is_bool": [180, 181], "key_chain": [180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 443, 445, 447, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 627, 628, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 691, 693, 695, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 760, 762, 764, 772, 773, 788, 790, 792, 840, 841, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 864, 906, 908, 955, 957, 959, 960, 962, 964, 965, 967, 969, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1034, 1047, 1053, 1055, 1059, 1061, 1063, 1064, 1066, 1076, 1077, 1079, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1122, 1123, 1125, 1128, 1130, 1132, 1134], "to_appli": [180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 443, 445, 447, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 627, 628, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 691, 693, 695, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 760, 762, 764, 772, 773, 788, 790, 792, 840, 841, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 864, 906, 908, 955, 957, 959, 960, 962, 964, 965, 967, 969, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1034, 1047, 1053, 1055, 1063, 1064, 1066, 1076, 1077, 1079, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1122, 1123, 1125, 1128, 1130, 1132, 1134], "prune_unappli": [180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 443, 445, 447, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 627, 628, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 691, 693, 695, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 760, 762, 764, 772, 773, 788, 790, 792, 840, 841, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 864, 906, 908, 955, 957, 959, 960, 962, 964, 965, 967, 969, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1034, 1047, 1053, 1055, 1063, 1064, 1066, 1076, 1077, 1079, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1122, 1123, 1125, 1128, 1130, 1132, 1134], "map_sequ": [180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 443, 445, 447, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 556, 558, 564, 566, 584, 586, 590, 591, 594, 595, 598, 600, 605, 607, 611, 613, 615, 619, 620, 621, 633, 635, 637, 639, 641, 643, 653, 655, 657, 659, 661, 663, 665, 667, 669, 677, 679, 691, 693, 695, 696, 698, 704, 706, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 760, 762, 764, 772, 773, 788, 790, 792, 840, 841, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 864, 955, 957, 959, 960, 962, 964, 965, 967, 969, 971, 973, 975, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1018, 1020, 1022, 1024, 1026, 1028, 1053, 1055, 1063, 1064, 1066, 1076, 1077, 1079, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1122, 1123, 1125, 1128, 1130, 1132, 1134], "entri": [180, 181, 415, 424, 425, 970, 1009, 1034, 1047], "boolean": [180, 181, 370, 415, 422, 434, 440, 458, 470, 471, 506, 518, 521, 560, 563, 564, 567, 572, 575, 580, 583, 673, 676, 677, 680, 681, 684, 685, 688, 759, 760, 763, 767, 768, 798, 799, 800, 804, 805, 806, 807, 808, 825, 832, 833, 849, 851, 1030, 1031, 1032, 1034, 1044, 1094, 1107, 1110], "evalu": [180, 181, 370, 521, 609, 613, 616, 653, 656, 657, 660, 661, 664, 665, 668, 696, 699, 720, 723, 736, 739, 1034, 1035, 1044, 1045, 1127, 1128, 1131, 1132, 1135], "assert": [180, 181, 378, 379, 759, 769], "skip": [180, 181, 359, 365, 1034, 1047], "prune": [180, 181, 1034, 1047, 1048, 1049], "all_key_chain": [180, 181], "include_empti": [180, 181], "all_tru": [180, 181, 370, 379], "arrays_as_list": [180, 181], "intermedi": [180, 181], "as_arrai": [180, 181, 759, 796, 821], "as_bool": [180, 181], "as_on": [180, 181], "ones": [180, 181, 182, 183, 365, 376, 378, 379, 415, 420, 429, 521, 584, 587, 759, 812, 1136], "sub": [180, 181, 357, 358, 360, 365, 370, 378, 379, 380, 471, 496, 497, 500, 501, 502, 503, 884, 894, 896, 970, 1009, 1030, 1031, 1032, 1033, 1136], "fill": [180, 181, 415, 418, 422, 423, 428, 429, 432, 433, 1057, 1059, 1060], "as_random_uniform": [180, 181], "low": [180, 181, 185, 264, 297, 298, 341, 342, 376, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1066], "uniform": [180, 181, 380, 1057, 1058, 1059, 1060, 1063, 1065, 1148, 1150, 1151, 1154, 1155], "lower": [180, 181, 357, 363, 376, 393, 415, 420, 430, 521, 689, 884, 885, 887, 1057, 1063, 1065], "boundari": [180, 181, 1057, 1063, 1065], "output": [180, 181, 356, 360, 361, 362, 363, 365, 366, 369, 370, 372, 373, 374, 376, 378, 380, 381, 393, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 440, 442, 471, 480, 481, 515, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 770, 771, 772, 774, 777, 778, 781, 782, 783, 785, 787, 788, 791, 799, 812, 815, 816, 833, 844, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1047, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1073, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168], "interv": [180, 181, 376, 381, 415, 416, 424, 425, 884, 945, 947, 970, 971, 974, 1014, 1017, 1057, 1059, 1060, 1063, 1065, 1127, 1128, 1131, 1132, 1135], "as_vari": [180, 181], "as_zero": [180, 181], "assert_contains_sub_contain": [180, 181], "sub_cont": [180, 181], "partial": [180, 181, 357, 1169, 1170], "except": [180, 181, 362, 369, 373, 378, 393, 434, 442, 759, 769, 780, 803, 830, 884, 905, 923, 925, 970, 976, 979, 1014, 1017, 1069, 1072, 1127, 1128, 1131, 1132, 1135], "diff": [180, 181, 370, 379], "screen": [180, 181, 379], "assert_contains_sub_structur": [180, 181], "check_shap": [180, 181], "static": [180, 181, 185, 192, 279, 282, 283, 286, 287, 290, 297, 299, 303, 304, 305, 319, 320, 323, 324, 325, 326, 327, 328, 335, 336, 337, 338, 341, 342, 345, 346, 347, 348, 353, 354, 358, 362, 363, 366, 393, 412, 413, 443, 447, 522, 526, 539, 551, 556, 669, 746, 751, 754, 760, 764, 788, 792, 971, 975, 1004, 1008, 1059, 1061, 1076, 1077], "assert_ident": [180, 181], "check_typ": [180, 181], "same_arrai": [180, 181, 379], "arrays_equ": [180, 181, 182, 183, 759], "datatyp": [180, 181, 415, 417, 427, 434, 448, 459, 460, 461], "exact": [180, 181, 357, 376, 1074, 1075], "assert_identical_structur": [180, 181], "at_key_chain": [180, 181], "ignore_key_error": [180, 181], "ignore_non": [180, 181], "at_kei": [180, 181], "ignor": [180, 181, 363, 393, 415, 426, 1034, 1045, 1173, 1177], "substr": [180, 181], "access": [180, 181, 357, 359, 371], "clip_min": [180, 181], "clip_max": [180, 181], "minimum": [180, 181, 376, 381, 471, 521, 522, 525, 759, 794, 795, 817, 818, 823, 824, 970, 971, 974, 1069, 1071, 1094, 1099, 1102, 1107, 1110, 1136], "config": [180, 181, 379, 1034, 1047], "right": [180, 181, 355, 356, 357, 360, 363, 379, 521, 568, 571, 576, 579, 884, 933], "duplic": [180, 181, 362, 367, 368, 378, 380], "compar": [180, 181, 365, 379, 759, 760, 763, 767, 768, 1074, 1075, 1076, 1080, 1082, 1083, 1084, 1087, 1089, 1092], "configur": [180, 181, 356, 357, 359, 371, 471, 514, 1034, 1047], "container_rightmost": [180, 181], "common_key_chain": [180, 181, 370], "across": [180, 181, 358, 363, 365, 366, 370, 371, 374, 471, 480, 481, 492, 493, 495, 496, 497, 498, 499, 503, 513, 514, 759, 767, 768, 1034, 1040, 1069, 1071], "properti": [180, 181, 363, 365, 366, 370, 378, 379, 380, 471, 483, 1169, 1170, 1173, 1174, 1175, 1176, 1178], "contains_sub_contain": [180, 181], "match": [180, 181, 370, 434, 440, 521, 712, 715, 759, 809], "contains_sub_structur": [180, 181], "copi": [180, 181, 359, 362, 367, 371, 376, 378, 379, 392, 393, 415, 417, 421, 434, 440, 471, 516, 759, 776, 828, 829, 970, 1000, 1003, 1034, 1036, 1083, 1089, 1092], "create_if_abs": [180, 181], "inplac": [180, 181, 185, 190, 231, 238, 239, 259, 281, 291, 293, 294, 296, 327, 328, 360, 363, 368, 369, 374, 378, 380, 759, 769, 800, 803, 804, 825, 833, 840, 841, 842, 843, 845, 846, 847, 848, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 1146, 1147, 1173, 1174, 1175, 1176, 1177, 1178], "correspond": [180, 181, 182, 183, 185, 357, 362, 363, 364, 366, 369, 370, 371, 374, 434, 441, 521, 552, 555, 708, 711, 884, 888, 890, 897, 899, 930, 932, 970, 976, 979, 1004, 1007, 1057, 1058, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1082, 1094, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "alreadi": [180, 181, 356, 357, 367, 370, 374, 378, 393, 471, 521, 584, 587, 617, 691, 694, 716, 719, 755, 758, 884, 920, 922, 1136], "noth": [180, 181, 357], "cutoff_at_depth": [180, 181], "depth_cutoff": [180, 181], "summari": [180, 181, 357, 434, 449, 450, 451, 463, 464, 465, 471, 484, 485, 759, 775, 779, 797, 833, 865, 870], "cutoff_at_height": [180, 181], "height_cutoff": [180, 181], "deep_copi": [180, 181, 379], "intern": [180, 181, 362, 369, 370, 372, 373, 471, 833, 869, 1034, 1035, 1044, 1045, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1179, 1180], "dev": [180, 181, 182, 184, 185, 199, 356, 366, 372, 376, 378, 380, 471, 480, 505], "belong": [180, 181, 380], "dev_clon": [180, 181, 471], "clone": [180, 181, 357, 359, 471, 492, 493, 494, 495], "dev_dist": [180, 181, 471], "distribut": [180, 181, 358, 372, 393, 471, 492, 496, 497, 498, 499, 871, 879, 954, 955, 958, 960, 963, 965, 968, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1157, 1165, 1169, 1170], "along": [180, 181, 361, 373, 415, 424, 425, 471, 496, 497, 498, 499, 500, 501, 502, 503, 515, 759, 777, 778, 787, 831, 884, 910, 912, 942, 944, 945, 947, 948, 950, 954, 960, 963, 965, 968, 970, 976, 979, 988, 991, 996, 999, 1004, 1007, 1009, 1014, 1017, 1022, 1025, 1030, 1031, 1032, 1033, 1057, 1068, 1069, 1070, 1071, 1083, 1084, 1087, 1089, 1092, 1094, 1095, 1098, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1122, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "split": [180, 181, 355, 357, 375, 376, 393, 471, 480, 496, 497, 498, 499, 513, 514, 515, 759, 809, 970, 1136], "dev_str": [180, 181], "diff_kei": [180, 181], "detect_key_diff": [180, 181], "detect_value_diff": [180, 181], "detect_shape_diff": [180, 181], "thei": [180, 181, 358, 360, 361, 363, 366, 368, 370, 371, 372, 373, 378, 379, 380, 381, 393, 434, 461, 1030, 1031, 1032, 1057, 1058, 1136, 1179, 1180], "treat": [180, 181, 377, 381, 412, 413], "detect": [180, 181, 374, 379, 380, 1034, 1035, 1045], "without": [180, 181, 357, 361, 366, 369, 370, 372, 374, 376, 378, 379, 380, 392, 393, 759, 814, 819, 970, 1000, 1003, 1034, 1036, 1074, 1075, 1076, 1080, 1082], "flag": [180, 181, 357, 373, 378, 471, 490, 833, 849, 851], "container0": [180, 181], "einops_rearrang": [180, 181, 759], "axes_length": [180, 181, 759, 781, 782, 783], "rearrang": [180, 181, 759, 781, 783], "addit": [180, 181, 356, 357, 361, 362, 365, 370, 371, 378, 379, 381, 471, 516, 521, 535, 759, 781, 782, 783, 1052, 1053, 1056, 1157, 1167], "einops_reduc": [180, 181, 759], "reduct": [180, 181, 371, 378, 759, 782, 815, 816, 1127, 1128, 1131, 1132, 1135, 1136], "One": [180, 181, 371, 376, 378, 379, 759, 782, 970, 1000, 1003, 1057, 1059, 1060], "callabl": [180, 181, 370, 376, 394, 395, 396, 397, 398, 399, 400, 401, 402, 412, 413, 434, 455, 456, 471, 515, 759, 765, 770, 780, 782, 1030, 1031, 1032, 1033, 1034, 1040, 1044, 1045, 1046], "einops_repeat": [180, 181, 759], "find_sub_contain": [180, 181], "sub_cont_to_find": [180, 181], "exsit": [180, 181], "find_sub_structur": [180, 181], "sub_struc_to_find": [180, 181], "flatten_key_chain": [180, 181, 379, 1169, 1170], "__": [180, 181, 363, 379], "above_height": [180, 181, 379], "below_depth": [180, 181, 379], "format_key_chain": [180, 181], "format_fn": [180, 181], "format": [180, 181, 359, 362, 371, 372, 376, 378, 379, 434, 452, 471, 491, 1094, 1095, 1098, 1122, 1136], "string": [180, 181, 367, 371, 372, 376, 379, 434, 438, 439, 452, 458, 470, 471, 487, 488, 489, 490, 504, 510, 516, 517, 520, 759, 779], "from_disk_as_hdf5": [180, 181, 379], "h5_obj_or_filepath": [180, 181], "slice_obj": [180, 181], "load": [180, 181, 393], "disk": [180, 181, 379], "h5py": [180, 181], "file": [180, 181, 356, 357, 359, 361, 362, 366, 367, 369, 370, 376, 379, 759, 820, 1169, 1170], "hdf5": [180, 181, 379, 1169, 1170], "filepath": [180, 181, 357], "h5": [180, 181], "from_disk_as_json": [180, 181, 379], "json_filepath": [180, 181], "json": [180, 181, 379], "were": [180, 181, 357, 361, 365, 370], "abl": [180, 181, 356, 357, 366, 371, 373, 378, 381], "dure": [180, 181, 366, 370, 371, 372, 373, 393, 412, 413, 471, 516, 759, 830, 833, 835, 838, 840, 842, 853, 855, 884, 906, 909, 1030, 1031, 1032, 1033, 1094, 1115, 1118, 1123, 1126, 1169, 1170, 1173, 1174, 1175, 1177], "from_disk_as_pickl": [180, 181, 379], "pickle_filepath": [180, 181], "pickl": [180, 181, 370, 379], "from_flat_list": [180, 181], "flat_list": [180, 181], "hierarchi": [180, 181, 379], "flat": [180, 181, 759, 815, 970, 996, 999], "popul": [180, 181, 371, 372, 376, 1057, 1058, 1094, 1115, 1118, 1123, 1126], "from_numpi": [180, 181, 379], "gather": [180, 181, 759, 788, 791], "accord": [180, 181, 356, 359, 366, 371, 434, 443, 446, 454, 521, 535, 576, 579, 691, 694, 759, 787, 815, 816, 884, 945, 947, 970, 980, 983, 1026, 1029, 1094, 1115, 1118, 1123, 1126], "index": [180, 181, 359, 366, 370, 378, 414, 415, 420, 426, 471, 512, 759, 765, 787, 788, 791, 970, 1014, 1017, 1034, 1037, 1038, 1041, 1042, 1043, 1048, 1050, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1139, 1141], "h5_file_s": [180, 181], "content": [180, 181, 358, 359, 373, 376, 379], "batch": [180, 181, 366, 370, 379, 471, 513, 514, 759, 786, 871, 880, 884, 948, 950, 1030, 1031, 1032, 1033, 1052, 1053, 1056, 1171, 1172], "handle_inplac": [180, 181], "prime": [180, 181], "overwritten": [180, 181, 367, 369], "has_kei": [180, 181], "query_kei": [180, 181], "somewher": [180, 181], "has_key_chain": [180, 181], "has_nan": [180, 181, 759], "include_inf": [180, 181, 759, 798, 832], "leafwis": [180, 181], "nan": [180, 181, 361, 362, 414, 434, 440, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 633, 636, 641, 644, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 759, 798, 832, 871, 883, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "well": [180, 181, 365, 373, 380, 381, 392, 759, 798, 884, 930, 932], "inf": [180, 181, 414, 759, 798, 832, 884, 948, 950], "wise": [180, 181, 376, 381, 404, 405, 406, 407, 408, 409, 410, 411, 521, 522, 525, 527, 535, 538, 540, 543, 548, 552, 555, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 601, 604, 605, 608, 612, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 700, 703, 708, 711, 712, 715, 740, 744, 759, 785, 970, 971, 974], "identical_array_shap": [180, 181], "exclus": [180, 181, 185, 234, 292, 327, 328, 366, 370, 381, 415, 416, 759, 777, 805, 806, 808, 833, 849, 850, 851, 852, 1057, 1059, 1060], "identical_config": [180, 181], "identical_structur": [180, 181], "if_exist": [180, 181], "inplace_upd": [180, 181, 373, 759, 1146, 1147], "key_chains_contain": [180, 181], "sub_str": [180, 181], "join": [180, 181, 970, 976, 979, 1014, 1017, 1136], "list_stack": [180, 181, 379], "dim": [180, 181, 371, 759, 812, 1157, 1168], "func": [180, 181, 370, 412, 413, 471, 515, 759, 770, 833, 844, 1034, 1047], "map_cont": [180, 181], "include_self": [180, 181], "possibi": [180, 181], "place": [180, 181, 357, 360, 361, 362, 363, 365, 366, 370, 372, 374, 381, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 443, 446, 471, 516, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 801, 802, 803, 871, 874, 883, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131, 1173, 1174, 1175, 1176, 1177, 1178], "matrix": [180, 181, 415, 426, 430, 431, 759, 760, 763, 771, 871, 880, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 910, 912, 913, 914, 916, 917, 919, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 951, 953, 1157, 1167], "p": [180, 181, 185, 214, 325, 326, 356, 357, 415, 426, 759, 771, 772, 773, 774, 871, 879, 884, 910, 912, 948, 950, 1157, 1165], "integ": [180, 181, 370, 371, 378, 415, 416, 422, 434, 457, 460, 462, 521, 522, 525, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 599, 617, 620, 621, 624, 685, 688, 708, 711, 712, 715, 716, 719, 755, 758, 884, 913, 945, 947, 948, 950, 970, 1009, 1057, 1059, 1060, 1067, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "flatten": [180, 181, 759, 786, 884, 920, 922, 948, 950, 970, 996, 999, 1004, 1007, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1082], "left": [180, 181, 356, 357, 363, 371, 521, 568, 571, 884, 897, 899, 910, 912, 933, 1069, 1070, 1136], "broadcast": [180, 181, 361, 362, 363, 370, 371, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 471, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 781, 782, 783, 785, 788, 791, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1073, 1074, 1082, 1083, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "correctli": [180, 181, 356, 365, 370, 371, 374, 380, 393, 884, 910, 912, 1069, 1070], "max_depth": [180, 181, 471, 475, 478, 485, 495, 499, 503, 759, 797, 1034, 1046], "multi_map": [180, 181, 370], "map_nest": [180, 181, 185, 202, 205, 207, 208, 209, 210, 215, 222, 229, 232, 233, 241, 242, 247, 248, 250, 251, 252, 258, 262, 265, 278, 323, 324, 333, 334, 337, 338, 538, 552, 554, 560, 562, 568, 570, 572, 574, 576, 578, 580, 582, 599, 603, 604, 612, 620, 621, 623, 627, 628, 629, 631, 645, 647, 649, 651, 669, 671, 673, 675, 681, 683, 685, 687, 700, 702, 708, 710, 712, 714, 906, 908, 976, 978, 1014, 1016], "leftmost": [180, 181, 1034, 1047], "multi_map_in_static_method": [180, 181, 370], "fn_name": [180, 181], "num_arrai": [180, 181], "overwrite_at_key_chain": [180, 181], "overwrit": [180, 181, 373, 376, 471, 515], "target_dict": [180, 181], "return_dict": [180, 181], "prune_empti": [180, 181], "keep_non": [180, 181], "empti": [180, 181, 182, 183, 369, 371, 372, 415, 416, 1094, 1115, 1118, 1119, 1127, 1128, 1131, 1132, 1135], "prune_key_chain": [180, 181], "key1": [180, 181, 380], "key2": [180, 181], "key3": [180, 181], "prune_key_from_key_chain": [180, 181], "absolut": [180, 181, 355, 521, 522, 525, 884, 893, 929], "certain": [180, 181, 356, 393, 415, 416, 424, 425], "decid": [180, 181, 356, 1034, 1045], "remov": [180, 181, 357, 358, 359, 362, 365, 366, 371, 373, 381, 884, 894, 896, 906, 909, 942, 944, 970, 1010, 1013, 1030, 1031, 1032], "prune_kei": [180, 181], "prune_keys_from_key_chain": [180, 181], "remove_key_length_limit": [180, 181], "remove_print_limit": [180, 181], "reshape_lik": [180, 181], "leading_shap": [180, 181], "return_cont": [180, 181], "restructur": [180, 181], "keep_orig": [180, 181], "transpos": [180, 181, 378, 381, 471, 502, 871, 873, 875, 877, 884, 905, 917, 919, 923, 925, 1136, 1157, 1159, 1161, 1163], "old": [180, 181, 356, 373], "keep": [180, 181, 356, 357, 364, 370, 377, 379, 381, 759, 831], "start": [180, 181, 355, 356, 357, 358, 359, 360, 362, 363, 371, 375, 376, 378, 379, 380, 392, 393, 415, 416, 424, 425, 471, 486], "restructure_key_chain": [180, 181], "keychain_map": [180, 181], "set_at_key_chain": [180, 181], "set_at_kei": [180, 181], "set_framework": [180, 181, 376, 378, 379, 381], "set_ivy_backend": [180, 181], "ivy_backend": [180, 181], "attribut": [180, 181, 362, 370, 371, 377, 378, 379, 380, 434, 454, 455, 456, 457, 471, 511], "show": [180, 181, 356, 357, 363, 373, 392, 393, 1136], "show_sub_contain": [180, 181], "sub_cont_or_keychain": [180, 181], "shuffl": [180, 181, 1057, 1136], "seed_valu": [180, 181, 1057, 1067], "align": [180, 181, 356, 376, 378, 1136, 1142], "seed": [180, 181, 182, 183, 1057, 1136], "shuffle_h5_fil": [180, 181], "dataset": [180, 181, 379, 391, 1136], "size_ordered_arrai": [180, 181], "keychain": [180, 181], "smallest": [180, 181, 434, 454, 457, 521, 584, 587], "largest": [180, 181, 392, 434, 454, 457, 884, 933], "slice_kei": [180, 181], "key_slic": [180, 181], "all_depth": [180, 181], "slice_via_kei": [180, 181], "sort_by_kei": [180, 181], "num_or_size_split": [180, 181, 376, 970, 1009], "with_remaind": [180, 181, 970, 1009], "constitu": [180, 181, 381], "dimension": [180, 181, 415, 416, 420, 426, 884, 888, 890, 891, 905, 906, 909, 914, 916, 920, 922, 923, 925, 945, 947, 948, 950, 970, 1009, 1069, 1070, 1071, 1072, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "evenli": [180, 181, 415, 416, 424, 425, 970, 1009], "store": [180, 181, 362, 367, 369, 370, 376, 378, 379, 380, 759, 786, 833, 869, 884, 942, 944, 970, 1009, 1169, 1170], "stop_gradi": [180, 181, 182, 183, 185, 190, 231, 238, 239, 259, 281, 291, 293, 294, 296, 327, 328, 380, 471, 515, 833, 840, 841, 842, 843, 845, 846, 847, 848, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 1030, 1031, 1032, 1033, 1136, 1173, 1174, 1175, 1176, 1177, 1178], "preserve_typ": [180, 181, 833, 866], "stop": [180, 181, 376, 393, 415, 416, 424, 425, 471, 486, 515, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 866, 1030, 1031, 1032, 1033, 1173, 1174, 1175, 1176, 1177, 1178], "alwai": [180, 181, 357, 358, 361, 362, 366, 367, 369, 370, 373, 374, 376, 378, 393, 434, 440, 521, 535, 691, 694, 759, 803, 833, 849, 851, 866], "structural_diff": [180, 181], "to_devic": [180, 181, 471, 490], "move": [180, 181, 357, 361, 471, 516], "cuda": [180, 181, 376, 379, 393, 415, 424, 425, 471, 480, 487, 512, 759, 787, 788, 791, 812, 815, 816, 1057, 1058, 1059, 1060, 1063, 1065, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "cpu": [180, 181, 357, 372, 393, 415, 424, 425, 471, 490, 491, 493, 507, 510, 512, 516, 517, 519, 520, 759, 787, 788, 791, 812, 815, 816, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1180], "target": [180, 181, 360, 375, 379, 380, 381, 471, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 1136], "to_dict": [180, 181], "to_disk_as_hdf5": [180, 181, 379], "starting_index": [180, 181], "max_batch_s": [180, 181], "read": [180, 181, 359, 1136], "r": [180, 181, 356, 759, 768, 831, 884, 926, 928, 951, 953], "w": [180, 181, 185, 281, 291, 293, 294, 296, 327, 328, 376, 379, 380, 759, 768, 833, 835, 838, 840, 842, 843, 845, 847, 848, 853, 855, 856, 857, 859, 860, 861, 863, 864, 871, 872, 873, 874, 875, 876, 877, 878], "later": [180, 181, 759, 770], "append": [180, 181, 359, 365, 376, 379, 521, 568, 571, 884, 894, 896, 906, 909], "to_disk_as_json": [180, 181, 379], "to_disk_as_pickl": [180, 181, 379], "to_flat_list": [180, 181], "to_iter": [180, 181, 370], "leaf_keys_onli": [180, 181], "to_iterator_kei": [180, 181], "to_iterator_valu": [180, 181], "to_json": [180, 181], "to_list": [180, 181, 759, 1136], "to_multi_dev": [180, 181], "multidevcontain": [180, 181, 182], "distributedarrai": [180, 181], "to_numpi": [180, 181, 379, 759, 1136], "update_backend": [180, 181], "to_raw": [180, 181], "raw": [180, 181, 362], "trim_kei": [180, 181], "max_length": [180, 181], "try_kc": [180, 181], "tri": [180, 181], "arbitrari": [180, 181, 365, 366, 370, 373, 374, 380, 393, 415, 426, 434, 441, 462, 471, 500, 501, 503], "concatten": [180, 181, 471, 500, 501, 502, 503, 515], "unstack": [180, 181, 376, 379, 759, 1136], "dim_siz": [180, 181, 471], "update_config": [180, 181], "global_norm": [180, 181, 185, 214, 325, 326, 772, 773], "vector": [180, 181, 392, 415, 426, 759, 772, 774, 871, 880, 884, 888, 890, 897, 899, 906, 909, 920, 922, 933, 935, 936, 938, 945, 947, 948, 950, 951, 953, 1157, 1167], "with_default_key_color": [180, 181], "with_entries_as_list": [180, 181], "with_ivy_backend": [180, 181], "with_key_length_limit": [180, 181, 379], "with_print_ind": [180, 181, 379], "with_print_limit": [180, 181, 379], "with_print_line_spac": [180, 181], "containerwithcr": [182, 183, 317], "containerwithdatatyp": [182, 183, 319], "containerwithdevic": [182, 183, 321], "containerwithelementwis": [182, 183, 323, 370], "containerwithgener": [182, 183, 325], "containerwithgradi": [182, 183, 327], "containerwithimag": [182, 183, 329], "containerwithlay": [182, 183, 331], "containerwithlinearalgebra": [182, 183, 333], "containerwithloss": [182, 183, 335], "containerwithmanipul": [182, 183, 337, 358], "containerwithnorm": [182, 183, 339], "containerwithrandom": [182, 183, 341], "containerwithsearch": [182, 183, 343], "containerwithset": [182, 183, 345], "containerwithsort": [182, 183, 347], "containerwithstatist": [182, 183, 349], "containerwithutil": [182, 183, 351], "__add__": [182, 183, 185, 362, 363, 369, 370, 374, 378], "special": [182, 183, 185, 358, 361, 362, 363, 369, 374, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 580, 583, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126], "__radd__": [182, 183, 185, 362, 363], "revers": [182, 183, 185, 358, 362, 363, 381, 393, 759, 780, 970, 988, 991], "arang": [182, 183, 371, 415, 424, 425, 1094, 1095, 1098, 1122, 1136], "arg_info": [182, 183, 759], "arg_nam": [182, 183, 759], "argmax": [182, 183, 1069, 1136], "argmin": [182, 183, 1069, 1136], "array_equ": [182, 183, 759], "as_ivy_dev": [182, 183, 378, 471], "as_ivy_dtyp": [182, 183, 434], "as_native_dev": [182, 183, 471], "as_native_dtyp": [182, 183, 434], "asarrai": [182, 183, 373, 415, 871, 872, 1074, 1076, 1080], "assert_supports_inplac": [182, 183, 759], "astyp": [182, 183, 371, 373, 434], "broadcast_arrai": [182, 183, 434], "broadcast_to": [182, 183, 371, 434], "cache_fn": [182, 183, 366, 759], "clear_mem_on_dev": [182, 183, 471], "clip_matrix_norm": [182, 183, 759], "closest_valid_dtyp": [182, 183, 434], "container_typ": [182, 183, 759], "conv1d": [182, 183, 871, 1157], "conv1d_transpos": [182, 183, 871], "conv2d": [182, 183, 871, 1136, 1157], "conv2d_transpos": [182, 183, 871], "conv3d": [182, 183, 871, 1157], "conv3d_transpos": [182, 183, 871], "copy_arrai": [182, 183, 759], "cumprod": [182, 183, 381, 759], "cumsum": [182, 183, 759, 1136], "current_backend_str": [182, 183, 759], "default_devic": [182, 183, 372, 376, 471, 509, 512, 519], "default_dtyp": [182, 183, 366, 371, 434], "default_float_dtyp": [182, 183, 371, 434], "default_int_dtyp": [182, 183, 371, 434], "depthwise_conv2d": [182, 183, 871, 1136], "dev_clone_arrai": [182, 183, 471], "dev_clone_it": [182, 183, 471], "dev_clone_nest": [182, 183, 471], "dev_dist_arrai": [182, 183, 471], "dev_dist_it": [182, 183, 471], "dev_dist_nest": [182, 183, 471], "dev_unifi": [182, 183, 471], "dev_unify_arrai": [182, 183, 471], "dev_unify_it": [182, 183, 471], "dev_unify_nest": [182, 183, 471], "dev_util": [182, 183, 372, 471], "dropout": [182, 183, 379, 871, 1157, 1168], "dtype_bit": [182, 183, 434], "empty_lik": [182, 183, 415], "execute_with_gradi": [182, 183, 370, 379, 380, 381, 393, 833, 1136], "ey": [182, 183, 381, 415, 871, 874, 878], "finfo": [182, 183, 434], "floormod": [182, 183, 759, 1136], "fourier_encod": [182, 183, 759], "from_dlpack": [182, 183, 415], "full_lik": [182, 183, 415], "function_supported_dtyp": [182, 183, 434], "function_unsupported_dtyp": [182, 183, 434], "gelu": [182, 183, 404, 1143], "get_all_arrays_in_memori": [182, 183, 759], "get_all_ivy_arrays_on_dev": [182, 183, 372, 471], "get_min_bas": [182, 183, 759], "get_min_denomin": [182, 183, 759], "get_num_dim": [182, 183, 759, 1136], "get_referrers_recurs": [182, 183, 759], "gpu_is_avail": [182, 183, 471], "handle_nest": [182, 183, 366, 370, 394], "handle_out_argu": [182, 183, 368, 371, 372, 373, 374, 394], "iinfo": [182, 183, 434], "indices_wher": [182, 183, 759, 1136], "infer_devic": [182, 183, 371, 372, 374, 394], "infer_dtyp": [182, 183, 371, 372, 374, 394], "inplace_arrays_support": [182, 183, 759], "inplace_decr": [182, 183, 759], "inplace_incr": [182, 183, 759], "inplace_variables_support": [182, 183, 759], "inputs_to_native_arrai": [182, 183, 369, 394], "invalid_dtyp": [182, 183, 434], "is_float_dtyp": [182, 183, 434], "is_int_dtyp": [182, 183, 434, 759, 829], "is_ivy_contain": [182, 183, 759], "leaky_relu": [182, 183, 404, 1136], "linear": [182, 183, 362, 376, 379, 380, 381, 404, 405, 406, 407, 759, 786, 871, 879, 930, 932, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "linspac": [182, 183, 376, 415, 416, 1136], "logspac": [182, 183, 376, 415], "lstm_updat": [182, 183, 376, 871], "match_kwarg": [182, 183, 759], "matrix_pow": [182, 183, 884], "meshgrid": [182, 183, 415], "multi_head_attent": [182, 183, 370, 373, 871], "multinomi": [182, 183, 1057], "nonzero": [182, 183, 521, 535, 691, 694, 1069], "num_arrays_in_memori": [182, 183, 759], "num_cpu_cor": [182, 183, 372, 471], "num_gpu": [182, 183, 365, 372, 471], "num_ivy_arrays_on_dev": [182, 183, 471], "one_hot": [182, 183, 381, 759, 1136], "ones_lik": [182, 183, 381, 415, 1136], "outputs_to_ivy_arrai": [182, 183, 369, 371, 372, 374, 394], "percent_used_mem_on_dev": [182, 183, 471], "print_all_arrays_in_memori": [182, 183, 759], "print_all_ivy_arrays_on_dev": [182, 183, 471], "promote_typ": [182, 183, 434], "randint": [182, 183, 185, 297, 341, 342, 1057, 1061, 1136], "random_norm": [182, 183, 871, 874, 877, 878, 884, 933, 1057, 1074, 1075], "result_typ": [182, 183, 371, 434], "scaled_dot_product_attent": [182, 183, 871], "scatter_flat": [182, 183, 759], "scatter_nd": [182, 183, 378, 759, 1136], "set_default_devic": [182, 183, 372, 471, 519], "set_default_dtyp": [182, 183, 366, 371, 434], "set_default_float_dtyp": [182, 183, 371, 434], "set_default_int_dtyp": [182, 183, 371, 434], "set_min_bas": [182, 183, 759], "set_min_denomin": [182, 183, 759], "set_queue_timeout": [182, 183, 759], "set_split_factor": [182, 183, 471], "set_tmp_dir": [182, 183, 759], "set_with_grad": [182, 183, 833], "shape_to_tupl": [182, 183, 371, 759], "sigmoid": [182, 183, 376, 379, 380, 404, 1136], "slogdet": [182, 183, 884, 893], "softplu": [182, 183, 404, 1136], "split_factor": [182, 183, 471, 480], "split_func_cal": [182, 183, 471], "stable_divid": [182, 183, 366, 759], "stable_pow": [182, 183, 759], "static_aco": [182, 183], "static_acosh": [182, 183], "static_al": [182, 183], "static_ani": [182, 183], "static_arang": [182, 183], "static_arg_info": [182, 183], "static_arg_nam": [182, 183], "static_argmax": [182, 183], "static_argmin": [182, 183], "static_arrai": [182, 183], "static_array_equ": [182, 183], "static_arrays_equ": [182, 183], "static_as_ivy_dev": [182, 183], "static_as_ivy_dtyp": [182, 183], "static_as_native_dev": [182, 183], "static_as_native_dtyp": [182, 183], "static_asarrai": [182, 183], "static_asin": [182, 183], "static_asinh": [182, 183], "static_assert_supports_inplac": [182, 183], "static_astyp": [182, 183], "static_atan": [182, 183], "static_atan2": [182, 183], "static_atanh": [182, 183], "static_bitwise_and": [182, 183], "static_bitwise_invert": [182, 183], "static_bitwise_left_shift": [182, 183], "static_bitwise_or": [182, 183], "static_bitwise_right_shift": [182, 183], "static_bitwise_xor": [182, 183], "static_broadcast_arrai": [182, 183], "static_broadcast_to": [182, 183], "static_cache_fn": [182, 183], "static_ceil": [182, 183], "static_choleski": [182, 183], "static_clear_mem_on_dev": [182, 183], "static_clip_matrix_norm": [182, 183], "static_clip_vector_norm": [182, 183], "static_closest_valid_dtyp": [182, 183], "static_concat": [182, 183], "static_constant_pad": [182, 183], "static_container_typ": [182, 183], "static_conv1d": [182, 183], "static_conv1d_transpos": [182, 183], "static_conv2d": [182, 183], "static_conv2d_transpos": [182, 183], "static_conv3d": [182, 183], "static_conv3d_transpos": [182, 183], "static_copy_arrai": [182, 183], "static_co": [182, 183], "static_cosh": [182, 183], "static_cross": [182, 183], "static_cumprod": [182, 183], "static_cumsum": [182, 183], "static_current_backend": [182, 183], "static_current_backend_str": [182, 183], "static_default": [182, 183], "static_default_devic": [182, 183], "static_default_dtyp": [182, 183], "static_default_float_dtyp": [182, 183], "static_default_int_dtyp": [182, 183], "static_depthwise_conv2d": [182, 183], "static_det": [182, 183], "static_dev": [182, 183], "static_dev_clon": [182, 183], "static_dev_clone_arrai": [182, 183], "static_dev_clone_it": [182, 183], "static_dev_clone_nest": [182, 183], "static_dev_dist": [182, 183], "static_dev_dist_arrai": [182, 183], "static_dev_dist_it": [182, 183], "static_dev_dist_nest": [182, 183], "static_dev_unifi": [182, 183], "static_dev_unify_arrai": [182, 183], "static_dev_unify_it": [182, 183], "static_dev_unify_nest": [182, 183], "static_dev_util": [182, 183], "static_diagon": [182, 183], "static_dropout": [182, 183], "static_dtyp": [182, 183], "static_dtype_bit": [182, 183], "static_eigh": [182, 183], "static_eigvalsh": [182, 183], "static_einops_rearrang": [182, 183], "static_einops_reduc": [182, 183], "static_einops_repeat": [182, 183], "static_einsum": [182, 183], "static_empti": [182, 183], "static_empty_lik": [182, 183], "static_equ": [182, 183], "static_erf": [182, 183], "static_execute_with_gradi": [182, 183], "static_exist": [182, 183], "static_exp": [182, 183], "static_expand_dim": [182, 183], "static_expm1": [182, 183], "static_ey": [182, 183], "static_finfo": [182, 183], "static_flip": [182, 183], "static_floor": [182, 183], "static_floor_divid": [182, 183], "static_floormod": [182, 183], "static_fourier_encod": [182, 183], "static_from_dlpack": [182, 183], "static_ful": [182, 183], "static_full_lik": [182, 183], "static_function_supported_dtyp": [182, 183], "static_function_unsupported_dtyp": [182, 183], "static_gath": [182, 183], "static_gelu": [182, 183], "static_get_all_arrays_in_memori": [182, 183], "static_get_all_ivy_arrays_on_dev": [182, 183], "static_get_min_bas": [182, 183], "static_get_min_denomin": [182, 183], "static_get_num_dim": [182, 183], "static_get_referrers_recurs": [182, 183], "static_gpu_is_avail": [182, 183], "static_great": [182, 183], "static_greater_equ": [182, 183], "static_handle_nest": [182, 183], "static_handle_out_argu": [182, 183], "static_has_nan": [182, 183], "static_iinfo": [182, 183], "static_indices_wher": [182, 183], "static_infer_devic": [182, 183], "static_infer_dtyp": [182, 183], "static_inplace_arrays_support": [182, 183], "static_inplace_decr": [182, 183], "static_inplace_incr": [182, 183], "static_inplace_upd": [182, 183], "static_inplace_variables_support": [182, 183], "static_inputs_to_native_arrai": [182, 183], "static_inv": [182, 183], "static_invalid_dtyp": [182, 183], "static_is_arrai": [182, 183], "static_is_float_dtyp": [182, 183], "static_is_int_dtyp": [182, 183], "static_is_ivy_arrai": [182, 183], "static_is_ivy_contain": [182, 183], "static_is_native_arrai": [182, 183], "static_isfinit": [182, 183], "static_isinf": [182, 183], "static_isnan": [182, 183], "static_layer_norm": [182, 183], "static_leaky_relu": [182, 183], "static_less": [182, 183], "static_less_equ": [182, 183], "static_linear": [182, 183], "static_linspac": [182, 183], "static_log": [182, 183], "static_log10": [182, 183], "static_log1p": [182, 183], "static_log2": [182, 183], "static_logaddexp": [182, 183], "static_logical_and": [182, 183], "static_logical_not": [182, 183], "static_logical_or": [182, 183], "static_logical_xor": [182, 183], "static_logspac": [182, 183], "static_lstm_upd": [182, 183], "static_match_kwarg": [182, 183], "static_matmul": [182, 183], "static_matrix_norm": [182, 183], "static_matrix_pow": [182, 183], "static_matrix_rank": [182, 183], "static_matrix_transpos": [182, 183], "static_max": [182, 183], "static_maximum": [182, 183], "static_mean": [182, 183], "static_meshgrid": [182, 183], "static_min": [182, 183], "static_minimum": [182, 183], "static_multi_head_attent": [182, 183], "static_multinomi": [182, 183], "static_multiprocess": [182, 183], "static_native_arrai": [182, 183], "static_neg": [182, 183], "static_nonzero": [182, 183], "static_not_equ": [182, 183], "static_num_arrays_in_memori": [182, 183], "static_num_cpu_cor": [182, 183], "static_num_gpu": [182, 183], "static_num_ivy_arrays_on_dev": [182, 183], "static_one_hot": [182, 183], "static_on": [182, 183], "static_ones_lik": [182, 183], "static_out": [182, 183], "static_outputs_to_ivy_arrai": [182, 183], "static_percent_used_mem_on_dev": [182, 183], "static_permute_dim": [182, 183], "static_pinv": [182, 183], "static_posit": [182, 183], "static_pow": [182, 183], "static_print_all_arrays_in_memori": [182, 183], "static_print_all_ivy_arrays_on_dev": [182, 183], "static_prod": [182, 183], "static_promote_typ": [182, 183], "static_qr": [182, 183], "static_queue_timeout": [182, 183], "static_random_norm": [182, 183], "static_relu": [182, 183], "static_remaind": [182, 183], "static_repeat": [182, 183], "static_reshap": [182, 183], "static_result_typ": [182, 183], "static_round": [182, 183], "static_scaled_dot_product_attent": [182, 183], "static_scatter_flat": [182, 183], "static_scatter_nd": [182, 183], "static_se": [182, 183], "static_set_default_devic": [182, 183], "static_set_default_dtyp": [182, 183], "static_set_default_float_dtyp": [182, 183], "static_set_default_int_dtyp": [182, 183], "static_set_min_bas": [182, 183], "static_set_min_denomin": [182, 183], "static_set_queue_timeout": [182, 183], "static_set_split_factor": [182, 183], "static_set_tmp_dir": [182, 183], "static_set_with_grad": [182, 183], "static_shap": [182, 183], "static_shape_to_tupl": [182, 183], "static_shuffl": [182, 183], "static_sigmoid": [182, 183], "static_sign": [182, 183], "static_sin": [182, 183], "static_sinh": [182, 183], "static_slogdet": [182, 183], "static_softmax": [182, 183], "static_softplu": [182, 183], "static_solv": [182, 183], "static_split": [182, 183], "static_split_factor": [182, 183], "static_split_func_cal": [182, 183], "static_sqrt": [182, 183], "static_squar": [182, 183], "static_squeez": [182, 183], "static_stable_divid": [182, 183], "static_stable_pow": [182, 183], "static_stack": [182, 183], "static_std": [182, 183], "static_stop_gradi": [182, 183], "static_sum": [182, 183], "static_supports_inplac": [182, 183], "static_svd": [182, 183], "static_svdv": [182, 183], "static_swapax": [182, 183], "static_tensordot": [182, 183], "static_til": [182, 183], "static_tmp_dir": [182, 183], "static_to_devic": [182, 183], "static_to_list": [182, 183], "static_to_native_arrays_and_back": [182, 183], "static_to_numpi": [182, 183], "static_to_scalar": [182, 183], "static_total_mem_on_dev": [182, 183], "static_tpu_is_avail": [182, 183], "static_trac": [182, 183], "static_tril": [182, 183], "static_triu": [182, 183], "static_trunc": [182, 183], "static_try_else_non": [182, 183], "static_type_promote_arrai": [182, 183], "static_unique_al": [182, 183], "static_unique_invers": [182, 183], "static_unique_valu": [182, 183], "static_unset_default_devic": [182, 183], "static_unset_default_dtyp": [182, 183], "static_unset_default_float_dtyp": [182, 183], "static_unset_default_int_dtyp": [182, 183], "static_unset_with_grad": [182, 183], "static_unstack": [182, 183], "static_used_mem_on_dev": [182, 183], "static_valid_dtyp": [182, 183], "static_value_is_nan": [182, 183], "static_var": [182, 183], "static_vari": [182, 183], "static_variable_data": [182, 183], "static_vecdot": [182, 183], "static_vector_norm": [182, 183], "static_vector_to_skew_symmetric_matrix": [182, 183], "static_wher": [182, 183], "static_with_grad": [182, 183], "static_zero_pad": [182, 183], "static_zero": [182, 183], "static_zeros_lik": [182, 183], "supports_inplac": [182, 183, 759], "tmp_dir": [182, 183, 759], "to_native_arrays_and_back": [182, 183, 368, 374, 394], "to_scalar": [182, 183, 759], "total_mem_on_dev": [182, 183, 372, 471], "tpu_is_avail": [182, 183, 471], "tril": [182, 183, 415], "triu": [182, 183, 415], "try_else_non": [182, 183, 759], "type_promote_arrai": [182, 183, 434], "unique_al": [182, 183, 1074], "unique_invers": [182, 183, 1074], "unique_valu": [182, 183, 1074], "unset_default_devic": [182, 183, 471], "unset_default_dtyp": [182, 183, 434], "unset_default_float_dtyp": [182, 183, 434], "unset_default_int_dtyp": [182, 183, 434], "unset_with_grad": [182, 183, 833], "used_mem_on_dev": [182, 183, 471], "valid_dtyp": [182, 183, 434], "value_is_nan": [182, 183, 759], "variable_data": [182, 183, 833], "with_grad": [182, 183, 833, 865], "zeros_lik": [182, 183, 415, 970, 971, 974, 1136], "at_dev": [182, 184, 185, 471, 484, 485], "container_method": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 443, 445, 447, 522, 524, 526, 529, 530, 531, 533, 537, 538, 539, 540, 542, 544, 546, 550, 551, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 590, 591, 594, 595, 598, 599, 600, 603, 604, 605, 607, 611, 612, 613, 615, 619, 620, 621, 623, 627, 628, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 691, 693, 695, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 741, 743, 746, 748, 749, 751, 753, 754, 755, 757, 760, 762, 764, 772, 773, 788, 790, 792, 835, 837, 839, 840, 841, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 864, 906, 908, 955, 957, 959, 960, 962, 964, 965, 967, 969, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1053, 1055, 1059, 1061, 1063, 1064, 1066, 1076, 1077, 1079, 1084, 1086, 1088, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1121, 1122, 1123, 1125, 1128, 1130, 1132, 1134], "adam_upd": [185, 327, 328, 380, 833], "lr": [185, 190, 231, 238, 239, 259, 281, 291, 293, 294, 296, 327, 328, 379, 380, 833, 840, 841, 842, 843, 845, 846, 847, 848, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 1173, 1174, 1175, 1176, 1177, 1178], "mw_tm1": [185, 190, 238, 281, 293, 327, 328, 833, 840, 841, 842, 843, 853, 854, 855, 856], "vw_tm1": [185, 190, 238, 281, 293, 327, 328, 833, 840, 841, 842, 843, 853, 854, 855, 856], "add_ivy_container_instance_method": [185, 353], "containerexampl": [185, 192, 353, 354], "static_all_equ": [185, 194, 325, 326, 760, 762], "int32": [185, 211, 286, 319, 320, 371, 434, 443, 445, 446, 447, 455, 759, 828, 970, 984, 987, 1094, 1111, 1114, 1119], "int64": [185, 211, 286, 319, 320, 371, 434, 443, 445, 446, 447, 455, 521, 576, 579, 1069, 1070, 1071, 1094, 1111, 1114, 1119], "clip_vector_norm": [185, 325, 326, 759], "max_norm": [185, 214, 325, 326, 759, 771, 772, 773, 774], "gradient_descent_upd": [185, 327, 328, 833, 1030, 1031, 1032, 1033, 1136], "is_vari": [185, 327, 328, 373, 833], "lamb_upd": [185, 327, 328, 833], "max_trust_ratio": [185, 238, 293, 327, 328, 833, 853, 854, 855, 856, 1173, 1175], "decay_lambda": [185, 238, 239, 293, 294, 327, 328, 833, 853, 854, 855, 856, 857, 858, 859, 860, 1173, 1175, 1176], "lars_upd": [185, 327, 328, 833], "optimizer_upd": [185, 327, 328, 833], "effective_grad": [185, 259, 296, 327, 328, 833, 861, 862, 863, 864], "random_uniform": [185, 341, 342, 372, 380, 1057, 1136], "static_ab": [185, 323, 324, 522], "static_adam_step": [185, 327, 328, 835], "87": [185, 280, 297, 327, 328, 341, 342, 833, 835, 838, 839, 1059, 1061], "976": [185, 280, 327, 328, 521, 750, 833, 835, 838, 839], "static_adam_upd": [185, 327, 328, 840], "static_add": [185, 323, 324, 362, 363, 370, 669], "static_argsort": [185, 347, 348, 1084], "static_binary_cross_entropi": [185, 335, 336, 955], "static_can_cast": [185, 319, 320, 443], "from_": [185, 286, 319, 320, 434, 443, 446, 447], "static_clip": [185, 337, 338, 971], "static_rol": [185, 287, 337, 338, 363, 370, 971, 975, 1004], "static_cross_entropi": [185, 335, 336, 960], "static_divid": [185, 323, 324, 370, 620, 621], "static_gather_nd": [185, 325, 326, 788], "static_gradient_descent_upd": [185, 327, 328, 845], "static_is_vari": [185, 327, 328, 849], "static_lamb_upd": [185, 327, 328, 853], "static_lars_upd": [185, 327, 328, 857], "static_multipli": [185, 323, 324, 370, 691], "static_optimizer_upd": [185, 327, 328, 861], "static_randint": [185, 341, 342, 1059], "20": [185, 297, 341, 342, 378, 521, 580, 583, 609, 716, 719, 732, 735, 884, 894, 896, 920, 922, 939, 941, 1057, 1059, 1060, 1061, 1069, 1072, 1073, 1094, 1095, 1098, 1122], "15": [185, 297, 341, 342, 356, 363, 521, 560, 563, 716, 719, 871, 874, 884, 894, 896, 920, 922, 939, 941, 970, 1004, 1007, 1052, 1053, 1056, 1057, 1059, 1060, 1061, 1069, 1072, 1074, 1075, 1094, 1095, 1098, 1122], "16": [185, 297, 303, 310, 323, 324, 341, 342, 357, 363, 379, 521, 551, 556, 745, 746, 748, 754, 871, 877, 884, 894, 896, 920, 922, 1059, 1061, 1069, 1073, 1094, 1095, 1098, 1122], "12": [185, 297, 341, 342, 356, 363, 370, 521, 560, 563, 580, 583, 592, 716, 719, 759, 777, 795, 833, 835, 838, 884, 894, 896, 920, 922, 939, 941, 970, 988, 991, 996, 999, 1004, 1007, 1052, 1053, 1056, 1057, 1059, 1060, 1061, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122], "40": [185, 297, 341, 342, 521, 592, 732, 735, 884, 920, 922, 1059, 1061, 1094, 1095, 1098, 1122], "gpu": [185, 297, 341, 342, 357, 372, 378, 393, 471, 490, 493, 506, 508, 512, 514, 519, 1059, 1061], "62": [185, 297, 341, 342, 1059, 1061], "52": [185, 297, 341, 342, 833, 835, 838, 884, 920, 922, 1059, 1061, 1074, 1075, 1094, 1095, 1098, 1122], "95": [185, 297, 341, 342, 833, 835, 838, 1059, 1061], "37": [185, 297, 341, 342, 521, 745, 1052, 1053, 1056, 1059, 1061], "42": [185, 297, 341, 342, 381, 404, 410, 833, 835, 838, 884, 920, 922, 1057, 1059, 1061, 1067, 1094, 1095, 1098, 1122], "14": [185, 297, 341, 342, 359, 363, 370, 521, 580, 583, 833, 835, 838, 871, 883, 884, 894, 896, 920, 922, 1059, 1061, 1074, 1075, 1094, 1095, 1098, 1122], "13": [185, 297, 341, 342, 363, 370, 521, 560, 563, 580, 583, 592, 732, 735, 759, 777, 833, 835, 838, 871, 883, 884, 894, 896, 920, 922, 1052, 1053, 1056, 1059, 1061, 1069, 1073, 1074, 1075, 1094, 1095, 1098, 1122], "static_random_uniform": [185, 341, 342, 1063], "static_sort": [185, 347, 348, 1089], "static_sparse_cross_entropi": [185, 335, 336, 965], "static_subtract": [185, 323, 324, 370, 740], "static_tan": [185, 323, 324, 363, 370, 551, 556, 754], "143": [185, 303, 310, 323, 324, 363, 521, 551, 556, 745, 746, 748, 754], "38": [185, 303, 310, 323, 324, 363, 521, 551, 556, 745, 746, 748, 754], "static_tanh": [185, 323, 324, 556], "76": [185, 304, 323, 324, 521, 556, 592, 751, 833, 835, 838, 884, 939, 941, 1094, 1095, 1098, 1122], "96": [185, 304, 323, 324, 521, 556, 745, 751, 833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "995": [185, 304, 311, 323, 324, 521, 551, 556, 750, 751, 753], "9999": [185, 304, 323, 324, 556, 751], "static_unique_count": [185, 345, 346, 1076], "classivi": [185, 305, 314, 345, 346, 970, 1009, 1074, 1076, 1077, 1079, 1080], "strongli": [355, 356, 1136, 1142], "welcom": [355, 356, 357, 1136, 1142], "skill": 355, "vetern": 355, "beginn": 355, "aspect": [355, 379, 1136], "guid": [355, 356, 357, 365, 1136], "through": [355, 357, 358, 360, 363, 366, 367, 370, 375, 376, 378, 379, 380, 381, 392, 521, 552, 555], "journei": [355, 1136, 1142], "inclusvi": 355, "big": [355, 393], "team": [355, 356, 357], "board": 355, "contributor": [355, 356, 357, 375, 1136], "section": [355, 357, 358, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 1074, 1075, 1076, 1080, 1082], "below": [355, 356, 358, 359, 360, 361, 363, 366, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 392, 415, 430, 431, 521, 560, 563, 580, 583, 592, 716, 719, 750, 884, 891, 894, 896, 942, 944, 970, 984, 987, 988, 991, 1074, 1075, 1083, 1084, 1087, 1136], "best": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 759, 809], "go": [355, 356, 357, 358, 360, 361, 363, 370, 375, 379, 393, 1034, 1045], "finish": [355, 356, 360, 1136], "dive": [355, 357, 358, 375, 378, 379, 393, 1136], "environ": [355, 357, 359, 392], "basic": [355, 358, 359], "fork": [355, 356, 759, 810], "doc": [355, 358, 362, 374, 376, 379, 380, 1136], "document": [355, 357, 377, 379, 381], "local": [355, 356, 359, 366], "task": [355, 357, 392, 1030, 1031, 1032, 1033, 1136], "help": [355, 356, 363, 367, 369, 370, 378, 379, 380, 391, 759, 765, 1094, 1119, 1136], "video": [355, 357, 362, 363, 374], "realli": [356, 370, 393], "contribut": [356, 357, 358, 376, 1142], "toward": [356, 376, 970, 1004, 1007, 1136, 1142], "page": [356, 357, 377, 381, 391, 1136, 1142], "explain": [356, 357, 358, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 1136, 1142], "main": [356, 359, 368, 370, 415, 420, 430, 431, 884, 894, 896, 942, 944], "prefer": [356, 370], "git": [356, 357], "submodul": [356, 357, 358, 359, 364, 365, 366, 372, 375, 376, 380, 1136, 1171, 1172, 1179, 1180], "com": 356, "unifyai": [356, 359], "http": [356, 362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 833, 835, 838, 840, 842, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "gh": 356, "your_fold": 356, "id": [356, 369, 370, 471, 490, 1169, 1170], "cours": [356, 357, 363, 379, 393], "whatev": [356, 393], "integr": [356, 365, 434, 440], "familiar": [356, 358], "sure": [356, 358, 364], "elig": 356, "free": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 392, 1136], "student": 356, "licenc": 356, "peopl": [356, 357, 360], "seem": [356, 380, 393], "miss": [356, 363, 365, 369, 370, 1173, 1177], "explicit": [356, 359, 370, 371, 373, 376, 393], "remind": 356, "channel": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 759, 786, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167], "pace": 356, "suggest": [356, 357, 361], "latest": [356, 358, 359, 362, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1157, 1166], "packag": [356, 359, 393], "ensur": [356, 357, 365, 369, 371, 374, 759, 803], "pypi": [356, 358, 393], "person": [356, 357], "experi": [356, 377, 379, 393], "avoid": [356, 357, 365, 367, 368, 370, 378, 471, 521, 613, 616], "pip": [356, 392, 1136], "instal": [356, 359, 392, 1136], "abil": [356, 377, 393], "perhap": [356, 378, 379, 380, 393], "track": [356, 357, 471, 1034, 1046, 1169, 1170], "run": [356, 359, 364, 365, 367, 374, 376, 377, 378, 379, 380, 381, 392, 393, 471, 480, 833, 835, 838, 840, 842, 853, 855, 1030, 1031, 1032, 1033, 1157, 1168, 1169, 1170], "command": [356, 359, 1136], "ivy_dev": [356, 357, 359], "name": [356, 357, 359, 362, 365, 376, 378, 379, 381, 412, 413, 759, 765, 884, 897, 899, 926, 928, 933, 1074, 1075, 1076, 1080], "setup": 356, "click": [356, 357, 362, 1136], "icon": [356, 357], "side": [356, 357], "choos": [356, 357, 381, 471, 516, 521, 677, 680, 681, 684, 1069, 1073, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110], "panel": 356, "select": [356, 357, 365, 376, 378, 381, 393], "drop": [356, 393], "down": [356, 378], "path": [356, 359], "manual": [356, 357, 365, 380, 1034, 1035, 1044, 1045], "builtin": [356, 359, 378, 380], "requir": [356, 359, 361, 362, 363, 365, 368, 369, 371, 372, 374, 378, 393, 412, 413, 521, 732, 735, 884, 897, 899, 970, 1014, 1017, 1146, 1147], "cmd": [356, 359], "directori": [356, 357, 359, 759, 820], "folder": [356, 357, 359, 361, 364, 365, 366], "abov": [356, 357, 359, 362, 363, 366, 367, 369, 370, 373, 374, 378, 379, 380, 381, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 691, 694, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 894, 896, 897, 899, 942, 944, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1057, 1059, 1060, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1111, 1114, 1115, 1118, 1119, 1127, 1128, 1131], "m": [356, 357, 359, 360, 376, 415, 426, 430, 431, 759, 768, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 906, 909, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 1057, 1062, 1063, 1065], "python3": [356, 359], "script": [356, 357, 359, 363, 376, 393], "bat": [356, 357, 359], "OR": [356, 357, 359, 521, 572, 575, 681, 684, 1127, 1132, 1135], "bin": [356, 357, 359], "mac": [356, 357, 359], "linux": [356, 357, 359], "virtualenv": 356, "os": 356, "note": [356, 357, 361, 362, 363, 370, 521, 712, 715, 884, 897, 899, 933, 970, 1014, 1017, 1074, 1076, 1080, 1094, 1103, 1106], "tick": [356, 357], "To": [356, 363, 366, 370, 379, 380, 381, 1136], "ivy_test": [356, 357], "test_array_api": [356, 357, 364, 365], "cd": [356, 357, 359], "txt": 356, "visual": [356, 393], "jetbrain": 356, "remot": 356, "mitig": 356, "potenti": [356, 375, 521, 613, 616], "conflict": [356, 357, 379], "yet": [356, 358, 370], "particular": [356, 357, 361, 373, 521, 522, 525], "system": [356, 393, 884, 930, 932], "instruct": [356, 358], "desktop": 356, "wsl": 356, "powershel": 356, "admin": 356, "visit": 356, "link": 356, "profession": 356, "execut": [356, 359, 370, 373, 376, 378, 381, 393, 759, 830], "deploy": 356, "top": [356, 357, 365, 379, 380, 1136], "press": [356, 379, 1136], "ok": 356, "caus": [356, 357, 363, 365, 370, 373, 393], "earlier": [356, 357], "might": [356, 357, 361, 365, 368, 376, 378, 379, 759, 780], "necessari": [356, 363, 367, 370, 373], "virtualis": 356, "detail": [356, 357, 358, 361, 364, 365, 366, 367, 368, 370, 374, 379, 380, 415, 421, 1074, 1075, 1076, 1080, 1082], "sudo": 356, "apt": 356, "ca": 356, "certif": 356, "curl": 356, "gnupg": 356, "lsb": 356, "mkdir": 356, "keyr": 356, "fssl": 356, "download": [356, 365], "gpg": 356, "dearmor": 356, "o": [356, 376, 759, 768], "echo": 356, "deb": 356, "arch": 356, "dpkg": 356, "architectur": [356, 381, 393], "lsb_releas": 356, "cs": 356, "tee": 356, "null": 356, "ce": 356, "cli": 356, "containerd": 356, "io": 356, "compos": [356, 370, 393], "plugin": 356, "systemctl": 356, "permiss": 356, "relat": [356, 357, 392, 471], "post": [356, 381, 1052, 1053, 1056, 1136, 1142], "It": [356, 357, 359, 360, 361, 362, 363, 367, 369, 370, 373, 376, 378, 379, 380, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 440, 442, 471, 516, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 605, 608, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 648, 649, 652, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 673, 676, 677, 680, 681, 684, 685, 688, 689, 690, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 777, 781, 782, 783, 785, 788, 791, 799, 812, 815, 816, 833, 866, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 890, 891, 893, 894, 896, 900, 902, 903, 905, 906, 909, 910, 912, 914, 916, 917, 919, 920, 922, 923, 925, 929, 930, 932, 933, 935, 936, 938, 939, 941, 942, 944, 945, 947, 948, 950, 951, 953, 954, 955, 958, 960, 963, 965, 968, 970, 971, 974, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1068, 1069, 1070, 1073, 1074, 1082, 1083, 1084, 1087, 1089, 1092, 1127, 1128, 1131, 1132, 1135], "headach": 356, "arm": [356, 357], "m1": 356, "instead": [356, 357, 358, 362, 363, 365, 366, 370, 373, 374, 376, 378, 379, 393], "featur": [356, 361, 374, 379, 1136], "vm": 356, "azur": 356, "cloud": [356, 392], "defin": [356, 358, 361, 362, 371, 374, 378, 380, 393, 521, 691, 694, 712, 715, 759, 812, 884, 888, 890, 897, 899, 930, 932, 1057, 1059, 1060, 1094, 1099, 1102, 1103, 1106, 1107, 1110], "dockerfil": [356, 359], "longer": [356, 371, 373], "worri": 356, "platform": 356, "agnost": [356, 369, 374, 376, 378, 381, 393, 1136], "usual": 356, "studio": 356, "favourit": 356, "extens": [356, 357, 362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "theme": 356, "too": [356, 357, 393, 521, 535, 691, 694], "done": [356, 357, 363, 365, 379], "unsupport": [356, 371, 434, 455, 456], "slow": 356, "ipad": 356, "long": [356, 357, 363, 871, 881], "browser": 356, "cool": [356, 361], "requisit": 356, "head": [356, 370, 871, 882, 1136, 1157, 1168], "pane": [356, 357], "readi": [356, 358], "begin": [356, 1034, 1035, 1045], "outlin": [356, 357, 358, 360, 362, 365, 366, 370, 373, 378], "dropdown": 356, "tab": [356, 379, 1136], "master": [356, 357, 370], "vs": 356, "view": [356, 357, 415, 421, 871, 874, 878], "built": [356, 377, 415, 416, 471, 1157, 1168, 1169, 1170], "bottom": 356, "box": 356, "patient": 356, "upto": 356, "minut": 356, "launch": 356, "That": [356, 357, 378, 379, 380, 521, 712, 715], "refer": [356, 357, 365, 366, 371, 374, 393, 415, 420, 521, 613, 616, 661, 664, 833, 835, 838, 840, 842, 884, 945, 947, 951, 953, 1094, 1115, 1118, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1157, 1167], "approach": [356, 357, 365, 366, 370, 378, 379, 393], "colour": 356, "applic": [356, 371, 372, 380, 871, 882, 883, 1034, 1040, 1046], "good": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380], "chanc": 356, "vscode": 356, "explor": [356, 377, 381, 392], "troubleshoot": 356, "sometim": [356, 357], "ever": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "64": [356, 379, 380, 521, 732, 735, 736, 739, 871, 877, 878, 884, 920, 922, 1094, 1095, 1098, 1122, 1136, 1157, 1168], "bit": [356, 363, 366, 370, 378, 434, 453, 454, 457, 521, 564, 567, 568, 571, 576, 579, 1094, 1111, 1114, 1119], "usr": 356, "more": [356, 357, 358, 360, 361, 363, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 392, 393, 415, 416, 434, 441, 521, 613, 616, 884, 906, 909, 970, 988, 991, 1074, 1075, 1076, 1080, 1082, 1136], "nutshel": [356, 374], "hook": 356, "lint": 356, "fix": [356, 357], "fail": [356, 358, 364, 365, 376, 378], "attempt": [356, 393], "succe": 356, "problemat": 356, "proce": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "modifi": [356, 357, 362, 366, 371, 372, 376], "properli": [356, 360], "enter": [356, 357, 369, 371, 372, 374, 471], "unsur": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "feel": [356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 1136], "server": [357, 1136], "context": [357, 363, 370, 371, 372, 471, 759, 810, 871, 882, 1157, 1168], "suitabl": [357, 361, 370], "quick": [357, 360, 380], "tendenc": 357, "land": 357, "end": [357, 370, 373, 375, 392, 393, 415, 416, 521, 552, 555, 1136, 1142], "world": 357, "come": [357, 358, 380, 391, 1136, 1142], "fly": 357, "hard": [357, 378], "receiv": [357, 365, 371, 372, 471, 480, 481, 759, 766, 809, 1157, 1167], "respons": [357, 359], "internship": 357, "comment": 357, "trigger": 357, "unansw": 357, "label": [357, 376, 377, 381, 954, 955, 958, 960, 963, 965, 968], "respond": 357, "someon": [357, 393], "els": [357, 358, 361, 366, 367, 373, 376, 378, 380, 381, 393, 759, 769, 780, 784, 1034, 1044], "strive": [357, 393], "repli": 357, "newli": [357, 373, 412, 413, 434, 440, 759, 770], "bug": [357, 365], "serv": [357, 365, 366, 369, 370, 374, 375, 1136], "suspect": 357, "behaviour": [357, 362, 365, 369, 370, 373, 374, 378], "observ": 357, "confid": 357, "wrong": 357, "someth": [357, 361, 379, 380, 393], "bet": 357, "act": [357, 363, 393], "placehold": [357, 369, 374, 1034, 1046], "mark": [357, 365], "ii": [357, 1094, 1095, 1098, 1122], "iii": 357, "titl": [357, 1136], "issue_numb": 357, "delet": [357, 359], "No": [357, 376], "progress": [357, 370, 377, 381], "pr": 357, "soon": [357, 370, 391, 393, 1136, 1142], "solut": [357, 365, 370, 884, 930, 932], "review": [357, 361], "merg": 357, "everi": [357, 358, 359, 363, 364, 365, 366, 367, 368, 370, 373, 374, 376, 378, 380, 415, 422, 423, 759, 760, 763], "dai": 357, "close": [357, 362, 521, 613, 616, 716, 719, 884, 933], "likewis": [357, 362, 366, 370, 371, 374, 379], "freed": 357, "purpos": [357, 359, 363, 365, 366, 368, 369, 370, 374, 375, 378, 521, 613, 616, 1136], "remain": [357, 363, 393, 521, 535, 691, 694, 712, 715, 970, 1000, 1003, 1034, 1040], "short": [357, 380, 871, 881], "basi": [357, 364, 379], "situat": [357, 381], "alloc": [357, 393, 415, 430, 431, 434, 440, 471], "upon": [357, 363, 365, 373, 393], "period": 357, "prevent": [357, 373, 378, 833, 835, 838, 840, 842, 853, 855, 1094, 1119, 1173, 1174, 1175], "unabl": 357, "obvious": 357, "never": [357, 370], "reflect": [357, 369], "qualiti": 357, "hypothet": 357, "frustrat": 357, "delai": 357, "busi": 357, "fine": [357, 378, 381], "becaus": [357, 362, 365, 366, 367, 369, 371, 372, 373, 374, 376, 380, 381, 393], "inact": 357, "me": 357, "unfairli": 357, "definit": [357, 366, 371, 378, 884, 885, 887, 888, 890], "investig": 357, "Then": [357, 359, 378, 393], "practic": [357, 365], "separ": [357, 365, 369, 376, 378, 379], "branch": [357, 370, 393, 412, 413, 521, 552, 555], "role": [357, 377], "date": 357, "upstream": [357, 364], "complic": [357, 376], "root": [357, 359, 379, 521, 732, 735, 1057, 1058, 1062], "merge_with_upstream": 357, "sh": 357, "name_of_your_branch": 357, "resolv": [357, 1094, 1111, 1114, 1119], "push": [357, 364], "both": [357, 362, 363, 366, 370, 372, 373, 374, 376, 378, 379, 380, 381, 392, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 461, 521, 522, 525, 535, 540, 543, 584, 587, 617, 700, 703, 708, 711, 732, 735, 736, 739, 745, 759, 787, 833, 835, 838, 871, 874, 883, 884, 888, 890, 906, 909, 945, 947, 970, 1004, 1007, 1052, 1053, 1056, 1074, 1076, 1080, 1094, 1099, 1102, 1127, 1128, 1131], "abort": 357, "tediou": 357, "resolut": 357, "stash": 357, "reinstat": 357, "fetch": 357, "uncommit": 357, "unstag": 357, "untrack": 357, "comprehens": 357, "explan": [357, 362, 370, 374, 378], "atlassian": 357, "tutori": 357, "wrote": 357, "piec": [357, 366, 368, 369, 376], "inform": [357, 434, 454, 457, 759, 765, 833, 866], "tag": 357, "usu": 357, "describ": [357, 377, 381, 1094, 1095, 1098, 1111, 1114, 1115, 1118, 1119, 1122], "navig": [357, 360], "blame": 357, "revis": 357, "author": [357, 1136], "eg": 357, "past": 357, "l": [357, 360, 884, 885, 887, 897, 899, 906, 909, 942, 944], "grep": 357, "v": [357, 376, 379, 380, 381, 871, 883, 1136, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1177, 1179, 1180], "commit_id": 357, "handi": 357, "histori": 357, "toggl": 357, "vertic": 357, "highlight": [357, 363], "previou": [357, 365, 374, 381, 393, 833, 840, 842, 853, 855], "whenev": [357, 378, 379], "think": [357, 363], "interact": [357, 1136], "gain": [357, 375, 380, 1148], "quit": [357, 358, 362, 366, 368, 369], "yourself": [357, 358, 392], "simpler": [357, 378], "cannot": [357, 367, 371, 381], "least": [357, 363, 366, 369, 884, 906, 909], "final": [357, 362, 363, 366, 369, 371, 373, 376, 378, 379, 415, 424, 425, 759, 786, 1157, 1168], "tickbox": 357, "corner": 357, "span": 357, "intent": [357, 373], "larg": [357, 379, 521, 535, 691, 694], "discourag": 357, "philosophi": 357, "increment": [357, 759, 802], "frequent": [357, 358], "valuabl": 357, "infrequ": 357, "earli": [357, 1136], "wast": 357, "spot": [357, 366], "mistak": 357, "propos": 357, "mountain": 357, "advoc": [357, 393], "individu": [357, 358, 366], "per": [357, 379, 471, 871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "style": [357, 1069, 1072], "ve": [357, 375, 378, 1057, 1058, 1136], "actual": [357, 360, 366, 373, 375, 378, 380, 393], "aim": [357, 375], "part": [357, 361, 364, 365, 366, 376, 377, 381, 392, 393, 415, 430, 431, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1169, 1170], "subsect": 357, "session": [357, 1136], "block": [357, 366, 375, 377, 381, 393, 471, 1136], "smaller": [357, 376, 381, 970, 971, 974, 1004, 1007, 1094, 1111, 1114, 1119], "edit": 357, "beauti": 357, "particularli": [357, 379, 393], "concern": [357, 360, 363, 370, 373, 375], "effici": [357, 365, 366, 370, 373, 374, 376, 379, 393], "difficult": [357, 365, 393, 1074, 1075, 1076, 1080, 1082], "undo": 357, "stress": 357, "frequenc": [357, 759, 786], "pycharm": 357, "pytest": [357, 365], "button": 357, "declar": 357, "insid": [357, 359, 361, 371], "exec": 357, "rm": 357, "rf": 357, "cp": 357, "ivy_contain": 357, "bash": [357, 359], "test_ivi": [357, 365], "test_funct": 357, "test_cor": 357, "test_imag": 357, "test_random_crop": 357, "header": 357, "q": [357, 393, 871, 883, 884, 897, 899, 926, 928], "array_api_test": 357, "test_creation_funct": 357, "test_arang": 357, "window": [357, 359, 871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "variou": [357, 362, 368, 374, 392], "wherebi": [358, 370, 1034, 1046], "broad": 358, "todo": [358, 365], "commit": [358, 365], "NOT": [358, 521, 677, 680], "resourc": 358, "hypothesi": 358, "cover": [358, 362, 363, 366, 368, 375], "lambda": [358, 376, 379, 1173, 1176, 1178], "direct": [358, 380, 381, 392, 1083, 1089, 1092], "bind": [358, 370], "aforement": 358, "categori": [358, 361, 369, 370, 371, 375, 1136], "parent": [358, 378], "hint": [358, 361, 362, 366, 369, 373, 374, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "its": [358, 359, 362, 434, 441, 471, 515, 884, 906, 909, 970, 984, 987, 1000, 1003, 1004, 1007, 1018, 1021], "thorough": [358, 362, 365, 374], "transpil": [358, 375, 377, 1136, 1142], "builder": [359, 391, 393, 1136], "maco": 359, "ubuntu": 359, "uid": 359, "make_docs_without_dock": 359, "rel": [359, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 884, 894, 896, 905, 914, 916, 923, 925, 942, 944, 970, 988, 991, 1004, 1007, 1083, 1084, 1087, 1089, 1092, 1136], "synchron": 359, "rest": [359, 377, 381], "remove_doc": 359, "_": [359, 362, 370, 373, 378, 379, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 833, 835, 838, 840, 842, 884, 951, 953, 970, 984, 987, 1004, 1007, 1074, 1075, 1083, 1084, 1087, 1094, 1099, 1102], "privat": [359, 1173, 1177], "fulfil": [359, 375, 1136], "autogenerated_sourc": 359, "png": [359, 379], "_imag": 359, "lastli": 359, "rst": 359, "partial_sourc": 359, "conf": 359, "create_rst_fil": 359, "filter": [359, 871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "repres": [359, 378, 415, 426, 434, 453, 521, 530, 531, 534, 535, 544, 547, 551, 556, 559, 591, 592, 595, 691, 694, 728, 731, 749, 750, 754, 871, 880, 884, 893, 929, 930, 932], "overal": [359, 362, 370, 371, 372, 381], "markup": 359, "extract": [359, 361], "get_functions_and_class": 359, "doctr": 359, "readm": [359, 393], "module_nam": 359, "copy_readme_to_rst": 359, "tabl": 359, "toc": 359, "tree": 359, "append_toctree_to_rst": 359, "create_index_rst": 359, "\u03c0": [359, 521, 527, 540, 543, 548, 552, 555], "namespac": [359, 361, 371, 376, 381], "who": [360, 375, 393], "mainli": [360, 377, 379], "under": [360, 362, 363, 364, 365, 366, 370, 375, 376, 379, 381], "hood": [360, 363, 365, 366, 370, 375, 376, 379, 381], "weed": [360, 375], "behind": [360, 375, 377, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "tour": 360, "primari": [360, 365, 367, 373, 393], "composit": [360, 365, 367, 369, 370, 373, 376, 380, 381, 393], "nestabl": [360, 362, 363, 365, 373, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 584, 587, 617, 700, 703, 732, 735, 736, 739, 745, 759, 787, 871, 874, 883, 970, 1004, 1007, 1052, 1053, 1056, 1074, 1076, 1080, 1094, 1099, 1102, 1127, 1128, 1131], "dynam": [360, 371, 372, 373, 376, 412, 413], "runtim": [360, 365, 471], "h": [360, 370, 871, 874, 875, 876, 877, 878], "j": [360, 759, 767, 768, 884, 942, 944, 1094, 1095, 1098, 1122], "k": [360, 376, 415, 420, 430, 431, 759, 767, 871, 883, 884, 906, 909, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 1057, 1062, 1063, 1065, 1069, 1072], "borrow": 360, "n": [360, 415, 426, 430, 431, 759, 768, 871, 879, 884, 894, 896, 905, 906, 909, 913, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 933, 935, 936, 938, 942, 944, 945, 947, 948, 950, 951, 953, 970, 980, 983, 984, 987, 992, 995, 1014, 1017, 1026, 1029, 1057, 1062, 1063, 1065, 1069, 1072, 1094, 1103, 1106, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "taken": [361, 381, 884, 894, 896], "constant": [361, 366, 380, 381, 393, 471, 480, 481, 970, 980, 983, 1034, 1040, 1052, 1053, 1056, 1148, 1149, 1153, 1156, 1169, 1170, 1171, 1172], "compil": [361, 370, 375, 377, 393, 1136, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "meta": [361, 369, 1031, 1032, 1033], "overlap": 361, "sever": [361, 393, 884, 903], "judgement": 361, "locat": [361, 365, 367, 372, 1057, 1058], "some_namespac": 361, "some_backend": 361, "another_backend": 361, "break": [361, 374, 378, 393, 1136], "anyth": [361, 1136], "refactor": 361, "ongo": 361, "subfold": [361, 365], "via": [361, 370, 371, 372, 373, 376, 378, 379, 392, 1034, 1035, 1044, 1045], "file_nam": 361, "my_func": [361, 363], "int": [361, 363, 366, 370, 371, 372, 373, 374, 381, 404, 409, 412, 413, 415, 418, 420, 422, 423, 424, 425, 428, 430, 431, 432, 434, 442, 451, 453, 454, 457, 460, 471, 493, 496, 497, 498, 499, 507, 508, 509, 515, 516, 521, 560, 563, 564, 567, 568, 571, 572, 575, 576, 579, 580, 583, 759, 765, 777, 778, 781, 782, 783, 786, 787, 796, 812, 815, 816, 821, 822, 831, 833, 835, 838, 840, 842, 853, 855, 871, 872, 874, 876, 877, 878, 884, 888, 890, 894, 896, 939, 941, 942, 944, 945, 947, 948, 950, 954, 960, 963, 965, 968, 970, 976, 979, 980, 983, 984, 987, 988, 991, 992, 995, 996, 999, 1000, 1003, 1004, 1007, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1046, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1067, 1069, 1070, 1071, 1083, 1084, 1087, 1089, 1092, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "nativedtyp": [361, 371, 372, 374, 415, 416, 417, 418, 419, 420, 422, 423, 427, 428, 429, 432, 433, 434, 439, 440, 450, 451, 452, 461, 1094, 1119], "nativedevic": [361, 371, 372, 374, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 432, 433, 471, 488, 489, 490, 504, 510, 512, 514, 516, 517, 520, 759, 812, 1057, 1058, 1059, 1060, 1062, 1063, 1065], "my": 361, "numer": [361, 380, 415, 426, 434, 440, 521, 522, 525, 535, 584, 587, 596, 599, 613, 616, 617, 620, 621, 624, 633, 636, 637, 640, 641, 644, 645, 648, 677, 680, 681, 684, 691, 694, 696, 699, 700, 703, 708, 711, 712, 715, 720, 723, 736, 739, 740, 744, 755, 758, 759, 794, 795, 817, 818, 823, 824, 884, 888, 890, 906, 909, 920, 922, 933, 939, 941, 942, 944, 945, 947, 1057, 1068, 1069, 1070, 1071, 1094, 1099, 1102, 1111, 1114, 1119, 1148], "cooler": 361, "produc": [361, 471, 480, 481, 871, 883], "something_cool": 361, "category_nam": [362, 366, 371, 372, 374], "contrast": [362, 374], "backend_nam": [362, 366, 367, 368, 371, 372, 374], "account": 362, "instanti": 362, "firstli": [362, 363, 366, 369, 371, 373, 379], "templat": [362, 1136], "spec": [362, 363], "api_specif": [362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "array_api": 362, "preview": 362, "render": 362, "incorrectli": 362, "onlin": [362, 1136], "approxim": [362, 404, 405, 521, 527, 530, 531, 534, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 609, 613, 616, 653, 656, 657, 660, 661, 664, 665, 668, 708, 711, 724, 727, 728, 731, 745, 750, 884, 905, 914, 916, 923, 925], "tangent": [362, 404, 411, 521, 548, 551, 552, 555, 556, 559, 745, 749, 750, 754], "domain": [362, 521, 527, 530, 531, 534, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 609, 613, 616, 653, 656, 657, 660, 665, 668, 724, 727, 728, 731, 732, 735, 745, 750], "infin": [362, 414, 434, 440, 521, 522, 525, 530, 531, 534, 535, 538, 544, 547, 548, 552, 555, 584, 587, 588, 591, 592, 595, 599, 609, 612, 613, 616, 617, 620, 621, 624, 633, 636, 637, 640, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 884, 948, 950, 1094, 1099, 1102, 1107, 1110, 1127, 1128, 1131, 1132, 1135], "codomain": [362, 521, 527, 530, 531, 534, 540, 543, 544, 547, 548, 552, 555, 588, 591, 592, 595, 609, 613, 616, 653, 656, 657, 660, 665, 668, 724, 727, 728, 731, 732, 735, 745, 750], "x_i": [362, 521, 522, 525, 527, 530, 531, 534, 540, 543, 544, 547, 548, 564, 567, 584, 587, 588, 591, 592, 595, 609, 613, 616, 617, 633, 636, 637, 640, 641, 644, 653, 656, 657, 660, 665, 668, 677, 680, 696, 699, 716, 719, 720, 723, 724, 727, 728, 731, 732, 735, 736, 739, 745, 750, 755, 758, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126], "assum": [362, 367, 371, 378, 379, 393, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 588, 592, 617, 700, 703, 716, 719, 724, 727, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "express": [362, 376, 381, 521, 527, 540, 543, 548, 552, 555, 588, 724, 727, 745], "radian": [362, 521, 527, 540, 543, 548, 552, 555, 588, 724, 727, 745], "float": [362, 366, 370, 371, 373, 374, 378, 380, 404, 406, 414, 415, 416, 418, 420, 422, 423, 424, 425, 428, 432, 434, 440, 450, 454, 459, 462, 471, 504, 510, 514, 517, 520, 521, 522, 525, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 609, 612, 613, 616, 617, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 740, 744, 745, 749, 750, 754, 755, 758, 759, 771, 772, 774, 786, 794, 795, 817, 818, 823, 824, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 874, 878, 883, 884, 885, 887, 891, 897, 899, 900, 902, 903, 905, 914, 916, 923, 925, 926, 928, 930, 932, 933, 948, 950, 954, 955, 958, 960, 963, 965, 968, 1030, 1031, 1032, 1033, 1052, 1053, 1056, 1057, 1062, 1063, 1065, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126], "operand": [362, 521, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 552, 555, 580, 583, 584, 587, 588, 591, 592, 595, 609, 612, 613, 616, 617, 653, 656, 657, 660, 665, 668, 669, 672, 691, 694, 708, 711, 712, 715, 716, 719, 724, 727, 728, 731, 732, 735, 745, 750, 755, 758, 1094, 1095, 1098, 1099, 1102, 1107, 1110, 1119, 1122], "whose": [362, 415, 430, 431, 521, 530, 531, 534, 544, 547, 551, 556, 559, 588, 591, 592, 595, 708, 711, 724, 727, 728, 731, 745, 749, 750, 754, 759, 770, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 914, 916, 917, 919, 920, 922, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944, 970, 988, 991, 1004, 1007, 1074, 1075, 1076, 1080, 1094, 1095, 1098, 1122], "ref": [362, 521, 576, 579, 645, 648, 691, 694, 700, 703, 712, 715, 740, 744, 970, 1014, 1017], "promot": [362, 366, 371, 434, 440, 443, 446, 461, 462, 466, 521, 527, 530, 531, 534, 535, 538, 540, 543, 544, 547, 548, 551, 556, 559, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 588, 591, 592, 595, 596, 609, 612, 613, 616, 653, 656, 657, 660, 665, 668, 669, 672, 685, 688, 691, 694, 708, 711, 712, 715, 724, 727, 728, 731, 732, 735, 745, 749, 750, 754, 884, 885, 887, 888, 890, 903, 905, 906, 909, 914, 916, 920, 922, 923, 925, 930, 932, 945, 947, 948, 950, 970, 1014, 1017, 1094, 1103, 1106], "But": [362, 370, 381], "needless": 362, "info": [362, 1136], "subset": [362, 365, 374, 376], "extend": [362, 365, 367, 374], "renam": 362, "conform": [362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 613, 616, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "org": [362, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 833, 835, 838, 840, 842, 970, 984, 987, 1004, 1007, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "elementwise_funct": [362, 521, 522, 525, 540, 543, 580, 583, 584, 587, 592, 617, 700, 703, 732, 735, 736, 739, 970, 1004, 1007, 1074, 1075, 1083, 1084, 1087, 1094, 1099, 1102], "descript": [362, 370, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 948, 950, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102, 1127, 1128, 1131], "simplic": [362, 380, 392, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 443, 446, 521, 522, 525, 535, 540, 543, 560, 563, 580, 583, 584, 587, 592, 617, 700, 703, 716, 719, 732, 735, 736, 739, 745, 750, 759, 787, 871, 874, 883, 884, 891, 970, 984, 987, 988, 991, 1004, 1007, 1052, 1053, 1056, 1074, 1075, 1076, 1080, 1083, 1084, 1087, 1094, 1099, 1102], "judgment": 362, "beyond": [362, 970, 1004, 1007], "text": 362, "func_nam": [362, 363, 366], "pure": [362, 378, 381, 393], "themselv": [362, 366, 370, 371, 372, 380, 1034, 1035], "operator_nam": 362, "succinct": 362, "contstructor": 362, "though": [362, 366, 371, 379, 393], "forward": [362, 381, 392, 393, 1169, 1170, 1173, 1177], "_forward": [362, 376, 379, 380, 1136], "former": 362, "trainabl": [362, 377, 379, 380, 833, 849, 851, 1146, 1147, 1169, 1170, 1179], "explicitli": [362, 366, 367, 369, 370, 373, 376, 393, 884, 897, 899, 1157, 1166, 1168, 1169, 1170], "latter": [362, 367], "implicit": [362, 370, 376], "docst": 362, "eight": 363, "static_": 363, "op_nam": 363, "__r": 363, "four": [363, 366, 371, 374, 379], "__sub__": [363, 369, 370, 374, 378], "__mul__": [363, 369, 370, 374, 378], "__truediv__": [363, 369, 370], "respect": [363, 369, 370, 371, 374, 415, 426, 521, 522, 525, 535, 538, 552, 555, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 601, 604, 612, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 712, 715, 740, 744, 833, 835, 838, 840, 842, 844, 845, 847, 853, 855, 857, 859, 861, 863, 884, 926, 928, 1030, 1031, 1032, 1033], "recap": [363, 370, 380], "independ": [363, 364, 368, 370, 376, 381, 884, 888, 890, 930, 932, 1057, 1058], "combinatorili": 363, "variat": [363, 365], "grid": [363, 365, 392, 415, 426], "vari": [363, 365, 370, 378, 1074, 1075, 1076, 1080, 1082], "simplest": 363, "small": [363, 366, 376, 380, 393, 521, 691, 694, 884, 905, 914, 916, 923, 925, 1052, 1053, 1056, 1171, 1172], "unus": [363, 373, 412, 413], "18": [363, 370, 521, 580, 583, 884, 894, 896, 920, 922, 1094, 1095, 1098, 1122], "excess": [363, 367, 378], "showcas": [363, 392], "demonstr": [363, 378], "replic": [363, 371], "meant": 363, "imaginari": 363, "some_flag": 363, "another_flag": 363, "54": [363, 521, 588, 592, 732, 735, 871, 883, 884, 920, 922, 1057, 1062, 1094, 1095, 1098, 1122], "jointli": 363, "three": [363, 370, 375, 415, 426, 1136], "x0": [363, 759, 767], "procedur": 363, "sens": [363, 370, 378], "5574077": 363, "1850398": 363, "5463025": 363, "8422884": 363, "91601413": 363, "9647598": 363, "3738229": 363, "1597457": 363, "0963247": 363, "9955841": 363, "3278579": 363, "multi": [363, 370, 375, 393, 871, 882, 884, 888, 890, 1136, 1142, 1157, 1168], "seper": [363, 759, 786], "pars": [363, 393], "satisfi": [363, 884, 951, 953], "far": [363, 372, 377, 378, 1034, 1035, 1045], "asid": [363, 392], "irrelev": [363, 371], "increasingli": 363, "complex": [363, 379, 380, 381, 393, 884, 897, 899, 933], "rule": [363, 365, 366, 369, 370, 371, 434, 440, 443, 446, 462, 521, 551, 556, 559, 576, 579, 596, 691, 694, 712, 715, 749, 754, 884, 885, 887, 888, 890, 920, 922, 930, 932], "14254655": 363, "1578213": 363, "380515": 363, "17": [363, 370, 404, 406, 884, 894, 896, 1057, 1062], "trivial": 363, "By": [363, 366, 370, 373, 380, 381, 759, 777, 778, 884, 945, 947, 970, 996, 999, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "non": [363, 370, 371, 376, 412, 413, 434, 440, 458, 521, 677, 680, 681, 684, 871, 874, 884, 891, 914, 916, 933, 939, 941, 945, 947, 948, 950, 1069, 1070, 1071, 1072, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1123, 1126, 1127, 1128, 1131, 1132, 1135, 1169, 1170, 1173, 1177], "dictat": [363, 369, 373, 374], "exlud": 363, "unit": [364, 365, 393, 404, 405, 406, 407, 471], "thoroughli": [364, 365], "ci": [364, 365, 393], "failur": 364, "On": [365, 377, 381], "fixtur": 365, "consum": [365, 370, 374, 471], "300": [365, 521, 716, 719], "hit": [365, 376], "permit": [365, 369, 374], "action": 365, "eleg": 365, "intellig": 365, "sampl": [365, 871, 879, 1057, 1058, 1062, 1063, 1065, 1094, 1115, 1118, 1123, 1126, 1157, 1165], "rang": [365, 379, 380, 381, 415, 416, 424, 425, 1074, 1075, 1094, 1111, 1114, 1119, 1136], "cach": [365, 366, 471, 489, 759, 770], "unexplor": 365, "known": 365, "repeatedli": [365, 370, 1034, 1043], "upload": 365, "artifact": 365, "parametr": 365, "strategi": 365, "statement": [365, 393], "plai": [365, 381], "helper": [365, 379], "verifi": [365, 371, 372, 378, 1136, 1142], "truth": [365, 521, 601, 604, 625, 628, 629, 632, 645, 648, 649, 652, 700, 703], "opt": [365, 367, 373, 378], "defer": [365, 366, 369, 370, 371, 372, 373], "suffic": [365, 368], "catch": [365, 759, 780], "systemat": 365, "safeguard": 365, "inabl": 365, "fact": [365, 379], "categor": [366, 372], "mutual": [366, 370], "constitut": [366, 376, 1094, 1115, 1118, 1123, 1126], "venn": 366, "diagram": 366, "light": [366, 393], "wherea": [366, 369, 371, 372, 374, 381], "hand": [366, 393], "log_pr": [366, 370, 373], "array_arg": 366, "typic": 366, "whatsoev": [366, 370], "commonli": [366, 1094, 1115, 1118, 1123, 1126], "outsid": [366, 372, 376, 378, 381, 970, 971, 974, 1014, 1017], "denomin": [366, 393, 759, 785, 795, 818, 823, 824, 1052, 1053, 1056, 1171, 1172], "divis": [366, 521, 576, 579, 596, 599, 620, 621, 624, 712, 715, 759, 785, 795, 818, 823, 824, 833, 835, 838, 840, 842, 853, 855, 1173, 1174, 1175], "deal": [366, 393], "concurr": [366, 370], "weight": [366, 370, 380, 381, 833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 871, 880, 881, 883, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1169, 1170, 1173, 1175, 1176], "modif": 366, "decor": [366, 368, 370, 371, 372, 373], "group": [366, 370], "briefli": [366, 379], "cast": [366, 371, 434, 440, 443, 446, 970, 976, 979, 1094, 1111, 1114, 1119, 1136], "get_all_arrays_on_dev": 366, "nested_map": [366, 1034], "index_nest": [366, 1034], "implicit_backend": 367, "unless": [367, 372, 373, 393, 521, 691, 694, 759, 812], "__dict__": [367, 376, 378], "ivy_original_dict": [367, 376], "unmodifi": [367, 371], "moment": [367, 393, 833, 835, 838, 840, 842, 853, 855, 1173, 1174, 1175], "fallback": 367, "freedom": [367, 1094, 1115, 1118, 1123, 1126], "recommend": [367, 521, 677, 680, 681, 684, 712, 715, 1094, 1103, 1106], "achiev": [368, 379, 381], "wrapper": [368, 369, 370, 371, 373, 374, 378], "logic": [368, 369, 371, 372, 378, 471, 507, 521, 673, 676, 677, 680, 681, 684, 1127, 1128, 1131, 1132, 1135, 1136], "topic": [368, 378], "tf": [369, 371, 372, 373, 374, 376, 381, 393, 1136], "_data": [369, 378], "organiz": [369, 370], "inherit": [369, 370, 378], "bear": [369, 370, 371], "mind": [369, 370], "necessarili": [369, 370], "although": [369, 370], "underpin": [369, 370, 376], "programmat": [369, 370], "backup": [369, 370], "accident": [369, 370], "readabl": [369, 370, 374, 378, 379], "absent": [369, 370], "perk": [369, 370], "auto": [369, 370, 379], "throw": [369, 378], "imposs": 369, "coupl": [369, 370, 378, 380], "anywai": 369, "secondli": [369, 371], "easier": 369, "five": [370, 379], "decis": [370, 376, 378], "displai": [370, 379], "arbitrarili": [370, 379], "__repr__": 370, "control": [370, 371, 373, 378, 379, 392], "__getattr__": 370, "underli": [370, 521, 560, 563, 572, 575, 580, 583, 685, 688], "__setattr__": 370, "__contains__": 370, "__getstate__": 370, "__setstate__": 370, "unpickl": 370, "expand": [370, 759, 786, 970, 984, 987], "children": 370, "shallowest": 370, "deepest": 370, "67": [370, 521, 580, 583, 592], "22": [370, 521, 580, 583, 884, 894, 896, 920, 922, 1069, 1073, 1094, 1095, 1098, 1122], "25": [370, 521, 732, 735, 736, 739, 884, 894, 896, 903, 954, 960, 963, 1052, 1053, 1056, 1094, 1095, 1098, 1122], "retain_grad": [370, 833, 844], "dy": [370, 833, 844], "dx": [370, 833, 844], "technic": [370, 373, 374, 393], "autograd": [370, 393], "grad": [370, 379, 380, 381, 1136, 1173, 1177], "redund": 370, "num_head": [370, 871, 882, 1157, 1168], "mask": [370, 871, 882, 883], "to_q_fn": [370, 871, 882], "to_kv_fn": [370, 871, 882], "to_out_fn": [370, 373, 871, 882], "to_q_v": [370, 871, 882], "to_kv_v": [370, 871, 882], "to_out_v": [370, 871, 882], "measur": [370, 871, 882, 1157, 1168], "dot": [370, 871, 882, 883, 884, 939, 941, 945, 947, 1157, 1168], "product": [370, 521, 691, 694, 759, 777, 871, 882, 883, 884, 888, 890, 906, 909, 920, 922, 939, 941, 945, 947, 1094, 1095, 1098, 1111, 1114, 1122, 1157, 1168], "implicitli": 370, "intuit": [370, 379, 380], "debug": [370, 379], "chronolog": 370, "had": [370, 373], "sequenti": [370, 380], "flow": [370, 392], "implic": 370, "slightli": [370, 376, 380], "eager": [370, 393], "int8": [371, 434, 455], "int16": [371, 434, 443, 446, 455, 1094, 1111, 1114, 1119], "uint8": [371, 434, 443, 446, 455], "uint16": [371, 434, 456, 1094, 1111, 1114, 1119], "uint32": [371, 434, 456, 1094, 1111, 1114, 1119], "uint64": [371, 434, 456, 1094, 1111, 1114, 1119], "bfloat16": [371, 434, 455], "float16": [371, 434, 456], "all_dtyp": 371, "all_numeric_dtyp": 371, "all_int_dtyp": 371, "all_float_dtyp": 371, "fall": [371, 375, 1136, 1169, 1170, 1173, 1177], "valid": [371, 376, 434, 448, 871, 872, 873, 874, 875, 876, 877, 878, 970, 1014, 1017, 1127, 1128, 1131, 1132, 1135, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "invalid": [371, 884, 945, 947, 1127, 1128, 1131, 1132, 1135], "thirdli": 371, "native_float32": 371, "importantli": [371, 378, 381, 392], "varieti": [371, 372], "conveni": [371, 372, 374, 377, 379, 380], "arguabl": [371, 372], "compound": 371, "overflow": [371, 521, 535, 1094, 1119], "arr": [371, 372, 1052, 1053, 1056], "scalar": [371, 376, 381, 393, 415, 423, 759, 812, 829, 832, 884, 948, 950], "settabl": [371, 372], "jnp": [371, 372, 373, 374, 381, 1136], "jaxarrai": [371, 372, 373, 374], "mx": [371, 372, 373, 1136], "nd": [371, 372, 373, 376, 381, 1136], "deleg": 371, "fill_valu": [371, 415, 422, 423, 521, 604, 628, 629, 632], "as_n": [371, 434, 449, 450, 451, 452, 471, 490, 491, 512], "idx": [372, 378, 759, 765], "tpu": [372, 471, 493, 518], "aliv": [372, 471, 505, 509, 511, 759, 793, 811, 813], "amount": [372, 471, 517, 954, 955, 958, 960, 963, 965, 968], "memori": [372, 373, 391, 393, 471, 489, 510, 515, 517, 520, 871, 881, 1136], "dual": 372, "thrown": [372, 393, 759, 803], "rare": [372, 393], "program": 373, "strictli": 373, "ration": 373, "speak": 373, "subtli": 373, "ensure_in_backend": [373, 759, 803], "x_nativ": 373, "val_n": 373, "is_ivy_arrai": [373, 378, 759], "assign": [373, 378], "elif": 373, "irrespect": [373, 378, 434, 440], "inclus": [373, 415, 416, 1057, 1059, 1060], "omit": [373, 374, 1074, 1075, 1076, 1080, 1082], "unspecifi": [373, 521, 708, 711, 712, 715, 884, 897, 899, 970, 1014, 1017], "predominantli": [373, 392], "math": [373, 381, 1136], "presenc": 373, "altern": [373, 379], "_wrap_fn": 373, "maxim": [373, 376], "inner": [373, 378, 884, 897, 899, 906, 909, 1030, 1031, 1032, 1033], "third": [373, 393, 884, 933, 1074, 1075], "addition": [373, 374], "leverag": 373, "equival": [373, 379, 381, 415, 416, 521, 576, 579, 677, 680, 681, 684, 712, 715, 884, 905, 914, 916, 923, 925, 930, 932, 948, 950], "input_arrai": 373, "adress": 374, "revisit": [374, 381], "dedic": [374, 378, 380, 833, 869, 1146, 1147], "__div__": 374, "dicat": 374, "futher": 374, "absenc": 374, "pep": 374, "484": 374, "annot": 374, "brittl": 374, "intend": [374, 1094, 1119], "freeli": 374, "inde": [374, 393], "flexibl": 374, "original_typ": 374, "cumbersom": 374, "sound": 375, "higher": [375, 376, 381, 393, 833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "overview": [375, 392], "handler": [375, 377, 381, 1136], "fledg": [376, 377], "syntact": [376, 381], "clip_by_valu": [376, 381], "clamp": [376, 381], "behavior": [376, 393, 521, 708, 711, 712, 715, 1074, 1075, 1076, 1080, 1082], "fit": [376, 970, 996, 999], "construct": [376, 377, 380, 381, 970, 1022, 1025, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180], "num": [376, 415, 424, 425], "power_seq": 376, "okai": 376, "bound": 376, "resid": [376, 380], "edg": [376, 381, 970, 971, 974, 980, 983, 1026, 1029, 1136], "larger": [376, 381, 434, 454, 970, 971, 974, 1004, 1007, 1094, 1115, 1118, 1123, 1126], "ml_framework": [376, 381, 415, 416], "current_framework": [376, 381], "furthermor": 376, "concaten": [376, 379, 471, 500, 759, 786, 970, 976, 979, 1136], "framework_handl": 376, "face": 376, "verbos": [376, 1136, 1183], "cprint": [376, 1182], "framework_stack": 376, "_determine_framework_from_arg": 376, "valueerror": [376, 970, 1010, 1013], "get_framework": 376, "neither": [376, 521, 535, 691, 694], "illustr": [376, 392], "un": [376, 434, 458], "nn": [376, 381, 415, 426, 1136], "init_h": [376, 871, 881], "init_c": [376, 871, 881], "kernel": [376, 393, 871, 881], "recurrent_kernel": [376, 871, 881], "bia": [376, 380, 871, 880, 881, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167], "recurrent_bia": [376, 871, 881], "x_shape": 376, "batch_shap": [376, 378, 381, 759, 812, 871, 881, 882, 883, 884, 951, 953, 1057, 1058, 1157, 1166], "timestep": [376, 871, 881, 1157, 1166], "input_channel": [376, 380, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167], "x_flat": 376, "wi": 376, "wi_x": 376, "wii_x": 376, "wif_x": 376, "wig_x": 376, "wio_x": 376, "recurr": [376, 871, 881], "wh": 376, "lstm": [376, 871, 881, 1157], "ht": 376, "ct": 376, "hts_list": 376, "unrol": [376, 379, 871, 881], "wii_xt": 376, "wif_xt": 376, "wig_xt": 376, "wio_xt": 376, "zip": 376, "htm1": 376, "ctm1": 376, "wh_htm1": 376, "whi_htm1": 376, "whf_htm1": 376, "whg_htm1": 376, "who_htm1": 376, "ft": 376, "gt": 376, "ot": 376, "offici": 376, "reliabl": 376, "sacrific": 376, "hear": 376, "virtu": 376, "pure_ivi": 376, "reduce_mean": [376, 379, 380, 381, 1136], "reduce_sum": [376, 1136], "reduce_var": 376, "compile_graph": [376, 381], "pure_torch": 376, "cat": [376, 381], "backbon": [376, 379], "_layer": 376, "super": [376, 379, 380, 381], "clean": [376, 377, 379], "random_unifrom": 376, "unclean": 376, "wx": 376, "temp": 376, "torchscript": 376, "fn": [376, 378, 394, 395, 396, 397, 398, 399, 400, 401, 402, 434, 455, 456, 471, 480, 481, 759, 765, 830, 1034, 1035, 1040, 1041, 1042, 1044, 1045, 1046, 1139, 1141], "example_input": [376, 412, 413], "static_argnum": [376, 412, 413], "static_argnam": [376, 412, 413], "jit": [376, 393], "frontend": 377, "primit": [377, 393], "hierarch": [377, 379, 380], "straight": [378, 1136], "arraywithlinalg": 378, "arraywithlog": 378, "arraywithmath": 378, "arraywithmeta": 378, "arraywithreduct": 378, "is_native_arrai": [378, 759], "_shape": 378, "_size": 378, "functool": 378, "mul": 378, "len": [378, 381, 415, 426], "_dtype": 378, "_devic": 378, "_dev_str": 378, "_pre_repr": 378, "_post_repr": 378, "ndim": [378, 884, 926, 928, 933], "mt": 378, "answer": [378, 393], "consol": 378, "typeerror": 378, "immut": 378, "behav": 378, "claim": 378, "truli": 378, "_native_wrapp": 378, "attributeerror": 378, "genuin": 378, "some_method": 378, "similarli": [378, 415, 426], "rewritten": 378, "__pow__": 378, "strang": 378, "power": [378, 379, 380, 521, 576, 579, 609, 708, 711, 759, 794, 817, 824, 884, 913, 1148], "enforc": 378, "notic": 378, "appear": [378, 970, 984, 987], "invers": [378, 392, 521, 527, 530, 531, 534, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 591, 595, 749, 754, 884, 903, 905, 923, 925], "_wrap_method": 378, "func_wrapp": [378, 394, 395, 396, 397, 398, 399, 400, 401, 402], "__name__": 378, "non_wrapped_method": 378, "_method_wrap": 378, "native_arg": 378, "native_kwarg": 378, "inner_fn": 378, "whist": 378, "unwrap": 378, "transit": 378, "needlessli": 378, "randn": 378, "_unwrap_method": 378, "method_wrap": 378, "compartment": 378, "public": [378, 759, 775], "newshap": 378, "new_shap": 378, "tidi": 378, "shorter": 378, "crystal": 378, "41": [378, 521, 580, 583, 732, 735, 884, 885, 887, 1094, 1119], "enough": [378, 379, 380], "ton": 379, "ado": [379, 380], "incred": [379, 393], "hash": 379, "soup": 379, "walk": [379, 380], "dct": 379, "cnt": 379, "combo": [379, 1136, 1142], "hold": [379, 759, 815, 816], "1000": [379, 521, 732, 735], "uda": 379, "3333": 379, "6667": 379, "178": 379, "new_weight": 379, "0600": 379, "3100": 379, "2400": 379, "6900": 379, "delimit": 379, "autocomplet": 379, "midwai": 379, "agent": 379, "total_spe": 379, "total_height": 379, "total_width": 379, "ag": 379, "tot": 379, "total_": 379, "total_h": 379, "batch_siz": [379, 871, 872, 873, 874, 875, 876, 877, 878, 1057, 1058], "dir": 379, "adam": [379, 380, 381, 833, 835, 838, 840, 842, 853, 855, 1136, 1173, 1175], "cnt0": 379, "cnt1": 379, "diff_0": 379, "diff_1": 379, "config0": 379, "config1": 379, "Not": [379, 380, 393, 414], "decod": 379, "l0": 379, "l1": [379, 884, 948, 950], "depth": [379, 380, 381, 392, 471, 495, 499, 503, 759, 797, 812, 1034, 1046, 1169, 1170], "clearer": 379, "truncat": 379, "decoder__l0": 379, "decoder__l1": 379, "encoder__l0": 379, "encoder__l1": 379, "height": 379, "l0__b": 379, "l0__w": 379, "l1__b": 379, "l1__w": 379, "printabl": 379, "obviou": 379, "foresight": 379, "untidili": 379, "update_ag": 379, "normalize_img": 379, "img": 379, "img_max": 379, "reduce_max": [379, 1136], "img_min": 379, "reduce_min": [379, 1136], "img_rang": 379, "agent_posit": 379, "agent_veloc": 379, "agent_cam_front_rgb": 379, "agent_cam_front_depth": 379, "agent_cam_rear_rgb": 379, "agent_cam_rear_depth": 379, "agent_cam_lidar": 379, "normal": [379, 970, 1014, 1017, 1052, 1053, 1056, 1057, 1062, 1171, 1172], "cleaner": 379, "camera": 379, "front_rgb": 379, "front_depth": 379, "rear_rgb": 379, "rear_depth": 379, "lidar": 379, "rgb": 379, "rear": 379, "veloc": 379, "cam": 379, "cam_max": 379, "cam_min": 379, "cam_rang": 379, "Of": 379, "ideal": 379, "perman": 379, "afterward": 379, "thread": 379, "incorpor": 379, "pretti": 379, "straightforward": 379, "dataload": [379, 391, 1136], "_cnt": 379, "img_": 379, "_dataset_s": 379, "_batch_siz": 379, "_count": [379, 380], "__next__": 379, "filenam": 379, "img_fnam": 379, "fname": 379, "loaded_img": 379, "cv2": 379, "imread": 379, "loader": [379, 393], "batch_slic": 379, "model": [379, 380, 1136], "mymodel": [379, 1136], "linear0": [379, 380, 1136], "linear1": [379, 380, 1136], "x_in": [379, 380, 381, 1136], "001": [379, 380, 833, 835, 838, 1052, 1053, 1056], "loss_fn": [379, 380, 381, 1136], "0145": 379, "grad_fn": 379, "addbackward0": 379, "_create_vari": 380, "output_channel": [380, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167], "with_bia": [380, 1157, 1167], "_input_channel": 380, "_output_channel": 380, "_w_shape": 380, "_b_shape": 380, "_with_bia": 380, "8979": 380, "3198": 380, "0196": 380, "3126": 380, "3717": 380, "9687": 380, "6958": 380, "5122": 380, "3902": 380, "8800": 380, "5613": 380, "1982": 380, "nightmar": 380, "overcom": 380, "fc": 380, "9563": 380, "impact": 380, "v0": 380, "v1": 380, "6440": 380, "key0": 380, "1823": 380, "8075": 380, "linear3": 380, "v2": 380, "2346": 380, "counter": 380, "hidden": [380, 871, 881, 1157, 1166], "fed": [380, 471, 515], "1300": 380, "decoupl": 380, "scheme": 380, "weight_initi": [380, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167], "glorotuniform": [380, 1148, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167], "bias_initi": [380, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167], "_w_init": 380, "_b_init": 380, "create_vari": [380, 1148], "var_shap": [380, 1148], "fan_out": [380, 1148], "fan_in": [380, 1148], "fan_mod": [380, 1148], "fan_sum": 380, "slight": 380, "misnom": 380, "saw": 380, "vanilla": [380, 1030, 1032], "descent": [380, 833, 845, 847, 1173, 1178], "lar": [380, 833, 853, 855, 857, 859, 1173], "lamb": [380, 833, 853, 855, 1173], "compile_on_next_step": [380, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178], "_beta1": 380, "_beta2": 380, "_epsilon": 380, "_mw": 380, "_vw": 380, "_first_pass": 380, "_should_compil": 380, "_step": [380, 1173, 1177], "new_v": 380, "_lr": 380, "isinst": [380, 381, 759, 827], "_inplac": 380, "_stop_gradi": 380, "set_stat": [380, 1173, 1174, 1175, 1176, 1177, 1178], "pre": [381, 393, 471], "captur": 381, "sparse_funct": 381, "num_class": [381, 1057, 1058], "num_dim": 381, "new_axi": 381, "_linear": 381, "to_backend": 381, "jax_graph": 381, "learnabl": [381, 1052, 1053, 1056, 1171, 1172], "to_ivy_modul": [381, 1146], "thinli": 381, "whilst": 381, "to_haiku_modul": 381, "hk": 381, "loss_fn_t": 381, "transform": [381, 392, 871, 879, 880], "without_apply_rng": 381, "rng": 381, "prngkei": 381, "init": 381, "update_rul": 381, "01": [381, 521, 716, 719], "tree_multimap": 381, "mechan": [391, 393, 1136], "vision": [391, 1136], "robot": [391, 1136], "focus": 392, "field": [392, 884, 897, 899, 926, 928, 933, 1074, 1075, 1076, 1080], "perfect": 392, "3d": [392, 1157, 1162, 1163], "differenti": 392, "demo": [392, 1136], "orient": 392, "pose": 392, "euler": [392, 414], "quaternion": 392, "rotat": 392, "matric": [392, 415, 426, 430, 431, 871, 880, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 913, 914, 916, 917, 919, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944], "angl": [392, 521, 552, 555, 592, 728, 731, 750], "ivy_mech": 392, "target_facing_rotation_matrix": 392, "polar_to_cartesian_coord": 392, "ordin": [392, 884, 930, 932], "warp": 392, "optic": 392, "voxel": 392, "ivy_vis": 392, "coords_to_voxel_grid": 392, "render_pixel_coord": 392, "neural": [392, 871, 1136, 1143, 1157], "radianc": 392, "nerf": 392, "trajectori": 392, "motion": 392, "plan": [392, 1136], "mobil": 392, "ivy_robot": 392, "sample_spline_path": 392, "rigidmobil": 392, "sample_bodi": 392, "drone": 392, "sample_link": 392, "openai": 392, "swimmer": 392, "cumul": [392, 759, 777, 778], "reward": 392, "supervis": 392, "reinforc": 392, "door": [392, 393], "intersect": 392, "cartpol": 392, "mountain_car": 392, "pendulum": 392, "reacher": 392, "polici": 392, "condit": [392, 412, 413, 1034, 1044, 1045, 1069, 1073], "learnt": 392, "ture": 392, "ntm": 392, "egospher": 392, "spatial": 392, "esm": 392, "ivy_memori": 392, "egocentr": 392, "room": 392, "inspir": 392, "doubt": 393, "grate": 393, "put": 393, "probe": 393, "undergo": 393, "remark": 393, "surpris": 393, "backward": [393, 521, 712, 715, 884, 945, 947, 1127, 1128, 1131, 1132, 1135], "lock": 393, "contunu": 393, "minor": 393, "xla": 393, "buffer": 393, "kind": [393, 434, 454, 457, 521, 708, 711, 1094, 1111, 1114, 1119], "gold": 393, "dex": 393, "phase": 393, "lax": 393, "scan": 393, "tricki": 393, "predictor": 393, "tight": 393, "driver": 393, "schedul": 393, "algorithm": [393, 871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "dispatch": 393, "Will": 393, "ast": 393, "dynamic": 393, "cond": 393, "jacobian": 393, "checkpoint": 393, "autodiff": 393, "shine": 393, "merci": 393, "superset": 393, "cluster": 393, "compet": 393, "paradigm": 393, "parallelis": [393, 471, 480, 481], "spmd": 393, "mixtur": [393, 833, 835, 838], "expert": 393, "sophist": 393, "depart": 393, "routin": 393, "hundr": 393, "thousand": 393, "deepli": [393, 1034, 1036], "broadli": 393, "heavili": 393, "supplementari": 393, "Is": 393, "reusabl": 393, "fanci": 393, "fusion": 393, "lose": 393, "vmap": 393, "pmap": 393, "overhead": 393, "ineffici": 393, "eventu": 393, "supplement": 393, "backdoor": 393, "callback": 393, "record": 393, "metric": 393, "somewhat": 393, "outsourc": 393, "inputs_to_ivy_arrai": 394, "gaussian": [404, 405], "leaki": [404, 405, 406], "alpha": [404, 406], "rectifi": [404, 406, 407], "slope": [404, 406], "39": [404, 406, 521, 609, 833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "85": [404, 406, 521, 580, 583], "48": [404, 406, 521, 732, 735, 833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "88": [404, 406, 521, 580, 583, 884, 920, 922, 1094, 1095, 1098, 1122], "269": [404, 408], "731": [404, 408], "881": [404, 408], "214": [404, 408], "978": [404, 408], "891": [404, 408], "422": [404, 409], "155": [404, 409], "0768": [404, 409], "231": [404, 409], "693": [404, 409, 954, 965, 968], "49": [404, 409, 521, 732, 735, 1094, 1095, 1098, 1122], "147": [404, 409], "363": [404, 409], "3461": [404, 410], "6491": [404, 410], "535": [404, 410], "hyperbol": [404, 411, 521, 530, 531, 534, 544, 547, 551, 556, 559, 591, 592, 595, 728, 731, 749, 750, 754], "55": [404, 411, 871, 877, 884, 920, 922, 1094, 1095, 1098, 1122], "501": [404, 411], "faster": [412, 413], "invoc": [412, 413], "718281828459045": 414, "newaxi": 414, "alia": 414, "pi": 414, "141592653589793": 414, "mathemat": [414, 521, 535, 552, 555, 613, 616, 691, 694, 884, 948, 950], "half": [415, 416, 1057, 1059, 1060, 1063, 1065], "chosen": [415, 416, 521, 552, 555, 1069, 1073], "distanc": [415, 416], "adjac": [415, 416], "creation_funct": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433], "interpret": [415, 417, 427], "uniniti": [415, 418, 419], "n_row": [415, 420], "n_col": [415, 420], "elsewher": [415, 420, 1069, 1073], "row": [415, 420, 884, 930, 932, 933, 1057, 1058, 1069, 1072], "column": [415, 420, 884, 897, 899, 926, 928, 930, 932, 933], "__dlpack__": [415, 421, 471, 516], "interchang": [415, 421, 970, 1018, 1021], "endpoint": [415, 424], "xy": [415, 426], "coordin": [415, 426, 521, 552, 555], "cartesian": [415, 426], "ij": [415, 426, 1094, 1095, 1098, 1122], "rank": [415, 426, 759, 831, 884, 888, 890, 914, 916, 926, 928, 930, 932, 942, 944, 945, 947, 948, 950, 970, 980, 983, 984, 987, 1014, 1017, 1026, 1029, 1069, 1072, 1127, 1128, 1131, 1132, 1135], "ni": [415, 426], "xi": [415, 426], "n1": [415, 426], "n2": [415, 426], "n3": [415, 426], "accordingli": [415, 426, 521, 613, 616, 884, 948, 950, 1069, 1071, 1074, 1075, 1076, 1080, 1082, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "xv": [415, 426], "yv": [415, 426], "triangular": [415, 430, 431, 884, 885, 887, 926, 928], "innermost": [415, 430, 431, 884, 885, 887, 891, 894, 896, 897, 899, 900, 902, 903, 905, 914, 916, 917, 919, 923, 925, 926, 928, 930, 932, 933, 935, 936, 938, 942, 944], "mxn": [415, 430, 431, 884, 894, 896, 905, 914, 916, 917, 919, 923, 925, 926, 928, 935, 936, 938, 942, 944], "defaultdtyp": [434, 435], "defaultfloatdtyp": [434, 436], "float_dtyp": [434, 450, 464], "defaultintdtyp": [434, 437], "dtype_in": [434, 438, 439, 453, 458, 459, 460, 470], "incompat": [434, 442], "occur": [434, 443, 446, 1069, 1070, 1071, 1074, 1075, 1076, 1080, 1082], "data_type_funct": [434, 443, 446], "closest": [434, 448, 521, 584, 587, 599, 617, 620, 621, 624, 716, 719, 755, 758], "floatdtyp": [434, 450], "int_dtyp": [434, 451, 465], "intdtyp": [434, 451], "followng": [434, 454], "occupi": [434, 454, 457, 759, 815, 816], "ep": [434, 454, 884, 905, 914, 916, 923, 925], "smallest_norm": [434, 454], "precis": [434, 454, 521, 691, 694, 732, 735], "encapsul": [434, 457], "type1": [434, 461], "type2": [434, 461], "arrays_and_dtyp": [434, 462], "ret1": [434, 466], "ret2": [434, 466], "noinspect": [435, 436, 437, 472, 834], "pyshadowingnam": [435, 436, 437, 472, 834], "defaultdevic": [471, 472], "__enter__": 471, "_dev": 471, "initialis": 471, "devcloneditem": [471, 493], "multidevitem": [471, 473, 476], "devclonedit": 471, "multidevit": [471, 474, 477, 480, 481, 485], "devclonednest": 471, "multidevnest": [471, 475, 478], "devdistitem": 471, "devdistit": 471, "devdistnest": 471, "devmanag": [471, 479], "dev_mapp": 471, "da_dim_s": 471, "safety_factor": 471, "min_dev_dim_s": 471, "max_dev_dim_step_ratio": 471, "min_unit_dev_tune_step": 471, "min_sf_tune_step": 471, "starting_split_factor": 471, "max_split_factor_step_s": 471, "tune_dev_alloc": 471, "tune_dev_split": 471, "mapper": [471, 480, 481], "receivess": 471, "ratio": [471, 833, 853, 855, 1173, 1175], "safe": [471, 480], "oom": 471, "tune": 471, "da_tune_step": 471, "ds_tune_step": 471, "to_clon": 471, "to_distribut": 471, "multidevic": [471, 480], "parallel": [471, 480, 481], "mutlidevic": [471, 480], "repeated_config_check": 471, "tune_step": 471, "devmapp": [471, 481], "ret_fn": [471, 480, 481], "queue_class": [471, 480, 481], "worker_class": [471, 480, 481], "worker": [471, 480, 481], "used_dev": [471, 480], "sf": [471, 480], "devmappermultiproc": 471, "multidev": [471, 482, 483, 484, 503], "profil": 471, "save_dir": [471, 486], "deviceic": [471, 492], "spread": [471, 503], "139740789224448": [471, 505], "physic": [471, 507], "x3": [471, 509], "x4": [471, 509], "process_specif": [471, 510, 520], "percentag": [471, 510], "ram": [471, 510, 517, 520], "alon": [471, 510, 520], "attr_onli": [471, 511], "chunk": [471, 513, 514, 515], "max_chunk_s": [471, 515], "chunk_siz": [471, 515], "input_ax": [471, 515], "output_ax": [471, 515], "feed": [471, 515], "fist": [471, 515], "stream": [471, 516], "caveat": [471, 516], "portabl": [471, 516, 1136], "gb": [471, 517, 520], "reset": [471, 519], "magnitud": [521, 522, 525, 535, 691, 694, 884, 933, 935, 936, 938], "princip": [521, 527, 540, 543, 548], "cosin": [521, 527, 530, 531, 534, 588, 591, 592, 595], "x1_i": [521, 535, 538, 552, 555, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 601, 604, 612, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 740, 744], "x2_i": [521, 535, 538, 552, 555, 560, 563, 568, 571, 572, 575, 576, 579, 580, 583, 596, 599, 601, 604, 612, 620, 621, 624, 625, 628, 629, 632, 645, 648, 649, 652, 669, 672, 673, 676, 681, 684, 685, 688, 691, 694, 700, 703, 708, 711, 712, 715, 740, 744], "finit": [521, 535, 552, 555, 633, 636, 691, 694, 708, 711, 712, 715], "nor": [521, 535, 691, 694], "nearest": [521, 535, 691, 694, 716, 719], "2019": [521, 535, 613, 616, 691, 694], "commut": [521, 535], "sine": [521, 540, 543, 544, 547, 724, 727, 728, 731], "57": [521, 540, 543, 580, 583, 592], "524": [521, 540, 543], "644": [521, 540, 543], "201": [521, 540, 543, 716, 719], "305": [521, 540, 543], "412": [521, 540, 543], "quotient": [521, 552, 555], "notat": [521, 552, 555, 1094, 1095, 1098, 1122], "denot": [521, 552, 555], "pair": [521, 552, 555, 871, 883, 884, 888, 890], "quadrant": [521, 552, 555], "3\u03c0": [521, 552, 555], "549": [521, 551, 556, 559, 749, 754], "bitwis": [521, 560, 563, 572, 575, 580, 583, 685, 688], "AND": [521, 560, 563, 673, 676, 1127, 1128, 1131], "binari": [521, 560, 563, 572, 575, 580, 583, 685, 688, 954, 955, 958], "invert": [521, 564, 567], "arithmet": [521, 576, 579, 1094, 1103, 1106], "propag": [521, 576, 579, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1115, 1118, 1119, 1123, 1126], "thu": [521, 576, 579, 708, 711, 712, 715, 884, 897, 899], "lh": [521, 576, 579], "rh": [521, 576, 579], "xor": [521, 580, 583, 685, 688], "78": [521, 580, 583, 884, 920, 922, 1094, 1095, 1098, 1122], "91": [521, 580, 583, 884, 920, 922, 1094, 1095, 1098, 1122], "23": [521, 580, 583, 871, 877, 884, 894, 896, 1069, 1073], "66": [521, 580, 583, 884, 920, 922, 1094, 1095, 1098, 1122], "77": [521, 580, 583, 884, 920, 922, 1094, 1095, 1098, 1122], "79": [521, 580, 583], "89": [521, 580, 583, 884, 939, 941, 1094, 1119], "98": [521, 580, 583, 884, 920, 922, 1069, 1073, 1094, 1095, 1098, 1122], "26": [521, 580, 583, 833, 835, 838, 871, 878, 884, 894, 896, 920, 922, 939, 941, 1094, 1095, 1098, 1122], "21": [521, 580, 583, 759, 777, 884, 894, 896, 920, 922, 954, 965, 968, 1094, 1095, 1098, 1122], "34": [521, 580, 583, 732, 735], "24": [521, 580, 583, 732, 735, 759, 777, 833, 835, 838, 884, 894, 896, 920, 922, 1094, 1095, 1098, 1122], "51": [521, 580, 583], "27": [521, 580, 583, 592, 732, 735, 871, 883, 884, 920, 922, 1094, 1095, 1098, 1122], "74": [521, 580, 583], "59": [521, 580, 583], "416": [521, 588], "122": [521, 592], "368": [521, 592], "670": [521, 592], "202": [521, 592, 716, 719], "548": [521, 592], "1490": [521, 592], "dividend": [521, 596, 712, 715], "divisor": [521, 596, 712, 715, 833, 835, 838, 840, 842, 853, 855, 1094, 1115, 1118, 1123, 1126, 1173, 1174, 1175], "gauss": [521, 605, 608], "exponenti": [521, 538, 605, 608, 609, 612, 669, 672, 708, 711], "logarithm": [521, 538, 609, 612, 653, 656, 657, 660, 661, 664, 665, 668, 669, 672, 884, 893, 929], "72": [521, 609, 833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "accur": [521, 613, 616], "fdlibm": [521, 613, 616], "compliant": [521, 613, 616, 677, 680, 681, 684, 1094, 1099, 1102, 1103, 1106, 1107, 1110], "greatest": [521, 599, 617, 620, 621, 624], "out_i": [521, 633, 636, 637, 640, 641, 644], "threshold": [521, 689, 690], "exce": [521, 690], "y_i": [521, 696, 699], "expon": [521, 708, 711, 759, 824], "versu": [521, 708, 711], "odd": [521, 708, 711], "modulu": [521, 712, 715], "primarili": [521, 712, 715], "5654": [521, 716, 719], "034": [521, 716, 719], "433": [521, 716, 719], "343": [521, 716, 719], "44": [521, 716, 719, 732, 735, 736, 739, 884, 920, 922, 1069, 1073, 1094, 1095, 1098, 1122], "30": [521, 716, 719, 884, 920, 922, 1094, 1095, 1098, 1122, 1148, 1154], "81": [521, 716, 719, 736, 739, 1094, 1095, 1098, 1122], "527": [521, 716, 719], "301": [521, 716, 719], "indistinguish": [521, 732, 735], "infinit": [521, 732, 735], "83": [521, 732, 735], "32455532": [521, 732, 735], "89897949": [521, 732, 735], "50": [521, 732, 735, 884, 920, 922, 1069, 1072, 1094, 1095, 1098, 1122], "31": [521, 732, 735], "169": [521, 732, 735], "47": [521, 732, 735], "73": [521, 732, 735, 884, 885, 887, 1052, 1053, 1056], "93": [521, 732, 735], "35": [521, 732, 735, 871, 883, 884, 888, 890, 1069, 1073, 1094, 1095, 1098, 1122], "09": [521, 736, 739, 871, 883], "61": [521, 736, 739, 954, 955, 958], "546": [521, 745], "842": [521, 745], "916": [521, 745, 954, 955, 958], "996": [521, 745], "328": [521, 745], "real": [521, 750], "462": [521, 750], "604": [521, 750], "984": [521, 750], "997": [521, 750, 1052, 1053, 1056], "decim": [521, 755, 758], "inspect": [759, 765, 1140, 1141], "downscal": [759, 771, 772, 774], "60": [759, 777, 884, 920, 922, 1094, 1095, 1098, 1122], "default_v": [759, 780], "catch_except": [759, 780], "rev": [759, 780], "with_cal": [759, 780], "arrang": [759, 781], "123": [759, 784], "mod": [759, 785], "max_freq": [759, 786], "num_band": [759, 786], "pad": [759, 786, 871, 872, 873, 874, 875, 876, 877, 878, 970, 980, 983, 1026, 1029, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "fourier": [759, 786], "band": [759, 786], "linearli": [759, 786, 884, 930, 932], "oppos": [759, 786], "geometr": [759, 786], "seen_set": [759, 797], "local_set": [759, 797], "decrement": [759, 801], "is_arrai": 759, "allow_dupl": [759, 809], "forkserv": [759, 810], "spawn": [759, 810], "hot": [759, 812], "scatter": [759, 812, 815, 816], "overrid": [759, 812], "tmp_dr": [759, 820], "temporari": [759, 820], "min_denomin": [759, 823], "stabil": [759, 823, 824, 1083, 1084, 1087, 1089, 1092], "_min_denomin": [759, 823], "min_bas": [759, 824], "_min_bas": [759, 824, 1052, 1053, 1056, 1171, 1172], "100000023841858": [759, 827], "200000047683716": [759, 827], "299999952316284": [759, 827], "400000095367432": [759, 827], "599999904632568": [759, 827], "101": [759, 828], "unpack": [759, 831], "gradienttrack": [833, 834], "delta": [833, 835, 838], "cost": [833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1030, 1031, 1032, 1033], "ws": [833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "en": [833, 835, 838, 840, 842], "wikipedia": [833, 835, 838, 840, 842], "wiki": [833, 835, 838, 840, 842], "stochastic_gradient_desc": [833, 835, 838, 840, 842], "dc": [833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "dw": [833, 835, 838, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "averag": [833, 835, 838, 840, 842, 853, 855, 1030, 1031, 1032], "forget": [833, 835, 838, 840, 842, 853, 855, 1173, 1174, 1175], "004": [833, 835, 838], "009": [833, 835, 838], "86": [833, 835, 838], "28": [833, 835, 838, 871, 874, 877, 878, 884, 920, 922, 1094, 1095, 1098, 1122], "45": [833, 835, 838, 884, 920, 922, 970, 1009, 1052, 1053, 1056, 1094, 1095, 1098, 1122], "0125": [833, 835, 838], "601": [833, 835, 838], "581": [833, 835, 838], "025": [833, 835, 838], "992": [833, 835, 838], "209": [833, 835, 838, 1074, 1075], "271": [833, 835, 838], "0717": [833, 835, 838], "142": [833, 835, 838], "182": [833, 835, 838], "624": [833, 835, 838, 1057, 1063, 1065], "06": [833, 835, 838], "02": [833, 835, 838], "744": [833, 835, 838], "626": [833, 835, 838], "65": [833, 835, 838, 884, 920, 922, 1094, 1095, 1098, 1122], "024": [833, 835, 838], "096": [833, 835, 838], "216": [833, 835, 838], "384": [833, 835, 838], "rate": [833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863, 1030, 1031, 1032, 1033, 1157, 1168, 1173, 1174, 1175, 1176, 1177, 1178], "ws_new": [833, 840, 842, 845, 847, 853, 855, 857, 859, 861, 863], "retain": [833, 844], "trust": [833, 853, 855, 1173, 1175], "decai": [833, 853, 855, 857, 859, 1173, 1175, 1176], "layerwis": [833, 857, 859, 1173, 1176], "stride": [871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "data_format": [871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "nwc": [871, 872, 873, 1157, 1158, 1159], "dilat": [871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "convolut": [871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "d_in": [871, 872, 873, 874, 875, 876, 877], "fw": [871, 872, 873, 874, 875, 876, 877, 878], "d_out": [871, 872, 873, 874, 875, 876, 877], "slide": [871, 872, 873, 874, 875, 876, 877, 878, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], "ncw": [871, 872, 873, 1157, 1158, 1159], "wio": [871, 872], "output_shap": [871, 873, 875, 877, 1157, 1159, 1161, 1163], "nhwc": [871, 874, 875, 878, 1157, 1160, 1161, 1164], "fh": [871, 874, 875, 876, 877, 878], "nchw": [871, 874, 875, 878, 1157, 1160, 1161, 1164], "hwio": [871, 874], "unequ": [871, 874], "unsqueez": [871, 874, 878], "ndhwc": [871, 876, 877, 1157, 1162, 1163], "volum": [871, 876], "fd": [871, 876, 877], "ncdhw": [871, 876, 877, 1157, 1162, 1163], "dhwio": [871, 876], "256": [871, 877], "258": [871, 877], "128": [871, 877, 884, 920, 922], "depthwis": [871, 878, 1157, 1164], "333": [871, 878], "inp": [871, 878], "prob": [871, 879, 1057, 1058, 1157, 1165], "randomli": [871, 879, 1157, 1165], "bernoulli": [871, 879], "out_featur": [871, 879, 880], "incom": [871, 880], "outer_batch_shap": [871, 880], "inner_batch_shap": [871, 880], "in_featur": [871, 880], "cell": [871, 881, 1157, 1166], "num_queri": [871, 882, 883], "x_feat_dim": [871, 882], "num_kei": [871, 882, 883], "cont_feat_dim": [871, 882], "numhead": [871, 882], "feat_dim": [871, 882, 883], "out_feat_dim": [871, 882], "score": [871, 883], "04": [871, 883], "03": [871, 883, 1052, 1053, 1056], "08": [871, 883], "decomposit": [884, 885, 887, 926, 928, 933], "symmetr": [884, 885, 887, 897, 899, 900, 902, 951, 953], "u": [884, 885, 887, 933], "577": [884, 885, 887], "707": [884, 885, 887], "vif": [884, 888, 890], "92": [884, 891], "293": [884, 891], "46997": [884, 891], "eigendecomposit": [884, 897, 899], "qlq\u1d40": [884, 897, 899], "orthogon": [884, 897, 899], "eig": [884, 897, 899], "eigenvalu": [884, 897, 899, 900, 902], "eigenvector": [884, 897, 899], "75": [884, 903, 920, 922], "prepend": [884, 906, 909], "singular": [884, 905, 914, 916, 923, 925, 933, 935, 936, 938], "toler": [884, 905, 914, 916, 923, 925], "largest_singular_valu": [884, 905, 914, 916, 923, 925], "array_lik": [884, 920, 922], "33": [884, 920, 922, 1052, 1053, 1056, 1094, 1095, 1098, 1122], "36": [884, 920, 922, 1094, 1095, 1098, 1122], "84": [884, 920, 922, 1094, 1095, 1098, 1122], "105": [884, 920, 922, 954, 955, 958], "112": [884, 920, 922, 1094, 1095, 1098, 1122], "104": [884, 920, 922, 1094, 1095, 1098, 1122], "120": [884, 920, 922], "moor": [884, 905, 923, 925], "penros": [884, 905, 923, 925], "pseudo": [884, 905, 923, 925], "orthonorm": [884, 926, 928, 933], "2d": [884, 893, 929, 1157, 1160, 1161, 1164], "logdet": [884, 893, 929], "coeffici": [884, 930, 932], "usvh": [884, 933], "vh": [884, 933], "hermitian": [884, 933], "et": [884, 933], "cetera": [884, 933], "adjoint": [884, 933], "reconstruct": [884, 933, 1074, 1075, 1081], "reconstructed_x": [884, 933], "contract": [884, 939, 941, 1094, 1095, 1098, 1122], "doubl": [884, 939, 941], "singleton": [884, 948, 950, 970, 1010, 1013, 1069, 1071, 1094, 1099, 1102, 1103, 1106, 1107, 1110, 1111, 1114, 1115, 1118, 1119, 1123, 1126, 1127, 1128, 1131, 1132, 1135], "liter": [884, 948, 950], "manhattan": [884, 948, 950], "l2": [884, 948, 950], "euclidean": [884, 948, 950], "mathbf": [884, 951, 953], "mathbb": [884, 951, 953], "skew": [884, 951, 953], "entropi": [954, 955, 958, 960, 963, 965, 968], "predict": [954, 955, 958, 960, 963, 965, 968], "smooth": [954, 955, 958, 960, 963, 965, 968], "223": [954, 955, 958], "357": [954, 955, 958, 965, 968], "511": [954, 955, 958], "discret": [954, 960, 963], "3862944": [954, 960, 963], "35667497": [954, 960, 963], "spars": [954, 965, 968], "logit": [954, 965, 968], "793291": [954, 965, 968], "512926": [954, 965, 968], "before_1": [970, 980, 983, 1026, 1029], "after_1": [970, 980, 983, 1026, 1029], "before_n": [970, 980, 983, 1026, 1029], "after_n": [970, 980, 983, 1026, 1029], "insert": [970, 984, 987, 1034, 1039, 1069, 1070], "manipulation_funct": [970, 984, 987], "reorder": [970, 988, 991], "permut": [970, 992, 995, 1018, 1021], "repetit": [970, 996, 999, 1022, 1025], "restor": [970, 1004, 1007], "famili": [970, 1014, 1017], "intxx": [970, 1014, 1017], "floatxx": [970, 1014, 1017], "fomaml_step": 1030, "inner_cost_fn": [1030, 1031, 1032], "outer_cost_fn": [1030, 1031, 1032], "inner_grad_step": [1030, 1031, 1032, 1033], "inner_learning_r": [1030, 1031, 1032, 1033], "inner_optimization_step": [1030, 1031, 1032, 1033], "inner_batch_fn": [1030, 1031, 1032], "outer_batch_fn": [1030, 1031, 1032], "average_across_step": [1030, 1031, 1032], "inner_v": [1030, 1031, 1032], "keep_inner_v": [1030, 1031, 1032], "outer_v": [1030, 1031, 1032], "keep_outer_v": [1030, 1031, 1032], "return_inner_v": [1030, 1031, 1032, 1033], "num_task": [1030, 1031, 1032, 1033], "maml": [1030, 1031, 1032], "recev": [1030, 1031, 1032], "0x7f358bcb0b80": [1030, 1031, 1032, 1033], "maml_step": 1030, "rece": [1030, 1032], "reptile_step": 1030, "cost_fn": [1030, 1033], "reptil": [1030, 1033], "receivng": [1030, 1033], "all_nested_indic": 1034, "include_nest": [1034, 1035], "_index": [1034, 1035, 1045], "_base": [1034, 1035, 1044, 1045], "copy_nest": 1034, "to_mut": [1034, 1036, 1046], "mutabl": [1034, 1036, 1046], "insert_into_nest_at_index": 1034, "insert_into_nest_at_indic": 1034, "map_nest_at_index": 1034, "map_nest_at_indic": 1034, "multi_index_nest": 1034, "nested_ani": 1034, "check_nest": [1034, 1044, 1045], "conditon": [1034, 1044, 1045], "nested_indices_wher": 1034, "stop_after_n_found": [1034, 1045], "_depth": [1034, 1046], "_tuple_check_fn": [1034, 1046], "_list_check_fn": [1034, 1046], "_dict_check_fn": [1034, 1046], "nested_multi_map": 1034, "nest0": [1034, 1047], "ivy_arrai": [1034, 1047], "funciton": [1034, 1047], "prune_nest_at_index": 1034, "prune_nest_at_indic": 1034, "set_nest_at_index": 1034, "set_nest_at_indic": 1034, "mini": [1052, 1053, 1056, 1171, 1172], "gamma": [1052, 1053, 1056], "beta": [1052, 1053, 1056], "0976": [1052, 1053, 1056], "3452": [1052, 1053, 1056], "2740": [1052, 1053, 1056], "1047": [1052, 1053, 1056], "5886": [1052, 1053, 1056], "2732": [1052, 1053, 1056], "7696": [1052, 1053, 1056], "7024": [1052, 1053, 1056], "2518": [1052, 1053, 1056], "58": [1052, 1053, 1056, 1074, 1075], "283": [1052, 1053, 1056], "585": [1052, 1053, 1056], "909": [1052, 1053, 1056], "628": [1052, 1053, 1056], "225": [1052, 1053, 1056], "425": [1052, 1053, 1056], "norm_idx": [1052, 1053, 1056], "228": [1052, 1053, 1056], "0285": [1052, 1053, 1056], "199": [1052, 1053, 1056], "204": [1052, 1053, 1056], "population_s": [1057, 1058], "num_sampl": [1057, 1058], "draw": [1057, 1058, 1062, 1063, 1065], "unnorm": [1057, 1058], "drawn": [1057, 1058, 1059, 1060, 1062, 1063, 1065], "home": [1057, 1058, 1062], "uniformli": [1057, 1059, 1060, 1063, 1065], "highest": [1057, 1059, 1060], "parameter": [1057, 1062, 1063, 1065], "6444774682897879": [1057, 1062], "811": [1057, 1062], "508": [1057, 1062], "564": [1057, 1062], "7268672": [1057, 1062], "968": [1057, 1062], "175": [1057, 1062, 1074, 1075], "064": [1057, 1062], "40935726": [1057, 1062], "556": [1057, 1062], "26431865": [1057, 1063, 1065], "475": [1057, 1063, 1065], "878": [1057, 1063, 1065], "861": [1057, 1063, 1065], "89150229": [1057, 1063, 1065], "89629126": [1057, 1063, 1065], "94198485": [1057, 1063, 1065], "91405606": [1057, 1063, 1065], "72848724": [1057, 1063, 1065], "7550739": [1057, 1063, 1065], "00109": [1057, 1063, 1065], "occurr": [1069, 1070, 1071, 1074, 1075], "yield": [1069, 1073], "43": [1069, 1073], "x_j": [1074, 1075, 1076, 1080, 1082], "impli": [1074, 1075, 1076, 1080, 1082], "inverse_indic": [1074, 1075, 1081], "aggreg": [1074, 1075], "fourth": [1074, 1075], "607": [1074, 1075], "735": [1074, 1075], "667": [1074, 1075], "381": [1074, 1075], "857": [1074, 1075], "0396": [1074, 1075], "166": [1074, 1075], "828": [1074, 1075], "144": [1074, 1075], "40501155": [1074, 1075], "77361575": [1074, 1075], "97776199": [1074, 1075], "36831157": [1074, 1075], "89148434": [1074, 1075], "9512272": [1074, 1075], "67542176": [1074, 1075], "41985657": [1074, 1075], "23478023": [1074, 1075], "1141": [1074, 1075], "8101": [1074, 1075], "9298": [1074, 1075], "8460": [1074, 1075], "2119": [1074, 1075], "3519": [1074, 1075], "6252": [1074, 1075], "4033": [1074, 1075], "7443": [1074, 1075], "2577": [1074, 1075], "3707": [1074, 1075], "0545": [1074, 1075], "3238": [1074, 1075], "5944": [1074, 1075], "0775": [1074, 1075], "4327": [1074, 1075], "176": [1074, 1075], "889": [1074, 1075], "763": [1074, 1075], "071": [1074, 1075], "262": [1074, 1075], "456": [1074, 1075], "114": [1074, 1075], "349": [1074, 1075], "615": [1074, 1075], "594": [1074, 1075], "335": [1074, 1075], "212": [1074, 1075], "457": [1074, 1075], "827": [1074, 1075], "set_funct": [1074, 1076, 1080], "ascend": [1083, 1084, 1087], "einstein": [1094, 1095, 1098, 1122], "summat": [1094, 1095, 1098, 1122], "seq": [1094, 1095, 1098, 1122], "jk": [1094, 1095, 1098, 1122], "ik": [1094, 1095, 1098, 1122], "126": [1094, 1095, 1098, 1122], "510": [1094, 1095, 1098, 1122], "99": [1094, 1095, 1098, 1122], "108": [1094, 1095, 1098, 1122], "117": [1094, 1095, 1098, 1122], "sentinel": [1094, 1099, 1102, 1107, 1110], "unsign": [1094, 1111, 1114, 1119], "degre": [1094, 1115, 1118, 1123, 1126], "bessel": [1094, 1115, 1118, 1123, 1126], "8164966": [1094, 1115, 1118], "varianc": [1094, 1123, 1126], "unbias": [1094, 1123, 1126], "simplicit": [1127, 1128, 1131], "autom": 1136, "grow": 1136, "ai": 1136, "got": 1136, "colab": 1136, "sharp": 1136, "weekli": 1136, "event": 1136, "immedi": 1136, "favorit": 1136, "jax_concat": 1136, "tf_concat": 1136, "np_concat": 1136, "mx_concat": 1136, "torch_concat": 1136, "prompt": 1136, "get_devic": 1136, "reduce_prod": 1136, "gradient_imag": 1136, "linalg": 1136, "bilinear_resampl": 1136, "stack_imag": 1136, "neural_net": 1136, "ecosystem": [1136, 1142], "popular": [1136, 1142], "acceler": 1136, "articl": 1136, "lenton2021ivi": 1136, "inter": 1136, "lenton": 1136, "daniel": 1136, "pardo": 1136, "fabio": 1136, "falck": 1136, "fabian": 1136, "jame": 1136, "stephen": 1136, "clark": 1136, "ronald": 1136, "journal": 1136, "arxiv": 1136, "preprint": 1136, "2102": 1136, "02886": 1136, "2021": 1136, "add_array_spec": 1139, "fn_array_spec": 1139, "geglu": 1143, "native_modul": [1146, 1147], "native_module_class": [1146, 1147], "firstlayersiren": 1148, "kaimingnorm": [1148, 1152], "negative_slop": 1148, "Ones": 1148, "siren": 1148, "w0": [1148, 1154], "filter_s": [1157, 1158, 1159], "1d": [1157, 1158, 1159], "conv1dtranspos": 1157, "filter_shap": [1157, 1160, 1161, 1162, 1163, 1164], "conv2dtranspos": 1157, "conv3dtranspos": 1157, "depthwiseconv2d": 1157, "num_channel": [1157, 1164], "bernoul": [1157, 1165], "num_lay": [1157, 1166], "return_sequ": [1157, 1166], "return_st": [1157, 1166], "get_initial_st": [1157, 1166], "dens": [1157, 1167], "multiheadattent": 1157, "query_dim": [1157, 1168], "head_dim": [1157, 1168], "dropout_r": [1157, 1168], "context_dim": [1157, 1168], "with_to_q_fn": [1157, 1168], "with_to_kv_fn": [1157, 1168], "with_to_out_fn": [1157, 1168], "build_mod": [1157, 1168, 1169, 1170], "on_init": [1157, 1168, 1169, 1170], "__call__": [1157, 1168, 1169, 1170], "store_var": [1169, 1170], "arg_stateful_idx": [1169, 1170], "kwarg_stateful_idx": [1169, 1170], "fallback_to_non_compil": [1169, 1170, 1173, 1177], "with_partial_v": [1169, 1170], "initialz": [1169, 1170], "from_cal": [1169, 1170], "check_submod_ret": [1169, 1170], "get_mod_kei": [1169, 1170], "top_mod": [1169, 1170], "mod_depth": [1169, 1170], "mod_height": [1169, 1170], "mod_with_top_mod_key_chain": [1169, 1170], "save_weight": [1169, 1170], "weights_path": [1169, 1170], "show_mod_in_top_mod": [1169, 1170], "upper_depth": [1169, 1170], "lower_depth": [1169, 1170], "show_structur": [1169, 1170], "show_v_in_top_v": [1169, 1170], "sub_mod": [1169, 1170], "show_v": [1169, 1170], "track_submod_call_ord": [1169, 1170], "track_submod_ret": [1169, 1170], "v_with_top_v_key_chain": [1169, 1170], "layernorm": 1171, "normalized_shap": [1171, 1172], "elementwise_affin": [1171, 1172], "trail": [1171, 1172], "affin": [1171, 1172], "0001": [1173, 1174, 1175], "init_on_first_step": [1173, 1177], "ignore_miss": [1173, 1177], "overriden": [1173, 1177], "sgd": 1173, "stochast": [1173, 1178], "sub_modul": [1179, 1180]}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array_methods"], [118, 0, 0, "-", "conversions"], [123, 0, 0, "-", "creation"], [125, 0, 0, "-", "data_type"], [127, 0, 0, "-", "device"], [129, 0, 0, "-", "elementwise"], [131, 0, 0, "-", "general"], [133, 0, 0, "-", "gradients"], [135, 0, 0, "-", "image"], [137, 0, 0, "-", "layers"], [139, 0, 0, "-", "linear_algebra"], [141, 0, 0, "-", "losses"], [143, 0, 0, "-", "manipulation"], [145, 0, 0, "-", "norms"], [147, 0, 0, "-", "random"], [149, 0, 0, "-", "searching"], [151, 0, 0, "-", "set"], [153, 0, 0, "-", "sorting"], [155, 0, 0, "-", "statistical"], [157, 0, 0, "-", "utility"], [159, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.array_methods": [[523, 2, 1, "", "abs"], [531, 2, 1, "", "acos"], [532, 2, 1, "", "acosh"], [836, 2, 1, "", "adam_step"], [669, 2, 1, "", "add"], [8, 2, 1, "", "add_ivy_array_instance_methods"], [1129, 2, 1, "", "all"], [761, 2, 1, "", "all_equal"], [1133, 2, 1, "", "any"], [1085, 2, 1, "", "argsort"], [541, 2, 1, "", "asin"], [545, 2, 1, "", "asinh"], [556, 2, 1, "", "atan"], [553, 2, 1, "", "atan2"], [557, 2, 1, "", "atanh"], [956, 2, 1, "", "binary_cross_entropy"], [561, 2, 1, "", "bitwise_and"], [565, 2, 1, "", "bitwise_invert"], [569, 2, 1, "", "bitwise_left_shift"], [573, 2, 1, "", "bitwise_or"], [577, 2, 1, "", "bitwise_right_shift"], [581, 2, 1, "", "bitwise_xor"], [444, 2, 1, "", "can_cast"], [585, 2, 1, "", "ceil"], [886, 2, 1, "", "cholesky"], [972, 2, 1, "", "clip"], [977, 2, 1, "", "concat"], [981, 2, 1, "", "constant_pad"], [589, 2, 1, "", "cos"], [593, 2, 1, "", "cosh"], [889, 2, 1, "", "cross"], [961, 2, 1, "", "cross_entropy"], [929, 2, 1, "", "det"], [895, 2, 1, "", "diagonal"], [621, 2, 1, "", "divide"], [898, 2, 1, "", "eigh"], [901, 2, 1, "", "eigvalsh"], [1096, 2, 1, "", "einsum"], [629, 2, 1, "", "equal"], [606, 2, 1, "", "erf"], [669, 2, 1, "", "exp"], [985, 2, 1, "", "expand_dims"], [614, 2, 1, "", "expm1"], [989, 2, 1, "", "flip"], [621, 2, 1, "", "floor"], [622, 2, 1, "", "floor_divide"], [789, 2, 1, "", "gather_nd"], [629, 2, 1, "", "greater"], [630, 2, 1, "", "greater_equal"], [923, 2, 1, "", "inv"], [634, 2, 1, "", "isfinite"], [638, 2, 1, "", "isinf"], [642, 2, 1, "", "isnan"], [1054, 2, 1, "", "layer_norm"], [646, 2, 1, "", "less"], [650, 2, 1, "", "less_equal"], [654, 2, 1, "", "log"], [658, 2, 1, "", "log10"], [662, 2, 1, "", "log1p"], [666, 2, 1, "", "log2"], [670, 2, 1, "", "logaddexp"], [674, 2, 1, "", "logical_and"], [678, 2, 1, "", "logical_not"], [682, 2, 1, "", "logical_or"], [686, 2, 1, "", "logical_xor"], [907, 2, 1, "", "matmul"], [911, 2, 1, "", "matrix_norm"], [915, 2, 1, "", "matrix_rank"], [918, 2, 1, "", "matrix_transpose"], [1100, 2, 1, "", "max"], [1104, 2, 1, "", "mean"], [1108, 2, 1, "", "min"], [692, 2, 1, "", "multiply"], [697, 2, 1, "", "negative"], [701, 2, 1, "", "not_equal"], [921, 2, 1, "", "outer"], [993, 2, 1, "", "permute_dims"], [924, 2, 1, "", "pinv"], [705, 2, 1, "", "positive"], [709, 2, 1, "", "pow"], [1112, 2, 1, "", "prod"], [927, 2, 1, "", "qr"], [713, 2, 1, "", "remainder"], [997, 2, 1, "", "repeat"], [1001, 2, 1, "", "reshape"], [1005, 2, 1, "", "roll"], [717, 2, 1, "", "round"], [721, 2, 1, "", "sign"], [725, 2, 1, "", "sin"], [729, 2, 1, "", "sinh"], [931, 2, 1, "", "solve"], [1090, 2, 1, "", "sort"], [966, 2, 1, "", "sparse_cross_entropy"], [733, 2, 1, "", "sqrt"], [737, 2, 1, "", "square"], [1011, 2, 1, "", "squeeze"], [1015, 2, 1, "", "stack"], [1116, 2, 1, "", "std"], [742, 2, 1, "", "subtract"], [1120, 2, 1, "", "sum"], [936, 2, 1, "", "svd"], [937, 2, 1, "", "svdvals"], [1019, 2, 1, "", "swapaxes"], [747, 2, 1, "", "tan"], [752, 2, 1, "", "tanh"], [940, 2, 1, "", "tensordot"], [1023, 2, 1, "", "tile"], [943, 2, 1, "", "trace"], [756, 2, 1, "", "trunc"], [1078, 2, 1, "", "unique_counts"], [1124, 2, 1, "", "var"], [946, 2, 1, "", "vecdot"], [949, 2, 1, "", "vector_norm"], [952, 2, 1, "", "vector_to_skew_symmetric_matrix"], [1027, 2, 1, "", "zero_pad"]], "ivy.array.conversions": [[119, 2, 1, "", "args_to_ivy"], [120, 2, 1, "", "args_to_native"], [121, 2, 1, "", "to_ivy"], [122, 2, 1, "", "to_native"]], "ivy.array.creation": [[124, 1, 1, "", "ArrayWithCreation"]], "ivy.array.data_type": [[126, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[126, 3, 1, "", "can_cast"]], "ivy.array.device": [[128, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[130, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[130, 3, 1, "", "abs"], [130, 3, 1, "", "acos"], [130, 3, 1, "", "acosh"], [130, 3, 1, "", "add"], [130, 3, 1, "", "asin"], [130, 3, 1, "", "asinh"], [130, 3, 1, "", "atan"], [130, 3, 1, "", "atan2"], [130, 3, 1, "", "atanh"], [130, 3, 1, "", "bitwise_and"], [130, 3, 1, "", "bitwise_invert"], [130, 3, 1, "", "bitwise_left_shift"], [130, 3, 1, "", "bitwise_or"], [130, 3, 1, "", "bitwise_right_shift"], [130, 3, 1, "", "bitwise_xor"], [130, 3, 1, "", "ceil"], [130, 3, 1, "", "cos"], [130, 3, 1, "", "cosh"], [130, 3, 1, "", "divide"], [130, 3, 1, "", "equal"], [130, 3, 1, "", "erf"], [130, 3, 1, "", "exp"], [130, 3, 1, "", "expm1"], [130, 3, 1, "", "floor"], [130, 3, 1, "", "floor_divide"], [130, 3, 1, "", "greater"], [130, 3, 1, "", "greater_equal"], [130, 3, 1, "", "isfinite"], [130, 3, 1, "", "isinf"], [130, 3, 1, "", "isnan"], [130, 3, 1, "", "less"], [130, 3, 1, "", "less_equal"], [130, 3, 1, "", "log"], [130, 3, 1, "", "log10"], [130, 3, 1, "", "log1p"], [130, 3, 1, "", "log2"], [130, 3, 1, "", "logaddexp"], [130, 3, 1, "", "logical_and"], [130, 3, 1, "", "logical_not"], [130, 3, 1, "", "logical_or"], [130, 3, 1, "", "logical_xor"], [130, 3, 1, "", "multiply"], [130, 3, 1, "", "negative"], [130, 3, 1, "", "not_equal"], [130, 3, 1, "", "positive"], [130, 3, 1, "", "pow"], [130, 3, 1, "", "remainder"], [130, 3, 1, "", "round"], [130, 3, 1, "", "sign"], [130, 3, 1, "", "sin"], [130, 3, 1, "", "sinh"], [130, 3, 1, "", "sqrt"], [130, 3, 1, "", "square"], [130, 3, 1, "", "subtract"], [130, 3, 1, "", "tan"], [130, 3, 1, "", "tanh"], [130, 3, 1, "", "trunc"]], "ivy.array.general": [[132, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[132, 3, 1, "", "all_equal"], [132, 3, 1, "", "gather_nd"]], "ivy.array.gradients": [[134, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[134, 3, 1, "", "adam_step"]], "ivy.array.image": [[136, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[138, 1, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[140, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[140, 3, 1, "", "cholesky"], [140, 3, 1, "", "cross"], [140, 3, 1, "", "det"], [140, 3, 1, "", "diagonal"], [140, 3, 1, "", "eigh"], [140, 3, 1, "", "eigvalsh"], [140, 3, 1, "", "inv"], [140, 3, 1, "", "matmul"], [140, 3, 1, "", "matrix_norm"], [140, 3, 1, "", "matrix_rank"], [140, 3, 1, "", "matrix_transpose"], [140, 3, 1, "", "outer"], [140, 3, 1, "", "pinv"], [140, 3, 1, "", "qr"], [140, 3, 1, "", "solve"], [140, 3, 1, "", "svd"], [140, 3, 1, "", "svdvals"], [140, 3, 1, "", "tensordot"], [140, 3, 1, "", "trace"], [140, 3, 1, "", "vecdot"], [140, 3, 1, "", "vector_norm"], [140, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[142, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[142, 3, 1, "", "binary_cross_entropy"], [142, 3, 1, "", "cross_entropy"], [142, 3, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[144, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[144, 3, 1, "", "clip"], [144, 3, 1, "", "concat"], [144, 3, 1, "", "constant_pad"], [144, 3, 1, "", "expand_dims"], [144, 3, 1, "", "flip"], [144, 3, 1, "", "permute_dims"], [144, 3, 1, "", "repeat"], [144, 3, 1, "", "reshape"], [144, 3, 1, "", "roll"], [144, 3, 1, "", "squeeze"], [144, 3, 1, "", "stack"], [144, 3, 1, "", "swapaxes"], [144, 3, 1, "", "tile"], [144, 3, 1, "", "zero_pad"]], "ivy.array.norms": [[146, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[146, 3, 1, "", "layer_norm"]], "ivy.array.random": [[148, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[150, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[152, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[152, 3, 1, "", "unique_counts"]], "ivy.array.sorting": [[154, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[154, 3, 1, "", "argsort"], [154, 3, 1, "", "sort"]], "ivy.array.statistical": [[156, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[156, 3, 1, "", "einsum"], [156, 3, 1, "", "max"], [156, 3, 1, "", "mean"], [156, 3, 1, "", "min"], [156, 3, 1, "", "prod"], [156, 3, 1, "", "std"], [156, 3, 1, "", "sum"], [156, 3, 1, "", "var"]], "ivy.array.utility": [[158, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[158, 3, 1, "", "all"], [158, 3, 1, "", "any"]], "ivy.array.wrapping": [[160, 2, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[161, 0, 0, "-", "backend_handler"], [394, 0, 0, "-", "func_wrapper"], [1139, 0, 0, "-", "inspection"], [1182, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[161, 1, 1, "", "ContextManager"], [163, 2, 1, "", "choose_random_backend"], [164, 2, 1, "", "clear_backend_stack"], [165, 2, 1, "", "current_backend"], [166, 2, 1, "", "get_backend"], [167, 2, 1, "", "set_backend"], [168, 2, 1, "", "try_import_ivy_jax"], [169, 2, 1, "", "try_import_ivy_mxnet"], [170, 2, 1, "", "try_import_ivy_numpy"], [171, 2, 1, "", "try_import_ivy_tf"], [172, 2, 1, "", "try_import_ivy_torch"], [173, 2, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[161, 3, 1, "", "__init__"]], "ivy.container": [[178, 0, 0, "-", "activations"], [180, 0, 0, "-", "base"], [182, 0, 0, "-", "container"], [185, 0, 0, "-", "container_methods"], [317, 0, 0, "-", "creation"], [319, 0, 0, "-", "data_type"], [321, 0, 0, "-", "device"], [323, 0, 0, "-", "elementwise"], [325, 0, 0, "-", "general"], [327, 0, 0, "-", "gradients"], [329, 0, 0, "-", "image"], [331, 0, 0, "-", "layers"], [333, 0, 0, "-", "linear_algebra"], [335, 0, 0, "-", "losses"], [337, 0, 0, "-", "manipulation"], [339, 0, 0, "-", "norms"], [341, 0, 0, "-", "random"], [343, 0, 0, "-", "searching"], [345, 0, 0, "-", "set"], [347, 0, 0, "-", "sorting"], [349, 0, 0, "-", "statistical"], [351, 0, 0, "-", "utility"], [353, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[179, 1, 1, "", "ContainerWithActivations"]], "ivy.container.base": [[181, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[181, 3, 1, "", "__getitem__"], [181, 3, 1, "", "__init__"], [181, 3, 1, "", "__setitem__"], [181, 3, 1, "", "all_false"], [181, 3, 1, "", "all_key_chains"], [181, 3, 1, "", "all_true"], [181, 3, 1, "", "arrays_as_lists"], [181, 3, 1, "", "as_arrays"], [181, 3, 1, "", "as_bools"], [181, 3, 1, "", "as_ones"], [181, 3, 1, "", "as_random_uniform"], [181, 3, 1, "", "as_variables"], [181, 3, 1, "", "as_zeros"], [181, 3, 1, "", "assert_contains_sub_container"], [181, 3, 1, "", "assert_contains_sub_structure"], [181, 3, 1, "", "assert_identical"], [181, 3, 1, "", "assert_identical_structure"], [181, 3, 1, "", "at_key_chain"], [181, 3, 1, "", "at_key_chains"], [181, 3, 1, "", "at_keys"], [181, 3, 1, "", "clip"], [181, 3, 1, "", "combine"], [181, 3, 1, "", "common_key_chains"], [181, 4, 1, "", "config"], [181, 3, 1, "", "contains_sub_container"], [181, 3, 1, "", "contains_sub_structure"], [181, 3, 1, "", "copy"], [181, 3, 1, "", "create_if_absent"], [181, 3, 1, "", "cutoff_at_depth"], [181, 3, 1, "", "cutoff_at_height"], [181, 3, 1, "", "deep_copy"], [181, 4, 1, "", "dev"], [181, 3, 1, "", "dev_clone"], [181, 3, 1, "", "dev_dist"], [181, 4, 1, "", "dev_str"], [181, 3, 1, "", "diff"], [181, 3, 1, "", "dtype"], [181, 3, 1, "", "einops_rearrange"], [181, 3, 1, "", "einops_reduce"], [181, 3, 1, "", "einops_repeat"], [181, 3, 1, "", "find_sub_container"], [181, 3, 1, "", "find_sub_structure"], [181, 3, 1, "", "flatten_key_chain"], [181, 3, 1, "", "flatten_key_chains"], [181, 3, 1, "", "format_key_chains"], [181, 3, 1, "", "from_disk_as_hdf5"], [181, 3, 1, "", "from_disk_as_json"], [181, 3, 1, "", "from_disk_as_pickled"], [181, 3, 1, "", "from_flat_list"], [181, 3, 1, "", "from_numpy"], [181, 3, 1, "", "gather"], [181, 3, 1, "", "gather_nd"], [181, 3, 1, "", "h5_file_size"], [181, 3, 1, "", "handle_inplace"], [181, 3, 1, "", "has_key"], [181, 3, 1, "", "has_key_chain"], [181, 3, 1, "", "has_nans"], [181, 3, 1, "", "identical"], [181, 3, 1, "", "identical_array_shapes"], [181, 3, 1, "", "identical_configs"], [181, 3, 1, "", "identical_structure"], [181, 3, 1, "", "if_exists"], [181, 3, 1, "", "inplace_update"], [181, 4, 1, "", "ivy"], [181, 3, 1, "", "key_chains_containing"], [181, 3, 1, "", "list_join"], [181, 3, 1, "", "list_stack"], [181, 3, 1, "", "map"], [181, 3, 1, "", "map_conts"], [181, 3, 1, "", "matrix_norm"], [181, 4, 1, "", "max_depth"], [181, 3, 1, "", "maximum"], [181, 3, 1, "", "minimum"], [181, 3, 1, "", "multi_map"], [181, 3, 1, "", "multi_map_in_static_method"], [181, 3, 1, "", "num_arrays"], [181, 3, 1, "", "overwrite_at_key_chain"], [181, 3, 1, "", "overwrite_at_key_chains"], [181, 3, 1, "", "prune_empty"], [181, 3, 1, "", "prune_key_chain"], [181, 3, 1, "", "prune_key_chains"], [181, 3, 1, "", "prune_key_from_key_chains"], [181, 3, 1, "", "prune_keys"], [181, 3, 1, "", "prune_keys_from_key_chains"], [181, 3, 1, "", "reduce"], [181, 3, 1, "", "remove_key_length_limit"], [181, 3, 1, "", "remove_print_limit"], [181, 3, 1, "", "reshape_like"], [181, 3, 1, "", "restructure"], [181, 3, 1, "", "restructure_key_chains"], [181, 3, 1, "", "set_at_key_chain"], [181, 3, 1, "", "set_at_key_chains"], [181, 3, 1, "", "set_at_keys"], [181, 3, 1, "", "set_framework"], [181, 3, 1, "", "set_ivy_backend"], [181, 4, 1, "", "shape"], [181, 4, 1, "", "shapes"], [181, 3, 1, "", "show"], [181, 3, 1, "", "show_sub_container"], [181, 3, 1, "", "shuffle"], [181, 3, 1, "", "shuffle_h5_file"], [181, 3, 1, "", "size_ordered_arrays"], [181, 3, 1, "", "slice_keys"], [181, 3, 1, "", "slice_via_key"], [181, 3, 1, "", "sort_by_key"], [181, 3, 1, "", "split"], [181, 3, 1, "", "stop_gradients"], [181, 3, 1, "", "structural_diff"], [181, 3, 1, "", "to_device"], [181, 3, 1, "", "to_dict"], [181, 3, 1, "", "to_disk_as_hdf5"], [181, 3, 1, "", "to_disk_as_json"], [181, 3, 1, "", "to_disk_as_pickled"], [181, 3, 1, "", "to_flat_list"], [181, 3, 1, "", "to_iterator"], [181, 3, 1, "", "to_iterator_keys"], [181, 3, 1, "", "to_iterator_values"], [181, 3, 1, "", "to_ivy"], [181, 3, 1, "", "to_jsonable"], [181, 3, 1, "", "to_list"], [181, 3, 1, "", "to_multi_dev"], [181, 3, 1, "", "to_native"], [181, 3, 1, "", "to_numpy"], [181, 3, 1, "", "to_raw"], [181, 3, 1, "", "trim_key"], [181, 3, 1, "", "try_kc"], [181, 3, 1, "", "unify"], [181, 3, 1, "", "unstack"], [181, 3, 1, "", "update_config"], [181, 3, 1, "", "vector_norm"], [181, 3, 1, "", "with_default_key_color"], [181, 3, 1, "", "with_entries_as_lists"], [181, 3, 1, "", "with_ivy_backend"], [181, 3, 1, "", "with_key_length_limit"], [181, 3, 1, "", "with_print_indent"], [181, 3, 1, "", "with_print_limit"], [181, 3, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[183, 1, 1, "", "Container"], [184, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[183, 3, 1, "", "__add__"], [183, 3, 1, "", "__init__"], [183, 3, 1, "", "__radd__"], [183, 3, 1, "", "arange"], [183, 3, 1, "", "arg_info"], [183, 3, 1, "", "arg_names"], [183, 3, 1, "", "argmax"], [183, 3, 1, "", "argmin"], [183, 3, 1, "", "array"], [183, 3, 1, "", "array_equal"], [183, 3, 1, "", "arrays_equal"], [183, 3, 1, "", "as_ivy_dev"], [183, 3, 1, "", "as_ivy_dtype"], [183, 3, 1, "", "as_native_dev"], [183, 3, 1, "", "as_native_dtype"], [183, 3, 1, "", "asarray"], [183, 3, 1, "", "assert_supports_inplace"], [183, 3, 1, "", "astype"], [183, 3, 1, "", "broadcast_arrays"], [183, 3, 1, "", "broadcast_to"], [183, 3, 1, "", "cache_fn"], [183, 3, 1, "", "cholesky"], [183, 3, 1, "", "clear_mem_on_dev"], [183, 3, 1, "", "clip_matrix_norm"], [183, 3, 1, "", "closest_valid_dtype"], [183, 3, 1, "", "container_types"], [183, 3, 1, "", "conv1d"], [183, 3, 1, "", "conv1d_transpose"], [183, 3, 1, "", "conv2d"], [183, 3, 1, "", "conv2d_transpose"], [183, 3, 1, "", "conv3d"], [183, 3, 1, "", "conv3d_transpose"], [183, 3, 1, "", "copy_array"], [183, 3, 1, "", "cross"], [183, 3, 1, "", "cumprod"], [183, 3, 1, "", "cumsum"], [183, 3, 1, "", "current_backend"], [183, 3, 1, "", "current_backend_str"], [183, 3, 1, "", "default"], [183, 3, 1, "", "default_device"], [183, 3, 1, "", "default_dtype"], [183, 3, 1, "", "default_float_dtype"], [183, 3, 1, "", "default_int_dtype"], [183, 3, 1, "", "depthwise_conv2d"], [183, 3, 1, "", "det"], [183, 3, 1, "", "dev_clone_array"], [183, 3, 1, "", "dev_clone_iter"], [183, 3, 1, "", "dev_clone_nest"], [183, 3, 1, "", "dev_dist_array"], [183, 3, 1, "", "dev_dist_iter"], [183, 3, 1, "", "dev_dist_nest"], [183, 3, 1, "", "dev_unify"], [183, 3, 1, "", "dev_unify_array"], [183, 3, 1, "", "dev_unify_iter"], [183, 3, 1, "", "dev_unify_nest"], [183, 3, 1, "", "dev_util"], [183, 3, 1, "", "diagonal"], [183, 3, 1, "", "dropout"], [183, 3, 1, "", "dtype_bits"], [183, 3, 1, "", "eigh"], [183, 3, 1, "", "eigvalsh"], [183, 3, 1, "", "empty"], [183, 3, 1, "", "empty_like"], [183, 3, 1, "", "execute_with_gradients"], [183, 3, 1, "", "exists"], [183, 3, 1, "", "eye"], [183, 3, 1, "", "finfo"], [183, 3, 1, "", "floormod"], [183, 3, 1, "", "fourier_encode"], [183, 3, 1, "", "from_dlpack"], [183, 3, 1, "", "full"], [183, 3, 1, "", "full_like"], [183, 3, 1, "", "function_supported_dtypes"], [183, 3, 1, "", "function_unsupported_dtypes"], [183, 3, 1, "", "gelu"], [183, 3, 1, "", "get_all_arrays_in_memory"], [183, 3, 1, "", "get_all_ivy_arrays_on_dev"], [183, 3, 1, "", "get_min_base"], [183, 3, 1, "", "get_min_denominator"], [183, 3, 1, "", "get_num_dims"], [183, 3, 1, "", "get_referrers_recursive"], [183, 3, 1, "", "gpu_is_available"], [183, 3, 1, "", "handle_nestable"], [183, 3, 1, "", "handle_out_argument"], [183, 3, 1, "", "iinfo"], [183, 3, 1, "", "indices_where"], [183, 3, 1, "", "infer_device"], [183, 3, 1, "", "infer_dtype"], [183, 3, 1, "", "inplace_arrays_supported"], [183, 3, 1, "", "inplace_decrement"], [183, 3, 1, "", "inplace_increment"], [183, 3, 1, "", "inplace_variables_supported"], [183, 3, 1, "", "inputs_to_native_arrays"], [183, 3, 1, "", "inv"], [183, 3, 1, "", "invalid_dtype"], [183, 3, 1, "", "is_float_dtype"], [183, 3, 1, "", "is_int_dtype"], [183, 3, 1, "", "is_ivy_container"], [183, 3, 1, "", "leaky_relu"], [183, 3, 1, "", "linear"], [183, 3, 1, "", "linspace"], [183, 3, 1, "", "logspace"], [183, 3, 1, "", "lstm_update"], [183, 3, 1, "", "match_kwargs"], [183, 3, 1, "", "matrix_power"], [183, 3, 1, "", "matrix_rank"], [183, 3, 1, "", "matrix_transpose"], [183, 3, 1, "", "meshgrid"], [183, 3, 1, "", "multi_head_attention"], [183, 3, 1, "", "multinomial"], [183, 3, 1, "", "multiprocessing"], [183, 3, 1, "", "native_array"], [183, 3, 1, "", "nonzero"], [183, 3, 1, "", "num_arrays_in_memory"], [183, 3, 1, "", "num_cpu_cores"], [183, 3, 1, "", "num_gpus"], [183, 3, 1, "", "num_ivy_arrays_on_dev"], [183, 3, 1, "", "one_hot"], [183, 3, 1, "", "ones"], [183, 3, 1, "", "ones_like"], [183, 3, 1, "", "outer"], [183, 3, 1, "", "outputs_to_ivy_arrays"], [183, 3, 1, "", "percent_used_mem_on_dev"], [183, 3, 1, "", "pinv"], [183, 3, 1, "", "print_all_arrays_in_memory"], [183, 3, 1, "", "print_all_ivy_arrays_on_dev"], [183, 3, 1, "", "promote_types"], [183, 3, 1, "", "qr"], [183, 3, 1, "", "queue_timeout"], [183, 3, 1, "", "randint"], [183, 3, 1, "", "random_normal"], [183, 3, 1, "", "relu"], [183, 3, 1, "", "result_type"], [183, 3, 1, "", "scaled_dot_product_attention"], [183, 3, 1, "", "scatter_flat"], [183, 3, 1, "", "scatter_nd"], [183, 3, 1, "", "seed"], [183, 3, 1, "", "set_default_device"], [183, 3, 1, "", "set_default_dtype"], [183, 3, 1, "", "set_default_float_dtype"], [183, 3, 1, "", "set_default_int_dtype"], [183, 3, 1, "", "set_min_base"], [183, 3, 1, "", "set_min_denominator"], [183, 3, 1, "", "set_queue_timeout"], [183, 3, 1, "", "set_split_factor"], [183, 3, 1, "", "set_tmp_dir"], [183, 3, 1, "", "set_with_grads"], [183, 3, 1, "", "shape_to_tuple"], [183, 3, 1, "", "sigmoid"], [183, 3, 1, "", "slogdet"], [183, 3, 1, "", "softmax"], [183, 3, 1, "", "softplus"], [183, 3, 1, "", "solve"], [183, 3, 1, "", "split_factor"], [183, 3, 1, "", "split_func_call"], [183, 3, 1, "", "stable_divide"], [183, 3, 1, "", "stable_pow"], [183, 3, 1, "", "static_acos"], [183, 3, 1, "", "static_acosh"], [183, 3, 1, "", "static_all"], [183, 3, 1, "", "static_any"], [183, 3, 1, "", "static_arange"], [183, 3, 1, "", "static_arg_info"], [183, 3, 1, "", "static_arg_names"], [183, 3, 1, "", "static_argmax"], [183, 3, 1, "", "static_argmin"], [183, 3, 1, "", "static_array"], [183, 3, 1, "", "static_array_equal"], [183, 3, 1, "", "static_arrays_equal"], [183, 3, 1, "", "static_as_ivy_dev"], [183, 3, 1, "", "static_as_ivy_dtype"], [183, 3, 1, "", "static_as_native_dev"], [183, 3, 1, "", "static_as_native_dtype"], [183, 3, 1, "", "static_asarray"], [183, 3, 1, "", "static_asin"], [183, 3, 1, "", "static_asinh"], [183, 3, 1, "", "static_assert_supports_inplace"], [183, 3, 1, "", "static_astype"], [183, 3, 1, "", "static_atan"], [183, 3, 1, "", "static_atan2"], [183, 3, 1, "", "static_atanh"], [183, 3, 1, "", "static_bitwise_and"], [183, 3, 1, "", "static_bitwise_invert"], [183, 3, 1, "", "static_bitwise_left_shift"], [183, 3, 1, "", "static_bitwise_or"], [183, 3, 1, "", "static_bitwise_right_shift"], [183, 3, 1, "", "static_bitwise_xor"], [183, 3, 1, "", "static_broadcast_arrays"], [183, 3, 1, "", "static_broadcast_to"], [183, 3, 1, "", "static_cache_fn"], [183, 3, 1, "", "static_ceil"], [183, 3, 1, "", "static_cholesky"], [183, 3, 1, "", "static_clear_mem_on_dev"], [183, 3, 1, "", "static_clip_matrix_norm"], [183, 3, 1, "", "static_clip_vector_norm"], [183, 3, 1, "", "static_closest_valid_dtype"], [183, 3, 1, "", "static_concat"], [183, 3, 1, "", "static_constant_pad"], [183, 3, 1, "", "static_container_types"], [183, 3, 1, "", "static_conv1d"], [183, 3, 1, "", "static_conv1d_transpose"], [183, 3, 1, "", "static_conv2d"], [183, 3, 1, "", "static_conv2d_transpose"], [183, 3, 1, "", "static_conv3d"], [183, 3, 1, "", "static_conv3d_transpose"], [183, 3, 1, "", "static_copy_array"], [183, 3, 1, "", "static_cos"], [183, 3, 1, "", "static_cosh"], [183, 3, 1, "", "static_cross"], [183, 3, 1, "", "static_cumprod"], [183, 3, 1, "", "static_cumsum"], [183, 3, 1, "", "static_current_backend"], [183, 3, 1, "", "static_current_backend_str"], [183, 3, 1, "", "static_default"], [183, 3, 1, "", "static_default_device"], [183, 3, 1, "", "static_default_dtype"], [183, 3, 1, "", "static_default_float_dtype"], [183, 3, 1, "", "static_default_int_dtype"], [183, 3, 1, "", "static_depthwise_conv2d"], [183, 3, 1, "", "static_det"], [183, 3, 1, "", "static_dev"], [183, 3, 1, "", "static_dev_clone"], [183, 3, 1, "", "static_dev_clone_array"], [183, 3, 1, "", "static_dev_clone_iter"], [183, 3, 1, "", "static_dev_clone_nest"], [183, 3, 1, "", "static_dev_dist"], [183, 3, 1, "", "static_dev_dist_array"], [183, 3, 1, "", "static_dev_dist_iter"], [183, 3, 1, "", "static_dev_dist_nest"], [183, 3, 1, "", "static_dev_unify"], [183, 3, 1, "", "static_dev_unify_array"], [183, 3, 1, "", "static_dev_unify_iter"], [183, 3, 1, "", "static_dev_unify_nest"], [183, 3, 1, "", "static_dev_util"], [183, 3, 1, "", "static_diagonal"], [183, 3, 1, "", "static_dropout"], [183, 3, 1, "", "static_dtype"], [183, 3, 1, "", "static_dtype_bits"], [183, 3, 1, "", "static_eigh"], [183, 3, 1, "", "static_eigvalsh"], [183, 3, 1, "", "static_einops_rearrange"], [183, 3, 1, "", "static_einops_reduce"], [183, 3, 1, "", "static_einops_repeat"], [183, 3, 1, "", "static_einsum"], [183, 3, 1, "", "static_empty"], [183, 3, 1, "", "static_empty_like"], [183, 3, 1, "", "static_equal"], [183, 3, 1, "", "static_erf"], [183, 3, 1, "", "static_execute_with_gradients"], [183, 3, 1, "", "static_exists"], [183, 3, 1, "", "static_exp"], [183, 3, 1, "", "static_expand_dims"], [183, 3, 1, "", "static_expm1"], [183, 3, 1, "", "static_eye"], [183, 3, 1, "", "static_finfo"], [183, 3, 1, "", "static_flip"], [183, 3, 1, "", "static_floor"], [183, 3, 1, "", "static_floor_divide"], [183, 3, 1, "", "static_floormod"], [183, 3, 1, "", "static_fourier_encode"], [183, 3, 1, "", "static_from_dlpack"], [183, 3, 1, "", "static_full"], [183, 3, 1, "", "static_full_like"], [183, 3, 1, "", "static_function_supported_dtypes"], [183, 3, 1, "", "static_function_unsupported_dtypes"], [183, 3, 1, "", "static_gather"], [183, 3, 1, "", "static_gelu"], [183, 3, 1, "", "static_get_all_arrays_in_memory"], [183, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [183, 3, 1, "", "static_get_min_base"], [183, 3, 1, "", "static_get_min_denominator"], [183, 3, 1, "", "static_get_num_dims"], [183, 3, 1, "", "static_get_referrers_recursive"], [183, 3, 1, "", "static_gpu_is_available"], [183, 3, 1, "", "static_greater"], [183, 3, 1, "", "static_greater_equal"], [183, 3, 1, "", "static_handle_nestable"], [183, 3, 1, "", "static_handle_out_argument"], [183, 3, 1, "", "static_has_nans"], [183, 3, 1, "", "static_iinfo"], [183, 3, 1, "", "static_indices_where"], [183, 3, 1, "", "static_infer_device"], [183, 3, 1, "", "static_infer_dtype"], [183, 3, 1, "", "static_inplace_arrays_supported"], [183, 3, 1, "", "static_inplace_decrement"], [183, 3, 1, "", "static_inplace_increment"], [183, 3, 1, "", "static_inplace_update"], [183, 3, 1, "", "static_inplace_variables_supported"], [183, 3, 1, "", "static_inputs_to_native_arrays"], [183, 3, 1, "", "static_inv"], [183, 3, 1, "", "static_invalid_dtype"], [183, 3, 1, "", "static_is_array"], [183, 3, 1, "", "static_is_float_dtype"], [183, 3, 1, "", "static_is_int_dtype"], [183, 3, 1, "", "static_is_ivy_array"], [183, 3, 1, "", "static_is_ivy_container"], [183, 3, 1, "", "static_is_native_array"], [183, 3, 1, "", "static_isfinite"], [183, 3, 1, "", "static_isinf"], [183, 3, 1, "", "static_isnan"], [183, 3, 1, "", "static_layer_norm"], [183, 3, 1, "", "static_leaky_relu"], [183, 3, 1, "", "static_less"], [183, 3, 1, "", "static_less_equal"], [183, 3, 1, "", "static_linear"], [183, 3, 1, "", "static_linspace"], [183, 3, 1, "", "static_log"], [183, 3, 1, "", "static_log10"], [183, 3, 1, "", "static_log1p"], [183, 3, 1, "", "static_log2"], [183, 3, 1, "", "static_logaddexp"], [183, 3, 1, "", "static_logical_and"], [183, 3, 1, "", "static_logical_not"], [183, 3, 1, "", "static_logical_or"], [183, 3, 1, "", "static_logical_xor"], [183, 3, 1, "", "static_logspace"], [183, 3, 1, "", "static_lstm_update"], [183, 3, 1, "", "static_match_kwargs"], [183, 3, 1, "", "static_matmul"], [183, 3, 1, "", "static_matrix_norm"], [183, 3, 1, "", "static_matrix_power"], [183, 3, 1, "", "static_matrix_rank"], [183, 3, 1, "", "static_matrix_transpose"], [183, 3, 1, "", "static_max"], [183, 3, 1, "", "static_maximum"], [183, 3, 1, "", "static_mean"], [183, 3, 1, "", "static_meshgrid"], [183, 3, 1, "", "static_min"], [183, 3, 1, "", "static_minimum"], [183, 3, 1, "", "static_multi_head_attention"], [183, 3, 1, "", "static_multinomial"], [183, 3, 1, "", "static_multiprocessing"], [183, 3, 1, "", "static_native_array"], [183, 3, 1, "", "static_negative"], [183, 3, 1, "", "static_nonzero"], [183, 3, 1, "", "static_not_equal"], [183, 3, 1, "", "static_num_arrays_in_memory"], [183, 3, 1, "", "static_num_cpu_cores"], [183, 3, 1, "", "static_num_gpus"], [183, 3, 1, "", "static_num_ivy_arrays_on_dev"], [183, 3, 1, "", "static_one_hot"], [183, 3, 1, "", "static_ones"], [183, 3, 1, "", "static_ones_like"], [183, 3, 1, "", "static_outer"], [183, 3, 1, "", "static_outputs_to_ivy_arrays"], [183, 3, 1, "", "static_percent_used_mem_on_dev"], [183, 3, 1, "", "static_permute_dims"], [183, 3, 1, "", "static_pinv"], [183, 3, 1, "", "static_positive"], [183, 3, 1, "", "static_pow"], [183, 3, 1, "", "static_print_all_arrays_in_memory"], [183, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [183, 3, 1, "", "static_prod"], [183, 3, 1, "", "static_promote_types"], [183, 3, 1, "", "static_qr"], [183, 3, 1, "", "static_queue_timeout"], [183, 3, 1, "", "static_random_normal"], [183, 3, 1, "", "static_relu"], [183, 3, 1, "", "static_remainder"], [183, 3, 1, "", "static_repeat"], [183, 3, 1, "", "static_reshape"], [183, 3, 1, "", "static_result_type"], [183, 3, 1, "", "static_round"], [183, 3, 1, "", "static_scaled_dot_product_attention"], [183, 3, 1, "", "static_scatter_flat"], [183, 3, 1, "", "static_scatter_nd"], [183, 3, 1, "", "static_seed"], [183, 3, 1, "", "static_set_default_device"], [183, 3, 1, "", "static_set_default_dtype"], [183, 3, 1, "", "static_set_default_float_dtype"], [183, 3, 1, "", "static_set_default_int_dtype"], [183, 3, 1, "", "static_set_min_base"], [183, 3, 1, "", "static_set_min_denominator"], [183, 3, 1, "", "static_set_queue_timeout"], [183, 3, 1, "", "static_set_split_factor"], [183, 3, 1, "", "static_set_tmp_dir"], [183, 3, 1, "", "static_set_with_grads"], [183, 3, 1, "", "static_shape"], [183, 3, 1, "", "static_shape_to_tuple"], [183, 3, 1, "", "static_shuffle"], [183, 3, 1, "", "static_sigmoid"], [183, 3, 1, "", "static_sign"], [183, 3, 1, "", "static_sin"], [183, 3, 1, "", "static_sinh"], [183, 3, 1, "", "static_slogdet"], [183, 3, 1, "", "static_softmax"], [183, 3, 1, "", "static_softplus"], [183, 3, 1, "", "static_solve"], [183, 3, 1, "", "static_split"], [183, 3, 1, "", "static_split_factor"], [183, 3, 1, "", "static_split_func_call"], [183, 3, 1, "", "static_sqrt"], [183, 3, 1, "", "static_square"], [183, 3, 1, "", "static_squeeze"], [183, 3, 1, "", "static_stable_divide"], [183, 3, 1, "", "static_stable_pow"], [183, 3, 1, "", "static_stack"], [183, 3, 1, "", "static_std"], [183, 3, 1, "", "static_stop_gradient"], [183, 3, 1, "", "static_sum"], [183, 3, 1, "", "static_supports_inplace"], [183, 3, 1, "", "static_svd"], [183, 3, 1, "", "static_svdvals"], [183, 3, 1, "", "static_swapaxes"], [183, 3, 1, "", "static_tensordot"], [183, 3, 1, "", "static_tile"], [183, 3, 1, "", "static_tmp_dir"], [183, 3, 1, "", "static_to_device"], [183, 3, 1, "", "static_to_list"], [183, 3, 1, "", "static_to_native_arrays_and_back"], [183, 3, 1, "", "static_to_numpy"], [183, 3, 1, "", "static_to_scalar"], [183, 3, 1, "", "static_total_mem_on_dev"], [183, 3, 1, "", "static_tpu_is_available"], [183, 3, 1, "", "static_trace"], [183, 3, 1, "", "static_tril"], [183, 3, 1, "", "static_triu"], [183, 3, 1, "", "static_trunc"], [183, 3, 1, "", "static_try_else_none"], [183, 3, 1, "", "static_type_promote_arrays"], [183, 3, 1, "", "static_unique_all"], [183, 3, 1, "", "static_unique_inverse"], [183, 3, 1, "", "static_unique_values"], [183, 3, 1, "", "static_unset_default_device"], [183, 3, 1, "", "static_unset_default_dtype"], [183, 3, 1, "", "static_unset_default_float_dtype"], [183, 3, 1, "", "static_unset_default_int_dtype"], [183, 3, 1, "", "static_unset_with_grads"], [183, 3, 1, "", "static_unstack"], [183, 3, 1, "", "static_used_mem_on_dev"], [183, 3, 1, "", "static_valid_dtype"], [183, 3, 1, "", "static_value_is_nan"], [183, 3, 1, "", "static_var"], [183, 3, 1, "", "static_variable"], [183, 3, 1, "", "static_variable_data"], [183, 3, 1, "", "static_vecdot"], [183, 3, 1, "", "static_vector_norm"], [183, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [183, 3, 1, "", "static_where"], [183, 3, 1, "", "static_with_grads"], [183, 3, 1, "", "static_zero_pad"], [183, 3, 1, "", "static_zeros"], [183, 3, 1, "", "static_zeros_like"], [183, 3, 1, "", "stop_gradient"], [183, 3, 1, "", "supports_inplace"], [183, 3, 1, "", "svd"], [183, 3, 1, "", "svdvals"], [183, 3, 1, "", "tensordot"], [183, 3, 1, "", "tmp_dir"], [183, 3, 1, "", "to_native_arrays_and_back"], [183, 3, 1, "", "to_scalar"], [183, 3, 1, "", "total_mem_on_dev"], [183, 3, 1, "", "tpu_is_available"], [183, 3, 1, "", "trace"], [183, 3, 1, "", "tril"], [183, 3, 1, "", "triu"], [183, 3, 1, "", "try_else_none"], [183, 3, 1, "", "type_promote_arrays"], [183, 3, 1, "", "unique_all"], [183, 3, 1, "", "unique_inverse"], [183, 3, 1, "", "unique_values"], [183, 3, 1, "", "unset_default_device"], [183, 3, 1, "", "unset_default_dtype"], [183, 3, 1, "", "unset_default_float_dtype"], [183, 3, 1, "", "unset_default_int_dtype"], [183, 3, 1, "", "unset_with_grads"], [183, 3, 1, "", "used_mem_on_dev"], [183, 3, 1, "", "valid_dtype"], [183, 3, 1, "", "value_is_nan"], [183, 3, 1, "", "variable"], [183, 3, 1, "", "variable_data"], [183, 3, 1, "", "vecdot"], [183, 3, 1, "", "vector_to_skew_symmetric_matrix"], [183, 3, 1, "", "where"], [183, 3, 1, "", "with_grads"], [183, 3, 1, "", "zeros"], [183, 3, 1, "", "zeros_like"]], "ivy.container.container.MultiDevContainer": [[184, 3, 1, "", "__init__"], [184, 3, 1, "", "at_dev"], [184, 3, 1, "", "at_devs"]], "ivy.container.container_methods": [[185, 2, 1, "", "__add__"], [185, 2, 1, "", "__init__"], [185, 2, 1, "", "__radd__"], [524, 2, 1, "", "abs"], [531, 2, 1, "", "acos"], [595, 2, 1, "", "acosh"], [837, 2, 1, "", "adam_step"], [841, 2, 1, "", "adam_update"], [669, 2, 1, "", "add"], [192, 2, 1, "", "add_ivy_container_instance_methods"], [1130, 2, 1, "", "all"], [762, 2, 1, "", "all_equal"], [1134, 2, 1, "", "any"], [1086, 2, 1, "", "argsort"], [542, 2, 1, "", "asin"], [546, 2, 1, "", "asinh"], [199, 2, 1, "", "at_dev"], [200, 2, 1, "", "at_devs"], [556, 2, 1, "", "atan"], [554, 2, 1, "", "atan2"], [754, 2, 1, "", "atanh"], [957, 2, 1, "", "binary_cross_entropy"], [562, 2, 1, "", "bitwise_and"], [566, 2, 1, "", "bitwise_invert"], [570, 2, 1, "", "bitwise_left_shift"], [574, 2, 1, "", "bitwise_or"], [578, 2, 1, "", "bitwise_right_shift"], [582, 2, 1, "", "bitwise_xor"], [445, 2, 1, "", "can_cast"], [586, 2, 1, "", "ceil"], [973, 2, 1, "", "clip"], [773, 2, 1, "", "clip_vector_norm"], [978, 2, 1, "", "concat"], [982, 2, 1, "", "constant_pad"], [595, 2, 1, "", "cos"], [594, 2, 1, "", "cosh"], [962, 2, 1, "", "cross_entropy"], [621, 2, 1, "", "divide"], [1122, 2, 1, "", "einsum"], [629, 2, 1, "", "equal"], [607, 2, 1, "", "erf"], [669, 2, 1, "", "exp"], [986, 2, 1, "", "expand_dims"], [615, 2, 1, "", "expm1"], [990, 2, 1, "", "flip"], [621, 2, 1, "", "floor"], [623, 2, 1, "", "floor_divide"], [790, 2, 1, "", "gather_nd"], [846, 2, 1, "", "gradient_descent_update"], [629, 2, 1, "", "greater"], [631, 2, 1, "", "greater_equal"], [850, 2, 1, "", "is_variable"], [635, 2, 1, "", "isfinite"], [639, 2, 1, "", "isinf"], [643, 2, 1, "", "isnan"], [854, 2, 1, "", "lamb_update"], [858, 2, 1, "", "lars_update"], [1055, 2, 1, "", "layer_norm"], [647, 2, 1, "", "less"], [651, 2, 1, "", "less_equal"], [655, 2, 1, "", "log"], [659, 2, 1, "", "log10"], [663, 2, 1, "", "log1p"], [667, 2, 1, "", "log2"], [671, 2, 1, "", "logaddexp"], [675, 2, 1, "", "logical_and"], [679, 2, 1, "", "logical_not"], [683, 2, 1, "", "logical_or"], [687, 2, 1, "", "logical_xor"], [908, 2, 1, "", "matmul"], [1101, 2, 1, "", "max"], [1105, 2, 1, "", "mean"], [1109, 2, 1, "", "min"], [693, 2, 1, "", "multiply"], [698, 2, 1, "", "negative"], [702, 2, 1, "", "not_equal"], [862, 2, 1, "", "optimizer_update"], [994, 2, 1, "", "permute_dims"], [706, 2, 1, "", "positive"], [710, 2, 1, "", "pow"], [1113, 2, 1, "", "prod"], [1064, 2, 1, "", "random_uniform"], [714, 2, 1, "", "remainder"], [998, 2, 1, "", "repeat"], [1002, 2, 1, "", "reshape"], [1006, 2, 1, "", "roll"], [718, 2, 1, "", "round"], [722, 2, 1, "", "sign"], [726, 2, 1, "", "sin"], [730, 2, 1, "", "sinh"], [1091, 2, 1, "", "sort"], [967, 2, 1, "", "sparse_cross_entropy"], [734, 2, 1, "", "sqrt"], [738, 2, 1, "", "square"], [1012, 2, 1, "", "squeeze"], [1016, 2, 1, "", "stack"], [526, 2, 1, "", "static_abs"], [839, 2, 1, "", "static_adam_step"], [843, 2, 1, "", "static_adam_update"], [669, 2, 1, "", "static_add"], [764, 2, 1, "", "static_all_equal"], [1088, 2, 1, "", "static_argsort"], [959, 2, 1, "", "static_binary_cross_entropy"], [447, 2, 1, "", "static_can_cast"], [975, 2, 1, "", "static_clip"], [964, 2, 1, "", "static_cross_entropy"], [621, 2, 1, "", "static_divide"], [792, 2, 1, "", "static_gather_nd"], [848, 2, 1, "", "static_gradient_descent_update"], [852, 2, 1, "", "static_is_variable"], [856, 2, 1, "", "static_lamb_update"], [860, 2, 1, "", "static_lars_update"], [695, 2, 1, "", "static_multiply"], [864, 2, 1, "", "static_optimizer_update"], [1061, 2, 1, "", "static_randint"], [1066, 2, 1, "", "static_random_uniform"], [1008, 2, 1, "", "static_roll"], [1093, 2, 1, "", "static_sort"], [969, 2, 1, "", "static_sparse_cross_entropy"], [741, 2, 1, "", "static_subtract"], [754, 2, 1, "", "static_tan"], [751, 2, 1, "", "static_tanh"], [1077, 2, 1, "", "static_unique_counts"], [1117, 2, 1, "", "std"], [743, 2, 1, "", "subtract"], [1121, 2, 1, "", "sum"], [1020, 2, 1, "", "swapaxes"], [754, 2, 1, "", "tan"], [753, 2, 1, "", "tanh"], [1024, 2, 1, "", "tile"], [757, 2, 1, "", "trunc"], [1079, 2, 1, "", "unique_counts"], [1125, 2, 1, "", "var"], [1028, 2, 1, "", "zero_pad"]], "ivy.container.creation": [[318, 1, 1, "", "ContainerWithCreation"]], "ivy.container.data_type": [[320, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[320, 3, 1, "", "can_cast"], [320, 3, 1, "", "static_can_cast"]], "ivy.container.device": [[322, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[324, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[324, 3, 1, "", "abs"], [324, 3, 1, "", "acos"], [324, 3, 1, "", "acosh"], [324, 3, 1, "", "add"], [324, 3, 1, "", "asin"], [324, 3, 1, "", "asinh"], [324, 3, 1, "", "atan"], [324, 3, 1, "", "atan2"], [324, 3, 1, "", "atanh"], [324, 3, 1, "", "bitwise_and"], [324, 3, 1, "", "bitwise_invert"], [324, 3, 1, "", "bitwise_left_shift"], [324, 3, 1, "", "bitwise_or"], [324, 3, 1, "", "bitwise_right_shift"], [324, 3, 1, "", "bitwise_xor"], [324, 3, 1, "", "ceil"], [324, 3, 1, "", "cos"], [324, 3, 1, "", "cosh"], [324, 3, 1, "", "divide"], [324, 3, 1, "", "equal"], [324, 3, 1, "", "erf"], [324, 3, 1, "", "exp"], [324, 3, 1, "", "expm1"], [324, 3, 1, "", "floor"], [324, 3, 1, "", "floor_divide"], [324, 3, 1, "", "greater"], [324, 3, 1, "", "greater_equal"], [324, 3, 1, "", "isfinite"], [324, 3, 1, "", "isinf"], [324, 3, 1, "", "isnan"], [324, 3, 1, "", "less"], [324, 3, 1, "", "less_equal"], [324, 3, 1, "", "log"], [324, 3, 1, "", "log10"], [324, 3, 1, "", "log1p"], [324, 3, 1, "", "log2"], [324, 3, 1, "", "logaddexp"], [324, 3, 1, "", "logical_and"], [324, 3, 1, "", "logical_not"], [324, 3, 1, "", "logical_or"], [324, 3, 1, "", "logical_xor"], [324, 3, 1, "", "multiply"], [324, 3, 1, "", "negative"], [324, 3, 1, "", "not_equal"], [324, 3, 1, "", "positive"], [324, 3, 1, "", "pow"], [324, 3, 1, "", "remainder"], [324, 3, 1, "", "round"], [324, 3, 1, "", "sign"], [324, 3, 1, "", "sin"], [324, 3, 1, "", "sinh"], [324, 3, 1, "", "sqrt"], [324, 3, 1, "", "square"], [324, 3, 1, "", "static_abs"], [324, 3, 1, "", "static_add"], [324, 3, 1, "", "static_divide"], [324, 3, 1, "", "static_multiply"], [324, 3, 1, "", "static_subtract"], [324, 3, 1, "", "static_tan"], [324, 3, 1, "", "static_tanh"], [324, 3, 1, "", "subtract"], [324, 3, 1, "", "tan"], [324, 3, 1, "", "tanh"], [324, 3, 1, "", "trunc"]], "ivy.container.general": [[326, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[326, 3, 1, "", "all_equal"], [326, 3, 1, "", "clip_vector_norm"], [326, 3, 1, "", "gather_nd"], [326, 3, 1, "", "static_all_equal"], [326, 3, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[328, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[328, 3, 1, "", "adam_step"], [328, 3, 1, "", "adam_update"], [328, 3, 1, "", "gradient_descent_update"], [328, 3, 1, "", "is_variable"], [328, 3, 1, "", "lamb_update"], [328, 3, 1, "", "lars_update"], [328, 3, 1, "", "optimizer_update"], [328, 3, 1, "", "static_adam_step"], [328, 3, 1, "", "static_adam_update"], [328, 3, 1, "", "static_gradient_descent_update"], [328, 3, 1, "", "static_is_variable"], [328, 3, 1, "", "static_lamb_update"], [328, 3, 1, "", "static_lars_update"], [328, 3, 1, "", "static_optimizer_update"]], "ivy.container.image": [[330, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[332, 1, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[334, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[334, 3, 1, "", "matmul"]], "ivy.container.losses": [[336, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[336, 3, 1, "", "binary_cross_entropy"], [336, 3, 1, "", "cross_entropy"], [336, 3, 1, "", "sparse_cross_entropy"], [336, 3, 1, "", "static_binary_cross_entropy"], [336, 3, 1, "", "static_cross_entropy"], [336, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[338, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[338, 3, 1, "", "clip"], [338, 3, 1, "", "concat"], [338, 3, 1, "", "constant_pad"], [338, 3, 1, "", "expand_dims"], [338, 3, 1, "", "flip"], [338, 3, 1, "", "permute_dims"], [338, 3, 1, "", "repeat"], [338, 3, 1, "", "reshape"], [338, 3, 1, "", "roll"], [338, 3, 1, "", "squeeze"], [338, 3, 1, "", "stack"], [338, 3, 1, "", "static_clip"], [338, 3, 1, "", "static_roll"], [338, 3, 1, "", "swapaxes"], [338, 3, 1, "", "tile"], [338, 3, 1, "", "zero_pad"]], "ivy.container.norms": [[340, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[340, 3, 1, "", "layer_norm"]], "ivy.container.random": [[342, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[342, 3, 1, "", "random_uniform"], [342, 3, 1, "", "static_randint"], [342, 3, 1, "", "static_random_uniform"]], "ivy.container.searching": [[344, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[346, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[346, 3, 1, "", "static_unique_counts"], [346, 3, 1, "", "unique_counts"]], "ivy.container.sorting": [[348, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[348, 3, 1, "", "argsort"], [348, 3, 1, "", "sort"], [348, 3, 1, "", "static_argsort"], [348, 3, 1, "", "static_sort"]], "ivy.container.statistical": [[350, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[350, 3, 1, "", "einsum"], [350, 3, 1, "", "max"], [350, 3, 1, "", "mean"], [350, 3, 1, "", "min"], [350, 3, 1, "", "prod"], [350, 3, 1, "", "std"], [350, 3, 1, "", "sum"], [350, 3, 1, "", "var"]], "ivy.container.utility": [[352, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[352, 3, 1, "", "all"], [352, 3, 1, "", "any"]], "ivy.container.wrapping": [[354, 2, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[395, 2, 1, "", "handle_nestable"], [396, 2, 1, "", "handle_out_argument"], [397, 2, 1, "", "infer_device"], [398, 2, 1, "", "infer_dtype"], [399, 2, 1, "", "inputs_to_ivy_arrays"], [400, 2, 1, "", "inputs_to_native_arrays"], [401, 2, 1, "", "outputs_to_ivy_arrays"], [402, 2, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[404, 0, 0, "-", "activations"], [412, 0, 0, "-", "compilation"], [414, 0, 0, "-", "constants"], [415, 0, 0, "-", "creation"], [434, 0, 0, "-", "data_type"], [471, 0, 0, "-", "device"], [521, 0, 0, "-", "elementwise"], [759, 0, 0, "-", "general"], [833, 0, 0, "-", "gradients"], [871, 0, 0, "-", "layers"], [884, 0, 0, "-", "linear_algebra"], [954, 0, 0, "-", "losses"], [970, 0, 0, "-", "manipulation"], [1030, 0, 0, "-", "meta"], [1034, 0, 0, "-", "nest"], [1052, 0, 0, "-", "norms"], [1057, 0, 0, "-", "random"], [1069, 0, 0, "-", "searching"], [1074, 0, 0, "-", "set"], [1083, 0, 0, "-", "sorting"], [1094, 0, 0, "-", "statistical"], [1127, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[405, 2, 1, "", "gelu"], [406, 2, 1, "", "leaky_relu"], [407, 2, 1, "", "relu"], [408, 2, 1, "", "sigmoid"], [409, 2, 1, "", "softmax"], [410, 2, 1, "", "softplus"], [411, 2, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[413, 2, 1, "", "compile"]], "ivy.functional.ivy.constants": [[414, 5, 1, "", "e"], [414, 5, 1, "", "inf"], [414, 5, 1, "", "nan"], [414, 5, 1, "", "newaxis"], [414, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[416, 2, 1, "", "arange"], [415, 2, 1, "", "array"], [417, 2, 1, "", "asarray"], [418, 2, 1, "", "empty"], [419, 2, 1, "", "empty_like"], [420, 2, 1, "", "eye"], [421, 2, 1, "", "from_dlpack"], [422, 2, 1, "", "full"], [423, 2, 1, "", "full_like"], [424, 2, 1, "", "linspace"], [425, 2, 1, "", "logspace"], [426, 2, 1, "", "meshgrid"], [427, 2, 1, "", "native_array"], [428, 2, 1, "", "ones"], [429, 2, 1, "", "ones_like"], [430, 2, 1, "", "tril"], [431, 2, 1, "", "triu"], [432, 2, 1, "", "zeros"], [433, 2, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[434, 1, 1, "", "DefaultDtype"], [434, 1, 1, "", "DefaultFloatDtype"], [434, 1, 1, "", "DefaultIntDtype"], [438, 2, 1, "", "as_ivy_dtype"], [439, 2, 1, "", "as_native_dtype"], [440, 2, 1, "", "astype"], [441, 2, 1, "", "broadcast_arrays"], [442, 2, 1, "", "broadcast_to"], [446, 2, 1, "", "can_cast"], [448, 2, 1, "", "closest_valid_dtype"], [449, 2, 1, "", "default_dtype"], [450, 2, 1, "", "default_float_dtype"], [451, 2, 1, "", "default_int_dtype"], [452, 2, 1, "", "dtype"], [453, 2, 1, "", "dtype_bits"], [454, 2, 1, "", "finfo"], [455, 2, 1, "", "function_supported_dtypes"], [456, 2, 1, "", "function_unsupported_dtypes"], [457, 2, 1, "", "iinfo"], [458, 2, 1, "", "invalid_dtype"], [459, 2, 1, "", "is_float_dtype"], [460, 2, 1, "", "is_int_dtype"], [461, 2, 1, "", "promote_types"], [462, 2, 1, "", "result_type"], [463, 2, 1, "", "set_default_dtype"], [464, 2, 1, "", "set_default_float_dtype"], [465, 2, 1, "", "set_default_int_dtype"], [466, 2, 1, "", "type_promote_arrays"], [467, 2, 1, "", "unset_default_dtype"], [468, 2, 1, "", "unset_default_float_dtype"], [469, 2, 1, "", "unset_default_int_dtype"], [470, 2, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[434, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[434, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[434, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[471, 1, 1, "", "DefaultDevice"], [473, 1, 1, "", "DevClonedItem"], [474, 1, 1, "", "DevClonedIter"], [475, 1, 1, "", "DevClonedNest"], [476, 1, 1, "", "DevDistItem"], [477, 1, 1, "", "DevDistIter"], [478, 1, 1, "", "DevDistNest"], [471, 1, 1, "", "DevManager"], [480, 1, 1, "", "DevMapper"], [481, 1, 1, "", "DevMapperMultiProc"], [471, 1, 1, "", "MultiDev"], [483, 1, 1, "", "MultiDevItem"], [484, 1, 1, "", "MultiDevIter"], [485, 1, 1, "", "MultiDevNest"], [486, 1, 1, "", "Profiler"], [487, 2, 1, "", "as_ivy_dev"], [488, 2, 1, "", "as_native_dev"], [489, 2, 1, "", "clear_mem_on_dev"], [490, 2, 1, "", "default_device"], [491, 2, 1, "", "dev"], [492, 2, 1, "", "dev_clone"], [493, 2, 1, "", "dev_clone_array"], [494, 2, 1, "", "dev_clone_iter"], [495, 2, 1, "", "dev_clone_nest"], [496, 2, 1, "", "dev_dist"], [497, 2, 1, "", "dev_dist_array"], [498, 2, 1, "", "dev_dist_iter"], [499, 2, 1, "", "dev_dist_nest"], [500, 2, 1, "", "dev_unify"], [501, 2, 1, "", "dev_unify_array"], [502, 2, 1, "", "dev_unify_iter"], [503, 2, 1, "", "dev_unify_nest"], [504, 2, 1, "", "dev_util"], [505, 2, 1, "", "get_all_ivy_arrays_on_dev"], [506, 2, 1, "", "gpu_is_available"], [507, 2, 1, "", "num_cpu_cores"], [508, 2, 1, "", "num_gpus"], [509, 2, 1, "", "num_ivy_arrays_on_dev"], [510, 2, 1, "", "percent_used_mem_on_dev"], [511, 2, 1, "", "print_all_ivy_arrays_on_dev"], [512, 2, 1, "", "set_default_device"], [513, 2, 1, "", "set_split_factor"], [514, 2, 1, "", "split_factor"], [515, 2, 1, "", "split_func_call"], [516, 2, 1, "", "to_device"], [517, 2, 1, "", "total_mem_on_dev"], [518, 2, 1, "", "tpu_is_available"], [519, 2, 1, "", "unset_default_device"], [520, 2, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[471, 3, 1, "", "__enter__"], [471, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[471, 3, 1, "", "__init__"], [471, 3, 1, "", "da_tune_step"], [471, 4, 1, "", "dim_size"], [471, 3, 1, "", "ds_tune_step"], [471, 3, 1, "", "map"], [471, 3, 1, "", "repeated_config_check"], [471, 4, 1, "", "tune_step"], [471, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[480, 3, 1, "", "__init__"], [480, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[481, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[471, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[483, 3, 1, "", "__init__"], [483, 3, 1, "", "items"], [483, 3, 1, "", "keys"], [483, 4, 1, "", "shape"], [483, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[484, 3, 1, "", "__init__"], [484, 3, 1, "", "at_dev"], [484, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[485, 3, 1, "", "__init__"], [485, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[486, 3, 1, "", "__init__"], [486, 3, 1, "", "start"], [486, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[525, 2, 1, "", "abs"], [527, 2, 1, "", "acos"], [595, 2, 1, "", "acosh"], [535, 2, 1, "", "add"], [543, 2, 1, "", "asin"], [547, 2, 1, "", "asinh"], [548, 2, 1, "", "atan"], [555, 2, 1, "", "atan2"], [754, 2, 1, "", "atanh"], [563, 2, 1, "", "bitwise_and"], [567, 2, 1, "", "bitwise_invert"], [571, 2, 1, "", "bitwise_left_shift"], [575, 2, 1, "", "bitwise_or"], [579, 2, 1, "", "bitwise_right_shift"], [583, 2, 1, "", "bitwise_xor"], [587, 2, 1, "", "ceil"], [588, 2, 1, "", "cos"], [592, 2, 1, "", "cosh"], [596, 2, 1, "", "divide"], [601, 2, 1, "", "equal"], [608, 2, 1, "", "erf"], [609, 2, 1, "", "exp"], [616, 2, 1, "", "expm1"], [617, 2, 1, "", "floor"], [624, 2, 1, "", "floor_divide"], [625, 2, 1, "", "greater"], [632, 2, 1, "", "greater_equal"], [636, 2, 1, "", "isfinite"], [640, 2, 1, "", "isinf"], [644, 2, 1, "", "isnan"], [648, 2, 1, "", "less"], [652, 2, 1, "", "less_equal"], [656, 2, 1, "", "log"], [660, 2, 1, "", "log10"], [664, 2, 1, "", "log1p"], [668, 2, 1, "", "log2"], [672, 2, 1, "", "logaddexp"], [676, 2, 1, "", "logical_and"], [680, 2, 1, "", "logical_not"], [684, 2, 1, "", "logical_or"], [688, 2, 1, "", "logical_xor"], [689, 2, 1, "", "maximum"], [690, 2, 1, "", "minimum"], [694, 2, 1, "", "multiply"], [699, 2, 1, "", "negative"], [703, 2, 1, "", "not_equal"], [707, 2, 1, "", "positive"], [711, 2, 1, "", "pow"], [715, 2, 1, "", "remainder"], [719, 2, 1, "", "round"], [723, 2, 1, "", "sign"], [727, 2, 1, "", "sin"], [731, 2, 1, "", "sinh"], [735, 2, 1, "", "sqrt"], [739, 2, 1, "", "square"], [744, 2, 1, "", "subtract"], [745, 2, 1, "", "tan"], [750, 2, 1, "", "tanh"], [758, 2, 1, "", "trunc"]], "ivy.functional.ivy.general": [[763, 2, 1, "", "all_equal"], [765, 2, 1, "", "arg_info"], [766, 2, 1, "", "arg_names"], [767, 2, 1, "", "array_equal"], [768, 2, 1, "", "arrays_equal"], [769, 2, 1, "", "assert_supports_inplace"], [770, 2, 1, "", "cache_fn"], [771, 2, 1, "", "clip_matrix_norm"], [774, 2, 1, "", "clip_vector_norm"], [775, 2, 1, "", "container_types"], [776, 2, 1, "", "copy_array"], [777, 2, 1, "", "cumprod"], [778, 2, 1, "", "cumsum"], [779, 2, 1, "", "current_backend_str"], [780, 2, 1, "", "default"], [781, 2, 1, "", "einops_rearrange"], [782, 2, 1, "", "einops_reduce"], [783, 2, 1, "", "einops_repeat"], [784, 2, 1, "", "exists"], [785, 2, 1, "", "floormod"], [786, 2, 1, "", "fourier_encode"], [787, 2, 1, "", "gather"], [791, 2, 1, "", "gather_nd"], [793, 2, 1, "", "get_all_arrays_in_memory"], [794, 2, 1, "", "get_min_base"], [795, 2, 1, "", "get_min_denominator"], [796, 2, 1, "", "get_num_dims"], [797, 2, 1, "", "get_referrers_recursive"], [798, 2, 1, "", "has_nans"], [799, 2, 1, "", "indices_where"], [800, 2, 1, "", "inplace_arrays_supported"], [801, 2, 1, "", "inplace_decrement"], [802, 2, 1, "", "inplace_increment"], [803, 2, 1, "", "inplace_update"], [804, 2, 1, "", "inplace_variables_supported"], [805, 2, 1, "", "is_array"], [806, 2, 1, "", "is_ivy_array"], [807, 2, 1, "", "is_ivy_container"], [808, 2, 1, "", "is_native_array"], [809, 2, 1, "", "match_kwargs"], [810, 2, 1, "", "multiprocessing"], [811, 2, 1, "", "num_arrays_in_memory"], [812, 2, 1, "", "one_hot"], [813, 2, 1, "", "print_all_arrays_in_memory"], [814, 2, 1, "", "queue_timeout"], [815, 2, 1, "", "scatter_flat"], [816, 2, 1, "", "scatter_nd"], [817, 2, 1, "", "set_min_base"], [818, 2, 1, "", "set_min_denominator"], [819, 2, 1, "", "set_queue_timeout"], [820, 2, 1, "", "set_tmp_dir"], [821, 2, 1, "", "shape"], [822, 2, 1, "", "shape_to_tuple"], [823, 2, 1, "", "stable_divide"], [824, 2, 1, "", "stable_pow"], [825, 2, 1, "", "supports_inplace"], [826, 2, 1, "", "tmp_dir"], [827, 2, 1, "", "to_list"], [828, 2, 1, "", "to_numpy"], [829, 2, 1, "", "to_scalar"], [830, 2, 1, "", "try_else_none"], [831, 2, 1, "", "unstack"], [832, 2, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[833, 1, 1, "", "GradientTracking"], [838, 2, 1, "", "adam_step"], [842, 2, 1, "", "adam_update"], [844, 2, 1, "", "execute_with_gradients"], [847, 2, 1, "", "gradient_descent_update"], [851, 2, 1, "", "is_variable"], [855, 2, 1, "", "lamb_update"], [859, 2, 1, "", "lars_update"], [863, 2, 1, "", "optimizer_update"], [865, 2, 1, "", "set_with_grads"], [866, 2, 1, "", "stop_gradient"], [867, 2, 1, "", "unset_with_grads"], [868, 2, 1, "", "variable"], [869, 2, 1, "", "variable_data"], [870, 2, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[833, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[872, 2, 1, "", "conv1d"], [873, 2, 1, "", "conv1d_transpose"], [874, 2, 1, "", "conv2d"], [875, 2, 1, "", "conv2d_transpose"], [876, 2, 1, "", "conv3d"], [877, 2, 1, "", "conv3d_transpose"], [878, 2, 1, "", "depthwise_conv2d"], [879, 2, 1, "", "dropout"], [880, 2, 1, "", "linear"], [881, 2, 1, "", "lstm_update"], [882, 2, 1, "", "multi_head_attention"], [883, 2, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[887, 2, 1, "", "cholesky"], [890, 2, 1, "", "cross"], [891, 2, 1, "", "det"], [896, 2, 1, "", "diagonal"], [899, 2, 1, "", "eigh"], [902, 2, 1, "", "eigvalsh"], [903, 2, 1, "", "inv"], [909, 2, 1, "", "matmul"], [912, 2, 1, "", "matrix_norm"], [913, 2, 1, "", "matrix_power"], [916, 2, 1, "", "matrix_rank"], [919, 2, 1, "", "matrix_transpose"], [922, 2, 1, "", "outer"], [925, 2, 1, "", "pinv"], [928, 2, 1, "", "qr"], [929, 2, 1, "", "slogdet"], [932, 2, 1, "", "solve"], [933, 2, 1, "", "svd"], [938, 2, 1, "", "svdvals"], [941, 2, 1, "", "tensordot"], [944, 2, 1, "", "trace"], [947, 2, 1, "", "vecdot"], [950, 2, 1, "", "vector_norm"], [953, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[958, 2, 1, "", "binary_cross_entropy"], [963, 2, 1, "", "cross_entropy"], [968, 2, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[974, 2, 1, "", "clip"], [979, 2, 1, "", "concat"], [983, 2, 1, "", "constant_pad"], [987, 2, 1, "", "expand_dims"], [991, 2, 1, "", "flip"], [995, 2, 1, "", "permute_dims"], [999, 2, 1, "", "repeat"], [1003, 2, 1, "", "reshape"], [1007, 2, 1, "", "roll"], [1009, 2, 1, "", "split"], [1013, 2, 1, "", "squeeze"], [1017, 2, 1, "", "stack"], [1021, 2, 1, "", "swapaxes"], [1025, 2, 1, "", "tile"], [1029, 2, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1031, 2, 1, "", "fomaml_step"], [1032, 2, 1, "", "maml_step"], [1033, 2, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1035, 2, 1, "", "all_nested_indices"], [1036, 2, 1, "", "copy_nest"], [1037, 2, 1, "", "index_nest"], [1038, 2, 1, "", "insert_into_nest_at_index"], [1039, 2, 1, "", "insert_into_nest_at_indices"], [1040, 2, 1, "", "map"], [1041, 2, 1, "", "map_nest_at_index"], [1042, 2, 1, "", "map_nest_at_indices"], [1043, 2, 1, "", "multi_index_nest"], [1044, 2, 1, "", "nested_any"], [1045, 2, 1, "", "nested_indices_where"], [1046, 2, 1, "", "nested_map"], [1047, 2, 1, "", "nested_multi_map"], [1048, 2, 1, "", "prune_nest_at_index"], [1049, 2, 1, "", "prune_nest_at_indices"], [1050, 2, 1, "", "set_nest_at_index"], [1051, 2, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1056, 2, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1058, 2, 1, "", "multinomial"], [1060, 2, 1, "", "randint"], [1062, 2, 1, "", "random_normal"], [1065, 2, 1, "", "random_uniform"], [1067, 2, 1, "", "seed"], [1068, 2, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1070, 2, 1, "", "argmax"], [1071, 2, 1, "", "argmin"], [1072, 2, 1, "", "nonzero"], [1073, 2, 1, "", "where"]], "ivy.functional.ivy.set": [[1075, 2, 1, "", "unique_all"], [1080, 2, 1, "", "unique_counts"], [1081, 2, 1, "", "unique_inverse"], [1082, 2, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1087, 2, 1, "", "argsort"], [1092, 2, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1122, 2, 1, "", "einsum"], [1102, 2, 1, "", "max"], [1106, 2, 1, "", "mean"], [1110, 2, 1, "", "min"], [1114, 2, 1, "", "prod"], [1118, 2, 1, "", "std"], [1119, 2, 1, "", "sum"], [1126, 2, 1, "", "var"]], "ivy.functional.ivy.utility": [[1131, 2, 1, "", "all"], [1135, 2, 1, "", "any"]], "ivy.inspection": [[1140, 2, 1, "", "add_array_specs"], [1141, 2, 1, "", "fn_array_spec"]], "ivy.stateful": [[1143, 0, 0, "-", "activations"], [1146, 0, 0, "-", "converters"], [1148, 0, 0, "-", "initializers"], [1157, 0, 0, "-", "layers"], [1169, 0, 0, "-", "module"], [1171, 0, 0, "-", "norms"], [1173, 0, 0, "-", "optimizers"], [1179, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1144, 1, 1, "", "GEGLU"], [1145, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1144, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1145, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[1147, 2, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1148, 1, 1, "", "Constant"], [1150, 1, 1, "", "FirstLayerSiren"], [1151, 1, 1, "", "GlorotUniform"], [1148, 1, 1, "", "KaimingNormal"], [1153, 1, 1, "", "Ones"], [1154, 1, 1, "", "Siren"], [1148, 1, 1, "", "Uniform"], [1156, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1148, 3, 1, "", "__init__"], [1148, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1150, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1151, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1148, 3, 1, "", "__init__"], [1148, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1153, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1154, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1148, 3, 1, "", "__init__"], [1148, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1156, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[1158, 1, 1, "", "Conv1D"], [1159, 1, 1, "", "Conv1DTranspose"], [1160, 1, 1, "", "Conv2D"], [1161, 1, 1, "", "Conv2DTranspose"], [1162, 1, 1, "", "Conv3D"], [1163, 1, 1, "", "Conv3DTranspose"], [1164, 1, 1, "", "DepthwiseConv2D"], [1165, 1, 1, "", "Dropout"], [1166, 1, 1, "", "LSTM"], [1167, 1, 1, "", "Linear"], [1168, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1158, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1159, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1160, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1161, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1162, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1163, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1164, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1165, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1166, 3, 1, "", "__init__"], [1166, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1167, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1168, 3, 1, "", "__init__"]], "ivy.stateful.module": [[1170, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1170, 3, 1, "", "__init__"], [1170, 3, 1, "", "build"], [1170, 4, 1, "", "build_mode"], [1170, 4, 1, "", "built"], [1170, 3, 1, "", "check_submod_rets"], [1170, 3, 1, "", "get_mod_key"], [1170, 3, 1, "", "mod_depth"], [1170, 3, 1, "", "mod_height"], [1170, 3, 1, "", "mod_with_top_mod_key_chain"], [1170, 3, 1, "", "save_weights"], [1170, 3, 1, "", "show_mod_in_top_mod"], [1170, 3, 1, "", "show_structure"], [1170, 3, 1, "", "show_v_in_top_v"], [1170, 3, 1, "", "sub_mods"], [1170, 3, 1, "", "track_submod_call_order"], [1170, 3, 1, "", "track_submod_rets"], [1170, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1172, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1172, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1174, 1, 1, "", "Adam"], [1175, 1, 1, "", "LAMB"], [1176, 1, 1, "", "LARS"], [1177, 1, 1, "", "Optimizer"], [1178, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1174, 3, 1, "", "__init__"], [1174, 3, 1, "", "set_state"], [1174, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1175, 3, 1, "", "__init__"], [1175, 3, 1, "", "set_state"], [1175, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1176, 3, 1, "", "__init__"], [1176, 3, 1, "", "set_state"], [1176, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1177, 3, 1, "", "__init__"], [1177, 3, 1, "", "set_state"], [1177, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1178, 3, 1, "", "__init__"], [1178, 3, 1, "", "set_state"], [1178, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1180, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1180, 3, 1, "", "__init__"]], "ivy.verbosity": [[1183, 2, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"activ": [0, 178, 404, 1143], "arraywithactiv": 1, "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 176, 364, 369, 374, 378, 444, 523, 528, 532, 536, 541, 545, 549, 553, 557, 561, 565, 569, 573, 577, 581, 585, 589, 593, 597, 602, 606, 610, 614, 618, 622, 626, 630, 634, 638, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 692, 697, 701, 705, 709, 713, 717, 721, 725, 729, 733, 737, 742, 747, 752, 756, 761, 789, 836, 886, 889, 892, 895, 898, 901, 904, 907, 911, 915, 918, 921, 924, 927, 931, 934, 937, 940, 943, 946, 949, 952, 956, 961, 966, 972, 977, 981, 985, 989, 993, 997, 1001, 1005, 1011, 1015, 1019, 1023, 1027, 1054, 1078, 1085, 1090, 1096, 1100, 1104, 1108, 1112, 1116, 1120, 1124, 1129, 1133], "method": [2, 185, 370, 378, 379], "ab": [3, 186, 522, 523, 524, 525], "aco": [4, 187, 527, 528, 529, 530], "acosh": [5, 188, 531, 532, 533, 534], "adam_step": [6, 189, 835, 836, 837, 838], "add": [7, 191, 363, 535, 536, 537, 538], "add_ivy_array_instance_method": [8, 160], "all": [9, 193, 1128, 1129, 1130, 1131], "all_equ": [10, 194, 760, 761, 762, 763], "ani": [11, 195, 1132, 1133, 1134, 1135], "argsort": [12, 196, 1084, 1085, 1086, 1087], "asin": [13, 197, 540, 541, 542, 543], "asinh": [14, 198, 544, 545, 546, 547], "atan": [15, 201, 548, 549, 550, 551], "atan2": [16, 202, 552, 553, 554, 555], "atanh": [17, 203, 556, 557, 558, 559], "binary_cross_entropi": [18, 204, 955, 956, 957, 958], "bitwise_and": [19, 205, 560, 561, 562, 563], "bitwise_invert": [20, 206, 564, 565, 566, 567], "bitwise_left_shift": [21, 207, 568, 569, 570, 571], "bitwise_or": [22, 208, 572, 573, 574, 575], "bitwise_right_shift": [23, 209, 576, 577, 578, 579], "bitwise_xor": [24, 210, 580, 581, 582, 583], "can_cast": [25, 211, 443, 444, 445, 446], "ceil": [26, 212, 584, 585, 586, 587], "choleski": [27, 885, 886, 887], "clip": [28, 213, 971, 972, 973, 974], "concat": [29, 215, 976, 977, 978, 979], "constant_pad": [30, 216, 980, 981, 982, 983], "co": [31, 217, 588, 589, 590, 591], "cosh": [32, 218, 592, 593, 594, 595], "cross": [33, 888, 889, 890], "cross_entropi": [34, 219, 960, 961, 962, 963], "det": [35, 891, 892, 893], "diagon": [36, 894, 895, 896], "divid": [37, 220, 596, 597, 598, 599], "eigh": [38, 897, 898, 899], "eigvalsh": [39, 900, 901, 902], "einsum": [40, 221, 1095, 1096, 1097, 1098], "equal": [41, 222, 601, 602, 603, 604], "erf": [42, 223, 605, 606, 607, 608], "exp": [43, 224, 609, 610, 611, 612], "expand_dim": [44, 225, 984, 985, 986, 987], "expm1": [45, 226, 613, 614, 615, 616], "flip": [46, 227, 988, 989, 990, 991], "floor": [47, 228, 617, 618, 619, 620], "floor_divid": [48, 229, 621, 622, 623, 624], "gather_nd": [49, 230, 788, 789, 790, 791], "greater": [50, 232, 625, 626, 627, 628], "greater_equ": [51, 233, 629, 630, 631, 632], "inv": [52, 903, 904, 905], "isfinit": [53, 235, 633, 634, 635, 636], "isinf": [54, 236, 637, 638, 639, 640], "isnan": [55, 237, 641, 642, 643, 644], "layer_norm": [56, 240, 1053, 1054, 1055, 1056], "less": [57, 241, 645, 646, 647, 648], "less_equ": [58, 242, 649, 650, 651, 652], "log": [59, 243, 653, 654, 655, 656], "log10": [60, 244, 657, 658, 659, 660], "log1p": [61, 245, 661, 662, 663, 664], "log2": [62, 246, 665, 666, 667, 668], "logaddexp": [63, 247, 669, 670, 671, 672], "logical_and": [64, 248, 673, 674, 675, 676], "logical_not": [65, 249, 677, 678, 679, 680], "logical_or": [66, 250, 681, 682, 683, 684], "logical_xor": [67, 251, 685, 686, 687, 688], "matmul": [68, 252, 906, 907, 908, 909], "matrix_norm": [69, 910, 911, 912], "matrix_rank": [70, 914, 915, 916], "matrix_transpos": [71, 917, 918, 919], "max": [72, 253, 1099, 1100, 1101, 1102], "mean": [73, 254, 1103, 1104, 1105, 1106], "min": [74, 255, 1107, 1108, 1109, 1110], "multipli": [75, 256, 691, 692, 693, 694], "neg": [76, 257, 696, 697, 698, 699], "not_equ": [77, 258, 700, 701, 702, 703], "outer": [78, 920, 921, 922], "permute_dim": [79, 260, 992, 993, 994, 995], "pinv": [80, 923, 924, 925], "posit": [81, 261, 704, 705, 706, 707], "pow": [82, 262, 708, 709, 710, 711], "prod": [83, 263, 1111, 1112, 1113, 1114], "qr": [84, 926, 927, 928], "remaind": [85, 265, 712, 713, 714, 715], "repeat": [86, 266, 996, 997, 998, 999], "reshap": [87, 267, 1000, 1001, 1002, 1003], "roll": [88, 268, 363, 1004, 1005, 1006, 1007], "round": [89, 269, 716, 717, 718, 719], "sign": [90, 270, 720, 721, 722, 723], "sin": [91, 271, 724, 725, 726, 727], "sinh": [92, 272, 728, 729, 730, 731], "solv": [93, 930, 931, 932], "sort": [94, 153, 273, 347, 1083, 1089, 1090, 1091, 1092], "sparse_cross_entropi": [95, 274, 965, 966, 967, 968], "sqrt": [96, 275, 732, 733, 734, 735], "squar": [97, 276, 736, 737, 738, 739], "squeez": [98, 277, 1010, 1011, 1012, 1013], "stack": [99, 278, 1014, 1015, 1016, 1017], "std": [100, 306, 1115, 1116, 1117, 1118], "subtract": [101, 307, 740, 742, 743, 744], "sum": [102, 308, 1119, 1120, 1121, 1122], "svd": [103, 933, 934, 935], "svdval": [104, 936, 937, 938], "swapax": [105, 309, 1018, 1019, 1020, 1021], "tan": [106, 310, 363, 745, 747, 748, 749], "tanh": [107, 311, 411, 750, 752, 753, 754], "tensordot": [108, 939, 940, 941], "tile": [109, 312, 1022, 1023, 1024, 1025], "trace": [110, 942, 943, 944], "trunc": [111, 313, 755, 756, 757, 758], "unique_count": [112, 314, 1076, 1078, 1079, 1080], "var": [113, 315, 1123, 1124, 1125, 1126], "vecdot": [114, 945, 946, 947], "vector_norm": [115, 948, 949, 950], "vector_to_skew_symmetric_matrix": [116, 951, 952, 953], "zero_pad": [117, 316, 1026, 1027, 1028, 1029], "convers": 118, "args_to_ivi": 119, "args_to_n": 120, "to_ivi": 121, "to_n": 122, "creation": [123, 317, 415], "arraywithcr": 124, "data": [125, 319, 365, 371, 379, 393, 434, 1074, 1075, 1076, 1080, 1082], "type": [125, 319, 366, 371, 393, 434], "arraywithdatatyp": 126, "devic": [127, 321, 372, 374, 471], "arraywithdevic": 128, "elementwis": [129, 323, 521], "arraywithelementwis": 130, "gener": [131, 325, 365, 759], "arraywithgener": 132, "gradient": [133, 327, 833], "arraywithgradi": 134, "imag": [135, 329], "arraywithimag": 136, "layer": [137, 331, 871, 1157], "arraywithlay": 138, "linear": [139, 333, 880, 884, 1167], "algebra": [139, 333, 884], "arraywithlinearalgebra": 140, "loss": [141, 335, 954], "arraywithloss": 142, "manipul": [143, 337, 970], "arraywithmanipul": 144, "norm": [145, 339, 1052, 1171], "arraywithnorm": 146, "random": [147, 341, 1057], "arraywithrandom": 148, "search": [149, 343, 1069], "arraywithsearch": 150, "set": [151, 345, 356, 367, 1074], "arraywithset": 152, "arraywithsort": 154, "statist": [155, 349, 1094], "arraywithstatist": 156, "util": [157, 351, 1127], "arraywithutil": 158, "wrap": [159, 353, 368], "backend": [161, 361, 367, 376, 393], "handler": [161, 376], "choose_random_backend": 163, "clear_backend_stack": 164, "current_backend": 165, "get_backend": 166, "set_backend": 167, "try_import_ivy_jax": 168, "try_import_ivy_mxnet": 169, "try_import_ivy_numpi": 170, "try_import_ivy_tf": 171, "try_import_ivy_torch": 172, "unset_backend": 173, "background": [174, 1136], "ml": 175, "explos": 175, "standard": 176, "skeptic": 176, "complimentari": 176, "vs": [176, 393], "competit": 176, "do": 176, "work": [176, 359], "The": [176, 357, 378, 393], "api": [176, 358, 361, 364, 370, 376, 378, 380, 381], "why": 177, "unifi": [177, 378], "No": [177, 356], "more": 177, "re": 177, "implement": 177, "infinit": 177, "shelf": 177, "life": 177, "containerwithactiv": 179, "base": 180, "containerbas": 181, "contain": [182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 370, 379, 445, 447, 524, 526, 529, 533, 537, 539, 542, 546, 550, 554, 558, 562, 566, 570, 574, 578, 582, 586, 590, 594, 598, 600, 603, 607, 611, 615, 619, 623, 627, 631, 635, 639, 643, 647, 651, 655, 659, 663, 667, 671, 675, 679, 683, 687, 693, 695, 698, 702, 706, 710, 714, 718, 722, 726, 730, 734, 738, 741, 743, 746, 748, 751, 753, 757, 762, 764, 773, 790, 792, 837, 839, 841, 843, 846, 848, 850, 852, 854, 856, 858, 860, 862, 864, 908, 957, 959, 962, 964, 967, 969, 973, 975, 978, 982, 986, 990, 994, 998, 1002, 1006, 1008, 1012, 1016, 1020, 1024, 1028, 1055, 1061, 1064, 1066, 1077, 1079, 1086, 1088, 1091, 1093, 1097, 1101, 1105, 1109, 1113, 1117, 1121, 1125, 1130, 1134], "multidevcontain": 184, "adam_upd": [190, 840, 841, 842], "add_ivy_container_instance_method": [192, 354], "at_dev": [199, 200], "clip_vector_norm": [214, 772, 773, 774], "gradient_descent_upd": [231, 845, 846, 847], "is_vari": [234, 849, 850, 851], "lamb_upd": [238, 853, 854, 855], "lars_upd": [239, 857, 858, 859], "optimizer_upd": [259, 861, 862, 863], "random_uniform": [264, 1063, 1064, 1065], "static_ab": [279, 526], "static_adam_step": [280, 839], "static_adam_upd": [281, 843], "static_add": [282, 539], "static_all_equ": [283, 764], "static_argsort": [284, 1088], "static_binary_cross_entropi": [285, 959], "static_can_cast": [286, 447], "static_clip": [287, 975], "static_cross_entropi": [288, 964], "static_divid": [289, 600], "static_gather_nd": [290, 792], "static_gradient_descent_upd": [291, 848], "static_is_vari": [292, 852], "static_lamb_upd": [293, 856], "static_lars_upd": [294, 860], "static_multipli": [295, 695], "static_optimizer_upd": [296, 864], "static_randint": [297, 1061], "static_random_uniform": [298, 1066], "static_rol": [299, 1008], "static_sort": [300, 1093], "static_sparse_cross_entropi": [301, 969], "static_subtract": [302, 741], "static_tan": [303, 746], "static_tanh": [304, 751], "static_unique_count": [305, 1077], "containerwithcr": 318, "containerwithdatatyp": 320, "containerwithdevic": 322, "containerwithelementwis": 324, "containerwithgener": 326, "containerwithgradi": 328, "containerwithimag": 330, "containerwithlay": 332, "containerwithlinearalgebra": 334, "containerwithloss": 336, "containerwithmanipul": 338, "containerwithnorm": 340, "containerwithrandom": 342, "containerwithsearch": 344, "containerwithset": 346, "containerwithsort": 348, "containerwithstatist": 350, "containerwithutil": 352, "contribut": [355, 1136], "up": 356, "clone": 356, "ivi": [356, 361, 363, 365, 369, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 444, 445, 446, 447, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 565, 566, 567, 569, 570, 571, 573, 574, 575, 577, 578, 579, 581, 582, 583, 585, 586, 587, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 626, 627, 628, 630, 631, 632, 634, 635, 636, 638, 639, 640, 642, 643, 644, 646, 647, 648, 650, 651, 652, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 682, 683, 684, 686, 687, 688, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 718, 719, 721, 722, 723, 725, 726, 727, 729, 730, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 761, 762, 763, 764, 773, 774, 789, 790, 791, 792, 836, 837, 838, 839, 841, 842, 843, 846, 847, 848, 850, 851, 852, 854, 855, 856, 858, 859, 860, 862, 863, 864, 886, 887, 889, 890, 892, 893, 895, 896, 898, 899, 901, 902, 904, 905, 907, 908, 909, 911, 912, 915, 916, 918, 919, 921, 922, 924, 925, 927, 928, 931, 932, 934, 935, 937, 938, 940, 941, 943, 944, 946, 947, 949, 950, 952, 953, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 972, 973, 974, 975, 977, 978, 979, 981, 982, 983, 985, 986, 987, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1054, 1055, 1056, 1060, 1061, 1064, 1065, 1066, 1077, 1078, 1079, 1080, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1129, 1130, 1131, 1133, 1134, 1135], "pycharm": 356, "virtual": 356, "environ": 356, "docker": [356, 357, 359], "us": [356, 359, 379], "miniconda": [356, 359], "venv": [356, 359], "interpret": 356, "window": 356, "maco": 356, "ubuntu": 356, "github": 356, "codespac": 356, "pre": 356, "commit": [356, 357], "basic": 357, "get": 357, "help": 357, "todo": 357, "list": 357, "issu": 357, "manag": 357, "your": 357, "fork": 357, "who": 357, "To": 357, "ask": 357, "With": 357, "command": 357, "line": 357, "browser": 357, "pull": 357, "request": 357, "small": 357, "often": 357, "run": 357, "test": [357, 364, 365], "local": 357, "open": 358, "task": 358, "function": [358, 366, 368, 370, 371, 372, 374, 376, 381, 393], "format": 358, "frontend": [358, 381], "build": [359, 376], "doc": 359, "dockerless": 359, "document": 359, "pipelin": [359, 393], "make_doc": 359, "sh": 359, "entrypoint": 359, "_make_doc": 359, "generate_src_rst_fil": 359, "py": 359, "sphinx": 359, "correct_built_html_fil": 359, "remove_fil": 359, "deep": 360, "dive": 360, "navig": 361, "code": 361, "categor": 361, "submodul": 361, "design": [361, 375, 1136], "docstr": [362, 363], "exampl": [363, 374], "hypothesi": 365, "self": 365, "consist": 365, "explicit": 365, "test_array_funct": 365, "primari": 366, "composit": 366, "mix": 366, "standalon": 366, "nestabl": [366, 370, 374], "conveni": 366, "nativ": 369, "handl": 369, "instanc": [370, 378], "static": 370, "special": 370, "modul": [371, 372, 380, 1169, 1170], "argument": [371, 372, 373, 374], "other": [371, 372], "inplac": 373, "updat": 373, "out": [373, 374], "copi": 373, "dtype": [374, 452], "number": 374, "oper": [374, 378, 393], "integ": 374, "sequenc": 374, "block": 376, "framework": [376, 377], "graph": [376, 381], "compil": [376, 381, 412, 413], "class": 378, "monkei": 378, "patch": 378, "construct": 379, "represent": 379, "recurs": 379, "built": 379, "ins": 379, "access": 379, "save": 379, "load": 379, "comparison": 379, "custom": [379, 393], "case": 379, "compartment": 379, "configur": 379, "network": [379, 381], "weight": 379, "state": [380, 393], "initi": [380, 1148], "optim": [380, 1173, 1177], "transpil": 381, "role": 381, "convert": [381, 1146], "model": [381, 388, 393], "builder": 383, "ecosystem": 384, "gym": [385, 392], "mech": 386, "memori": [387, 392], "robot": [389, 392], "vision": [390, 392], "extens": [391, 1136], "appli": 392, "librari": 392, "mechan": 392, "faq": 393, "maintain": 393, "version": 393, "dynam": 393, "size": 393, "shape": [393, 821, 1074, 1075, 1076, 1080, 1082], "check": 393, "control": 393, "flow": 393, "auto": 393, "differenti": 393, "replica": 393, "parallel": 393, "support": 393, "altern": 393, "structur": 393, "func": 394, "wrapper": 394, "handle_nest": 395, "handle_out_argu": 396, "infer_devic": 397, "infer_dtyp": 398, "inputs_to_ivy_arrai": 399, "inputs_to_native_arrai": 400, "outputs_to_ivy_arrai": 401, "to_native_arrays_and_back": 402, "gelu": [405, 1145], "leaky_relu": 406, "relu": 407, "sigmoid": 408, "softmax": 409, "softplu": 410, "constant": 414, "note": [415, 421], "arang": 416, "asarrai": 417, "empti": 418, "empty_lik": 419, "ey": 420, "from_dlpack": 421, "full": 422, "full_lik": 423, "linspac": 424, "logspac": 425, "meshgrid": 426, "native_arrai": 427, "ones": 428, "ones_lik": 429, "tril": 430, "triu": 431, "zero": [432, 1156], "zeros_lik": 433, "as_ivy_dtyp": 438, "as_native_dtyp": 439, "astyp": 440, "broadcast_arrai": 441, "broadcast_to": 442, "closest_valid_dtyp": 448, "default_dtyp": 449, "default_float_dtyp": 450, "default_int_dtyp": 451, "dtype_bit": 453, "finfo": 454, "function_supported_dtyp": 455, "function_unsupported_dtyp": 456, "iinfo": 457, "invalid_dtyp": 458, "is_float_dtyp": 459, "is_int_dtyp": 460, "promote_typ": 461, "result_typ": 462, "set_default_dtyp": 463, "set_default_float_dtyp": 464, "set_default_int_dtyp": 465, "type_promote_arrai": 466, "unset_default_dtyp": 467, "unset_default_float_dtyp": 468, "unset_default_int_dtyp": 469, "valid_dtyp": 470, "devcloneditem": 473, "devclonedit": 474, "devclonednest": 475, "devdistitem": 476, "devdistit": 477, "devdistnest": 478, "devmapp": 480, "devmappermultiproc": 481, "multidevitem": 483, "multidevit": 484, "multidevnest": 485, "profil": 486, "as_ivy_dev": 487, "as_native_dev": 488, "clear_mem_on_dev": 489, "default_devic": 490, "dev": 491, "dev_clon": 492, "dev_clone_arrai": 493, "dev_clone_it": 494, "dev_clone_nest": 495, "dev_dist": 496, "dev_dist_arrai": 497, "dev_dist_it": 498, "dev_dist_nest": 499, "dev_unifi": 500, "dev_unify_arrai": 501, "dev_unify_it": 502, "dev_unify_nest": 503, "dev_util": 504, "get_all_ivy_arrays_on_dev": 505, "gpu_is_avail": 506, "num_cpu_cor": 507, "num_gpu": 508, "num_ivy_arrays_on_dev": 509, "percent_used_mem_on_dev": 510, "print_all_ivy_arrays_on_dev": 511, "set_default_devic": 512, "set_split_factor": 513, "split_factor": 514, "split_func_cal": 515, "to_devic": 516, "total_mem_on_dev": 517, "tpu_is_avail": 518, "unset_default_devic": 519, "used_mem_on_dev": 520, "maximum": 689, "minimum": 690, "arg_info": 765, "arg_nam": 766, "array_equ": 767, "arrays_equ": 768, "assert_supports_inplac": 769, "cache_fn": 770, "clip_matrix_norm": 771, "container_typ": 775, "copy_arrai": 776, "cumprod": 777, "cumsum": 778, "current_backend_str": 779, "default": 780, "einops_rearrang": 781, "einops_reduc": 782, "einops_repeat": 783, "exist": 784, "floormod": 785, "fourier_encod": 786, "gather": 787, "get_all_arrays_in_memori": 793, "get_min_bas": 794, "get_min_denomin": 795, "get_num_dim": 796, "get_referrers_recurs": 797, "has_nan": 798, "indices_wher": 799, "inplace_arrays_support": 800, "inplace_decr": 801, "inplace_incr": 802, "inplace_upd": 803, "inplace_variables_support": 804, "is_arrai": 805, "is_ivy_arrai": 806, "is_ivy_contain": 807, "is_native_arrai": 808, "match_kwarg": 809, "multiprocess": 810, "num_arrays_in_memori": 811, "one_hot": 812, "print_all_arrays_in_memori": 813, "queue_timeout": 814, "scatter_flat": 815, "scatter_nd": 816, "set_min_bas": 817, "set_min_denomin": 818, "set_queue_timeout": 819, "set_tmp_dir": 820, "shape_to_tupl": 822, "stable_divid": 823, "stable_pow": 824, "supports_inplac": 825, "tmp_dir": 826, "to_list": 827, "to_numpi": 828, "to_scalar": 829, "try_else_non": 830, "unstack": 831, "value_is_nan": 832, "execute_with_gradi": 844, "set_with_grad": 865, "stop_gradi": 866, "unset_with_grad": 867, "variabl": 868, "variable_data": 869, "with_grad": 870, "conv1d": [872, 1158], "conv1d_transpos": 873, "conv2d": [874, 1160], "conv2d_transpos": 875, "conv3d": [876, 1162], "conv3d_transpos": 877, "depthwise_conv2d": 878, "dropout": [879, 1165], "lstm_updat": 881, "multi_head_attent": 882, "scaled_dot_product_attent": 883, "matrix_pow": 913, "slogdet": 929, "split": 1009, "meta": 1030, "fomaml_step": 1031, "maml_step": 1032, "reptile_step": 1033, "nest": 1034, "all_nested_indic": 1035, "copy_nest": 1036, "index_nest": 1037, "insert_into_nest_at_index": 1038, "insert_into_nest_at_indic": 1039, "map": 1040, "map_nest_at_index": 1041, "map_nest_at_indic": 1042, "multi_index_nest": 1043, "nested_ani": 1044, "nested_indices_wher": 1045, "nested_map": 1046, "nested_multi_map": 1047, "prune_nest_at_index": 1048, "prune_nest_at_indic": 1049, "set_nest_at_index": 1050, "set_nest_at_indic": 1051, "multinomi": 1058, "randint": [1059, 1060], "random_norm": 1062, "seed": 1067, "shuffl": 1068, "argmax": 1070, "argmin": 1071, "nonzero": 1072, "where": 1073, "depend": [1074, 1075, 1076, 1080, 1082], "output": [1074, 1075, 1076, 1080, 1082], "unique_al": 1075, "unique_invers": 1081, "unique_valu": 1082, "content": 1136, "overview": 1136, "quick": 1136, "start": 1136, "roadmap": [1136, 1142], "citat": 1136, "inspect": 1139, "add_array_spec": 1140, "fn_array_spec": 1141, "geglu": 1144, "to_ivy_modul": 1147, "firstlayersiren": 1150, "glorotuniform": 1151, "Ones": 1153, "siren": 1154, "conv1dtranspos": 1159, "conv2dtranspos": 1161, "conv3dtranspos": 1163, "depthwiseconv2d": 1164, "lstm": 1166, "multiheadattent": 1168, "layernorm": 1172, "adam": 1174, "lamb": 1175, "lar": 1176, "sgd": 1178, "sequenti": [1179, 1180], "verbos": 1182, "cprint": 1183}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})