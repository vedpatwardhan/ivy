Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[794,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[375,0,0,"-"],creation_functions:[376,0,0,"-"],data_type_functions:[378,0,0,"-"],data_types:[382,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{zeros:[377,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[378,1,1,""],finfo:[380,2,1,""],iinfo:[381,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[378,3,1,""],bits:[378,3,1,""],eps:[378,3,1,""],max:[378,3,1,""],min:[378,3,1,""],smallest_normal:[378,3,1,""]},"ivy.functional.backends.numpy.core":{device:[411,0,0,"-"],general:[413,0,0,"-"],gradients:[449,0,0,"-"],image:[454,0,0,"-"],linalg:[458,0,0,"-"],logic:[461,0,0,"-"],math:[462,0,0,"-"],random:[464,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[412,1,1,""],clear_mem_on_dev:[411,2,1,""],dev:[411,2,1,""],dev_from_str:[411,2,1,""],dev_to_str:[411,2,1,""],gpu_is_available:[411,2,1,""],num_gpus:[411,2,1,""],to_dev:[411,2,1,""],tpu_is_available:[411,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[412,3,1,""],start:[412,3,1,""],stop:[412,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[413,2,1,""],arange:[414,2,1,""],argmax:[415,2,1,""],argmin:[416,2,1,""],array:[417,2,1,""],asarray:[413,2,1,""],astype:[413,2,1,""],cast:[418,2,1,""],ceil:[413,2,1,""],clip:[413,2,1,""],compile:[419,2,1,""],concatenate:[420,2,1,""],constant_pad:[413,2,1,""],container_types:[413,2,1,""],copy_array:[413,2,1,""],cumprod:[421,2,1,""],current_framework_str:[413,2,1,""],dtype:[422,2,1,""],dtype_bits:[423,2,1,""],dtype_from_str:[424,2,1,""],dtype_to_str:[425,2,1,""],equal:[413,2,1,""],flip:[426,2,1,""],floor:[413,2,1,""],floormod:[413,2,1,""],full:[427,2,1,""],gather:[428,2,1,""],gather_nd:[429,2,1,""],get_num_dims:[413,2,1,""],identity:[430,2,1,""],indices_where:[431,2,1,""],inplace_arrays_supported:[413,2,1,""],inplace_decrement:[432,2,1,""],inplace_increment:[433,2,1,""],inplace_update:[434,2,1,""],inplace_variables_supported:[413,2,1,""],is_array:[435,2,1,""],linear_resample:[436,2,1,""],linspace:[437,2,1,""],logspace:[438,2,1,""],matmul:[413,2,1,""],meshgrid:[413,2,1,""],multiprocessing:[413,2,1,""],one_hot:[439,2,1,""],ones:[440,2,1,""],ones_like:[441,2,1,""],round:[413,2,1,""],scatter_flat:[442,2,1,""],scatter_nd:[443,2,1,""],shape:[413,2,1,""],split:[444,2,1,""],squeeze:[445,2,1,""],to_list:[413,2,1,""],to_numpy:[413,2,1,""],to_scalar:[413,2,1,""],transpose:[446,2,1,""],unstack:[447,2,1,""],where:[413,2,1,""],zero_pad:[413,2,1,""],zeros_like:[448,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[450,2,1,""],is_variable:[451,2,1,""],stop_gradient:[452,2,1,""],variable:[453,2,1,""],variable_data:[449,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[455,2,1,""],gradient_image:[456,2,1,""],stack_images:[457,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[459,2,1,""],vector_to_skew_symmetric_matrix:[460,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[463,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[465,2,1,""],randint:[464,2,1,""],random_normal:[464,2,1,""],random_uniform:[464,2,1,""],seed:[464,2,1,""],shuffle:[464,2,1,""]},"ivy.functional.ivy":{array_api:[795,0,0,"-"],core:[821,0,0,"-"],nn:[1163,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[796,0,0,"-"],creation_functions:[797,0,0,"-"],data_type_functions:[799,0,0,"-"],data_types:[802,0,0,"-"],elementwise_functions:[803,0,0,"-"],function_and_method_signatures:[808,0,0,"-"],linear_algebra_extension:[809,0,0,"-"],linear_algebra_functions:[811,0,0,"-"],manipulation_functions:[812,0,0,"-"],searching_functions:[813,0,0,"-"],set_functions:[814,0,0,"-"],sorting_functions:[815,0,0,"-"],statistical_functions:[817,0,0,"-"],utility_functions:[818,0,0,"-"]},"ivy.functional.ivy.array_api.creation_functions":{zeros:[798,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[800,2,1,""],iinfo:[801,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[804,2,1,""],cos:[805,2,1,""],isfinite:[806,2,1,""],logical_not:[807,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[810,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[816,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[819,2,1,""],any:[820,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[822,0,0,"-"],compilation:[861,0,0,"-"],device:[863,0,0,"-"],dtype:[913,0,0,"-"],general:[937,0,0,"-"],gradients:[1037,0,0,"-"],image:[1053,0,0,"-"],linalg:[1060,0,0,"-"],logic:[1067,0,0,"-"],math:[1070,0,0,"-"],meta:[1087,0,0,"-"],multi_node:[1091,0,0,"-"],nest:[1135,0,0,"-"],random:[1147,0,0,"-"],reductions:[1154,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[823,2,1,""],builtin_add:[824,2,1,""],builtin_and:[825,2,1,""],builtin_bool:[826,2,1,""],builtin_contains:[827,2,1,""],builtin_deepcopy:[828,2,1,""],builtin_dir:[829,2,1,""],builtin_eq:[830,2,1,""],builtin_float:[831,2,1,""],builtin_floordiv:[832,2,1,""],builtin_ge:[833,2,1,""],builtin_getattr:[834,2,1,""],builtin_getattribute:[835,2,1,""],builtin_getitem:[836,2,1,""],builtin_gt:[837,2,1,""],builtin_int:[838,2,1,""],builtin_invert:[839,2,1,""],builtin_le:[840,2,1,""],builtin_lt:[841,2,1,""],builtin_mul:[842,2,1,""],builtin_ne:[843,2,1,""],builtin_neg:[844,2,1,""],builtin_or:[845,2,1,""],builtin_pos:[846,2,1,""],builtin_pow:[847,2,1,""],builtin_radd:[848,2,1,""],builtin_rand:[849,2,1,""],builtin_rfloordiv:[850,2,1,""],builtin_rmul:[851,2,1,""],builtin_ror:[852,2,1,""],builtin_rpow:[853,2,1,""],builtin_rsub:[854,2,1,""],builtin_rtruediv:[855,2,1,""],builtin_rxor:[856,2,1,""],builtin_setitem:[857,2,1,""],builtin_sub:[858,2,1,""],builtin_truediv:[859,2,1,""],builtin_xor:[860,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[862,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[863,1,1,""],DevClonedItem:[865,1,1,""],DevClonedIter:[866,1,1,""],DevClonedNest:[867,1,1,""],DevDistItem:[868,1,1,""],DevDistIter:[869,1,1,""],DevDistNest:[870,1,1,""],DevManager:[863,1,1,""],DevMapper:[872,1,1,""],DevMapperMultiProc:[873,1,1,""],MultiDev:[863,1,1,""],MultiDevItem:[875,1,1,""],MultiDevIter:[876,1,1,""],MultiDevNest:[877,1,1,""],Profiler:[878,1,1,""],clear_mem_on_dev:[879,2,1,""],default_device:[880,2,1,""],dev:[881,2,1,""],dev_clone:[882,2,1,""],dev_clone_array:[883,2,1,""],dev_clone_iter:[884,2,1,""],dev_clone_nest:[885,2,1,""],dev_dist:[886,2,1,""],dev_dist_array:[887,2,1,""],dev_dist_iter:[888,2,1,""],dev_dist_nest:[889,2,1,""],dev_from_str:[890,2,1,""],dev_to_str:[891,2,1,""],dev_unify:[892,2,1,""],dev_unify_array:[893,2,1,""],dev_unify_iter:[894,2,1,""],dev_unify_nest:[895,2,1,""],dev_util:[896,2,1,""],get_all_arrays_on_dev:[897,2,1,""],gpu_is_available:[898,2,1,""],num_arrays_on_dev:[899,2,1,""],num_cpu_cores:[900,2,1,""],num_gpus:[901,2,1,""],percent_used_mem_on_dev:[902,2,1,""],print_all_arrays_on_dev:[903,2,1,""],set_default_device:[904,2,1,""],set_split_factor:[905,2,1,""],split_factor:[906,2,1,""],split_func_call:[907,2,1,""],to_dev:[908,2,1,""],total_mem_on_dev:[909,2,1,""],tpu_is_available:[910,2,1,""],unset_default_device:[911,2,1,""],used_mem_on_dev:[912,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[863,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[863,3,1,""],da_tune_step:[863,3,1,""],dim_size:[863,3,1,""],ds_tune_step:[863,3,1,""],map:[863,3,1,""],repeated_config_check:[863,3,1,""],tune_step:[863,3,1,""],tuned:[863,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[872,3,1,""],map:[872,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[873,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[863,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[875,3,1,""],items:[875,3,1,""],keys:[875,3,1,""],shape:[875,3,1,""],values:[875,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[876,3,1,""],at_dev:[876,3,1,""],at_devs:[876,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[877,3,1,""],at_dev:[877,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[878,3,1,""],start:[878,3,1,""],stop:[878,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[913,1,1,""],DefaultFloatDtype:[913,1,1,""],DefaultIntDtype:[913,1,1,""],astype:[913,2,1,""],cast:[917,2,1,""],closest_valid_dtype:[918,2,1,""],convert_dtype:[919,2,1,""],default_dtype:[920,2,1,""],default_float_dtype:[921,2,1,""],default_int_dtype:[922,2,1,""],dtype:[923,2,1,""],dtype_bits:[924,2,1,""],dtype_from_str:[925,2,1,""],dtype_to_str:[926,2,1,""],invalid_dtype:[927,2,1,""],is_float_dtype:[928,2,1,""],is_int_dtype:[929,2,1,""],set_default_dtype:[930,2,1,""],set_default_float_dtype:[931,2,1,""],set_default_int_dtype:[932,2,1,""],unset_default_dtype:[933,2,1,""],unset_default_float_dtype:[934,2,1,""],unset_default_int_dtype:[935,2,1,""],valid_dtype:[936,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[913,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[913,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[913,3,1,""]},"ivy.functional.ivy.core.general":{"default":[962,2,1,""],abs:[938,2,1,""],all_equal:[939,2,1,""],arange:[940,2,1,""],arg_names:[941,2,1,""],argmax:[942,2,1,""],argmin:[943,2,1,""],array:[944,2,1,""],array_equal:[945,2,1,""],arrays_equal:[946,2,1,""],asarray:[937,2,1,""],assert_supports_inplace:[947,2,1,""],broadcast_to:[948,2,1,""],cache_fn:[949,2,1,""],ceil:[950,2,1,""],clip:[951,2,1,""],clip_matrix_norm:[952,2,1,""],clip_vector_norm:[953,2,1,""],concatenate:[954,2,1,""],constant_pad:[955,2,1,""],container_types:[956,2,1,""],copy_array:[957,2,1,""],cross:[958,2,1,""],cumprod:[959,2,1,""],cumsum:[960,2,1,""],current_framework_str:[961,2,1,""],einops_rearrange:[963,2,1,""],einops_reduce:[964,2,1,""],einops_repeat:[965,2,1,""],equal:[966,2,1,""],exists:[967,2,1,""],expand_dims:[968,2,1,""],flip:[969,2,1,""],floor:[970,2,1,""],floormod:[971,2,1,""],fourier_encode:[972,2,1,""],full:[973,2,1,""],gather:[974,2,1,""],gather_nd:[975,2,1,""],get_all_arrays_in_memory:[976,2,1,""],get_min_base:[977,2,1,""],get_min_denominator:[978,2,1,""],get_num_dims:[979,2,1,""],get_referrers_recursive:[980,2,1,""],has_nans:[981,2,1,""],identity:[982,2,1,""],indices_where:[983,2,1,""],inplace_arrays_supported:[984,2,1,""],inplace_decrement:[985,2,1,""],inplace_increment:[986,2,1,""],inplace_update:[987,2,1,""],inplace_variables_supported:[988,2,1,""],is_array:[989,2,1,""],isinf:[990,2,1,""],isnan:[991,2,1,""],linear_resample:[992,2,1,""],linspace:[993,2,1,""],logspace:[994,2,1,""],match_kwargs:[995,2,1,""],matmul:[996,2,1,""],maximum:[997,2,1,""],meshgrid:[998,2,1,""],minimum:[999,2,1,""],multiprocessing:[1000,2,1,""],num_arrays_in_memory:[1001,2,1,""],one_hot:[1002,2,1,""],ones:[1003,2,1,""],ones_like:[1004,2,1,""],print_all_arrays_in_memory:[1005,2,1,""],queue_timeout:[1006,2,1,""],repeat:[1007,2,1,""],reshape:[1008,2,1,""],round:[1009,2,1,""],scatter_flat:[1010,2,1,""],scatter_nd:[1011,2,1,""],set_min_base:[1012,2,1,""],set_min_denominator:[1013,2,1,""],set_queue_timeout:[1014,2,1,""],set_tmp_dir:[1015,2,1,""],shape:[1016,2,1,""],shape_to_tuple:[1017,2,1,""],split:[1018,2,1,""],squeeze:[1019,2,1,""],stable_divide:[1020,2,1,""],stable_pow:[1021,2,1,""],stack:[1022,2,1,""],supports_inplace:[1023,2,1,""],swapaxes:[1024,2,1,""],tile:[1025,2,1,""],tmp_dir:[1026,2,1,""],to_list:[1027,2,1,""],to_numpy:[1028,2,1,""],to_scalar:[1029,2,1,""],transpose:[1030,2,1,""],try_else_none:[1031,2,1,""],unstack:[1032,2,1,""],value_is_nan:[1033,2,1,""],where:[1034,2,1,""],zero_pad:[1035,2,1,""],zeros_like:[1036,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1037,1,1,""],adam_step:[1039,2,1,""],adam_update:[1040,2,1,""],execute_with_gradients:[1041,2,1,""],gradient_descent_update:[1042,2,1,""],is_variable:[1043,2,1,""],lamb_update:[1044,2,1,""],lars_update:[1045,2,1,""],optimizer_update:[1046,2,1,""],set_with_grads:[1047,2,1,""],stop_gradient:[1048,2,1,""],unset_with_grads:[1049,2,1,""],variable:[1050,2,1,""],variable_data:[1051,2,1,""],with_grads:[1052,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1037,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1054,2,1,""],float_img_to_uint8_img:[1055,2,1,""],gradient_image:[1056,2,1,""],random_crop:[1057,2,1,""],stack_images:[1058,2,1,""],uint8_img_to_float_img:[1059,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1061,2,1,""],inv:[1062,2,1,""],matrix_norm:[1063,2,1,""],pinv:[1064,2,1,""],svd:[1065,2,1,""],vector_to_skew_symmetric_matrix:[1066,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1068,2,1,""],logical_or:[1069,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1071,2,1,""],acosh:[1072,2,1,""],asin:[1073,2,1,""],asinh:[1074,2,1,""],atan2:[1076,2,1,""],atan:[1075,2,1,""],atanh:[1077,2,1,""],cosh:[1078,2,1,""],divide:[1079,2,1,""],erf:[1080,2,1,""],exp:[1081,2,1,""],log:[1082,2,1,""],sin:[1083,2,1,""],sinh:[1084,2,1,""],tan:[1085,2,1,""],tanh:[1086,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1088,2,1,""],maml_step:[1089,2,1,""],reptile_step:[1090,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1091,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1136,2,1,""],copy_nest:[1137,2,1,""],index_nest:[1138,2,1,""],map:[1139,2,1,""],map_nest_at_index:[1140,2,1,""],map_nest_at_indices:[1141,2,1,""],multi_index_nest:[1142,2,1,""],nested_indices_where:[1143,2,1,""],nested_map:[1144,2,1,""],set_nest_at_index:[1145,2,1,""],set_nest_at_indices:[1146,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1148,2,1,""],randint:[1149,2,1,""],random_normal:[1150,2,1,""],random_uniform:[1151,2,1,""],seed:[1152,2,1,""],shuffle:[1153,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1155,2,1,""],reduce_max:[1156,2,1,""],reduce_mean:[1157,2,1,""],reduce_min:[1158,2,1,""],reduce_prod:[1159,2,1,""],reduce_std:[1160,2,1,""],reduce_sum:[1161,2,1,""],reduce_var:[1162,2,1,""]},"ivy.functional.ivy.nn":{activations:[1164,0,0,"-"],layers:[1172,0,0,"-"],losses:[1185,0,0,"-"],norms:[1189,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1165,2,1,""],leaky_relu:[1166,2,1,""],relu:[1167,2,1,""],sigmoid:[1168,2,1,""],softmax:[1169,2,1,""],softplus:[1170,2,1,""],tanh:[1171,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1173,2,1,""],conv1d_transpose:[1174,2,1,""],conv2d:[1175,2,1,""],conv2d_transpose:[1176,2,1,""],conv3d:[1177,2,1,""],conv3d_transpose:[1178,2,1,""],depthwise_conv2d:[1179,2,1,""],dropout:[1180,2,1,""],linear:[1181,2,1,""],lstm_update:[1182,2,1,""],multi_head_attention:[1183,2,1,""],scaled_dot_product_attention:[1184,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1186,2,1,""],cross_entropy:[1187,2,1,""],sparse_cross_entropy:[1188,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1190,2,1,""]},"ivy.graph_compiler":{compiler:[1191,0,0,"-"],globals:[1194,0,0,"-"],graph:[1197,0,0,"-"],helpers:[1199,0,0,"-"],op_logging:[1200,0,0,"-"],param:[1201,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1192,2,1,""],show_graph:[1193,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1195,2,1,""],log_global_inference_rel_times:[1196,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1197,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1197,3,1,""],add_fn_to_dict:[1197,3,1,""],add_param:[1197,3,1,""],compiled:[1197,3,1,""],connect:[1197,3,1,""],debug_info:[1197,3,1,""],get_param:[1197,3,1,""],get_param_recursive:[1197,3,1,""],include_generators:[1197,3,1,""],increment_param_count:[1197,3,1,""],log_all_ops:[1197,3,1,""],params_all_empty:[1197,3,1,""],save_debug_info:[1197,3,1,""],set_param:[1197,3,1,""],show:[1197,3,1,""],show_debug_info:[1197,3,1,""],update_inference_times:[1197,3,1,""],with_array_caching:[1197,3,1,""]},"ivy.graph_compiler.param":{Param:[1201,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1201,3,1,""],count:[1201,3,1,""],depth:[1201,3,1,""],get:[1201,3,1,""],is_var:[1201,3,1,""],ptype:[1201,3,1,""],set:[1201,3,1,""],set_count:[1201,3,1,""],shape:[1201,3,1,""]},"ivy.stateful":{activations:[1206,0,0,"-"],converters:[1209,0,0,"-"],initializers:[1211,0,0,"-"],layers:[1220,0,0,"-"],module:[1232,0,0,"-"],norms:[1234,0,0,"-"],optimizers:[1236,0,0,"-"],sequential:[1242,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1207,1,1,""],GELU:[1208,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1207,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1208,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1210,2,1,""]},"ivy.stateful.initializers":{Constant:[1211,1,1,""],FirstLayerSiren:[1213,1,1,""],GlorotUniform:[1214,1,1,""],KaimingNormal:[1211,1,1,""],Ones:[1216,1,1,""],Siren:[1217,1,1,""],Uniform:[1211,1,1,""],Zeros:[1219,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1211,3,1,""],create_variables:[1211,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1213,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1214,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1211,3,1,""],create_variables:[1211,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1216,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1217,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1211,3,1,""],create_variables:[1211,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1219,3,1,""]},"ivy.stateful.layers":{Conv1D:[1221,1,1,""],Conv1DTranspose:[1222,1,1,""],Conv2D:[1223,1,1,""],Conv2DTranspose:[1224,1,1,""],Conv3D:[1225,1,1,""],Conv3DTranspose:[1226,1,1,""],DepthwiseConv2D:[1227,1,1,""],Dropout:[1228,1,1,""],LSTM:[1229,1,1,""],Linear:[1230,1,1,""],MultiHeadAttention:[1231,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1221,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1222,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1223,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1224,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1225,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1226,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1227,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1228,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1229,3,1,""],get_initial_state:[1229,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1230,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1231,3,1,""]},"ivy.stateful.module":{Module:[1233,1,1,""]},"ivy.stateful.module.Module":{__init__:[1233,3,1,""],build:[1233,3,1,""],build_mode:[1233,3,1,""],built:[1233,3,1,""],check_submod_rets:[1233,3,1,""],compile_graph:[1233,3,1,""],compile_on_next_step:[1233,3,1,""],get_mod_key:[1233,3,1,""],mod_depth:[1233,3,1,""],mod_height:[1233,3,1,""],mod_with_top_mod_key_chain:[1233,3,1,""],save_weights:[1233,3,1,""],show_graph:[1233,3,1,""],show_mod_in_top_mod:[1233,3,1,""],show_structure:[1233,3,1,""],show_v_in_top_v:[1233,3,1,""],sub_mods:[1233,3,1,""],track_submod_call_order:[1233,3,1,""],track_submod_rets:[1233,3,1,""],v_with_top_v_key_chains:[1233,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1235,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1235,3,1,""]},"ivy.stateful.optimizers":{Adam:[1237,1,1,""],LAMB:[1238,1,1,""],LARS:[1239,1,1,""],Optimizer:[1240,1,1,""],SGD:[1241,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1237,3,1,""],set_state:[1237,3,1,""],state:[1237,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1238,3,1,""],set_state:[1238,3,1,""],state:[1238,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1239,3,1,""],set_state:[1239,3,1,""],state:[1239,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1240,3,1,""],compile_graph:[1240,3,1,""],compile_on_next_step:[1240,3,1,""],set_state:[1240,3,1,""],show_graph:[1240,3,1,""],step:[1240,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1241,3,1,""],set_state:[1241,3,1,""],state:[1241,3,1,""]},"ivy.stateful.sequential":{Sequential:[1243,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1243,3,1,""]},"ivy.verbosity":{cprint:[1248,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1247,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1236,1237,1238],"02886":1203,"100":[1091,1203,1245],"2021":1203,"2102":1203,"360":[803,805,1070,1083,1085],"754":[799,800],"999":[1037,1039,1040,1044,1236,1237,1238],"abstract":[863,878,1203,1236,1240],"boolean":[40,41,803,804,807,863,898,910,913,927,936,937,939,945,946,981,983,984,988,989,990,991,1023,1033,1037,1043,1067,1068,1069,1087,1088,1089,1091],"break":43,"case":[15,18,19,40,41,42,43,809,810,863,902,909,912,937,940,1008,1010,1011,1060,1063,1091,1135,1138,1142,1203,1220,1231,1232,1233,1236,1240,1249],"catch":[937,962],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,378,411,412,799,801,863,865,866,867,868,869,870,872,873,875,876,877,878,890,891,913,937,941,995,1003,1037,1051,1091,1135,1137,1144,1185,1187,1188,1197,1201,1203,1206,1207,1208,1209,1210,1211,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1249],"default":[15,18,19,40,41,42,43,797,798,809,810,815,816,818,819,820,861,862,863,872,873,880,881,885,886,887,888,889,892,893,894,895,902,905,906,907,912,913,920,921,922,923,937,939,940,942,943,952,953,954,955,958,959,960,969,972,973,974,979,981,982,992,994,995,998,1000,1003,1006,1007,1010,1011,1014,1016,1018,1020,1021,1030,1032,1033,1037,1040,1042,1043,1044,1045,1046,1048,1052,1060,1063,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1169,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243],"final":[40,41,937,972,993,994,1091,1220,1231,1246],"float":[40,41,42,43,797,798,799,800,809,810,822,847,863,872,873,896,902,905,909,912,913,921,928,937,940,952,953,955,972,973,977,978,994,1012,1013,1014,1020,1021,1037,1039,1040,1042,1044,1045,1046,1053,1055,1059,1070,1079,1087,1088,1089,1090,1091,1147,1150,1151,1164,1166,1172,1180,1183,1184,1185,1186,1187,1188,1189,1190,1220,1228,1231,1234,1235,1236,1237,1238,1239,1240,1241],"function":[15,40,41,43,377,380,381,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,798,800,801,804,805,806,807,809,810,816,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1203,1206,1207,1208,1236,1239,1240,1241,1245,1246,1249],"import":[43,1203,1246,1249],"int":[40,41,42,43,376,377,464,797,798,799,800,801,809,810,815,816,818,819,820,822,847,861,862,863,885,886,887,888,889,892,893,894,895,900,901,907,913,922,924,929,937,942,943,948,954,955,959,960,963,964,965,968,969,972,973,974,979,982,992,993,994,1002,1003,1007,1008,1010,1011,1016,1017,1018,1019,1022,1024,1025,1030,1032,1035,1037,1039,1040,1044,1053,1057,1058,1060,1063,1087,1088,1089,1090,1091,1135,1144,1147,1148,1149,1151,1152,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1183,1185,1187,1188,1189,1190,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1234,1235],"long":[1172,1182],"new":[40,41,43,464,797,798,913,917,937,938,948,963,964,965,968,972,973,974,975,1003,1008,1010,1011,1012,1013,1020,1021,1022,1037,1040,1042,1044,1045,1046,1053,1055,1057,1059,1070,1072,1074,1077,1078,1084,1086,1091,1135,1145,1146,1147,1148,1189,1190,1203,1209,1210,1220,1230,1234,1235,1236,1237,1238,1239,1240,1241,1246,1249],"public":[937,956],"return":[15,16,17,18,19,40,41,42,43,464,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,820,822,847,861,862,863,872,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,902,906,907,908,909,910,912,913,917,918,919,920,921,922,923,924,925,926,927,928,929,936,937,938,939,940,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1007,1008,1009,1010,1011,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1203,1209,1210,1220,1229,1230,1236,1240,1245,1246,1249],"short":[1172,1182,1203,1249],"static":[40,41,861,862],"super":1091,"true":[40,41,42,413,419,449,452,464,465,803,806,809,810,815,816,818,819,820,861,862,863,937,939,947,949,967,972,981,983,1033,1034,1037,1040,1042,1043,1044,1045,1046,1048,1060,1063,1087,1088,1089,1090,1091,1135,1136,1143,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1172,1180,1185,1186,1187,1188,1191,1192,1193,1197,1220,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241],"try":[40,41,937,1031,1091],"var":[40,41,1087,1088,1089,1249],"while":[40,41,42,1091],AND:[803,804,818,819,1067,1068],But:1249,For:[43,937,940,951,1022,1037,1043,1051,1070,1071,1203,1209,1210,1246,1249],Its:[1070,1075],NOT:[803,807],One:[40,41,937,964,1008,1147,1149,1249],Ones:[1203,1211],Such:[937,956],That:1246,The:[15,16,17,18,19,40,41,42,43,803,804,805,806,815,816,818,819,820,822,847,861,862,863,872,873,879,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,902,905,906,907,908,909,912,913,917,918,919,924,925,926,927,936,937,940,944,945,948,949,952,953,954,955,957,958,961,962,966,969,972,974,975,982,985,986,987,989,992,994,996,998,1000,1003,1004,1007,1008,1010,1011,1012,1013,1014,1017,1018,1019,1020,1021,1022,1025,1033,1036,1037,1039,1040,1042,1044,1045,1046,1048,1051,1053,1055,1057,1059,1060,1063,1065,1070,1071,1073,1075,1079,1080,1081,1082,1083,1085,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1203,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1246,1249],There:[43,1203,1246],These:[43,1203],Used:[1135,1136,1143,1232,1233],Using:[1203,1204,1249],With:[40,41,809,810,1060,1063,1154,1156,1157,1158,1159,1160,1161,1162,1203,1245,1249],__array__:[937,944],__call__:[1220,1231,1232,1233],__del__:1091,__dict__:[1091,1246],__enter__:1091,__exit__:1091,__getitem__:1091,__getstate__:1091,__init__:[40,41,42,43,59,60,80,201,378,379,411,412,492,612,863,864,871,872,873,874,875,876,877,878,913,914,915,916,1037,1038,1091,1095,1102,1197,1198,1201,1202,1203,1206,1207,1208,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1249],__iter__:1091,__len__:1091,__next__:1091,__pow__:43,__repr__:1091,_assign_vari:1245,_axi:1091,_base:[1135,1136,1143],_compute_node_da_ratio:1091,_compute_node_strs_da:1091,_concat_unify_arrai:1091,_counter:1091,_cur_framework:[43,1091],_da_direct:1091,_da_directions_flip:1091,_da_step_tim:1091,_da_tim:1091,_da_tune_count:1091,_data:1091,_delta_da_dim_s:1091,_delta_sf:1091,_dict:1091,_dim_siz:1091,_first_da_tune_step:1091,_first_ns_tune_step:1091,_fn:1091,_forward:[1203,1245],_get_kalman_param:1249,_get_prior:1249,_get_some_model:1249,_handle_flat_arrays_in_out:43,_index:[1135,1136,1143],_input_queu:1091,_length:1091,_max_depth:1091,_max_node_dim_step_ratio:1091,_max_node_dim_step_s:1091,_max_split_factor_step_s:1091,_mean_unify_arrai:1091,_min_bas:[937,1021,1189,1190,1234,1235],_min_denomin:[937,1020],_min_node_dim_s:1091,_min_sf_tune_step:1091,_min_unit_node_tune_step:1091,_model:1249,_native_wrapp:43,_node_mapp:1091,_node_percent_mem:1091,_node_str:1091,_node_str_da_ratio:1091,_node_strs_da:1091,_node_strs_kei:1091,_node_strs_n:1091,_node_util:1091,_ns_step_tim:1091,_ns_time:1091,_ns_tune_count:1091,_num_nod:1091,_num_work:1091,_observed_config:1091,_output_queu:1091,_paramet:1245,_percent_mem_inc_per_sf:1091,_percent_mem_inc_per_unit_da_dim:1091,_percent_util_inc_per_unit_da_dim:1091,_ret_fn:1091,_safety_factor:1091,_save_dir:1091,_shift_da_split:1091,_shift_n:1091,_slice:1091,_step:[1236,1240],_sum_unify_arrai:1091,_timeout:1091,_tune:1091,_tune_da:1091,_tune_n:1091,_tune_step:1091,_unit_da_tune_count:1091,_unroll_step:1249,_with_node_mappig:1091,_worker:1091,_worker_class:1091,_worker_fn:1091,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,863,872,878,1091,1232,1233,1236,1240],abil:1203,abl:[40,41],about:[799,800,801],abov:[43,1147,1149],above_height:[40,41],abs:[277,413,531,652,937,1091],absolut:[40,41,937,938],abstractmethod:1091,accept:[15,43,1203],access:[40,41,1246],accord:[40,41,799,800,937,955,974,1010,1011,1030,1035],accordingli:[818,819,820],accur:[59,378,411,412,863,875,876,877,878,913,1037,1197,1201,1211,1213,1214,1216,1217,1219],aco:[743,1070],acosh:[743,1070],across:[40,41,863,872,873,882,883,885,886,887,888,889,895,905,906,937,942,943,945,946,1091,1135,1139],activ:[1165,1166,1167,1168,1169,1170,1171,1203,1207,1208],actual:1246,adam:[1037,1039,1040,1044,1203,1236,1238,1245],adam_step:1037,adam_upd:1037,adapt:[1037,1045,1236,1239],add:[40,41,43,1091,1185,1186,1187,1188,1189,1190,1203,1234,1235,1246],add_fn_to_dict:1197,add_param:1197,added:[43,937,1020,1021,1242,1243],adding:[937,948],addit:[40,41,43,937,963,964,965,1189,1190,1220,1230],adher:43,adjac:[937,940],adopt:[937,956],affect:[937,940],affin:[1234,1235],after:[937,992,1037,1040,1041,1042,1044,1045,1046,1053,1054,1189,1190,1236,1237,1238,1239,1240,1241,1249],after_1:[937,955,1035],after_n:[937,955,1035],again:43,against:[40,41,809,810,1060,1063,1154,1156,1157,1158,1159,1160,1161,1162],agnost:[43,1203,1245,1246],aim:1249,algebra:[458,1060],algorithm:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227,1249],align:[40,41,43,937,948],aliv:[863,897,899,903,937,976,1001,1005],all:[15,16,17,18,19,40,41,43,99,219,398,511,631,818,861,862,863,872,897,903,937,938,939,945,946,956,969,976,982,1005,1019,1087,1088,1089,1090,1091,1135,1136,1137,1143,1144,1147,1148,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1182,1203,1246,1249],all_depth:[40,41],all_equ:937,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1135,all_tru:[40,41],alloc:[863,1091],allow:[937,993,994,995,1232,1233],allow_dupl:[937,995],alon:[863,902,912,1091,1203],along:[40,41,43,464,809,810,815,816,818,819,820,863,886,887,888,889,892,893,894,895,907,937,954,959,960,969,974,992,993,994,1007,1018,1022,1025,1032,1060,1063,1087,1088,1089,1090,1091,1147,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162],alongsid:[1245,1246],alpha:[1164,1166],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,863,1091],also:[40,41,43,937,940,1037,1040,1087,1088,1089,1090,1135,1136,1137,1143,1144,1172,1181,1220,1230,1245],altern:1245,alwai:[40,41,43,1037,1043,1048],among:[40,41],amount:[863,909,1091,1203],angl:[1070,1071,1076],ani:[15,16,17,18,19,40,41,43,99,219,398,511,631,818,861,862,863,865,868,872,873,875,884,885,888,889,894,937,939,940,944,962,963,964,965,966,967,981,989,995,1020,1021,1037,1041,1091,1135,1136,1139,1143,1144,1145,1146,1147,1151,1203,1209,1210,1232,1233,1245,1246,1249],anoth:[40,41,913,919,1203],another_backend:43,anyth:[43,1249],anywai:43,apart:43,api:[1203,1204],appear:[937,968],append:[40,41,1091],appli:[15,18,19,40,41,803,807,937,963,964,965,1037,1044,1045,1060,1065,1067,1068,1069,1087,1088,1089,1135,1139,1142,1144,1164,1165,1166,1167,1168,1169,1170,1171,1172,1181,1183,1184,1189,1190,1203,1206,1207,1208,1234,1235],applic:[1135,1139,1144,1172,1183,1184,1203,1249],approxim:[43,822,847,1164,1165],arang:[119,277,413,464,531,652,937,993,994],arbitrari:[40,41,863,892,893,895,1091],arc:[1070,1076],arcco:[1070,1071],arctan:[1070,1075],area:1203,arg:[15,16,17,40,41,43,59,63,863,872,885,889,895,907,937,963,964,965,1011,1091,1191,1192,1193,1197,1209,1210,1232,1233],arg_nam:937,arg_stateful_idx:[1191,1192,1193,1197,1232,1233],argmax:[119,413,531,652,937],argmin:[119,413,531,652,937],args_clon:1091,args_dist:1091,args_to_ivi:[15,1203],args_to_n:[15,1203],args_uni:1091,argsort:[96,216,395,508,628,815],argument:[15,16,17,18,19,40,41,42,43,59,63,861,862,863,872,873,885,889,895,937,940,941,949,962,995,1011,1070,1071,1091,1135,1139,1209,1210,1232,1233],aris:[1203,1249],arithmet:[43,1154,1157,1160,1162],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:464,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,119,277,413,464,531,652,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,820,847,863,881,882,883,886,887,888,889,892,893,894,895,897,899,903,907,908,913,917,923,928,929,937,938,939,940,942,943,945,946,947,948,950,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,972,973,974,975,976,979,981,982,983,984,985,986,987,989,990,991,992,993,994,996,997,998,999,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1016,1018,1019,1022,1023,1024,1025,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1039,1040,1043,1044,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1135,1137,1144,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1203,1204,1220,1228,1229,1231,1236,1240,1245,1246],arrang:[937,963],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,376,377,378,380,381,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,820],array_builtin:[43,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860],array_equ:[277,652,937],array_lik:[464,937,944],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,937],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1203],arraywithgener:[22,1203],arraywithgradi:[24,1203],arraywithimag:[26,1203],arraywithlinalg:[28,1203],arraywithlog:[30,1203],arraywithmath:[32,1203],arraywithmeta:[34,1203],arraywithrandom:[36,1203],arraywithreduct:[38,1203],arriv:[40,41,42],articl:1203,arxiv:1203,as_arrai:[40,41,937,979,1016],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[411,413,422,863,881,913,920,921,922,923],as_tensor:413,as_vari:[40,41],as_zero:[40,41],asarrai:[413,937],asin:[743,1070],asinh:[743,1070],aspect:[1053,1058],assert:[40,41,937,947,1091],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:937,associ:[43,1060,1066],assum:[1246,1249],astyp:[413,913],asynchron:[40,41,42],at_dev:[40,42,863,876,877],at_kei:[40,41],at_key_chain:[40,41],at_nod:1091,atan2:[743,1070],atan:[743,1070],atanh:[743,1070],attent:[1172,1183,1184,1220,1231],attribut:[0,6,40,41,799,800,801,937,1004,1036],audienc:[1203,1246],author:1203,avail:[40,41,863,898,900,901,910,937,964,1091],averag:[1037,1039,1040,1044,1087,1088,1089,1154,1157],average_across_step:[1087,1088,1089],avoid:[863,1091,1246],axes:[40,41,43,413,446,458,459,809,810,818,819,820,863,907,937,942,943,955,968,969,1024,1030,1035,1060,1063,1091,1154,1156,1157,1158,1159,1160,1161,1162],axes_length:[40,41,937,963,964,965],axi:[40,41,413,415,416,420,421,426,428,436,437,438,444,445,447,809,810,815,816,818,819,820,863,865,868,875,886,887,888,889,892,893,894,895,907,937,942,943,954,955,958,959,960,968,969,974,992,993,994,1007,1018,1019,1022,1024,1025,1032,1035,1091,1147,1153,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1185,1187,1188],axis0:[40,41,937,1024],axis1:[40,41,937,1024],back:[1232,1233,1236,1240],backend:[15,17,19,40,41,376,377,378,380,381,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,863,898,901,910,913,919,927,936,937,984,988,1037,1040,1042,1044,1045,1046,1051,1091,1203,1204,1209,1210,1236,1237,1238,1239,1240,1241,1245,1246,1249],background:[1203,1246],backprop:1249,backward:[818,819,820,1245],band:[937,972],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,378,411,412,413,438,822,847,863,865,866,867,868,869,870,872,873,875,876,877,878,913,937,977,994,1012,1021,1037,1091,1154,1155,1197,1201,1203,1206,1207,1208,1211,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1249],batch:[40,41,863,905,906,937,969,972,982,1053,1057,1060,1065,1087,1088,1089,1090,1091,1172,1181,1189,1190,1234,1235],batch_shap:[413,426,430,937,969,982,1002,1053,1054,1055,1056,1057,1058,1059,1060,1066,1147,1148,1172,1182,1183,1184,1220,1229],batch_siz:[464,465,1091,1147,1148,1172,1173,1174,1175,1176,1177,1178,1179],bayesian:1249,becaus:[43,937,940],becom:[937,951,1070,1076,1249],been:[937,963,964,965,1147,1148],befor:[40,41,43,863,907,1087,1088,1089,1091,1135,1144,1154,1156,1157,1158,1159,1160,1161,1162,1172,1183,1184,1249],before_1:[937,955,1035],before_n:[937,955,1035],begin:[1135,1136,1143,1246],behaviour:[43,1249],behind:[1037,1040,1042,1044,1045,1046,1203],being:[40,41,43,937,940,1006,1014,1091],belong:[40,41],below:[43,1203,1246,1249],below_depth:[40,41],benefit:1203,bernoul:[1172,1180,1220,1228],best:[937,995,1203],beta1:[1037,1039,1040,1044,1236,1237,1238],beta2:[1037,1039,1040,1044,1236,1237,1238],beta:[1189,1190],between:[40,41,42,799,800,937,940,1135,1139,1147,1149,1185,1187,1188,1236,1238],bia:[1172,1181,1182,1220,1221,1222,1223,1224,1225,1226,1227,1230],bias_initi:[1220,1221,1222,1223,1224,1225,1226,1227,1230],bilinear:[1053,1054],bilinear_resampl:[157,335,454,577,729,1053],bilinearli:[1053,1054],binari:[803,804,1185,1186],binary_cross_entropi:1185,bit:[378,799,800,801,913,924,1053,1055,1059,1203],bitwis:[803,804],bitwise_and:[84,205,383,496,616,803],bitwise_oper:[0,7,8],block:[1203,1246],bool:[15,18,19,40,41,42,43,803,806,809,810,815,816,818,819,820,861,862,863,881,894,898,902,907,910,912,913,923,937,939,945,946,959,962,966,967,972,979,981,989,995,1016,1018,1032,1033,1034,1037,1040,1041,1042,1043,1044,1045,1046,1048,1060,1063,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1172,1180,1209,1210,1220,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241],both:[43,937,958],bottom:1203,boundari:[40,41,1147,1151],branch:[861,862],brittl:43,broadcast:[40,41,43,803,804,809,810,818,819,820,822,847,937,948,966,997,998,999,1007,1060,1063,1070,1076,1079,1154,1156,1157,1158,1159,1160,1161,1162],broadcast_to:[277,652,937],build:[1091,1203,1220,1231,1232,1233],build_mod:[1220,1231,1232,1233],builder:1203,built:[863,937,940,1091,1220,1231,1232,1233],builtin:43,builtin_ab:[232,822],builtin_add:[232,822],builtin_and:[232,822],builtin_bool:[232,822],builtin_contain:[232,822],builtin_deepcopi:[232,822],builtin_dir:[232,822],builtin_eq:[232,822],builtin_float:[232,822],builtin_floordiv:[232,822],builtin_g:[232,822],builtin_getattr:[232,822],builtin_getattribut:[232,822],builtin_getitem:[232,822],builtin_gt:[232,822],builtin_int:[232,822],builtin_invert:[232,822],builtin_l:[232,822],builtin_lt:[232,822],builtin_mul:[232,822],builtin_n:[232,822],builtin_neg:[232,822],builtin_or:[232,822],builtin_po:[232,822],builtin_pow:[43,232,822],builtin_radd:[232,822],builtin_rand:[232,822],builtin_rfloordiv:[232,822],builtin_rmul:[232,822],builtin_ror:[232,822],builtin_rpow:[232,822],builtin_rsub:[232,822],builtin_rtruediv:[232,822],builtin_rxor:[232,822],builtin_setitem:[232,822],builtin_some_op:43,builtin_sub:[232,822],builtin_truediv:[232,822],builtin_xor:[232,822],bypass:1246,cach:[863,879,937,949],cache_fn:937,calcul:[40,41,42,43,822,847,1070,1079],call:[43,863,907,937,1006,1014,1031,1037,1041,1091,1135,1136,1139,1143,1220,1231,1232,1233,1236,1240,1246,1249],callabl:[40,41,861,862,863,872,873,907,937,949,962,964,995,1031,1087,1088,1089,1090,1091,1135,1139,1140,1141,1143,1144,1172,1183],can:[43,863,905,906,907,937,1008,1053,1055,1091,1203,1245,1246,1249],cancel_join_thread:1091,captur:1203,cast:[40,41,119,277,413,531,652,913,937,954,1053,1055,1059],catch_except:[937,962],categori:43,ceil:[277,413,652,937,940],cell:[1172,1182,1220,1229],certain:[40,41,937,940,993,994],chain:[40,41,1087,1088,1089,1242,1243],chang:[863,937,1008,1091,1135,1137,1144,1203,1245],channel:[937,972,1053,1055,1056,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230],check:[15,16,17,18,19,40,41,863,902,912,913,918,927,936,937,947,967,981,989,1023,1033,1037,1043,1091,1135,1136,1143,1203,1246],check_nest:[1135,1143],check_shap:[40,41],check_submod_ret:[1232,1233],check_typ:[40,41],choic:[1203,1246],choleski:[733,1060],choos:[937,1034,1070,1076,1203],choose_random_framework:59,chosen:[40,41,937,940,1034],chunk:[863,905,906,907,1091],chunk_siz:[863,907,1091],circl:[1070,1071,1073],clark:1203,clear:[863,879,1091],clear_framework_stack:59,clear_mem_on_dev:[411,644,863],click:1203,clip:[40,41,277,413,652,937,952,953,997,999,1203],clip_matrix_norm:937,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,937],clipped_delta:1091,clone:[40,41,863,882,883,884,885,1091],clone_arrai:1091,clone_it:1091,clone_nest:1091,clonedit:1091,cloneditem:1091,clonednest:1091,close:[43,1053,1058,1070,1073,1091,1249],closest:[913,918],closest_valid_dtyp:913,code:[40,41,42,43,464,1203,1204,1245,1246],codebas:[863,905,906,1091,1203,1246,1249],collect:[15,40,41,411,413,449,454,458,461,462,464,822,861,863,913,937,1037,1053,1060,1067,1070,1091,1135,1147,1154,1164,1172,1185,1189,1206,1220,1234,1236],color:[40,41,42,1247,1248],column:[937,982],combin:[40,41,42,1053,1058,1203,1249],combined_batch_s:1091,come:1246,command:1203,commit:1249,common:[40,41,1070,1076],common_key_chain:[40,41],commun:[1203,1246],compar:[40,41,937,939,945,946],comparison_oper:[0,9,10],compat:[43,803,804,818,819,820,822,847,937,966,1008,1070,1079,1203,1249],compil:[277,413,652,1192,1193,1197,1203,1232,1233,1236,1237,1238,1239,1240,1241],compile_graph:[1191,1203,1232,1233,1236,1240],compile_on_next_step:[1232,1233,1236,1237,1238,1239,1240,1241],complet:[40,41,1091],complex:[1246,1249],compon:[937,958],composit:43,comput:[40,41,803,804,805,807,809,810,863,907,937,952,953,959,960,966,996,1037,1039,1040,1041,1042,1044,1045,1046,1048,1050,1053,1056,1060,1061,1062,1063,1064,1067,1068,1069,1070,1071,1073,1075,1076,1080,1081,1082,1083,1085,1135,1139,1154,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1181,1183,1185,1186,1187,1188],concat:[40,41,863,892,893,894,895,907,937,972,1091],concaten:[40,41,119,277,413,531,652,937,972,1091,1203],concatten:[40,41,863,892,893,894,895,907,1091],condit:[413,861,862,937,1034,1135,1143],conditon:[1135,1143],config:[40,41,1091],config_list:1091,configur:[40,41],conjunct:1246,connect:[1197,1220,1230,1231],consid:[40,41,809,810,1245,1249],consist:[40,41,863,895,1091,1154,1155,1232,1233,1246],constant:[863,872,873,937,955,1091,1135,1139,1185,1186,1187,1188,1189,1190,1211,1212,1216,1219,1232,1233,1234,1235,1246],constant_kwarg:1091,constant_pad:[277,413,531,652,937],constitu:[40,41],construct:[937,1025,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245],constructor:[40,41,42,937,941,1242,1243],consum:[863,1091],cont_feat_dim:[1172,1183],contaienr:[40,41],contain:[15,18,19,42,43,797,798,803,804,806,815,816,818,819,820,822,847,863,882,886,907,913,917,937,938,942,943,951,952,953,956,966,981,997,999,1009,1020,1021,1037,1039,1040,1042,1044,1045,1046,1070,1079,1087,1088,1089,1090,1091,1147,1148,1154,1156,1157,1158,1160,1162,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[413,652,937],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[413,937,1000,1172,1183,1220,1231],context_dim:[1220,1231],contextmanag:[59,60],continu:[43,1091,1246],contract:[40,41,1154,1155],contribut:[1203,1204],contributor:1203,control:1203,conv1d:[187,365,478,786,1172,1203,1220],conv1d_transpos:[187,365,478,786,1172],conv1dtranspos:[1203,1220],conv2d:[187,365,478,602,786,1172,1203,1220],conv2d_transpos:[187,365,478,786,1172],conv2dtranspos:[1203,1220],conv3d:[187,365,478,602,786,1172,1203,1220],conv3d_transpos:[187,365,478,786,1172],conv3dtranspos:[1203,1220],convent:[40,41,1154,1155],conver:[863,879,890,902,909,912,1091],convers:[16,17,18,19,40,41,1091,1203],convert:[15,16,17,18,19,40,41,43,863,890,891,913,919,925,926,937,1017,1028,1029,1053,1055,1059,1060,1066,1091,1135,1137,1144,1203,1210],convert_dtyp:913,convolut:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],cool:43,cooler:43,coordin:[937,998,1070,1071,1073,1076],copi:[40,41,464,937,957,1091,1135,1137],copy_arrai:[413,652,937],copy_nest:1135,core:[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1203],correct:[43,1203,1246],correctli:[40,41,809,810,1060,1063,1070,1076,1154,1156,1157,1158,1159,1160,1161,1162],correspond:[40,41,43,822,847,937,954,1147,1148],cos:[84,383,496,616,803,937,972,1070,1071,1085,1246],cosh:[743,1070],cosin:[803,805,1070,1071,1072,1078],cost:[1037,1039,1040,1042,1044,1045,1046,1087,1088,1089,1090],cost_fn:[1087,1090],could:1249,count:[40,41,818,819,820,1091,1154,1159,1161,1201],cprint:1247,cpu:[40,41,43,863,900,902,908,909,912,937,940,944,974,975,982,993,994,1002,1003,1004,1010,1011,1036,1091,1147,1148,1149,1150,1151,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243,1245,1246],creat:[40,41,797,798,863,872,873,937,940,944,973,974,975,982,993,994,1002,1003,1004,1010,1011,1027,1036,1037,1050,1091,1147,1148,1149,1150,1151,1203,1209,1210,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1249],create_if_abs:[40,41],create_vari:1211,creation:[40,41,42,43],creation_funct:[376,377,797,798],crop:[1053,1057],crop_siz:[1053,1057],cross:[277,652,937,1185,1186,1187,1188],cross_entropi:1185,cuda:[40,41,863,872,891,908,937,940,944,974,975,982,993,994,1002,1003,1004,1010,1011,1036,1091,1147,1148,1149,1150,1151,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243],cumprod:[119,277,413,652,937],cumsum:[652,937],cumul:[937,959,960],current:[40,41,42,43,863,872,896,897,899,903,913,919,927,936,937,961,976,984,988,1001,1005,1091,1135,1136,1143,1203,1249],current_framework:59,current_framework_str:[413,652,937,1091],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1197,d_in:[1172,1173,1174,1175,1176,1177,1178],d_out:[1172,1173,1174,1175,1176,1177,1178],da_can_termin:1091,da_dim_s:[863,1091],da_direct:1091,da_tune_step:[863,1091],dai:1249,daniel:1203,data:[40,41,42,43,797,798,800,801,803,804,806,818,819,820,822,847,863,865,866,867,868,869,870,875,876,877,891,913,917,918,919,923,924,925,926,927,928,929,936,937,940,944,966,973,982,989,1003,1004,1008,1019,1023,1036,1037,1043,1051,1070,1079,1091,1172,1181,1203],data_format:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],data_type_funct:[378,380,381,799,800,801],dataset:[40,41],datatyp:[40,41,913,918,928,929],dcdw:[1037,1039,1040,1042,1044,1045],debug_info:1197,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1037,1044,1045,1236,1238,1239],decay_lambda:[1037,1044,1045,1236,1238,1239],decid:[40,41,1249],decompos:[1060,1061],decomposit:[1060,1061,1065],decor:43,decrement:[937,985],dedic:[1037,1051,1209,1210],deep:[40,41,1203],deep_copi:[40,41],deeper:[863,885,889,895,1091,1135,1144,1203],deepli:[1135,1137],def:[43,60,80,201,379,492,612,864,871,874,914,915,916,1038,1091,1095,1102,1198,1202,1203,1212,1215,1218,1245,1246,1249],default_dev:43,default_devic:863,default_dtyp:[43,913],default_float_dtyp:913,default_int_dtyp:913,default_key_color:[40,41,42],default_nod:1091,default_rng:464,default_v:[937,962],defaultdevic:[863,864],defaultdtyp:[913,914],defaultfloatdtyp:[913,915],defaultintdtyp:[913,916],defer:43,defin:[43,937,958,1002,1004,1036,1147,1149],degre:[803,805,1070,1083,1085],del:1091,delta:[1037,1039,1091,1197],delta_dim_s:1091,delta_percent_mem:1091,delta_sf:1091,delta_util:1091,demo:1203,denomin:[937,971,978,1013,1020,1021,1189,1190,1234,1235],dens:[1220,1230],depend:[43,822,847,937,1034,1060,1065,1203],depth:[40,41,413,439,863,885,889,895,937,980,1002,1091,1135,1144,1197,1201,1232,1233],depth_cutoff:[40,41],depthwis:[1172,1179,1220,1227],depthwise_conv2d:[187,365,478,602,786,1172],depthwiseconv2d:[1203,1220],deriv:[1037,1039,1040,1042,1044,1045,1046,1135,1137,1144,1203,1232,1236,1240,1242],descend:[815,816,1060,1065],descent:[1037,1042,1236,1241],describ:[40,41,1154,1155],design:[1203,1204],desir:[40,41,863,908,913,917,937,940,944,982,983,1003,1004,1036,1053,1058,1091,1154,1156,1157,1158,1160,1162],desired_aspect_ratio:[454,457,1053,1058],desired_percent_increas:1091,detail:1249,detect:[40,41,1135,1136,1143],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,803,804,806,818,819,820,822,847,863,898,900,901,910,913,917,918,924,927,928,929,936,937,939,940,944,945,946,981,984,988,989,1023,1033,1037,1043,1070,1079,1087,1088,1089,1090,1091,1172,1183],dev:[40,41,42,43,112,271,411,413,414,417,428,429,430,437,438,439,440,441,442,443,448,464,465,524,644,863,866,867,869,870,872,873,876,877,879,880,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,899,902,903,904,905,906,907,908,909,912,937,940,944,974,975,982,993,994,1002,1003,1004,1010,1011,1036,1037,1052,1147,1148,1149,1150,1151,1209,1210,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243],dev_clon:[40,41,863],dev_clone_arrai:863,dev_clone_it:863,dev_clone_nest:863,dev_dist:[40,41,863],dev_dist_arrai:863,dev_dist_it:863,dev_dist_nest:863,dev_from_str:[43,112,271,411,524,644,863],dev_mapp:863,dev_str:[40,41],dev_to_str:[112,271,411,524,644,863],dev_unifi:863,dev_unify_arrai:863,dev_unify_it:863,dev_unify_nest:863,dev_util:863,devclonedit:863,devcloneditem:863,devclonednest:863,devdistit:863,devdistitem:863,devdistnest:863,develop:[1203,1246,1249],deviat:[40,41,1147,1150,1154,1160,1189,1190,1234,1235],devic:[21,40,41,43,376,377,412,413,427,797,798,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,937,940,944,973,974,975,982,993,994,1002,1003,1004,1010,1011,1036,1037,1052,1147,1148,1149,1150,1151,1203,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243],devmanag:[863,871],devmapp:[863,873],devmappermultiproc:863,diag:[1060,1065],diagon:[937,982],dict:[15,16,17,18,19,40,41,42,863,865,868,872,873,875,885,886,887,888,889,937,963,964,965,995,1087,1088,1089,1091,1135,1137,1138,1139,1142,1144,1209,1210],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,799,800,863,882,883,886,887,1091,1172,1181,1203,1246,1249],differenti:[1203,1246],dilat:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],dim:[40,41,43,937,1002,1053,1054,1058,1060,1065,1091,1220,1231],dim_siz:[40,41,863,1091],dimens:[40,41,42,809,810,818,819,820,863,894,937,948,954,958,963,964,965,968,972,979,992,1002,1007,1008,1018,1019,1022,1030,1032,1053,1057,1060,1063,1065,1087,1088,1089,1090,1091,1147,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1182,1185,1187,1188,1220,1221,1222,1223,1224,1225,1226,1227,1230,1231],dimension:[40,41,464,818,819,820,937,1018,1019,1060,1065],direct:1091,directli:[43,1135,1144,1246,1249],directori:[937,1015,1026],discret:[1185,1187],disk:[40,41,1053,1055],distanc:[937,940],distribut:[40,41,863,882,886,887,888,889,1091,1147,1148,1149,1150,1151,1172,1180,1220,1228,1232,1233],distribute_nest:1091,distributedarrai:[40,41],distrubt:[1185,1187],dive:[1203,1246],divid:[40,41,937,1018,1020,1070],dividend:[1070,1079],divis:[937,971,978,1013,1020,1021,1037,1039,1040,1044,1070,1079,1236,1237,1238],divisor:[1037,1039,1040,1044,1070,1079,1236,1237,1238],doc:1203,docstr:43,doe:[40,41,43,937,940,1018,1245],doesn:1203,doing:43,domain:[1070,1071],don:1203,door:1249,dot:[1060,1062,1172,1183,1184,1220,1231],down:1245,downscal:[937,952,953],drag:[1203,1249],draw:[1147,1148,1150,1151],drawn:[1147,1148,1149,1150,1151],drop:[1203,1249],dropout:[1172,1203,1220,1231],dropout_r:[1220,1231],ds_tune_step:863,dtype:[40,41,43,119,277,376,377,378,380,381,413,414,417,418,427,430,440,441,448,531,652,797,798,799,800,801,917,918,919,920,921,922,924,925,926,927,928,929,930,931,932,933,934,935,936,937,940,944,973,982,1002,1003,1004,1036],dtype_bit:[119,277,413,531,652,913],dtype_from_str:[43,119,277,413,531,652,913],dtype_in:[413,423,424,425,913,919,924,925,926,927,928,929,936],dtype_to_str:[119,277,413,531,652,913],duplic:[40,41],dure:[40,41,43,861,862,937,1031,1037,1039,1040,1044,1087,1088,1089,1090,1232,1233,1236,1237,1238,1240],dynam:[413,419,861,862],each:[40,41,42,43,803,804,806,815,816,822,847,863,872,873,882,883,884,885,886,887,888,894,906,907,937,938,939,955,966,1007,1018,1022,1025,1035,1037,1040,1042,1044,1045,1046,1053,1056,1060,1065,1070,1073,1079,1081,1082,1091,1135,1139,1147,1148,1154,1155,1172,1173,1174,1175,1176,1177,1178,1179,1180,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1246],eager:1246,easi:1249,easili:1203,econom:1249,ecosystem:1203,edg:[937,951,955,1035],effect:[1037,1046],effective_grad:[1037,1046],effici:1249,einop:[40,41,937,963,964,965],einops_rearrang:[40,41,937],einops_reduc:[40,41,937],einops_repeat:[40,41,937],einstein:[40,41,1154,1155],einsum:[40,41,173,353,466,592,766,1154],either:[40,41,937,962,995,998,1000,1087,1088,1089,1090,1091,1220,1231,1232,1233,1246],eleg:1091,element:[40,41,43,464,803,804,805,806,807,815,816,818,819,820,822,847,863,884,888,894,913,917,937,938,940,942,943,945,946,950,951,952,953,959,960,966,969,970,971,982,983,997,999,1007,1009,1018,1029,1034,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1154,1155,1157,1159,1161,1164,1165,1166,1167,1168,1169,1170,1171,1172,1180,1220,1228],elementwis:[40,41],elementwise_affin:[1234,1235],elementwise_funct:[803,804,805,806,807],elemtn:[1147,1148],elif:1091,els:[937,947,962,967,1091],elsewher:[937,1034],emphas:1203,empti:[40,41,1091],enabl:[40,41,42,1203],encapsul:[799,801],encod:[937,972,1053,1055],end:[937,940,1203,1246],ensur:43,entir:[40,41,818,819,820,863,907,1091,1203,1220,1229],entri:[40,41,937,969,993,994,1018,1019],entropi:[1185,1186,1187,1188],enumer:1091,environ:1203,eps:[378,799,800],epsilon:[1037,1039,1040,1044,1185,1186,1187,1188,1189,1190,1234,1235,1236,1237,1238],equal:[40,41,413,531,652,803,805,806,937,939,945,946,955,1018,1035,1070,1083,1085,1147,1151],equality_matrix:[937,939],equat:[40,41,1154,1155],equival:[937,940,1070,1085],erf:[462,743,1070],error:[40,41,863,937,1019,1070,1080,1091,1164,1165,1232,1233,1236,1240],essenti:43,etc:[40,41,43,863,908,937,940,944,974,975,982,993,994,1002,1003,1004,1010,1011,1036,1091,1147,1148,1149,1150,1151,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243,1249],evalu:[40,41,818,819,820,937,998,1135,1136,1143],even:1249,evenli:[40,41,937,940,993,994,1018],everi:[937,939,1249],exact:[40,41],exampl:[43,861,862,937,951,1022,1203,1245,1246,1249],example_input:[413,419,861,862],exc_tb:1091,exc_typ:1091,exc_val:1091,exce:[937,999],except:[40,41,44,47,818,819,820,937,940,947,954,962,1031,1091],excess_s:1091,excit:[1203,1246],exclud:[59,61,937,940,1147,1151],exclus:[40,41,413,421,435,449,451,937,959,989,1037,1043,1147,1149],execut:[43,937,1031,1246],execute_with_gradi:[154,330,449,572,723,1037,1203,1245],exist:[40,41,937,962,1091,1203,1236,1240,1249],exp:[743,1070],expand:[40,41,937,968,972],expand_dim:[40,41,277,652,937,1091],expect:[937,941],explain:1246,explicitli:[1220,1229,1231,1232,1233,1246],expon:[43,822,847,937,1021],exponenti:[43,822,847,1070,1080,1081],expos:[937,944,956],express:[937,998],exsit:[40,41],extend:43,extra:[40,41,42,1037,1041],eye:[1060,1062],fabian:1203,fabio:1203,factor:[863,872,905,906,907,1037,1039,1040,1044,1045,1060,1065,1091,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227,1236,1237,1238,1239],falck:1203,fall:[1232,1233,1236,1240],fallback_to_non_compil:[1232,1233,1236,1240],fals:[15,18,19,40,41,42,59,66,67,68,69,70,411,413,421,422,435,444,447,449,450,451,458,459,803,806,809,810,815,816,818,819,820,863,881,894,902,907,912,913,920,921,922,923,937,939,959,962,967,972,979,989,995,1016,1018,1032,1034,1037,1040,1041,1042,1043,1044,1045,1046,1060,1063,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1154,1156,1157,1158,1159,1160,1161,1162,1191,1192,1193,1197,1201,1209,1210,1232,1233,1236,1237,1238,1239,1240,1241],fan_in:1211,fan_mod:1211,fan_out:1211,far:[1135,1136,1143,1245],faster:[861,862],favourit:[1203,1245],feasibl:1249,feat_dim:[1172,1183,1184],fed:[863,907,1091],feed:[863,907,1091],field:1249,file:[40,41,43,937,1015,1026,1232,1233],filepath:[40,41],fill:[40,41,797,798,937,973,1003,1147,1149],fill_valu:[413,427,937,973],filter:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227,1249],filter_s:[1220,1221,1222],filter_shap:[1220,1223,1224,1225,1226,1227],find:[40,41,1249],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[79,80,200,201,378,379,491,492,611,612,799],finish:[1203,1249],finit:[803,806],first:[40,41,464,803,804,861,862,863,894,937,945,954,958,966,993,994,1022,1024,1037,1041,1060,1065,1087,1088,1089,1090,1091,1135,1136,1143,1147,1153,1154,1159,1161,1220,1231,1232,1233,1236,1240,1246,1249],firstlayersiren:[1203,1211],firstli:[1246,1249],fist:[863,907,1091],fit:[40,41,411,413,449,454,458,461,462,464,937,1007,1053,1058],fkt:1249,flag:[40,41,1037,1043],flat:[40,41,43,937,1007,1010],flat_list:[40,41],flatten:[40,41,809,810,937,972,1007,1154,1156,1157,1158,1160,1162],flatten_key_chain:[40,41,1232,1233],flexibl:[1203,1246],flip:[40,41,119,277,413,531,652,937],float32:[43,413,430,913,917,925,926,937,940,944,982,1003,1004,1036],float_dtyp:[913,921,931],float_img_to_uint8_img:1053,floor:[277,413,652,937,971,1091],floormod:[277,413,652,937],fluid:1249,fname:[1191,1193,1197,1232,1233],folder:[43,1203],follow:[40,41,43,799,801,863,907,937,985,986,987,1020,1021,1037,1040,1042,1044,1045,1046,1091,1135,1139,1144,1172,1183,1184,1203,1220,1230,1236,1240],followng:[799,800],fomaml_step:1087,forget:[1037,1039,1040,1044,1236,1237,1238],fork:[937,1000],forkserv:[937,1000,1091],form:[15,16,17,18,19,40,41,937,944,1037,1040,1042,1044,1045,1046,1135,1137,1144,1172],format:[40,41,43,863,881,913,917,919,923,937,940,944,982,1003,1004,1036,1091,1154,1155,1203,1245,1246],format_fn:[40,41],format_key_chain:[40,41],forward:[1232,1233,1236,1240,1245],found:[40,41,42],fourier:[937,972],fourier_encod:937,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,86,87,88,91,97,100,101,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,158,159,160,162,163,167,168,169,170,171,172,174,175,176,177,178,179,180,183,185,186,188,189,190,191,192,193,194,199,201,202,203,206,207,208,211,217,220,221,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,336,337,338,340,341,342,343,345,346,349,350,351,352,354,355,356,357,358,359,360,361,364,366,367,368,369,370,371,372,377,379,380,381,384,385,386,387,390,396,399,400,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,455,456,457,459,460,463,465,467,468,469,470,471,472,473,476,477,479,480,481,482,483,484,485,490,492,493,494,497,498,499,500,503,509,512,513,525,526,527,528,529,530,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,573,574,575,576,578,579,580,582,583,584,588,589,590,591,593,594,595,596,597,598,599,603,604,605,610,612,613,614,617,618,619,620,623,629,632,633,645,646,647,648,649,650,651,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,730,731,732,734,735,736,737,738,739,741,742,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,765,767,768,769,770,771,772,773,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,798,800,801,804,805,806,807,810,815,816,819,820,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1066,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1192,1193,1195,1196,1198,1202,1203,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1235,1236,1237,1238,1239,1240,1241,1243,1244,1245,1246,1248,1249],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1091,framewrk:[937,1000],freeli:43,frequenc:[937,972],from:[40,41,42,43,815,816,818,819,820,863,872,873,907,913,919,937,962,969,974,975,982,1008,1019,1027,1034,1037,1040,1044,1053,1057,1087,1088,1089,1090,1091,1135,1137,1144,1147,1148,1149,1150,1151,1154,1159,1161,1172,1180,1183,1203,1209,1210,1220,1228,1231,1236,1240,1245,1246],from_cal:[1232,1233],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[119,277,413,531,652,799,800,937,1203],full_matric:[1060,1065],fulli:[43,1203,1220,1230,1231,1245],func:[40,41,413,419,449,450,861,862,863,907,937,949,1037,1041,1091],further:1249,furthermor:1249,futur:1249,gain:1211,gamma:[1189,1190],gather:[40,41,119,277,413,531,652,937,975],gather_nd:[40,41,119,277,413,531,652,937],gauss:[1070,1080],gaussian:[1164,1165],geglu:[1203,1206],gelu:[363,475,775,1164,1203,1206],gener:[23,40,41,43,411,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,464,861,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1043,1147,1149,1151,1152,1203,1236,1240],geometr:[937,972],get:[40,41,799,800,801,863,872,873,881,896,897,902,906,909,912,913,923,924,937,941,976,977,978,1006,1091,1201,1203,1220,1229,1249],get_all_arrays_in_memori:937,get_all_arrays_on_dev:863,get_framework:59,get_initial_st:[1220,1229],get_min_bas:937,get_min_denomin:937,get_mod_kei:[1232,1233],get_num_dim:[413,652,937],get_param:1197,get_param_recurs:1197,get_referrers_recurs:937,getfullargspec:1091,gist:1203,give:[815,816,937,1008,1246],given:[40,41,43,797,798,815,816,863,896,902,905,906,907,909,912,913,917,937,940,944,951,959,960,969,975,993,994,1003,1004,1007,1010,1011,1018,1025,1030,1032,1036,1037,1039,1040,1042,1044,1045,1046,1060,1062,1066,1070,1071,1091,1135,1140,1141,1147,1150,1151,1153,1154,1157,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1209,1210,1249],global:[40,41,42,863,872,873,880,905,906,907,913,920,921,922,937,961,977,978,1006,1012,1013,1014,1020,1021,1037,1052,1091,1189,1190,1195,1196,1203,1234,1235],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1203,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230],got:1203,gpu0:43,gpu2:43,gpu:[863,898,901,1091],gpu_is_avail:[411,863,1091],grad:[1203,1236,1240,1245],gradient:[25,40,41,450,451,452,453,863,907,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1056,1087,1088,1089,1090,1203,1236,1237,1238,1239,1240,1241,1245,1249],gradient_descent_upd:[1037,1087,1088,1089,1090],gradient_imag:[157,335,454,577,729,1053],gradienttrack:[1037,1038],graph:[1037,1040,1042,1044,1045,1046,1191,1192,1193,1198,1203,1232,1233],graph_compil:[1191,1192,1193,1194,1195,1196,1197,1201],greater:[40,41,937,940,970,1019,1147,1151],green:[40,41,42,1247,1248],grid:[937,998],group:[1053,1058],guid:[1203,1204,1249],gym:1203,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1249,half:[937,940,1091,1147,1151],hand:1203,handl:[40,41,42,43,861,862,863,879,881,890,891,902,909,912,1037,1040,1042,1044,1045,1046,1091,1236,1237,1238,1239,1240,1241],has:[40,41,43,937,1022,1070,1075],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,937],hasattr:1091,have:[40,41,43,799,800,803,804,806,818,819,820,822,847,937,954,958,963,964,965,966,973,1022,1037,1043,1051,1060,1065,1070,1079,1091,1203,1245,1246],hdf5:[40,41,1232,1233],head:[1172,1183,1220,1231],head_dim:[1220,1231],height:[1053,1058],height_cutoff:[40,41],help:[59,378,411,412,863,875,876,877,878,913,1037,1197,1201,1203,1211,1213,1214,1216,1217,1219],helper:1203,here:[43,1203],hidden:[1172,1182,1220,1229],hierarch:[937,956],hierarchi:[40,41],high:[40,41,464,1147,1149,1151],higher:[1037,1040,1042,1044,1045,1046,1060,1065],highest:[1147,1149],highest_util:1091,highest_util_nod:1091,highli:1203,highlight:1249,highlight_subgraph:[1191,1193,1197],hint:43,hkt:1249,hold:[913,917,937,940,944,1010,1011],host:1203,hot:[937,1002],how:[1203,1220,1231,1232,1233,1246,1249],howev:[43,1246],http:1249,hyperbol:[1070,1072,1074,1077,1078,1084,1086,1164,1171],hypothet:1249,icon:1203,idea:1203,ident:[40,41,43,119,277,413,531,652,937],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[799,800],if_exist:[40,41],ignor:[40,41,1236,1240],ignore_key_error:[40,41],ignore_miss:[1236,1240],ignore_non:[40,41],iinfo:[79,200,378,491,611,799],imag:[27,455,456,457,937,992,1054,1055,1056,1057,1058,1059,1172,1173,1174,1175,1176,1178,1179,1203,1249],image_dim:[1053,1057],imkkhk:1249,immedi:[1203,1246,1249],implement:[43,822,847,1203,1246,1249],in_featur:[1172,1181],includ:[40,41,43,818,819,820,937,940,981,1020,1021,1033,1135,1136,1147,1151,1220,1230,1231,1234,1235,1245],include_deriv:[1135,1137,1144],include_empti:[40,41],include_gener:[1191,1192,1193,1197,1232,1233],include_inf:[40,41,937,981,1033],include_nest:[1135,1136],include_self:[40,41],inclus:[1147,1149],incom:[1172,1181],increas:[863,885,889,895,937,955,968,1035,1091,1135,1144],increasingli:1249,increment:[937,986,1091],increment_param_count:1197,inde:1203,indent:[40,41,42],independ:[1147,1148],index:[40,41,413,464,937,942,943,974,975,998,1019,1022,1135,1138,1140,1141,1142,1145],index_nest:1135,indic:[40,41,413,428,429,439,442,443,815,816,937,942,943,974,975,983,1002,1010,1011,1135,1136,1138,1140,1141,1142,1143,1145,1146,1147,1148,1164,1169,1172,1173,1174,1175,1176,1177,1178,1179,1189,1190,1220,1221,1222,1223,1224,1225,1226,1227,1232,1233],indices_wher:[119,277,413,652,937],inevit:1249,inf:[40,41,809,810,937,981,990,1033,1070,1075],infer:[815,816,861,862,937,969,979,982,1008,1016,1053,1057,1246,1249],infin:[803,806,937,990],inform:[799,800,801,1037,1048],init_c:[1172,1182],init_h:[1172,1182],init_on_first_step:[1236,1240],initi:[40,41,42,59,378,411,412,863,875,876,877,878,913,1037,1091,1172,1182,1197,1201,1203,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1236,1240],initialz:[1232,1233],inner:[1087,1088,1089,1090],inner_batch_fn:[1087,1088,1089],inner_batch_shap:[1172,1181],inner_cost_fn:[1087,1088,1089],inner_grad_step:[1087,1088,1089,1090],inner_learning_r:[1087,1088,1089,1090],inner_optimization_step:[1087,1088,1089,1090],inner_v:[1087,1088,1089],inp:1091,inplac:[40,41,937,947,984,988,1023,1037,1040,1042,1044,1045,1046,1209,1210,1236,1237,1238,1239,1240,1241],inplace_arrays_support:[413,937],inplace_decr:[119,277,413,531,652,937],inplace_incr:[119,277,413,531,652,937],inplace_oper:[0,11,12],inplace_upd:[40,41,119,277,413,531,652,937,1209,1210],inplace_variables_support:[413,937],input:[15,18,19,40,41,42,43,803,804,805,806,807,809,810,815,816,818,819,820,861,862,863,872,873,880,881,882,885,886,889,895,907,908,913,917,918,920,921,922,923,924,928,929,937,938,939,942,943,945,946,947,948,950,951,952,953,954,955,957,959,960,962,963,964,965,966,967,968,969,970,971,972,979,981,982,983,985,986,987,989,990,991,992,996,997,998,999,1007,1009,1016,1017,1019,1022,1023,1024,1025,1027,1028,1029,1030,1032,1033,1035,1037,1041,1043,1048,1052,1053,1054,1055,1056,1057,1059,1060,1063,1065,1067,1068,1069,1070,1072,1074,1075,1077,1078,1079,1083,1084,1085,1086,1087,1088,1089,1090,1091,1147,1148,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1190,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234,1235,1246],input_ax:[863,907,1091],input_channel:[1220,1221,1222,1223,1224,1225,1226,1229,1230],input_queu:1091,inputs_split:1091,insert:[937,968],insid:43,inspect:1091,inspir:1249,instal:1203,instanc:[15,16,17,18,19,40,41,43,464,822,847,863,872,1091,1209,1210,1242,1243],instead:[40,41,464,1154,1156,1157,1158,1159,1160,1161,1162,1249],int32:43,int64:[913,917,937,940,944,982,1003,1004,1036],int_dtyp:[913,922,932],integ:[40,41,464,799,801,803,804,809,810,818,819,820,913,929,937,940,950,970,1009,1018,1147,1149,1152],integr:1203,intend:43,inter:1203,interchang:[40,41,937,1024],interest:1203,interfac:[937,944,1246],intermedi:[40,41],intern:[40,41,863,1037,1051,1091,1135,1136,1143,1144,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1242,1243],interpol:[937,992],intersect:[1070,1071],interv:[40,41,818,819,820,937,940,951,993,994,1070,1073,1147,1151],introduc:1249,inv:[733,1060,1249],invalid:[818,819,820],invalid_dtyp:913,invers:[1060,1062,1064,1070,1071,1072,1073,1074,1075,1077,1249],invert:[1060,1062,1064],invest:1249,invoc:[861,862],irrespect:1203,is_al:1091,is_arrai:[119,277,413,531,652,937,1091],is_float_dtyp:913,is_int_dtyp:913,is_mean:1091,is_sum:1091,is_var:[1197,1201],is_vari:[154,330,449,572,723,1037],isfinit:[84,205,383,496,616,803],isinf:[277,531,652,937],isinst:1091,isnan:[277,531,652,937],isnumer:1091,item:[15,19,40,41,822,834,835,863,872,873,875,882,884,886,888,894,913,920,937,956,980,1020,1021,1091,1135,1139,1140,1141,1144,1145,1146,1203,1232,1233,1245],iter:[15,16,17,18,19,40,41,42,861,862,863,866,867,869,870,872,873,876,877,884,886,887,888,889,894,907,937,939,948,954,955,969,982,998,1003,1007,1008,1011,1016,1018,1022,1025,1030,1035,1091,1135,1136,1137,1139,1143,1144],iterbal:[863,884,888,894,1091],its:[464,815,816,863,907,937,982,1008,1024,1030,1091,1203],itself:[43,1135,1144],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,376,377,378,380,381,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1201,1203,1204,1206,1207,1208,1209,1210,1211,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1247,1248],ivy_backend:[40,41],ivy_bay:1249,ivyfcmodel:1245,ivyh:[40,41,42],ivymodul:[184,783],jame:1203,jax:[1037,1043,1203,1249],jax_concat:1203,jnp:1203,join:[40,41,937,954,1022,1091],journal:1203,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1203,1220,1229,1249],kaimingnorm:[1211,1215],kalman:1249,kalman_filt:1249,kalman_filter_step:1249,kalman_filter_upd:1249,keep:[40,41,863,908,937,1032,1091,1203,1249],keep_inner_v:[1087,1088,1089],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1087,1088,1089],keepdim:[40,41,413,447,458,459,809,810,818,819,820,937,1032,1060,1063,1154,1156,1157,1158,1159,1160,1161,1162],kei:[15,16,17,40,41,42,822,827,863,875,937,956,1087,1088,1089,1091,1135,1138,1142,1172,1183,1184,1203,1209,1210,1220,1231,1236,1240],kept:[40,41,42,1087,1088,1089],kera:1249,kernel:[1172,1182],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,863,872,873,885,889,895,937,941,963,964,965,995,1091,1135,1139,1232,1233],keyword_color_dict:[40,41,42],kind:[799,800,801,1249],kwarg:[15,16,17,40,41,42,59,63,863,872,885,889,895,937,995,1091,1191,1192,1193,1197,1209,1210,1232,1233],kwarg_stateful_idx:[1191,1192,1193,1197,1232,1233],kwargs_clon:1091,kwargs_dist:1091,kwargs_uni:1091,label:[1185,1186,1187,1188],lamb:[1037,1044,1203,1236],lamb_upd:1037,lambda:[1091,1236,1239,1241,1245],lar:[1037,1044,1045,1203,1236],larger:[799,800,937,951],largest:[40,41,799,800,801,937,942,970],lars_upd:1037,last:[40,41,818,819,820,937,940,958,992,1018,1022,1060,1063,1065,1154,1159,1161,1164,1169,1172,1182,1220,1230],later:[40,41,937,949],latest:[1220,1229],layer:[1037,1040,1042,1044,1046,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1190,1203,1211,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243,1249],layer_norm:1189,layernorm:[1203,1234],layerwis:[1037,1045,1236,1239],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1135,1136,1143],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1164,1165,1166],leaky_relu:[775,1164],learn:[815,816,1037,1040,1042,1044,1045,1046,1087,1088,1089,1090,1147,1153,1203,1236,1237,1238,1239,1240,1241,1246,1249],learnabl:[1189,1190,1234,1235],leav:[15,18,19,40,41,1135,1136,1137,1143,1144],left:[40,41,809,810,1060,1063,1154,1156,1157,1158,1159,1160,1161,1162,1203],leftmost:[40,41],len:1091,length:[40,41,42,937,940,1008,1019,1030],lenton2021ivi:1203,lenton:1203,less:[40,41,43,937,950,1091,1147,1151],less_util_node_str:1091,let:[1246,1249],level:1203,librari:[1203,1245,1249],lightweight:1203,like:[43,1037,1043,1147,1151,1203,1245,1246,1249],limit:[40,41,42,799,800,801,937,951,952,953],linalg:[29,459,460,1061,1062,1063,1064,1065,1066,1203],linear0:[1203,1245],linear1:1203,linear2:1245,linear:[458,937,972,992,1060,1164,1165,1166,1167,1172,1180,1203,1220,1221,1222,1223,1224,1225,1226,1227,1245],linear_algebra_extens:[809,810],linear_resampl:[119,277,413,531,652,937],linearli:[937,972],link:1203,linspac:[119,277,413,531,652,937,940],list:[15,18,19,40,41,43,818,819,820,863,872,873,882,883,885,886,887,889,892,893,907,937,940,944,946,998,1017,1018,1027,1032,1087,1088,1089,1091,1135,1136,1137,1139,1143,1144,1172,1173,1174,1175,1176,1177,1178,1179,1203,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227],list_join:[40,41,42],list_stack:[40,41],liter:[809,810],littl:1246,load:[40,41],loaded_kwarg:1091,loader:1203,local_set:[937,980],locat:[43,937,990,991,1147,1148],log:[743,937,994,1070,1091,1185,1186,1187,1188,1203],log_all_op:1197,log_global_inference_abs_tim:[1194,1203],log_global_inference_rel_tim:[1194,1203],logarithm:[1070,1082],logic:[31,803,807,818,819,820,1068,1069,1203],logical_and:[344,740,1067],logical_not:[84,205,383,496,616,803],logical_or:[344,740,1067],logit:[1185,1188],logspac:[119,277,413,531,652,937],look:[43,1246,1249],loop:[1087,1088,1089,1090],loss:[1186,1187,1188,1203,1245],loss_fn:[1203,1245],lot:1246,low:[40,41,464,1147,1149,1151],lower:[40,41,937,997,1147,1151],lower_depth:[1232,1233],lowest:[15,18,19,40,41,1135,1144,1147,1149],lstm:[1172,1182,1203,1220],lstm_updat:[43,1172],machin:[799,800,801,815,816,1147,1153,1203,1246,1249],mai:[937,940,962,966,1203,1246,1249],main:[937,982,1203],mainli:1203,make:[43,464,863,1091,1203,1246],maml:[1087,1088,1089],maml_step:1087,manag:[863,1091],mani:[40,41,43,937,1018,1203],manner:[15,18,19,40,41,43,1135,1144],manual:[1135,1136,1143,1249],map:[40,41,42,863,872,937,990,991,1091,1135,1140,1141,1144,1220,1231,1245],map_cont:[40,41],map_nest_at_index:1135,map_nest_at_indic:1135,map_sequ:[40,41],mapper:[863,872,873,1091],mask:[1172,1183,1184],match:[40,41,937,995],match_kwarg:937,math:[33,463,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1091,1203],mathbb:[1060,1066],mathbf:[1060,1066],matmul:[43,277,413,531,652,937,1249],matplotlib:1246,matric:[1172,1181],matrix:[40,41,937,939,952,996,1060,1061,1062,1063,1064,1066,1172,1181,1220,1230],matrix_norm:[40,41,161,339,458,581,733,1060],matter:1203,max:[40,41,378,799,800,801,937,952,953,964,997,1010,1011,1091,1154,1156,1236,1238],max_batch_s:[40,41],max_chunk_s:[863,907,1091],max_depth:[40,41,863,867,870,877,885,889,895,937,980,1091,1135,1144],max_dev_dim_step_ratio:863,max_freq:[937,972],max_length:[40,41],max_node_dim_step_ratio:1091,max_norm:[40,41,937,952,953],max_split_factor_step_s:[863,1091],max_trust_ratio:[1037,1044,1236,1238],maxim:[1203,1246,1249],maximis:1203,maximum:[40,41,42,652,863,885,889,895,907,937,942,951,952,953,972,1037,1044,1091,1135,1144,1154,1156],mayb:[15,18,19],mdi:1091,mean:[40,41,464,863,892,893,894,895,907,937,964,1087,1088,1089,1090,1091,1135,1139,1147,1150,1154,1157,1160,1162,1211,1245,1249],measur:[1172,1183,1220,1231],mech:1203,mechan:[1203,1249],medic:1249,memori:[863,879,902,907,909,912,1091,1172,1182,1203],meshgrid:[277,413,652,937],messag:[1247,1248],meta:[35,1088,1089,1090,1203],method:[40,41,42,43,464,937,944,956,998,1010,1011,1037,1044,1045,1091,1135,1136,1143,1144,1203,1220,1231,1232,1233,1246],might:[937,962,1249],min:[40,41,378,799,800,801,937,964,999,1010,1011,1020,1091,1154,1158],min_bas:[937,1021],min_denomin:[937,1020],min_dev_dim_s:863,min_node_dim_s:1091,min_sf_tune_step:[863,1091],min_unit_dev_tune_step:863,min_unit_node_tune_step:1091,mind:1203,mini:[1189,1190,1234,1235],minimum:[40,41,652,863,913,917,937,940,943,944,951,977,978,1012,1013,1020,1021,1091,1154,1158],miss:[1236,1240],ml_framework:[815,816,937,940],mod:[937,971],mod_depth:[1232,1233],mod_height:[1232,1233],mod_with_top_mod_key_chain:[1232,1233],mode:[40,41,861,862,863,892,893,894,895,907,1060,1065,1091,1246],model:[1203,1245],modul:[40,41,42,59,937,1000,1091,1203,1204,1206,1207,1208,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234,1235,1242,1243,1249],moment:[1037,1039,1040,1044,1236,1237,1238],more:[43,937,1022,1091,1203,1246,1249],more_util_node_str:1091,most:[40,41,43,1203,1249],move:[40,41,43,863,908,1091],much:[1203,1249],multi:[464,937,1000,1172,1183,1220,1231],multi_head_attent:1172,multi_index_nest:1135,multi_map:[40,41],multi_nod:1091,multidev:[863,874,875,876,895],multidevcontain:[40,41],multidevic:[863,872],multidevit:[863,866,869,872,873,877],multidevitem:[863,865,868],multidevnest:[863,867,870],multiheadattent:[1203,1220],multinod:[1091,1095],multinodecontain:1091,multinodeit:1091,multinodeitem:1091,multinodenest:1091,multinomi:[166,348,464,587,759,1147],multipl:[40,41,818,819,820,937,995,1018,1060,1062,1154,1156,1157,1158,1159,1160,1162,1189,1190,1220,1230,1246],multipli:[40,41,937,959,1154,1159],multiprocess:[40,41,42,413,652,863,872,937,1091],must:[40,41,42,43,797,798,803,804,806,818,819,820,822,847,863,892,893,894,895,907,937,940,954,956,958,966,997,999,1011,1022,1070,1076,1079,1091,1147,1152,1236,1240],mutabl:[1135,1137,1144],mutlidevic:[863,872],mutlinod:1091,mw_tm1:[1037,1040,1044],mx_concat:1203,mxnet:[43,1203,1249],my_func:43,mymodel:1203,name:[861,862,1191,1192,1193,1197,1245],namespac:[43,1246],nan:[40,41,803,806,937,981,991,1033],nativ:[15,17,18,19,40,41,43,863,879,881,890,891,902,909,912,913,918,925,926,1091,1203,1204,1209,1210],native_modul:[1209,1210],native_module_class:[1209,1210],nativearrai:[15,18,19,43,797,798,799,800,801,803,804,805,806,809,810,815,816,818,819,820,822,847,863,881,907,908,913,917,923,928,929,937,938,939,940,942,943,944,945,946,948,950,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,972,974,975,979,981,982,983,990,991,992,993,994,996,997,998,999,1002,1003,1004,1007,1008,1009,1010,1011,1016,1018,1019,1022,1024,1025,1027,1028,1029,1030,1032,1033,1034,1035,1036,1091,1135,1137,1144],natur:[1070,1082,1249],ncdhw:[1172,1177,1178,1220,1225,1226],nchw:[1172,1175,1176,1179,1220,1223,1224,1227],ncw:[1172,1173,1174,1220,1221,1222],ndarrai:[43,376,377,378,380,381,464,937,1028],ndhwc:[1172,1177,1178,1220,1225,1226],nearest:[937,1009],need:[43,937,952,953,1172,1174,1176,1178,1203,1220,1222,1224,1226,1249],neg:[40,41,803,806,818,819,820,1154,1159,1161,1164,1166],negative_slop:1211,neither:1091,nest:[15,16,17,18,19,40,41,42,863,885,889,895,937,944,1027,1087,1088,1089,1091,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1232,1233,1236,1237,1238,1239,1240,1241],nested_indices_wher:1135,nested_map:[1091,1135],network:[1172,1181,1203,1204,1206,1220,1232,1233,1249],neural:[1172,1203,1206,1220,1245],new_node_percent_mem:1091,new_node_util:1091,new_node_utils_kei:1091,new_std:[1189,1190,1234,1235],newli:[861,862,937,948,949],newlin:[40,41,42],newshap:[937,948,1008],next:[799,800,1091,1232,1233,1236,1237,1238,1239,1240,1241],nhwc:[1172,1175,1176,1179,1220,1223,1224,1227],node:[40,41,1135,1136,1143],node_clon:1091,node_dist:1091,node_dist_arrai:1091,node_dist_it:1091,node_in:1091,node_mapp:1091,node_str:1091,node_to_str:1091,node_util:1091,nodedistit:1091,nodedistitem:1091,nodedistnest:1091,nodemanag:[1091,1102],nodemapp:1091,nodemappermultiproc:1091,noinspect:[43,864,914,915,916,1038,1091,1198],non:[40,41,818,819,820,861,862,913,927,1232,1233,1236,1240,1246],none:[40,41,42,43,59,61,64,376,377,411,413,414,417,419,426,427,428,429,430,437,438,439,440,441,442,443,444,445,446,448,458,459,464,465,797,798,799,800,801,809,810,815,816,818,819,820,861,862,863,872,873,879,880,905,906,907,908,913,920,921,922,937,940,944,961,962,967,969,973,974,975,980,982,984,985,986,987,988,993,994,1000,1002,1003,1004,1007,1010,1011,1012,1013,1018,1019,1020,1021,1030,1031,1036,1037,1040,1042,1044,1045,1046,1052,1053,1057,1060,1063,1087,1088,1089,1090,1091,1135,1136,1139,1143,1144,1147,1148,1149,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1174,1176,1178,1181,1182,1183,1184,1189,1190,1191,1192,1193,1197,1201,1209,1210,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243],norm:[40,41,809,810,937,952,953,1060,1063,1190,1203,1235,1236,1238],normal:[1147,1150,1189,1190,1234,1235],normalized_idx:[1189,1190],normalized_shap:[1234,1235],notat:[40,41,1154,1155],note:43,noth:[40,41,1246],notimplementederror:1091,now:[40,41,863,908,937,938,1091,1203,1220,1231,1232,1233,1245,1246,1249],np_concat:1203,np_finfo:378,ns_tune_step:1091,num:[413,437,438,937,993,994],num_arrai:[40,41],num_arrays_in_memori:937,num_arrays_on_dev:863,num_band:[937,972],num_channel:[1220,1227],num_chunk:1091,num_chunks_floor:1091,num_class:[1147,1148],num_cpu_cor:863,num_gpu:[112,411,863,1091],num_head:[1172,1183,1220,1231],num_kei:[1172,1183,1184],num_lay:[1220,1229],num_or_size_split:[40,41,413,444,937,1018],num_output:1091,num_queri:[1172,1183,1184],num_sampl:[413,436,464,465,937,992,1053,1054,1147,1148],num_task:[1087,1088,1089,1090],number:[40,41,42,799,800,801,818,819,820,861,862,863,899,900,901,913,924,928,929,937,940,951,955,968,972,979,982,991,992,993,994,997,1001,1007,1018,1025,1029,1033,1035,1060,1065,1087,1088,1089,1090,1091,1147,1148,1152,1154,1156,1157,1158,1160,1162,1172,1183,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1246,1249],numer:[43,803,806,822,847,937,977,978,1012,1013,1020,1021,1070,1079,1211],numhead:[1172,1183],numpi:[40,41,376,377,378,380,381,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,937,1028,1060,1065,1154,1155,1203,1245,1246,1249],nwc:[1172,1173,1174,1220,1221,1222],obj:[40,41],object:[40,41,42,59,378,799,800,801,863,913,917,937,940,944,1037,1135,1138,1140,1141,1142,1145,1146,1147,1153,1197,1201,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233],object_in:[413,417,937,944],observ:1091,occupi:[799,800,801,937,1010,1011],off:[937,940],offer:1203,offset:[1189,1190],often:1246,old:[40,41],on_init:[1220,1231,1232,1233],onc:[863,907,1091,1147,1148,1203],one:[40,41,43,809,810,863,892,893,894,895,907,913,919,937,982,995,1002,1010,1011,1019,1022,1060,1063,1091,1154,1155,1156,1157,1158,1159,1160,1161,1162,1203,1246,1249],one_hot:[119,413,531,652,937],onearrai:[937,968],ones:[40,41,119,277,413,531,652,937,982,1002,1004,1203],ones_lik:[119,277,413,531,652,937],ongo:43,onli:[40,41,43,464,863,1091,1135,1136,1137,1143,1236,1237,1238,1239,1240,1241,1245,1246],onlin:1203,onto:[863,892,893,908,1091,1135,1139,1144],oom:[863,1091],open:[937,940,1147,1151,1203,1249],opencv:1246,oper:[40,41,803,807,937,947,963,964,965,993,994,1023,1037,1040,1042,1044,1045,1046,1067,1068,1069,1172,1173,1174,1175,1176,1177,1178,1179,1181,1203,1204],operand:[40,41,1154,1155],oppos:[937,972],optim:[863,1037,1040,1042,1044,1045,1046,1087,1088,1089,1090,1091,1203,1237,1238,1239,1241,1245,1249],optimizer_upd:1037,option:[15,18,19,40,41,42,43,376,377,797,798,809,810,815,816,818,819,820,861,862,863,872,873,881,885,886,887,888,889,892,893,894,895,902,905,906,907,908,912,913,918,923,927,936,937,939,940,942,943,944,952,953,954,959,961,962,969,972,973,974,975,979,981,982,989,992,993,994,995,998,1000,1002,1003,1004,1007,1010,1011,1014,1016,1018,1019,1020,1021,1022,1030,1032,1033,1036,1037,1040,1042,1043,1044,1045,1046,1048,1053,1057,1060,1063,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1154,1156,1157,1158,1159,1160,1161,1162,1164,1165,1169,1172,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1246],ord:[937,969,1060,1065],order:[40,41,42,43,809,810,815,816,1037,1040,1042,1044,1045,1046,1060,1063,1087,1088,1089,1242,1243],ordered_node_util_kei:1091,org:1249,organ:43,origin:[40,41,42,809,810,937,1004,1008,1036,1060,1063],other:[40,41,43,822,824,825,830,832,833,837,839,840,841,842,843,845,847,848,849,850,851,852,854,855,856,858,859,860,861,862,937,939,940,982,1037,1041,1147,1151,1203,1245,1246,1249],other_i:[43,822,847],otherwis:[15,16,17,18,19,40,41,803,806,818,819,820,863,880,913,920,921,922,937,947,1030,1031,1034,1037,1043,1048,1052,1087,1088,1089,1091,1154,1156,1157,1158,1160,1162],our:[1203,1249],out:[464,937,940,1070,1075,1172,1180,1182,1203,1220,1228],out_feat_dim:[1172,1183],out_featur:[1172,1180,1181],out_i:[803,806],outdat:1249,outer:[1087,1088,1089,1090],outer_batch_fn:[1087,1088,1089],outer_batch_shap:[1172,1181],outer_cost_fn:[1087,1088,1089],outer_v:[1087,1088,1089],outlin:1246,output:[40,41,43,797,798,863,872,873,907,937,940,949,973,982,1007,1025,1037,1041,1070,1076,1091,1147,1149,1150,1151,1172,1174,1176,1178,1180,1182,1183,1184,1203,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231],output_ax:[863,907,1091],output_axi:1091,output_channel:[1220,1221,1222,1223,1224,1225,1226,1229,1230],output_connected_onli:[1191,1193,1197,1232,1233],output_queu:1091,output_shap:[1172,1174,1176,1178,1220,1222,1224,1226],outsid:[937,951],over:[40,41,809,810,818,819,820,937,969,1060,1063,1147,1151,1154,1156,1157,1158,1160,1162,1189,1190,1234,1235],overal:1246,overflow:[937,940],overhead:1246,overrid:[937,1002,1004,1036],overriden:[1236,1240],overwrit:[40,41,863,907,1091],overwrite_at_key_chain:[40,41],own:[1203,1246,1249],packag:[43,1246],pad:[937,955,972,1035,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],pad_width:[413,937,955,1035],page:1203,pair:[1172,1184],parallel:[863,872,873,1091],parallelis:[863,872,873,1091],param:[40,41,42,43,413,428,429,818,820,863,907,937,938,974,975,1002,1003,1091,1202,1203,1232,1233,1245],paramet:[15,16,17,18,19,40,41,42,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,822,847,861,862,863,872,873,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,902,905,906,907,908,909,912,913,917,918,919,923,924,925,926,927,928,929,936,937,939,940,942,943,944,945,946,947,948,949,950,951,952,953,954,955,957,958,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,981,982,983,985,986,987,989,990,991,992,993,994,995,996,997,998,999,1000,1003,1004,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245],parameter:[1147,1150,1151],params_all_empti:1197,pardo:1203,pars:[937,956],part:[1037,1040,1042,1044,1045,1046,1070,1075,1203,1232,1233,1246],partial:[40,41,1232,1233],particl:1249,particular:1249,pass:[40,41,42,863,872,907,913,918,937,949,1037,1051,1087,1088,1089,1091,1209,1210,1232,1233,1236,1240,1242,1243],pattern:[40,41,937,963,964,965],per:[863,1091,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],percent_used_mem_on_dev:863,percent_used_mem_on_nod:1091,percentag:[863,902,1091],perf_count:1091,perform:[40,41,43,815,816,818,819,820,863,937,942,943,959,963,964,965,985,986,987,992,993,994,1037,1040,1042,1044,1045,1046,1053,1054,1087,1088,1089,1090,1091,1135,1140,1141,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1180,1182],permissable_step:1091,permit:43,permut:[464,937,1024,1030],perpendicular:[937,958],person:1203,physci:1249,pickl:[40,41,1091],pickle_filepath:[40,41],pid:1197,pinv:[339,733,1060],pip:1203,pipelin:1245,pkk:1249,pkkm1:1249,pkm1km1:1249,place:[40,41,43,797,798,863,908,937,968,973,985,986,987,1091,1236,1237,1238,1239,1240,1241],placehold:[1135,1144],pleas:464,point:[797,798,799,800,913,928,937,940,1070,1079],popul:[40,41,1147,1148],popular:1249,population_s:[464,465,1147,1148],portabl:[1203,1204],posit:[15,16,17,799,800,803,806,863,885,889,895,937,938,940,968,972,1091,1147,1152,1209,1210],possibi:[40,41],possibl:[937,995,1027,1053,1058,1249],post:[1189,1190],post_shap:[40,41],power:[43,822,847,853,937,977,1012,1021,1211],practic:1203,pre:[863,1091,1203],pre_shap:[40,41],precis:[799,800],pred:[1185,1186,1187,1188],predict:[1185,1186,1187,1188,1249],preprint:1203,present:[40,41],preserv:[40,41,42,937,969,1037,1048],preserve_typ:[40,41,449,452,1037,1048],press:1203,prevent:[43,1037,1039,1040,1044,1091,1236,1237,1238],previou:[1037,1040,1044],previous:[937,949],prime:1203,print:[40,41,42,863,903,937,1005,1203,1245],print_all_arrays_in_memori:937,print_all_arrays_on_dev:863,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1236,1240],prob:[464,465,1147,1148,1172,1180,1220,1228],probabl:[1147,1148,1172,1180,1220,1228],problem:[43,1249],process:[43,863,872,873,902,912,937,1000,1091],process_specif:[863,902,912,1091],prod:[40,41,937,964],produc:[863,872,873,1091],product:[40,41,937,958,959,996,1154,1155,1172,1183,1184,1220,1231],profil:[112,271,411,524,644,863,1091],project:[1203,1245,1246,1249],promot:[43,803,804,822,847,1070,1079],prompt:1203,properli:43,properti:[40,41,378,863,875,1091,1197,1201,1232,1233,1236,1237,1238,1239,1241],provid:[40,41,43,818,819,820,861,862,863,880,913,920,921,922,927,936,937,962,1002,1004,1011,1036,1037,1040,1042,1044,1045,1046,1052,1091,1203,1220,1229,1236,1237,1238,1239,1240,1241,1246],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1060,1064],ptype:[1197,1201],pure:[40,41,1203,1249],purpos:1249,put:1091,pybroadexcept:1091,pyprotectedmemb:[1091,1198],pyshadowingbuiltin:43,pyshadowingnam:[864,914,915,916,1038,1091],python:[40,41,863,902,912,937,940,1091,1203],pytorch:[1037,1040,1042,1044,1045,1046,1203,1236,1237,1238,1239,1240,1241,1245,1246,1249],pyunresolvedrefer:1091,quadrant:[1070,1076],queri:[40,41,822,836,857,863,896,906,1091,1172,1183,1184,1220,1231],query_dim:[1220,1231],query_kei:[40,41],queue:[40,41,42,863,872,873,937,1006,1014,1091],queue_class:[863,872,873,1091],queue_load_s:[40,41,42],queue_timeout:[40,41,42,937,1091],quick:[464,1203],quickli:1245,radian:[803,805,1070,1071,1073,1076,1083,1085],rai:[1070,1071],rais:[40,41,43,818,819,820,822,847,937,947,977,1012,1019,1021,1031,1091,1232,1233,1236,1240],ram:[863,902,909,912,1091],randint:[166,348,464,587,759,1147],random:[37,40,41,465,1148,1149,1150,1151,1152,1153,1203],random_crop:1053,random_norm:[166,348,464,587,759,1147],random_uniform:[166,348,464,587,759,1147],randomli:[464,1053,1057,1172,1180,1220,1228],randomness_factor:[1191,1193,1197,1232,1233],rang:[464,937,940,993,994,1070,1076,1091,1203,1245,1249],rank:[818,819,820,937,955,1032,1035],rate:[1037,1040,1042,1044,1045,1046,1087,1088,1089,1090,1220,1231,1236,1237,1238,1239,1240,1241],rather:[40,41,863,907,937,940,989,1037,1043,1091],ratio:[863,1037,1044,1053,1058,1091,1236,1238],raw:[40,41],raw_delta:1091,reach:[863,885,889,895,1091,1135,1144],read:[40,41],readi:[1091,1245],real:[1070,1071,1075],realiti:1246,rearrang:[40,41,937,963,965],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1087,1089],receiv:[863,872,873,937,941,995,1091,1220,1230],receivess:[863,1091],receiving_fn:1197,receivng:[1087,1090],recev:[1087,1088,1089],recognit:1249,recommend:1203,rectifi:[1164,1166,1167],recurr:[1172,1182],recurrent_bia:[1172,1182],recurrent_kernel:[1172,1182],recurs:[40,41,1135,1136,1137,1143,1144],redefin:43,reduc:[40,41,818,819,820,863,907,937,964,1091,1154,1156,1157,1158,1159,1160,1161,1162],reduce_max:[40,41,173,353,466,592,766,1154],reduce_mean:[40,41,173,353,466,592,766,1154,1203,1245],reduce_min:[40,41,173,353,466,592,766,1154],reduce_prod:[40,41,173,353,466,592,766,1154],reduce_std:[40,41,353,1154],reduce_sum:[40,41,173,353,466,592,766,1091,1154],reduce_var:[40,41,173,353,466,592,766,1154],reduct:[39,40,41,413,442,443,818,819,820,937,964,1010,1011,1155,1156,1157,1158,1159,1160,1161,1162,1203],refactor:43,refer:[818,819,820,1037,1039,1040,1060,1066,1220,1230,1249],reflected_oper:[0,13,14],regard:[863,1091],regardless:[40,41,861,862],register_paramet:1245,reimplement:1249,rel:[1037,1040,1042,1044,1045,1046],rel_slice_obj:1091,relev:[1236,1237,1238,1239,1240,1241],relu:[775,1164,1165,1166,1203,1245],remain:[43,937,1008,1135,1139],remaind:[40,41,937,971,1018],remov:[40,41,937,1019,1087,1088,1089],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,937,969],rep:[937,1025],repeat:[40,41,277,652,937,965,1025,1091,1246],repeated_config_check:[863,1091],repeatedli:[1135,1142],repetit:[40,41,937,1007,1025],replac:[40,41,43,464,465,937,951,1010,1011,1147,1148],repo:1203,repres:[43,913,919,924,1172,1181],represent:[40,41,42,43,799,800,801,803,804,863,890,891,913,919,925,926,937,1017,1027,1091],reptil:[1087,1090],reptile_step:1087,requir:[43,861,862,913,917,937,940,944,1209,1210],resampl:[937,992],reshap:[40,41,43,464,652,937],reshape_lik:[40,41],respect:[803,804,937,966,1037,1039,1040,1041,1042,1044,1045,1046,1070,1079,1087,1088,1089,1090],respons:1091,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,803,804,806,807,809,810,818,819,820,822,847,863,872,937,940,966,1010,1011,1022,1060,1063,1067,1068,1069,1070,1079,1091,1154,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1203],ret:1091,ret_dict:1091,ret_fn:[863,872,873,1091],retain:[1037,1041],retain_grad:[449,450,1037,1041],retreiv:1091,retrn:[937,1017],return_cont:[40,41],return_dict:[40,41],return_graph:[1191,1192,1193],return_inner_v:[1087,1088,1089,1090],return_sequ:[1220,1229],return_st:[1220,1229],rev:[937,962],revers:[40,41,937,962,969,1030],right:[40,41],rk_e:1249,robot:1203,ronald:1203,round:[277,413,652,937,940,1091],row:[937,982,1147,1148],rule:[43,803,804,822,847,937,940,1070,1079],run:[863,872,1037,1039,1040,1044,1087,1088,1089,1090,1091,1203,1204,1220,1231,1232,1233],safe:[863,872,1091],safety_factor:[863,1091],same:[15,16,17,40,41,43,863,872,873,907,908,913,917,937,938,950,954,970,971,974,975,1002,1004,1009,1010,1011,1022,1036,1037,1043,1048,1060,1065,1070,1075,1087,1088,1089,1091,1154,1155,1172,1173,1174,1175,1176,1177,1178,1179,1203,1220,1221,1222,1223,1224,1225,1226,1227,1245,1249],same_arrai:[40,41],sampl:[937,992,1053,1054,1147,1148,1150,1151,1172,1180,1203,1220,1228],satisfi:[937,944,1060,1062,1066],save:[40,41,937,1015,1026,1053,1055,1232,1233],save_debug_info:1197,save_dir:[411,412,863,878,1091],save_to_disk:[1191,1193,1197,1232,1233],save_weight:[1232,1233],scalar:[937,951,1002,1029,1033],scale:[863,905,906,1037,1045,1091,1172,1180,1183,1184,1189,1190,1220,1228,1231,1236,1239],scaled_dot_product_attent:1172,scatter:[937,1002,1010,1011],scatter_flat:[119,277,413,531,652,937],scatter_nd:[119,277,413,531,652,937],scene:[1037,1040,1042,1044,1045,1046],schemat:1203,screen:[40,41],search:[15,18,19,40,41],second:[40,41,803,804,863,894,937,945,958,966,1006,1014,1024,1037,1039,1040,1044,1087,1089,1091,1236,1237,1238],secondli:1249,see:[43,59,378,411,412,464,803,804,818,819,820,822,847,863,875,876,877,878,913,937,940,993,994,1037,1070,1079,1197,1201,1203,1211,1213,1214,1216,1217,1219],seed:[40,41,166,464,759,1147],seed_valu:[40,41,464,1147,1152],seem:1203,seen_set:[937,980],select:[937,944,1019,1246,1249],self:[40,41,43,59,378,411,412,822,847,863,875,876,877,878,913,1037,1091,1197,1201,1203,1211,1213,1214,1216,1217,1219,1236,1240,1245,1249],sent:1091,seper:[937,972],seq:[40,41,42,1154,1155,1232,1233],sequenc:[15,16,17,40,41,42,43,464,809,810,861,862,863,872,873,882,883,884,885,886,887,888,889,892,893,907,913,917,937,940,944,946,948,954,955,969,982,995,998,1003,1007,1008,1011,1018,1022,1025,1030,1035,1037,1041,1053,1057,1058,1060,1063,1091,1135,1146,1147,1149,1151,1154,1156,1157,1158,1159,1160,1161,1162,1172,1173,1174,1175,1176,1177,1178,1179,1189,1190,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1229,1232,1233,1234,1235,1236,1240,1242,1243],sequenti:1203,set:[15,18,19,40,41,809,810,863,892,893,905,906,907,937,939,961,982,1012,1013,1014,1015,1037,1040,1042,1043,1044,1045,1046,1060,1063,1091,1135,1136,1143,1145,1146,1147,1148,1152,1154,1156,1157,1158,1159,1160,1161,1162,1201,1203,1220,1229,1236,1237,1238,1239,1240,1241,1246,1249],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1201,set_debug_mod:44,set_default_devic:863,set_default_dtyp:913,set_default_float_dtyp:913,set_default_int_dtyp:913,set_default_nod:1091,set_exception_debug_mod:44,set_framework:[40,41,59,1091,1203,1245,1246,1249],set_ivy_backend:[40,41],set_min_bas:937,set_min_denomin:937,set_nest_at_index:1135,set_nest_at_indic:1135,set_param:1197,set_queue_timeout:937,set_split_factor:[863,1091],set_stat:[1236,1237,1238,1239,1240,1241],set_tmp_dir:937,set_with_grad:1037,setter:1091,sever:1249,sgd:[1203,1236],shape0:1091,shape:[40,41,43,376,377,413,427,440,443,464,652,797,798,863,875,913,917,937,938,948,950,954,955,968,969,970,971,973,975,979,982,1002,1003,1004,1007,1008,1009,1010,1011,1017,1019,1022,1035,1036,1053,1057,1060,1062,1070,1075,1076,1091,1147,1149,1150,1151,1154,1155,1172,1174,1176,1178,1197,1201,1220,1222,1223,1224,1225,1226,1227,1234,1235],shape_slic:[40,41],shape_to_tupl:937,share:[40,41,1203,1246],shift:1091,should:[40,41,42,43,464,803,804,806,822,847,861,862,863,937,948,949,956,1002,1008,1037,1040,1042,1044,1045,1046,1070,1079,1091,1154,1155,1203],show:[40,41,1197,1203,1249],show_debug_info:1197,show_graph:[1191,1203,1232,1233,1236,1240],show_mod_in_top_mod:[1232,1233],show_structur:[1232,1233],show_sub_contain:[40,41],show_v:[1232,1233],show_v_in_top_v:[1232,1233],shown:[40,41],shp:1091,shuffl:[40,41,166,464,759,1147],shuffle_h5_fil:[40,41],sigmoid:[775,1164,1203,1245],signatur:[43,59,378,411,412,413,449,454,458,461,462,464,863,875,876,877,878,913,1037,1197,1201,1211,1213,1214,1216,1217,1219],signific:1249,similar:[43,1172,1183,1220,1231],simpl:[43,937,967,1203,1246,1249],simplest:1246,simpli:[40,41,43,1203,1246,1249],simultan:1203,sin:[743,937,972,1070,1085,1246],sinco:1246,sine:[1070,1073,1074,1083,1084],singl:[40,41,861,862,863,872,873,892,893,894,895,937,1019,1029,1033,1053,1058,1091,1147,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1203,1246,1249],singleton:[818,819,820],singular:[1060,1065],sinh:[743,1070],siren:[1203,1211],size:[40,41,42,413,442,809,810,863,886,887,888,889,905,906,907,937,940,948,993,994,1010,1018,1053,1057,1060,1063,1065,1091,1147,1148,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1220,1221,1222],size_ordered_arrai:[40,41],skew:[1060,1066],skinv:1249,skip:[40,41],slice:[40,41,815,816,937,974,975,1091,1135,1142],slice_kei:[40,41],slice_obj:[40,41,1091],slice_via_kei:[40,41],slide:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],slope:[1164,1166],small:[1185,1186,1187,1188,1189,1190,1203,1234,1235,1246],smaller:[937,951],smallest:[40,41,799,800,801,937,943,950],smallest_norm:[378,799,800],softmax:[182,475,775,1164,1172,1183,1184],softplu:[775,1164],solv:1249,some:[40,41,43,937,940,1037,1039,1040,1042,1044,1045,1046,1051,1172,1180,1203,1220,1228,1246,1249],some_backend:43,some_namespac:43,someth:[43,1249],something_cool:43,somewher:[40,41],sort:[40,41,42,816,1060,1065,1091],sort_by_kei:[40,41],sorting_funct:[815,816],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,376,377,378,380,381,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,797,798,799,800,801,803,804,805,806,807,809,810,815,816,818,819,820,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1201,1206,1207,1208,1209,1210,1211,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1247,1248,1249],space:[937,940,972,993,994],spars:[1185,1188],sparse_cross_entropi:1185,spawn:[937,1000],specif:[40,41,43,863,905,937,956,963,964,965,1000,1087,1088,1089,1090,1091,1147,1153,1203,1232,1233,1245,1246],specifc:[1147,1148],specifi:[40,41,43,809,810,818,819,820,863,882,883,884,885,886,887,888,889,892,893,897,899,903,906,907,908,913,917,919,937,940,942,943,944,951,954,955,973,974,975,981,993,994,1022,1032,1035,1060,1063,1091,1135,1140,1141,1145,1146,1154,1155,1156,1157,1158,1159,1160,1161,1162],split:[40,41,119,277,413,531,652,863,872,886,887,888,889,905,906,907,937,995,1091],split_arg:1091,split_factor:[863,872,1091],split_func_cal:[863,1091],split_siz:1091,spread:[863,895,1091],squar:[937,982,1060,1062],squeez:[119,277,413,531,652,937],stabil:[815,816,937,1020,1021],stabl:[815,816,937,977,978,1012,1013,1020,1021],stable_divid:937,stable_pow:937,stack:[40,41,277,652,937,1053,1058,1135,1136,1143,1220,1229],stack_imag:[157,335,454,577,729,1053],stacked_dim_s:1091,stage:43,standard:[40,41,43,799,800,1147,1150,1154,1160,1189,1190,1234,1235],start:[40,41,411,412,413,414,437,438,464,863,878,937,940,993,994,1091,1203,1246],starting_index:[40,41],starting_split_factor:[863,1091],state:[1091,1172,1182,1191,1192,1193,1197,1203,1206,1207,1208,1209,1210,1211,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245],statement:1246,static_argnam:[413,419,861,862],static_argnum:[413,419,861,862],std:[464,1147,1150],step:[40,41,413,414,863,937,940,993,994,1037,1039,1040,1042,1044,1045,1046,1087,1088,1089,1090,1091,1203,1236,1237,1238,1239,1240,1241,1245,1249],stephen:1203,stick:1203,still:[40,41],stochast:[1236,1241],stop:[40,41,411,412,413,414,437,438,863,878,907,937,940,993,994,1037,1040,1042,1044,1045,1046,1048,1087,1088,1089,1090,1091,1236,1237,1238,1239,1240,1241],stop_gradi:[40,41,330,449,572,723,863,907,1037,1040,1042,1044,1045,1046,1087,1088,1089,1090,1091,1236,1237,1238,1239,1240,1241],stopiter:1091,store:[40,41,937,972,1018,1037,1051,1232,1233],store_var:[1232,1233],str:[15,16,17,40,41,42,43,376,377,378,380,381,799,800,801,809,810,861,862,863,872,873,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,907,913,918,919,924,925,926,927,928,929,936,937,944,961,963,964,965,998,1000,1003,1010,1011,1060,1063,1087,1088,1089,1090,1091,1135,1139,1154,1155,1209,1210,1220,1231,1232,1233],str_to_nod:1091,straight:1246,strength:[1203,1249],stride:[1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],string:[40,41,43,863,879,881,890,891,896,902,908,909,912,913,917,923,925,926,927,936,937,940,944,961,982,1003,1004,1036,1091,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227,1232,1233],structur:[40,41,42,43,937,956],structural_diff:[40,41],sub:[40,41,863,886,887,892,893,894,895,937,1018,1087,1088,1089,1090,1091],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1091,sub_mod:[1232,1233],sub_modul:[1242,1243],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1203,1204,1234,1235,1242,1243],subsequ:43,subset:43,substr:[40,41],suggest:1203,suitabl:[1053,1058],sum:[40,41,413,442,443,863,892,893,894,895,907,937,960,964,1010,1011,1091,1154,1155,1161],summat:[40,41,1154,1155],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,86,87,88,91,97,100,101,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,158,159,160,162,163,167,168,169,170,171,172,174,175,176,177,178,179,180,183,185,186,188,189,190,191,192,193,194,199,201,202,203,206,207,208,211,217,220,221,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,336,337,338,340,341,342,343,345,346,349,350,351,352,354,355,356,357,358,359,360,361,364,366,367,368,369,370,371,372,377,379,380,381,384,385,386,387,390,396,399,400,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,455,456,457,459,460,463,465,467,468,469,470,471,472,473,476,477,479,480,481,482,483,484,485,490,492,493,494,497,498,499,500,503,509,512,513,525,526,527,528,529,530,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,573,574,575,576,578,579,580,582,583,584,588,589,590,591,593,594,595,596,597,598,599,603,604,605,610,612,613,614,617,618,619,620,623,629,632,633,645,646,647,648,649,650,651,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,730,731,732,734,735,736,737,738,739,741,742,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,765,767,768,769,770,771,772,773,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,798,800,801,804,805,806,807,810,816,819,820,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1066,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1192,1193,1195,1196,1198,1202,1203,1207,1208,1210,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1235,1236,1237,1238,1239,1240,1241,1243,1244,1245,1246,1248,1249],supports_inplac:937,suppos:1249,svd:[339,581,733,1060],swap:[40,41,937,1024],swapax:[40,41,531,652,937,1249],symmetr:[1060,1066],syntax:[411,413,449,454,458,461,462,464],tab:1203,take:[937,992],taken:[1154,1156,1157,1158,1160,1162],tan:[743,1070,1075],tangent:[1070,1075,1076,1077,1085,1086,1164,1171],tanh:[743,775,1070,1164],target:[40,41,863,879,882,883,884,885,886,887,888,889,892,893,894,895,908,1091,1203],target_dict:[40,41],task:[1087,1088,1089,1090],team:1249,templat:1203,temporari:[937,1015,1026],tensor:[40,41,43,413,442,443,815,816,863,881,913,923,937,940,942,943,948,993,994,997,999,1002,1003,1004,1008,1010,1011,1018,1036,1091,1147,1148,1149,1172,1180,1182,1203,1220,1228,1230,1236,1237,1238,1239,1240,1241,1245,1246],tensorflow:[1172,1174,1176,1178,1203,1220,1222,1224,1226,1246,1249],term:[40,41,1172,1182,1203,1220,1230],termcolor:[40,41,42],termin:[40,41,42,1091],test:[803,806,818,819,820,913,928,929],tf_concat:1203,than:[40,41,799,800,863,907,937,940,950,951,970,989,997,1019,1022,1037,1043,1091,1147,1151,1203,1246],thei:[40,41,43,1070,1076,1087,1088,1089,1147,1148,1203,1242,1243,1246],them:[1203,1249],themselv:[1135,1136],therefor:43,thi:[40,41,42,43,809,810,863,885,889,895,902,907,912,937,940,972,1006,1008,1014,1037,1040,1042,1043,1044,1045,1046,1051,1060,1063,1091,1135,1139,1144,1154,1156,1157,1158,1159,1160,1161,1162,1172,1181,1203,1232,1233,1236,1237,1238,1239,1240,1241,1245,1246,1249],thing:[43,1203],those:[40,41,937,951,1037,1051,1060,1065,1091],though:43,threshold:[937,997,999],through:[40,41],tile:[277,531,652,937],time:[937,1025,1037,1040,1044,1087,1088,1089,1090,1091,1147,1148,1172,1182,1220,1231,1232,1233,1249],time_chronolog:[1191,1192,1197],time_infer:[1191,1192],timeout:[40,41,42,863,872,873,937,1006,1014,1091],timestep:[1172,1182,1220,1229],timing_fnam:[1191,1192],titl:1203,tmp_dir:937,tmp_dr:[937,1015],to_appli:[40,41],to_clon:[863,1091],to_dev:[40,41,112,271,411,524,644,863],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[863,1091],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1203],to_ivy_modul:[184,783,1203,1209],to_json:[40,41],to_kv_fn:[1172,1183],to_kv_v:[1172,1183],to_list:[40,41,413,652,937],to_multi_dev:[40,41],to_mut:[1135,1137,1144],to_n:[15,40,41,1203],to_nod:1091,to_numpi:[40,41,413,652,937,1203,1245],to_out_fn:[1172,1183],to_out_v:[1172,1183],to_q_fn:[1172,1183],to_q_v:[1172,1183],to_raw:[40,41],to_scalar:[413,652,937],todo:1091,togeth:[40,41,1242,1243],tool:[1203,1246],top_mod:[1232,1233],topic:1249,torch:[43,861,862,1203,1245,1246,1249],torch_concat:1203,torchfcmodel:1245,total:[40,41,42,863,909,1091],total_mem_on_dev:863,total_mem_on_nod:1091,tpu:[863,910,1091],tpu_is_avail:[411,524,644,863,1091],tpye:[913,924],trace:[40,41,937,989],track:[863,1091,1135,1144,1232,1233],track_submod_call_ord:[1232,1233],track_submod_ret:[1232,1233],trail:[1234,1235],train:[1037,1039,1040,1044,1203,1204],trainabl:[1037,1043,1203,1204,1209,1210,1232,1233,1242],trainer:1203,tran:1249,transform:[1172,1180,1181],transpos:[40,41,119,277,413,652,863,894,937,1091,1172,1174,1176,1178,1220,1222,1224,1226],travers:[15,18,19,40,41,1135,1144],treat:[40,41,861,862],tree_depth:1201,tree_height:1197,tri:[40,41],trigonometr:[803,805,1070,1071,1075,1083],trim_kei:[40,41],trust:[1037,1044,1236,1238],truth:[803,807,937,966,1067,1068,1069],try_else_non:937,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[863,1091],tune_dev_alloc:863,tune_dev_split:863,tune_node_alloc:1091,tune_node_split:1091,tune_step:[863,1091],tupl:[15,16,17,18,19,40,41,43,376,377,797,798,809,810,818,819,820,861,862,937,955,972,973,1017,1035,1091,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1149,1154,1156,1157,1158,1159,1160,1161,1162],two:[40,41,937,940,945,958,996,1024,1060,1063,1065],type:[15,18,40,41,42,43,59,380,381,411,412,797,798,800,801,803,804,806,818,819,820,822,847,863,875,876,877,878,890,891,895,907,913,917,918,919,923,924,925,926,927,928,929,936,937,938,940,944,950,954,956,966,970,971,973,982,989,1002,1003,1004,1009,1023,1033,1036,1037,1043,1048,1070,1079,1091,1197,1201,1203,1211,1213,1214,1216,1217,1219,1232,1233,1246],types_to_iteratively_nest:[40,41,42],uint8:[1053,1055,1059],uint8_img_to_float_img:1053,unchang:[15,16,17,18,19],underli:[803,804],unif:1091,unifi:[40,41,863,892,893,894,895,907,1091,1203],uniform:[40,41,1147,1148,1150,1151,1211,1213,1214,1217,1218],uniformli:[1147,1149,1151],unify_arrai:1091,unify_it:1091,unify_nest:1091,union:[15,18,19,40,41,43,376,377,378,380,381,797,798,799,800,801,803,804,805,806,809,810,815,816,818,819,820,822,847,861,862,863,881,886,887,888,889,907,908,913,917,918,919,923,924,925,926,927,928,929,936,937,938,939,940,942,943,944,945,946,948,950,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,972,973,974,975,979,981,982,983,990,991,992,993,994,996,997,998,999,1002,1003,1004,1007,1008,1009,1010,1011,1016,1017,1018,1019,1022,1024,1025,1027,1028,1029,1030,1032,1033,1034,1035,1036,1091,1135,1136,1137,1143,1144],uniqu:[863,872,873,1087,1088,1089,1090,1091,1135,1139],unique_kwarg:1091,unit:[863,1070,1071,1073,1091,1164,1165,1166,1167],unitari:[1060,1065],unless:[937,1002,1004,1036],unlik:[863,1091],unnorm:[1147,1148],unpack:[937,1032],unrol:[1172,1182],unset:1246,unset_debug_mod:44,unset_default_devic:863,unset_default_dtyp:913,unset_default_float_dtyp:913,unset_default_int_dtyp:913,unset_framework:[59,1246],unset_with_grad:1037,unstack:[40,41,119,277,413,531,652,937],unus:[861,862],updat:[40,41,413,442,443,863,872,937,987,1010,1011,1037,1039,1040,1042,1044,1045,1046,1087,1088,1089,1091,1135,1140,1141,1145,1146,1172,1182,1209,1210,1236,1237,1238,1239,1240,1241,1246,1249],update_backend:[40,41],update_config:[40,41],update_inference_tim:1197,upper:[40,41,1147,1151],upper_depth:[1232,1233],usabl:[1203,1249],usag:[863,907,1091],use:[40,41,42,43,464,863,872,873,898,910,937,1007,1020,1021,1091,1172,1183,1189,1190,1203,1234,1235,1246,1249],used:[40,41,43,464,863,872,902,905,906,912,913,924,937,977,978,995,1004,1010,1011,1012,1013,1036,1037,1044,1045,1060,1063,1087,1088,1089,1090,1091,1135,1144,1220,1231,1236,1238,1239,1245,1246],used_dev:[863,872],used_mem_on_dev:863,used_mem_on_nod:1091,used_node_str:1091,used_node_strs_dict:1091,useful:[40,41,863,907,1091,1172,1181,1203,1246],user:[1203,1220,1231,1232,1233,1246,1249],uses:1203,using:[40,41,1037,1039,1040,1135,1138,1142,1154,1155,1172,1180,1184,1203,1220,1228,1245,1246,1249],util:[863,896,1091],utility_funct:[818,819,820],v_with_top_v_key_chain:[1232,1233],val:[40,41,413,432,433,434,822,857,937,985,986,987,1012,1013,1201],valid:[818,819,820,913,918,937,1020,1021,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],valid_dtyp:913,valu:[40,41,413,803,807,815,816,863,875,906,907,937,938,940,942,943,951,952,953,955,956,962,966,972,973,974,975,990,991,993,994,997,999,1006,1007,1008,1009,1010,1011,1012,1013,1014,1030,1033,1034,1035,1037,1041,1044,1053,1059,1060,1065,1067,1068,1069,1070,1080,1081,1082,1087,1088,1089,1091,1135,1139,1140,1141,1145,1146,1147,1150,1151,1154,1156,1158,1172,1183,1184,1189,1190,1197,1220,1231,1234,1235,1236,1238],value_is_nan:937,vanilla:[1087,1089],var_shap:1211,variabl:[15,16,17,18,19,40,41,330,449,572,723,937,947,985,986,987,988,989,1023,1037,1040,1041,1042,1043,1044,1045,1046,1048,1051,1087,1088,1089,1090,1172,1183,1189,1190,1209,1210,1211,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243],variable_data:[449,723,1037],varianc:[40,41,1154,1162,1249],varieti:1246,variou:[43,1203],vector:[40,41,458,460,809,810,937,953,958,1060,1065,1066,1172,1181,1220,1230],vector_norm:[40,41,90,210,389,502,622,809],vector_to_skew_symmetric_matrix:[161,339,458,581,733,1060],verbos:1248,veri:[43,1203],version:43,via:[1135,1136,1143,1246],view:[1053,1058],vision:1203,visual:1246,volum:[1172,1177],vw_tm1:[1037,1040,1044],wai:[1246,1249],wait:[40,41,42],want:[1203,1246,1249],warn:[59,66,67,68,69,70],warp:[454,455,1053,1054],watch:1245,weight:[1037,1039,1040,1042,1044,1045,1046,1172,1181,1182,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1232,1233,1236,1238,1239],weight_initi:[1220,1221,1222,1223,1224,1225,1226,1227,1229,1230],weights_path:[1232,1233],well:[40,41,937,981],were:[40,41,1091],what:1203,when:[40,41,42,43,863,937,949,1021,1034,1060,1065,1091,1203,1232,1233,1246,1249],where:[40,41,43,277,413,652,818,819,820,822,847,937,940,948,951,955,968,983,990,991,1002,1035,1060,1065,1135,1136,1143,1147,1148],wherea:43,wherebi:[1135,1144],whether:[15,18,19,40,41,42,818,819,820,861,862,863,881,894,898,902,907,910,912,913,923,927,928,929,936,937,939,945,946,959,962,967,972,979,981,984,988,989,995,1016,1023,1032,1033,1037,1040,1041,1042,1043,1044,1045,1046,1048,1087,1088,1089,1090,1091,1135,1136,1137,1139,1143,1144,1147,1148,1164,1165,1172,1180,1203,1209,1210,1220,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241],which:[40,41,42,43,464,797,798,799,800,801,809,810,818,819,820,861,862,863,872,873,881,886,887,888,889,892,893,894,895,897,899,903,905,906,907,913,918,923,927,936,937,940,944,954,956,958,959,960,962,969,973,974,975,976,982,983,992,993,994,1001,1002,1003,1004,1005,1007,1010,1011,1018,1022,1032,1034,1036,1037,1040,1041,1042,1044,1045,1046,1048,1050,1051,1053,1055,1060,1063,1070,1076,1091,1135,1139,1140,1141,1145,1146,1147,1148,1149,1150,1151,1154,1156,1157,1158,1159,1160,1161,1162,1164,1169,1172,1183,1184,1203,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1243,1245,1246],whitespac:[40,41,42],whose:[43,822,847,937,944,949,1154,1155,1156,1157,1158,1160,1162],why:[1203,1204],width:[1053,1058],wiki:1249,wikipedia:1249,window:[1053,1058,1172,1173,1174,1175,1176,1177,1178,1179,1220,1221,1222,1223,1224,1225,1226,1227],wise:[40,41,43,803,804,805,807,822,847,937,950,951,966,970,971,997,999,1009,1037,1040,1042,1044,1046,1067,1068,1069,1070,1071,1073,1075,1076,1079,1080,1081,1082,1083,1085,1164,1165,1166,1167,1168,1169,1170,1171],wish:1246,with_arg_label:[1191,1193,1197,1232,1233],with_array_cach:[1191,1192,1193,1197],with_bia:[1220,1230],with_cal:[937,962],with_default_key_color:[40,41],with_edge_label:[1191,1193,1197,1232,1233],with_entries_as_list:[40,41],with_grad:[1037,1047,1232,1233],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1091,with_output_label:[1191,1193,1197,1232,1233],with_partial_v:[1232,1233],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,413,444,937,1018,1091],with_to_kv_fn:[1220,1231],with_to_out_fn:[1220,1231],with_to_q_fn:[1220,1231],within:[15,18,19,937,940,1060,1065,1147,1151],without:[40,41,43,937,1006,1008,1014,1135,1137,1246],wonder:1203,word:[15,16,17,937,940,1147,1151,1209,1210],work:[43,1245],worker:[863,872,873,1091],worker_class:[863,872,873,1091],worker_kwarg:1091,would:[43,815,816,1164,1169,1203,1246,1249],wrap:[15,40,41,42,43,411,413,449,454,458,461,462,464,937,949,1037,1051,1203],wrapper:43,write:[40,41,43,1203,1204,1249],written:[43,1203,1249],ws_new:[1037,1040,1042,1044,1045,1046],x1_i:[803,804,937,966,1070,1079],x2_i:[803,804,937,966,1070,1079],x_feat_dim:[1172,1183],x_i:[803,806],x_in:[1203,1245],x_inv:[1060,1062],x_max:[413,937,951],x_min:[413,937,951],x_sub:1091,xkk:1249,xkkm1:1249,xkm1km1:1249,xs0:1091,xs_t:1091,year:[1203,1249],yet:[1135,1144,1249],yield:[937,1034],you:[1203,1245,1246,1249],your:[1203,1245,1246,1249],your_awesome_project:1246,yourself:1203,zero:[40,41,77,198,376,489,609,797,818,819,820,937,955,1002,1004,1010,1011,1035,1036,1037,1039,1040,1044,1045,1172,1180,1203,1211,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1236,1237,1238,1239],zero_pad:[277,413,531,652,937],zeros_lik:[119,277,413,531,652,937],zip:1091,zk_e:1249},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":962,"function":[77,79,84,89,92,93,94,95,96,98,99,198,200,205,209,212,213,214,215,216,218,219,376,378,383,388,391,392,393,394,395,397,398,489,491,496,501,504,505,506,507,508,510,511,609,611,616,621,624,625,626,627,628,630,631,797,799,803,808,811,812,813,814,815,817,818],Ones:1216,Using:1246,abs:[278,532,653,938],aco:[744,1071],acosh:[745,1072],activ:[182,363,475,601,775,1164,1206],adam:1237,adam_step:1039,adam_upd:1040,algebra:[90,92,210,212,389,391,502,504,622,624,809,811],all:[100,220,399,512,632,819],all_equ:939,all_nested_indic:1136,ani:[101,221,400,513,633,820],api:[0,43,75,103,196,223,374,402,487,515,607,635,795],arang:[120,279,414,533,654,940],arg_nam:941,argmax:[121,415,534,655,942],argmin:[122,416,535,656,943],args_to_ivi:16,args_to_n:17,argsort:[97,217,396,509,629,816],arithmet:[1,104,224,403,516,636],arrai:[0,3,43,75,102,103,105,123,196,222,223,225,232,280,374,401,402,404,417,487,514,515,517,536,607,634,635,637,657,795,822,944],array_equ:[281,658,945],arrays_equ:946,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[746,1073],asinh:[747,1074],assert_supports_inplac:947,atan2:[749,1076],atan:[748,1075],atanh:[750,1077],attribut:[5,106,226,405,518,638],backend:[43,73],bilinear_resampl:[158,336,455,578,730,1054],binary_cross_entropi:1186,bitwis:[7,107,227,406,519,639],bitwise_and:[85,206,384,497,617,804],broadcast_to:[282,659,948],builder:51,builtin:[102,222,232,401,514,634,822],builtin_ab:[233,823],builtin_add:[234,824],builtin_and:[235,825],builtin_bool:[236,826],builtin_contain:[237,827],builtin_deepcopi:[238,828],builtin_dir:[239,829],builtin_eq:[240,830],builtin_float:[241,831],builtin_floordiv:[242,832],builtin_g:[243,833],builtin_getattr:[244,834],builtin_getattribut:[245,835],builtin_getitem:[246,836],builtin_gt:[247,837],builtin_int:[248,838],builtin_invert:[249,839],builtin_l:[250,840],builtin_lt:[251,841],builtin_mul:[252,842],builtin_n:[253,843],builtin_neg:[254,844],builtin_or:[255,845],builtin_po:[256,846],builtin_pow:[257,847],builtin_radd:[258,848],builtin_rand:[259,849],builtin_rfloordiv:[260,850],builtin_rmul:[261,851],builtin_ror:[262,852],builtin_rpow:[263,853],builtin_rsub:[264,854],builtin_rtruediv:[265,855],builtin_rxor:[266,856],builtin_setitem:[267,857],builtin_sub:[268,858],builtin_truediv:[269,859],builtin_xor:[270,860],cache_fn:949,cast:[124,283,418,537,660,917],ceil:[284,661,950],choleski:[734,1061],choose_random_framework:61,citat:1203,clear_framework_stack:62,clear_mem_on_dev:[646,879],clip:[285,662,951],clip_matrix_norm:952,clip_vector_norm:953,clone:1106,clone_arrai:1107,clone_it:1108,clone_nest:1109,clonedit:1093,cloneditem:1092,clonednest:1094,closest_valid_dtyp:918,code:1249,comparison:[9,108,228,407,520,640],compil:[286,419,663,861,862,1191],compile_graph:1192,concaten:[125,287,420,538,664,954],constant:[76,197,375,488,608,796],constant_pad:[288,539,665,955],contain:[40,41],container_typ:[666,956],content:1203,contribut:43,conv1d:[188,366,479,787,1173,1221],conv1d_transpos:[189,367,480,788,1174],conv1dtranspos:1222,conv2d:[190,368,481,603,789,1175,1223],conv2d_transpos:[191,369,482,790,1176],conv2dtranspos:1224,conv3d:[192,370,483,604,791,1177,1225],conv3d_transpos:[193,371,484,792,1178],conv3dtranspos:1226,convers:15,convert:[184,783,1209],convert_dtyp:919,copy_arrai:[667,957],copy_nest:1137,core:[111,231,410,523,643,821],cos:[86,385,498,618,805],cosh:[751,1078],cprint:1248,creation:[77,198,376,489,609,797],cross:[289,668,958],cross_entropi:1187,cumprod:[126,290,421,669,959],cumsum:[670,960],current_framework:63,current_framework_str:[671,961],data:[79,83,200,204,378,382,491,495,611,615,799,802],debug_mod:45,debugg:44,default_devic:880,default_dtyp:920,default_float_dtyp:921,default_int_dtyp:922,default_nod:1110,depthwise_conv2d:[194,372,485,605,793,1179],depthwiseconv2d:1227,design:43,dev:[114,273,526,647,881],dev_clon:882,dev_clone_arrai:883,dev_clone_it:884,dev_clone_nest:885,dev_dist:886,dev_dist_arrai:887,dev_dist_it:888,dev_dist_nest:889,dev_from_str:[115,274,527,648,890],dev_to_str:[116,275,528,649,891],dev_unifi:892,dev_unify_arrai:893,dev_unify_it:894,dev_unify_nest:895,dev_util:896,devclonedit:866,devcloneditem:865,devclonednest:867,devdistit:869,devdistitem:868,devdistnest:870,devic:[20,112,271,411,524,644,863],devmapp:872,devmappermultiproc:873,distribute_nest:1111,divid:1079,document:1203,dropout:[1180,1228],dtype:[127,291,422,540,672,913,923],dtype_bit:[128,292,423,541,673,924],dtype_from_str:[129,293,424,542,674,925],dtype_to_str:[130,294,425,543,675,926],ecosystem:52,einops_rearrang:963,einops_reduc:964,einops_repeat:965,einsum:[174,354,467,593,767,1155],elementwis:[84,205,383,496,616,803],equal:[544,676,966],erf:[463,752,1080],execute_with_gradi:[155,331,450,573,724,1041],exist:967,exp:[753,1081],expand_dim:[295,677,968],extens:[90,210,389,502,622,809],finfo:[81,202,380,493,613,800],firstlayersiren:1213,flip:[131,296,426,545,678,969],float_img_to_uint8_img:1055,floor:[297,679,970],floormod:[298,680,971],fomaml_step:1088,fourier_encod:972,framework:59,full:[132,299,427,546,681,973],func:72,gather:[133,300,428,547,682,974],gather_nd:[134,301,429,548,683,975],geglu:1207,gelu:[364,476,776,1165,1208],gener:[22,119,277,413,531,652,937],get_all_arrays_in_memori:976,get_all_arrays_on_dev:897,get_framework:64,get_min_bas:977,get_min_denomin:978,get_num_dim:[684,979],get_referrers_recurs:980,global:1194,glorotuniform:1214,gpu_is_avail:[898,1112],gradient:[24,154,330,449,572,723,1037],gradient_descent_upd:1042,gradient_imag:[159,337,456,579,731,1056],graph:1197,gym:53,handler:59,has_nan:981,helper:1199,ident:[135,302,430,549,685,982],iinfo:[82,203,381,494,614,801],imag:[26,157,335,454,577,729,1053],index_nest:1138,indices_wher:[136,303,431,686,983],initi:1211,inplac:[11,109,229,408,521,641],inplace_arrays_support:984,inplace_decr:[137,304,432,550,687,985],inplace_incr:[138,305,433,551,688,986],inplace_upd:[139,306,434,552,689,987],inplace_variables_support:988,inv:[735,1062],invalid_dtyp:927,is_arrai:[140,307,435,553,690,989],is_float_dtyp:928,is_int_dtyp:929,is_vari:[156,332,451,574,725,1043],isfinit:[87,207,386,499,619,806],isinf:[308,554,691,990],isnan:[309,555,692,991],ivi:[43,50,51,52,53,54,55,56,57,58,794,1245,1246,1249],ivymodul:[185,784],jax:74,lamb:1238,lamb_upd:1044,lar:1239,lars_upd:1045,layer:[187,365,478,602,786,1172,1220],layer_norm:1190,layernorm:1235,leaky_relu:[777,1166],linalg:[28,161,339,458,581,733,1060],linear:[90,92,210,212,389,391,502,504,622,624,809,811,1181,1230],linear_resampl:[141,310,436,556,693,992],linspac:[142,311,437,557,694,993],log:[754,1082,1200],log_global_inference_abs_tim:1195,log_global_inference_rel_tim:1196,logic:[30,164,344,461,585,740,1067],logical_and:[345,741,1068],logical_not:[88,208,387,500,620,807],logical_or:[346,742,1069],logspac:[143,312,438,558,695,994],loss:1185,lstm:1229,lstm_updat:1182,maml_step:1089,manipul:[93,213,392,505,625,812],map:1139,map_nest_at_index:1140,map_nest_at_indic:1141,match_kwarg:995,math:[32,165,347,462,586,743,1070],matmul:[313,559,696,996],matrix_norm:[162,340,459,582,736,1063],maximum:[697,997],mech:54,memori:55,meshgrid:[314,698,998],meta:[34,1087],method:[89,209,388,501,621,808],minimum:[699,999],model:56,modul:[1232,1233,1245],multi:1091,multi_head_attent:1183,multi_index_nest:1142,multidevcontain:42,multidevit:876,multidevitem:875,multidevnest:877,multiheadattent:1231,multinodeit:1097,multinodeitem:1096,multinodenest:1098,multinomi:[167,349,465,588,760,1148],multiprocess:[700,1000],mxnet:195,nativ:1245,nest:1135,nested_indices_wher:1143,nested_map:1144,network:1245,next:1203,node:[1091,1113],node_dist:1114,node_dist_arrai:1115,node_dist_it:1116,node_str:1117,node_to_str:1118,node_util:1119,nodedistit:1100,nodedistitem:1099,nodedistnest:1101,nodemapp:1103,nodemappermultiproc:1104,norm:[1189,1234],num_arrays_in_memori:1001,num_arrays_on_dev:899,num_cpu_cor:900,num_gpu:[117,901,1120],numpi:373,nutshel:1203,one_hot:[144,439,560,701,1002],ones:[145,315,440,561,702,1003],ones_lik:[146,316,441,562,703,1004],oper:[1,3,7,9,11,13,43,104,105,107,108,109,110,224,225,227,228,229,230,403,404,406,407,408,409,516,517,519,520,521,522,636,637,639,640,641,642],optim:[1236,1240],optimizer_upd:1046,overview:1203,param:1201,percent_used_mem_on_dev:902,percent_used_mem_on_nod:1121,pinv:[341,737,1064],portabl:1249,print_all_arrays_in_memori:1005,print_all_arrays_on_dev:903,profil:[113,272,412,525,645,878,1105],queue_timeout:1006,randint:[168,350,589,761,1149],random:[36,166,348,464,587,759,1147],random_crop:1057,random_norm:[169,351,590,762,1150],random_uniform:[170,352,591,763,1151],reduce_max:[175,355,468,594,768,1156],reduce_mean:[176,356,469,595,769,1157],reduce_min:[177,357,470,596,770,1158],reduce_prod:[178,358,471,597,771,1159],reduce_std:[359,1160],reduce_sum:[179,360,472,598,772,1161],reduce_var:[180,361,473,599,773,1162],reduct:[38,173,353,466,592,766,1154],reflect:[13,110,230,409,522,642],relu:[778,1167],repeat:[317,704,1007],reptile_step:1090,reshap:[705,1008],robot:57,round:[318,706,1009],run:1246,scaled_dot_product_attent:1184,scatter_flat:[147,319,442,563,707,1010],scatter_nd:[148,320,443,564,708,1011],search:[94,214,393,506,626,813],seed:[171,764,1152],sequenti:[1242,1243],set:[95,215,394,507,627,814],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:904,set_default_dtyp:930,set_default_float_dtyp:931,set_default_int_dtyp:932,set_default_nod:1122,set_exception_debug_mod:48,set_framework:65,set_min_bas:1012,set_min_denomin:1013,set_nest_at_index:1145,set_nest_at_indic:1146,set_queue_timeout:1014,set_split_factor:[905,1123],set_tmp_dir:1015,set_with_grad:1047,sgd:1241,shape:[709,1016],shape_to_tupl:1017,show_graph:1193,shuffl:[172,765,1153],sigmoid:[779,1168],signatur:[89,209,388,501,621,808],sin:[755,1083],sinh:[756,1084],siren:1217,softmax:[183,477,780,1169],softplu:[781,1170],sort:[96,216,395,508,628,815],sparse_cross_entropi:1188,split:[149,321,444,565,710,1018],split_factor:[906,1124],split_func_cal:[907,1125],squeez:[150,322,445,566,711,1019],stable_divid:1020,stable_pow:1021,stack:[323,712,1022],stack_imag:[160,338,457,580,732,1058],statist:[98,218,397,510,630,817],stop_gradi:[333,452,575,726,1048],str_to_nod:1126,submodul:43,supports_inplac:1023,svd:[342,583,738,1065],swapax:[567,713,1024],tan:[757,1085],tanh:[758,782,1086,1171],tensorflow:486,tile:[324,568,714,1025],tmp_dir:1026,to_dev:[118,276,529,650,908],to_ivi:18,to_ivy_modul:[186,785,1210],to_list:[715,1027],to_n:19,to_nod:1127,to_numpi:[716,1028],to_scalar:[717,1029],torch:606,total_mem_on_dev:909,total_mem_on_nod:1128,tpu_is_avail:[530,651,910,1129],train:1245,trainabl:1245,transpos:[151,325,446,718,1030],tree:1203,try_else_non:1031,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[79,83,200,204,378,382,491,495,611,615,799,802],uint8_img_to_float_img:1059,unifi:1130,unify_arrai:1131,unify_it:1132,unify_nest:1133,unset_debug_mod:49,unset_default_devic:911,unset_default_dtyp:933,unset_default_float_dtyp:934,unset_default_int_dtyp:935,unset_framework:71,unset_with_grad:1049,unstack:[152,326,447,569,719,1032],used_mem_on_dev:912,used_mem_on_nod:1134,util:[99,219,398,511,631,818],valid_dtyp:936,value_is_nan:1033,variabl:[334,453,576,727,1050],variable_data:[728,1051],vector_norm:[91,211,390,503,623,810],vector_to_skew_symmetric_matrix:[163,343,460,584,739,1066],verbos:1247,vision:58,where:[327,720,1034,1203],why:1249,with_grad:1052,wrapper:72,write:1246,zero:[78,199,377,490,610,798,1219],zero_pad:[328,570,721,1035],zeros_lik:[153,329,448,571,722,1036]}})