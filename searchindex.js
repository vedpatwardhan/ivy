Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 21, 30, 31, 33, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 59, 60, 61, 102, 120, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 242, 244, 275, 281, 300, 305, 319, 391, 393, 403, 418, 421, 443, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 443], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 33, 34, 35, 36, 41, 44, 45, 47, 49, 60, 61, 242, 282, 411, 412, 413, 414, 415, 443, 450, 451, 452, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 486, 487], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 37, 38, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490], "base": [0, 19, 33, 38, 44, 60, 83, 93, 102, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 182, 204, 215, 216, 217, 218, 230, 242, 266, 289, 296, 305, 423, 424, 425, 427, 431, 432, 450, 451, 452, 455, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "object": [0, 46, 49, 83, 89, 102, 119, 132, 305, 391, 394, 396, 398, 399, 400, 405, 406, 407, 408, 411, 417, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477], "__init__": [0, 1, 4, 5, 29, 39, 44, 46, 47, 48, 49, 102, 103, 104, 105, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 305, 306, 411, 412, 413, 414, 415, 443, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "choose_random_backend": 0, "exclud": [0, 2, 31, 44, 83, 84, 411, 415], "none": [0, 2, 5, 12, 29, 31, 34, 38, 39, 40, 41, 42, 44, 46, 48, 49, 72, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 114, 115, 116, 119, 120, 132, 141, 142, 150, 151, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 269, 272, 276, 282, 284, 287, 288, 289, 290, 295, 296, 302, 305, 308, 310, 312, 313, 314, 320, 321, 323, 326, 328, 329, 331, 333, 335, 337, 338, 339, 340, 341, 342, 351, 353, 356, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 423, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 453, 454, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "clear_backend_stack": 0, "current_backend": [0, 29, 34], "arg": [0, 4, 44, 46, 48, 132, 141, 156, 160, 164, 176, 242, 288, 453, 454, 476, 477], "kwarg": [0, 4, 44, 46, 48, 132, 141, 156, 160, 164, 242, 281, 453, 454, 476, 477], "return": [0, 4, 5, 12, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 453, 454, 464, 473, 474, 480, 484], "current": [0, 4, 5, 12, 16, 18, 20, 21, 34, 40, 44, 49, 60, 61, 102, 113, 121, 131, 132, 141, 165, 166, 170, 172, 242, 265, 272, 276, 283, 285, 391, 392, 401, 402, 443], "prioriti": [0, 4, 19, 41], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 28, 29, 30, 31, 33, 34, 36, 37, 38, 44, 46, 47, 80, 81, 83, 84, 102, 124, 132, 141, 142, 156, 160, 164, 242, 244, 248, 256, 263, 281, 288, 329, 332, 391, 397, 431, 438, 446, 448, 453, 454, 476, 477], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 28, 31, 33, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 82, 83, 94, 98, 99, 132, 151, 182, 231, 242, 246, 305, 308, 310, 312, 314, 342, 360, 361, 391, 397, 403, 431, 432, 437, 439, 443, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "paramet": [0, 4, 5, 29, 30, 33, 46, 47, 60, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 448, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 83, 84, 85, 87, 89, 90, 91, 94, 95, 97, 101, 102, 111, 113, 124, 132, 141, 142, 151, 170, 176, 182, 208, 236, 242, 256, 263, 264, 299, 305, 308, 312, 321, 326, 329, 337, 340, 342, 346, 360, 364, 371, 376, 379, 382, 387, 388, 389, 390, 391, 393, 403, 404, 411, 412, 413, 414, 415, 418, 422, 423, 424, 426, 431, 436, 437, 438, 439, 440, 441, 442, 443, 449, 453, 454, 464, 472, 475, 480, 484], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 60, 61, 72, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 117, 119, 120, 121, 131, 132, 141, 142, 152, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 172, 174, 175, 176, 182, 231, 242, 253, 254, 256, 263, 264, 265, 271, 275, 283, 284, 285, 287, 288, 303, 305, 308, 309, 310, 312, 313, 314, 316, 318, 319, 321, 323, 325, 329, 340, 341, 342, 344, 346, 351, 359, 360, 364, 365, 367, 369, 370, 371, 373, 376, 378, 380, 381, 383, 391, 396, 397, 398, 399, 404, 405, 406, 407, 408, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "try": [0, 4, 13, 15, 16, 18, 19, 20, 37, 38, 46, 61, 242, 302, 443], "infer": [0, 4, 28, 39, 40, 44, 49, 80, 81, 83, 84, 85, 87, 90, 91, 95, 97, 101, 182, 208, 242, 268, 293, 321, 326, 371, 379], "when": [0, 4, 14, 15, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 61, 102, 108, 132, 182, 186, 205, 230, 242, 248, 275, 296, 367, 368, 369, 370, 391, 402, 418, 419, 420, 422, 431, 433, 435, 437, 439, 476, 477], "global": [0, 4, 5, 6, 12, 34, 35, 39, 40, 44, 102, 114, 115, 116, 132, 141, 142, 174, 175, 176, 242, 266, 267, 286, 289, 290, 291, 295, 296, 409, 410, 478, 479], "set": [0, 4, 5, 6, 12, 14, 17, 28, 29, 34, 36, 37, 38, 39, 40, 41, 44, 46, 47, 132, 151, 161, 162, 173, 174, 175, 176, 182, 190, 242, 243, 289, 290, 291, 292, 305, 308, 310, 311, 312, 313, 314, 342, 344, 351, 353, 356, 359, 391, 392, 401, 402, 403, 407, 408, 411, 416, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 437, 439, 464, 473, 480, 481, 482, 483, 484, 485], "ret": [0, 4, 5, 12, 29, 30, 44, 49, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 141, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 293, 295, 296, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 401, 402, 403, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 448, 453, 454, 480, 484], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 28, 29, 30, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 60, 61, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 90, 91, 94, 96, 97, 100, 101, 102, 108, 132, 151, 152, 167, 168, 169, 170, 177, 179, 182, 186, 191, 193, 196, 198, 199, 200, 204, 208, 209, 213, 224, 225, 227, 239, 242, 245, 246, 252, 263, 267, 278, 293, 299, 300, 301, 321, 324, 325, 327, 328, 329, 330, 332, 334, 336, 342, 343, 344, 345, 346, 349, 353, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 425, 428, 429, 431, 432, 437, 438, 440, 441, 443], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 61, 83, 84, 86, 87, 88, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 108, 110, 124, 132, 151, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 215, 216, 218, 219, 221, 222, 226, 230, 231, 233, 234, 235, 236, 239, 241, 242, 275, 305, 308, 310, 312, 313, 314, 342, 343, 344, 351, 353, 356, 357, 359, 360, 364, 365, 367, 368, 369, 370, 371, 375, 376, 380, 381, 382, 383, 387, 388, 389, 391, 403, 404, 411, 414, 415, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "import": [0, 4, 15, 29, 30, 31, 35, 37, 38, 39, 40, 41, 44, 46, 47, 49, 61, 321, 327, 443, 449], "numpi": [0, 4, 5, 6, 14, 15, 20, 33, 39, 40, 41, 42, 44, 46, 49, 242, 300, 431, 432, 443], "np": [0, 4, 37, 39, 40, 41, 42, 46, 47, 49, 443], "x": [0, 4, 12, 21, 29, 30, 31, 34, 38, 41, 42, 44, 46, 47, 48, 49, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 87, 89, 91, 94, 95, 97, 98, 99, 100, 101, 102, 108, 110, 117, 132, 151, 152, 153, 154, 157, 158, 170, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 198, 199, 200, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 224, 225, 227, 229, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 273, 274, 275, 277, 278, 279, 280, 284, 293, 297, 299, 300, 301, 303, 304, 305, 309, 311, 316, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 397, 401, 402, 403, 409, 410, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 464, 475], "arrai": [0, 4, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 61, 62, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 117, 119, 120, 122, 123, 124, 132, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 172, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 283, 284, 285, 287, 288, 293, 297, 299, 300, 301, 303, 304, 305, 311, 316, 318, 319, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 393, 403, 404, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 464, 472, 475], "2": [0, 4, 18, 21, 31, 38, 42, 43, 44, 46, 47, 48, 49, 61, 72, 74, 75, 76, 77, 79, 82, 83, 90, 91, 94, 96, 97, 101, 102, 108, 132, 151, 152, 168, 170, 177, 182, 186, 187, 189, 190, 193, 196, 199, 200, 204, 208, 209, 213, 218, 224, 225, 227, 239, 242, 245, 246, 249, 250, 263, 278, 293, 321, 322, 324, 325, 327, 328, 329, 332, 333, 334, 336, 342, 343, 344, 345, 346, 349, 350, 351, 353, 356, 357, 360, 362, 363, 365, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 428, 429, 431, 432, 440, 441, 443], "0": [0, 4, 29, 30, 31, 44, 46, 47, 48, 49, 72, 74, 75, 76, 77, 78, 79, 83, 84, 88, 92, 93, 97, 98, 99, 100, 101, 102, 108, 119, 132, 134, 137, 141, 144, 148, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 198, 199, 200, 204, 205, 206, 209, 215, 216, 218, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 239, 241, 242, 245, 246, 249, 250, 252, 253, 254, 263, 264, 269, 278, 284, 287, 288, 293, 299, 300, 305, 307, 308, 312, 313, 321, 324, 325, 327, 329, 330, 332, 334, 336, 342, 343, 344, 345, 346, 349, 360, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 391, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 434, 437, 438, 439, 440, 441, 443, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "print": [0, 4, 5, 6, 12, 18, 31, 38, 44, 46, 47, 48, 72, 74, 75, 76, 77, 78, 79, 83, 90, 91, 94, 96, 97, 100, 101, 102, 108, 132, 152, 167, 168, 169, 170, 172, 179, 182, 186, 191, 193, 196, 198, 199, 200, 204, 208, 209, 213, 224, 225, 227, 239, 242, 245, 246, 252, 263, 267, 285, 293, 299, 300, 301, 321, 324, 325, 327, 328, 329, 330, 332, 334, 336, 342, 343, 344, 345, 346, 349, 360, 362, 363, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 428, 429, 431, 432, 437, 438, 440, 441, 443], "function": [0, 4, 5, 6, 14, 21, 28, 29, 30, 31, 32, 33, 35, 37, 41, 43, 45, 46, 47, 48, 59, 60, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 450, 451, 452, 480, 483, 485], "py": [0, 4, 5, 29, 30, 34, 39, 40, 42, 44, 46, 48, 49, 411, 412, 413, 414, 415], "noqa": [0, 4, 5, 83, 94, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 380], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 72, 73, 74, 77, 79, 80, 81, 83, 84, 89, 93, 94, 98, 99, 102, 106, 107, 108, 112, 113, 118, 121, 131, 132, 141, 142, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 239, 241, 242, 245, 248, 249, 255, 256, 262, 264, 273, 274, 275, 277, 278, 279, 280, 282, 287, 288, 289, 290, 291, 294, 295, 296, 304, 305, 307, 308, 310, 312, 313, 314, 316, 319, 321, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484], "set_backend": [0, 4, 5, 12, 34, 35, 36, 39], "ha": [0, 4, 5, 14, 15, 16, 19, 30, 31, 34, 35, 39, 40, 44, 46, 48, 49, 60, 61, 83, 94, 132, 151, 182, 183, 226, 230, 342, 350, 358, 359, 360, 363, 371, 375, 382, 423, 424, 425, 427, 431, 434, 436, 437, 438, 439], "over": [0, 4, 14, 16, 30, 31, 41, 46, 61, 342, 351, 362, 364, 365, 409, 410, 411, 415, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 478, 479], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 80, 81, 83, 85, 95, 182, 202, 209, 214, 242, 243, 256, 257, 258, 259, 260, 263, 270, 277, 278, 279, 280, 295, 296, 305, 309, 329, 332, 391, 397, 401, 411, 415, 440, 443], "pass": [0, 4, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 46, 61, 102, 112, 132, 141, 176, 182, 190, 242, 248, 275, 305, 319, 387, 388, 389, 453, 454, 476, 477, 480, 484, 486, 487], "jax": [0, 4, 5, 6, 15, 16, 20, 39, 40, 41, 42, 44, 46, 49, 61, 305, 311, 423, 424, 425, 427, 443], "get_backend": [0, 34], "specifi": [0, 5, 28, 33, 34, 39, 40, 41, 42, 44, 47, 48, 49, 83, 84, 86, 90, 92, 93, 96, 98, 99, 100, 102, 108, 110, 113, 132, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 172, 175, 176, 177, 182, 231, 242, 263, 264, 270, 303, 321, 327, 342, 346, 351, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 382, 383, 386, 391, 396, 398, 399, 405, 406, 407, 408, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 432, 436, 438, 440, 441, 442], "isn": [0, 5, 19, 47, 61], "t": [0, 5, 15, 16, 18, 19, 31, 44, 46, 47, 48, 49, 61, 242, 246, 329, 338, 339], "associ": [0, 5, 19, 34, 36, 61, 182, 186, 226, 342, 353, 356, 366], "option": [0, 5, 18, 29, 30, 31, 34, 38, 39, 40, 41, 42, 44, 49, 61, 72, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 112, 114, 115, 116, 121, 131, 132, 151, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 250, 253, 254, 255, 261, 263, 264, 282, 284, 287, 288, 295, 296, 305, 316, 329, 332, 336, 341, 342, 351, 353, 356, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 391, 392, 397, 402, 403, 411, 412, 413, 414, 415, 418, 419, 420, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "str": [0, 5, 39, 40, 83, 94, 102, 106, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 148, 151, 152, 157, 158, 159, 160, 176, 242, 255, 257, 258, 259, 282, 287, 288, 329, 330, 332, 334, 336, 342, 357, 391, 397, 431, 432], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 60, 61, 305, 309, 431, 432, 443, 449], "want": [0, 5, 15, 17, 19, 33, 47, 48, 49, 61, 431, 432], "retriev": [0, 5], "i": [0, 5, 19, 28, 44, 47, 49, 83, 84, 94, 182, 183, 190, 194, 196, 198, 206, 207, 210, 224, 225, 227, 230, 231, 242, 245, 246, 305, 308, 310, 312, 313, 314, 342, 344, 350, 353, 356, 359, 360, 363, 365, 371, 383, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439], "e": [0, 5, 15, 16, 17, 19, 28, 38, 47, 61, 82, 83, 94, 102, 107, 124, 132, 148, 182, 183, 190, 194, 196, 198, 204, 206, 207, 210, 215, 217, 224, 225, 227, 230, 231, 305, 308, 310, 312, 313, 314, 342, 344, 350, 353, 356, 359, 360, 365, 371, 383, 411, 414, 415, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439], "one": [0, 5, 15, 16, 18, 19, 30, 31, 34, 37, 38, 39, 41, 42, 43, 46, 47, 49, 61, 83, 84, 94, 102, 109, 111, 113, 132, 161, 162, 163, 164, 176, 242, 281, 284, 287, 288, 342, 350, 351, 355, 357, 364, 365, 371, 375, 376, 382, 418, 419, 421, 423, 424, 425, 426, 427, 431, 432, 443], "default": [0, 5, 30, 31, 34, 38, 39, 40, 42, 48, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 114, 115, 116, 117, 132, 141, 142, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 243, 249, 250, 253, 254, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 278, 280, 281, 282, 284, 286, 287, 288, 291, 293, 295, 296, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 320, 321, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 351, 353, 356, 357, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 387, 388, 389, 390, 391, 392, 393, 397, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 453, 454, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "torch": [0, 5, 12, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 80, 81, 443], "tensorflow": [0, 5, 12, 15, 16, 20, 39, 40, 41, 42, 44, 49, 61, 443], "mxnet": [0, 5, 15, 20, 39, 40, 41, 44, 49, 443], "either": [0, 5, 12, 19, 30, 31, 34, 35, 38, 39, 40, 44, 46, 47, 61, 83, 89, 182, 186, 190, 211, 215, 216, 218, 219, 226, 231, 233, 234, 239, 242, 256, 277, 281, 282, 342, 350, 387, 388, 389, 390, 431, 436, 438, 464, 475, 476, 477], "doesn": [0, 5, 18, 31, 44, 61], "matter": [0, 5, 14, 31], "been": [0, 5, 30, 34, 35, 38, 39, 40, 42, 44, 60, 61, 132, 151, 242, 257, 258, 259, 411, 412], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 60, 61, 72, 74, 75, 76, 77, 78, 79, 82, 102, 118, 132, 141, 142, 167, 171, 174, 175, 176, 179, 181, 182, 186, 200, 209, 224, 225, 227, 239, 242, 263, 266, 267, 281, 287, 288, 289, 290, 295, 296, 305, 307, 308, 312, 313, 329, 337, 338, 340, 341, 342, 345, 346, 351, 362, 367, 368, 371, 372, 375, 376, 378, 380, 387, 388, 389, 390, 391, 392, 394, 400, 401, 402, 404, 409, 410, 418, 421, 423, 424, 425, 431, 432, 440, 441, 443, 464, 472, 475, 476, 477, 478, 479, 480, 482, 483], "ivy_jax": [0, 5], "subsequ": [0, 6, 31, 33, 34, 37, 41, 42, 48], "call": [0, 6, 12, 15, 21, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 132, 176, 242, 286, 291, 302, 305, 309, 391, 392, 397, 401, 402, 464, 475, 476, 477, 480, 484], "nativ": [0, 6, 39, 41, 46, 47, 83, 95, 102, 106, 107, 112, 132, 148, 149, 150, 151, 152, 171, 178, 181, 242, 275, 277, 280, 453, 454], "native_arrai": [0, 6, 12, 31, 72, 74, 75, 76, 77, 78, 79, 83, 94, 182, 186, 209, 224, 225, 227, 239, 242, 263, 329, 332, 336, 342, 344, 345, 362, 367, 368, 370, 371, 372, 375, 376, 380, 381, 409, 410, 411, 412, 418, 421, 423, 425, 440, 441], "1": [0, 6, 12, 15, 16, 21, 31, 34, 38, 41, 42, 43, 44, 46, 47, 48, 49, 61, 72, 74, 75, 76, 77, 79, 83, 84, 91, 92, 93, 94, 96, 97, 101, 102, 108, 119, 132, 136, 139, 141, 146, 151, 152, 156, 160, 164, 169, 170, 175, 177, 182, 184, 185, 186, 187, 190, 193, 196, 198, 199, 200, 204, 205, 208, 209, 213, 215, 216, 217, 218, 224, 225, 227, 230, 233, 234, 239, 242, 245, 246, 252, 263, 264, 278, 284, 287, 288, 293, 296, 299, 300, 301, 303, 321, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 346, 349, 353, 355, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 391, 403, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 428, 429, 430, 431, 432, 437, 438, 439, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "type": [0, 6, 12, 18, 20, 28, 29, 30, 31, 36, 37, 38, 40, 41, 42, 44, 46, 47, 49, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 148, 149, 150, 151, 152, 164, 165, 167, 168, 169, 170, 171, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 275, 277, 278, 279, 280, 284, 287, 288, 289, 290, 293, 295, 296, 297, 299, 300, 301, 303, 304, 305, 311, 316, 318, 321, 325, 327, 328, 329, 330, 332, 334, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 397, 401, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "ndarrai": [0, 6, 37, 39, 40, 41, 42, 46, 83, 85, 95, 242, 300], "Or": [0, 6, 47, 431, 432], "jaxlib": [0, 6, 18, 39, 40, 42, 46], "xla_extens": [0, 6, 39, 40, 42, 46], "devicearrai": [0, 6, 46], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 31, 38, 41, 47, 48, 49, 102, 108, 111, 117, 132, 151, 152, 163, 167, 171, 176, 179, 181, 182, 208, 209, 210, 211, 212, 213, 221, 222, 242, 243, 245, 246, 253, 256, 260, 262, 268, 275, 277, 278, 280, 281, 293, 303, 305, 308, 309, 310, 311, 312, 313, 314, 342, 343, 351, 360, 365, 371, 381, 387, 388, 389, 390, 391, 392, 393, 397, 401, 402, 403, 404, 411, 412, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 453, 454, 476, 477, 480, 481, 482, 483, 484, 485], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 44, 46], "adjust": [0, 12, 431, 437, 439], "dict": [0, 12, 38, 47, 48, 132, 141, 142, 151, 157, 158, 159, 160, 242, 257, 258, 259, 391, 393, 394, 397, 400, 403, 404], "previous": [0, 12, 21, 33, 34, 44, 242, 248], "otherwis": [0, 12, 37, 39, 40, 42, 44, 46, 83, 84, 102, 108, 111, 114, 115, 116, 132, 151, 182, 210, 211, 212, 242, 247, 302, 305, 311, 316, 342, 343, 345, 364, 365, 387, 388, 389, 391, 404, 418, 419, 420, 422, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "implement": [0, 12, 20, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 102, 108, 124, 182, 183, 184, 185, 187, 188, 189, 190, 199, 200, 204, 205, 215, 216, 217, 218, 226, 230, 231, 234, 235, 239, 342, 347, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 443], "wa": [0, 12, 15, 31, 44, 46, 242, 302, 391, 404, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "last": [0, 12, 16, 61, 72, 77, 132, 151, 321, 325, 329, 339, 342, 344, 346, 351, 363, 364, 367, 369, 370, 371, 376, 380, 381, 383, 428, 429, 430, 440, 441, 442, 464, 474], "henc": [0, 12, 423, 424, 425, 427], "here": [0, 12, 18, 20, 29, 31, 38, 42, 44, 45, 46, 47, 48, 49, 60, 61], "tensor": [0, 12, 14, 29, 34, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 83, 92, 93, 102, 117, 182, 224, 225, 242, 284, 287, 288, 329, 337, 339, 342, 362, 371, 379, 381, 409, 410, 411, 412, 418, 420, 443, 464, 472, 474], "howev": [0, 12, 15, 18, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 61], "befor": [0, 12, 18, 19, 30, 33, 37, 39, 40, 41, 44, 47, 61, 132, 176, 182, 241, 329, 340, 341, 387, 388, 389, 391, 403, 423, 424, 425, 427, 431, 436, 438], "becom": [0, 12, 14, 16, 19, 31, 38, 44, 49, 61, 371, 372], "swap": [0, 12, 371, 384], "python": [0, 12, 13, 14, 15, 18, 21, 44, 46, 47, 61, 83, 84, 132, 171, 181, 182, 231, 443, 449], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 23, 24, 25, 26, 27, 28, 32, 34, 35, 36, 37, 40, 42, 43, 46, 49, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490], "op": [0, 12, 29, 44, 61], "eagertensor": [0, 12], "def": [1, 20, 29, 31, 34, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 103, 104, 105, 133, 140, 143, 306, 443, 456, 459, 462], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 23, 24, 25, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 447, 448, 449, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490], "backend": [4, 5, 6, 12, 14, 20, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 102, 113, 121, 131, 132, 167, 169, 179, 242, 272, 275, 276, 282, 305, 308, 310, 312, 313, 314, 319, 443, 449, 453, 454, 480, 481, 482, 483, 484, 485], "ml": [13, 15, 16, 17, 43, 44, 45, 47, 48, 49, 60, 443, 449], "explos": [13, 15, 443], "A": [13, 14, 15, 16, 21, 28, 30, 33, 34, 38, 39, 40, 44, 47, 61, 83, 88, 95, 132, 141, 142, 176, 182, 229, 240, 242, 267, 299, 342, 346, 358, 359, 360, 371, 381, 383, 391, 392, 394, 396, 398, 399, 400, 401, 402, 405, 406, 407, 408, 431, 432, 440, 441, 442, 443, 486, 487], "huge": [13, 15, 47, 443], "number": [13, 14, 18, 31, 38, 40, 41, 44, 47, 49, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 102, 109, 118, 119, 120, 122, 123, 124, 132, 168, 169, 170, 182, 186, 190, 198, 206, 207, 224, 225, 226, 230, 231, 233, 241, 242, 262, 267, 268, 283, 301, 304, 321, 325, 329, 340, 342, 347, 353, 358, 360, 364, 371, 372, 374, 377, 378, 380, 381, 383, 385, 386, 387, 388, 389, 390, 411, 412, 416, 418, 421, 423, 424, 425, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475], "tool": [13, 16, 45, 49, 60, 61, 443], "have": [13, 14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 60, 61, 72, 75, 83, 84, 86, 87, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 119, 132, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 241, 242, 250, 257, 258, 259, 261, 305, 311, 319, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 382, 383, 411, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "explod": [13, 14, 443], "onto": [13, 14, 132, 161, 162, 391, 397, 403, 443], "scene": [13, 14, 28, 43, 45, 305, 308, 310, 312, 313, 314, 443], "b": [13, 16, 17, 28, 31, 34, 35, 38, 43, 44, 45, 47, 48, 49, 59, 182, 186, 200, 209, 227, 239, 242, 245, 246, 263, 329, 332, 336, 342, 343, 344, 345, 355, 359, 362, 366, 367, 368, 371, 375, 376, 378, 380, 383, 409, 410, 418, 421, 428, 429, 431, 432, 440, 441, 443, 449], "why": [13, 15, 19, 38, 41, 42, 46, 443], "unifi": [13, 15, 37, 44, 61, 132, 161, 162, 163, 164, 176, 443], "should": [13, 15, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 80, 81, 83, 94, 98, 99, 102, 110, 132, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 234, 235, 236, 238, 239, 241, 242, 248, 275, 284, 305, 308, 310, 312, 313, 314, 342, 343, 344, 345, 346, 349, 350, 353, 355, 356, 357, 359, 360, 362, 363, 364, 365, 371, 379, 411, 417, 418, 419, 420, 423, 424, 425, 427, 431, 432, 433, 434, 436, 437, 438, 439, 443], "them": [13, 14, 15, 16, 33, 35, 37, 38, 44, 46, 47, 48, 61, 443], "c": [13, 15, 16, 17, 28, 31, 34, 38, 43, 44, 45, 47, 61, 242, 245, 246, 305, 307, 308, 310, 312, 313, 314, 371, 383, 418, 421, 431, 437, 439, 443, 449], "standard": [13, 28, 29, 30, 32, 33, 37, 41, 42, 61, 83, 94, 102, 119, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 378, 380, 409, 410, 411, 414, 423, 425, 428, 429, 431, 437, 439, 443, 449, 478, 479], "re": [13, 14, 15, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 61, 132, 176, 242, 257, 321, 322, 325, 342, 362, 371, 380, 443], "collabor": [13, 14, 15, 443], "consortium": [13, 15, 443, 449], "data": [13, 15, 28, 29, 30, 34, 36, 38, 40, 41, 42, 46, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 131, 132, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 226, 228, 230, 231, 233, 234, 235, 236, 238, 239, 241, 242, 245, 246, 277, 278, 280, 297, 305, 311, 319, 321, 325, 327, 329, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 371, 375, 376, 377, 379, 380, 382, 383, 411, 417, 418, 419, 420, 421, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449], "api": [13, 14, 28, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 47, 61, 83, 94, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429, 443, 449], "open": [14, 15, 16, 17, 18, 30, 60, 83, 84, 411, 413, 415, 443], "project": [14, 15, 16, 18, 19, 21, 29, 46, 48, 60, 61, 411, 412, 413, 414, 415], "grown": 14, "consider": [14, 31, 42], "recent": [14, 15], "year": [14, 16, 61, 443], "especi": 14, "deep": [14, 17, 19, 20, 43, 47, 443], "learn": [14, 15, 18, 20, 28, 34, 43, 49, 60, 182, 208, 305, 308, 310, 312, 313, 314, 387, 388, 389, 390, 443, 480, 481, 482, 483, 484, 485], "can": [14, 15, 16, 17, 19, 28, 29, 30, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 60, 61, 83, 85, 95, 102, 111, 132, 174, 175, 176, 321, 323, 342, 349, 371, 379, 431, 432, 443, 449], "seen": [14, 15, 31, 46, 47], "rapidli": 14, "increas": [14, 132, 156, 160, 164, 371, 374, 386, 391, 403], "github": [14, 18, 19, 30, 33], "repo": [14, 15, 16, 18, 19, 32, 44, 46, 47, 48, 49, 60, 443, 449], "contain": [14, 18, 19, 21, 28, 30, 31, 33, 34, 39, 41, 42, 43, 44, 45, 48, 49, 61, 72, 75, 76, 78, 83, 84, 87, 89, 96, 98, 99, 100, 132, 153, 157, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 249, 250, 263, 270, 279, 321, 327, 329, 332, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 381, 391, 404, 409, 410, 411, 412, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 484, 486, 487], "term": [14, 19, 329, 339, 464, 474], "time": [14, 15, 16, 19, 20, 33, 34, 38, 39, 42, 44, 47, 49, 61, 305, 308, 312, 329, 339, 371, 385, 387, 388, 389, 390, 418, 419, 420, 423, 424, 425, 464, 475, 476, 477], "These": [14, 15, 16, 19, 30, 31, 33, 34, 38, 39, 41, 42, 44, 45, 47, 48, 49, 61, 342, 347, 443, 449], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 61, 62, 70, 83, 84, 132, 141, 142, 166, 170, 172, 176, 182, 199, 221, 222, 234, 239, 242, 243, 245, 246, 247, 265, 271, 272, 276, 283, 285, 297, 329, 338, 342, 344, 350, 351, 353, 356, 360, 361, 364, 371, 372, 376, 380, 391, 393, 397, 403, 411, 414, 415, 418, 419, 420, 421, 423, 424, 443, 486, 487], "written": [14, 29, 30, 37, 41, 42, 44, 46, 49, 61, 431, 432], "mani": [14, 15, 16, 18, 19, 20, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 61, 371, 381], "differ": [14, 15, 16, 19, 28, 29, 30, 31, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 61, 102, 119, 132, 153, 154, 157, 158, 182, 186, 226, 238, 329, 338, 371, 383, 431, 436, 438, 443], "while": [14, 15, 19, 31, 41, 48, 49, 61, 182, 221, 222, 423, 424, 431, 434], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 61, 83, 84, 85, 94, 95, 132, 156, 160, 164, 171, 176, 181, 182, 183, 186, 196, 200, 205, 221, 222, 224, 225, 231, 239, 242, 262, 263, 275, 286, 291, 305, 308, 310, 311, 312, 313, 314, 319, 329, 332, 338, 342, 345, 351, 358, 371, 375, 376, 378, 379, 380, 383, 391, 397, 403, 404, 418, 419, 423, 424, 425, 427, 428, 429, 431, 432, 434, 437, 439, 443, 449, 476, 477, 480, 481, 482, 483, 484, 485], "wonder": [14, 16, 46], "thing": [14, 15, 16, 18, 19, 20, 46, 47], "research": [14, 60], "develop": [14, 15, 16, 17, 18, 19, 60, 61, 443], "also": [14, 15, 17, 18, 19, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 83, 94, 182, 186, 200, 224, 225, 239, 242, 263, 275, 305, 308, 329, 332, 338, 342, 345, 371, 375, 376, 378, 380, 387, 388, 389, 390, 391, 392, 393, 401, 402, 403, 423, 425, 428, 429, 464, 474], "consid": [14, 15, 29, 31, 34, 45, 46, 47, 182, 221, 222, 423, 424, 425, 427], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 21, 28, 30, 31, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 61, 72, 74, 75, 76, 77, 78, 79, 329, 336, 423, 425, 428, 429, 443, 449], "significantli": 14, "hinder": [14, 42], "librari": [14, 15, 16, 44, 49, 59, 61, 182, 205, 221, 222, 342, 347, 423, 424, 425, 427, 431, 433, 434, 435, 443], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 61, 428, 429, 430], "against": [14, 33, 61, 102, 109, 342, 350, 351, 353, 356, 418, 419], "newest": 14, "version": [14, 15, 16, 18, 30, 44, 46, 342, 347, 443], "For": [14, 15, 16, 18, 19, 20, 21, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 83, 84, 94, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 305, 311, 319, 342, 360, 363, 371, 372, 383, 423, 424, 425, 427, 431, 432, 433, 435, 438, 453, 454], "softwar": [14, 15, 18, 19], "pipelin": [14, 21, 37, 49], "where": [14, 15, 16, 17, 18, 19, 20, 30, 34, 37, 38, 39, 40, 41, 44, 47, 48, 49, 61, 83, 90, 91, 94, 182, 190, 204, 217, 226, 230, 242, 271, 275, 284, 342, 347, 353, 356, 357, 360, 361, 363, 364, 371, 372, 374, 375, 377, 383, 386, 391, 392, 402, 411, 412, 418, 421, 431, 437, 439, 440, 441, 442, 443], "rapid": [14, 15], "prototyp": 14, "vital": [14, 49], "signific": [14, 15, 61], "bottleneck": 14, "As": [14, 19, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 61, 423, 424, 425, 427], "new": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 33, 36, 38, 39, 41, 43, 46, 49, 60, 83, 86, 89, 90, 91, 96, 97, 100, 101, 182, 191, 217, 229, 240, 242, 257, 258, 259, 262, 263, 264, 287, 288, 289, 290, 295, 296, 305, 308, 310, 312, 313, 314, 321, 323, 326, 328, 371, 375, 379, 383, 391, 396, 407, 408, 409, 410, 431, 432, 443, 453, 454, 464, 474, 478, 479, 480, 481, 482, 483, 484, 485], "futur": [14, 16, 19, 46, 61, 342, 347], "avail": [14, 18, 19, 30, 40, 61, 132, 151, 167, 168, 169, 179, 242, 258], "specif": [14, 18, 20, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 60, 61, 102, 124, 132, 174, 182, 221, 222, 242, 257, 258, 259, 282, 342, 347, 362, 371, 383, 387, 388, 389, 390, 411, 412, 431, 433, 434, 435, 443, 446, 448, 449, 476, 477], "quickli": [14, 16, 19, 47, 48], "obsolet": [14, 16], "user": [14, 15, 18, 28, 33, 38, 41, 43, 61, 464, 475, 476, 477], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 31, 38, 43, 46, 47, 48, 49, 61, 443], "desir": [14, 102, 108, 111, 132, 177, 242, 271, 321, 327], "provid": [14, 18, 19, 30, 31, 34, 37, 38, 39, 40, 41, 42, 44, 48, 60, 61, 80, 81, 83, 94, 102, 114, 115, 116, 121, 124, 131, 132, 151, 242, 256, 284, 288, 305, 308, 310, 312, 313, 314, 342, 364, 371, 376, 383, 418, 419, 431, 437, 439, 440, 441, 442, 464, 473, 480, 481, 482, 483, 484, 485], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 60, 61, 62, 70, 80, 81, 83, 84, 98, 99, 132, 141, 166, 172, 242, 243, 245, 246, 265, 285, 300, 329, 339, 342, 359, 362, 365, 371, 376, 380, 387, 388, 389, 390, 391, 392, 393, 402, 403, 404, 411, 412, 415, 440, 443, 446, 448], "modern": [14, 15], "simpl": [14, 18, 19, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 44, 46, 48, 49, 61, 242, 260], "scalabl": [14, 44], "manner": [14, 29, 30, 40, 47, 60, 61, 391, 403], "must": [14, 16, 18, 19, 29, 30, 31, 34, 37, 38, 39, 40, 42, 44, 48, 49, 72, 75, 83, 84, 86, 87, 88, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 132, 161, 162, 163, 164, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 241, 242, 250, 261, 288, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 382, 383, 411, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 480, 484], "determin": [14, 30, 34, 38, 39, 40, 102, 111, 112, 118, 121, 122, 123, 131, 132, 167, 168, 169, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 204, 205, 210, 211, 212, 215, 216, 218, 219, 223, 226, 230, 231, 234, 235, 236, 239, 242, 243, 245, 246, 270, 272, 276, 277, 278, 279, 280, 297, 304, 305, 311, 329, 340, 342, 343, 344, 345, 346, 349, 350, 353, 355, 356, 358, 359, 363, 364, 365, 387, 388, 389, 390, 423, 424, 425, 427, 440, 441, 442], "exactli": [14, 16, 31, 40, 443, 449], "common": [14, 31, 34, 36, 38, 40, 61], "ground": [14, 33], "li": 14, "between": [14, 31, 33, 34, 37, 38, 42, 43, 45, 46, 47, 49, 60, 83, 84, 102, 119, 182, 190, 230, 367, 368, 369, 370, 371, 375, 383, 391, 397, 411, 413, 423, 424, 425, 427, 443, 480, 482], "find": [14, 19, 44, 47, 423, 424, 425, 427, 443], "exist": [14, 15, 21, 30, 31, 32, 33, 34, 35, 36, 41, 44, 61, 242, 256, 480, 484], "essenti": [14, 15, 31, 34, 40], "order": [14, 18, 19, 21, 30, 31, 35, 37, 38, 39, 40, 42, 46, 47, 49, 61, 182, 190, 305, 308, 310, 312, 313, 314, 342, 347, 351, 360, 361, 365, 371, 376, 387, 388, 389, 418, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 486, 487], "design": [14, 15, 28, 41, 44, 46, 61], "univers": 14, "abstract": [14, 38, 48, 61, 132, 147, 480, 484], "In": [14, 16, 18, 19, 29, 30, 31, 34, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 132, 171, 178, 181, 182, 186, 226, 231, 242, 275, 371, 379, 411, 415, 443], "search": [14, 29, 31, 33, 419, 420, 421, 422], "languag": [14, 16, 44], "first": [14, 15, 18, 19, 21, 31, 34, 37, 38, 42, 44, 46, 47, 49, 80, 81, 83, 92, 93, 132, 151, 163, 182, 186, 192, 194, 195, 196, 197, 202, 207, 209, 213, 214, 219, 220, 222, 223, 226, 228, 230, 238, 242, 245, 305, 309, 342, 344, 346, 347, 350, 355, 357, 360, 362, 364, 371, 373, 380, 383, 384, 387, 388, 389, 390, 391, 392, 401, 402, 411, 417, 418, 419, 420, 423, 424, 425, 464, 475, 476, 477, 480, 484], "see": [14, 17, 19, 20, 34, 38, 40, 42, 46, 47, 60, 61, 83, 84, 89, 92, 93, 102, 110, 124, 182, 186, 192, 194, 195, 196, 197, 201, 205, 213, 219, 222, 223, 226, 228, 230, 231, 238, 342, 353, 356, 359, 364, 365, 418, 420, 423, 424, 425, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "clear": [14, 15, 16, 19, 20, 31, 33, 39, 40, 44, 46, 132, 150], "front": [14, 43, 44, 47, 443, 449], "runner": 14, "look": [14, 19, 21, 29, 31, 34, 38, 39, 40, 42, 44, 46, 48, 49], "littl": [14, 37, 46], "deeper": [14, 28, 43, 132, 156, 160, 164, 391, 402, 403], "follow": [14, 15, 18, 19, 20, 21, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 61, 102, 120, 132, 176, 182, 231, 242, 273, 274, 275, 295, 296, 305, 308, 310, 312, 313, 314, 329, 340, 341, 342, 357, 365, 391, 397, 403, 423, 424, 425, 427, 431, 432, 443, 464, 474, 480, 484], "same": [14, 16, 18, 19, 29, 31, 33, 34, 37, 38, 40, 41, 42, 44, 46, 48, 49, 83, 84, 87, 91, 94, 97, 98, 99, 101, 102, 108, 109, 110, 132, 141, 142, 176, 182, 183, 186, 193, 198, 206, 226, 231, 232, 233, 241, 242, 261, 263, 264, 284, 287, 288, 305, 311, 316, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 354, 356, 357, 359, 360, 363, 364, 371, 373, 376, 377, 380, 382, 383, 387, 388, 389, 391, 404, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 443, 464, 465, 466, 467, 468, 469, 470, 471], "core": [14, 40, 44, 49, 132, 168, 443], "principl": 14, "oper": [14, 18, 31, 34, 37, 38, 40, 41, 47, 48, 83, 92, 93, 102, 124, 182, 186, 196, 209, 227, 231, 242, 247, 257, 258, 259, 297, 305, 308, 310, 312, 313, 314, 329, 330, 331, 332, 333, 334, 335, 336, 338], "expos": [14, 44, 48, 242, 251], "almost": [14, 19, 38, 45, 47], "ident": [14, 16, 34, 36, 38, 46, 47, 61, 391, 404, 443], "uniqu": [14, 34, 38, 61, 132, 141, 142, 387, 388, 389, 390, 391, 397, 423, 424, 425, 426, 427], "syntax": [14, 15], "There": [14, 19, 31, 34, 37, 38, 39, 44, 47, 61, 431, 432], "onli": [14, 17, 18, 19, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 59, 61, 132, 182, 221, 222, 342, 350, 357, 371, 376, 391, 392, 393, 401, 402, 418, 419, 420, 431, 434, 443, 480, 481, 482, 483, 484, 485], "so": [14, 15, 18, 19, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 70, 391, 392, 402, 443], "wai": [14, 15, 41, 46, 47, 48, 49, 61, 431, 432], "manipul": [14, 29, 49, 60, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "unsurprisingli": [14, 31], "fundament": [14, 38, 44], "consist": [14, 37, 41, 132, 164, 342, 347, 431, 432, 476, 477], "each": [14, 15, 16, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 60, 61, 72, 75, 76, 78, 83, 94, 102, 109, 132, 141, 142, 153, 154, 155, 156, 157, 158, 159, 163, 175, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 305, 308, 310, 312, 313, 314, 321, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 347, 350, 353, 354, 356, 359, 360, 371, 374, 378, 380, 381, 383, 385, 386, 391, 397, 404, 411, 412, 418, 421, 423, 424, 425, 431, 432, 443, 449, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "veri": [14, 15, 19, 29, 31, 33, 34, 38, 40, 41, 42, 45, 47, 48, 49, 61, 443], "similar": [14, 29, 38, 39, 40, 47, 61, 182, 231, 329, 340, 464, 475], "convent": [14, 60, 342, 350, 431, 432], "those": [14, 19, 34, 38, 39, 40, 41, 44, 49, 83, 84, 305, 319, 342, 357, 360, 371, 372], "introduc": [14, 38, 47, 371, 380], "2006": 14, "layer": [14, 29, 30, 44, 45, 48, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 409, 410, 443, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "therefor": [14, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 48, 61, 242, 263, 329, 332], "present": [14, 32, 38, 39, 40, 41, 42, 44], "itself": [14, 19, 38, 41, 42, 48, 60, 61, 391, 403], "cut": 14, "cloth": 14, "adher": [14, 15, 30, 32, 44, 49], "semant": [14, 44, 49, 182, 231], "round": [14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 182, 186, 198, 206, 207, 226, 236, 241, 443], "up": [14, 15, 16, 17, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 60, 61], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60], "paint": [14, 44], "pictur": [14, 44], "how": [14, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 60, 61, 443, 449, 464, 475, 476, 477], "pleas": [14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60], "check": [14, 15, 16, 18, 19, 38, 43, 44, 46, 47, 48, 49, 60, 102, 112, 121, 131, 132, 171, 181, 242, 247, 260, 270, 277, 278, 279, 280, 297, 304, 305, 311, 342, 347, 391, 392, 401, 402, 403, 443], "out": [14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 60, 72, 74, 75, 83, 84, 132, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 250, 253, 254, 257, 258, 259, 261, 263, 321, 323, 326, 328, 329, 337, 338, 339, 340, 341, 342, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 409, 410, 418, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 464, 472], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 443], "faq": [14, 15, 16, 44, 46, 47, 48, 49, 60], "reach": [14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 132, 156, 160, 164, 391, 403], "discord": [14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60], "you": [14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 60, 61, 443, 449], "question": [14, 15, 16, 18, 19, 31, 33, 44, 46, 47, 48, 49, 60, 61], "With": [15, 16, 31, 33, 44, 72, 74, 75, 76, 77, 78, 79, 83, 94, 182, 186, 200, 209, 224, 225, 227, 239, 242, 246, 263, 329, 332, 336, 342, 343, 344, 345, 351, 362, 367, 368, 370, 371, 372, 375, 376, 378, 380, 381, 409, 410, 411, 412, 418, 419, 421, 423, 425, 428, 429, 440, 441], "central": 15, "goal": [15, 20], "being": [15, 16, 19, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 47, 60, 61, 83, 84, 242, 286, 291, 423, 426, 443], "would": [15, 18, 19, 28, 30, 31, 33, 36, 37, 38, 41, 42, 43, 44, 46, 48, 49, 61, 72, 77], "entir": [15, 16, 19, 31, 32, 33, 37, 38, 41, 46, 47, 48, 49, 61, 132, 176, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 473], "forgiven": 15, "rais": [15, 19, 41, 44, 46, 102, 110, 182, 204, 230, 242, 247, 266, 275, 289, 296, 302, 342, 350, 352, 364, 371, 382, 383, 418, 421, 431, 433, 435, 440, 441, 442, 476, 477, 480, 484], "an": [15, 16, 18, 19, 21, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 72, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 119, 122, 123, 124, 132, 154, 158, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 248, 249, 250, 252, 261, 262, 263, 271, 275, 277, 278, 279, 280, 300, 301, 302, 305, 311, 316, 318, 319, 321, 323, 327, 328, 329, 332, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 363, 364, 365, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 397, 411, 413, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 453, 454, 476, 477, 480, 481, 482, 484], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 34, 39, 40, 41, 42, 44, 46, 49, 61, 305, 308, 310, 312, 313, 314, 443, 480, 481, 482, 483, 484, 485], "other": [15, 18, 19, 29, 30, 31, 33, 34, 37, 38, 41, 44, 46, 48, 49, 59, 60, 61, 80, 81, 83, 84, 182, 205, 242, 243, 305, 309, 411, 415, 423, 426, 431, 437, 439, 443], "strong": [15, 61], "industri": 15, "back": [15, 37, 41, 43, 44, 46, 61, 443, 449, 476, 477, 480, 484], "momentum": 15, "won": [15, 16, 49], "ad": [15, 18, 19, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 44, 48, 61, 242, 295, 296, 342, 347, 371, 375, 486, 487], "just": [15, 16, 19, 30, 31, 33, 34, 41, 44, 46, 47, 61, 431, 432, 464, 473], "make": [15, 16, 18, 19, 20, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 132], "problem": [15, 19, 37, 46], "even": [15, 16, 19, 30, 34, 39, 40, 42, 46, 47, 48, 49, 61, 182, 230], "wors": 15, "rather": [15, 29, 33, 38, 40, 49, 61, 83, 84, 132, 176, 242, 277, 278, 280, 305, 311], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 34, 38], "feasibl": 15, "space": [15, 83, 84, 92, 93, 242, 262], "case": [15, 18, 19, 20, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 61, 83, 94, 132, 171, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 233, 234, 235, 236, 239, 241, 242, 275, 287, 288, 342, 351, 371, 379, 391, 394, 400, 431, 433, 434, 435, 437, 438, 439, 464, 475, 476, 477, 480, 484], "unlik": [15, 31, 38, 132], "charger": 15, "charact": 15, "encod": [15, 47, 242, 262, 321, 323], "instant": [15, 443], "messag": [15, 19, 44, 46, 489, 490], "much": [15, 18, 19, 29, 37, 38, 41, 44, 46, 47], "doe": [15, 19, 21, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 44, 46, 47, 61, 242, 275, 371, 381], "mandat": [15, 33, 41], "adopt": [15, 19, 37], "continu": [15, 16, 32, 33, 61], "own": [15, 16, 30, 44, 61], "signatur": [15, 29, 30, 31, 38, 39, 40, 41, 42, 182, 200, 371, 375, 423, 425, 428, 429], "replac": [15, 21, 33, 36, 39, 40, 44, 46, 49, 61, 242, 287, 288, 371, 372, 411, 412], "your": [15, 16, 17, 18, 29, 30, 47, 48, 61, 443], "10": [15, 21, 31, 38, 44, 46, 47, 83, 90, 93, 132, 182, 193, 200, 209, 216, 242, 263, 286, 291, 305, 312, 342, 345, 362, 371, 376, 378, 381, 411, 412, 413, 418, 421, 431, 432, 480, 482], "100": [15, 16, 47, 48, 49, 61, 443], "despit": [15, 38, 40], "distinct": [15, 30, 38, 41, 43, 423, 424, 425, 427, 443], "still": [15, 30, 33, 39, 46, 48, 61, 443], "believ": [15, 19], "share": [15, 31, 33, 34, 35, 38, 44], "bring": [15, 44, 45], "benefit": [15, 16, 19, 37, 38, 41, 46, 47, 61], "unrel": [15, 19], "what": [15, 16, 28, 30, 31, 38, 42, 43, 44, 46, 47, 48, 49, 60, 61, 443], "again": [15, 16, 19, 29, 31, 38, 41, 47, 49, 61], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 47], "most": [15, 18, 19, 29, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 61, 342, 347], "technolog": 15, "sector": [15, 182, 185, 188, 191], "full": [15, 16, 19, 30, 39, 42, 44, 61, 83, 102, 119, 182, 209, 342, 357, 359, 360, 409, 410], "success": 15, "reason": [15, 19, 29, 31, 34, 37, 38, 39, 41, 44, 46, 182, 231], "build": [15, 17, 18, 34, 43, 45, 48, 49, 61, 423, 424, 425, 427, 443, 464, 475, 476, 477], "custom": [15, 48], "comput": [15, 16, 34, 38, 44, 47, 61, 132, 176, 182, 186, 192, 195, 197, 202, 203, 208, 209, 213, 214, 220, 221, 222, 223, 226, 227, 228, 242, 249, 250, 253, 254, 305, 307, 308, 309, 310, 312, 313, 314, 316, 318, 321, 324, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 343, 344, 347, 348, 349, 350, 351, 357, 358, 359, 360, 364, 365, 367, 368, 369, 370, 391, 397, 423, 424, 425, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439], "thank": [15, 47], "interoper": 15, "compon": [15, 44], "bio": [15, 18], "hardwar": 15, "initi": [15, 19, 39, 40, 132, 329, 339, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 484], "pcie": 15, "interfac": [15, 49, 61], "motherboard": 15, "raid": 15, "storag": [15, 47], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 34, 48, 49, 83, 85, 95, 98, 99, 305, 308, 310, 312, 313, 314, 329, 342, 343, 345, 346, 347, 348, 349, 353, 354, 356, 357, 359, 360, 361, 363, 391, 393, 403], "factor": [15, 132, 141, 174, 175, 176, 305, 307, 308, 312, 313, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 464, 465, 466, 467, 468, 469, 470, 471, 480, 481, 482, 483], "sata": 15, "connect": [15, 18, 48, 49, 464, 474, 475], "host": [15, 61], "bu": 15, "adapt": [15, 305, 313, 480, 483], "devic": [15, 28, 29, 34, 36, 39, 46, 47, 61, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 242, 263, 264, 284, 287, 288, 411, 412, 413, 414, 415, 453, 454, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "html": [15, 21, 30, 182, 200, 371, 375, 423, 425, 428, 429], "enabl": [15, 18, 19, 33, 34, 37, 38, 41, 43, 44, 45, 47, 49, 61], "anyon": [15, 17, 61], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 38, 391, 392, 401, 402], "commun": [15, 17, 19, 20, 61, 443, 449], "network": [15, 34, 38, 44, 48, 60, 329, 338, 443, 450, 464, 476, 477], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 30, 31, 33, 38, 39, 41, 44, 47, 60, 61, 242, 281, 299, 321, 327, 431, 433, 435], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 82, 102, 119, 182, 186, 205, 226, 231, 236], "754": [15, 82, 102, 119, 182, 186, 205, 226, 231, 236], "allow": [15, 44, 61, 83, 92, 93, 242, 281, 431, 432, 476, 477], "calcul": [15, 30, 182, 183, 184, 185, 186, 187, 188, 189, 190, 199, 200, 201, 204, 205, 215, 216, 217, 218, 219, 226, 230, 234, 235, 236, 238, 239, 367, 368, 369, 370, 431, 433, 434, 435, 436, 437, 438, 439], "live": [15, 16], "depend": [15, 18, 19, 30, 36, 38, 39, 44, 61, 102, 108, 182, 183, 184, 185, 187, 188, 189, 190, 199, 200, 204, 205, 215, 216, 217, 218, 230, 234, 235, 239, 342, 347, 357, 359, 360, 418, 422, 428, 429, 430], "did": [15, 49], "aris": [15, 61], "until": [15, 19, 61, 443], "substanti": [15, 19, 33, 37], "innov": 15, "growth": 15, "usag": [15, 44, 132, 176], "relev": [15, 31, 38, 39, 47, 480, 481, 482, 483, 484, 485], "area": [15, 41, 59, 182, 185, 188, 191, 443], "necess": 15, "parti": [15, 61], "could": [15, 16, 31, 33, 38, 39, 41, 44, 46, 47, 48, 423, 424, 425, 427], "easili": [15, 19, 47, 48, 49, 61, 443], "engag": [15, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "regard": [15, 38, 132], "effect": [15, 30, 37, 38, 42, 61, 83, 94, 305, 314, 431, 437, 439], "2015": 15, "sinc": [15, 61], "alongsid": 15, "machin": [15, 18, 34, 60, 102, 119, 120, 182, 208, 342, 353, 356], "given": [15, 16, 18, 19, 20, 21, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 49, 60, 83, 84, 86, 92, 93, 132, 165, 171, 173, 174, 175, 176, 178, 181, 242, 253, 254, 264, 287, 288, 303, 305, 307, 308, 310, 312, 313, 314, 329, 330, 331, 332, 333, 334, 335, 336, 342, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 380, 381, 385, 391, 398, 399, 411, 413, 414, 415, 417, 428, 430, 453, 454], "frame": [15, 60], "less": [15, 19, 31, 38, 42, 43, 44, 182, 184, 185, 187, 190, 198, 215, 216, 218, 230, 231, 233, 236, 342, 353, 356, 365, 411, 415, 431, 439], "matur": [15, 61], "state": [15, 30, 42, 43, 44, 45, 47, 60, 182, 226, 329, 339, 443, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "than": [15, 19, 29, 31, 33, 38, 40, 41, 44, 47, 48, 49, 61, 83, 84, 102, 119, 132, 176, 182, 184, 185, 187, 190, 194, 196, 198, 206, 207, 215, 216, 218, 224, 230, 231, 233, 236, 241, 242, 277, 278, 280, 305, 311, 342, 344, 350, 353, 356, 365, 371, 372, 376, 382, 411, 415, 423, 424, 425, 427, 431, 432, 436, 437, 438, 439], "preced": [15, 48], "mention": [15, 18, 19, 31, 34, 41, 42], "aros": 15, "70": [15, 342, 343, 431, 432], "80": [15, 431, 432], "90": [15, 431, 432], "effort": [15, 17, 61], "stage": [15, 17, 19, 21, 28, 443], "complet": [15, 19, 20, 37, 38, 46, 47, 342, 357], "natur": [15, 31, 37, 38, 60, 182, 204, 215, 217, 342, 358], "like": [15, 18, 19, 28, 29, 30, 31, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 60, 61, 305, 311, 411, 415, 431, 432, 443], "certainli": 15, "mission": [15, 443], "creat": [15, 17, 19, 21, 39, 40, 41, 44, 45, 48, 59, 60, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 132, 141, 142, 242, 263, 264, 284, 287, 288, 299, 305, 318, 411, 412, 413, 415, 431, 432, 443, 449, 453, 454, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "At": [15, 20], "process": [15, 16, 17, 19, 21, 34, 38, 44, 49, 132, 141, 142, 171, 181], "ourselv": 15, "lead": [15, 16, 61, 342, 357, 360], "quansight": 15, "compani": 15, "made": [15, 19, 20, 38, 41, 44, 46], "organ": [15, 29, 34, 37, 38], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 423, 424, 425, 427], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 44, 49], "sympi": 15, "rai": [15, 182, 190], "modin": 15, "spyder": 15, "includ": [15, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 60, 61, 83, 84, 85, 95, 242, 270, 304, 342, 365, 391, 392, 411, 415, 418, 420, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 448, 464, 474, 475, 478, 479], "member": [15, 19], "googl": [15, 443], "octoml": 15, "einop": [15, 242, 257, 258, 259], "further": [15, 16, 19, 21, 31, 37, 43, 47, 48, 443], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 28, 38, 47, 242, 246, 321, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 342, 346, 443, 449], "shaw": 15, "co": [15, 44, 60, 182, 242, 262, 443], "intel": 15, "togeth": [15, 37, 38, 48, 49, 61, 486, 487], "major": [15, 39, 40, 61, 418, 421], "involv": [15, 17, 21, 28, 39, 49, 102, 124, 182, 186, 226, 443, 449], "anoth": [15, 19, 34, 38, 39, 46, 49, 83, 89, 102, 109, 111, 113], "promis": 15, "sign": [15, 18, 45, 49, 83, 84, 182, 183, 186, 190, 196, 226, 231, 342, 358, 423, 424, 425, 427, 431, 436, 438], "pursuit": 15, "unif": [15, 17, 46, 443, 449], "clearli": [15, 20, 31], "lot": [15, 16, 36, 46, 61], "thought": [15, 18, 19, 42], "care": [15, 19, 49], "attent": [15, 19, 37, 38, 329, 340, 341, 464, 475], "gone": [15, 43], "simplifi": [15, 44, 45, 46, 48], "compat": [15, 42, 61, 102, 110, 182, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 209, 213, 214, 219, 220, 222, 223, 226, 228, 230, 231, 238, 342, 353, 356, 359, 362, 364, 365, 371, 379, 418, 420, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "excit": [15, 17, 28, 443], "complianc": 15, "hope": [15, 61], "due": [15, 38, 41, 182, 226], "suit": [15, 28, 32, 33, 47, 60], "some": [15, 16, 18, 19, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 60, 61, 182, 205, 305, 307, 308, 310, 312, 313, 314, 319, 329, 337, 443, 464, 472], "motiv": [15, 46], "great": [15, 16, 33, 44, 46], "convinc": 15, "celebr": 15, "encourag": [15, 60, 61, 443, 449], "foundat": 15, "point": [16, 19, 30, 31, 37, 41, 42, 44, 46, 47, 60, 82, 83, 84, 86, 88, 90, 96, 100, 102, 108, 119, 122, 124, 182, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 342, 343, 345, 347, 348, 349, 353, 356, 357, 359, 360, 365, 423, 424, 425, 427, 431, 433, 434, 435, 436, 437, 438, 439], "mai": [16, 18, 38, 46, 48, 83, 84, 89, 182, 202, 209, 214, 221, 222, 242, 256, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435], "ask": [16, 19, 44, 46, 61], "perfectli": 16, "happi": [16, 18, 61], "abund": 16, "better": [16, 28, 43, 46, 47, 48], "ll": [16, 17, 19, 31, 38, 41, 47], "give": [16, 19, 28, 30, 31, 42, 46, 371, 379, 431, 432], "two": [16, 31, 33, 37, 38, 43, 47, 49, 83, 84, 88, 94, 98, 99, 182, 196, 242, 245, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 371, 384, 423, 424, 425, 426, 427, 431, 432, 443], "streamlin": 16, "workflow": [16, 47, 59, 443], "save": [16, 61, 242, 292, 321, 323, 476, 477], "week": [16, 20, 443], "let": [16, 31, 38, 39, 40, 44, 46, 47, 48, 49, 431, 432, 434, 437, 438, 439, 443], "sai": [16, 36, 46], "deepmind": 16, "releas": [16, 18, 443], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 41, 47, 431, 437, 439], "perceiverio": 16, "happen": [16, 19, 47], "slew": 16, "rush": 16, "f": [16, 28, 38, 44, 47, 49, 182, 208, 242, 272, 276, 321, 326], "g": [16, 28, 38, 61, 102, 107, 124, 132, 148, 411, 414, 415, 423, 424, 425, 427, 431, 433, 435, 436, 438], "inevit": 16, "deviat": [16, 409, 410, 411, 414, 431, 437, 478, 479], "origin": [16, 35, 36, 39, 44, 46, 182, 190, 342, 351, 371, 379, 380], "often": [16, 34, 61], "erron": 16, "train": [16, 34, 38, 40, 47, 48, 49, 59, 60, 61, 305, 307, 308, 312, 443], "poor": 16, "converg": 16, "perform": [16, 29, 31, 33, 34, 35, 37, 38, 40, 41, 42, 44, 47, 61, 72, 77, 83, 92, 93, 132, 242, 253, 257, 258, 259, 273, 274, 275, 305, 308, 310, 312, 313, 314, 321, 322, 325, 329, 337, 339, 342, 360, 387, 388, 389, 390, 391, 398, 399, 440, 441, 442], "issu": [16, 17, 20, 44, 46, 48, 61], "etc": [16, 18, 19, 29, 31, 33, 37, 38, 39, 42, 44, 46, 47, 61, 83, 92, 93, 242, 263, 264, 284, 287, 288, 411, 412, 413, 415, 423, 424, 425, 427, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "publish": [16, 61], "manag": [16, 17, 41, 61, 132], "get": [16, 17, 18, 28, 34, 39, 40, 41, 44, 45, 46, 47, 48, 102, 117, 118, 119, 120, 132, 141, 142, 151, 152, 165, 166, 171, 175, 178, 181, 242, 244, 265, 266, 267, 286, 443, 449, 464, 473], "work": [16, 18, 19, 28, 33, 38, 39, 40, 43, 44, 45, 46, 48, 49, 443, 449], "repositori": [16, 18, 19, 32], "pull": [16, 17, 18, 29, 61], "request": [16, 17, 29], "confus": [16, 41], "do": [16, 18, 19, 20, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 182, 231, 242, 275, 305, 311, 319, 391, 392, 401, 402, 403, 431, 432], "don": [16, 19, 48, 61], "expect": [16, 61, 242, 244, 443], "codebas": [16, 17, 28, 29, 41, 43, 132, 174, 175, 443], "total": [16, 17, 19, 31, 33, 40, 47, 48, 61, 132, 178, 418, 421, 431, 437, 439], "hour": 16, "spent": 16, "spin": 16, "off": [16, 43, 342, 346, 363], "test": [16, 18, 28, 31, 61, 102, 122, 123, 182, 210, 211, 212, 440, 441, 442], "error": [16, 18, 33, 37, 40, 42, 46, 61, 72, 73, 132, 182, 203, 431, 433, 435, 476, 477, 480, 484], "iter": [16, 38, 44, 47, 80, 81, 132, 155, 157, 158, 159, 160, 163, 176, 242, 243, 288, 293, 371, 374, 378, 381, 385, 386, 391, 392, 393, 397, 401, 402, 403], "address": [16, 19, 20, 37, 44], "sake": 16, "singl": [16, 29, 31, 33, 34, 36, 38, 41, 42, 44, 47, 48, 49, 61, 132, 141, 142, 161, 162, 163, 164, 242, 301, 304, 411, 414, 415, 423, 424], "multipl": [16, 19, 31, 34, 38, 61, 182, 226, 242, 281, 342, 349, 371, 381, 409, 410, 418, 419, 420, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 474], "line": [16, 18, 19, 31, 37, 45, 46, 47, 48, 59, 443, 449], "convert": [16, 37, 41, 44, 61, 62, 70, 83, 85, 95, 102, 106, 107, 113, 132, 148, 149, 150, 151, 171, 178, 181, 242, 294, 300, 301, 321, 323, 328, 342, 366, 391, 393, 403, 454], "directli": [16, 19, 29, 30, 34, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 60, 61, 391, 403], "graph": [16, 34, 38, 45, 61, 305, 308, 310, 312, 313, 314, 423, 424, 425, 427, 476, 477], "guarante": [16, 37, 61, 423, 424], "turn": [16, 31, 38], "4": [16, 21, 31, 38, 44, 46, 47, 48, 49, 72, 74, 75, 77, 83, 91, 94, 97, 101, 182, 186, 190, 200, 209, 224, 225, 227, 239, 242, 246, 262, 263, 321, 323, 324, 325, 328, 329, 332, 333, 334, 336, 339, 342, 344, 345, 346, 349, 353, 362, 363, 367, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 409, 410, 411, 412, 417, 418, 421, 423, 425, 428, 429, 431, 432, 440, 441, 443, 480, 481, 482, 483, 485], "step": [16, 18, 19, 21, 31, 35, 37, 38, 39, 40, 44, 47, 48, 49, 60, 83, 84, 92, 93, 132, 305, 307, 308, 310, 312, 313, 314, 387, 388, 389, 390, 443, 480, 481, 482, 483, 484, 485], "take": [16, 17, 19, 31, 33, 38, 39, 40, 44, 46, 48, 49, 61, 321, 325, 443, 449], "few": [16, 19, 20, 34, 38, 39, 40, 41, 45, 46, 47, 48, 59, 443, 449], "second": [16, 31, 41, 46, 132, 163, 182, 186, 192, 194, 195, 196, 197, 202, 207, 209, 213, 214, 219, 220, 222, 223, 226, 228, 230, 238, 242, 245, 286, 291, 305, 307, 308, 312, 342, 344, 346, 347, 350, 355, 357, 360, 362, 364, 371, 383, 384, 387, 389, 423, 424, 425, 480, 481, 482], "automat": [16, 18, 19, 34, 38, 42, 43, 44, 45, 48, 49, 443], "convers": [16, 43, 45, 49, 60, 61, 443, 449], "everyon": [16, 17, 19, 61], "regardless": [16, 17, 46, 49, 80, 81], "wouldn": 16, "nice": [16, 33], "write": [16, 19, 20, 21, 28, 29, 30, 31, 33, 34, 35, 41, 44, 46, 49, 72, 75, 132, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 250, 254, 261, 263, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "onc": [16, 18, 19, 38, 39, 40, 44, 47, 61, 132, 176, 342, 349, 360, 411, 412], "know": [16, 423, 424, 425, 427], "among": [16, 33], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 34, 44], "understand": [16, 18, 19, 20, 21, 28, 30, 31, 32, 42, 43], "pattern": [16, 39, 242, 257, 258, 259], "hasn": 16, "chang": [16, 19, 20, 30, 32, 33, 38, 44, 48, 61, 132, 342, 344, 371, 379, 391, 393, 403, 443, 449], "now": [16, 18, 29, 36, 38, 39, 42, 46, 47, 49, 60, 61, 431, 432, 464, 475, 476, 477], "spend": 16, "torchvis": 16, "probabl": [16, 329, 337, 411, 412, 464, 472], "sonnet": 16, "about": [16, 19, 43, 44, 48, 49, 61, 102, 119, 120], "next": [16, 18, 19, 20, 30, 31, 35, 36, 46, 47, 102, 119, 443, 476, 477, 480, 481, 482, 483, 484, 485], "everyth": [16, 19, 45, 61], "zero": [16, 31, 39, 40, 42, 44, 47, 48, 72, 74, 75, 83, 86, 88, 94, 98, 99, 101, 102, 108, 182, 186, 194, 200, 205, 221, 222, 224, 225, 226, 227, 230, 231, 239, 242, 284, 287, 288, 305, 307, 308, 312, 313, 329, 337, 342, 345, 350, 353, 356, 364, 365, 371, 375, 376, 378, 380, 386, 418, 419, 420, 421, 423, 424, 425, 427, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 455, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 480, 481, 482, 483], "need": [16, 19, 20, 29, 30, 31, 32, 34, 37, 38, 41, 44, 46, 47, 60, 61, 242, 249, 250, 371, 372, 375], "said": 16, "high": [16, 20, 47, 411, 413, 415], "level": [16, 17, 20, 34, 43, 44, 47, 48, 49, 61], "optim": [16, 41, 45, 47, 49, 60, 132, 305, 308, 310, 312, 313, 314, 387, 388, 389, 390, 443, 481, 482, 483, 485], "trainer": [16, 59, 61, 443], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 49], "flax": [16, 49, 61], "trax": [16, 49], "objax": [16, 49], "idea": [16, 60], "fulli": [16, 37, 38, 42, 44, 45, 46, 47, 48, 49, 61, 464, 474, 475], "offer": [16, 48], "strongli": [17, 443, 449], "welcom": [17, 18, 443, 449], "absolut": [17, 182, 183, 342, 358], "skill": 17, "whether": [17, 18, 39, 41, 42, 72, 73, 80, 81, 102, 108, 117, 121, 122, 123, 131, 132, 151, 152, 163, 167, 171, 176, 179, 181, 182, 212, 242, 243, 245, 246, 253, 256, 260, 262, 268, 270, 272, 275, 276, 277, 278, 279, 280, 281, 293, 297, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 316, 329, 337, 342, 347, 387, 388, 389, 390, 391, 392, 393, 397, 401, 402, 403, 404, 411, 412, 440, 441, 442, 453, 454, 464, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 21, 28, 30, 31, 39, 43, 44, 46, 47, 48, 60, 61, 83, 84, 92, 93, 132, 147], "aspect": [17, 47, 321, 327, 443], "guid": [17, 18, 19, 33, 443], "through": [17, 19, 28, 31, 34, 35, 38, 43, 44, 46, 47, 48, 49, 60, 182, 190], "journei": [17, 443, 449], "inclusvi": 17, "big": [17, 61], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 43, 443], "split": [17, 19, 43, 44, 61, 132, 141, 157, 158, 159, 160, 174, 175, 176, 242, 281, 371, 443], "section": [17, 19, 20, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 423, 424, 425, 427], "below": [17, 18, 20, 28, 29, 31, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 60, 83, 94, 98, 99, 182, 186, 200, 224, 225, 239, 342, 345, 346, 363, 371, 375, 376, 378, 380, 423, 425, 428, 429, 443], "best": [17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 242, 281], "go": [17, 18, 19, 28, 29, 31, 38, 43, 47, 61, 391, 402], "finish": [17, 18, 28, 443], "dive": [17, 19, 20, 43, 46, 47, 61], "right": [17, 18, 19, 28, 31, 47, 182, 194, 196, 342, 360], "environ": [17, 18, 60], "basic": [17, 20, 21], "fork": [17, 242, 282], "doc": [17, 20, 30, 42, 44, 47, 48, 443], "document": [17, 19, 21, 45, 47, 49], "local": [17, 21, 34], "task": [17, 19, 60, 387, 388, 389, 390], "help": [17, 18, 31, 37, 38, 46, 47, 48, 59, 431, 432, 438, 443], "video": [17, 19, 30, 31, 42], "realli": [18, 38, 61], "contribut": [18, 19, 20, 44, 449], "toward": [18, 44, 371, 380, 443, 449], "page": [18, 19, 45, 49, 59, 443, 449], "explain": [18, 19, 20, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 443, 449], "main": [18, 21, 36, 38, 83, 88, 98, 99, 342, 346, 363], "prefer": [18, 38], "mode": [18, 31, 38, 61, 80, 81, 132, 161, 162, 163, 164, 176, 182, 186, 226, 342, 357], "git": [18, 19], "com": 18, "unifyai": [18, 21], "http": [18, 30, 182, 200, 305, 307, 308, 371, 375, 423, 425, 428, 429], "gh": 18, "your_fold": 18, "id": [18, 37, 38, 132, 151, 476, 477], "cours": [18, 19, 31, 47, 61], "whatev": [18, 61], "integr": [18, 33, 102, 108], "familiar": 18, "decid": [18, 391, 402], "sure": [18, 32], "elig": 18, "free": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60], "student": 18, "licenc": 18, "peopl": [18, 19, 28], "seem": [18, 48, 61], "miss": [18, 31, 33, 37, 38, 480, 484], "add": [18, 19, 20, 28, 29, 30, 34, 35, 37, 38, 42, 44, 46, 61, 182, 409, 410, 443, 449, 478, 479], "explicit": [18, 38, 39, 41, 44, 61], "remind": 18, "channel": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 242, 262, 321, 323, 324, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474], "show": [18, 31, 41, 60, 61, 443], "easier": [18, 37], "remot": 18, "packag": [18, 61], "mitig": 18, "potenti": [18, 43, 182, 205], "conflict": [18, 19, 47], "addit": [18, 19, 29, 30, 33, 38, 39, 46, 47, 49, 182, 186, 242, 257, 258, 259, 409, 410, 464, 474], "yet": [18, 20, 38], "particular": [18, 29, 41, 182, 183, 431, 432], "system": [18, 61, 342, 359], "instruct": [18, 20], "abov": [18, 30, 31, 34, 37, 38, 41, 42, 46, 47, 48, 49, 83, 94, 98, 99, 182, 186, 200, 224, 225, 226, 239, 242, 263, 329, 332, 342, 345, 346, 347, 363, 371, 375, 376, 378, 380, 411, 413, 423, 425, 428, 429, 431, 436, 437, 438], "instal": [18, 21, 60, 443], "desktop": 18, "wsl": 18, "requir": [18, 21, 29, 30, 31, 33, 36, 37, 39, 40, 42, 46, 61, 80, 81, 182, 236, 342, 347, 371, 383, 453, 454], "run": [18, 21, 32, 33, 42, 44, 45, 46, 47, 48, 49, 60, 61, 132, 141, 305, 307, 308, 312, 387, 388, 389, 390, 464, 475, 476, 477], "command": [18, 21, 443], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 21, 30, 61, 182, 200, 371, 375, 423, 425, 428, 429, 464, 473], "imag": [18, 21, 29, 44, 45, 47, 49, 60, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 443], "cmd": 18, "profession": 18, "execut": [18, 21, 38, 41, 44, 46, 49, 61, 242, 302], "deploy": 18, "click": [18, 30, 443], "top": [18, 33, 47, 48], "left": [18, 31, 39, 182, 194, 342, 347, 351, 360, 418, 419], "icon": 18, "side": [18, 19], "choos": [18, 19, 49, 182, 221, 222, 418, 422, 423, 424, 425, 427, 431, 433, 434, 435], "panel": 18, "python3": 18, "path": [18, 21], "press": [18, 47, 443], "ok": 18, "correctli": [18, 33, 38, 39, 42, 48, 61, 342, 351, 418, 419], "caus": [18, 19, 31, 33, 38, 41, 61], "earlier": [18, 19], "note": [18, 19, 29, 31, 38, 182, 231, 342, 347, 360, 371, 383, 423, 425, 431, 434], "might": [18, 19, 29, 33, 36, 44, 46, 47, 242, 256], "necessari": [18, 31, 38, 41], "virtualis": 18, "setup": 18, "termin": [18, 19, 38, 44, 47], "linux": 18, "detail": [18, 19, 20, 29, 33, 34, 35, 36, 38, 42, 47, 48, 83, 89, 423, 424, 425, 427], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 21, 28, 31, 32, 36, 37, 38, 39, 42, 44, 46, 47, 49, 61, 132, 141, 242, 275, 287, 288, 305, 307, 308, 310, 312, 313, 314, 329, 339, 387, 388, 389, 391, 398, 399, 407, 408, 453, 454, 480, 481, 482, 483, 484, 485], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 83, 94, 242, 249, 250, 329, 337, 342, 351, 365, 464, 472], "keyr": 18, "fssl": 18, "download": [18, 33], "gpg": 18, "dearmor": 18, "o": [18, 44, 242, 246], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 49, 61], "lsb_releas": 18, "cs": 18, "stabl": [18, 44, 61, 242, 266, 267, 289, 290, 295, 296, 428, 429, 430], "tee": 18, "list": [18, 20, 21, 29, 31, 39, 40, 42, 44, 47, 48, 49, 61, 83, 84, 85, 86, 94, 95, 96, 100, 102, 109, 132, 141, 142, 151, 153, 154, 157, 158, 161, 162, 176, 242, 246, 294, 299, 303, 321, 327, 329, 330, 331, 332, 333, 334, 335, 336, 342, 362, 371, 373, 376, 381, 383, 391, 392, 393, 397, 402, 403, 409, 410, 418, 421, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 471], "dev": [18, 34, 40, 44, 46, 48, 132, 141, 170], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 38, 61], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 60, 132], "post": [18, 49, 409, 410, 443, 449], "pypi": [18, 61], "more": [18, 19, 20, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 61, 83, 84, 102, 109, 182, 205, 342, 350, 371, 376, 423, 424, 425, 427, 431, 432, 443], "nutshel": [18, 42], "hook": 18, "lint": 18, "accept": [18, 19, 30, 31, 33, 34, 37, 38, 40, 41, 42, 46, 83, 94, 182, 186, 200, 221, 222, 224, 225, 231, 239, 242, 263, 329, 332, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429, 431, 434, 443], "fix": [18, 19], "fail": [18, 33, 44, 46], "attempt": [18, 61], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 59, 61, 72, 73, 74, 75, 76, 77, 78, 79, 102, 124, 242, 257, 258, 259, 305, 312, 313, 329, 338, 340, 341, 342, 353, 356, 367, 368, 369, 370, 371, 383, 387, 388, 389, 391, 397, 400, 403, 404, 409, 410, 443, 450, 451, 452, 478, 479], "To": [18, 19, 34, 38, 47, 48, 49, 443], "proce": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "modifi": [18, 30, 34, 39, 40, 44], "file": [18, 19, 21, 29, 30, 34, 37, 38, 44, 47, 242, 292, 476, 477], "properli": [18, 28], "m": [18, 28, 44, 83, 94, 98, 99, 242, 246, 342, 343, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 363, 411, 414, 415], "pip": [18, 60, 443], "enter": [18, 19, 37, 39, 40, 42, 132], "folder": [18, 19, 21, 29, 32, 33, 34], "cd": 18, "That": [18, 19, 46, 47, 48, 182, 231], "good": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 431, 432], "ever": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "unsur": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "feel": [18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "server": 19, "outlin": [19, 20, 28, 33, 34, 38, 41, 46], "appropri": [19, 20, 182, 186, 226, 418, 419], "context": [19, 38, 39, 40, 132, 242, 282, 329, 340, 464, 475], "suitabl": [19, 29, 38], "quick": [19, 28, 48], "alwai": [19, 29, 30, 34, 37, 38, 41, 42, 44, 46, 61, 102, 108, 182, 186, 226, 242, 275, 305, 311, 316], "correct": [19, 20, 28, 34, 38, 39, 40, 42, 371, 372, 431, 437, 439, 443], "tendenc": 19, "gener": [19, 20, 21, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 60, 61, 80, 83, 84, 92, 93, 182, 200, 231, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 371, 375, 411, 412, 413, 415, 416, 423, 425, 428, 429, 443, 480, 484], "land": 19, "end": [19, 38, 41, 43, 60, 61, 83, 84, 182, 190, 443, 449], "world": 19, "come": [19, 20, 48, 59, 443, 449], "fly": 19, "hard": [19, 46], "keep": [19, 32, 38, 45, 47, 49, 242, 303], "track": [19, 132, 391, 403, 476, 477], "receiv": [19, 33, 39, 40, 132, 141, 142, 242, 244, 281, 464, 474], "respons": [19, 21, 41], "internship": 19, "mean": [19, 28, 31, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 60, 61, 132, 161, 162, 163, 164, 176, 242, 258, 387, 388, 389, 390, 391, 397, 411, 414, 431, 455], "found": [19, 30, 37, 38], "avoid": [19, 33, 35, 36, 38, 46, 132, 182, 205], "someon": [19, 61], "els": [19, 29, 34, 35, 41, 44, 46, 48, 49, 61, 242, 247, 256, 260, 391, 401], "strive": [19, 61], "respond": 19, "newli": [19, 41, 80, 81, 102, 108, 242, 248], "name": [19, 21, 30, 33, 44, 46, 47, 49, 80, 81, 342, 347, 357, 360, 423, 424, 425], "suggest": [19, 29], "place": [19, 28, 29, 30, 31, 33, 34, 38, 40, 42, 49, 83, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 100, 101, 132, 177, 182, 186, 200, 224, 225, 239, 242, 263, 273, 274, 275, 329, 332, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429, 480, 481, 482, 483, 484, 485], "bug": [19, 33], "It": [19, 21, 28, 29, 30, 31, 37, 38, 41, 44, 46, 47, 48, 72, 75, 132, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 250, 261, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 418, 419, 428, 429, 430, 440, 441, 442], "serv": [19, 33, 34, 37, 38, 42, 43, 443], "suspect": 19, "behaviour": [19, 30, 33, 37, 38, 41, 42, 46], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 29, 47, 48, 61], "bet": 19, "extens": [19, 30, 83, 94, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 380, 423, 425, 428, 429], "act": [19, 31, 61], "placehold": [19, 37, 42, 391, 403], "sub": [19, 20, 28, 33, 38, 46, 47, 48, 132, 157, 158, 161, 162, 163, 164, 342, 346, 371, 381, 387, 388, 389, 390, 443], "mark": [19, 33], "tick": 19, "ii": [19, 431, 432], "iii": 19, "comment": 19, "titl": [19, 443], "refer": [19, 33, 34, 39, 42, 61, 83, 88, 182, 205, 217, 305, 307, 308, 342, 364, 366, 431, 437, 439, 440, 441, 442, 464, 474], "issue_numb": 19, "delet": [19, 21], "No": [19, 44], "wait": 19, "progress": [19, 38, 45, 49], "pr": 19, "soon": [19, 38, 59, 61, 443, 449], "partial": [19, 476, 477], "solut": [19, 33, 38, 342, 359], "review": [19, 29], "merg": 19, "everi": [19, 21, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 46, 48, 83, 90, 91, 242, 243], "shape": [19, 29, 30, 31, 39, 40, 41, 42, 44, 46, 47, 48, 49, 72, 75, 83, 86, 87, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 132, 144, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 250, 261, 264, 268, 284, 287, 288, 294, 321, 324, 326, 327, 329, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 386, 411, 413, 414, 415, 418, 419, 421, 428, 429, 430, 431, 432, 440, 441, 442, 443, 464, 466, 467, 468, 469, 470, 471, 478, 479], "master": [19, 38], "move": [19, 29, 132, 177], "within": [19, 33, 48, 61, 83, 84, 411, 415], "7": [19, 21, 31, 34, 38, 41, 72, 74, 75, 182, 186, 193, 200, 204, 209, 224, 225, 239, 242, 246, 263, 305, 307, 308, 312, 321, 324, 328, 329, 336, 342, 344, 345, 346, 362, 367, 368, 369, 370, 371, 372, 375, 376, 378, 381, 411, 412, 413, 431, 432], "dai": 19, "close": [19, 30, 182, 205, 321, 327, 342, 360], "method": [19, 29, 30, 31, 33, 34, 37, 42, 44, 45, 48, 49, 61, 72, 74, 75, 76, 77, 78, 79, 83, 89, 94, 182, 186, 200, 209, 224, 225, 227, 239, 242, 251, 263, 287, 288, 305, 312, 313, 342, 344, 345, 362, 367, 368, 370, 371, 372, 375, 376, 378, 380, 381, 391, 392, 402, 403, 404, 418, 421, 423, 425, 428, 429, 440, 441, 443, 464, 475, 476, 477], "likewis": [19, 34, 38, 39, 42, 47], "freed": 19, "flag": [19, 41, 46, 132, 151, 305, 311], "purpos": [19, 21, 31, 33, 34, 36, 37, 38, 42, 43, 46, 182, 205, 443], "ensur": [19, 33, 37, 39, 42, 242, 275], "remain": [19, 31, 61, 182, 186, 226, 231, 371, 379, 391, 397], "access": [19, 21, 39], "who": [19, 28, 43, 61], "short": [19, 48, 329, 339], "basi": [19, 32, 47], "situat": [19, 49], "alloc": [19, 61, 83, 98, 99, 102, 108, 132], "upon": [19, 31, 33, 41, 61], "long": [19, 31, 329, 339], "period": 19, "prevent": [19, 41, 46, 305, 307, 308, 312, 431, 438, 480, 481, 482], "instead": [19, 20, 30, 31, 33, 34, 38, 41, 42, 44, 46, 47, 61], "unabl": 19, "obvious": 19, "never": [19, 38], "reflect": [19, 37], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "sometim": 19, "fine": [19, 46, 49], "person": 19, "becaus": [19, 30, 33, 34, 35, 37, 39, 40, 41, 42, 44, 48, 49, 61], "inact": 19, "limit": [19, 31, 33, 44, 47, 49, 61, 102, 119, 120, 242, 249, 250, 371, 372], "me": 19, "unfairli": 19, "definit": [19, 34, 39, 46, 342, 343, 344], "investig": 19, "Then": [19, 21, 46, 61], "practic": [19, 33], "separ": [19, 33, 37, 44, 46, 47], "branch": [19, 38, 61, 80, 81, 182, 190], "simpli": [19, 30, 33, 34, 37, 38, 40, 41, 42, 44, 48, 49, 182, 205], "role": [19, 45], "kept": [19, 41, 387, 388, 389], "date": 19, "upstream": [19, 32], "complic": [19, 44], "script": [19, 31, 44, 61], "root": [19, 21, 47, 182, 236, 411, 412, 413, 414, 415], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 431, 436, 438], "browser": 19, "clone": [19, 132, 153, 154, 155, 156], "push": [19, 32], "both": [19, 20, 30, 31, 34, 38, 40, 41, 42, 44, 46, 47, 48, 49, 60, 61, 182, 230, 242, 263, 329, 332, 342, 344, 350, 364], "repeat": [19, 30, 31, 35, 37, 38, 242, 259, 371, 385], "yourself": [19, 60], "simpler": [19, 46], "cannot": [19, 39, 49], "alreadi": [19, 30, 35, 38, 42, 46, 61, 132, 182, 198, 206, 226, 241, 342, 355, 443], "least": [19, 31, 34, 37, 342, 350], "final": [19, 30, 31, 34, 37, 39, 41, 44, 46, 47, 83, 92, 93, 242, 262, 464, 475], "done": [19, 31, 33, 47], "tickbox": 19, "lower": [19, 31, 44, 61, 83, 88, 98, 182, 224, 342, 343, 411, 415], "corner": 19, "without": [19, 29, 34, 37, 38, 42, 44, 46, 47, 48, 60, 61, 242, 286, 291, 371, 379, 391, 393, 423, 424, 425, 427], "span": 19, "intent": [19, 41], "larg": [19, 47, 182, 186, 226], "approach": [19, 33, 34, 38, 46, 47, 61], "discourag": 19, "philosophi": 19, "increment": [19, 242, 274], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 443], "wast": 19, "spot": [19, 34], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 34, 37, 42, 46, 61], "advoc": [19, 61], "individu": [19, 20, 34], "per": [19, 47, 132, 329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "style": [19, 418, 421], "ve": [19, 43, 46, 411, 412, 443], "were": [19, 29, 31, 33, 38], "actual": [19, 28, 34, 41, 43, 46, 48, 61], "aim": [19, 43], "part": [19, 29, 32, 33, 34, 44, 45, 49, 60, 61, 83, 98, 99, 305, 308, 310, 312, 313, 314, 476, 477], "subsect": 19, "filepath": 19, "interact": [19, 443], "session": 19, "block": [19, 34, 43, 45, 49, 61, 132, 443], "smaller": [19, 44, 49, 371, 372, 380, 431, 436, 438], "manual": [19, 33, 48, 391, 392, 401, 402], "edit": 19, "exact": [19, 44, 423, 424], "beauti": 19, "histori": 19, "particularli": [19, 47, 61], "concern": [19, 28, 31, 38, 41, 43], "abl": [19, 34, 39, 41, 46, 49], "effici": [19, 33, 34, 38, 41, 42, 44, 47, 61, 431, 432], "too": [19, 61, 182, 186, 226], "difficult": [19, 33, 61, 423, 424, 425, 427], "undo": 19, "stress": 19, "frequenc": [19, 242, 262], "wherebi": [20, 38, 391, 403], "remov": [20, 21, 30, 33, 34, 39, 41, 49, 342, 346, 350, 363, 371, 382, 387, 388, 389], "broad": 20, "distribut": [20, 40, 61, 132, 153, 157, 158, 159, 160, 329, 337, 367, 368, 369, 370, 411, 412, 413, 414, 415, 464, 472, 476, 477], "across": [20, 31, 33, 34, 38, 39, 42, 132, 141, 142, 153, 154, 156, 157, 158, 159, 160, 164, 174, 175, 242, 245, 246, 391, 397, 418, 420], "todo": [20, 33], "reformat": 20, "submodul": [20, 21, 32, 33, 34, 40, 43, 44, 48, 443, 478, 479, 486, 487], "navig": [20, 28], "resourc": 20, "thei": [20, 28, 29, 31, 34, 38, 39, 40, 41, 46, 47, 48, 49, 61, 387, 388, 389, 411, 412, 443, 486, 487], "lambda": [20, 44, 47, 480, 483, 485], "direct": [20, 48, 49, 60, 428, 430], "bind": [20, 38], "defin": [20, 29, 30, 39, 42, 46, 48, 61, 182, 226, 231, 242, 284, 342, 344, 347, 359, 411, 413, 431, 433, 434, 435], "hint": [20, 29, 30, 34, 37, 41, 42, 83, 94, 182, 186, 200, 224, 225, 239, 242, 263, 329, 332, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429], "docstr": [20, 21, 28, 29, 34, 38, 42, 83, 94, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 380, 423, 425, 428, 429], "thorough": [20, 30, 33, 42], "transpil": [20, 43, 45, 443, 449], "quit": [20, 30, 34, 36, 37], "readi": 20, "builder": [21, 59, 61, 443], "synchron": 21, "rest": [21, 45, 49], "remove_doc": 21, "_": [21, 30, 41, 46, 47, 182, 200, 305, 307, 308, 342, 366, 371, 375, 423, 425, 428, 429], "indic": [21, 45, 49, 72, 77, 182, 233, 242, 263, 264, 271, 284, 287, 288, 329, 330, 331, 332, 333, 334, 335, 336, 342, 365, 371, 380, 391, 392, 394, 396, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 420, 421, 423, 424, 426, 428, 429, 430, 443, 446, 448, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477], "privat": [21, 480, 484], "fulfil": [21, 43, 443], "autogenerated_sourc": 21, "3": [21, 31, 38, 44, 46, 47, 48, 49, 72, 74, 75, 76, 77, 82, 83, 91, 94, 97, 100, 101, 132, 151, 177, 182, 186, 196, 200, 204, 208, 209, 213, 224, 225, 227, 239, 242, 245, 246, 263, 293, 321, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 342, 343, 344, 345, 346, 349, 353, 360, 362, 363, 366, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 409, 410, 411, 412, 413, 417, 418, 421, 423, 425, 428, 429, 431, 432, 438, 440, 441, 443], "format": [21, 30, 39, 40, 44, 46, 47, 102, 113, 117, 132, 152, 431, 432, 443], "png": [21, 47], "_imag": 21, "lastli": 21, "structur": [21, 29, 34, 37, 38, 47, 48, 242, 251, 391, 404], "rst": 21, "skip": [21, 33, 391, 404], "read": [21, 443], "configur": [21, 39, 391, 404], "partial_sourc": 21, "conf": 21, "copi": [21, 30, 35, 39, 44, 46, 47, 60, 61, 83, 85, 89, 102, 108, 242, 252, 300, 301, 371, 379, 391, 393, 428, 430], "5": [21, 31, 42, 46, 47, 48, 72, 74, 75, 77, 83, 91, 94, 97, 100, 101, 132, 170, 182, 186, 191, 196, 200, 209, 224, 225, 227, 239, 242, 246, 263, 321, 324, 325, 329, 332, 334, 335, 342, 343, 344, 345, 346, 349, 362, 363, 367, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 409, 410, 411, 412, 413, 417, 418, 421, 423, 425, 428, 429, 431, 432, 440, 441, 464, 475], "create_rst_fil": 21, "filter": [21, 329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "recurs": [21, 34, 36, 38, 48, 61, 391, 392, 393, 401, 402, 403], "directori": [21, 242, 292], "repres": [21, 46, 83, 94, 102, 113, 118, 182, 185, 186, 188, 191, 200, 226, 235, 329, 338, 342, 358, 359], "its": [21, 30, 102, 109, 132, 176, 342, 350, 371, 375, 379, 380, 384], "overal": [21, 30, 38, 39, 40, 49], "markup": 21, "6": [21, 31, 38, 46, 47, 48, 72, 74, 75, 77, 83, 91, 182, 186, 193, 200, 209, 224, 225, 227, 239, 242, 246, 263, 321, 324, 329, 332, 336, 342, 344, 345, 346, 360, 362, 367, 368, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 409, 410, 411, 412, 413, 423, 425, 431, 432], "extract": [21, 29], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 61], "module_nam": 21, "copy_readme_to_rst": 21, "8": [21, 31, 38, 43, 47, 72, 76, 182, 186, 200, 209, 224, 225, 242, 246, 263, 321, 324, 329, 336, 342, 344, 345, 346, 362, 367, 368, 371, 372, 376, 378, 381, 411, 412, 413, 431, 432, 443, 464, 475], "tabl": 21, "content": [21, 41, 44, 47], "toc": 21, "tree": 21, "accord": [21, 34, 39, 102, 111, 119, 182, 186, 196, 226, 242, 263, 287, 288, 342, 364, 371, 374, 386, 431, 437, 439], "append": [21, 33, 44, 47, 182, 194, 342, 346, 350], "append_toctree_to_rst": 21, "9": [21, 31, 47, 48, 182, 186, 193, 224, 225, 242, 263, 305, 307, 308, 312, 329, 332, 336, 342, 344, 345, 360, 362, 371, 372, 376, 380, 381, 411, 412, 413, 431, 432, 480, 481, 482], "index": [21, 34, 38, 46, 82, 83, 88, 94, 242, 263, 264, 371, 383, 391, 394, 395, 398, 399, 400, 405, 407, 418, 419, 420, 421, 423, 424, 425, 428, 429, 446, 448], "create_index_rst": 21, "14": [21, 31, 38, 342, 362, 371, 378, 411, 413, 431, 432], "\u03c0": [21, 182, 184, 187, 189, 190], "namespac": [21, 29, 39, 44, 49], "debug_mod": 22, "set_breakpoint_debug_mod": 22, "set_debug_mod": 22, "debug_mode_in": [22, 25], "except": [22, 25, 30, 34, 39, 40, 41, 46, 61, 102, 110, 242, 247, 256, 275, 302, 342, 356, 371, 373, 383, 418, 421, 440, 441, 442], "set_exception_debug_mod": 22, "unset_debug_mod": 22, "debugg": [23, 24, 25, 26, 27], "mainli": [28, 45, 47], "target": [28, 43, 47, 48, 49, 132, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 443], "under": [28, 30, 31, 33, 34, 38, 43, 44, 47, 49], "hood": [28, 31, 33, 34, 38, 43, 44, 47, 49], "weed": [28, 43], "behind": [28, 43, 45, 305, 308, 310, 312, 313, 314], "tour": 28, "primari": [28, 33, 35, 41, 61], "composit": [28, 33, 35, 37, 38, 41, 44, 48, 49, 61], "mix": [28, 31, 33, 44, 102, 124, 182, 186, 209, 224, 225, 242, 263, 329, 332, 336, 342, 362, 367, 368, 370, 431, 434], "nestabl": [28, 30, 31, 33, 41, 242, 263, 329, 332], "wrap": [28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 49, 61, 62, 70, 242, 248, 305, 319], "dynam": [28, 39, 40, 41, 44, 80, 81], "runtim": [28, 33, 132], "handl": [28, 33, 34, 36, 38, 39, 40, 41, 42, 48, 61, 80, 81, 132, 148, 149, 150, 151, 152, 170, 171, 178, 181, 305, 308, 310, 312, 313, 314, 480, 481, 482, 483, 484, 485], "h": [28, 38, 321, 322, 323, 324, 326, 328, 329, 332, 333, 334, 335, 336], "inplac": [28, 31, 36, 37, 42, 46, 48, 242, 247, 272, 275, 276, 297, 305, 308, 310, 312, 313, 314, 453, 454, 480, 481, 482, 483, 484, 485], "output": [28, 29, 30, 31, 33, 34, 37, 38, 40, 41, 42, 44, 46, 48, 49, 61, 72, 75, 83, 84, 86, 87, 88, 90, 91, 94, 96, 97, 100, 101, 132, 141, 142, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 248, 250, 254, 261, 263, 305, 309, 329, 331, 333, 335, 337, 339, 340, 341, 342, 363, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 385, 411, 413, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475], "j": [28, 242, 245, 246, 342, 363, 431, 432], "k": [28, 44, 83, 88, 98, 99, 242, 245, 329, 341, 342, 350, 357, 359, 360, 361, 363, 411, 414, 415, 418, 421], "l": [28, 342, 343, 347, 350, 363], "borrow": 28, "n": [28, 83, 94, 98, 99, 242, 246, 329, 337, 342, 346, 350, 352, 353, 354, 355, 356, 357, 360, 361, 363, 364, 365, 366, 371, 374, 375, 377, 383, 386, 411, 414, 415, 418, 421, 431, 434, 437, 438, 439, 440, 441, 442], "categori": [29, 37, 38, 39, 43, 443], "taken": [29, 49, 342, 346], "constant": [29, 34, 48, 49, 61, 132, 141, 142, 371, 374, 391, 397, 409, 410, 455, 456, 460, 463, 476, 477, 478, 479], "creation": [29, 39, 40, 44, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "data_typ": [29, 39, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "elementwis": [29, 34, 44, 49, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "linear_algebra": [29, 46, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "sort": [29, 342, 347, 360, 361, 429], "statist": [29, 39, 432, 433, 434, 435, 436, 437, 438, 439], "util": [29, 40, 132, 165, 441, 442], "activ": [29, 48, 73, 74, 75, 76, 77, 78, 79, 443, 451, 452], "compil": [29, 38, 43, 45, 61, 443, 476, 477, 480, 481, 482, 483, 484, 485], "gradient": [29, 38, 47, 48, 60, 61, 132, 176, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 387, 388, 389, 390, 443, 480, 481, 482, 483, 484, 485], "loss": [29, 34, 47, 48, 49, 368, 369, 370, 443], "meta": [29, 388, 389, 390], "nest": [29, 34, 38, 46, 47, 48, 61, 132, 156, 160, 164, 242, 299, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 476, 477, 480, 481, 482, 483, 484, 485], "norm": [29, 242, 249, 250, 342, 351, 365, 410, 443, 479, 480, 482], "random": [29, 40, 49, 60, 412, 413, 414, 415, 416, 417, 443], "overlap": 29, "sever": [29, 61, 342, 349], "judgement": 29, "locat": [29, 33, 40, 411, 412], "matmul": [29, 44, 342, 360, 443], "some_namespac": 29, "insid": [29, 39], "some_backend": 29, "another_backend": 29, "break": [29, 42, 46, 61, 443], "anyth": 29, "refactor": 29, "ongo": 29, "subfold": [29, 33], "via": [29, 35, 38, 39, 40, 41, 44, 46, 47, 60, 391, 392, 401, 402], "file_nam": 29, "my_func": [29, 31], "union": [29, 31, 34, 37, 38, 39, 40, 41, 42, 44, 49, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 148, 149, 150, 151, 152, 157, 158, 159, 160, 165, 171, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 250, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 268, 270, 271, 275, 284, 287, 288, 293, 294, 299, 300, 301, 303, 304, 305, 318, 321, 325, 327, 328, 329, 330, 332, 334, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 402, 403, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442], "nativearrai": [29, 31, 34, 37, 38, 41, 42, 44, 46, 49, 62, 70, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 108, 109, 110, 117, 119, 120, 122, 123, 124, 132, 151, 152, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 250, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 268, 270, 271, 275, 284, 287, 288, 293, 299, 300, 301, 303, 304, 305, 318, 321, 325, 327, 328, 329, 330, 332, 334, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 393, 403, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442], "ax": [29, 31, 39, 46, 132, 176, 342, 351, 359, 362, 365, 371, 374, 376, 377, 380, 382, 384, 386, 418, 419, 420, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "int": [29, 31, 34, 38, 39, 40, 41, 42, 49, 72, 77, 80, 81, 83, 86, 88, 90, 91, 92, 93, 96, 98, 99, 100, 102, 110, 116, 118, 119, 120, 123, 132, 157, 158, 159, 160, 168, 169, 170, 176, 242, 253, 254, 257, 258, 259, 262, 263, 268, 284, 287, 288, 293, 294, 303, 321, 325, 327, 329, 330, 332, 334, 336, 342, 344, 346, 362, 363, 364, 365, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 403, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442], "tupl": [29, 38, 39, 40, 42, 46, 47, 48, 61, 80, 81, 83, 85, 86, 90, 95, 96, 100, 102, 110, 132, 151, 242, 262, 294, 321, 327, 329, 332, 336, 342, 353, 356, 360, 362, 365, 371, 373, 374, 376, 377, 380, 382, 383, 386, 391, 393, 394, 396, 398, 399, 400, 402, 403, 405, 406, 407, 408, 411, 413, 414, 415, 418, 421, 423, 424, 425, 426, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "dtype": [29, 31, 34, 39, 40, 46, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 182, 196, 200, 227, 242, 245, 246, 284, 321, 324, 371, 375, 409, 410, 418, 419, 428, 430, 431, 432, 436, 437, 438, 440, 441, 443], "nativedtyp": [29, 39, 40, 42, 83, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 100, 101, 102, 107, 108, 115, 116, 117, 431, 438], "nativedevic": [29, 39, 40, 42, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 132, 149, 150, 151, 165, 171, 173, 177, 178, 181, 242, 263, 264, 284, 287, 288, 411, 412, 413, 414, 415], "my": 29, "cool": 29, "special": [29, 30, 31, 37, 42, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 233, 234, 235, 236, 239, 241, 431, 433, 434, 435, 437, 438, 439], "nan": [29, 30, 82, 102, 108, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 210, 212, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 242, 270, 304, 423, 424, 425, 427, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442], "y": [29, 31, 38, 44, 46, 72, 74, 75, 76, 77, 78, 79, 83, 90, 91, 94, 96, 97, 101, 102, 108, 132, 152, 170, 182, 186, 190, 193, 196, 198, 199, 200, 204, 209, 224, 225, 227, 239, 242, 245, 246, 252, 261, 263, 299, 300, 301, 305, 309, 321, 325, 328, 329, 336, 338, 342, 343, 344, 345, 349, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 425, 428, 429, 431, 432, 437, 438, 440, 441], "input": [29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 61, 62, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 94, 95, 97, 98, 99, 101, 102, 108, 109, 111, 112, 114, 115, 116, 117, 118, 122, 123, 124, 132, 141, 142, 151, 152, 153, 156, 157, 160, 164, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 268, 270, 271, 273, 274, 275, 277, 278, 279, 280, 293, 294, 297, 299, 300, 301, 303, 304, 305, 309, 311, 316, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 409, 410, 411, 412, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479], "numer": [29, 48, 83, 94, 102, 108, 182, 183, 186, 198, 201, 205, 206, 207, 210, 211, 212, 213, 221, 222, 226, 227, 228, 230, 231, 233, 238, 241, 242, 266, 267, 289, 290, 295, 296, 342, 344, 350, 355, 360, 362, 363, 364, 411, 417, 418, 419, 420, 431, 433, 436, 438, 455], "along": [29, 41, 83, 92, 93, 132, 157, 158, 159, 160, 161, 162, 163, 164, 176, 242, 253, 254, 263, 303, 321, 325, 342, 351, 363, 364, 365, 367, 369, 370, 371, 373, 376, 378, 380, 381, 383, 385, 387, 388, 389, 390, 411, 417, 418, 419, 420, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "result": [29, 30, 31, 33, 37, 38, 39, 41, 42, 47, 61, 72, 75, 83, 84, 102, 124, 132, 141, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 250, 254, 261, 263, 287, 288, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 346, 351, 360, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 391, 404, 418, 419, 420, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "broadcast": [29, 30, 31, 38, 39, 72, 75, 102, 109, 110, 132, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 242, 250, 261, 342, 350, 351, 353, 356, 359, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 380, 382, 383, 418, 419, 420, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "cooler": 29, "keyword": [29, 39, 40, 41, 42, 47, 83, 94, 132, 141, 142, 156, 160, 164, 242, 244, 281, 391, 397, 431, 438, 476, 477], "produc": [29, 132, 141, 142], "featur": [29, 42, 47, 443], "something_cool": 29, "category_nam": [30, 34, 39, 40, 42], "contrast": [30, 42], "backend_nam": [30, 34, 35, 36, 39, 40, 42], "account": 30, "instanti": 30, "tan": [30, 34, 38, 41, 42, 44, 182, 423, 425, 428, 429, 443], "firstli": [30, 31, 34, 37, 39, 41, 47], "correspond": [30, 31, 32, 34, 37, 38, 39, 42, 102, 109, 182, 190, 230, 342, 344, 347, 359, 371, 373, 380, 411, 412, 418, 419, 420, 423, 424, 425, 427, 431, 436, 437, 438, 439], "templat": [30, 443], "spec": [30, 31], "api_specif": [30, 182, 200, 371, 375, 423, 425, 428, 429], "array_api": 30, "raw": 30, "preview": 30, "newlin": 30, "render": 30, "incorrectli": 30, "onlin": 30, "approxim": [30, 72, 73, 182, 184, 185, 187, 188, 189, 190, 199, 200, 204, 205, 215, 216, 217, 218, 230, 234, 235, 239, 342, 353, 356], "tangent": [30, 72, 79, 182, 189, 190, 191, 239, 240], "domain": [30, 182, 184, 185, 187, 188, 189, 190, 199, 200, 204, 205, 215, 216, 218, 234, 235, 236, 239], "infin": [30, 82, 102, 108, 182, 183, 185, 186, 188, 189, 190, 198, 199, 200, 204, 205, 206, 207, 210, 211, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 342, 365, 431, 433, 435, 440, 441, 442], "codomain": [30, 182, 184, 185, 187, 188, 189, 190, 199, 200, 204, 205, 215, 216, 218, 234, 235, 236, 239], "element": [30, 44, 49, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 90, 91, 98, 99, 132, 155, 159, 163, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 249, 250, 253, 254, 261, 271, 300, 301, 329, 337, 342, 344, 347, 350, 357, 360, 371, 372, 376, 378, 380, 381, 382, 411, 412, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 472], "x_i": [30, 182, 183, 184, 185, 187, 188, 189, 193, 198, 199, 200, 204, 205, 206, 210, 211, 212, 215, 216, 218, 221, 227, 233, 234, 235, 236, 237, 239, 241, 423, 424, 425, 427, 431, 433, 434, 435, 437, 438, 439], "assum": [30, 39, 46, 47, 61, 83, 94, 182, 186, 199, 200, 224, 225, 234, 239, 242, 263, 329, 332, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429], "express": [30, 44, 49, 182, 184, 187, 189, 190, 199, 234, 239], "radian": [30, 182, 184, 187, 189, 190, 199, 234, 239], "float": [30, 34, 38, 39, 41, 42, 46, 48, 72, 74, 82, 83, 84, 86, 88, 90, 91, 92, 93, 96, 100, 102, 108, 115, 119, 122, 124, 132, 165, 171, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 242, 249, 250, 262, 266, 267, 289, 290, 295, 296, 321, 323, 328, 329, 332, 336, 342, 343, 345, 347, 348, 349, 353, 356, 357, 359, 360, 365, 367, 368, 369, 370, 409, 410, 411, 414, 415, 423, 424, 425, 427, 431, 433, 434, 435, 436, 437, 438, 439], "operand": [30, 182, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 204, 205, 206, 215, 216, 218, 219, 226, 230, 231, 234, 235, 236, 239, 241, 431, 432, 433, 435, 438], "whose": [30, 83, 98, 99, 182, 185, 188, 191, 199, 200, 230, 234, 235, 239, 242, 248, 342, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 359, 360, 361, 363, 371, 376, 380, 423, 424, 425, 431, 432], "ref": [30, 182, 196, 213, 226, 228, 231, 238, 371, 383], "promot": [30, 34, 39, 102, 108, 111, 124, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 204, 205, 215, 216, 218, 219, 223, 226, 230, 231, 234, 235, 236, 239, 342, 343, 344, 349, 350, 353, 355, 356, 359, 364, 365, 371, 383, 431, 434], "But": [30, 38, 49], "needless": 30, "duplic": [30, 35, 36, 46, 48], "info": [30, 443], "subset": [30, 33, 42, 44], "extend": [30, 33, 35, 42], "renam": 30, "conform": [30, 83, 94, 182, 186, 200, 205, 224, 225, 239, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429], "org": [30, 182, 200, 305, 307, 308, 371, 375, 423, 425, 428, 429], "elementwise_funct": [30, 182, 200, 423, 425, 428, 429], "explan": [30, 38, 42, 46], "descript": [30, 38, 83, 94, 182, 186, 200, 224, 225, 239, 242, 263, 329, 332, 342, 345, 365, 371, 375, 376, 378, 380, 423, 425, 428, 429], "simplic": [30, 48, 60, 83, 94, 182, 186, 200, 224, 225, 239, 242, 263, 329, 332, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429], "instanc": [30, 31, 33, 34, 37, 39, 41, 42, 47, 48, 49, 62, 70, 72, 74, 75, 76, 77, 78, 79, 83, 94, 132, 141, 173, 182, 186, 200, 209, 224, 225, 227, 239, 242, 263, 275, 329, 332, 342, 344, 345, 362, 367, 368, 370, 371, 372, 375, 376, 378, 380, 381, 418, 421, 423, 425, 428, 429, 440, 441, 453, 454], "judgment": 30, "beyond": [30, 371, 380], "ab": [30, 33, 182, 230, 342, 365, 443], "variou": [30, 42, 60], "contstructor": 30, "linear": [30, 44, 47, 48, 49, 72, 73, 74, 75, 242, 262, 321, 325, 329, 337, 359, 443, 464, 465, 466, 467, 468, 469, 470, 471], "variabl": [30, 38, 39, 41, 42, 47, 48, 49, 61, 242, 247, 273, 274, 275, 276, 277, 278, 280, 297, 305, 308, 309, 310, 311, 312, 313, 314, 316, 319, 329, 340, 342, 359, 387, 388, 389, 390, 409, 410, 443, 453, 454, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "store": [30, 35, 37, 38, 44, 46, 47, 48, 242, 262, 305, 319, 342, 363, 371, 381, 476, 477], "intern": [30, 37, 38, 40, 41, 132, 305, 319, 391, 392, 401, 402, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 486, 487], "though": [30, 34, 47, 61], "forward": [30, 49, 60, 61, 476, 477, 480, 484], "_forward": [30, 44, 47, 48, 443], "former": 30, "trainabl": [30, 45, 47, 48, 305, 311, 453, 454, 476, 477, 486], "explicitli": [30, 34, 37, 38, 41, 44, 61, 342, 347, 464, 473, 475, 476, 477], "latter": [30, 31], "implicit": [30, 38, 44], "attribut": [30, 38, 39, 45, 46, 47, 48, 102, 119, 120], "docst": [30, 31], "after": [31, 38, 39, 43, 182, 236, 305, 308, 309, 310, 312, 313, 314, 321, 322, 325, 409, 410, 480, 481, 482, 483, 484, 485], "three": [31, 38, 43, 83, 94, 443], "func_nam": [31, 34], "subtract": [31, 37, 182], "multipli": [31, 37, 182, 242, 253, 431, 432], "divid": [31, 37, 182, 207, 242, 295, 371, 381], "cover": [31, 34, 36, 43], "variant": 31, "independ": [31, 32, 38, 44, 49, 342, 344, 359, 411, 412], "combinatorili": 31, "equal": [31, 38, 39, 83, 88, 90, 91, 102, 108, 182, 194, 196, 210, 211, 230, 242, 243, 245, 246, 342, 346, 353, 356, 371, 372, 374, 381, 386, 411, 415, 423, 424, 425, 427, 428, 429, 430, 431, 434, 437, 438, 439], "maximum": [31, 44, 47, 49, 132, 156, 160, 164, 176, 182, 242, 249, 250, 262, 305, 312, 371, 372, 391, 403, 418, 419, 431, 433, 435, 443], "variat": [31, 33], "grid": [31, 33, 60, 83, 94], "vari": [31, 33, 38, 46, 423, 424, 425, 427], "valu": [31, 33, 34, 38, 39, 40, 41, 42, 44, 46, 49, 61, 83, 84, 88, 90, 91, 92, 93, 102, 108, 114, 115, 116, 132, 144, 175, 176, 182, 183, 184, 186, 187, 189, 198, 202, 203, 206, 207, 208, 209, 213, 214, 224, 225, 226, 228, 229, 230, 232, 241, 242, 249, 250, 251, 256, 262, 263, 264, 269, 272, 276, 286, 287, 288, 289, 290, 291, 304, 305, 307, 308, 309, 312, 316, 320, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 353, 356, 357, 358, 359, 360, 361, 365, 371, 372, 374, 378, 379, 386, 387, 388, 389, 391, 395, 396, 397, 398, 399, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 484], "simplest": 31, "small": [31, 34, 44, 48, 61, 182, 226, 342, 353, 356, 409, 410, 478, 479], "dimens": [31, 44, 47, 72, 77, 83, 98, 99, 132, 163, 242, 257, 258, 259, 262, 268, 284, 303, 321, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 367, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 411, 417, 418, 419, 420, 421, 423, 424, 425, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475], "unus": [31, 41, 80, 81], "highlight": 31, "extra": [31, 36, 37, 44, 305, 309], "versatil": 31, "excess": [31, 35, 46], "combin": [31, 33, 34, 37, 38, 49, 321, 327, 342, 344, 431, 432], "__add__": [31, 37, 38, 42, 46], "__sub__": [31, 37, 38, 42, 46], "__mul__": [31, 37, 38, 42, 46], "__truediv__": [31, 37, 38], "respect": [31, 37, 38, 39, 42, 83, 94, 182, 183, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 208, 209, 213, 214, 219, 220, 222, 223, 226, 228, 231, 238, 305, 307, 308, 309, 310, 312, 313, 314, 342, 357, 387, 388, 389, 390], "meant": 31, "imaginari": 31, "std": [31, 411, 414, 431], "prod": [31, 39, 242, 258, 431], "var": [31, 44, 387, 388, 389, 431], "some_flag": 31, "bool": [31, 38, 39, 41, 49, 80, 81, 83, 90, 102, 108, 111, 114, 115, 116, 117, 121, 122, 123, 131, 132, 151, 152, 167, 176, 179, 182, 202, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 228, 242, 243, 245, 246, 253, 256, 260, 262, 268, 270, 275, 277, 278, 279, 280, 293, 303, 304, 305, 316, 342, 343, 351, 360, 365, 371, 381, 391, 392, 393, 397, 401, 402, 403, 411, 412, 418, 419, 420, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "another_flag": 31, "true": [31, 33, 34, 38, 39, 41, 44, 46, 47, 48, 49, 72, 73, 80, 81, 83, 92, 102, 108, 111, 132, 151, 182, 208, 209, 210, 211, 212, 213, 221, 222, 242, 243, 245, 246, 247, 248, 260, 262, 270, 271, 278, 293, 299, 301, 304, 305, 308, 310, 311, 312, 313, 314, 316, 329, 337, 342, 343, 351, 360, 365, 367, 368, 369, 370, 371, 381, 387, 388, 389, 390, 391, 392, 401, 402, 404, 411, 412, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 464, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "axi": [31, 34, 38, 39, 41, 42, 44, 46, 49, 60, 72, 77, 83, 92, 93, 132, 134, 137, 144, 157, 158, 159, 160, 161, 162, 163, 164, 176, 242, 253, 254, 263, 303, 321, 325, 342, 344, 346, 364, 365, 367, 369, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 411, 417, 418, 419, 420, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "54": [31, 182, 199, 431, 432], "jointli": 31, "x0": [31, 242, 245], "x1": [31, 42, 182, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 208, 209, 213, 214, 219, 220, 222, 223, 224, 225, 226, 228, 230, 231, 238, 242, 245, 329, 334, 342, 344, 350, 355, 359, 362, 364, 418, 422], "x2": [31, 42, 182, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 208, 209, 213, 214, 219, 220, 222, 223, 224, 225, 226, 228, 230, 231, 238, 329, 334, 342, 344, 350, 355, 359, 362, 364, 418, 422], "procedur": 31, "think": 31, "sens": [31, 38, 46], "5574077": 31, "1850398": 31, "5463025": 31, "8422884": 31, "91601413": 31, "9647598": 31, "3738229": 31, "1597457": 31, "0963247": 31, "9955841": 31, "3278579": 31, "multi": [31, 38, 43, 61, 329, 340, 342, 344, 431, 432, 443, 449, 464, 475], "seper": [31, 242, 262], "pars": [31, 61], "satisfi": [31, 342, 366], "ignor": [31, 61, 83, 94, 391, 402, 480, 484], "far": [31, 40, 45, 46, 391, 392, 402], "asid": [31, 60], "irrelev": [31, 39], "increasingli": 31, "complex": [31, 47, 48, 49, 61, 342, 347, 360], "shown": [31, 42, 44, 46, 61, 83, 94, 182, 186, 200, 224, 225, 239, 342, 345, 371, 375, 376, 378, 380, 423, 425, 428, 429], "rule": [31, 33, 34, 37, 38, 39, 102, 108, 111, 124, 182, 191, 196, 201, 226, 231, 342, 343, 344, 355, 359], "count": [31, 47, 132, 170, 342, 364, 371, 376, 423, 424, 425, 440, 441, 442], "14254655": 31, "1578213": 31, "380515": 31, "11": [31, 38, 182, 186, 242, 263, 371, 376, 378, 409, 410, 411, 413, 431, 432], "12": [31, 38, 182, 200, 242, 267, 342, 362, 371, 376, 378, 380, 409, 410, 411, 413, 431, 432], "shift": [31, 42, 182, 194, 196, 371, 380], "sequenc": [31, 39, 60, 132, 141, 142, 242, 246, 281, 321, 327, 371, 381, 383, 464, 473, 478, 479, 486, 487], "15": [31, 329, 332, 342, 362, 371, 378, 380, 411, 413, 418, 421, 431, 432], "bit": [31, 34, 37, 38, 46, 102, 118, 119, 120, 182, 193, 194, 196, 321, 323, 328, 431, 436, 438], "trivial": 31, "By": [31, 34, 38, 41, 48, 49, 242, 253, 254, 342, 364, 371, 378, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "demonstr": [31, 46], "non": [31, 38, 39, 44, 80, 81, 102, 108, 121, 182, 221, 222, 329, 332, 342, 345, 353, 360, 362, 364, 365, 418, 419, 420, 421, 431, 433, 434, 435, 436, 439, 440, 441, 442, 476, 477, 480, 484], "float32": [31, 39, 102, 106, 107, 182, 200, 227, 321, 324, 371, 375, 409, 410], "z": [31, 38, 44, 46, 132, 170, 182, 186, 209, 224, 225, 242, 245, 246, 263, 342, 344, 367, 368, 369, 431, 432], "dictat": [31, 37, 41, 42], "exlud": 31, "13": [31, 38, 182, 200, 329, 336, 371, 378, 409, 410, 411, 413, 431, 432], "unit": [32, 33, 61, 72, 73, 74, 75, 132], "test_array_api": [32, 33], "thoroughli": [32, 33], "On": [33, 45, 49], "map": [33, 34, 38, 42, 47, 60, 61, 132, 141, 391, 398, 399, 403, 404, 464, 475], "collect": [33, 60, 72, 80, 132, 242, 305, 321, 329, 367, 391, 404, 409, 411, 450, 464, 478, 480], "test_ivi": 33, "properti": [33, 34, 38, 46, 47, 48, 132, 144, 476, 477, 480, 481, 482, 483, 485], "pytest": 33, "fixtur": 33, "ones": [33, 44, 46, 47, 83, 88, 97, 242, 284, 321, 327, 443], "commit": 33, "consum": [33, 38, 42, 132], "300": 33, "hit": [33, 44], "permit": [33, 37, 42], "action": 33, "eleg": 33, "intellig": 33, "sampl": [33, 321, 322, 325, 329, 337, 411, 412, 414, 415, 431, 437, 439, 464, 472], "rang": [33, 47, 48, 49, 83, 84, 92, 93, 431, 436, 438, 443], "previou": [33, 42, 49, 61, 305, 308, 312], "cach": [33, 34, 132, 150, 242, 248], "select": [33, 44, 46, 49, 61], "unexplor": 33, "known": 33, "repeatedli": [33, 38, 391, 400], "upload": 33, "artifact": 33, "ci": [33, 61], "parametr": 33, "strategi": 33, "statement": [33, 61], "plai": [33, 49], "helper": [33, 47], "arbitrari": [33, 34, 38, 41, 42, 48, 61, 83, 94, 102, 109, 124, 132, 161, 162, 164], "verifi": [33, 39, 40, 46, 443, 449], "truth": [33, 182, 202, 208, 209, 213, 214, 228], "opt": [33, 41, 46], "defer": [33, 34, 37, 38, 39, 40, 41], "well": [33, 41, 48, 49, 60, 242, 270, 342, 359], "suffic": [33, 36], "catch": [33, 242, 256], "systemat": 33, "compar": [33, 47, 242, 243, 245, 246, 423, 424, 425, 427, 428, 429, 430], "safeguard": 33, "inabl": 33, "leav": [33, 34, 36, 38, 39, 41, 42, 47, 48, 371, 383, 391, 392, 393, 401, 402, 403], "fact": [33, 47], "num_gpu": [33, 40, 132], "four": [34, 39, 42, 47], "categor": [34, 40], "mutual": [34, 38], "exclus": [34, 38, 49, 83, 84, 242, 253, 277, 278, 280, 305, 311, 411, 413], "constitut": [34, 44, 431, 437, 439], "venn": 34, "diagram": 34, "lowest": [34, 61, 391, 403, 411, 413], "light": [34, 61], "wherea": [34, 37, 39, 40, 42, 49], "hand": [34, 61], "themselv": [34, 38, 39, 40, 48, 391, 392], "cross_entropi": [34, 38, 41, 367, 370], "pred": [34, 38, 41, 367, 368, 369, 370], "epsilon": [34, 38, 41, 48, 305, 307, 308, 312, 342, 353, 356, 367, 368, 369, 370, 409, 410, 478, 479, 480, 481, 482], "1e": [34, 38, 41, 48, 49, 242, 267, 305, 307, 308, 312, 342, 360, 367, 368, 369, 370, 409, 410, 443, 480, 481, 482, 483, 485], "clip": [34, 38, 41, 44, 47, 49, 182, 224, 225, 242, 249, 250, 371, 443], "log_pr": [34, 38, 41], "log": [34, 38, 41, 44, 47, 83, 93, 182, 217, 219, 342, 358, 443], "neg": [34, 38, 41, 72, 74, 83, 84, 88, 182, 210, 211, 226, 230, 231, 342, 360, 364, 365, 371, 376, 380, 440, 441, 442], "sum": [34, 38, 39, 41, 44, 132, 161, 162, 163, 164, 176, 182, 186, 219, 242, 254, 258, 287, 288, 342, 360, 363, 365, 431, 432, 437], "array_arg": 34, "typic": 34, "whatsoev": [34, 38], "commonli": [34, 431, 437, 439], "outsid": [34, 40, 44, 46, 49, 371, 372, 383], "cache_fn": [34, 242], "stable_divid": [34, 242], "denomin": [34, 61, 242, 261, 267, 290, 295, 296, 409, 410, 478, 479], "divis": [34, 182, 196, 201, 207, 231, 242, 261, 267, 290, 295, 296, 305, 307, 308, 312, 480, 481, 482], "leaf": [34, 38, 47, 391, 392, 401, 402], "piec": [34, 36, 37, 44], "deal": [34, 61], "batch": [34, 38, 47, 132, 174, 175, 242, 262, 321, 326, 329, 338, 342, 365, 387, 388, 389, 390, 409, 410, 478, 479], "concurr": [34, 38], "weight": [34, 38, 48, 49, 305, 307, 308, 310, 312, 313, 314, 329, 338, 339, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 480, 482, 483], "modif": 34, "_wrap_funct": [34, 36], "appear": [34, 39, 40, 41, 46, 371, 375], "non_wrapped_funct": [34, 39, 40, 41], "dure": [34, 38, 39, 40, 41, 61, 80, 81, 242, 302, 305, 307, 308, 312, 342, 350, 387, 388, 389, 390, 431, 437, 439, 476, 477, 480, 481, 482, 484], "static": [34, 61, 80, 81], "group": [34, 38, 321, 327], "briefli": [34, 47], "can_cast": [34, 39, 102], "cast": [34, 39, 102, 108, 111, 321, 323, 328, 371, 373, 431, 436, 438, 443], "set_default_dtyp": [34, 39, 102], "default_dtyp": [34, 39, 102], "get_all_arrays_on_dev": 34, "nested_map": [34, 391], "index_nest": [34, 391], "__dict__": [35, 44, 46], "ivy_original_dict": [35, 44], "string": [35, 39, 40, 44, 47, 102, 106, 107, 117, 121, 131, 132, 148, 149, 150, 151, 165, 171, 177, 178, 181, 242, 255], "unmodifi": [35, 39], "loop": [35, 61, 387, 388, 389, 390], "solv": [35, 45, 60, 342], "achiev": [36, 47, 49], "_wrap_or_unwrap_funct": 36, "_function_wrap": 36, "logic": [36, 37, 39, 40, 46, 182, 220, 221, 222, 440, 441, 442, 443], "independenli": 36, "topic": [36, 46], "tf": [37, 39, 40, 41, 42, 44, 49, 61, 443], "empti": [37, 39, 40, 83, 84, 431, 437, 438, 440, 441, 442], "overwritten": 37, "wrapper": [37, 38, 41, 42, 46], "self": [37, 44, 46, 47, 48, 49, 132, 443, 480, 484], "_data": [37, 46], "organiz": [37, 38], "inherit": [37, 38, 46], "arraywithelementwis": 37, "underpin": [37, 38, 44], "programmat": [37, 38], "backup": [37, 38], "accident": [37, 38], "readabl": [37, 38, 42, 46, 47], "absent": [37, 38], "perk": [37, 38], "auto": [37, 38, 47], "__setitem__": [37, 38, 46], "sin": [37, 44, 182, 242, 262, 443], "throw": [37, 46], "agnost": [37, 42, 44, 46, 49, 61, 443], "imposs": 37, "chain": [37, 38, 48, 49, 61, 387, 388, 389, 391, 404, 486, 487], "coupl": [37, 38, 46, 48], "anywai": 37, "secondli": [37, 39], "five": [38, 47], "all_tru": [38, 47], "evalu": [38, 182, 204, 205, 215, 216, 217, 218, 227, 233, 237, 391, 392, 401, 402, 440, 441, 442], "boolean": [38, 83, 90, 102, 108, 121, 131, 132, 167, 179, 182, 192, 193, 195, 197, 220, 221, 222, 223, 242, 243, 245, 246, 270, 271, 272, 276, 277, 278, 279, 280, 297, 304, 305, 311, 387, 388, 389, 391, 401, 431, 435], "to_iter": 38, "travers": [38, 44, 46, 391, 403], "containerbas": 38, "decis": [38, 44, 46], "multi_map": 38, "diff": [38, 47], "displai": [38, 47], "common_key_chain": 38, "recap": [38, 48], "arbitrarili": [38, 47], "multi_map_in_static_method": 38, "static_add": 38, "static_tan": 38, "static_rol": 38, "roll": [38, 42, 371], "containerwithelementwis": 38, "__repr__": 38, "control": [38, 39, 41, 46, 47, 60], "__getattr__": 38, "kei": [38, 47, 132, 144, 242, 251, 329, 340, 341, 387, 388, 389, 391, 394, 400, 404, 453, 454, 464, 475, 480, 484], "underli": [38, 182, 192, 195, 197, 223], "queri": [38, 39, 46, 132, 165, 175, 329, 340, 341, 464, 475], "__setattr__": 38, "__getitem__": 38, "__contains__": 38, "__getstate__": 38, "__setstate__": 38, "pickl": [38, 47], "unpickl": 38, "static_subtract": 38, "static_multipli": 38, "static_divid": 38, "expand": [38, 242, 262, 371, 375], "children": 38, "shallowest": 38, "deepest": 38, "67": 38, "integ": [38, 39, 46, 83, 84, 90, 102, 120, 123, 124, 182, 183, 192, 193, 194, 195, 196, 197, 198, 206, 207, 223, 230, 231, 232, 241, 342, 352, 364, 365, 371, 381, 411, 413, 416, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "17": [38, 72, 74], "18": [38, 431, 432], "22": [38, 431, 432], "25": [38, 342, 349, 367, 369, 409, 410, 431, 432], "execute_with_gradi": [38, 47, 48, 49, 61, 305, 443], "multi_head_attent": [38, 41, 329], "func": [38, 80, 81, 132, 176, 242, 248, 305, 309, 391, 404], "callabl": [38, 44, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 81, 132, 176, 242, 248, 256, 258, 387, 388, 389, 390, 391, 397, 401, 402, 403], "xs": [38, 132, 155, 159, 161, 162, 163, 242, 243, 246, 305, 309, 371, 373], "retain_grad": [38, 305, 309], "dy": [38, 305, 309, 321, 324], "dx": [38, 305, 309, 321, 324], "technic": [38, 41, 42, 61], "autograd": [38, 61], "grad": [38, 47, 48, 49, 443, 480, 484], "redund": 38, "scale": [38, 132, 174, 175, 305, 313, 329, 337, 340, 341, 409, 410, 464, 472, 475, 480, 483], "num_head": [38, 329, 340, 464, 475], "mask": [38, 329, 340, 341], "to_q_fn": [38, 329, 340], "to_kv_fn": [38, 329, 340], "to_out_fn": [38, 41, 329, 340], "to_q_v": [38, 329, 340], "to_kv_v": [38, 329, 340], "to_out_v": [38, 329, 340], "head": [38, 329, 340, 443, 464, 475], "measur": [38, 329, 340, 464, 475], "dot": [38, 329, 340, 341, 342, 362, 364, 431, 432, 464, 475], "product": [38, 182, 226, 242, 253, 329, 340, 341, 342, 344, 350, 355, 362, 364, 431, 432, 436, 464, 475], "implicitli": 38, "decor": 38, "handle_nest": [38, 62], "intuit": [38, 47, 48], "debug": [38, 47], "chronolog": 38, "had": [38, 41], "sequenti": [38, 48], "flow": [38, 60], "implic": 38, "slightli": [38, 44, 48, 431, 432], "eager": [38, 61], "int8": 39, "int16": [39, 431, 436, 438], "int32": [39, 431, 432, 436, 438], "int64": [39, 182, 196, 431, 436, 438], "uint8": [39, 321, 323, 328], "uint16": [39, 431, 436, 438], "uint32": [39, 431, 436, 438], "uint64": [39, 431, 436, 438], "bfloat16": 39, "float16": 39, "float64": [39, 102, 108], "deriv": [39, 40, 46, 48, 83, 87, 91, 97, 101, 305, 307, 308, 310, 312, 313, 314, 391, 393, 403, 476, 480, 484, 486], "constructor": [39, 40, 46, 242, 244, 486, 487], "all_dtyp": 39, "all_numeric_dtyp": 39, "all_int_dtyp": 39, "all_float_dtyp": 39, "fall": [39, 43, 443, 476, 477, 480, 484], "replic": 39, "valid": [39, 44, 102, 112, 329, 330, 331, 332, 333, 334, 335, 336, 371, 383, 440, 441, 442, 464, 465, 466, 467, 468, 469, 470, 471], "invalid": [39, 342, 364, 440, 441, 442], "thirdli": 39, "native_float32": 39, "importantli": [39, 46, 49, 60], "unsupport": 39, "longer": [39, 41], "varieti": [39, 40], "astyp": [39, 41, 102], "broadcast_to": [39, 102], "result_typ": [39, 102], "conveni": [39, 40, 42, 45, 47, 48], "arguabl": [39, 40], "compound": 39, "reduct": [39, 46, 242, 258, 287, 288, 440, 441, 442, 443], "overflow": [39, 182, 186, 431, 438], "_function_w_arrays_dtype_n_dev_handl": [39, 40], "non_dtype_wrapped_funct": [39, 40], "applic": [39, 40, 48, 329, 340, 341, 391, 397, 403], "arr": [39, 40, 409, 410], "scalar": [39, 44, 49, 61, 83, 91, 242, 284, 301, 304, 342, 365], "default_int_dtyp": [39, 102], "default_float_dtyp": [39, 102], "settabl": [39, 40], "set_default_int_dtyp": [39, 102], "set_default_float_dtyp": [39, 102], "arang": [39, 83, 92, 93, 321, 324, 328, 431, 432, 443], "dim": [39, 242, 284, 321, 322, 327, 342, 362, 464, 475], "bear": 39, "popul": [39, 40, 44, 411, 412, 431, 437, 439], "jnp": [39, 40, 41, 42, 49, 443], "jaxarrai": [39, 40, 41, 42], "mx": [39, 40, 41, 443], "nd": [39, 40, 41, 44, 49, 443], "One": [39, 44, 46, 47, 242, 258, 371, 379, 411, 413], "deleg": 39, "fill_valu": [39, 83, 90, 91, 182, 209], "shape_to_tupl": [39, 242], "item": [39, 44, 46, 47, 49, 102, 114, 132, 141, 142, 144, 151, 153, 155, 157, 159, 163, 242, 251, 269, 295, 296, 391, 396, 397, 398, 399, 403, 407, 408, 443, 476, 477], "as_n": [39, 102, 114, 115, 116, 117, 132, 151, 152], "cpu": [40, 61, 83, 92, 93, 132, 151, 152, 168, 171, 177, 178, 181, 242, 263, 264, 284, 287, 288, 411, 412, 413, 415, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "gpu": [40, 46, 61, 132, 151, 167, 169, 411, 413], "idx": [40, 46], "tpu": [40, 132, 179], "get_all_ivy_arrays_on_dev": [40, 132], "aliv": [40, 132, 166, 170, 172, 242, 265, 283, 285], "total_mem_on_dev": [40, 132], "amount": [40, 132, 178, 367, 368, 369, 370], "memori": [40, 41, 59, 61, 132, 150, 171, 176, 178, 181, 329, 339, 431, 432, 443], "dev_util": [40, 132], "num_cpu_cor": [40, 132], "default_devic": [40, 44, 132], "random_uniform": [40, 48, 411, 443], "dual": 40, "thrown": [40, 61, 242, 275], "unless": [40, 41, 61, 182, 226, 242, 284], "non_dev_wrapped_funct": 40, "omit": [40, 41, 42, 423, 424, 425, 427], "rare": [40, 61], "set_default_devic": [40, 132], "overwrit": [41, 44, 132, 176], "program": 41, "old": 41, "strictli": 41, "inplace_upd": [41, 242, 453, 454], "ration": 41, "speak": 41, "subtli": 41, "ensure_in_backend": [41, 242, 275], "val": [41, 46, 242, 273, 274, 275, 289, 290], "x_nativ": 41, "val_n": 41, "args_to_n": [41, 46], "is_ivy_arrai": [41, 46, 242], "is_vari": [41, 305], "assign": [41, 46], "elif": 41, "irrespect": [41, 46, 102, 108], "inclus": [41, 83, 84, 411, 413], "unspecifi": [41, 182, 230, 231, 342, 347, 371, 383], "predominantli": [41, 60], "_function_w_arrays_n_out_handl": 41, "math": [41, 49, 443], "presenc": 41, "altern": [41, 47], "_wrap_fn": 41, "maxim": [41, 44], "inner": [41, 46, 342, 347, 350, 387, 388, 389, 390, 431, 432], "third": [41, 61, 342, 360, 423, 424], "minim": [41, 44], "addition": [41, 42], "handle_out_argu": [41, 62], "leverag": 41, "reshap": [41, 44, 46, 49, 321, 324, 328, 371, 443], "asarrai": [41, 83, 329, 330, 423, 425], "equival": [41, 47, 49, 83, 84, 182, 196, 221, 222, 231, 342, 353, 356, 359, 365], "input_arrai": 41, "adress": 42, "revisit": [42, 49], "dedic": [42, 46, 48, 305, 319, 453, 454], "posit": [42, 47, 60, 82, 83, 88, 102, 119, 132, 156, 160, 164, 182, 183, 210, 211, 226, 231, 242, 262, 342, 343, 371, 375, 380, 411, 416, 418, 421, 440, 441, 442, 453, 454], "__div__": 42, "dicat": 42, "detect": [42, 47, 48, 391, 392, 402], "futher": 42, "absenc": 42, "pep": 42, "484": 42, "annot": 42, "brittl": 42, "intend": [42, 431, 438], "freeli": 42, "inde": [42, 61], "flexibl": 42, "original_typ": 42, "cumbersom": 42, "gain": [43, 48, 455], "sound": 43, "higher": [43, 44, 49, 61, 305, 308, 310, 312, 313, 314], "overview": [43, 60], "handler": [43, 45, 49, 443], "fledg": [44, 45], "label": [44, 45, 49, 367, 368, 369, 370], "cuda": [44, 47, 61, 83, 92, 93, 132, 141, 148, 242, 263, 264, 284, 287, 288, 411, 412, 413, 415, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487], "syntact": [44, 49], "align": [44, 46, 443, 449], "x_min": [44, 49, 371, 372], "x_max": [44, 49, 371, 372], "clip_by_valu": [44, 49], "clamp": [44, 49], "mayb": [44, 46, 431, 432], "behavior": [44, 61, 182, 230, 231, 423, 424, 425, 427], "fit": [44, 321, 327, 371, 378], "logspac": [44, 83], "construct": [44, 45, 48, 49, 371, 385, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "stop": [44, 61, 83, 84, 92, 93, 132, 147, 176, 305, 308, 310, 312, 313, 314, 316, 387, 388, 389, 390, 480, 481, 482, 483, 484, 485], "num": [44, 83, 92, 93, 321, 327], "power_seq": 44, "linspac": [44, 83, 84, 443], "okai": 44, "bound": 44, "set_framework": [44, 46, 47, 49, 443], "resid": [44, 48], "interv": [44, 49, 83, 84, 92, 93, 342, 364, 371, 372, 383, 411, 413, 415, 440, 441, 442], "edg": [44, 49, 371, 372, 374, 386, 443], "wise": [44, 49, 72, 73, 74, 75, 76, 77, 78, 79, 182, 183, 184, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 201, 202, 203, 207, 208, 209, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 238, 242, 261, 371, 372, 431, 432], "larger": [44, 49, 102, 119, 371, 372, 380, 431, 437, 439], "param": [44, 49, 242, 263, 264], "minimum": [44, 49, 132, 182, 183, 242, 266, 267, 289, 290, 295, 296, 371, 372, 418, 420, 431, 433, 435, 443], "ml_framework": [44, 49, 83, 84], "current_framework": [44, 49], "furthermor": 44, "concaten": [44, 47, 132, 161, 242, 262, 371, 373, 443], "framework_handl": 44, "face": 44, "verbos": [44, 443, 490], "cprint": [44, 489], "framework_stack": 44, "stack": [44, 83, 98, 99, 321, 327, 342, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 360, 361, 363, 371, 391, 392, 401, 402, 443, 464, 473], "_determine_framework_from_arg": 44, "valueerror": [44, 371, 382], "get_framework": 44, "neither": [44, 182, 186, 226], "illustr": [44, 60], "un": [44, 102, 121], "v": [44, 47, 48, 49, 329, 341, 443, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 484, 486, 487], "lstm_updat": [44, 329], "nn": [44, 49, 83, 94, 443], "init_h": [44, 329, 339], "init_c": [44, 329, 339], "kernel": [44, 61, 329, 339], "recurrent_kernel": [44, 329, 339], "bia": [44, 48, 329, 338, 339, 464, 465, 466, 467, 468, 469, 470, 471, 474], "recurrent_bia": [44, 329, 339], "x_shape": 44, "batch_shap": [44, 46, 49, 242, 284, 321, 322, 323, 324, 326, 327, 328, 329, 339, 340, 341, 342, 366, 411, 412, 464, 473], "timestep": [44, 329, 339, 464, 473], "input_channel": [44, 48, 464, 465, 466, 467, 468, 469, 470, 473, 474], "x_flat": 44, "wi": 44, "wi_x": 44, "wii_x": 44, "wif_x": 44, "wig_x": 44, "wio_x": 44, "recurr": [44, 329, 339], "wh": 44, "lstm": [44, 329, 339, 464], "ht": 44, "ct": 44, "hts_list": 44, "unrol": [44, 47, 329, 339], "wii_xt": 44, "wif_xt": 44, "wig_xt": 44, "wio_xt": 44, "zip": 44, "unstack": [44, 47, 242, 443], "htm1": 44, "ctm1": 44, "wh_htm1": 44, "whi_htm1": 44, "whf_htm1": 44, "whg_htm1": 44, "who_htm1": 44, "num_or_size_split": [44, 371, 381], "sigmoid": [44, 47, 48, 72, 443], "ft": 44, "gt": 44, "tanh": [44, 72, 182, 443], "ot": 44, "expand_dim": [44, 47, 371, 443], "offici": 44, "reliabl": 44, "sacrific": 44, "hear": 44, "virtu": 44, "pure_ivi": 44, "reduce_mean": [44, 47, 48, 49, 443], "reduce_sum": [44, 443], "reduce_var": 44, "compile_graph": [44, 49], "pure_torch": 44, "cat": [44, 49], "backbon": [44, 47], "_layer": 44, "super": [44, 47, 48, 49], "clean": [44, 45, 47], "w": [44, 47, 48, 242, 246, 305, 307, 308, 310, 312, 313, 314, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336], "random_unifrom": 44, "unclean": 44, "wx": 44, "temp": 44, "trace": [44, 61, 242, 277, 278, 280, 342], "torchscript": 44, "fn": [44, 46, 62, 63, 64, 65, 66, 67, 68, 69, 70, 132, 141, 142, 242, 302, 391, 392, 397, 398, 399, 401, 402, 403, 446, 448], "example_input": [44, 80, 81], "static_argnum": [44, 80, 81], "static_argnam": [44, 80, 81], "jit": [44, 61], "low": [44, 411, 413, 415], "explor": [45, 49, 60], "frontend": 45, "treat": [45, 49, 80, 81], "abil": [45, 61], "primit": [45, 61], "experi": [45, 47, 61], "describ": [45, 49, 431, 432, 436, 437, 438], "hierarch": [45, 47, 48], "built": [45, 83, 84, 132, 464, 475, 476, 477], "straight": 46, "arraywithdevic": 46, "arraywithgener": 46, "arraywithgradi": 46, "arraywithimag": 46, "arraywithlinalg": 46, "arraywithlog": 46, "arraywithmath": 46, "arraywithmeta": 46, "arraywithrandom": 46, "arraywithreduct": 46, "assert": [46, 47, 242, 247], "is_native_arrai": [46, 242], "_shape": 46, "_size": 46, "functool": 46, "reduc": [46, 132, 176, 242, 258, 342, 357, 418, 419, 420, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "mul": 46, "len": [46, 49, 83, 94], "_dtype": 46, "_devic": 46, "_dev_str": 46, "as_ivy_dev": [46, 132], "_pre_repr": 46, "_post_repr": 46, "ndim": [46, 342, 357, 360], "size": [46, 47, 83, 92, 93, 132, 174, 175, 176, 242, 287, 321, 326, 342, 346, 351, 355, 357, 360, 364, 371, 375, 380, 381, 382, 411, 412, 414, 415, 418, 419, 421, 440, 441, 442, 464, 465, 466], "matrix_transpos": [46, 342, 362], "mt": 46, "answer": [46, 61], "perhap": [46, 47, 48, 61], "consol": 46, "typeerror": 46, "immut": 46, "pure": [46, 49, 61], "behav": 46, "claim": 46, "truli": 46, "_native_wrapp": 46, "attributeerror": 46, "scatter_nd": [46, 242, 443], "genuin": 46, "some_method": 46, "similarli": [46, 83, 94], "rewritten": 46, "__pow__": 46, "strang": 46, "power": [46, 47, 48, 182, 196, 204, 230, 242, 266, 289, 296, 342, 352, 455], "enforc": 46, "notic": 46, "inv": [46, 342, 443], "invers": [46, 60, 182, 184, 185, 187, 188, 189, 190, 191, 342, 349, 356], "_wrap_method": 46, "func_wrapp": [46, 62, 63, 64, 65, 66, 67, 68, 69, 70], "hasattr": 46, "__name__": 46, "non_wrapped_method": 46, "_method_wrap": 46, "native_arg": 46, "native_kwarg": 46, "to_ivi": 46, "inner_fn": 46, "whist": 46, "down": 46, "unwrap": 46, "transit": 46, "needlessli": 46, "randn": 46, "_unwrap_method": 46, "method_wrap": 46, "whenev": [46, 47], "parent": 46, "compartment": 46, "public": [46, 242, 251], "abc": [46, 132, 141, 147, 476, 477, 480, 484], "newshap": [46, 371, 379], "new_shap": 46, "transpos": [46, 49, 132, 163, 329, 331, 333, 335, 342, 354, 356, 431, 432, 443, 464, 466, 468, 470], "flip": [46, 47, 49, 182, 193, 371, 443], "tidi": 46, "20": [46, 182, 204, 342, 362, 411, 413, 418, 421, 431, 432], "shorter": 46, "crystal": 46, "41": [46, 342, 343, 431, 438], "builtin": [46, 48], "enough": [46, 47, 48], "ton": 47, "ado": [47, 48], "dictionari": [47, 61], "incred": [47, 61], "hash": 47, "soup": 47, "walk": [47, 48], "dct": 47, "cnt": 47, "combo": [47, 443, 449], "hold": [47, 242, 287, 288], "1000": 47, "uda": 47, "3333": 47, "6667": 47, "178": 47, "lr": [47, 48, 305, 308, 310, 312, 313, 314, 480, 481, 482, 483, 484, 485], "new_weight": 47, "0600": 47, "3100": 47, "2400": 47, "6900": 47, "delimit": 47, "autocomplet": 47, "tab": [47, 443], "midwai": 47, "agent": 47, "total_spe": 47, "total_height": 47, "total_width": 47, "ag": 47, "tot": 47, "total_": 47, "total_h": 47, "disk": [47, 321, 323], "hdf5": [47, 476, 477], "to_disk_as_hdf5": 47, "from_disk_as_hdf5": 47, "same_arrai": 47, "to_disk_as_pickl": 47, "from_disk_as_pickl": 47, "config": [47, 391, 404], "batch_siz": [47, 321, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 411, 412], "16": [47, 182, 239, 342, 362, 411, 413, 431, 432], "dir": 47, "dataset": [47, 59, 443], "dropout": [47, 329, 464, 475], "adam": [47, 48, 49, 305, 307, 308, 312, 443, 480, 482], "json": 47, "to_disk_as_json": 47, "from_disk_as_json": 47, "cnt0": 47, "cnt1": 47, "deep_copi": 47, "diff_0": 47, "diff_1": 47, "config0": 47, "config1": 47, "Not": [47, 48, 61, 82], "hierarchi": 47, "screen": 47, "decod": 47, "l0": 47, "l1": [47, 342, 365], "depth": [47, 48, 49, 60, 132, 156, 160, 164, 242, 269, 284, 391, 403, 476, 477], "clearer": 47, "truncat": 47, "__": 47, "flatten_key_chain": [47, 476, 477], "above_height": 47, "decoder__l0": 47, "decoder__l1": 47, "encoder__l0": 47, "encoder__l1": 47, "height": [47, 321, 327], "below_depth": 47, "l0__b": 47, "l0__w": 47, "l1__b": 47, "l1__w": 47, "with_print_limit": 47, "printabl": 47, "with_key_length_limit": 47, "length": [47, 83, 84, 94, 342, 360, 361, 371, 379, 431, 432], "with_print_ind": 47, "indent": 47, "obviou": 47, "foresight": 47, "untidili": 47, "update_ag": 47, "normalize_img": 47, "img": 47, "img_max": 47, "reduce_max": [47, 443], "img_min": 47, "reduce_min": [47, 443], "img_rang": 47, "agent_posit": 47, "agent_veloc": 47, "agent_cam_front_rgb": 47, "agent_cam_front_depth": 47, "agent_cam_rear_rgb": 47, "agent_cam_rear_depth": 47, "agent_cam_lidar": 47, "normal": [47, 371, 383, 409, 410, 411, 414, 478, 479], "cleaner": 47, "camera": 47, "front_rgb": 47, "front_depth": 47, "rear_rgb": 47, "rear_depth": 47, "lidar": 47, "rgb": 47, "rear": 47, "veloc": 47, "cam": 47, "cam_max": 47, "cam_min": 47, "cam_rang": 47, "Of": 47, "ideal": 47, "perman": 47, "afterward": 47, "thread": 47, "incorpor": 47, "multiprocess": [47, 61, 132, 141, 242], "queue": [47, 132, 141, 142, 242, 286, 291], "pretti": 47, "straightforward": 47, "dataload": [47, 59, 443], "_cnt": 47, "img_": 47, "_dataset_s": 47, "_batch_siz": 47, "_count": [47, 48], "__next__": 47, "filenam": 47, "img_fnam": 47, "list_stack": 47, "fname": 47, "loaded_img": 47, "cv2": 47, "imread": 47, "from_numpi": 47, "loader": [47, 61], "32": [47, 72, 74, 321, 328, 329, 332, 431, 432], "batch_slic": 47, "model": [47, 48, 443], "mymodel": [47, 443], "linear0": [47, 48, 443], "64": [47, 48, 329, 336, 431, 432, 443, 464, 475], "linear1": [47, 48, 443], "relu": [47, 48, 72, 73, 74, 443], "x_in": [47, 48, 49, 443], "001": [47, 48, 409, 410], "loss_fn": [47, 48, 49, 443], "to_numpi": [47, 242, 443], "0145": 47, "grad_fn": 47, "addbackward0": 47, "_create_vari": 48, "output_channel": [48, 464, 465, 466, 467, 468, 469, 470, 473, 474], "with_bia": [48, 464, 474], "_input_channel": 48, "_output_channel": 48, "_w_shape": 48, "_b_shape": 48, "_with_bia": 48, "8979": 48, "3198": 48, "0196": 48, "3126": 48, "3717": 48, "9687": 48, "6958": 48, "5122": 48, "3902": 48, "8800": 48, "5613": 48, "1982": 48, "nightmar": 48, "overcom": 48, "fc": 48, "9563": 48, "impact": 48, "v0": 48, "v1": 48, "6440": 48, "key0": 48, "key1": 48, "1823": 48, "8075": 48, "linear3": 48, "v2": 48, "2346": 48, "counter": 48, "hidden": [48, 329, 339, 464, 473], "fed": [48, 132, 176], "1300": 48, "decoupl": 48, "scheme": 48, "weight_initi": [48, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474], "glorotuniform": [48, 455, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474], "bias_initi": [48, 464, 465, 466, 467, 468, 469, 470, 471, 474], "_w_init": 48, "_b_init": 48, "create_vari": [48, 455], "var_shap": [48, 455], "fan_out": [48, 455], "fan_in": [48, 455], "uniform": [48, 411, 412, 413, 415, 455, 457, 458, 461, 462], "fan_mod": [48, 455], "fan_sum": 48, "slight": 48, "misnom": 48, "belong": 48, "saw": 48, "vanilla": [48, 387, 389], "descent": [48, 305, 310, 480, 485], "lar": [48, 305, 312, 313, 480], "lamb": [48, 305, 312, 480], "beta1": [48, 305, 307, 308, 312, 480, 481, 482], "beta2": [48, 305, 307, 308, 312, 480, 481, 482], "999": [48, 305, 307, 308, 312, 480, 481, 482], "07": [48, 305, 307, 308, 312, 367, 368, 369, 370, 480, 481, 482], "stop_gradi": [48, 132, 176, 305, 308, 310, 312, 313, 314, 387, 388, 389, 390, 443, 480, 481, 482, 483, 484, 485], "compile_on_next_step": [48, 476, 477, 480, 481, 482, 483, 484, 485], "_beta1": 48, "_beta2": 48, "_epsilon": 48, "_mw": 48, "_vw": 48, "_first_pass": 48, "_should_compil": 48, "_step": [48, 480, 484], "new_v": 48, "adam_upd": [48, 305], "_lr": 48, "isinst": [48, 49, 242, 299], "_inplac": 48, "_stop_gradi": 48, "set_stat": [48, 480, 481, 482, 483, 484, 485], "mw": [48, 305, 307, 308], "vw": [48, 305, 307, 308], "revers": [49, 61, 242, 256, 371, 376], "pre": [49, 61, 132], "captur": 49, "one_hot": [49, 242, 443], "sparse_funct": 49, "num_class": [49, 411, 412], "ey": [49, 83, 329, 332, 336], "cumprod": [49, 242], "ones_lik": [49, 83, 443], "num_dim": 49, "new_axi": 49, "constitu": 49, "_linear": 49, "to_backend": 49, "jax_graph": 49, "learnabl": [49, 409, 410, 478, 479], "to_ivy_modul": [49, 453], "thinli": 49, "whilst": 49, "preserv": [49, 61, 305, 316, 371, 376], "to_haiku_modul": 49, "hk": 49, "loss_fn_t": 49, "transform": [49, 60, 329, 337, 338], "without_apply_rng": 49, "rng": 49, "prngkei": 49, "42": [49, 411, 416, 431, 432], "init": 49, "update_rul": 49, "01": 49, "tree_multimap": 49, "mechan": [59, 61, 443], "vision": [59, 443], "robot": [59, 443], "focus": 60, "field": [60, 342, 347, 357, 360, 423, 424, 425], "perfect": 60, "showcas": 60, "3d": [60, 464, 469, 470], "differenti": 60, "demo": [60, 443], "orient": 60, "pose": 60, "represent": [60, 82, 102, 106, 107, 113, 119, 120, 132, 148, 149, 182, 183, 186, 192, 195, 197, 223, 226, 242, 294, 299], "largest": [60, 102, 119, 120, 342, 360], "euler": [60, 82], "quaternion": 60, "rotat": 60, "matric": [60, 83, 94, 98, 99, 329, 338, 342, 343, 345, 346, 347, 348, 349, 352, 353, 354, 356, 357, 359, 360, 361, 363], "vector": [60, 83, 94, 242, 250, 329, 338, 342, 344, 347, 350, 355, 360, 361, 364, 365, 366, 464, 474], "angl": [60, 182, 190, 200, 235], "ivy_mech": 60, "target_facing_rotation_matrix": 60, "polar_to_cartesian_coord": 60, "ordin": [60, 342, 359], "warp": [60, 321, 322], "optic": 60, "voxel": 60, "cloud": 60, "ivy_vis": 60, "coords_to_voxel_grid": 60, "render_pixel_coord": 60, "neural": [60, 329, 443, 450, 464], "radianc": 60, "nerf": 60, "trajectori": 60, "motion": 60, "plan": [60, 443], "mobil": 60, "ivy_robot": 60, "sample_spline_path": 60, "rigidmobil": 60, "sample_bodi": 60, "drone": 60, "sample_link": 60, "openai": 60, "swimmer": 60, "cumul": [60, 242, 253, 254], "reward": 60, "supervis": 60, "reinforc": 60, "door": [60, 61], "intersect": 60, "cartpol": 60, "mountain_car": 60, "pendulum": 60, "reacher": 60, "polici": 60, "condit": [60, 80, 81, 391, 401, 402, 418, 422], "learnt": 60, "ture": 60, "ntm": 60, "egospher": 60, "spatial": 60, "esm": 60, "ivy_memori": 60, "egocentr": 60, "room": 60, "inspir": 60, "doubt": 61, "grate": 61, "put": 61, "probe": 61, "q": [61, 329, 341, 342, 347, 357], "undergo": 61, "remark": 61, "surpris": 61, "backward": [61, 182, 231, 342, 364, 440, 441, 442], "lock": 61, "contunu": 61, "minor": 61, "xla": 61, "buffer": 61, "certain": [61, 83, 84, 92, 93], "kind": [61, 102, 119, 120, 182, 230, 431, 436, 438], "gold": 61, "dex": 61, "phase": 61, "lax": 61, "scan": 61, "tricki": 61, "predictor": 61, "tight": 61, "driver": 61, "schedul": 61, "algorithm": [61, 329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "dispatch": 61, "Will": 61, "ast": 61, "dynamic": 61, "cond": 61, "jacobian": 61, "checkpoint": 61, "autodiff": 61, "shine": 61, "merci": 61, "superset": 61, "cluster": 61, "compet": 61, "paradigm": 61, "parallelis": [61, 132, 141, 142], "spmd": 61, "mixtur": 61, "expert": 61, "sophist": 61, "depart": 61, "routin": 61, "hundr": 61, "thousand": 61, "deepli": [61, 391, 393], "moment": [61, 305, 307, 308, 312, 480, 481, 482], "broadli": 61, "heavili": 61, "supplementari": 61, "drop": 61, "Is": 61, "reusabl": 61, "fanci": 61, "fusion": 61, "lose": 61, "vmap": 61, "pmap": 61, "overhead": 61, "ineffici": 61, "eventu": 61, "supplement": 61, "backdoor": 61, "callback": 61, "load": 61, "record": 61, "metric": 61, "visual": 61, "somewhat": 61, "outsourc": 61, "infer_devic": 62, "infer_dtyp": 62, "inputs_to_ivy_arrai": 62, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 62, "to_native_arrays_and_back": 62, "gelu": [72, 450], "gaussian": [72, 73], "leaki": [72, 73, 74], "leaky_relu": [72, 443], "alpha": [72, 74], "rectifi": [72, 74, 75], "slope": [72, 74], "39": [72, 74, 431, 432], "85": [72, 74], "48": [72, 74, 431, 432], "88": [72, 74, 431, 432], "269": [72, 76], "731": [72, 76], "881": [72, 76], "214": [72, 76], "978": [72, 76], "891": [72, 76], "softmax": [72, 329, 340, 341, 443], "422": [72, 77], "155": [72, 77], "0768": [72, 77], "231": [72, 77], "693": [72, 77, 367, 370], "49": [72, 77, 431, 432], "147": [72, 77], "363": [72, 77], "softplu": [72, 443], "3461": [72, 78], "6491": [72, 78], "5349962": [72, 78], "4203641": [72, 78], "hyperbol": [72, 79, 182, 185, 188, 191, 200, 235, 240], "55": [72, 79, 431, 432], "501": [72, 79], "762": [72, 79], "964": [72, 79], "faster": [80, 81, 431, 432], "invoc": [80, 81], "718281828459045": 82, "inf": [82, 242, 270, 304, 342, 365], "newaxi": 82, "alia": 82, "pi": 82, "141592653589793": 82, "mathemat": [82, 182, 186, 190, 205, 226, 342, 365], "evenli": [83, 84, 92, 93, 371, 381], "half": [83, 84, 411, 413, 415], "word": [83, 84, 411, 415, 453, 454], "chosen": [83, 84, 182, 190, 418, 422], "distanc": [83, 84], "adjac": [83, 84], "dimension": [83, 84, 88, 94, 342, 344, 345, 350, 353, 355, 356, 364, 365, 371, 381, 418, 419, 420, 421, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "ceil": [83, 84, 182, 443], "datatyp": [83, 85, 95, 102, 112, 122, 123], "interpret": [83, 85, 95], "fill": [83, 86, 90, 91, 96, 97, 100, 101, 411, 413], "uniniti": [83, 86, 87], "empty_lik": 83, "n_row": [83, 88], "n_col": [83, 88], "diagon": [83, 88, 98, 99, 342, 363, 431, 432], "elsewher": [83, 88, 418, 422], "row": [83, 88, 342, 359, 360, 411, 412, 418, 421], "column": [83, 88, 342, 347, 357, 359, 360, 431, 432], "upper": [83, 88, 99, 342, 343, 357, 411, 415], "from_dlpack": 83, "__dlpack__": [83, 89], "view": [83, 89, 329, 332, 336], "interchang": [83, 89, 371, 384], "full_lik": 83, "endpoint": [83, 92], "entri": [83, 92, 93, 371, 381, 391, 404], "meshgrid": 83, "xy": [83, 94], "coordin": [83, 94, 182, 190], "cartesian": [83, 94], "matrix": [83, 94, 98, 99, 242, 243, 249, 329, 338, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 366, 464, 474], "ij": [83, 94, 431, 432], "rank": [83, 94, 242, 303, 342, 344, 353, 357, 359, 363, 364, 365, 371, 374, 375, 383, 386, 418, 421, 440, 441, 442], "ni": [83, 94], "xi": [83, 94], "n1": [83, 94], "n2": [83, 94], "n3": [83, 94], "accordingli": [83, 94, 182, 205, 342, 365, 418, 420, 423, 424, 425, 427, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "xv": [83, 94], "yv": [83, 94], "tril": 83, "triangular": [83, 98, 99, 342, 343, 357], "innermost": [83, 98, 99, 342, 343, 345, 346, 347, 348, 349, 353, 354, 356, 357, 359, 360, 361, 363], "mxn": [83, 98, 99, 342, 346, 353, 354, 356, 357, 361, 363], "triu": 83, "zeros_lik": [83, 371, 372, 443], "defaultdtyp": [102, 103], "defaultfloatdtyp": [102, 104], "float_dtyp": [102, 115, 126], "defaultintdtyp": [102, 105], "as_ivy_dtyp": 102, "dtype_in": [102, 106, 107, 113, 118, 121, 122, 123, 131], "as_native_dtyp": 102, "match": [102, 108, 182, 231, 242, 281], "broadcast_arrai": 102, "incompat": [102, 110], "from_": [102, 111], "occur": [102, 111, 418, 419, 420, 423, 424, 425, 427], "closest_valid_dtyp": 102, "closest": [102, 112, 182, 198, 206, 207, 241], "convert_dtyp": 102, "summari": [102, 114, 115, 116, 125, 126, 127, 132, 145, 146, 242, 251, 255, 269, 305, 315, 320], "floatdtyp": [102, 115], "int_dtyp": [102, 116, 127], "intdtyp": [102, 116], "dtype_bit": 102, "finfo": 102, "inform": [102, 119, 120, 305, 316], "followng": [102, 119], "occupi": [102, 119, 120, 242, 287, 288], "ep": [102, 119, 342, 353, 356], "smallest": [102, 119, 120, 182, 198], "max": [102, 119, 120, 182, 224, 242, 249, 250, 258, 287, 288, 342, 353, 356, 431, 480, 482], "min": [102, 119, 120, 182, 225, 242, 258, 287, 288, 295, 342, 357, 360, 361, 365, 431], "smallest_norm": [102, 119], "precis": [102, 119, 182, 226, 236], "iinfo": 102, "encapsul": [102, 120], "invalid_dtyp": 102, "is_float_dtyp": 102, "is_int_dtyp": [102, 242, 301], "arrays_and_dtyp": [102, 124], "unset_default_dtyp": 102, "unset_default_float_dtyp": 102, "unset_default_int_dtyp": 102, "valid_dtyp": 102, "noinspect": [103, 104, 105, 133, 306], "pyshadowingnam": [103, 104, 105, 133, 306], "defaultdevic": [132, 133], "__enter__": 132, "_dev": 132, "initialis": 132, "devcloneditem": 132, "multidevitem": [132, 134, 137], "devclonedit": 132, "multidevit": [132, 135, 138, 141, 142, 146], "devclonednest": 132, "max_depth": [132, 136, 139, 146, 156, 160, 164, 242, 269, 391, 403], "multidevnest": [132, 136, 139], "devdistitem": 132, "devdistit": 132, "devdistnest": 132, "devmanag": [132, 140], "dev_mapp": 132, "da_dim_s": 132, "safety_factor": 132, "min_dev_dim_s": 132, "max_dev_dim_step_ratio": 132, "min_unit_dev_tune_step": 132, "min_sf_tune_step": 132, "starting_split_factor": 132, "max_split_factor_step_s": 132, "05": [132, 409, 410], "tune_dev_alloc": 132, "tune_dev_split": 132, "mapper": [132, 141, 142], "receivess": 132, "ratio": [132, 305, 312, 321, 327, 480, 482], "safe": [132, 141], "oom": 132, "tune": 132, "da_tune_step": 132, "dim_siz": 132, "ds_tune_step": 132, "to_clon": 132, "to_distribut": 132, "multidevic": [132, 141], "parallel": [132, 141, 142], "mutlidevic": [132, 141], "repeated_config_check": 132, "tune_step": 132, "devmapp": [132, 142], "ret_fn": [132, 141, 142], "queue_class": [132, 141, 142], "worker_class": [132, 141, 142], "timeout": [132, 141, 142, 242, 286, 291], "worker": [132, 141, 142], "used_dev": [132, 141], "split_factor": [132, 141], "sf": [132, 141], "devmappermultiproc": 132, "multidev": [132, 143, 144, 145, 164], "at_dev": [132, 145, 146], "profil": 132, "save_dir": [132, 147], "as_native_dev": 132, "clear_mem_on_dev": 132, "to_dev": [132, 151], "dev_clon": 132, "deviceic": [132, 153], "dev_clone_arrai": 132, "dev_clone_it": 132, "dev_clone_nest": 132, "dev_dist": 132, "dev_dist_arrai": 132, "dev_dist_it": 132, "dev_dist_nest": 132, "dev_unifi": 132, "concat": [132, 161, 162, 163, 164, 176, 242, 262, 371, 443], "concatten": [132, 161, 162, 163, 164, 176], "dev_unify_arrai": 132, "dev_unify_it": 132, "dev_unify_nest": 132, "spread": [132, 164], "gpu_is_avail": 132, "num_ivy_arrays_on_dev": 132, "percent_used_mem_on_dev": 132, "process_specif": [132, 171, 181], "percentag": [132, 171], "ram": [132, 171, 178, 181], "alon": [132, 171, 181], "print_all_ivy_arrays_on_dev": 132, "set_split_factor": 132, "chunk": [132, 174, 175, 176], "split_func_cal": 132, "max_chunk_s": [132, 176], "chunk_siz": [132, 176], "input_ax": [132, 176], "output_ax": [132, 176], "feed": [132, 176], "fist": [132, 176], "gb": [132, 178, 181], "tpu_is_avail": 132, "unset_default_devic": 132, "used_mem_on_dev": 132, "magnitud": [182, 183, 186, 226, 342, 360, 361], "aco": [182, 443], "princip": [182, 184, 187, 189], "cosin": [182, 184, 185, 199, 200], "greater": [182, 184, 187, 190, 194, 196, 206, 207, 230, 231, 233, 241, 342, 344, 371, 382, 411, 415], "acosh": [182, 443], "x1_i": [182, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 208, 209, 213, 214, 219, 220, 222, 223, 226, 228, 230, 231, 238], "x2_i": [182, 186, 190, 192, 194, 195, 196, 197, 201, 202, 207, 208, 209, 213, 214, 219, 220, 222, 223, 226, 228, 230, 231, 238], "finit": [182, 186, 190, 210, 226, 230, 231], "nonzero": [182, 186, 226, 418], "nor": [182, 186, 226], "nearest": [182, 186, 226, 232], "2019": [182, 186, 205, 226], "commut": [182, 186], "asin": [182, 443], "sine": [182, 187, 188, 234, 235], "asinh": [182, 443], "atan": [182, 443], "atan2": [182, 443], "quotient": [182, 190], "notat": [182, 190, 431, 432], "denot": [182, 190], "pair": [182, 190, 329, 341, 342, 344], "quadrant": [182, 190], "3\u03c0": [182, 190], "atanh": [182, 443], "549": [182, 191], "bitwise_and": 182, "bitwis": [182, 192, 195, 197, 223], "AND": [182, 192, 220, 440, 441], "binari": [182, 192, 195, 197, 223, 367, 368], "bitwise_invert": 182, "invert": [182, 193], "bitwise_left_shift": 182, "bitwise_or": 182, "OR": [182, 195, 222, 440, 442], "bitwise_right_shift": 182, "arithmet": [182, 196, 431, 434], "propag": [182, 196, 431, 433, 434, 435, 437, 438, 439], "thu": [182, 196, 230, 231, 342, 347], "floor": [182, 196, 242, 261, 443], "lh": [182, 196], "rh": [182, 196], "bitwise_xor": 182, "xor": [182, 197, 223], "416": [182, 199], "cosh": [182, 443], "5430806": [182, 200], "7621958": [182, 200], "067662": [182, 200], "27": [182, 200, 431, 432], "308231": [182, 200], "0200667": [182, 200], "8283155": [182, 200], "110": [182, 200], "705475": [182, 200], "6685185": [182, 200], "567909": [182, 200], "57476": [182, 200], "286647": [182, 200], "40": [182, 200, 431, 432], "731575": [182, 200], "122": [182, 200], "34801": [182, 200], "367": [182, 200], "54822": [182, 200], "669": [182, 200], "71564": [182, 200], "201": [182, 200], "548": [182, 200], "317": [182, 200], "1490": [182, 200], "4791": [182, 200], "dividend": [182, 201, 231], "divisor": [182, 201, 231, 305, 307, 308, 312, 431, 437, 439, 480, 481, 482], "erf": 182, "gauss": [182, 203], "exponenti": [182, 203, 204, 219, 230], "exp": [182, 205, 219, 443], "logarithm": [182, 204, 215, 216, 217, 218, 219, 342, 358], "7182817": [182, 204], "389056": [182, 204], "085537": [182, 204], "expm1": 182, "accur": [182, 205], "fdlibm": [182, 205], "compliant": [182, 205, 221, 222, 431, 433, 434, 435], "greatest": [182, 206, 207], "floor_divid": 182, "greater_equ": 182, "isfinit": 182, "out_i": [182, 210, 211, 212], "isinf": 182, "isnan": 182, "less_equ": 182, "log10": 182, "log1p": 182, "log2": 182, "logaddexp": 182, "logical_and": [182, 443], "logical_not": [182, 443], "NOT": [182, 221], "recommend": [182, 221, 222, 231, 431, 434], "logical_or": [182, 443], "logical_xor": 182, "threshold": [182, 224, 225], "exce": [182, 225], "y_i": [182, 227], "not_equ": 182, "pow": 182, "expon": [182, 230, 242, 296], "versu": [182, 230], "odd": [182, 230], "remaind": [182, 242, 261, 371, 381], "modulu": [182, 231], "primarili": [182, 231], "sinh": [182, 443], "sqrt": [182, 342, 365], "squar": [182, 236, 329, 332, 342, 343, 345, 347, 348, 349, 352, 358, 359, 360], "indistinguish": [182, 236], "infinit": [182, 236], "56": [182, 239, 431, 432], "19": [182, 239, 371, 378], "546": [182, 239], "842": [182, 239], "916": [182, 239], "96": [182, 239, 431, 432], "37": [182, 239, 321, 328], "996": [182, 239], "328": [182, 239], "143": [182, 239], "38": [182, 239], "trunc": 182, "decim": [182, 241], "all_equ": 242, "equality_matrix": [242, 243], "arg_nam": 242, "array_equ": 242, "arrays_equ": 242, "r": [242, 246, 303, 342, 357, 366], "assert_supports_inplac": 242, "later": [242, 248], "clip_matrix_norm": 242, "max_norm": [242, 249, 250], "downscal": [242, 249, 250], "clip_vector_norm": 242, "container_typ": 242, "copy_arrai": 242, "cumsum": [242, 443], "current_backend_str": 242, "default_v": [242, 256], "catch_except": [242, 256], "rev": [242, 256], "with_cal": [242, 256], "einops_rearrang": 242, "axes_length": [242, 257, 258, 259], "rearrang": [242, 257, 259], "arrang": [242, 257], "einops_reduc": 242, "einops_repeat": 242, "floormod": [242, 443], "mod": [242, 261], "fourier_encod": 242, "max_freq": [242, 262], "num_band": [242, 262], "flatten": [242, 262, 342, 355, 365, 371, 378, 380, 418, 419, 420, 423, 424, 425, 427], "pad": [242, 262, 329, 330, 331, 332, 333, 334, 335, 336, 371, 374, 386, 464, 465, 466, 467, 468, 469, 470, 471], "fourier": [242, 262], "band": [242, 262], "linearli": [242, 262, 342, 359], "oppos": [242, 262], "geometr": [242, 262], "gather": [242, 264], "slice": [242, 263, 264, 391, 400], "gather_nd": [242, 443], "get_all_arrays_in_memori": 242, "get_min_bas": 242, "get_min_denomin": 242, "get_num_dim": [242, 443], "as_arrai": [242, 268, 293], "get_referrers_recurs": 242, "seen_set": [242, 269], "local_set": [242, 269], "has_nan": 242, "include_inf": [242, 270, 304], "indices_wher": [242, 443], "inplace_arrays_support": 242, "inplace_decr": 242, "decrement": [242, 273], "inplace_incr": 242, "inplace_variables_support": 242, "is_arrai": 242, "is_ivy_contain": 242, "match_kwarg": 242, "allow_dupl": [242, 281], "forkserv": [242, 282], "spawn": [242, 282], "num_arrays_in_memori": 242, "hot": [242, 284], "scatter": [242, 284, 287, 288], "overrid": [242, 284], "print_all_arrays_in_memori": 242, "queue_timeout": 242, "scatter_flat": 242, "flat": [242, 287, 371, 378], "set_min_bas": 242, "set_min_denomin": 242, "set_queue_timeout": 242, "set_tmp_dir": 242, "tmp_dr": [242, 292], "temporari": [242, 292], "y_tupl": [242, 293], "y_tensor": [242, 293], "as_tensor": [242, 293], "min_denomin": [242, 295], "stabil": [242, 295, 296, 428, 429, 430], "_min_denomin": [242, 295], "stable_pow": 242, "min_bas": [242, 296], "_min_bas": [242, 296, 409, 410, 478, 479], "supports_inplac": 242, "tmp_dir": 242, "to_list": [242, 443], "to_scalar": 242, "try_else_non": 242, "keepdim": [242, 303, 342, 351, 365, 418, 419, 420, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "unpack": [242, 303], "value_is_nan": 242, "gradienttrack": [305, 306], "with_grad": [305, 315], "adam_step": 305, "dcdw": [305, 307, 308, 310, 312, 313], "delta": [305, 307], "cost": [305, 307, 308, 310, 312, 313, 314, 387, 388, 389, 390], "ws": [305, 307, 308, 310, 312, 313, 314], "en": [305, 307, 308], "wikipedia": [305, 307, 308], "wiki": [305, 307, 308], "stochastic_gradient_desc": [305, 307, 308], "dc": [305, 307, 308, 310, 312, 313, 314], "dw": [305, 307, 308, 310, 312, 313, 314], "averag": [305, 307, 308, 312, 387, 388, 389], "forget": [305, 307, 308, 312, 480, 481, 482], "mw_tm1": [305, 308, 312], "vw_tm1": [305, 308, 312], "rate": [305, 308, 310, 312, 313, 314, 387, 388, 389, 390, 464, 475, 480, 481, 482, 483, 484, 485], "rel": [305, 308, 310, 312, 313, 314, 342, 346, 353, 356, 363, 371, 376, 380, 428, 429, 430, 443], "ws_new": [305, 308, 310, 312, 313, 314], "retain": [305, 309], "gradient_descent_upd": [305, 387, 388, 389, 390, 443], "lamb_upd": 305, "max_trust_ratio": [305, 312, 480, 482], "decay_lambda": [305, 312, 313, 480, 482, 483], "trust": [305, 312, 480, 482], "decai": [305, 312, 313, 480, 482, 483], "lars_upd": 305, "layerwis": [305, 313, 480, 483], "optimizer_upd": 305, "effective_grad": [305, 314], "set_with_grad": 305, "preserve_typ": [305, 316], "unset_with_grad": 305, "variable_data": 305, "bilinear_resampl": [321, 443], "bilinearli": [321, 322], "num_sampl": [321, 322, 325, 411, 412], "bilinear": [321, 322], "float_img_to_uint8_img": 321, "gradient_imag": [321, 443], "linear_resampl": 321, "interpol": [321, 325], "resampl": [321, 325], "random_crop": 321, "crop_siz": [321, 326], "image_dim": [321, 326], "seed": [321, 326, 411, 443], "randomli": [321, 326, 329, 337, 464, 472], "crop": [321, 326], "2d": [321, 326, 342, 358, 464, 467, 468, 471], "nh": [321, 326], "nw": [321, 326], "stack_imag": [321, 443], "desired_aspect_ratio": [321, 327], "window": [321, 327, 329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "width": [321, 327], "uint8_img_to_float_img": 321, "820471434542632e": [321, 328], "0082513512365273e": [321, 328], "34": [321, 328], "658462758989161e": [321, 328], "003653270560797e": [321, 328], "30": [321, 328, 431, 432, 455, 461], "conv1d": [329, 464], "stride": [329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "data_format": [329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "nwc": [329, 330, 331, 464, 465, 466], "dilat": [329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "convolut": [329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "d_in": [329, 330, 331, 332, 333, 334, 335], "fw": [329, 330, 331, 332, 333, 334, 335, 336], "d_out": [329, 330, 331, 332, 333, 334, 335], "slide": [329, 330, 331, 332, 333, 334, 335, 336, 464, 465, 466, 467, 468, 469, 470, 471], "ncw": [329, 330, 331, 464, 465, 466], "wio": [329, 330], "conv1d_transpos": 329, "output_shap": [329, 331, 333, 335, 464, 466, 468, 470], "conv2d": [329, 443, 464], "nhwc": [329, 332, 333, 336, 464, 467, 468, 471], "fh": [329, 332, 333, 334, 335, 336], "nchw": [329, 332, 333, 336, 464, 467, 468, 471], "hwio": [329, 332], "random_norm": [329, 332, 336, 342, 360, 411], "unequ": [329, 332], "28": [329, 332, 336, 431, 432], "unsqueez": [329, 332, 336], "conv2d_transpos": 329, "conv3d": [329, 464], "ndhwc": [329, 334, 335, 464, 469, 470], "volum": [329, 334], "fd": [329, 334, 335], "ncdhw": [329, 334, 335, 464, 469, 470], "dhwio": [329, 334], "conv3d_transpos": 329, "depthwise_conv2d": [329, 443], "depthwis": [329, 336, 464, 471], "333": [329, 336], "inp": [329, 336], "prob": [329, 337, 411, 412, 464, 472], "bernoulli": [329, 337], "out_featur": [329, 337, 338], "incom": [329, 338], "outer_batch_shap": [329, 338], "inner_batch_shap": [329, 338], "in_featur": [329, 338], "cell": [329, 339, 464, 473], "num_queri": [329, 340, 341], "x_feat_dim": [329, 340], "num_kei": [329, 340, 341], "cont_feat_dim": [329, 340], "numhead": [329, 340], "feat_dim": [329, 340, 341], "out_feat_dim": [329, 340], "scaled_dot_product_attent": 329, "choleski": 342, "decomposit": [342, 343, 357, 360], "symmetr": [342, 343, 347, 348, 366], "u": [342, 343, 360], "73": [342, 343], "57": [342, 343], "63": [342, 343, 431, 432], "cross": [342, 367, 368, 369, 370, 443], "vif": [342, 344], "35": [342, 344, 431, 432], "det": 342, "92": [342, 345], "293": [342, 345], "47": [342, 345], "offset": [342, 346, 363, 409, 410], "axis1": [342, 346, 371, 384], "axis2": [342, 346], "eigh": 342, "eigendecomposit": [342, 347], "qlq\u1d40": [342, 347], "orthogon": [342, 347], "eig": [342, 347], "namedtupl": [342, 347, 357, 360, 423, 424, 425], "eigenvalu": [342, 347, 348], "eigenvector": [342, 347], "eigvalsh": 342, "75": [342, 349], "prepend": [342, 350], "matrix_norm": 342, "ord": [342, 351, 365], "fro": [342, 351], "matrix_pow": 342, "matrix_rank": 342, "rtol": [342, 353, 356], "singular": [342, 353, 356, 360, 361], "toler": [342, 353, 356], "largest_singular_valu": [342, 353, 356], "outer": [342, 387, 388, 389, 390, 431, 432], "array_lik": [342, 355], "pinv": [342, 443], "moor": [342, 356], "penros": [342, 356], "pseudo": [342, 356], "qr": 342, "orthonorm": [342, 357, 360], "slodget": 342, "logdet": [342, 358], "equat": [342, 359, 431, 432], "coeffici": [342, 359], "svd": [342, 443], "full_matric": [342, 360], "usvh": [342, 360], "vh": [342, 360], "hermitian": [342, 360], "descend": [342, 360, 361, 428, 429, 430], "et": [342, 360], "cetera": [342, 360], "adjoint": [342, 360], "reconstruct": [342, 360, 423, 424, 426], "reconstructed_x": [342, 360], "svdval": 342, "tensordot": 342, "contract": [342, 362, 431, 432], "26": [342, 362, 431, 432], "doubl": [342, 362], "89": [342, 362, 431, 438], "76": [342, 362, 431, 432], "vecdot": 342, "vector_norm": 342, "singleton": [342, 365, 371, 382, 418, 420, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "liter": [342, 365], "manhattan": [342, 365], "l2": [342, 365], "euclidean": [342, 365], "vector_to_skew_symmetric_matrix": [342, 443], "mathbf": [342, 366], "mathbb": [342, 366], "skew": [342, 366], "binary_cross_entropi": 367, "entropi": [367, 368, 369, 370], "predict": [367, 368, 369, 370], "smooth": [367, 368, 369, 370], "2231": [367, 368], "3567": [367, 368], "6094": [367, 368], "9163": [367, 368], "2040": [367, 368], "5108": [367, 368], "1054": [367, 368], "discret": [367, 369], "3862944": [367, 369], "35667497": [367, 369, 370], "sparse_cross_entropi": 367, "spars": [367, 370], "logit": [367, 370], "3025851": [367, 370], "357": [367, 370], "join": [371, 373, 383, 443], "constant_pad": 371, "pad_width": [371, 374, 386], "before_1": [371, 374, 386], "after_1": [371, 374, 386], "before_n": [371, 374, 386], "after_n": [371, 374, 386], "insert": [371, 375, 391, 396, 418, 419], "manipulation_funct": [371, 375], "reorder": [371, 376], "permute_dim": 371, "permut": [371, 377, 384], "repetit": [371, 378, 385], "restor": [371, 380], "with_remaind": [371, 381], "45": [371, 381, 431, 432], "squeez": [371, 443], "famili": [371, 383], "intxx": [371, 383], "floatxx": [371, 383], "swapax": 371, "axis0": [371, 384], "tile": [371, 443], "rep": [371, 385], "zero_pad": [371, 443], "fomaml_step": 387, "inner_cost_fn": [387, 388, 389], "outer_cost_fn": [387, 388, 389], "inner_grad_step": [387, 388, 389, 390], "inner_learning_r": [387, 388, 389, 390], "inner_optimization_step": [387, 388, 389, 390], "inner_batch_fn": [387, 388, 389], "outer_batch_fn": [387, 388, 389], "average_across_step": [387, 388, 389], "inner_v": [387, 388, 389], "keep_inner_v": [387, 388, 389], "outer_v": [387, 388, 389], "keep_outer_v": [387, 388, 389], "return_inner_v": [387, 388, 389, 390], "num_task": [387, 388, 389, 390], "maml": [387, 388, 389], "recev": [387, 388, 389], "maml_step": 387, "rece": [387, 389], "reptile_step": 387, "cost_fn": [387, 390], "reptil": [387, 390], "receivng": [387, 390], "all_nested_indic": 391, "include_nest": [391, 392], "_index": [391, 392, 402], "_base": [391, 392, 401, 402], "begin": [391, 392, 402], "copy_nest": 391, "include_deriv": [391, 393, 403], "to_mut": [391, 393, 403], "mutabl": [391, 393, 403], "insert_into_nest_at_index": 391, "insert_into_nest_at_indic": 391, "map_nest_at_index": 391, "map_nest_at_indic": 391, "multi_index_nest": 391, "nested_ani": 391, "check_nest": [391, 401, 402], "conditon": [391, 401, 402], "nested_indices_wher": 391, "to_ignor": [391, 402], "_depth": [391, 403], "_tuple_check_fn": [391, 403], "_list_check_fn": [391, 403], "_dict_check_fn": [391, 403], "nested_multi_map": 391, "key_chain": [391, 404], "to_appli": [391, 404], "prune_unappli": [391, 404], "prune": [391, 404, 405, 406], "leftmost": [391, 404], "nest0": [391, 404], "funciton": [391, 404], "prune_nest_at_index": 391, "prune_nest_at_indic": 391, "set_nest_at_index": 391, "set_nest_at_indic": 391, "layer_norm": 409, "normalized_idx": [409, 410], "new_std": [409, 410, 478, 479], "mini": [409, 410, 478, 479], "gamma": [409, 410], "beta": [409, 410], "4638476": [409, 410], "8783086": [409, 410], "29276952": [409, 410], "0976": [409, 410], "3452": [409, 410], "2740": [409, 410], "1047": [409, 410], "5886": [409, 410], "2732": [409, 410], "7696": [409, 410], "7024": [409, 410], "2518": [409, 410], "57629204": [409, 410], "29217": [409, 410], "3311275": [409, 410], "58084774": [409, 410], "89134157": [409, 410], "3306142": [409, 410], "0074799": [409, 410], "5786756": [409, 410], "9311974": [409, 410], "07071576": [409, 410], "10856849": [409, 410], "16035788": [409, 410], "8774949": [409, 410], "243": [409, 410], "multinomi": 411, "population_s": [411, 412], "draw": [411, 412, 414, 415], "unnorm": [411, 412], "drawn": [411, 412, 413, 414, 415], "home": [411, 412, 413, 414, 415], "randint": [411, 443], "uniformli": [411, 413, 415], "highest": [411, 413], "parameter": [411, 414, 415], "6444774682897879": [411, 414], "boundari": [411, 415], "89150229": [411, 415], "seed_valu": [411, 416], "shuffl": [411, 443], "argmax": [418, 443], "occurr": [418, 419, 420, 423, 424], "argmin": [418, 443], "50": [418, 421, 431, 432], "yield": [418, 422], "unique_al": 423, "x_j": [423, 424, 425, 427], "impli": [423, 424, 425, 427], "inverse_indic": [423, 424, 426], "aggreg": [423, 424], "fourth": [423, 424], "unique_count": 423, "unique_invers": 423, "unique_valu": 423, "argsort": 428, "ascend": [428, 429], "einsum": 431, "einstein": [431, 432], "summat": [431, 432], "seq": [431, 432], "imagin": [431, 432], "suppos": [431, 432], "chanc": [431, 432], "bigger": [431, 432], "jk": [431, 432], "ik": [431, 432], "1d": [431, 432, 464, 465, 466], "24": [431, 432], "36": [431, 432], "66": [431, 432], "84": [431, 432], "104": [431, 432], "126": [431, 432], "510": [431, 432], "21": [431, 432], "33": [431, 432], "44": [431, 432], "52": [431, 432], "60": [431, 432], "65": [431, 432], "72": [431, 432], "78": [431, 432], "77": [431, 432], "91": [431, 432], "98": [431, 432], "112": [431, 432], "81": [431, 432], "99": [431, 432], "108": [431, 432], "117": [431, 432], "sentinel": [431, 433, 435], "unsign": [431, 436, 438], "degre": [431, 437, 439], "freedom": [431, 437, 439], "bessel": [431, 437, 439], "8164966": [431, 437], "varianc": [431, 439], "unbias": [431, 439], "autom": 443, "grow": 443, "ai": 443, "got": 443, "colab": 443, "sharp": 443, "immedi": 443, "favorit": 443, "jax_concat": 443, "tf_concat": 443, "np_concat": 443, "mx_concat": 443, "torch_concat": 443, "prompt": 443, "get_devic": 443, "reduce_prod": 443, "linalg": 443, "neural_net": 443, "ecosystem": [443, 449], "popular": [443, 449], "acceler": 443, "articl": 443, "lenton2021ivi": 443, "inter": 443, "portabl": 443, "author": 443, "lenton": 443, "daniel": 443, "pardo": 443, "fabio": 443, "falck": 443, "fabian": 443, "jame": 443, "stephen": 443, "clark": 443, "ronald": 443, "journal": 443, "arxiv": 443, "preprint": 443, "2102": 443, "02886": 443, "2021": 443, "add_array_spec": 446, "fn_array_spec": 446, "inspect": [447, 448], "geglu": 450, "native_modul": [453, 454], "native_module_class": [453, 454], "firstlayersiren": 455, "kaimingnorm": [455, 459], "negative_slop": 455, "Ones": 455, "siren": 455, "w0": [455, 461], "filter_s": [464, 465, 466], "conv1dtranspos": 464, "filter_shap": [464, 467, 468, 469, 470, 471], "conv2dtranspos": 464, "conv3dtranspos": 464, "depthwiseconv2d": 464, "num_channel": [464, 471], "bernoul": [464, 472], "num_lay": [464, 473], "return_sequ": [464, 473], "return_st": [464, 473], "get_initial_st": [464, 473], "dens": [464, 474], "multiheadattent": 464, "query_dim": [464, 475], "head_dim": [464, 475], "dropout_r": [464, 475], "context_dim": [464, 475], "with_to_q_fn": [464, 475], "with_to_kv_fn": [464, 475], "with_to_out_fn": [464, 475], "build_mod": [464, 475, 476, 477], "on_init": [464, 475, 476, 477], "__call__": [464, 475, 476, 477], "store_var": [476, 477], "arg_stateful_idx": [476, 477], "kwarg_stateful_idx": [476, 477], "fallback_to_non_compil": [476, 477, 480, 484], "with_partial_v": [476, 477], "initialz": [476, 477], "from_cal": [476, 477], "check_submod_ret": [476, 477], "get_mod_kei": [476, 477], "top_mod": [476, 477], "mod_depth": [476, 477], "mod_height": [476, 477], "mod_with_top_mod_key_chain": [476, 477], "save_weight": [476, 477], "weights_path": [476, 477], "show_mod_in_top_mod": [476, 477], "upper_depth": [476, 477], "lower_depth": [476, 477], "show_structur": [476, 477], "show_v_in_top_v": [476, 477], "sub_mod": [476, 477], "show_v": [476, 477], "track_submod_call_ord": [476, 477], "track_submod_ret": [476, 477], "v_with_top_v_key_chain": [476, 477], "layernorm": 478, "normalized_shap": [478, 479], "elementwise_affin": [478, 479], "trail": [478, 479], "affin": [478, 479], "0001": [480, 481, 482], "init_on_first_step": [480, 484], "ignore_miss": [480, 484], "overriden": [480, 484], "sgd": 480, "stochast": [480, 485], "sub_modul": [486, 487], "color": [489, 490], "green": [489, 490]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [22, 0, 0, "-", "debugger"], [62, 0, 0, "-", "func_wrapper"], [446, 0, 0, "-", "inspection"], [489, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[23, 3, 1, "", "debug_mode"], [24, 3, 1, "", "set_breakpoint_debug_mode"], [25, 3, 1, "", "set_debug_mode"], [26, 3, 1, "", "set_exception_debug_mode"], [27, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[63, 3, 1, "", "handle_nestable"], [64, 3, 1, "", "handle_out_argument"], [65, 3, 1, "", "infer_device"], [66, 3, 1, "", "infer_dtype"], [67, 3, 1, "", "inputs_to_ivy_arrays"], [68, 3, 1, "", "inputs_to_native_arrays"], [69, 3, 1, "", "outputs_to_ivy_arrays"], [70, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[72, 0, 0, "-", "activations"], [80, 0, 0, "-", "compilation"], [82, 0, 0, "-", "constants"], [83, 0, 0, "-", "creation"], [102, 0, 0, "-", "data_type"], [132, 0, 0, "-", "device"], [182, 0, 0, "-", "elementwise"], [242, 0, 0, "-", "general"], [305, 0, 0, "-", "gradients"], [321, 0, 0, "-", "image"], [329, 0, 0, "-", "layers"], [342, 0, 0, "-", "linear_algebra"], [367, 0, 0, "-", "losses"], [371, 0, 0, "-", "manipulation"], [387, 0, 0, "-", "meta"], [391, 0, 0, "-", "nest"], [409, 0, 0, "-", "norms"], [411, 0, 0, "-", "random"], [418, 0, 0, "-", "searching"], [423, 0, 0, "-", "set"], [428, 0, 0, "-", "sorting"], [431, 0, 0, "-", "statistical"], [440, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[73, 3, 1, "", "gelu"], [74, 3, 1, "", "leaky_relu"], [75, 3, 1, "", "relu"], [76, 3, 1, "", "sigmoid"], [77, 3, 1, "", "softmax"], [78, 3, 1, "", "softplus"], [79, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[81, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[82, 4, 1, "", "e"], [82, 4, 1, "", "inf"], [82, 4, 1, "", "nan"], [82, 4, 1, "", "newaxis"], [82, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[84, 3, 1, "", "arange"], [83, 3, 1, "", "array"], [85, 3, 1, "", "asarray"], [86, 3, 1, "", "empty"], [87, 3, 1, "", "empty_like"], [88, 3, 1, "", "eye"], [89, 3, 1, "", "from_dlpack"], [90, 3, 1, "", "full"], [91, 3, 1, "", "full_like"], [92, 3, 1, "", "linspace"], [93, 3, 1, "", "logspace"], [94, 3, 1, "", "meshgrid"], [95, 3, 1, "", "native_array"], [96, 3, 1, "", "ones"], [97, 3, 1, "", "ones_like"], [98, 3, 1, "", "tril"], [99, 3, 1, "", "triu"], [100, 3, 1, "", "zeros"], [101, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[102, 1, 1, "", "DefaultDtype"], [102, 1, 1, "", "DefaultFloatDtype"], [102, 1, 1, "", "DefaultIntDtype"], [106, 3, 1, "", "as_ivy_dtype"], [107, 3, 1, "", "as_native_dtype"], [108, 3, 1, "", "astype"], [109, 3, 1, "", "broadcast_arrays"], [110, 3, 1, "", "broadcast_to"], [111, 3, 1, "", "can_cast"], [112, 3, 1, "", "closest_valid_dtype"], [113, 3, 1, "", "convert_dtype"], [114, 3, 1, "", "default_dtype"], [115, 3, 1, "", "default_float_dtype"], [116, 3, 1, "", "default_int_dtype"], [117, 3, 1, "", "dtype"], [118, 3, 1, "", "dtype_bits"], [119, 3, 1, "", "finfo"], [120, 3, 1, "", "iinfo"], [121, 3, 1, "", "invalid_dtype"], [122, 3, 1, "", "is_float_dtype"], [123, 3, 1, "", "is_int_dtype"], [124, 3, 1, "", "result_type"], [125, 3, 1, "", "set_default_dtype"], [126, 3, 1, "", "set_default_float_dtype"], [127, 3, 1, "", "set_default_int_dtype"], [128, 3, 1, "", "unset_default_dtype"], [129, 3, 1, "", "unset_default_float_dtype"], [130, 3, 1, "", "unset_default_int_dtype"], [131, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[102, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[102, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[102, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[132, 1, 1, "", "DefaultDevice"], [134, 1, 1, "", "DevClonedItem"], [135, 1, 1, "", "DevClonedIter"], [136, 1, 1, "", "DevClonedNest"], [137, 1, 1, "", "DevDistItem"], [138, 1, 1, "", "DevDistIter"], [139, 1, 1, "", "DevDistNest"], [132, 1, 1, "", "DevManager"], [141, 1, 1, "", "DevMapper"], [142, 1, 1, "", "DevMapperMultiProc"], [132, 1, 1, "", "MultiDev"], [144, 1, 1, "", "MultiDevItem"], [145, 1, 1, "", "MultiDevIter"], [146, 1, 1, "", "MultiDevNest"], [147, 1, 1, "", "Profiler"], [148, 3, 1, "", "as_ivy_dev"], [149, 3, 1, "", "as_native_dev"], [150, 3, 1, "", "clear_mem_on_dev"], [151, 3, 1, "", "default_device"], [152, 3, 1, "", "dev"], [153, 3, 1, "", "dev_clone"], [154, 3, 1, "", "dev_clone_array"], [155, 3, 1, "", "dev_clone_iter"], [156, 3, 1, "", "dev_clone_nest"], [157, 3, 1, "", "dev_dist"], [158, 3, 1, "", "dev_dist_array"], [159, 3, 1, "", "dev_dist_iter"], [160, 3, 1, "", "dev_dist_nest"], [161, 3, 1, "", "dev_unify"], [162, 3, 1, "", "dev_unify_array"], [163, 3, 1, "", "dev_unify_iter"], [164, 3, 1, "", "dev_unify_nest"], [165, 3, 1, "", "dev_util"], [166, 3, 1, "", "get_all_ivy_arrays_on_dev"], [167, 3, 1, "", "gpu_is_available"], [168, 3, 1, "", "num_cpu_cores"], [169, 3, 1, "", "num_gpus"], [170, 3, 1, "", "num_ivy_arrays_on_dev"], [171, 3, 1, "", "percent_used_mem_on_dev"], [172, 3, 1, "", "print_all_ivy_arrays_on_dev"], [173, 3, 1, "", "set_default_device"], [174, 3, 1, "", "set_split_factor"], [175, 3, 1, "", "split_factor"], [176, 3, 1, "", "split_func_call"], [177, 3, 1, "", "to_dev"], [178, 3, 1, "", "total_mem_on_dev"], [179, 3, 1, "", "tpu_is_available"], [180, 3, 1, "", "unset_default_device"], [181, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[132, 2, 1, "", "__enter__"], [132, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "da_tune_step"], [132, 5, 1, "", "dim_size"], [132, 2, 1, "", "ds_tune_step"], [132, 2, 1, "", "map"], [132, 2, 1, "", "repeated_config_check"], [132, 5, 1, "", "tune_step"], [132, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[142, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[132, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "items"], [144, 2, 1, "", "keys"], [144, 5, 1, "", "shape"], [144, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "at_dev"], [145, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "start"], [147, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[183, 3, 1, "", "abs"], [184, 3, 1, "", "acos"], [185, 3, 1, "", "acosh"], [186, 3, 1, "", "add"], [187, 3, 1, "", "asin"], [188, 3, 1, "", "asinh"], [189, 3, 1, "", "atan"], [190, 3, 1, "", "atan2"], [191, 3, 1, "", "atanh"], [192, 3, 1, "", "bitwise_and"], [193, 3, 1, "", "bitwise_invert"], [194, 3, 1, "", "bitwise_left_shift"], [195, 3, 1, "", "bitwise_or"], [196, 3, 1, "", "bitwise_right_shift"], [197, 3, 1, "", "bitwise_xor"], [198, 3, 1, "", "ceil"], [199, 3, 1, "", "cos"], [200, 3, 1, "", "cosh"], [201, 3, 1, "", "divide"], [202, 3, 1, "", "equal"], [203, 3, 1, "", "erf"], [204, 3, 1, "", "exp"], [205, 3, 1, "", "expm1"], [206, 3, 1, "", "floor"], [207, 3, 1, "", "floor_divide"], [208, 3, 1, "", "greater"], [209, 3, 1, "", "greater_equal"], [210, 3, 1, "", "isfinite"], [211, 3, 1, "", "isinf"], [212, 3, 1, "", "isnan"], [213, 3, 1, "", "less"], [214, 3, 1, "", "less_equal"], [215, 3, 1, "", "log"], [216, 3, 1, "", "log10"], [217, 3, 1, "", "log1p"], [218, 3, 1, "", "log2"], [219, 3, 1, "", "logaddexp"], [220, 3, 1, "", "logical_and"], [221, 3, 1, "", "logical_not"], [222, 3, 1, "", "logical_or"], [223, 3, 1, "", "logical_xor"], [224, 3, 1, "", "maximum"], [225, 3, 1, "", "minimum"], [226, 3, 1, "", "multiply"], [227, 3, 1, "", "negative"], [228, 3, 1, "", "not_equal"], [229, 3, 1, "", "positive"], [230, 3, 1, "", "pow"], [231, 3, 1, "", "remainder"], [232, 3, 1, "", "round"], [233, 3, 1, "", "sign"], [234, 3, 1, "", "sin"], [235, 3, 1, "", "sinh"], [236, 3, 1, "", "sqrt"], [237, 3, 1, "", "square"], [238, 3, 1, "", "subtract"], [239, 3, 1, "", "tan"], [240, 3, 1, "", "tanh"], [241, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[243, 3, 1, "", "all_equal"], [244, 3, 1, "", "arg_names"], [245, 3, 1, "", "array_equal"], [246, 3, 1, "", "arrays_equal"], [247, 3, 1, "", "assert_supports_inplace"], [248, 3, 1, "", "cache_fn"], [249, 3, 1, "", "clip_matrix_norm"], [250, 3, 1, "", "clip_vector_norm"], [251, 3, 1, "", "container_types"], [252, 3, 1, "", "copy_array"], [253, 3, 1, "", "cumprod"], [254, 3, 1, "", "cumsum"], [255, 3, 1, "", "current_backend_str"], [256, 3, 1, "", "default"], [257, 3, 1, "", "einops_rearrange"], [258, 3, 1, "", "einops_reduce"], [259, 3, 1, "", "einops_repeat"], [260, 3, 1, "", "exists"], [261, 3, 1, "", "floormod"], [262, 3, 1, "", "fourier_encode"], [263, 3, 1, "", "gather"], [264, 3, 1, "", "gather_nd"], [265, 3, 1, "", "get_all_arrays_in_memory"], [266, 3, 1, "", "get_min_base"], [267, 3, 1, "", "get_min_denominator"], [268, 3, 1, "", "get_num_dims"], [269, 3, 1, "", "get_referrers_recursive"], [270, 3, 1, "", "has_nans"], [271, 3, 1, "", "indices_where"], [272, 3, 1, "", "inplace_arrays_supported"], [273, 3, 1, "", "inplace_decrement"], [274, 3, 1, "", "inplace_increment"], [275, 3, 1, "", "inplace_update"], [276, 3, 1, "", "inplace_variables_supported"], [277, 3, 1, "", "is_array"], [278, 3, 1, "", "is_ivy_array"], [279, 3, 1, "", "is_ivy_container"], [280, 3, 1, "", "is_native_array"], [281, 3, 1, "", "match_kwargs"], [282, 3, 1, "", "multiprocessing"], [283, 3, 1, "", "num_arrays_in_memory"], [284, 3, 1, "", "one_hot"], [285, 3, 1, "", "print_all_arrays_in_memory"], [286, 3, 1, "", "queue_timeout"], [287, 3, 1, "", "scatter_flat"], [288, 3, 1, "", "scatter_nd"], [289, 3, 1, "", "set_min_base"], [290, 3, 1, "", "set_min_denominator"], [291, 3, 1, "", "set_queue_timeout"], [292, 3, 1, "", "set_tmp_dir"], [293, 3, 1, "", "shape"], [294, 3, 1, "", "shape_to_tuple"], [295, 3, 1, "", "stable_divide"], [296, 3, 1, "", "stable_pow"], [297, 3, 1, "", "supports_inplace"], [298, 3, 1, "", "tmp_dir"], [299, 3, 1, "", "to_list"], [300, 3, 1, "", "to_numpy"], [301, 3, 1, "", "to_scalar"], [302, 3, 1, "", "try_else_none"], [303, 3, 1, "", "unstack"], [304, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[305, 1, 1, "", "GradientTracking"], [307, 3, 1, "", "adam_step"], [308, 3, 1, "", "adam_update"], [309, 3, 1, "", "execute_with_gradients"], [310, 3, 1, "", "gradient_descent_update"], [311, 3, 1, "", "is_variable"], [312, 3, 1, "", "lamb_update"], [313, 3, 1, "", "lars_update"], [314, 3, 1, "", "optimizer_update"], [315, 3, 1, "", "set_with_grads"], [316, 3, 1, "", "stop_gradient"], [317, 3, 1, "", "unset_with_grads"], [318, 3, 1, "", "variable"], [319, 3, 1, "", "variable_data"], [320, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[305, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[322, 3, 1, "", "bilinear_resample"], [323, 3, 1, "", "float_img_to_uint8_img"], [324, 3, 1, "", "gradient_image"], [325, 3, 1, "", "linear_resample"], [326, 3, 1, "", "random_crop"], [327, 3, 1, "", "stack_images"], [328, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[330, 3, 1, "", "conv1d"], [331, 3, 1, "", "conv1d_transpose"], [332, 3, 1, "", "conv2d"], [333, 3, 1, "", "conv2d_transpose"], [334, 3, 1, "", "conv3d"], [335, 3, 1, "", "conv3d_transpose"], [336, 3, 1, "", "depthwise_conv2d"], [337, 3, 1, "", "dropout"], [338, 3, 1, "", "linear"], [339, 3, 1, "", "lstm_update"], [340, 3, 1, "", "multi_head_attention"], [341, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[343, 3, 1, "", "cholesky"], [344, 3, 1, "", "cross"], [345, 3, 1, "", "det"], [346, 3, 1, "", "diagonal"], [347, 3, 1, "", "eigh"], [348, 3, 1, "", "eigvalsh"], [349, 3, 1, "", "inv"], [350, 3, 1, "", "matmul"], [351, 3, 1, "", "matrix_norm"], [352, 3, 1, "", "matrix_power"], [353, 3, 1, "", "matrix_rank"], [354, 3, 1, "", "matrix_transpose"], [355, 3, 1, "", "outer"], [356, 3, 1, "", "pinv"], [357, 3, 1, "", "qr"], [358, 3, 1, "", "slodget"], [359, 3, 1, "", "solve"], [360, 3, 1, "", "svd"], [361, 3, 1, "", "svdvals"], [362, 3, 1, "", "tensordot"], [363, 3, 1, "", "trace"], [364, 3, 1, "", "vecdot"], [365, 3, 1, "", "vector_norm"], [366, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[368, 3, 1, "", "binary_cross_entropy"], [369, 3, 1, "", "cross_entropy"], [370, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[372, 3, 1, "", "clip"], [373, 3, 1, "", "concat"], [374, 3, 1, "", "constant_pad"], [375, 3, 1, "", "expand_dims"], [376, 3, 1, "", "flip"], [377, 3, 1, "", "permute_dims"], [378, 3, 1, "", "repeat"], [379, 3, 1, "", "reshape"], [380, 3, 1, "", "roll"], [381, 3, 1, "", "split"], [382, 3, 1, "", "squeeze"], [383, 3, 1, "", "stack"], [384, 3, 1, "", "swapaxes"], [385, 3, 1, "", "tile"], [386, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[388, 3, 1, "", "fomaml_step"], [389, 3, 1, "", "maml_step"], [390, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[392, 3, 1, "", "all_nested_indices"], [393, 3, 1, "", "copy_nest"], [394, 3, 1, "", "index_nest"], [395, 3, 1, "", "insert_into_nest_at_index"], [396, 3, 1, "", "insert_into_nest_at_indices"], [397, 3, 1, "", "map"], [398, 3, 1, "", "map_nest_at_index"], [399, 3, 1, "", "map_nest_at_indices"], [400, 3, 1, "", "multi_index_nest"], [401, 3, 1, "", "nested_any"], [402, 3, 1, "", "nested_indices_where"], [403, 3, 1, "", "nested_map"], [404, 3, 1, "", "nested_multi_map"], [405, 3, 1, "", "prune_nest_at_index"], [406, 3, 1, "", "prune_nest_at_indices"], [407, 3, 1, "", "set_nest_at_index"], [408, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[410, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[412, 3, 1, "", "multinomial"], [413, 3, 1, "", "randint"], [414, 3, 1, "", "random_normal"], [415, 3, 1, "", "random_uniform"], [416, 3, 1, "", "seed"], [417, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[419, 3, 1, "", "argmax"], [420, 3, 1, "", "argmin"], [421, 3, 1, "", "nonzero"], [422, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[424, 3, 1, "", "unique_all"], [425, 3, 1, "", "unique_counts"], [426, 3, 1, "", "unique_inverse"], [427, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[429, 3, 1, "", "argsort"], [430, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[432, 3, 1, "", "einsum"], [433, 3, 1, "", "max"], [434, 3, 1, "", "mean"], [435, 3, 1, "", "min"], [436, 3, 1, "", "prod"], [437, 3, 1, "", "std"], [438, 3, 1, "", "sum"], [439, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[441, 3, 1, "", "all"], [442, 3, 1, "", "any"]], "ivy.inspection": [[447, 3, 1, "", "add_array_specs"], [448, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[450, 0, 0, "-", "activations"], [453, 0, 0, "-", "converters"], [455, 0, 0, "-", "initializers"], [464, 0, 0, "-", "layers"], [476, 0, 0, "-", "module"], [478, 0, 0, "-", "norms"], [480, 0, 0, "-", "optimizers"], [486, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[451, 1, 1, "", "GEGLU"], [452, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[451, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[452, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[454, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[455, 1, 1, "", "Constant"], [457, 1, 1, "", "FirstLayerSiren"], [458, 1, 1, "", "GlorotUniform"], [455, 1, 1, "", "KaimingNormal"], [460, 1, 1, "", "Ones"], [461, 1, 1, "", "Siren"], [455, 1, 1, "", "Uniform"], [463, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[455, 2, 1, "", "__init__"], [455, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[457, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[458, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[455, 2, 1, "", "__init__"], [455, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[460, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[461, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[455, 2, 1, "", "__init__"], [455, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[463, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[465, 1, 1, "", "Conv1D"], [466, 1, 1, "", "Conv1DTranspose"], [467, 1, 1, "", "Conv2D"], [468, 1, 1, "", "Conv2DTranspose"], [469, 1, 1, "", "Conv3D"], [470, 1, 1, "", "Conv3DTranspose"], [471, 1, 1, "", "DepthwiseConv2D"], [472, 1, 1, "", "Dropout"], [473, 1, 1, "", "LSTM"], [474, 1, 1, "", "Linear"], [475, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[465, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[467, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[475, 2, 1, "", "__init__"]], "ivy.stateful.module": [[477, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "build"], [477, 5, 1, "", "build_mode"], [477, 5, 1, "", "built"], [477, 2, 1, "", "check_submod_rets"], [477, 2, 1, "", "get_mod_key"], [477, 2, 1, "", "mod_depth"], [477, 2, 1, "", "mod_height"], [477, 2, 1, "", "mod_with_top_mod_key_chain"], [477, 2, 1, "", "save_weights"], [477, 2, 1, "", "show_mod_in_top_mod"], [477, 2, 1, "", "show_structure"], [477, 2, 1, "", "show_v_in_top_v"], [477, 2, 1, "", "sub_mods"], [477, 2, 1, "", "track_submod_call_order"], [477, 2, 1, "", "track_submod_rets"], [477, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[479, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[479, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[481, 1, 1, "", "Adam"], [482, 1, 1, "", "LAMB"], [483, 1, 1, "", "LARS"], [484, 1, 1, "", "Optimizer"], [485, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[481, 2, 1, "", "__init__"], [481, 2, 1, "", "set_state"], [481, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "set_state"], [482, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "set_state"], [483, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "set_state"], [484, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "set_state"], [485, 5, 1, "", "state"]], "ivy.stateful.sequential": [[487, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[487, 2, 1, "", "__init__"]], "ivy.verbosity": [[490, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 29, 35, 44, 61], "handler": [0, 44], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 443], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 61], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 46, 61], "arrai": [15, 32, 37, 42, 46], "api": [15, 20, 29, 32, 38, 44, 46, 48, 49], "why": 16, "unifi": [16, 46], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 443], "set": [18, 35, 423], "up": 18, "clone": 18, "ivi": [18, 29, 31, 33, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 32, 33], "local": 19, "open": 20, "task": 20, "function": [20, 34, 36, 38, 39, 40, 42, 44, 49, 61], "format": 20, "frontend": [20, 49], "build": [21, 44], "doc": 21, "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "debugg": 22, "debug_mod": 23, "set_breakpoint_debug_mod": 24, "set_debug_mod": 25, "set_exception_debug_mod": 26, "unset_debug_mod": 27, "deep": 28, "dive": 28, "navig": 29, "code": 29, "categor": 29, "submodul": 29, "design": [29, 43, 443], "docstr": [30, 31], "exampl": [31, 42], "tan": [31, 239], "roll": [31, 380], "add": [31, 186], "hypothesi": 33, "data": [33, 39, 47, 61, 102, 423, 424, 425, 427], "gener": [33, 242], "self": 33, "consist": 33, "explicit": 33, "test_array_funct": 33, "type": [34, 39, 61, 102], "primari": 34, "composit": 34, "mix": 34, "standalon": 34, "nestabl": [34, 38, 42], "conveni": 34, "wrap": 36, "nativ": 37, "handl": 37, "contain": [38, 47], "instanc": [38, 46], "method": [38, 46, 47], "static": 38, "special": 38, "modul": [39, 40, 48, 476, 477], "argument": [39, 40, 41, 42], "other": [39, 40], "devic": [40, 42, 132], "inplac": 41, "updat": 41, "out": [41, 42], "copi": 41, "dtype": [42, 117], "number": 42, "oper": [42, 46, 61], "integ": 42, "sequenc": 42, "block": 44, "framework": [44, 45], "graph": [44, 49], "compil": [44, 49, 80, 81], "class": 46, "monkei": 46, "patch": 46, "construct": 47, "represent": 47, "recurs": 47, "built": 47, "ins": 47, "access": 47, "save": 47, "load": 47, "comparison": 47, "custom": [47, 61], "us": 47, "case": 47, "compartment": 47, "configur": 47, "network": [47, 49], "weight": 47, "state": [48, 61], "initi": [48, 455], "optim": [48, 480, 484], "transpil": 49, "role": 49, "convert": [49, 453], "model": [49, 56, 61], "builder": 51, "ecosystem": 52, "gym": [53, 60], "mech": 54, "memori": [55, 60], "robot": [57, 60], "vision": [58, 60], "extens": [59, 443], "appli": 60, "librari": 60, "mechan": 60, "faq": 61, "mana": 61, "version": 61, "dynam": 61, "size": 61, "shape": [61, 293, 423, 424, 425, 427], "check": 61, "control": 61, "flow": 61, "auto": 61, "differenti": 61, "replica": 61, "parallel": 61, "support": 61, "altern": 61, "structur": 61, "pipelin": 61, "func": 62, "wrapper": 62, "handle_nest": 63, "handle_out_argu": 64, "infer_devic": 65, "infer_dtyp": 66, "inputs_to_ivy_arrai": 67, "inputs_to_native_arrai": 68, "outputs_to_ivy_arrai": 69, "to_native_arrays_and_back": 70, "activ": [72, 450], "gelu": [73, 452], "leaky_relu": 74, "relu": 75, "sigmoid": 76, "softmax": 77, "softplu": 78, "tanh": [79, 240], "constant": 82, "creation": 83, "note": [83, 89], "arang": 84, "asarrai": 85, "empti": 86, "empty_lik": 87, "ey": 88, "from_dlpack": 89, "full": 90, "full_lik": 91, "linspac": 92, "logspac": 93, "meshgrid": 94, "native_arrai": 95, "ones": 96, "ones_lik": 97, "tril": 98, "triu": 99, "zero": [100, 463], "zeros_lik": 101, "as_ivy_dtyp": 106, "as_native_dtyp": 107, "astyp": 108, "broadcast_arrai": 109, "broadcast_to": 110, "can_cast": 111, "closest_valid_dtyp": 112, "convert_dtyp": 113, "default_dtyp": 114, "default_float_dtyp": 115, "default_int_dtyp": 116, "dtype_bit": 118, "finfo": 119, "iinfo": 120, "invalid_dtyp": 121, "is_float_dtyp": 122, "is_int_dtyp": 123, "result_typ": 124, "set_default_dtyp": 125, "set_default_float_dtyp": 126, "set_default_int_dtyp": 127, "unset_default_dtyp": 128, "unset_default_float_dtyp": 129, "unset_default_int_dtyp": 130, "valid_dtyp": 131, "devcloneditem": 134, "devclonedit": 135, "devclonednest": 136, "devdistitem": 137, "devdistit": 138, "devdistnest": 139, "devmapp": 141, "devmappermultiproc": 142, "multidevitem": 144, "multidevit": 145, "multidevnest": 146, "profil": 147, "as_ivy_dev": 148, "as_native_dev": 149, "clear_mem_on_dev": 150, "default_devic": 151, "dev": 152, "dev_clon": 153, "dev_clone_arrai": 154, "dev_clone_it": 155, "dev_clone_nest": 156, "dev_dist": 157, "dev_dist_arrai": 158, "dev_dist_it": 159, "dev_dist_nest": 160, "dev_unifi": 161, "dev_unify_arrai": 162, "dev_unify_it": 163, "dev_unify_nest": 164, "dev_util": 165, "get_all_ivy_arrays_on_dev": 166, "gpu_is_avail": 167, "num_cpu_cor": 168, "num_gpu": 169, "num_ivy_arrays_on_dev": 170, "percent_used_mem_on_dev": 171, "print_all_ivy_arrays_on_dev": 172, "set_default_devic": 173, "set_split_factor": 174, "split_factor": 175, "split_func_cal": 176, "to_dev": 177, "total_mem_on_dev": 178, "tpu_is_avail": 179, "unset_default_devic": 180, "used_mem_on_dev": 181, "elementwis": 182, "ab": 183, "aco": 184, "acosh": 185, "asin": 187, "asinh": 188, "atan": 189, "atan2": 190, "atanh": 191, "bitwise_and": 192, "bitwise_invert": 193, "bitwise_left_shift": 194, "bitwise_or": 195, "bitwise_right_shift": 196, "bitwise_xor": 197, "ceil": 198, "co": 199, "cosh": 200, "divid": 201, "equal": 202, "erf": 203, "exp": 204, "expm1": 205, "floor": 206, "floor_divid": 207, "greater": 208, "greater_equ": 209, "isfinit": 210, "isinf": 211, "isnan": 212, "less": 213, "less_equ": 214, "log": 215, "log10": 216, "log1p": 217, "log2": 218, "logaddexp": 219, "logical_and": 220, "logical_not": 221, "logical_or": 222, "logical_xor": 223, "maximum": 224, "minimum": 225, "multipli": 226, "neg": 227, "not_equ": 228, "posit": 229, "pow": 230, "remaind": 231, "round": 232, "sign": 233, "sin": 234, "sinh": 235, "sqrt": 236, "squar": 237, "subtract": 238, "trunc": 241, "all_equ": 243, "arg_nam": 244, "array_equ": 245, "arrays_equ": 246, "assert_supports_inplac": 247, "cache_fn": 248, "clip_matrix_norm": 249, "clip_vector_norm": 250, "container_typ": 251, "copy_arrai": 252, "cumprod": 253, "cumsum": 254, "current_backend_str": 255, "default": 256, "einops_rearrang": 257, "einops_reduc": 258, "einops_repeat": 259, "exist": 260, "floormod": 261, "fourier_encod": 262, "gather": 263, "gather_nd": 264, "get_all_arrays_in_memori": 265, "get_min_bas": 266, "get_min_denomin": 267, "get_num_dim": 268, "get_referrers_recurs": 269, "has_nan": 270, "indices_wher": 271, "inplace_arrays_support": 272, "inplace_decr": 273, "inplace_incr": 274, "inplace_upd": 275, "inplace_variables_support": 276, "is_arrai": 277, "is_ivy_arrai": 278, "is_ivy_contain": 279, "is_native_arrai": 280, "match_kwarg": 281, "multiprocess": 282, "num_arrays_in_memori": 283, "one_hot": 284, "print_all_arrays_in_memori": 285, "queue_timeout": 286, "scatter_flat": 287, "scatter_nd": 288, "set_min_bas": 289, "set_min_denomin": 290, "set_queue_timeout": 291, "set_tmp_dir": 292, "shape_to_tupl": 294, "stable_divid": 295, "stable_pow": 296, "supports_inplac": 297, "tmp_dir": 298, "to_list": 299, "to_numpi": 300, "to_scalar": 301, "try_else_non": 302, "unstack": 303, "value_is_nan": 304, "gradient": 305, "adam_step": 307, "adam_upd": 308, "execute_with_gradi": 309, "gradient_descent_upd": 310, "is_vari": 311, "lamb_upd": 312, "lars_upd": 313, "optimizer_upd": 314, "set_with_grad": 315, "stop_gradi": 316, "unset_with_grad": 317, "variabl": 318, "variable_data": 319, "with_grad": 320, "imag": 321, "bilinear_resampl": 322, "float_img_to_uint8_img": 323, "gradient_imag": 324, "linear_resampl": 325, "random_crop": 326, "stack_imag": 327, "uint8_img_to_float_img": 328, "layer": [329, 464], "conv1d": [330, 465], "conv1d_transpos": 331, "conv2d": [332, 467], "conv2d_transpos": 333, "conv3d": [334, 469], "conv3d_transpos": 335, "depthwise_conv2d": 336, "dropout": [337, 472], "linear": [338, 342, 474], "lstm_updat": 339, "multi_head_attent": 340, "scaled_dot_product_attent": 341, "algebra": 342, "choleski": 343, "cross": 344, "det": 345, "diagon": 346, "eigh": 347, "eigvalsh": 348, "inv": 349, "matmul": 350, "matrix_norm": 351, "matrix_pow": 352, "matrix_rank": 353, "matrix_transpos": 354, "outer": 355, "pinv": 356, "qr": 357, "slodget": 358, "solv": 359, "svd": 360, "svdval": 361, "tensordot": 362, "trace": 363, "vecdot": 364, "vector_norm": 365, "vector_to_skew_symmetric_matrix": 366, "loss": 367, "binary_cross_entropi": 368, "cross_entropi": 369, "sparse_cross_entropi": 370, "manipul": 371, "clip": 372, "concat": 373, "constant_pad": 374, "expand_dim": 375, "flip": 376, "permute_dim": 377, "repeat": 378, "reshap": 379, "split": 381, "squeez": 382, "stack": 383, "swapax": 384, "tile": 385, "zero_pad": 386, "meta": 387, "fomaml_step": 388, "maml_step": 389, "reptile_step": 390, "nest": 391, "all_nested_indic": 392, "copy_nest": 393, "index_nest": 394, "insert_into_nest_at_index": 395, "insert_into_nest_at_indic": 396, "map": 397, "map_nest_at_index": 398, "map_nest_at_indic": 399, "multi_index_nest": 400, "nested_ani": 401, "nested_indices_wher": 402, "nested_map": 403, "nested_multi_map": 404, "prune_nest_at_index": 405, "prune_nest_at_indic": 406, "set_nest_at_index": 407, "set_nest_at_indic": 408, "norm": [409, 478], "layer_norm": 410, "random": 411, "multinomi": 412, "randint": 413, "random_norm": 414, "random_uniform": 415, "seed": 416, "shuffl": 417, "search": 418, "argmax": 419, "argmin": 420, "nonzero": 421, "where": 422, "depend": [423, 424, 425, 427], "output": [423, 424, 425, 427], "unique_al": 424, "unique_count": 425, "unique_invers": 426, "unique_valu": 427, "sort": [428, 430], "argsort": 429, "statist": 431, "einsum": 432, "max": 433, "mean": 434, "min": 435, "prod": 436, "std": 437, "sum": 438, "var": 439, "util": 440, "all": 441, "ani": 442, "content": 443, "overview": 443, "quick": 443, "start": 443, "roadmap": [443, 449], "citat": 443, "inspect": 446, "add_array_spec": 447, "fn_array_spec": 448, "geglu": 451, "to_ivy_modul": 454, "firstlayersiren": 457, "glorotuniform": 458, "Ones": 460, "siren": 461, "conv1dtranspos": 466, "conv2dtranspos": 468, "conv3dtranspos": 470, "depthwiseconv2d": 471, "lstm": 473, "multiheadattent": 475, "layernorm": 479, "adam": 481, "lamb": 482, "lar": 483, "sgd": 485, "sequenti": [486, 487], "verbos": 489, "cprint": 490}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})