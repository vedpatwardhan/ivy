Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[812,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[381,0,0,"-"],creation_functions:[382,0,0,"-"],data_type_functions:[385,0,0,"-"],data_types:[389,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[383,2,1,""],zeros:[384,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[385,1,1,""],finfo:[387,2,1,""],iinfo:[388,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[385,3,1,""],bits:[385,3,1,""],eps:[385,3,1,""],max:[385,3,1,""],min:[385,3,1,""],smallest_normal:[385,3,1,""]},"ivy.functional.backends.numpy.core":{device:[423,0,0,"-"],general:[425,0,0,"-"],gradients:[459,0,0,"-"],image:[464,0,0,"-"],linalg:[468,0,0,"-"],logic:[471,0,0,"-"],math:[472,0,0,"-"],random:[474,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[424,1,1,""],clear_mem_on_dev:[423,2,1,""],dev:[423,2,1,""],dev_from_str:[423,2,1,""],dev_to_str:[423,2,1,""],gpu_is_available:[423,2,1,""],num_gpus:[423,2,1,""],to_dev:[423,2,1,""],tpu_is_available:[423,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[424,3,1,""],start:[424,3,1,""],stop:[424,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[425,2,1,""],arange:[426,2,1,""],argmax:[427,2,1,""],argmin:[428,2,1,""],array:[429,2,1,""],asarray:[425,2,1,""],astype:[425,2,1,""],cast:[430,2,1,""],ceil:[425,2,1,""],clip:[425,2,1,""],compile:[431,2,1,""],concatenate:[432,2,1,""],constant_pad:[425,2,1,""],container_types:[425,2,1,""],copy_array:[425,2,1,""],cumprod:[433,2,1,""],current_framework_str:[425,2,1,""],dtype:[434,2,1,""],dtype_bits:[435,2,1,""],dtype_from_str:[436,2,1,""],dtype_to_str:[437,2,1,""],equal:[425,2,1,""],floor:[425,2,1,""],floormod:[425,2,1,""],full:[438,2,1,""],gather:[439,2,1,""],gather_nd:[440,2,1,""],get_num_dims:[425,2,1,""],identity:[441,2,1,""],indices_where:[442,2,1,""],inplace_arrays_supported:[425,2,1,""],inplace_decrement:[443,2,1,""],inplace_increment:[444,2,1,""],inplace_update:[445,2,1,""],inplace_variables_supported:[425,2,1,""],is_array:[446,2,1,""],linear_resample:[447,2,1,""],linspace:[448,2,1,""],logspace:[449,2,1,""],matmul:[425,2,1,""],meshgrid:[425,2,1,""],multiprocessing:[425,2,1,""],one_hot:[450,2,1,""],ones_like:[451,2,1,""],round:[425,2,1,""],scatter_flat:[452,2,1,""],scatter_nd:[453,2,1,""],shape:[425,2,1,""],split:[454,2,1,""],squeeze:[455,2,1,""],to_list:[425,2,1,""],to_numpy:[425,2,1,""],to_scalar:[425,2,1,""],transpose:[456,2,1,""],unstack:[457,2,1,""],where:[425,2,1,""],zero_pad:[425,2,1,""],zeros_like:[458,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[460,2,1,""],is_variable:[461,2,1,""],stop_gradient:[462,2,1,""],variable:[463,2,1,""],variable_data:[459,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[465,2,1,""],gradient_image:[466,2,1,""],stack_images:[467,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[469,2,1,""],vector_to_skew_symmetric_matrix:[470,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[473,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[475,2,1,""],randint:[474,2,1,""],random_normal:[474,2,1,""],random_uniform:[474,2,1,""],seed:[474,2,1,""],shuffle:[474,2,1,""]},"ivy.functional.ivy":{array_api:[813,0,0,"-"],core:[845,0,0,"-"],nn:[1186,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[814,0,0,"-"],creation_functions:[815,0,0,"-"],data_type_functions:[818,0,0,"-"],data_types:[821,0,0,"-"],elementwise_functions:[822,0,0,"-"],function_and_method_signatures:[831,0,0,"-"],linear_algebra_extension:[832,0,0,"-"],linear_algebra_functions:[834,0,0,"-"],manipulation_functions:[835,0,0,"-"],searching_functions:[837,0,0,"-"],set_functions:[838,0,0,"-"],sorting_functions:[839,0,0,"-"],statistical_functions:[841,0,0,"-"],utility_functions:[842,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[814,4,1,""],pi:[814,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[816,2,1,""],zeros:[817,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[819,2,1,""],iinfo:[820,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[823,2,1,""],cos:[824,2,1,""],cosh:[825,2,1,""],isfinite:[826,2,1,""],isnan:[827,2,1,""],less:[828,2,1,""],logical_not:[829,2,1,""],sqrt:[830,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[833,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[836,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[840,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[843,2,1,""],any:[844,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[846,0,0,"-"],compilation:[885,0,0,"-"],device:[887,0,0,"-"],dtype:[937,0,0,"-"],general:[961,0,0,"-"],gradients:[1060,0,0,"-"],image:[1076,0,0,"-"],linalg:[1083,0,0,"-"],logic:[1090,0,0,"-"],math:[1093,0,0,"-"],meta:[1110,0,0,"-"],multi_node:[1114,0,0,"-"],nest:[1158,0,0,"-"],random:[1170,0,0,"-"],reductions:[1177,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[847,2,1,""],builtin_add:[848,2,1,""],builtin_and:[849,2,1,""],builtin_bool:[850,2,1,""],builtin_contains:[851,2,1,""],builtin_deepcopy:[852,2,1,""],builtin_dir:[853,2,1,""],builtin_eq:[854,2,1,""],builtin_float:[855,2,1,""],builtin_floordiv:[856,2,1,""],builtin_ge:[857,2,1,""],builtin_getattr:[858,2,1,""],builtin_getattribute:[859,2,1,""],builtin_getitem:[860,2,1,""],builtin_gt:[861,2,1,""],builtin_int:[862,2,1,""],builtin_invert:[863,2,1,""],builtin_le:[864,2,1,""],builtin_lt:[865,2,1,""],builtin_mul:[866,2,1,""],builtin_ne:[867,2,1,""],builtin_neg:[868,2,1,""],builtin_or:[869,2,1,""],builtin_pos:[870,2,1,""],builtin_pow:[871,2,1,""],builtin_radd:[872,2,1,""],builtin_rand:[873,2,1,""],builtin_rfloordiv:[874,2,1,""],builtin_rmul:[875,2,1,""],builtin_ror:[876,2,1,""],builtin_rpow:[877,2,1,""],builtin_rsub:[878,2,1,""],builtin_rtruediv:[879,2,1,""],builtin_rxor:[880,2,1,""],builtin_setitem:[881,2,1,""],builtin_sub:[882,2,1,""],builtin_truediv:[883,2,1,""],builtin_xor:[884,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[886,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[887,1,1,""],DevClonedItem:[889,1,1,""],DevClonedIter:[890,1,1,""],DevClonedNest:[891,1,1,""],DevDistItem:[892,1,1,""],DevDistIter:[893,1,1,""],DevDistNest:[894,1,1,""],DevManager:[887,1,1,""],DevMapper:[896,1,1,""],DevMapperMultiProc:[897,1,1,""],MultiDev:[887,1,1,""],MultiDevItem:[899,1,1,""],MultiDevIter:[900,1,1,""],MultiDevNest:[901,1,1,""],Profiler:[902,1,1,""],clear_mem_on_dev:[903,2,1,""],default_device:[904,2,1,""],dev:[905,2,1,""],dev_clone:[906,2,1,""],dev_clone_array:[907,2,1,""],dev_clone_iter:[908,2,1,""],dev_clone_nest:[909,2,1,""],dev_dist:[910,2,1,""],dev_dist_array:[911,2,1,""],dev_dist_iter:[912,2,1,""],dev_dist_nest:[913,2,1,""],dev_from_str:[914,2,1,""],dev_to_str:[915,2,1,""],dev_unify:[916,2,1,""],dev_unify_array:[917,2,1,""],dev_unify_iter:[918,2,1,""],dev_unify_nest:[919,2,1,""],dev_util:[920,2,1,""],get_all_arrays_on_dev:[921,2,1,""],gpu_is_available:[922,2,1,""],num_arrays_on_dev:[923,2,1,""],num_cpu_cores:[924,2,1,""],num_gpus:[925,2,1,""],percent_used_mem_on_dev:[926,2,1,""],print_all_arrays_on_dev:[927,2,1,""],set_default_device:[928,2,1,""],set_split_factor:[929,2,1,""],split_factor:[930,2,1,""],split_func_call:[931,2,1,""],to_dev:[932,2,1,""],total_mem_on_dev:[933,2,1,""],tpu_is_available:[934,2,1,""],unset_default_device:[935,2,1,""],used_mem_on_dev:[936,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[887,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[887,3,1,""],da_tune_step:[887,3,1,""],dim_size:[887,3,1,""],ds_tune_step:[887,3,1,""],map:[887,3,1,""],repeated_config_check:[887,3,1,""],tune_step:[887,3,1,""],tuned:[887,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[896,3,1,""],map:[896,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[887,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[899,3,1,""],items:[899,3,1,""],keys:[899,3,1,""],shape:[899,3,1,""],values:[899,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[900,3,1,""],at_dev:[900,3,1,""],at_devs:[900,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[901,3,1,""],at_dev:[901,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[902,3,1,""],start:[902,3,1,""],stop:[902,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[937,1,1,""],DefaultFloatDtype:[937,1,1,""],DefaultIntDtype:[937,1,1,""],astype:[937,2,1,""],cast:[941,2,1,""],closest_valid_dtype:[942,2,1,""],convert_dtype:[943,2,1,""],default_dtype:[944,2,1,""],default_float_dtype:[945,2,1,""],default_int_dtype:[946,2,1,""],dtype:[947,2,1,""],dtype_bits:[948,2,1,""],dtype_from_str:[949,2,1,""],dtype_to_str:[950,2,1,""],invalid_dtype:[951,2,1,""],is_float_dtype:[952,2,1,""],is_int_dtype:[953,2,1,""],set_default_dtype:[954,2,1,""],set_default_float_dtype:[955,2,1,""],set_default_int_dtype:[956,2,1,""],unset_default_dtype:[957,2,1,""],unset_default_float_dtype:[958,2,1,""],unset_default_int_dtype:[959,2,1,""],valid_dtype:[960,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[937,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[937,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[937,3,1,""]},"ivy.functional.ivy.core.general":{"default":[986,2,1,""],abs:[962,2,1,""],all_equal:[963,2,1,""],arange:[964,2,1,""],arg_names:[965,2,1,""],argmax:[966,2,1,""],argmin:[967,2,1,""],array:[968,2,1,""],array_equal:[969,2,1,""],arrays_equal:[970,2,1,""],asarray:[961,2,1,""],assert_supports_inplace:[971,2,1,""],broadcast_to:[972,2,1,""],cache_fn:[973,2,1,""],ceil:[974,2,1,""],clip:[975,2,1,""],clip_matrix_norm:[976,2,1,""],clip_vector_norm:[977,2,1,""],concatenate:[978,2,1,""],constant_pad:[979,2,1,""],container_types:[980,2,1,""],copy_array:[981,2,1,""],cross:[982,2,1,""],cumprod:[983,2,1,""],cumsum:[984,2,1,""],current_framework_str:[985,2,1,""],einops_rearrange:[987,2,1,""],einops_reduce:[988,2,1,""],einops_repeat:[989,2,1,""],equal:[990,2,1,""],exists:[991,2,1,""],expand_dims:[992,2,1,""],flip:[993,2,1,""],floor:[994,2,1,""],floormod:[995,2,1,""],fourier_encode:[996,2,1,""],full:[997,2,1,""],gather:[998,2,1,""],gather_nd:[999,2,1,""],get_all_arrays_in_memory:[1000,2,1,""],get_min_base:[1001,2,1,""],get_min_denominator:[1002,2,1,""],get_num_dims:[1003,2,1,""],get_referrers_recursive:[1004,2,1,""],has_nans:[1005,2,1,""],identity:[1006,2,1,""],indices_where:[1007,2,1,""],inplace_arrays_supported:[1008,2,1,""],inplace_decrement:[1009,2,1,""],inplace_increment:[1010,2,1,""],inplace_update:[1011,2,1,""],inplace_variables_supported:[1012,2,1,""],is_array:[1013,2,1,""],isinf:[1014,2,1,""],linear_resample:[1015,2,1,""],linspace:[1016,2,1,""],logspace:[1017,2,1,""],match_kwargs:[1018,2,1,""],matmul:[1019,2,1,""],maximum:[1020,2,1,""],meshgrid:[1021,2,1,""],minimum:[1022,2,1,""],multiprocessing:[1023,2,1,""],num_arrays_in_memory:[1024,2,1,""],one_hot:[1025,2,1,""],ones:[1026,2,1,""],ones_like:[1027,2,1,""],print_all_arrays_in_memory:[1028,2,1,""],queue_timeout:[1029,2,1,""],repeat:[1030,2,1,""],reshape:[1031,2,1,""],round:[1032,2,1,""],scatter_flat:[1033,2,1,""],scatter_nd:[1034,2,1,""],set_min_base:[1035,2,1,""],set_min_denominator:[1036,2,1,""],set_queue_timeout:[1037,2,1,""],set_tmp_dir:[1038,2,1,""],shape:[1039,2,1,""],shape_to_tuple:[1040,2,1,""],split:[1041,2,1,""],squeeze:[1042,2,1,""],stable_divide:[1043,2,1,""],stable_pow:[1044,2,1,""],stack:[1045,2,1,""],supports_inplace:[1046,2,1,""],swapaxes:[1047,2,1,""],tile:[1048,2,1,""],tmp_dir:[1049,2,1,""],to_list:[1050,2,1,""],to_numpy:[1051,2,1,""],to_scalar:[1052,2,1,""],transpose:[1053,2,1,""],try_else_none:[1054,2,1,""],unstack:[1055,2,1,""],value_is_nan:[1056,2,1,""],where:[1057,2,1,""],zero_pad:[1058,2,1,""],zeros_like:[1059,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1060,1,1,""],adam_step:[1062,2,1,""],adam_update:[1063,2,1,""],execute_with_gradients:[1064,2,1,""],gradient_descent_update:[1065,2,1,""],is_variable:[1066,2,1,""],lamb_update:[1067,2,1,""],lars_update:[1068,2,1,""],optimizer_update:[1069,2,1,""],set_with_grads:[1070,2,1,""],stop_gradient:[1071,2,1,""],unset_with_grads:[1072,2,1,""],variable:[1073,2,1,""],variable_data:[1074,2,1,""],with_grads:[1075,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1060,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1077,2,1,""],float_img_to_uint8_img:[1078,2,1,""],gradient_image:[1079,2,1,""],random_crop:[1080,2,1,""],stack_images:[1081,2,1,""],uint8_img_to_float_img:[1082,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1084,2,1,""],inv:[1085,2,1,""],matrix_norm:[1086,2,1,""],pinv:[1087,2,1,""],svd:[1088,2,1,""],vector_to_skew_symmetric_matrix:[1089,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1091,2,1,""],logical_or:[1092,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1094,2,1,""],acosh:[1095,2,1,""],asin:[1096,2,1,""],asinh:[1097,2,1,""],atan2:[1099,2,1,""],atan:[1098,2,1,""],atanh:[1100,2,1,""],cosh:[1101,2,1,""],divide:[1102,2,1,""],erf:[1103,2,1,""],exp:[1104,2,1,""],log:[1105,2,1,""],sin:[1106,2,1,""],sinh:[1107,2,1,""],tan:[1108,2,1,""],tanh:[1109,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1111,2,1,""],maml_step:[1112,2,1,""],reptile_step:[1113,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1114,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1159,2,1,""],copy_nest:[1160,2,1,""],index_nest:[1161,2,1,""],map:[1162,2,1,""],map_nest_at_index:[1163,2,1,""],map_nest_at_indices:[1164,2,1,""],multi_index_nest:[1165,2,1,""],nested_indices_where:[1166,2,1,""],nested_map:[1167,2,1,""],set_nest_at_index:[1168,2,1,""],set_nest_at_indices:[1169,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1171,2,1,""],randint:[1172,2,1,""],random_normal:[1173,2,1,""],random_uniform:[1174,2,1,""],seed:[1175,2,1,""],shuffle:[1176,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1178,2,1,""],reduce_max:[1179,2,1,""],reduce_mean:[1180,2,1,""],reduce_min:[1181,2,1,""],reduce_prod:[1182,2,1,""],reduce_std:[1183,2,1,""],reduce_sum:[1184,2,1,""],reduce_var:[1185,2,1,""]},"ivy.functional.ivy.nn":{activations:[1187,0,0,"-"],layers:[1195,0,0,"-"],losses:[1208,0,0,"-"],norms:[1212,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1188,2,1,""],leaky_relu:[1189,2,1,""],relu:[1190,2,1,""],sigmoid:[1191,2,1,""],softmax:[1192,2,1,""],softplus:[1193,2,1,""],tanh:[1194,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1196,2,1,""],conv1d_transpose:[1197,2,1,""],conv2d:[1198,2,1,""],conv2d_transpose:[1199,2,1,""],conv3d:[1200,2,1,""],conv3d_transpose:[1201,2,1,""],depthwise_conv2d:[1202,2,1,""],dropout:[1203,2,1,""],linear:[1204,2,1,""],lstm_update:[1205,2,1,""],multi_head_attention:[1206,2,1,""],scaled_dot_product_attention:[1207,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1209,2,1,""],cross_entropy:[1210,2,1,""],sparse_cross_entropy:[1211,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1213,2,1,""]},"ivy.graph_compiler":{compiler:[1214,0,0,"-"],globals:[1217,0,0,"-"],graph:[1220,0,0,"-"],helpers:[1222,0,0,"-"],op_logging:[1223,0,0,"-"],param:[1224,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1215,2,1,""],show_graph:[1216,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1218,2,1,""],log_global_inference_rel_times:[1219,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1220,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1220,3,1,""],add_fn_to_dict:[1220,3,1,""],add_param:[1220,3,1,""],compiled:[1220,3,1,""],connect:[1220,3,1,""],debug_info:[1220,3,1,""],get_param:[1220,3,1,""],get_param_recursive:[1220,3,1,""],include_generators:[1220,3,1,""],increment_param_count:[1220,3,1,""],log_all_ops:[1220,3,1,""],params_all_empty:[1220,3,1,""],save_debug_info:[1220,3,1,""],set_param:[1220,3,1,""],show:[1220,3,1,""],show_debug_info:[1220,3,1,""],update_inference_times:[1220,3,1,""],with_array_caching:[1220,3,1,""]},"ivy.graph_compiler.param":{Param:[1224,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1224,3,1,""],count:[1224,3,1,""],depth:[1224,3,1,""],get:[1224,3,1,""],is_var:[1224,3,1,""],ptype:[1224,3,1,""],set:[1224,3,1,""],set_count:[1224,3,1,""],shape:[1224,3,1,""]},"ivy.stateful":{activations:[1229,0,0,"-"],converters:[1232,0,0,"-"],initializers:[1234,0,0,"-"],layers:[1243,0,0,"-"],module:[1255,0,0,"-"],norms:[1257,0,0,"-"],optimizers:[1259,0,0,"-"],sequential:[1265,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1230,1,1,""],GELU:[1231,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1230,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1231,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1233,2,1,""]},"ivy.stateful.initializers":{Constant:[1234,1,1,""],FirstLayerSiren:[1236,1,1,""],GlorotUniform:[1237,1,1,""],KaimingNormal:[1234,1,1,""],Ones:[1239,1,1,""],Siren:[1240,1,1,""],Uniform:[1234,1,1,""],Zeros:[1242,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1234,3,1,""],create_variables:[1234,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1236,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1237,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1234,3,1,""],create_variables:[1234,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1239,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1240,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1234,3,1,""],create_variables:[1234,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1242,3,1,""]},"ivy.stateful.layers":{Conv1D:[1244,1,1,""],Conv1DTranspose:[1245,1,1,""],Conv2D:[1246,1,1,""],Conv2DTranspose:[1247,1,1,""],Conv3D:[1248,1,1,""],Conv3DTranspose:[1249,1,1,""],DepthwiseConv2D:[1250,1,1,""],Dropout:[1251,1,1,""],LSTM:[1252,1,1,""],Linear:[1253,1,1,""],MultiHeadAttention:[1254,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1244,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1245,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1246,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1247,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1248,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1249,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1250,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1251,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1252,3,1,""],get_initial_state:[1252,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1253,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1254,3,1,""]},"ivy.stateful.module":{Module:[1256,1,1,""]},"ivy.stateful.module.Module":{__init__:[1256,3,1,""],build:[1256,3,1,""],build_mode:[1256,3,1,""],built:[1256,3,1,""],check_submod_rets:[1256,3,1,""],compile_graph:[1256,3,1,""],compile_on_next_step:[1256,3,1,""],get_mod_key:[1256,3,1,""],mod_depth:[1256,3,1,""],mod_height:[1256,3,1,""],mod_with_top_mod_key_chain:[1256,3,1,""],save_weights:[1256,3,1,""],show_graph:[1256,3,1,""],show_mod_in_top_mod:[1256,3,1,""],show_structure:[1256,3,1,""],show_v_in_top_v:[1256,3,1,""],sub_mods:[1256,3,1,""],track_submod_call_order:[1256,3,1,""],track_submod_rets:[1256,3,1,""],v_with_top_v_key_chains:[1256,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1258,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1258,3,1,""]},"ivy.stateful.optimizers":{Adam:[1260,1,1,""],LAMB:[1261,1,1,""],LARS:[1262,1,1,""],Optimizer:[1263,1,1,""],SGD:[1264,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1260,3,1,""],set_state:[1260,3,1,""],state:[1260,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1261,3,1,""],set_state:[1261,3,1,""],state:[1261,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1262,3,1,""],set_state:[1262,3,1,""],state:[1262,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1263,3,1,""],compile_graph:[1263,3,1,""],compile_on_next_step:[1263,3,1,""],set_state:[1263,3,1,""],show_graph:[1263,3,1,""],step:[1263,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1264,3,1,""],set_state:[1264,3,1,""],state:[1264,3,1,""]},"ivy.stateful.sequential":{Sequential:[1266,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1266,3,1,""]},"ivy.verbosity":{cprint:[1271,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1270,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1259,1260,1261],"02886":1226,"100":[1114,1226,1268],"141592653589793":814,"2021":1226,"2102":1226,"360":[822,824,1093,1106,1108],"718281828459045":814,"754":[814,818,819,822,830],"999":[1060,1062,1063,1067,1259,1260,1261],"abstract":[887,902,1226,1259,1263],"boolean":[40,41,822,823,827,829,887,922,934,937,951,960,961,963,969,970,1005,1007,1008,1012,1013,1014,1046,1056,1060,1066,1090,1091,1092,1110,1111,1112,1114],"break":43,"case":[15,18,19,40,41,42,43,832,833,887,926,933,936,961,964,1031,1033,1034,1083,1086,1114,1158,1161,1165,1226,1243,1254,1255,1256,1259,1263,1272],"catch":[961,986],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,385,423,424,818,820,887,889,890,891,892,893,894,896,897,899,900,901,902,914,915,937,961,965,1018,1060,1074,1114,1158,1160,1167,1208,1210,1211,1220,1224,1226,1229,1230,1231,1232,1233,1234,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1272],"default":[15,18,19,40,41,42,43,815,816,817,832,833,835,836,839,840,842,843,844,885,886,887,896,897,904,905,909,910,911,912,913,916,917,918,919,926,929,930,931,936,937,944,945,946,947,961,963,964,966,967,976,977,978,979,982,983,984,993,996,997,998,1003,1005,1006,1015,1017,1018,1021,1023,1026,1029,1030,1033,1034,1037,1039,1041,1043,1044,1053,1055,1056,1060,1063,1065,1066,1067,1068,1069,1071,1075,1083,1086,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1170,1171,1173,1174,1177,1179,1180,1181,1182,1183,1184,1185,1187,1188,1192,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266],"final":[40,41,961,996,1016,1017,1114,1243,1254,1269],"float":[40,41,42,43,814,815,816,817,818,819,822,830,832,833,846,865,871,887,896,897,920,926,929,933,936,937,945,952,961,964,976,977,979,996,997,1001,1002,1017,1035,1036,1037,1043,1044,1060,1062,1063,1065,1067,1068,1069,1076,1078,1082,1093,1102,1110,1111,1112,1113,1114,1170,1173,1174,1187,1189,1195,1203,1206,1207,1208,1209,1210,1211,1212,1213,1243,1251,1254,1257,1258,1259,1260,1261,1262,1263,1264],"function":[15,40,41,43,383,384,387,388,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,814,816,817,819,820,823,824,825,826,827,828,829,830,832,833,836,840,843,844,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,889,890,891,892,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1226,1229,1230,1231,1259,1262,1263,1264,1268,1269,1272],"import":[43,1226,1269,1272],"int":[40,41,42,43,382,383,384,474,815,816,817,818,819,820,832,833,835,836,839,840,842,843,844,846,865,871,885,886,887,909,910,911,912,913,916,917,918,919,924,925,931,937,946,948,953,961,966,967,972,978,979,983,984,987,988,989,992,993,996,997,998,1003,1006,1015,1016,1017,1025,1026,1030,1031,1033,1034,1039,1040,1041,1042,1045,1047,1048,1053,1055,1058,1060,1062,1063,1067,1076,1080,1081,1083,1086,1110,1111,1112,1113,1114,1158,1167,1170,1171,1172,1174,1175,1177,1179,1180,1181,1182,1183,1184,1185,1187,1192,1195,1196,1197,1198,1199,1200,1201,1202,1206,1208,1210,1211,1212,1213,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1257,1258],"long":[1195,1205],"new":[40,41,43,474,815,816,817,822,825,937,941,961,962,972,987,988,989,992,996,997,998,999,1026,1031,1033,1034,1035,1036,1043,1044,1045,1060,1063,1065,1067,1068,1069,1076,1078,1080,1082,1093,1095,1097,1100,1101,1107,1109,1114,1158,1168,1169,1170,1171,1212,1213,1226,1232,1233,1243,1253,1257,1258,1259,1260,1261,1262,1263,1264,1269,1272],"public":[961,980],"return":[15,16,17,18,19,40,41,42,43,474,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844,846,865,871,885,886,887,896,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,925,926,930,931,932,933,934,936,937,941,942,943,944,945,946,947,948,949,950,951,952,953,960,961,962,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1003,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1030,1031,1032,1033,1034,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1071,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1226,1232,1233,1243,1252,1253,1259,1263,1268,1269,1272],"short":[1195,1205,1226,1272],"static":[40,41,885,886],"super":1114,"true":[40,41,42,425,431,459,462,474,475,822,826,832,833,839,840,842,843,844,885,886,887,961,963,971,973,991,996,1005,1007,1056,1057,1060,1063,1065,1066,1067,1068,1069,1071,1083,1086,1110,1111,1112,1113,1114,1158,1159,1166,1170,1171,1177,1179,1180,1181,1182,1183,1184,1185,1187,1188,1195,1203,1208,1209,1210,1211,1214,1215,1216,1220,1243,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264],"try":[40,41,961,1054,1114],"var":[40,41,1110,1111,1112,1272],"while":[40,41,42,1114],AND:[822,823,842,843,1090,1091],But:1272,For:[43,961,964,975,1045,1060,1066,1074,1093,1094,1226,1232,1233,1269,1272],Its:[1093,1098],NOT:[822,829],One:[40,41,961,988,1031,1170,1172,1272],Ones:[1226,1234],Such:[961,980],That:1269,The:[15,16,17,18,19,40,41,42,43,822,823,824,826,828,830,835,836,839,840,842,843,844,846,865,871,885,886,887,896,897,903,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,926,929,930,931,932,933,936,937,941,942,943,948,949,950,951,960,961,964,968,969,972,973,976,977,978,979,981,982,985,986,990,993,996,998,999,1006,1009,1010,1011,1013,1015,1017,1019,1021,1023,1026,1027,1030,1031,1033,1034,1035,1036,1037,1040,1041,1042,1043,1044,1045,1048,1056,1059,1060,1062,1063,1065,1067,1068,1069,1071,1074,1076,1078,1080,1082,1083,1086,1088,1093,1094,1096,1098,1102,1103,1104,1105,1106,1108,1110,1111,1112,1113,1114,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1226,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1269,1272],There:[43,1226,1269],These:[43,1226],Used:[1158,1159,1166,1255,1256],Using:[1226,1227,1272],With:[40,41,832,833,1083,1086,1177,1179,1180,1181,1182,1183,1184,1185,1226,1268,1272],__array__:[961,968],__call__:[1243,1254,1255,1256],__del__:1114,__dict__:[1114,1269],__enter__:1114,__exit__:1114,__getitem__:1114,__getstate__:1114,__init__:[40,41,42,43,59,60,81,206,385,386,423,424,503,627,887,888,895,896,897,898,899,900,901,902,937,938,939,940,1060,1061,1114,1118,1125,1220,1221,1224,1225,1226,1229,1230,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1272],__iter__:1114,__len__:1114,__next__:1114,__pow__:43,__repr__:1114,_assign_vari:1268,_axi:1114,_base:[1158,1159,1166],_compute_node_da_ratio:1114,_compute_node_strs_da:1114,_concat_unify_arrai:1114,_counter:1114,_cur_framework:[43,1114],_da_direct:1114,_da_directions_flip:1114,_da_step_tim:1114,_da_tim:1114,_da_tune_count:1114,_data:1114,_delta_da_dim_s:1114,_delta_sf:1114,_dict:1114,_dim_siz:1114,_first_da_tune_step:1114,_first_ns_tune_step:1114,_fn:1114,_forward:[1226,1268],_get_kalman_param:1272,_get_prior:1272,_get_some_model:1272,_handle_flat_arrays_in_out:43,_index:[1158,1159,1166],_input_queu:1114,_length:1114,_max_depth:1114,_max_node_dim_step_ratio:1114,_max_node_dim_step_s:1114,_max_split_factor_step_s:1114,_mean_unify_arrai:1114,_min_bas:[961,1044,1212,1213,1257,1258],_min_denomin:[961,1043],_min_node_dim_s:1114,_min_sf_tune_step:1114,_min_unit_node_tune_step:1114,_model:1272,_native_wrapp:43,_node_mapp:1114,_node_percent_mem:1114,_node_str:1114,_node_str_da_ratio:1114,_node_strs_da:1114,_node_strs_kei:1114,_node_strs_n:1114,_node_util:1114,_ns_step_tim:1114,_ns_time:1114,_ns_tune_count:1114,_num_nod:1114,_num_work:1114,_observed_config:1114,_output_queu:1114,_paramet:1268,_percent_mem_inc_per_sf:1114,_percent_mem_inc_per_unit_da_dim:1114,_percent_util_inc_per_unit_da_dim:1114,_ret_fn:1114,_safety_factor:1114,_save_dir:1114,_shift_da_split:1114,_shift_n:1114,_slice:1114,_step:[1259,1263],_sum_unify_arrai:1114,_timeout:1114,_tune:1114,_tune_da:1114,_tune_n:1114,_tune_step:1114,_unit_da_tune_count:1114,_unroll_step:1272,_with_node_mappig:1114,_worker:1114,_worker_class:1114,_worker_fn:1114,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,887,896,902,1114,1255,1256,1259,1263],abil:1226,abl:[40,41],about:[818,819,820],abov:[43,1170,1172],above_height:[40,41],abs:[286,425,548,673,961,1114],absolut:[40,41,961,962],abstractmethod:1114,accept:[15,43,1226],access:[40,41,1269],accord:[40,41,818,819,961,979,998,1033,1034,1053,1058],accordingli:[842,843,844],accur:[59,385,423,424,887,899,900,901,902,937,1060,1220,1224,1234,1236,1237,1239,1240,1242],aco:[761,1093],acosh:[761,1093],across:[40,41,887,896,897,906,907,909,910,911,912,913,919,929,930,961,966,967,969,970,1114,1158,1162],activ:[1188,1189,1190,1191,1192,1193,1194,1226,1230,1231],actual:1269,adam:[1060,1062,1063,1067,1226,1259,1261,1268],adam_step:1060,adam_upd:1060,adapt:[1060,1068,1259,1262],add:[40,41,43,1114,1208,1209,1210,1211,1212,1213,1226,1257,1258,1269],add_fn_to_dict:1220,add_param:1220,added:[43,961,1043,1044,1265,1266],adding:[961,972],addit:[40,41,43,961,987,988,989,1212,1213,1243,1253],adher:43,adjac:[961,964],adopt:[961,980],affect:[961,964],affin:[1257,1258],after:[822,830,961,1015,1060,1063,1064,1065,1067,1068,1069,1076,1077,1212,1213,1259,1260,1261,1262,1263,1264,1272],after_1:[961,979,1058],after_n:[961,979,1058],again:43,against:[40,41,832,833,1083,1086,1177,1179,1180,1181,1182,1183,1184,1185],agnost:[43,1226,1268,1269],aim:1272,algebra:[468,1083],algorithm:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250,1272],align:[40,41,43,961,972],aliv:[887,921,923,927,961,1000,1024,1028],all:[15,16,17,18,19,40,41,43,105,228,410,527,651,835,836,842,885,886,887,896,921,927,961,962,963,969,970,980,993,1000,1006,1028,1042,1110,1111,1112,1113,1114,1158,1159,1160,1166,1167,1170,1171,1174,1177,1179,1180,1181,1182,1183,1184,1185,1195,1205,1226,1269,1272],all_depth:[40,41],all_equ:961,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1158,all_tru:[40,41],alloc:[887,1114],allow:[961,1016,1017,1018,1255,1256],allow_dupl:[961,1018],alon:[887,926,936,1114,1226],along:[40,41,43,474,832,833,835,836,839,840,842,843,844,887,910,911,912,913,916,917,918,919,931,961,978,983,984,993,998,1015,1016,1017,1030,1041,1045,1048,1055,1083,1086,1110,1111,1112,1113,1114,1170,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185],alongsid:[1268,1269],alpha:[1187,1189],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,887,1114],also:[40,41,43,961,964,1060,1063,1110,1111,1112,1113,1158,1159,1160,1166,1167,1195,1204,1243,1253,1268],altern:1268,alwai:[40,41,43,1060,1066,1071],among:[40,41],amount:[887,933,1114,1226],angl:[1093,1094,1099],ani:[15,16,17,18,19,40,41,43,105,228,410,527,651,842,885,886,887,889,892,896,897,899,908,909,912,913,918,961,963,964,968,986,987,988,989,990,991,1005,1013,1018,1043,1044,1060,1064,1114,1158,1159,1162,1166,1167,1168,1169,1170,1174,1226,1232,1233,1255,1256,1268,1269,1272],anoth:[40,41,937,943,1226],another_backend:43,anyth:[43,1272],anywai:43,apart:43,api:[1226,1227],appear:[961,992],append:[40,41,1114],appli:[15,18,19,40,41,822,829,961,987,988,989,1060,1067,1068,1083,1088,1090,1091,1092,1110,1111,1112,1158,1162,1165,1167,1187,1188,1189,1190,1191,1192,1193,1194,1195,1204,1206,1207,1212,1213,1226,1229,1230,1231,1257,1258],applic:[1158,1162,1167,1195,1206,1207,1226,1272],approxim:[43,846,871,1187,1188],arang:[125,286,425,474,548,673,961,1016,1017],arbitrari:[40,41,887,916,917,919,1114],arc:[1093,1099],arcco:[1093,1094],arctan:[1093,1098],area:1226,arg:[15,16,17,40,41,43,59,63,887,896,909,913,919,931,961,987,988,989,1034,1114,1214,1215,1216,1220,1232,1233,1255,1256],arg_nam:961,arg_stateful_idx:[1214,1215,1216,1220,1255,1256],argmax:[125,425,548,673,961],argmin:[125,425,548,673,961],args_clon:1114,args_dist:1114,args_to_ivi:[15,1226],args_to_n:[15,1226],args_uni:1114,argsort:[102,225,407,524,648,839],argument:[15,16,17,18,19,40,41,42,43,59,63,885,886,887,896,897,909,913,919,961,964,965,973,986,1018,1034,1093,1094,1114,1158,1162,1232,1233,1255,1256],aris:[1226,1272],arithmet:[43,1177,1180,1183,1185],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:474,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,125,286,425,474,548,673,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844,865,871,887,905,906,907,910,911,912,913,916,917,918,919,921,923,927,931,932,937,941,947,952,953,961,962,963,964,966,967,969,970,971,972,974,975,976,977,978,979,981,982,983,984,987,988,989,990,992,993,994,995,996,997,998,999,1000,1003,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1039,1041,1042,1045,1046,1047,1048,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1062,1063,1066,1067,1071,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1114,1158,1160,1167,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1226,1227,1243,1251,1252,1254,1259,1263,1268,1269],arrang:[961,987],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,382,383,384,385,387,388,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844],array_builtin:[43,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884],array_equ:[286,673,961],array_lik:[474,961,968],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,961],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1226],arraywithgener:[22,1226],arraywithgradi:[24,1226],arraywithimag:[26,1226],arraywithlinalg:[28,1226],arraywithlog:[30,1226],arraywithmath:[32,1226],arraywithmeta:[34,1226],arraywithrandom:[36,1226],arraywithreduct:[38,1226],arriv:[40,41,42],articl:1226,arxiv:1226,as_arrai:[40,41,961,1003,1039],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[423,425,434,887,905,937,944,945,946,947],as_tensor:425,as_vari:[40,41],as_zero:[40,41],asarrai:[425,961],asin:[761,1093],asinh:[761,1093],aspect:[1076,1081],assert:[40,41,961,971,1114],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:961,associ:[43,1083,1089],assum:[1269,1272],astyp:[425,937],asynchron:[40,41,42],at_dev:[40,42,887,900,901],at_kei:[40,41],at_key_chain:[40,41],at_nod:1114,atan2:[761,1093],atan:[761,1093],atanh:[761,1093],attent:[1195,1206,1207,1243,1254],attribut:[0,6,40,41,818,819,820,961,1027,1059],audienc:[1226,1269],author:1226,avail:[40,41,887,922,924,925,934,961,988,1114],averag:[1060,1062,1063,1067,1110,1111,1112,1177,1180],average_across_step:[1110,1111,1112],avoid:[887,1114,1269],axes:[40,41,43,425,456,468,469,832,833,835,836,842,843,844,887,931,961,966,967,979,992,993,1047,1053,1058,1083,1086,1114,1177,1179,1180,1181,1182,1183,1184,1185],axes_length:[40,41,961,987,988,989],axi:[40,41,425,427,428,432,433,439,447,448,449,454,455,457,832,833,835,836,839,840,842,843,844,887,889,892,899,910,911,912,913,916,917,918,919,931,961,966,967,978,979,982,983,984,992,993,998,1015,1016,1017,1030,1041,1042,1045,1047,1048,1055,1058,1114,1170,1176,1177,1179,1180,1181,1182,1183,1184,1185,1187,1192,1208,1210,1211],axis0:[40,41,961,1047],axis1:[40,41,961,1047],back:[1255,1256,1259,1263],backend:[15,17,19,40,41,382,383,384,385,387,388,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,887,922,925,934,937,943,951,960,961,1008,1012,1060,1063,1065,1067,1068,1069,1074,1114,1226,1227,1232,1233,1259,1260,1261,1262,1263,1264,1268,1269,1272],background:[1226,1269],backprop:1272,backward:[842,843,844,1268],band:[961,996],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,385,423,424,425,449,846,871,887,889,890,891,892,893,894,896,897,899,900,901,902,937,961,1001,1017,1035,1044,1060,1114,1177,1178,1220,1224,1226,1229,1230,1231,1234,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1272],batch:[40,41,887,929,930,961,993,996,1006,1076,1080,1083,1088,1110,1111,1112,1113,1114,1195,1204,1212,1213,1257,1258],batch_shap:[425,441,961,993,1006,1025,1076,1077,1078,1079,1080,1081,1082,1083,1089,1170,1171,1195,1205,1206,1207,1243,1252],batch_siz:[474,475,1114,1170,1171,1195,1196,1197,1198,1199,1200,1201,1202],bayesian:1272,becaus:[43,961,964],becom:[961,975,1093,1099,1272],been:[961,987,988,989,1170,1171],befor:[40,41,43,887,931,1110,1111,1112,1114,1158,1167,1177,1179,1180,1181,1182,1183,1184,1185,1195,1206,1207,1272],before_1:[961,979,1058],before_n:[961,979,1058],begin:[1158,1159,1166,1269],behaviour:[43,1272],behind:[1060,1063,1065,1067,1068,1069,1226],being:[40,41,43,961,964,1029,1037,1114],belong:[40,41],below:[43,1226,1269,1272],below_depth:[40,41],benefit:1226,bernoul:[1195,1203,1243,1251],best:[961,1018,1226],beta1:[1060,1062,1063,1067,1259,1260,1261],beta2:[1060,1062,1063,1067,1259,1260,1261],beta:[1212,1213],between:[40,41,42,818,819,961,964,1158,1162,1170,1172,1208,1210,1211,1259,1261],bia:[1195,1204,1205,1243,1244,1245,1246,1247,1248,1249,1250,1253],bias_initi:[1243,1244,1245,1246,1247,1248,1249,1250,1253],bilinear:[1076,1077],bilinear_resampl:[161,341,464,591,747,1076],bilinearli:[1076,1077],binari:[822,823,1208,1209],binary_cross_entropi:1208,bit:[385,818,819,820,937,948,1076,1078,1082,1226],bitwis:[822,823],bitwise_and:[85,210,390,507,631,822],bitwise_oper:[0,7,8],block:[1226,1269],bool:[15,18,19,40,41,42,43,822,826,828,832,833,839,840,842,843,844,846,865,885,886,887,905,918,922,926,931,934,936,937,947,961,963,969,970,983,986,990,991,996,1003,1005,1013,1018,1039,1041,1055,1056,1057,1060,1063,1064,1065,1066,1067,1068,1069,1071,1083,1086,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1170,1171,1177,1179,1180,1181,1182,1183,1184,1185,1187,1188,1195,1203,1232,1233,1243,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264],both:[43,961,982],bottom:1226,boundari:[40,41,1170,1174],branch:[885,886],brittl:43,broadcast:[40,41,43,822,823,832,833,842,843,844,846,865,871,961,972,990,1020,1021,1022,1030,1083,1086,1093,1099,1102,1177,1179,1180,1181,1182,1183,1184,1185],broadcast_to:[286,673,961],build:[1114,1226,1243,1254,1255,1256],build_mod:[1243,1254,1255,1256],builder:1226,built:[887,961,964,1114,1243,1254,1255,1256],builtin:43,builtin_ab:[241,846],builtin_add:[241,846],builtin_and:[241,846],builtin_bool:[241,846],builtin_contain:[241,846],builtin_deepcopi:[241,846],builtin_dir:[241,846],builtin_eq:[241,846],builtin_float:[241,846],builtin_floordiv:[241,846],builtin_g:[241,846],builtin_getattr:[241,846],builtin_getattribut:[241,846],builtin_getitem:[241,846],builtin_gt:[241,846],builtin_int:[241,846],builtin_invert:[241,846],builtin_l:[241,846],builtin_lt:[241,536,660,846],builtin_mul:[241,846],builtin_n:[241,846],builtin_neg:[241,846],builtin_or:[241,846],builtin_po:[241,846],builtin_pow:[43,241,846],builtin_radd:[241,846],builtin_rand:[241,846],builtin_rfloordiv:[241,846],builtin_rmul:[241,846],builtin_ror:[241,846],builtin_rpow:[241,846],builtin_rsub:[241,846],builtin_rtruediv:[241,846],builtin_rxor:[241,846],builtin_setitem:[241,846],builtin_some_op:43,builtin_sub:[241,846],builtin_truediv:[241,846],builtin_xor:[241,846],bypass:1269,cach:[887,903,961,973],cache_fn:961,calcul:[40,41,42,43,822,830,846,871,1093,1102],call:[43,887,931,961,1029,1037,1054,1060,1064,1114,1158,1159,1162,1166,1243,1254,1255,1256,1259,1263,1269,1272],callabl:[40,41,885,886,887,896,897,931,961,973,986,988,1018,1054,1110,1111,1112,1113,1114,1158,1162,1163,1164,1166,1167,1195,1206],can:[43,887,929,930,931,961,1031,1076,1078,1114,1226,1268,1269,1272],cancel_join_thread:1114,captur:1226,cast:[40,41,125,286,425,548,673,937,961,978,1076,1078,1082],catch_except:[961,986],categori:43,ceil:[286,425,673,961,964],cell:[1195,1205,1243,1252],certain:[40,41,961,964,1016,1017],chain:[40,41,1110,1111,1112,1265,1266],chang:[887,961,1031,1114,1158,1160,1167,1226,1268],channel:[961,996,1076,1078,1079,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253],check:[15,16,17,18,19,40,41,887,926,936,937,942,951,960,961,971,991,1005,1013,1046,1056,1060,1066,1114,1158,1159,1166,1226,1269],check_nest:[1158,1166],check_shap:[40,41],check_submod_ret:[1255,1256],check_typ:[40,41],choic:[1226,1269],choleski:[751,1083],choos:[961,1057,1093,1099,1226],choose_random_framework:59,chosen:[40,41,961,964,1057],chunk:[887,929,930,931,1114],chunk_siz:[887,931,1114],circl:[1093,1094,1096],clark:1226,clear:[887,903,1114],clear_framework_stack:59,clear_mem_on_dev:[423,665,887],click:1226,clip:[40,41,286,425,673,961,976,977,1020,1022,1226],clip_matrix_norm:961,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,961],clipped_delta:1114,clone:[40,41,887,906,907,908,909,1114],clone_arrai:1114,clone_it:1114,clone_nest:1114,clonedit:1114,cloneditem:1114,clonednest:1114,close:[43,1076,1081,1093,1096,1114,1272],closest:[937,942],closest_valid_dtyp:937,code:[40,41,42,43,474,1226,1227,1268,1269],codebas:[887,929,930,1114,1226,1269,1272],codomain:[822,830],collect:[15,40,41,423,425,459,464,468,471,472,474,846,885,887,937,961,1060,1076,1083,1090,1093,1114,1158,1170,1177,1187,1195,1208,1212,1229,1243,1257,1259],color:[40,41,42,1270,1271],column:[961,1006],combin:[40,41,42,1076,1081,1226,1272],combined_batch_s:1114,come:1269,command:1226,commit:1272,common:[40,41,1093,1099],common_key_chain:[40,41],commun:[1226,1269],compar:[40,41,961,963,969,970],comparison_oper:[0,9,10],compat:[43,822,823,842,843,844,846,865,871,961,990,1031,1093,1102,1226,1272],compil:[286,425,673,1215,1216,1220,1226,1255,1256,1259,1260,1261,1262,1263,1264],compile_graph:[1214,1226,1255,1256,1259,1263],compile_on_next_step:[1255,1256,1259,1260,1261,1262,1263,1264],complet:[40,41,1114],complex:[1269,1272],compon:[961,982],composit:43,comput:[40,41,822,823,824,828,829,832,833,846,865,887,931,961,976,977,983,984,990,1019,1060,1062,1063,1064,1065,1067,1068,1069,1071,1073,1076,1079,1083,1084,1085,1086,1087,1090,1091,1092,1093,1094,1096,1098,1099,1103,1104,1105,1106,1108,1158,1162,1177,1178,1179,1180,1181,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1206,1208,1209,1210,1211],concat:[40,41,887,916,917,918,919,931,961,996,1114],concaten:[40,41,125,286,425,548,673,961,996,1114,1226],concatten:[40,41,887,916,917,918,919,931,1114],condit:[425,885,886,961,1057,1158,1166],conditon:[1158,1166],config:[40,41,1114],config_list:1114,configur:[40,41],conjunct:1269,connect:[1220,1243,1253,1254],consid:[40,41,832,833,1268,1272],consist:[40,41,887,919,1114,1177,1178,1255,1256,1269],constant:[887,896,897,961,979,1114,1158,1162,1208,1209,1210,1211,1212,1213,1234,1235,1239,1242,1255,1256,1257,1258,1269],constant_kwarg:1114,constant_pad:[286,425,548,673,961],constitu:[40,41],construct:[961,1048,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268],constructor:[40,41,42,961,965,1265,1266],consum:[887,1114],cont_feat_dim:[1195,1206],contaienr:[40,41],contain:[15,18,19,42,43,815,816,817,822,823,826,828,830,839,840,842,843,844,846,865,871,887,906,910,931,937,941,961,962,966,967,975,976,977,980,990,1005,1020,1022,1032,1043,1044,1060,1062,1063,1065,1067,1068,1069,1093,1102,1110,1111,1112,1113,1114,1170,1171,1177,1179,1180,1181,1183,1185,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[425,673,961],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[425,961,1023,1195,1206,1243,1254],context_dim:[1243,1254],contextmanag:[59,60],continu:[43,1114,1269],contract:[40,41,1177,1178],contribut:[1226,1227],contributor:1226,control:1226,conv1d:[191,371,488,804,1195,1226,1243],conv1d_transpos:[191,371,488,804,1195],conv1dtranspos:[1226,1243],conv2d:[191,371,488,616,804,1195,1226,1243],conv2d_transpos:[191,371,488,804,1195],conv2dtranspos:[1226,1243],conv3d:[191,371,488,616,804,1195,1226,1243],conv3d_transpos:[191,371,488,804,1195],conv3dtranspos:[1226,1243],convent:[40,41,1177,1178],conver:[887,903,914,926,933,936,1114],convers:[16,17,18,19,40,41,1114,1226],convert:[15,16,17,18,19,40,41,43,887,914,915,937,943,949,950,961,1040,1051,1052,1076,1078,1082,1083,1089,1114,1158,1160,1167,1226,1233],convert_dtyp:937,convolut:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],cool:43,cooler:43,coordin:[961,1021,1093,1094,1096,1099],copi:[40,41,474,961,981,1114,1158,1160],copy_arrai:[425,673,961],copy_nest:1158,core:[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,889,890,891,892,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1226],correct:[43,1226,1269],correctli:[40,41,832,833,1083,1086,1093,1099,1177,1179,1180,1181,1182,1183,1184,1185],correspond:[40,41,43,846,871,961,978,1170,1171],cos:[85,390,507,631,822,961,996,1093,1094,1108,1269],cosh:[85,390,507,631,761,822,1093],cosin:[822,824,825,1093,1094,1095,1101],cost:[1060,1062,1063,1065,1067,1068,1069,1110,1111,1112,1113],cost_fn:[1110,1113],could:1272,count:[40,41,835,836,842,843,844,1114,1177,1182,1184,1224],cprint:1270,cpu:[40,41,43,887,924,926,932,933,936,961,964,968,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1059,1114,1170,1171,1172,1173,1174,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266,1268,1269],creat:[40,41,815,816,817,887,896,897,961,964,968,997,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1050,1059,1060,1073,1114,1170,1171,1172,1173,1174,1226,1232,1233,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1272],create_if_abs:[40,41],create_vari:1234,creation:[40,41,42,43],creation_funct:[382,383,384,815,816,817],crop:[1076,1080],crop_siz:[1076,1080],cross:[286,673,961,1208,1209,1210,1211],cross_entropi:1208,cuda:[40,41,887,896,915,932,961,964,968,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1059,1114,1170,1171,1172,1173,1174,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266],cumprod:[125,286,425,673,961],cumsum:[673,961],cumul:[961,983,984],current:[40,41,42,43,887,896,920,921,923,927,937,943,951,960,961,985,1000,1008,1012,1024,1028,1114,1158,1159,1166,1226,1272],current_framework:59,current_framework_str:[425,673,961,1114],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1220,d_in:[1195,1196,1197,1198,1199,1200,1201],d_out:[1195,1196,1197,1198,1199,1200,1201],da_can_termin:1114,da_dim_s:[887,1114],da_direct:1114,da_tune_step:[887,1114],dai:1272,daniel:1226,data:[40,41,42,43,815,816,817,819,820,822,823,826,828,830,835,836,842,843,844,846,865,871,887,889,890,891,892,893,894,899,900,901,915,937,941,942,943,947,948,949,950,951,952,953,960,961,964,968,990,997,1006,1013,1026,1027,1031,1042,1046,1059,1060,1066,1074,1093,1102,1114,1195,1204,1226],data_format:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],data_type_funct:[385,387,388,818,819,820],dataset:[40,41],datatyp:[40,41,937,942,952,953],dcdw:[1060,1062,1063,1065,1067,1068],debug_info:1220,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1060,1067,1068,1259,1261,1262],decay_lambda:[1060,1067,1068,1259,1261,1262],decid:[40,41,1272],decompos:[1083,1084],decomposit:[1083,1084,1088],decor:43,decrement:[961,1009],dedic:[1060,1074,1232,1233],deep:[40,41,1226],deep_copi:[40,41],deeper:[887,909,913,919,1114,1158,1167,1226],deepli:[1158,1160],def:[43,60,81,206,386,503,627,888,895,898,938,939,940,1061,1114,1118,1125,1221,1225,1226,1235,1238,1241,1268,1269,1272],default_dev:43,default_devic:887,default_dtyp:[43,937],default_float_dtyp:937,default_int_dtyp:937,default_key_color:[40,41,42],default_nod:1114,default_rng:474,default_v:[961,986],defaultdevic:[887,888],defaultdtyp:[937,938],defaultfloatdtyp:[937,939],defaultintdtyp:[937,940],defer:43,defin:[43,961,982,1025,1027,1059,1170,1172],degre:[822,824,1093,1106,1108],del:1114,delta:[1060,1062,1114,1220],delta_dim_s:1114,delta_percent_mem:1114,delta_sf:1114,delta_util:1114,demo:1226,denomin:[961,995,1002,1036,1043,1044,1212,1213,1257,1258],dens:[1243,1253],depend:[43,846,871,961,1057,1083,1088,1226],depth:[40,41,425,450,887,909,913,919,961,1004,1025,1114,1158,1167,1220,1224,1255,1256],depth_cutoff:[40,41],depthwis:[1195,1202,1243,1250],depthwise_conv2d:[191,371,488,616,804,1195],depthwiseconv2d:[1226,1243],deriv:[1060,1062,1063,1065,1067,1068,1069,1158,1160,1167,1226,1255,1259,1263,1265],descend:[839,840,1083,1088],descent:[1060,1065,1259,1264],describ:[40,41,1177,1178],design:[1226,1227],desir:[40,41,887,932,937,941,961,964,968,1006,1007,1026,1027,1059,1076,1081,1114,1177,1179,1180,1181,1183,1185],desired_aspect_ratio:[464,467,1076,1081],desired_percent_increas:1114,detail:1272,detect:[40,41,1158,1159,1166],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,822,823,826,830,842,843,844,846,871,887,922,924,925,934,937,941,942,948,951,952,953,960,961,963,964,968,969,970,1005,1008,1012,1013,1046,1056,1060,1066,1093,1102,1110,1111,1112,1113,1114,1195,1206],dev:[40,41,42,43,118,280,423,425,426,429,439,440,441,448,449,450,451,452,453,458,474,475,541,665,887,890,891,893,894,896,897,900,901,903,904,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,926,927,928,929,930,931,932,933,936,961,964,968,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1059,1060,1075,1170,1171,1172,1173,1174,1232,1233,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266],dev_clon:[40,41,887],dev_clone_arrai:887,dev_clone_it:887,dev_clone_nest:887,dev_dist:[40,41,887],dev_dist_arrai:887,dev_dist_it:887,dev_dist_nest:887,dev_from_str:[43,118,280,423,541,665,887],dev_mapp:887,dev_str:[40,41],dev_to_str:[118,280,423,541,665,887],dev_unifi:887,dev_unify_arrai:887,dev_unify_it:887,dev_unify_nest:887,dev_util:887,devclonedit:887,devcloneditem:887,devclonednest:887,devdistit:887,devdistitem:887,devdistnest:887,develop:[1226,1269,1272],deviat:[40,41,1170,1173,1177,1183,1212,1213,1257,1258],devic:[21,40,41,43,382,383,384,424,425,438,815,816,817,889,890,891,892,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,961,964,968,997,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1059,1060,1075,1170,1171,1172,1173,1174,1226,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266],devmanag:[887,895],devmapp:[887,897],devmappermultiproc:887,diag:[1083,1088],diagon:[961,1006],dict:[15,16,17,18,19,40,41,42,887,889,892,896,897,899,909,910,911,912,913,961,987,988,989,1018,1110,1111,1112,1114,1158,1160,1161,1162,1165,1167,1232,1233],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,818,819,887,906,907,910,911,1114,1195,1204,1226,1269,1272],differenti:[1226,1269],dilat:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],dim:[40,41,43,961,1025,1076,1077,1081,1083,1088,1114,1243,1254],dim_siz:[40,41,887,1114],dimens:[40,41,42,832,833,835,836,842,843,844,887,918,961,972,978,982,987,988,989,992,996,1003,1015,1025,1030,1031,1041,1042,1045,1053,1055,1076,1080,1083,1086,1088,1110,1111,1112,1113,1114,1170,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1192,1195,1196,1197,1198,1199,1200,1201,1202,1205,1208,1210,1211,1243,1244,1245,1246,1247,1248,1249,1250,1253,1254],dimension:[40,41,474,842,843,844,961,1041,1042,1083,1088],direct:1114,directli:[43,1158,1167,1269,1272],directori:[961,1038,1049],discret:[1208,1210],disk:[40,41,1076,1078],distanc:[961,964],distribut:[40,41,887,906,910,911,912,913,1114,1170,1171,1172,1173,1174,1195,1203,1243,1251,1255,1256],distribute_nest:1114,distributedarrai:[40,41],distrubt:[1208,1210],dive:[1226,1269],divid:[40,41,961,1041,1043,1093],dividend:[1093,1102],divis:[961,995,1002,1036,1043,1044,1060,1062,1063,1067,1093,1102,1259,1260,1261],divisor:[1060,1062,1063,1067,1093,1102,1259,1260,1261],doc:1226,docstr:43,doe:[40,41,43,961,964,1041,1268],doesn:1226,doing:43,domain:[822,830,1093,1094],don:1226,door:1272,dot:[1083,1085,1195,1206,1207,1243,1254],down:1268,downscal:[961,976,977],drag:[1226,1272],draw:[1170,1171,1173,1174],drawn:[1170,1171,1172,1173,1174],drop:[1226,1272],dropout:[1195,1226,1243,1254],dropout_r:[1243,1254],ds_tune_step:887,dtype:[40,41,43,125,286,382,383,384,385,387,388,425,426,429,430,438,441,451,458,548,673,815,816,817,818,819,820,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,964,968,997,1006,1025,1026,1027,1059],dtype_bit:[125,286,425,548,673,937],dtype_from_str:[43,125,286,425,548,673,937],dtype_in:[425,435,436,437,937,943,948,949,950,951,952,953,960],dtype_to_str:[125,286,425,548,673,937],duplic:[40,41],dure:[40,41,43,885,886,961,1054,1060,1062,1063,1067,1110,1111,1112,1113,1255,1256,1259,1260,1261,1263],dynam:[425,431,885,886],each:[40,41,42,43,822,823,826,828,830,839,840,846,865,871,887,896,897,906,907,908,909,910,911,912,918,930,931,961,962,963,979,990,1030,1041,1045,1048,1058,1060,1063,1065,1067,1068,1069,1076,1079,1083,1088,1093,1096,1102,1104,1105,1114,1158,1162,1170,1171,1177,1178,1195,1196,1197,1198,1199,1200,1201,1202,1203,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1269],eager:1269,easi:1272,easili:1226,econom:1272,ecosystem:1226,edg:[961,975,979,1058],effect:[1060,1069],effective_grad:[1060,1069],effici:1272,einop:[40,41,961,987,988,989],einops_rearrang:[40,41,961],einops_reduc:[40,41,961],einops_repeat:[40,41,961],einstein:[40,41,1177,1178],einsum:[40,41,177,359,476,606,784,1177],either:[40,41,961,986,1018,1021,1023,1110,1111,1112,1113,1114,1243,1254,1255,1256,1269],eleg:1114,element:[40,41,43,474,822,823,824,825,826,828,829,830,835,836,839,840,842,843,844,846,865,871,887,908,912,918,937,941,961,962,964,966,967,969,970,974,975,976,977,983,984,990,993,994,995,1006,1007,1020,1022,1030,1032,1041,1052,1057,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1114,1177,1178,1180,1182,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1203,1243,1251],elementwis:[40,41],elementwise_affin:[1257,1258],elementwise_funct:[822,823,824,825,826,827,828,829,830],elemtn:[1170,1171],elif:1114,els:[961,971,986,991,1114],elsewher:[961,1057],emphas:1226,empti:[40,41,1114],enabl:[40,41,42,1226],encapsul:[818,820],encod:[961,996,1076,1078],end:[961,964,1226,1269],ensur:43,entir:[40,41,842,843,844,887,931,1114,1226,1243,1252],entri:[40,41,961,993,1016,1017,1041,1042],entropi:[1208,1209,1210,1211],enumer:1114,environ:1226,eps:[385,818,819],epsilon:[1060,1062,1063,1067,1208,1209,1210,1211,1212,1213,1257,1258,1259,1260,1261],equal:[40,41,425,548,673,822,824,826,961,963,969,970,979,1041,1058,1093,1106,1108,1170,1174],equality_matrix:[961,963],equat:[40,41,1177,1178],equival:[961,964,1093,1108],erf:[472,761,1093],error:[40,41,887,961,1042,1093,1103,1114,1187,1188,1255,1256,1259,1263],essenti:43,etc:[40,41,43,887,932,961,964,968,998,999,1006,1016,1017,1025,1026,1027,1033,1034,1059,1114,1170,1171,1172,1173,1174,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266,1272],euler:814,evalu:[40,41,842,843,844,961,1021,1158,1159,1166],even:1272,evenli:[40,41,961,964,1016,1017,1041],everi:[961,963,1272],exact:[40,41],exampl:[43,885,886,961,975,1045,1226,1268,1269,1272],example_input:[425,431,885,886],exc_tb:1114,exc_typ:1114,exc_val:1114,exce:[961,1022],except:[40,41,44,47,842,843,844,961,964,971,978,986,1054,1114],excess_s:1114,excit:[1226,1269],exclud:[59,61,961,964,1170,1174],exclus:[40,41,425,433,446,459,461,961,983,1013,1060,1066,1170,1172],execut:[43,961,1054,1269],execute_with_gradi:[158,336,459,586,741,1060,1226,1268],exist:[40,41,961,986,1114,1226,1259,1263,1272],exp:[761,1093],expand:[40,41,961,992,996],expand_dim:[40,41,286,673,961,1114],expect:[961,965],explain:1269,explicitli:[1243,1252,1254,1255,1256,1269],expon:[43,846,871,961,1044],exponenti:[43,846,871,1093,1103,1104],expos:[961,968,980],express:[961,1021],exsit:[40,41],extend:43,extra:[40,41,42,1060,1064],eye:[1083,1085],fabian:1226,fabio:1226,factor:[887,896,929,930,931,1060,1062,1063,1067,1068,1083,1088,1114,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250,1259,1260,1261,1262],falck:1226,fall:[1255,1256,1259,1263],fallback_to_non_compil:[1255,1256,1259,1263],fals:[15,18,19,40,41,42,59,66,67,68,69,70,423,425,433,434,446,454,457,459,460,461,468,469,822,826,832,833,839,840,842,843,844,887,905,918,926,931,936,937,944,945,946,947,961,963,983,986,991,996,1003,1013,1018,1039,1041,1055,1057,1060,1063,1064,1065,1066,1067,1068,1069,1083,1086,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1177,1179,1180,1181,1182,1183,1184,1185,1214,1215,1216,1220,1224,1232,1233,1255,1256,1259,1260,1261,1262,1263,1264],fan_in:1234,fan_mod:1234,fan_out:1234,far:[1158,1159,1166,1268],faster:[885,886],favourit:[1226,1268],feasibl:1272,feat_dim:[1195,1206,1207],fed:[887,931,1114],feed:[887,931,1114],field:1272,file:[40,41,43,961,1038,1049,1255,1256],filepath:[40,41],fill:[40,41,815,816,817,961,997,1026,1170,1172],fill_valu:[425,438,961,997],filter:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250,1272],filter_s:[1243,1244,1245],filter_shap:[1243,1246,1247,1248,1249,1250],find:[40,41,1272],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,205,206,385,386,502,503,626,627,818],finish:[1226,1272],finit:[822,826],first:[40,41,474,822,823,885,886,887,918,961,969,978,982,990,1016,1017,1045,1047,1060,1064,1083,1088,1110,1111,1112,1113,1114,1158,1159,1166,1170,1176,1177,1182,1184,1243,1254,1255,1256,1259,1263,1269,1272],firstlayersiren:[1226,1234],firstli:[1269,1272],fist:[887,931,1114],fit:[40,41,423,425,459,464,468,471,472,474,961,1030,1076,1081],fkt:1272,flag:[40,41,1060,1066],flat:[40,41,43,961,1030,1033],flat_list:[40,41],flatten:[40,41,832,833,961,996,1030,1177,1179,1180,1181,1183,1185],flatten_key_chain:[40,41,1255,1256],flexibl:[1226,1269],flip:[40,41,98,221,403,520,644,835,961],float32:[43,425,441,937,941,949,950,961,964,968,1006,1026,1027,1059],float_dtyp:[937,945,955],float_img_to_uint8_img:1076,floor:[286,425,673,961,995,1114],floormod:[286,425,673,961],fluid:1272,fname:[1214,1216,1220,1255,1256],folder:[43,1226],follow:[40,41,43,818,820,887,931,961,1009,1010,1011,1043,1044,1060,1063,1065,1067,1068,1069,1114,1158,1162,1167,1195,1206,1207,1226,1243,1253,1259,1263],followng:[818,819],fomaml_step:1110,forget:[1060,1062,1063,1067,1259,1260,1261],fork:[961,1023],forkserv:[961,1023,1114],form:[15,16,17,18,19,40,41,961,968,1060,1063,1065,1067,1068,1069,1158,1160,1167,1195],format:[40,41,43,887,905,937,941,943,947,961,964,968,1006,1026,1027,1059,1114,1177,1178,1226,1268,1269],format_fn:[40,41],format_key_chain:[40,41],forward:[1255,1256,1259,1263,1268],found:[40,41,42],fourier:[961,996],fourier_encod:961,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,96,99,103,106,107,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,171,172,173,174,175,176,178,179,180,181,182,183,184,187,189,190,192,193,194,195,196,197,198,203,204,206,207,208,211,212,213,214,215,216,219,222,226,229,230,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,342,343,344,346,347,348,349,351,352,355,356,357,358,360,361,362,363,364,365,366,367,370,372,373,374,375,376,377,378,383,384,386,387,388,391,392,393,394,395,396,397,398,401,404,408,411,412,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,465,466,467,469,470,473,475,477,478,479,480,481,482,483,486,487,489,490,491,492,493,494,495,500,501,503,504,505,508,509,510,511,512,513,514,515,518,521,525,528,529,537,542,543,544,545,546,547,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,587,588,589,590,592,593,594,596,597,598,602,603,604,605,607,608,609,610,611,612,613,617,618,619,624,625,627,628,629,632,633,634,635,636,637,638,639,642,645,649,652,653,661,666,667,668,669,670,671,672,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,742,743,744,745,746,748,749,750,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,778,779,780,781,782,783,785,786,787,788,789,790,791,794,795,796,797,798,799,800,802,803,805,806,807,808,809,810,811,816,817,819,820,822,823,824,825,826,827,828,829,830,833,836,839,840,843,844,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1084,1085,1086,1087,1088,1089,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1213,1215,1216,1218,1219,1221,1225,1226,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1271,1272],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1114,framewrk:[961,1023],freeli:43,frequenc:[961,996],from:[40,41,42,43,822,828,830,835,836,839,840,842,843,844,887,896,897,931,937,943,961,986,993,998,999,1006,1031,1042,1050,1057,1060,1063,1067,1076,1080,1110,1111,1112,1113,1114,1158,1160,1167,1170,1171,1172,1173,1174,1177,1182,1184,1195,1203,1206,1226,1232,1233,1243,1251,1254,1259,1263,1268,1269],from_cal:[1255,1256],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[125,286,425,548,673,818,819,961,1226],full_matric:[1083,1088],fulli:[43,1226,1243,1253,1254,1268],func:[40,41,425,431,459,460,885,886,887,931,961,973,1060,1064,1114],further:1272,furthermor:1272,futur:1272,gain:1234,gamma:[1212,1213],gather:[40,41,125,286,425,548,673,961,999],gather_nd:[40,41,125,286,425,548,673,961],gauss:[1093,1103],gaussian:[1187,1188],geglu:[1226,1229],gelu:[369,485,793,1187,1226,1229],gener:[23,40,41,43,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,474,885,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1066,1170,1172,1174,1175,1226,1259,1263],geometr:[961,996],get:[40,41,818,819,820,887,896,897,905,920,921,926,930,933,936,937,947,948,961,965,1000,1001,1002,1029,1114,1224,1226,1243,1252,1272],get_all_arrays_in_memori:961,get_all_arrays_on_dev:887,get_framework:59,get_initial_st:[1243,1252],get_min_bas:961,get_min_denomin:961,get_mod_kei:[1255,1256],get_num_dim:[425,673,961],get_param:1220,get_param_recurs:1220,get_referrers_recurs:961,getfullargspec:1114,gist:1226,give:[839,840,961,1031,1269],given:[40,41,43,815,816,817,835,836,839,840,887,920,926,929,930,931,933,936,937,941,961,964,968,975,983,984,993,999,1016,1017,1026,1027,1030,1033,1034,1041,1048,1053,1055,1059,1060,1062,1063,1065,1067,1068,1069,1083,1085,1089,1093,1094,1114,1158,1163,1164,1170,1173,1174,1176,1177,1180,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1232,1233,1272],global:[40,41,42,887,896,897,904,929,930,931,937,944,945,946,961,985,1001,1002,1029,1035,1036,1037,1043,1044,1060,1075,1114,1212,1213,1218,1219,1226,1257,1258],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1226,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253],got:1226,gpu0:43,gpu2:43,gpu:[887,922,925,1114],gpu_is_avail:[423,887,1114],grad:[1226,1259,1263,1268],gradient:[25,40,41,460,461,462,463,887,931,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1079,1110,1111,1112,1113,1226,1259,1260,1261,1262,1263,1264,1268,1272],gradient_descent_upd:[1060,1110,1111,1112,1113],gradient_imag:[161,341,464,591,747,1076],gradienttrack:[1060,1061],graph:[1060,1063,1065,1067,1068,1069,1214,1215,1216,1221,1226,1255,1256],graph_compil:[1214,1215,1216,1217,1218,1219,1220,1224],greater:[40,41,961,964,994,1042,1170,1174],green:[40,41,42,1270,1271],grid:[961,1021],group:[1076,1081],guid:[1226,1227,1272],gym:1226,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1272,half:[961,964,1114,1170,1174],hand:1226,handl:[40,41,42,43,885,886,887,903,905,914,915,926,933,936,1060,1063,1065,1067,1068,1069,1114,1259,1260,1261,1262,1263,1264],has:[40,41,43,961,1045,1093,1098],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,961],hasattr:1114,have:[40,41,43,818,819,822,823,826,828,830,835,836,842,843,844,846,865,871,961,978,982,987,988,989,990,997,1045,1060,1066,1074,1083,1088,1093,1102,1114,1226,1268,1269],hdf5:[40,41,1255,1256],head:[1195,1206,1243,1254],head_dim:[1243,1254],height:[1076,1081],height_cutoff:[40,41],help:[59,385,423,424,887,899,900,901,902,937,1060,1220,1224,1226,1234,1236,1237,1239,1240,1242],helper:1226,here:[43,1226],hidden:[1195,1205,1243,1252],hierarch:[961,980],hierarchi:[40,41],high:[40,41,474,1170,1172,1174],higher:[1060,1063,1065,1067,1068,1069,1083,1088],highest:[1170,1172],highest_util:1114,highest_util_nod:1114,highli:1226,highlight:1272,highlight_subgraph:[1214,1216,1220],hint:43,hkt:1272,hold:[937,941,961,964,968,1033,1034],host:1226,hot:[961,1025],how:[1226,1243,1254,1255,1256,1269,1272],howev:[43,1269],http:1272,hyperbol:[822,825,1093,1095,1097,1100,1101,1107,1109,1187,1194],hypothet:1272,icon:1226,idea:1226,ident:[40,41,43,125,286,425,548,673,961],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[814,818,819,822,830],if_exist:[40,41],ignor:[40,41,1259,1263],ignore_key_error:[40,41],ignore_miss:[1259,1263],ignore_non:[40,41],iinfo:[80,205,385,502,626,818],imag:[27,465,466,467,961,1015,1077,1078,1079,1080,1081,1082,1195,1196,1197,1198,1199,1201,1202,1226,1272],image_dim:[1076,1080],imkkhk:1272,immedi:[1226,1269,1272],implement:[43,846,871,1226,1269,1272],in_featur:[1195,1204],includ:[40,41,43,842,843,844,961,964,1005,1043,1044,1056,1158,1159,1170,1174,1243,1253,1254,1257,1258,1268],include_deriv:[1158,1160,1167],include_empti:[40,41],include_gener:[1214,1215,1216,1220,1255,1256],include_inf:[40,41,961,1005,1056],include_nest:[1158,1159],include_self:[40,41],inclus:[1170,1172],incom:[1195,1204],increas:[887,909,913,919,961,979,992,1058,1114,1158,1167],increasingli:1272,increment:[961,1010,1114],increment_param_count:1220,inde:1226,indent:[40,41,42],independ:[1170,1171],index:[40,41,425,474,961,966,967,998,999,1021,1042,1045,1158,1161,1163,1164,1165,1168],index_nest:1158,indic:[40,41,425,439,440,450,452,453,839,840,961,966,967,998,999,1007,1025,1033,1034,1158,1159,1161,1163,1164,1165,1166,1168,1169,1170,1171,1187,1192,1195,1196,1197,1198,1199,1200,1201,1202,1212,1213,1243,1244,1245,1246,1247,1248,1249,1250,1255,1256],indices_wher:[125,286,425,673,961],indistinguish:[822,830],inevit:1272,inf:[40,41,832,833,961,1005,1014,1056,1093,1098],infer:[822,828,839,840,885,886,961,993,1003,1006,1031,1039,1076,1080,1269,1272],infin:[822,826,830,961,1014],infinit:[822,830],inform:[818,819,820,1060,1071],init_c:[1195,1205],init_h:[1195,1205],init_on_first_step:[1259,1263],initi:[40,41,42,59,385,423,424,887,899,900,901,902,937,1060,1114,1195,1205,1220,1224,1226,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1259,1263],initialz:[1255,1256],inner:[1110,1111,1112,1113],inner_batch_fn:[1110,1111,1112],inner_batch_shap:[1195,1204],inner_cost_fn:[1110,1111,1112],inner_grad_step:[1110,1111,1112,1113],inner_learning_r:[1110,1111,1112,1113],inner_optimization_step:[1110,1111,1112,1113],inner_v:[1110,1111,1112],inp:1114,inplac:[40,41,961,971,1008,1012,1046,1060,1063,1065,1067,1068,1069,1232,1233,1259,1260,1261,1262,1263,1264],inplace_arrays_support:[425,961],inplace_decr:[125,286,425,548,673,961],inplace_incr:[125,286,425,548,673,961],inplace_oper:[0,11,12],inplace_upd:[40,41,125,286,425,548,673,961,1232,1233],inplace_variables_support:[425,961],input:[15,18,19,40,41,42,43,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844,885,886,887,896,897,904,905,906,909,910,913,919,931,932,937,941,942,944,945,946,947,948,952,953,961,962,963,966,967,969,970,971,972,974,975,976,977,978,979,981,983,984,986,987,988,989,990,991,992,993,994,995,996,1003,1005,1006,1007,1009,1010,1011,1013,1014,1015,1019,1020,1021,1022,1030,1032,1039,1040,1042,1045,1046,1047,1048,1050,1051,1052,1053,1055,1056,1058,1060,1064,1066,1071,1075,1076,1077,1078,1079,1080,1082,1083,1086,1088,1090,1091,1092,1093,1095,1097,1098,1100,1101,1102,1106,1107,1108,1109,1110,1111,1112,1113,1114,1170,1171,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1212,1213,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1257,1258,1269],input_ax:[887,931,1114],input_channel:[1243,1244,1245,1246,1247,1248,1249,1252,1253],input_queu:1114,inputs_split:1114,insert:[961,992],insid:43,inspect:1114,inspir:1272,instal:1226,instanc:[15,16,17,18,19,40,41,43,474,846,865,871,887,896,1114,1232,1233,1265,1266],instead:[40,41,474,1177,1179,1180,1181,1182,1183,1184,1185,1272],int32:43,int64:[937,941,961,964,968,1006,1026,1027,1059],int_dtyp:[937,946,956],integ:[40,41,474,818,820,822,823,832,833,842,843,844,937,953,961,964,974,994,1032,1041,1170,1172,1175],integr:1226,intend:43,inter:1226,interchang:[40,41,961,1047],interest:1226,interfac:[961,968,1269],intermedi:[40,41],intern:[40,41,887,1060,1074,1114,1158,1159,1166,1167,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1265,1266],interpol:[961,1015],intersect:[1093,1094],interv:[40,41,842,843,844,961,964,975,1016,1017,1093,1096,1170,1174],introduc:1272,inv:[751,1083,1272],invalid:[842,843,844],invalid_dtyp:937,invers:[1083,1085,1087,1093,1094,1095,1096,1097,1098,1100,1272],invert:[1083,1085,1087],invest:1272,invoc:[885,886],irrespect:1226,is_al:1114,is_arrai:[125,286,425,548,673,961,1114],is_float_dtyp:937,is_int_dtyp:937,is_mean:1114,is_sum:1114,is_var:[1220,1224],is_vari:[158,336,459,586,741,1060],isfinit:[85,210,390,507,631,822],isinf:[286,548,673,961],isinst:1114,isnan:[85,210,390,507,631,822],isnumer:1114,item:[15,19,40,41,846,858,859,887,896,897,899,906,908,910,912,918,937,944,961,980,1004,1043,1044,1114,1158,1162,1163,1164,1167,1168,1169,1226,1255,1256,1268],iter:[15,16,17,18,19,40,41,42,885,886,887,890,891,893,894,896,897,900,901,908,910,911,912,913,918,931,961,963,972,978,979,993,1006,1021,1026,1030,1031,1034,1039,1041,1045,1048,1053,1058,1114,1158,1159,1160,1162,1166,1167],iterbal:[887,908,912,918,1114],its:[474,839,840,887,931,961,1006,1031,1047,1053,1114,1226],itself:[43,1158,1167],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,382,383,384,385,387,388,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,889,890,891,892,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1224,1226,1227,1229,1230,1231,1232,1233,1234,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1270,1271],ivy_backend:[40,41],ivy_bay:1272,ivyfcmodel:1268,ivyh:[40,41,42],ivymodul:[188,801],jame:1226,jax:[1060,1066,1226,1272],jax_concat:1226,jnp:1226,join:[40,41,961,978,1045,1114],journal:1226,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1226,1243,1252,1272],kaimingnorm:[1234,1238],kalman:1272,kalman_filt:1272,kalman_filter_step:1272,kalman_filter_upd:1272,keep:[40,41,887,932,961,1055,1114,1226,1272],keep_inner_v:[1110,1111,1112],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1110,1111,1112],keepdim:[40,41,425,457,468,469,832,833,842,843,844,961,1055,1083,1086,1177,1179,1180,1181,1182,1183,1184,1185],kei:[15,16,17,40,41,42,846,851,887,899,961,980,1110,1111,1112,1114,1158,1161,1165,1195,1206,1207,1226,1232,1233,1243,1254,1259,1263],kept:[40,41,42,1110,1111,1112],kera:1272,kernel:[1195,1205],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,887,896,897,909,913,919,961,965,987,988,989,1018,1114,1158,1162,1255,1256],keyword_color_dict:[40,41,42],kind:[818,819,820,1272],kwarg:[15,16,17,40,41,42,59,63,887,896,909,913,919,961,1018,1114,1214,1215,1216,1220,1232,1233,1255,1256],kwarg_stateful_idx:[1214,1215,1216,1220,1255,1256],kwargs_clon:1114,kwargs_dist:1114,kwargs_uni:1114,label:[1208,1209,1210,1211],lamb:[1060,1067,1226,1259],lamb_upd:1060,lambda:[1114,1259,1262,1264,1268],lar:[1060,1067,1068,1226,1259],larger:[818,819,961,975],largest:[40,41,818,819,820,961,966,994],lars_upd:1060,last:[40,41,835,836,842,843,844,961,964,982,1015,1041,1045,1083,1086,1088,1177,1182,1184,1187,1192,1195,1205,1243,1253],later:[40,41,961,973],latest:[1243,1252],layer:[1060,1063,1065,1067,1069,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1212,1213,1226,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266,1272],layer_norm:1212,layernorm:[1226,1257],layerwis:[1060,1068,1259,1262],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1158,1159,1166],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1187,1188,1189],leaky_relu:[793,1187],learn:[822,828,839,840,1060,1063,1065,1067,1068,1069,1110,1111,1112,1113,1170,1176,1226,1259,1260,1261,1262,1263,1264,1269,1272],learnabl:[1212,1213,1257,1258],leav:[15,18,19,40,41,1158,1159,1160,1166,1167],left:[40,41,832,833,1083,1086,1177,1179,1180,1181,1182,1183,1184,1185,1226],leftmost:[40,41],len:1114,length:[40,41,42,961,964,1031,1042,1053],lenton2021ivi:1226,lenton:1226,less:[40,41,43,85,210,390,507,631,822,961,974,1114,1170,1174],less_util_node_str:1114,let:[1269,1272],level:1226,librari:[1226,1268,1272],lightweight:1226,like:[43,1060,1066,1170,1174,1226,1268,1269,1272],limit:[40,41,42,818,819,820,961,975,976,977],linalg:[29,469,470,1084,1085,1086,1087,1088,1089,1226],linear0:[1226,1268],linear1:1226,linear2:1268,linear:[468,961,996,1015,1083,1187,1188,1189,1190,1195,1203,1226,1243,1244,1245,1246,1247,1248,1249,1250,1268],linear_algebra_extens:[832,833],linear_resampl:[125,286,425,548,673,961],linearli:[961,996],link:1226,linspac:[125,286,425,548,673,961,964],list:[15,18,19,40,41,43,382,383,384,815,816,817,835,836,842,843,844,887,896,897,906,907,909,910,911,913,916,917,931,961,964,968,970,1021,1040,1041,1050,1055,1110,1111,1112,1114,1158,1159,1160,1162,1166,1167,1195,1196,1197,1198,1199,1200,1201,1202,1226,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250],list_join:[40,41,42],list_stack:[40,41],liter:[832,833],littl:1269,load:[40,41],loaded_kwarg:1114,loader:1226,local_set:[961,1004],locat:[43,822,827,961,1014,1170,1171],log:[761,961,1017,1093,1114,1208,1209,1210,1211,1226],log_all_op:1220,log_global_inference_abs_tim:[1217,1226],log_global_inference_rel_tim:[1217,1226],logarithm:[1093,1105],logic:[31,822,829,842,843,844,1091,1092,1226],logical_and:[350,758,1090],logical_not:[85,210,390,507,631,822],logical_or:[350,758,1090],logit:[1208,1211],logspac:[125,286,425,548,673,961],look:[43,1269,1272],loop:[1110,1111,1112,1113],loss:[1209,1210,1211,1226,1268],loss_fn:[1226,1268],lot:1269,low:[40,41,474,1170,1172,1174],lower:[40,41,961,1020,1170,1174],lower_depth:[1255,1256],lowest:[15,18,19,40,41,1158,1167,1170,1172],lstm:[1195,1205,1226,1243],lstm_updat:[43,1195],machin:[818,819,820,822,828,839,840,1170,1176,1226,1269,1272],mai:[961,964,986,990,1226,1269,1272],main:[961,1006,1226],mainli:1226,make:[43,474,887,1114,1226,1269],maml:[1110,1111,1112],maml_step:1110,manag:[887,1114],mani:[40,41,43,961,1041,1226],manipulation_funct:[835,836],manner:[15,18,19,40,41,43,1158,1167],manual:[1158,1159,1166,1272],map:[40,41,42,822,827,887,896,961,1014,1114,1158,1163,1164,1167,1243,1254,1268],map_cont:[40,41],map_nest_at_index:1158,map_nest_at_indic:1158,map_sequ:[40,41],mapper:[887,896,897,1114],mask:[1195,1206,1207],match:[40,41,961,1018],match_kwarg:961,math:[33,473,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1114,1226],mathbb:[1083,1089],mathbf:[1083,1089],mathemat:814,matmul:[43,286,425,548,673,961,1272],matplotlib:1269,matric:[1195,1204],matrix:[40,41,961,963,976,1019,1083,1084,1085,1086,1087,1089,1195,1204,1243,1253],matrix_norm:[40,41,165,345,468,595,751,1083],matter:1226,max:[40,41,385,818,819,820,961,976,977,988,1020,1033,1034,1114,1177,1179,1259,1261],max_batch_s:[40,41],max_chunk_s:[887,931,1114],max_depth:[40,41,887,891,894,901,909,913,919,961,1004,1114,1158,1167],max_dev_dim_step_ratio:887,max_freq:[961,996],max_length:[40,41],max_node_dim_step_ratio:1114,max_norm:[40,41,961,976,977],max_split_factor_step_s:[887,1114],max_trust_ratio:[1060,1067,1259,1261],maxim:[1226,1269,1272],maximis:1226,maximum:[40,41,42,673,887,909,913,919,931,961,966,975,976,977,996,1060,1067,1114,1158,1167,1177,1179],mayb:[15,18,19],mdi:1114,mean:[40,41,474,887,916,917,918,919,931,961,988,1110,1111,1112,1113,1114,1158,1162,1170,1173,1177,1180,1183,1185,1234,1268,1272],measur:[1195,1206,1243,1254],mech:1226,mechan:[1226,1272],medic:1272,memori:[887,903,926,931,933,936,1114,1195,1205,1226],meshgrid:[286,425,673,961],messag:[1270,1271],meta:[35,1111,1112,1113,1226],method:[40,41,42,43,474,961,968,980,1021,1033,1034,1060,1067,1068,1114,1158,1159,1166,1167,1226,1243,1254,1255,1256,1269],might:[961,986,1272],min:[40,41,385,818,819,820,961,988,1022,1033,1034,1043,1114,1177,1181],min_bas:[961,1044],min_denomin:[961,1043],min_dev_dim_s:887,min_node_dim_s:1114,min_sf_tune_step:[887,1114],min_unit_dev_tune_step:887,min_unit_node_tune_step:1114,mind:1226,mini:[1212,1213,1257,1258],minimum:[40,41,673,887,937,941,961,964,967,968,975,1001,1002,1035,1036,1043,1044,1114,1177,1181],miss:[1259,1263],ml_framework:[822,828,839,840,961,964],mod:[961,995],mod_depth:[1255,1256],mod_height:[1255,1256],mod_with_top_mod_key_chain:[1255,1256],mode:[40,41,885,886,887,916,917,918,919,931,1083,1088,1114,1269],model:[1226,1268],modul:[40,41,42,59,961,1023,1114,1226,1227,1229,1230,1231,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1257,1258,1265,1266,1272],moment:[1060,1062,1063,1067,1259,1260,1261],more:[43,835,836,961,1045,1114,1226,1269,1272],more_util_node_str:1114,most:[40,41,43,1226,1272],move:[40,41,43,887,932,1114],much:[1226,1272],multi:[474,961,1023,1195,1206,1243,1254],multi_head_attent:1195,multi_index_nest:1158,multi_map:[40,41],multi_nod:1114,multidev:[887,898,899,900,919],multidevcontain:[40,41],multidevic:[887,896],multidevit:[887,890,893,896,897,901],multidevitem:[887,889,892],multidevnest:[887,891,894],multiheadattent:[1226,1243],multinod:[1114,1118],multinodecontain:1114,multinodeit:1114,multinodeitem:1114,multinodenest:1114,multinomi:[170,354,474,601,777,1170],multipl:[40,41,842,843,844,961,1018,1041,1083,1085,1177,1179,1180,1181,1182,1183,1185,1212,1213,1243,1253,1269],multipli:[40,41,961,983,1177,1182],multiprocess:[40,41,42,425,673,887,896,961,1114],must:[40,41,42,43,815,816,817,822,823,826,828,830,835,836,842,843,844,846,865,871,887,916,917,918,919,931,961,964,978,980,982,990,1020,1022,1034,1045,1093,1099,1102,1114,1170,1175,1259,1263],mutabl:[1158,1160,1167],mutlidevic:[887,896],mutlinod:1114,mw_tm1:[1060,1063,1067],mx_concat:1226,mxnet:[43,1226,1272],my_func:43,mymodel:1226,name:[885,886,1214,1215,1216,1220,1268],namespac:[43,1269],nan:[40,41,822,826,827,961,1005,1056],nativ:[15,17,18,19,40,41,43,887,903,905,914,915,926,933,936,937,942,949,950,1114,1226,1227,1232,1233],native_modul:[1232,1233],native_module_class:[1232,1233],nativearrai:[15,18,19,43,818,819,820,822,823,824,825,826,827,828,829,832,833,835,836,839,840,842,843,844,846,865,871,887,905,931,932,937,941,947,952,953,961,962,963,964,966,967,968,969,970,972,974,975,976,977,978,979,981,982,983,984,987,988,989,990,992,993,994,995,996,998,999,1003,1005,1006,1007,1014,1015,1016,1017,1019,1020,1021,1022,1025,1026,1027,1030,1031,1032,1033,1034,1039,1041,1042,1045,1047,1048,1050,1051,1052,1053,1055,1056,1057,1058,1059,1114,1158,1160,1167],natur:[1093,1105,1272],ncdhw:[1195,1200,1201,1243,1248,1249],nchw:[1195,1198,1199,1202,1243,1246,1247,1250],ncw:[1195,1196,1197,1243,1244,1245],ndarrai:[43,382,383,384,385,387,388,474,961,1051],ndhwc:[1195,1200,1201,1243,1248,1249],nearest:[961,1032],need:[43,961,976,977,1195,1197,1199,1201,1226,1243,1245,1247,1249,1272],neg:[40,41,822,826,835,836,842,843,844,1177,1182,1184,1187,1189],negative_slop:1234,neither:1114,nest:[15,16,17,18,19,40,41,42,887,909,913,919,961,968,1050,1110,1111,1112,1114,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1255,1256,1259,1260,1261,1262,1263,1264],nested_indices_wher:1158,nested_map:[1114,1158],network:[1195,1204,1226,1227,1229,1243,1255,1256,1272],neural:[1195,1226,1229,1243,1268],new_node_percent_mem:1114,new_node_util:1114,new_node_utils_kei:1114,new_std:[1212,1213,1257,1258],newli:[885,886,961,972,973],newlin:[40,41,42],newshap:[961,972,1031],next:[818,819,1114,1255,1256,1259,1260,1261,1262,1263,1264],nhwc:[1195,1198,1199,1202,1243,1246,1247,1250],node:[40,41,1158,1159,1166],node_clon:1114,node_dist:1114,node_dist_arrai:1114,node_dist_it:1114,node_in:1114,node_mapp:1114,node_str:1114,node_to_str:1114,node_util:1114,nodedistit:1114,nodedistitem:1114,nodedistnest:1114,nodemanag:[1114,1125],nodemapp:1114,nodemappermultiproc:1114,noinspect:[43,888,938,939,940,1061,1114,1221],non:[40,41,842,843,844,885,886,937,951,1255,1256,1259,1263,1269],none:[40,41,42,43,59,61,64,382,383,384,423,425,426,429,431,438,439,440,441,448,449,450,451,452,453,454,455,456,458,468,469,474,475,815,816,817,818,819,820,822,828,832,833,835,836,839,840,842,843,844,885,886,887,896,897,903,904,929,930,931,932,937,944,945,946,961,964,968,985,986,991,993,997,998,999,1004,1006,1008,1009,1010,1011,1012,1016,1017,1023,1025,1026,1027,1030,1033,1034,1035,1036,1041,1042,1043,1044,1053,1054,1059,1060,1063,1065,1067,1068,1069,1075,1076,1080,1083,1086,1110,1111,1112,1113,1114,1158,1159,1162,1166,1167,1170,1171,1172,1173,1174,1177,1179,1180,1181,1182,1183,1184,1185,1195,1197,1199,1201,1204,1205,1206,1207,1212,1213,1214,1215,1216,1220,1224,1232,1233,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266],norm:[40,41,832,833,961,976,977,1083,1086,1213,1226,1258,1259,1261],normal:[1170,1173,1212,1213,1257,1258],normalized_idx:[1212,1213],normalized_shap:[1257,1258],notat:[40,41,1177,1178],note:43,noth:[40,41,1269],notimplementederror:1114,now:[40,41,887,932,961,962,1114,1226,1243,1254,1255,1256,1268,1269,1272],np_concat:1226,np_finfo:385,ns_tune_step:1114,num:[425,448,449,961,1016,1017],num_arrai:[40,41],num_arrays_in_memori:961,num_arrays_on_dev:887,num_band:[961,996],num_channel:[1243,1250],num_chunk:1114,num_chunks_floor:1114,num_class:[1170,1171],num_cpu_cor:887,num_gpu:[118,423,887,1114],num_head:[1195,1206,1243,1254],num_kei:[1195,1206,1207],num_lay:[1243,1252],num_or_size_split:[40,41,425,454,961,1041],num_output:1114,num_queri:[1195,1206,1207],num_sampl:[425,447,474,475,961,1015,1076,1077,1170,1171],num_task:[1110,1111,1112,1113],number:[40,41,42,818,819,820,822,827,842,843,844,885,886,887,923,924,925,937,948,952,953,961,964,975,979,992,996,1003,1006,1015,1016,1017,1020,1024,1030,1041,1048,1052,1056,1058,1083,1088,1110,1111,1112,1113,1114,1170,1171,1175,1177,1179,1180,1181,1183,1185,1195,1206,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1269,1272],numer:[43,822,826,846,865,871,961,1001,1002,1035,1036,1043,1044,1093,1102,1234],numhead:[1195,1206],numpi:[40,41,382,383,384,385,387,388,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,961,1051,1083,1088,1177,1178,1226,1268,1269,1272],nwc:[1195,1196,1197,1243,1244,1245],obj:[40,41],object:[40,41,42,59,385,818,819,820,887,937,941,961,964,968,1060,1158,1161,1163,1164,1165,1168,1169,1170,1176,1220,1224,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256],object_in:[425,429,961,968],observ:1114,occupi:[818,819,820,961,1033,1034],off:[961,964],offer:1226,offset:[1212,1213],often:1269,old:[40,41],on_init:[1243,1254,1255,1256],onc:[887,931,1114,1170,1171,1226],one:[40,41,43,832,833,835,836,887,916,917,918,919,931,937,943,961,1006,1018,1025,1033,1034,1042,1045,1083,1086,1114,1177,1178,1179,1180,1181,1182,1183,1184,1185,1226,1269,1272],one_hot:[125,425,548,673,961],onearrai:[961,992],ones:[40,41,77,202,382,499,623,815,961,1006,1025,1027,1226],ones_lik:[125,286,425,548,673,961],ongo:43,onli:[40,41,43,474,835,836,887,1114,1158,1159,1160,1166,1259,1260,1261,1262,1263,1264,1268,1269],onlin:1226,onto:[887,916,917,932,1114,1158,1162,1167],oom:[887,1114],open:[961,964,1170,1174,1226,1272],opencv:1269,oper:[40,41,822,829,961,971,987,988,989,1016,1017,1046,1060,1063,1065,1067,1068,1069,1090,1091,1092,1195,1196,1197,1198,1199,1200,1201,1202,1204,1226,1227],operand:[40,41,1177,1178],oppos:[961,996],optim:[887,1060,1063,1065,1067,1068,1069,1110,1111,1112,1113,1114,1226,1260,1261,1262,1264,1268,1272],optimizer_upd:1060,option:[15,18,19,40,41,42,43,382,383,384,815,816,817,822,828,832,833,835,836,839,840,842,843,844,885,886,887,896,897,905,909,910,911,912,913,916,917,918,919,926,929,930,931,932,936,937,942,947,951,960,961,963,964,966,967,968,976,977,978,983,985,986,993,996,997,998,999,1003,1005,1006,1013,1015,1016,1017,1018,1021,1023,1025,1026,1027,1030,1033,1034,1037,1039,1041,1042,1043,1044,1045,1053,1055,1056,1059,1060,1063,1065,1066,1067,1068,1069,1071,1076,1080,1083,1086,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1170,1171,1177,1179,1180,1181,1182,1183,1184,1185,1187,1188,1192,1195,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1269],ord:[961,993,1083,1088],order:[40,41,42,43,832,833,835,836,839,840,1060,1063,1065,1067,1068,1069,1083,1086,1110,1111,1112,1265,1266],ordered_node_util_kei:1114,org:1272,organ:43,origin:[40,41,42,832,833,961,1027,1031,1059,1083,1086],other:[40,41,43,846,848,849,854,856,857,861,863,864,865,866,867,869,871,872,873,874,875,876,878,879,880,882,883,884,885,886,961,963,964,1006,1060,1064,1170,1174,1226,1268,1269,1272],other_i:[43,846,865,871],otherwis:[15,16,17,18,19,40,41,822,826,842,843,844,887,904,937,944,945,946,961,971,1053,1054,1057,1060,1066,1071,1075,1110,1111,1112,1114,1177,1179,1180,1181,1183,1185],our:[1226,1272],out:[474,846,865,961,964,1093,1098,1195,1203,1205,1226,1243,1251],out_feat_dim:[1195,1206],out_featur:[1195,1203,1204],out_i:[822,826],outdat:1272,outer:[1110,1111,1112,1113],outer_batch_fn:[1110,1111,1112],outer_batch_shap:[1195,1204],outer_cost_fn:[1110,1111,1112],outer_v:[1110,1111,1112],outlin:1269,output:[40,41,43,815,816,817,835,836,887,896,897,931,961,964,973,997,1006,1030,1048,1060,1064,1093,1099,1114,1170,1172,1173,1174,1195,1197,1199,1201,1203,1205,1206,1207,1226,1243,1244,1245,1246,1247,1248,1249,1251,1252,1253,1254],output_ax:[887,931,1114],output_axi:1114,output_channel:[1243,1244,1245,1246,1247,1248,1249,1252,1253],output_connected_onli:[1214,1216,1220,1255,1256],output_queu:1114,output_shap:[1195,1197,1199,1201,1243,1245,1247,1249],outsid:[961,975],over:[40,41,832,833,842,843,844,961,993,1083,1086,1170,1174,1177,1179,1180,1181,1183,1185,1212,1213,1257,1258],overal:1269,overflow:[961,964],overhead:1269,overrid:[961,1025,1027,1059],overriden:[1259,1263],overwrit:[40,41,887,931,1114],overwrite_at_key_chain:[40,41],own:[1226,1269,1272],packag:[43,1269],pad:[961,979,996,1058,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],pad_width:[425,961,979,1058],page:1226,pair:[1195,1207],parallel:[887,896,897,1114],parallelis:[887,896,897,1114],param:[40,41,42,43,425,439,440,822,830,842,844,887,931,961,962,998,999,1025,1026,1114,1225,1226,1255,1256,1268],paramet:[15,16,17,18,19,40,41,42,815,816,817,818,819,820,822,823,824,825,826,827,828,829,832,833,835,836,839,840,842,843,846,865,871,885,886,887,896,897,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,926,929,930,931,932,933,936,937,941,942,943,947,948,949,950,951,952,953,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,981,982,983,984,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1003,1005,1006,1007,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1026,1027,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1071,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268],parameter:[1170,1173,1174],params_all_empti:1220,pardo:1226,pars:[961,980],part:[1060,1063,1065,1067,1068,1069,1093,1098,1226,1255,1256,1269],partial:[40,41,1255,1256],particl:1272,particular:1272,pass:[40,41,42,887,896,931,937,942,961,973,1060,1074,1110,1111,1112,1114,1232,1233,1255,1256,1259,1263,1265,1266],pattern:[40,41,961,987,988,989],per:[887,1114,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],percent_used_mem_on_dev:887,percent_used_mem_on_nod:1114,percentag:[887,926,1114],perf_count:1114,perform:[40,41,43,839,840,842,843,844,887,961,966,967,983,987,988,989,1009,1010,1011,1015,1016,1017,1060,1063,1065,1067,1068,1069,1076,1077,1110,1111,1112,1113,1114,1158,1163,1164,1177,1179,1180,1181,1182,1183,1184,1185,1187,1192,1195,1203,1205],permissable_step:1114,permit:43,permut:[474,961,1047,1053],perpendicular:[961,982],person:1226,physci:1272,pickl:[40,41,1114],pickle_filepath:[40,41],pid:1220,pinv:[345,751,1083],pip:1226,pipelin:1268,pkk:1272,pkkm1:1272,pkm1km1:1272,place:[40,41,43,815,816,817,887,932,961,992,997,1009,1010,1011,1114,1259,1260,1261,1262,1263,1264],placehold:[1158,1167],pleas:474,point:[814,815,816,817,818,819,822,830,937,952,961,964,1093,1102],popul:[40,41,1170,1171],popular:1272,population_s:[474,475,1170,1171],portabl:[1226,1227],posit:[15,16,17,818,819,822,826,887,909,913,919,961,962,964,992,996,1114,1170,1175,1232,1233],possibi:[40,41],possibl:[961,1018,1050,1076,1081,1272],post:[1212,1213],post_shap:[40,41],power:[43,846,871,877,961,1001,1035,1044,1234],practic:1226,pre:[887,1114,1226],pre_shap:[40,41],precis:[818,819,822,830],pred:[1208,1209,1210,1211],predict:[1208,1209,1210,1211,1272],preprint:1226,present:[40,41],preserv:[40,41,42,835,836,961,993,1060,1071],preserve_typ:[40,41,459,462,1060,1071],press:1226,prevent:[43,1060,1062,1063,1067,1114,1259,1260,1261],previou:[1060,1063,1067],previous:[961,973],prime:1226,print:[40,41,42,887,927,961,1028,1226,1268],print_all_arrays_in_memori:961,print_all_arrays_on_dev:887,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1259,1263],prob:[474,475,1170,1171,1195,1203,1243,1251],probabl:[1170,1171,1195,1203,1243,1251],problem:[43,1272],process:[43,887,896,897,926,936,961,1023,1114],process_specif:[887,926,936,1114],prod:[40,41,961,988],produc:[887,896,897,1114],product:[40,41,961,982,983,1019,1177,1178,1195,1206,1207,1243,1254],profil:[118,280,423,541,665,887,1114],project:[1226,1268,1269,1272],promot:[43,822,823,830,846,871,1093,1102],prompt:1226,properli:43,properti:[40,41,385,887,899,1114,1220,1224,1255,1256,1259,1260,1261,1262,1264],provid:[40,41,43,835,836,842,843,844,885,886,887,904,937,944,945,946,951,960,961,986,1025,1027,1034,1059,1060,1063,1065,1067,1068,1069,1075,1114,1226,1243,1252,1259,1260,1261,1262,1263,1264,1269],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1083,1087],ptype:[1220,1224],pure:[40,41,1226,1272],purpos:1272,put:1114,pybroadexcept:1114,pyprotectedmemb:[1114,1221],pyshadowingbuiltin:43,pyshadowingnam:[888,938,939,940,1061,1114],python:[40,41,887,926,936,961,964,1114,1226],pytorch:[1060,1063,1065,1067,1068,1069,1226,1259,1260,1261,1262,1263,1264,1268,1269,1272],pyunresolvedrefer:1114,quadrant:[1093,1099],queri:[40,41,846,860,881,887,920,930,1114,1195,1206,1207,1243,1254],query_dim:[1243,1254],query_kei:[40,41],queue:[40,41,42,887,896,897,961,1029,1037,1114],queue_class:[887,896,897,1114],queue_load_s:[40,41,42],queue_timeout:[40,41,42,961,1114],quick:[474,1226],quickli:1268,radian:[822,824,1093,1094,1096,1099,1106,1108],rai:[1093,1094],rais:[40,41,43,842,843,844,846,871,961,971,1001,1035,1042,1044,1054,1114,1255,1256,1259,1263],ram:[887,926,933,936,1114],randint:[170,354,474,601,777,1170],random:[37,40,41,475,1171,1172,1173,1174,1175,1176,1226],random_crop:1076,random_norm:[170,354,474,601,777,1170],random_uniform:[170,354,474,601,777,1170],randomli:[474,1076,1080,1195,1203,1243,1251],randomness_factor:[1214,1216,1220,1255,1256],rang:[474,961,964,1016,1017,1093,1099,1114,1226,1268,1272],rank:[842,843,844,961,979,1055,1058],rate:[1060,1063,1065,1067,1068,1069,1110,1111,1112,1113,1243,1254,1259,1260,1261,1262,1263,1264],rather:[40,41,887,931,961,964,1013,1060,1066,1114],ratio:[887,1060,1067,1076,1081,1114,1259,1261],raw:[40,41],raw_delta:1114,reach:[887,909,913,919,1114,1158,1167],read:[40,41],readi:[1114,1268],real:[1093,1094,1098],realiti:1269,rearrang:[40,41,961,987,989],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1110,1112],receiv:[887,896,897,961,965,1018,1114,1243,1253],receivess:[887,1114],receiving_fn:1220,receivng:[1110,1113],recev:[1110,1111,1112],recognit:1272,recommend:1226,rectifi:[1187,1189,1190],recurr:[1195,1205],recurrent_bia:[1195,1205],recurrent_kernel:[1195,1205],recurs:[40,41,1158,1159,1160,1166,1167],redefin:43,reduc:[40,41,842,843,844,887,931,961,988,1114,1177,1179,1180,1181,1182,1183,1184,1185],reduce_max:[40,41,177,359,476,606,784,1177],reduce_mean:[40,41,177,359,476,606,784,1177,1226,1268],reduce_min:[40,41,177,359,476,606,784,1177],reduce_prod:[40,41,177,359,476,606,784,1177],reduce_std:[40,41,359,1177],reduce_sum:[40,41,177,359,476,606,784,1114,1177],reduce_var:[40,41,177,359,476,606,784,1177],reduct:[39,40,41,425,452,453,842,843,844,961,988,1033,1034,1178,1179,1180,1181,1182,1183,1184,1185,1226],refactor:43,refer:[842,843,844,1060,1062,1063,1083,1089,1243,1253,1272],reflected_oper:[0,13,14],regard:[887,1114],regardless:[40,41,885,886],register_paramet:1268,reimplement:1272,rel:[835,836,1060,1063,1065,1067,1068,1069],rel_slice_obj:1114,relev:[1259,1260,1261,1262,1263,1264],relu:[793,1187,1188,1189,1226,1268],remain:[43,961,1031,1158,1162],remaind:[40,41,961,995,1041],remov:[40,41,961,1042,1110,1111,1112],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,835,836,961,993],rep:[961,1048],repeat:[40,41,286,673,961,989,1048,1114,1269],repeated_config_check:[887,1114],repeatedli:[1158,1165],repetit:[40,41,961,1030,1048],replac:[40,41,43,474,475,961,975,1033,1034,1170,1171],repo:1226,repres:[43,937,943,948,1195,1204],represent:[40,41,42,43,814,818,819,820,822,823,887,914,915,937,943,949,950,961,1040,1050,1114],reptil:[1110,1113],reptile_step:1110,requir:[43,822,830,885,886,937,941,961,964,968,1232,1233],resampl:[961,1015],reshap:[40,41,43,474,673,961],reshape_lik:[40,41],respect:[822,823,828,846,865,961,990,1060,1062,1063,1064,1065,1067,1068,1069,1093,1102,1110,1111,1112,1113],respons:1114,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,822,823,826,828,829,830,832,833,842,843,844,846,865,871,887,896,961,964,990,1033,1034,1045,1083,1086,1090,1091,1092,1093,1102,1114,1177,1179,1180,1181,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1226],ret:1114,ret_dict:1114,ret_fn:[887,896,897,1114],retain:[1060,1064],retain_grad:[459,460,1060,1064],retreiv:1114,retrn:[961,1040],return_cont:[40,41],return_dict:[40,41],return_graph:[1214,1215,1216],return_inner_v:[1110,1111,1112,1113],return_sequ:[1243,1252],return_st:[1243,1252],rev:[961,986],revers:[40,41,835,836,961,986,993,1053],right:[40,41],rk_e:1272,robot:1226,ronald:1226,root:[822,830],round:[286,425,673,822,830,961,964,1114],row:[961,1006,1170,1171],rule:[43,822,823,830,846,871,961,964,1093,1102],run:[887,896,1060,1062,1063,1067,1110,1111,1112,1113,1114,1226,1227,1243,1254,1255,1256],safe:[887,896,1114],safety_factor:[887,1114],same:[15,16,17,40,41,43,835,836,887,896,897,931,932,937,941,961,962,974,978,994,995,998,999,1025,1027,1032,1033,1034,1045,1059,1060,1066,1071,1083,1088,1093,1098,1110,1111,1112,1114,1177,1178,1195,1196,1197,1198,1199,1200,1201,1202,1226,1243,1244,1245,1246,1247,1248,1249,1250,1268,1272],same_arrai:[40,41],sampl:[961,1015,1076,1077,1170,1171,1173,1174,1195,1203,1226,1243,1251],satisfi:[961,968,1083,1085,1089],save:[40,41,961,1038,1049,1076,1078,1255,1256],save_debug_info:1220,save_dir:[423,424,887,902,1114],save_to_disk:[1214,1216,1220,1255,1256],save_weight:[1255,1256],scalar:[961,975,1025,1052,1056],scale:[887,929,930,1060,1068,1114,1195,1203,1206,1207,1212,1213,1243,1251,1254,1259,1262],scaled_dot_product_attent:1195,scatter:[961,1025,1033,1034],scatter_flat:[125,286,425,548,673,961],scatter_nd:[125,286,425,548,673,961],scene:[1060,1063,1065,1067,1068,1069],schemat:1226,screen:[40,41],search:[15,18,19,40,41],second:[40,41,822,823,887,918,961,969,982,990,1029,1037,1047,1060,1062,1063,1067,1110,1112,1114,1259,1260,1261],secondli:1272,see:[43,59,385,423,424,474,822,823,842,843,844,846,865,871,887,899,900,901,902,937,961,964,1016,1017,1060,1093,1102,1220,1224,1226,1234,1236,1237,1239,1240,1242],seed:[40,41,170,474,777,1170],seed_valu:[40,41,474,1170,1175],seem:1226,seen_set:[961,1004],select:[961,968,1042,1269,1272],self:[40,41,43,59,385,423,424,846,865,871,887,899,900,901,902,937,1060,1114,1220,1224,1226,1234,1236,1237,1239,1240,1242,1259,1263,1268,1272],self_i:[846,865],sent:1114,seper:[961,996],seq:[40,41,42,1177,1178,1255,1256],sequenc:[15,16,17,40,41,42,43,474,832,833,885,886,887,896,897,906,907,908,909,910,911,912,913,916,917,931,937,941,961,964,968,970,972,978,979,993,1006,1018,1021,1026,1030,1031,1034,1041,1045,1048,1053,1058,1060,1064,1076,1080,1081,1083,1086,1114,1158,1169,1170,1172,1174,1177,1179,1180,1181,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1212,1213,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1252,1255,1256,1257,1258,1259,1263,1265,1266],sequenti:1226,set:[15,18,19,40,41,832,833,887,916,917,929,930,931,961,963,985,1006,1035,1036,1037,1038,1060,1063,1065,1066,1067,1068,1069,1083,1086,1114,1158,1159,1166,1168,1169,1170,1171,1175,1177,1179,1180,1181,1182,1183,1184,1185,1224,1226,1243,1252,1259,1260,1261,1262,1263,1264,1269,1272],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1224,set_debug_mod:44,set_default_devic:887,set_default_dtyp:937,set_default_float_dtyp:937,set_default_int_dtyp:937,set_default_nod:1114,set_exception_debug_mod:44,set_framework:[40,41,59,1114,1226,1268,1269,1272],set_ivy_backend:[40,41],set_min_bas:961,set_min_denomin:961,set_nest_at_index:1158,set_nest_at_indic:1158,set_param:1220,set_queue_timeout:961,set_split_factor:[887,1114],set_stat:[1259,1260,1261,1262,1263,1264],set_tmp_dir:961,set_with_grad:1060,setter:1114,sever:1272,sgd:[1226,1259],shape0:1114,shape:[40,41,43,382,383,384,425,438,453,474,673,815,816,817,835,836,887,899,937,941,961,962,972,974,978,979,992,993,994,995,997,999,1003,1006,1025,1026,1027,1030,1031,1032,1033,1034,1040,1042,1045,1058,1059,1076,1080,1083,1085,1093,1098,1099,1114,1170,1172,1173,1174,1177,1178,1195,1197,1199,1201,1220,1224,1243,1245,1246,1247,1248,1249,1250,1257,1258],shape_slic:[40,41],shape_to_tupl:961,share:[40,41,1226,1269],shift:1114,should:[40,41,42,43,474,822,823,826,830,846,865,871,885,886,887,961,972,973,980,1025,1031,1060,1063,1065,1067,1068,1069,1093,1102,1114,1177,1178,1226],show:[40,41,1220,1226,1272],show_debug_info:1220,show_graph:[1214,1226,1255,1256,1259,1263],show_mod_in_top_mod:[1255,1256],show_structur:[1255,1256],show_sub_contain:[40,41],show_v:[1255,1256],show_v_in_top_v:[1255,1256],shown:[40,41],shp:1114,shuffl:[40,41,170,474,777,1170],shuffle_h5_fil:[40,41],sigmoid:[793,1187,1226,1268],signatur:[43,59,385,423,424,425,459,464,468,471,472,474,887,899,900,901,902,937,1060,1220,1224,1234,1236,1237,1239,1240,1242],signific:1272,similar:[43,1195,1206,1243,1254],simpl:[43,961,991,1226,1269,1272],simplest:1269,simpli:[40,41,43,1226,1269,1272],simultan:1226,sin:[761,961,996,1093,1108,1269],sinco:1269,sine:[1093,1096,1097,1106,1107],singl:[40,41,885,886,887,896,897,916,917,918,919,961,1042,1052,1056,1076,1081,1114,1170,1173,1174,1177,1179,1180,1181,1182,1183,1184,1185,1226,1269,1272],singleton:[842,843,844],singular:[1083,1088],sinh:[761,1093],siren:[1226,1234],size:[40,41,42,425,452,832,833,887,910,911,912,913,929,930,931,961,964,972,1016,1017,1033,1041,1076,1080,1083,1086,1088,1114,1170,1171,1173,1174,1177,1179,1180,1181,1182,1183,1184,1185,1243,1244,1245],size_ordered_arrai:[40,41],skew:[1083,1089],skinv:1272,skip:[40,41],slice:[40,41,839,840,961,998,999,1114,1158,1165],slice_kei:[40,41],slice_obj:[40,41,1114],slice_via_kei:[40,41],slide:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],slope:[1187,1189],small:[1208,1209,1210,1211,1212,1213,1226,1257,1258,1269],smaller:[961,975],smallest:[40,41,818,819,820,961,967,974],smallest_norm:[385,818,819],softmax:[186,485,793,1187,1195,1206,1207],softplu:[793,1187],solv:1272,some:[40,41,43,961,964,1060,1062,1063,1065,1067,1068,1069,1074,1195,1203,1226,1243,1251,1269,1272],some_backend:43,some_namespac:43,someth:[43,1272],something_cool:43,somewher:[40,41],sort:[40,41,42,840,1083,1088,1114],sort_by_kei:[40,41],sorting_funct:[839,840],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,382,383,384,385,387,388,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,835,836,839,840,842,843,844,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,889,890,891,892,893,894,896,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1224,1229,1230,1231,1232,1233,1234,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1270,1271,1272],space:[961,964,996,1016,1017],spars:[1208,1211],sparse_cross_entropi:1208,spawn:[961,1023],specif:[40,41,43,887,929,961,980,987,988,989,1023,1110,1111,1112,1113,1114,1170,1176,1226,1255,1256,1268,1269],specifc:[1170,1171],specifi:[40,41,43,832,833,835,836,842,843,844,887,906,907,908,909,910,911,912,913,916,917,921,923,927,930,931,932,937,941,943,961,964,966,967,968,975,978,979,997,998,999,1005,1016,1017,1045,1055,1058,1083,1086,1114,1158,1163,1164,1168,1169,1177,1178,1179,1180,1181,1182,1183,1184,1185],split:[40,41,125,286,425,548,673,887,896,910,911,912,913,929,930,931,961,1018,1114],split_arg:1114,split_factor:[887,896,1114],split_func_cal:[887,1114],split_siz:1114,spread:[887,919,1114],sqrt:[85,210,390,507,631,822],squar:[822,830,961,1006,1083,1085],squeez:[125,286,425,548,673,961],stabil:[839,840,961,1043,1044],stabl:[839,840,961,1001,1002,1035,1036,1043,1044],stable_divid:961,stable_pow:961,stack:[40,41,286,673,961,1076,1081,1158,1159,1166,1243,1252],stack_imag:[161,341,464,591,747,1076],stacked_dim_s:1114,stage:43,standard:[40,41,43,818,819,1170,1173,1177,1183,1212,1213,1257,1258],start:[40,41,423,424,425,426,448,449,474,887,902,961,964,1016,1017,1114,1226,1269],starting_index:[40,41],starting_split_factor:[887,1114],state:[1114,1195,1205,1214,1215,1216,1220,1226,1229,1230,1231,1232,1233,1234,1236,1237,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268],statement:1269,static_argnam:[425,431,885,886],static_argnum:[425,431,885,886],std:[474,1170,1173],step:[40,41,425,426,887,961,964,1016,1017,1060,1062,1063,1065,1067,1068,1069,1110,1111,1112,1113,1114,1226,1259,1260,1261,1262,1263,1264,1268,1272],stephen:1226,stick:1226,still:[40,41],stochast:[1259,1264],stop:[40,41,423,424,425,426,448,449,887,902,931,961,964,1016,1017,1060,1063,1065,1067,1068,1069,1071,1110,1111,1112,1113,1114,1259,1260,1261,1262,1263,1264],stop_gradi:[40,41,336,459,586,741,887,931,1060,1063,1065,1067,1068,1069,1110,1111,1112,1113,1114,1259,1260,1261,1262,1263,1264],stopiter:1114,store:[40,41,961,996,1041,1060,1074,1255,1256],store_var:[1255,1256],str:[15,16,17,40,41,42,43,382,383,384,385,387,388,818,819,820,832,833,885,886,887,896,897,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,931,937,942,943,948,949,950,951,952,953,960,961,968,985,987,988,989,1021,1023,1026,1033,1034,1083,1086,1110,1111,1112,1113,1114,1158,1162,1177,1178,1232,1233,1243,1254,1255,1256],str_to_nod:1114,straight:1269,strength:[1226,1272],stride:[1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],string:[40,41,43,887,903,905,914,915,920,926,932,933,936,937,941,947,949,950,951,960,961,964,968,985,1006,1026,1027,1059,1114,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250,1255,1256],structur:[40,41,42,43,961,980],structural_diff:[40,41],sub:[40,41,887,910,911,916,917,918,919,961,1041,1110,1111,1112,1113,1114],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1114,sub_mod:[1255,1256],sub_modul:[1265,1266],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1226,1227,1257,1258,1265,1266],subsequ:43,subset:43,substr:[40,41],suggest:1226,suitabl:[1076,1081],sum:[40,41,425,452,453,887,916,917,918,919,931,961,984,988,1033,1034,1114,1177,1178,1184],summat:[40,41,1177,1178],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,96,99,103,106,107,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,171,172,173,174,175,176,178,179,180,181,182,183,184,187,189,190,192,193,194,195,196,197,198,203,204,206,207,208,211,212,213,214,215,216,219,222,226,229,230,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,342,343,344,346,347,348,349,351,352,355,356,357,358,360,361,362,363,364,365,366,367,370,372,373,374,375,376,377,378,383,384,386,387,388,391,392,393,394,395,396,397,398,401,404,408,411,412,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,465,466,467,469,470,473,475,477,478,479,480,481,482,483,486,487,489,490,491,492,493,494,495,500,501,503,504,505,508,509,510,511,512,513,514,515,518,521,525,528,529,537,542,543,544,545,546,547,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,587,588,589,590,592,593,594,596,597,598,602,603,604,605,607,608,609,610,611,612,613,617,618,619,624,625,627,628,629,632,633,634,635,636,637,638,639,642,645,649,652,653,661,666,667,668,669,670,671,672,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,742,743,744,745,746,748,749,750,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,778,779,780,781,782,783,785,786,787,788,789,790,791,794,795,796,797,798,799,800,802,803,805,806,807,808,809,810,811,816,817,819,820,823,824,825,826,827,828,829,830,833,836,840,843,844,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,886,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1084,1085,1086,1087,1088,1089,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1213,1215,1216,1218,1219,1221,1225,1226,1230,1231,1233,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1271,1272],supports_inplac:961,suppos:1272,svd:[345,595,751,1083],swap:[40,41,961,1047],swapax:[40,41,548,673,961,1272],symmetr:[1083,1089],syntax:[423,425,459,464,468,471,472,474],tab:1226,take:[961,1015],taken:[1177,1179,1180,1181,1183,1185],tan:[761,1093,1098],tangent:[1093,1098,1099,1100,1108,1109,1187,1194],tanh:[761,793,1093,1187],target:[40,41,887,903,906,907,908,909,910,911,912,913,916,917,918,919,932,1114,1226],target_dict:[40,41],task:[1110,1111,1112,1113],team:1272,templat:1226,temporari:[961,1038,1049],tensor:[40,41,43,425,452,453,839,840,887,905,937,947,961,964,966,967,972,1016,1017,1020,1022,1025,1026,1027,1031,1033,1034,1041,1059,1114,1170,1171,1172,1195,1203,1205,1226,1243,1251,1253,1259,1260,1261,1262,1263,1264,1268,1269],tensorflow:[1195,1197,1199,1201,1226,1243,1245,1247,1249,1269,1272],term:[40,41,1195,1205,1226,1243,1253],termcolor:[40,41,42],termin:[40,41,42,1114],test:[822,826,842,843,844,937,952,953],tf_concat:1226,than:[40,41,818,819,835,836,887,931,961,964,974,975,994,1013,1020,1042,1045,1060,1066,1114,1170,1174,1226,1269],thei:[40,41,43,1093,1099,1110,1111,1112,1170,1171,1226,1265,1266,1269],them:[1226,1272],themselv:[1158,1159],therefor:43,thi:[40,41,42,43,832,833,887,909,913,919,926,931,936,961,964,996,1029,1031,1037,1060,1063,1065,1066,1067,1068,1069,1074,1083,1086,1114,1158,1162,1167,1177,1179,1180,1181,1182,1183,1184,1185,1195,1204,1226,1255,1256,1259,1260,1261,1262,1263,1264,1268,1269,1272],thing:[43,1226],those:[40,41,961,975,1060,1074,1083,1088,1114],though:43,threshold:[961,1020,1022],through:[40,41],tile:[286,548,673,961],time:[961,1048,1060,1063,1067,1110,1111,1112,1113,1114,1170,1171,1195,1205,1243,1254,1255,1256,1272],time_chronolog:[1214,1215,1220],time_infer:[1214,1215],timeout:[40,41,42,887,896,897,961,1029,1037,1114],timestep:[1195,1205,1243,1252],timing_fnam:[1214,1215],titl:1226,tmp_dir:961,tmp_dr:[961,1038],to_appli:[40,41],to_clon:[887,1114],to_dev:[40,41,118,280,423,541,665,887],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[887,1114],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1226],to_ivy_modul:[188,801,1226,1232],to_json:[40,41],to_kv_fn:[1195,1206],to_kv_v:[1195,1206],to_list:[40,41,425,673,961],to_multi_dev:[40,41],to_mut:[1158,1160,1167],to_n:[15,40,41,1226],to_nod:1114,to_numpi:[40,41,425,673,961,1226,1268],to_out_fn:[1195,1206],to_out_v:[1195,1206],to_q_fn:[1195,1206],to_q_v:[1195,1206],to_raw:[40,41],to_scalar:[425,673,961],todo:1114,togeth:[40,41,1265,1266],tool:[1226,1269],top_mod:[1255,1256],topic:1272,torch:[43,885,886,1226,1268,1269,1272],torch_concat:1226,torchfcmodel:1268,total:[40,41,42,887,933,1114],total_mem_on_dev:887,total_mem_on_nod:1114,tpu:[887,934,1114],tpu_is_avail:[423,541,665,887,1114],tpye:[937,948],trace:[40,41,961,1013],track:[887,1114,1158,1167,1255,1256],track_submod_call_ord:[1255,1256],track_submod_ret:[1255,1256],trail:[1257,1258],train:[1060,1062,1063,1067,1226,1227],trainabl:[1060,1066,1226,1227,1232,1233,1255,1256,1265],trainer:1226,tran:1272,transform:[1195,1203,1204],transpos:[40,41,125,286,425,673,887,918,961,1114,1195,1197,1199,1201,1243,1245,1247,1249],travers:[15,18,19,40,41,1158,1167],treat:[40,41,885,886],tree_depth:1224,tree_height:1220,tri:[40,41],trigonometr:[822,824,1093,1094,1098,1106],trim_kei:[40,41],trust:[1060,1067,1259,1261],truth:[822,828,829,846,865,961,990,1090,1091,1092],try_else_non:961,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[887,1114],tune_dev_alloc:887,tune_dev_split:887,tune_node_alloc:1114,tune_node_split:1114,tune_step:[887,1114],tupl:[15,16,17,18,19,40,41,43,382,383,384,815,816,817,832,833,835,836,842,843,844,885,886,961,979,996,997,1040,1058,1114,1158,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1172,1177,1179,1180,1181,1182,1183,1184,1185],two:[40,41,961,964,969,982,1019,1047,1083,1086,1088],type:[15,18,40,41,42,43,59,387,388,423,424,815,816,817,819,820,822,823,826,828,830,835,836,842,843,844,846,865,871,887,899,900,901,902,914,915,919,931,937,941,942,943,947,948,949,950,951,952,953,960,961,962,964,968,974,978,980,990,994,995,997,1006,1013,1025,1026,1027,1032,1046,1056,1059,1060,1066,1071,1093,1102,1114,1220,1224,1226,1234,1236,1237,1239,1240,1242,1255,1256,1269],types_to_iteratively_nest:[40,41,42],uint8:[1076,1078,1082],uint8_img_to_float_img:1076,unchang:[15,16,17,18,19],underli:[822,823],unif:1114,unifi:[40,41,887,916,917,918,919,931,1114,1226],uniform:[40,41,1170,1171,1173,1174,1234,1236,1237,1240,1241],uniformli:[1170,1172,1174],unify_arrai:1114,unify_it:1114,unify_nest:1114,union:[15,18,19,40,41,43,382,383,384,385,387,388,815,816,817,818,819,820,822,823,824,825,826,827,828,829,832,833,835,836,839,840,842,843,844,846,865,871,885,886,887,905,910,911,912,913,931,932,937,941,942,943,947,948,949,950,951,952,953,960,961,962,963,964,966,967,968,969,970,972,974,975,976,977,978,979,981,982,983,984,987,988,989,990,992,993,994,995,996,997,998,999,1003,1005,1006,1007,1014,1015,1016,1017,1019,1020,1021,1022,1025,1026,1027,1030,1031,1032,1033,1034,1039,1040,1041,1042,1045,1047,1048,1050,1051,1052,1053,1055,1056,1057,1058,1059,1114,1158,1159,1160,1166,1167],uniqu:[887,896,897,1110,1111,1112,1113,1114,1158,1162],unique_kwarg:1114,unit:[887,1093,1094,1096,1114,1187,1188,1189,1190],unitari:[1083,1088],unless:[961,1025,1027,1059],unlik:[887,1114],unnorm:[1170,1171],unpack:[961,1055],unrol:[1195,1205],unset:1269,unset_debug_mod:44,unset_default_devic:887,unset_default_dtyp:937,unset_default_float_dtyp:937,unset_default_int_dtyp:937,unset_framework:[59,1269],unset_with_grad:1060,unstack:[40,41,125,286,425,548,673,961],unus:[885,886],updat:[40,41,425,452,453,887,896,961,1011,1033,1034,1060,1062,1063,1065,1067,1068,1069,1110,1111,1112,1114,1158,1163,1164,1168,1169,1195,1205,1232,1233,1259,1260,1261,1262,1263,1264,1269,1272],update_backend:[40,41],update_config:[40,41],update_inference_tim:1220,upper:[40,41,1170,1174],upper_depth:[1255,1256],usabl:[1226,1272],usag:[887,931,1114],use:[40,41,42,43,474,887,896,897,922,934,961,1030,1043,1044,1114,1195,1206,1212,1213,1226,1257,1258,1269,1272],used:[40,41,43,474,887,896,926,929,930,936,937,948,961,1001,1002,1018,1027,1033,1034,1035,1036,1059,1060,1067,1068,1083,1086,1110,1111,1112,1113,1114,1158,1167,1243,1254,1259,1261,1262,1268,1269],used_dev:[887,896],used_mem_on_dev:887,used_mem_on_nod:1114,used_node_str:1114,used_node_strs_dict:1114,useful:[40,41,887,931,1114,1195,1204,1226,1269],user:[1226,1243,1254,1255,1256,1269,1272],uses:1226,using:[40,41,1060,1062,1063,1158,1161,1165,1177,1178,1195,1203,1207,1226,1243,1251,1268,1269,1272],util:[887,920,1114],utility_funct:[842,843,844],v_with_top_v_key_chain:[1255,1256],val:[40,41,425,443,444,445,846,881,961,1009,1010,1011,1035,1036,1224],valid:[842,843,844,937,942,961,1043,1044,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],valid_dtyp:937,valu:[40,41,425,822,827,828,829,839,840,846,865,887,899,930,931,961,962,964,966,967,975,976,977,979,980,986,990,996,997,998,999,1014,1016,1017,1020,1022,1029,1030,1031,1032,1033,1034,1035,1036,1037,1053,1056,1057,1058,1060,1064,1067,1076,1082,1083,1088,1090,1091,1092,1093,1103,1104,1105,1110,1111,1112,1114,1158,1162,1163,1164,1168,1169,1170,1173,1174,1177,1179,1181,1195,1206,1207,1212,1213,1220,1243,1254,1257,1258,1259,1261],value_is_nan:961,vanilla:[1110,1112],var_shap:1234,variabl:[15,16,17,18,19,40,41,336,459,586,741,961,971,1009,1010,1011,1012,1013,1046,1060,1063,1064,1065,1066,1067,1068,1069,1071,1074,1110,1111,1112,1113,1195,1206,1212,1213,1232,1233,1234,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266],variable_data:[459,741,1060],varianc:[40,41,1177,1185,1272],varieti:1269,variou:[43,1226],vector:[40,41,468,470,832,833,961,977,982,1083,1088,1089,1195,1204,1243,1253],vector_norm:[40,41,95,218,400,517,641,832],vector_to_skew_symmetric_matrix:[165,345,468,595,751,1083],verbos:1271,veri:[43,1226],version:43,via:[1158,1159,1166,1269],view:[1076,1081],vision:1226,visual:1269,volum:[1195,1200],vw_tm1:[1060,1063,1067],wai:[1269,1272],wait:[40,41,42],want:[1226,1269,1272],warn:[59,66,67,68,69,70],warp:[464,465,1076,1077],watch:1268,weight:[1060,1062,1063,1065,1067,1068,1069,1195,1204,1205,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1259,1261,1262],weight_initi:[1243,1244,1245,1246,1247,1248,1249,1250,1252,1253],weights_path:[1255,1256],well:[40,41,961,1005],were:[40,41,1114],what:1226,when:[40,41,42,43,887,961,973,1044,1057,1083,1088,1114,1226,1255,1256,1269,1272],where:[40,41,43,286,425,673,822,827,842,843,844,846,871,961,964,972,975,979,992,1007,1014,1025,1058,1083,1088,1158,1159,1166,1170,1171],wherea:43,wherebi:[1158,1167],whether:[15,18,19,40,41,42,842,843,844,885,886,887,905,918,922,926,931,934,936,937,947,951,952,953,960,961,963,969,970,983,986,991,996,1003,1005,1008,1012,1013,1018,1039,1046,1055,1056,1060,1063,1064,1065,1066,1067,1068,1069,1071,1110,1111,1112,1113,1114,1158,1159,1160,1162,1166,1167,1170,1171,1187,1188,1195,1203,1226,1232,1233,1243,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264],which:[40,41,42,43,474,815,816,817,818,819,820,832,833,835,836,842,843,844,885,886,887,896,897,905,910,911,912,913,916,917,918,919,921,923,927,929,930,931,937,942,947,951,960,961,964,968,978,980,982,983,984,986,993,997,998,999,1000,1006,1007,1015,1016,1017,1024,1025,1026,1027,1028,1030,1033,1034,1041,1045,1055,1057,1059,1060,1063,1064,1065,1067,1068,1069,1071,1073,1074,1076,1078,1083,1086,1093,1099,1114,1158,1162,1163,1164,1168,1169,1170,1171,1172,1173,1174,1177,1179,1180,1181,1182,1183,1184,1185,1187,1192,1195,1206,1207,1226,1232,1233,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1266,1268,1269],whitespac:[40,41,42],whose:[43,835,836,846,871,961,968,973,1177,1178,1179,1180,1181,1183,1185],why:[1226,1227],width:[1076,1081],wiki:1272,wikipedia:1272,window:[1076,1081,1195,1196,1197,1198,1199,1200,1201,1202,1243,1244,1245,1246,1247,1248,1249,1250],wise:[40,41,43,822,823,824,828,829,846,865,871,961,974,975,990,994,995,1020,1022,1032,1060,1063,1065,1067,1069,1090,1091,1092,1093,1094,1096,1098,1099,1102,1103,1104,1105,1106,1108,1187,1188,1189,1190,1191,1192,1193,1194],wish:1269,with_arg_label:[1214,1216,1220,1255,1256],with_array_cach:[1214,1215,1216,1220],with_bia:[1243,1253],with_cal:[961,986],with_default_key_color:[40,41],with_edge_label:[1214,1216,1220,1255,1256],with_entries_as_list:[40,41],with_grad:[1060,1070,1255,1256],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1114,with_output_label:[1214,1216,1220,1255,1256],with_partial_v:[1255,1256],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,425,454,961,1041,1114],with_to_kv_fn:[1243,1254],with_to_out_fn:[1243,1254],with_to_q_fn:[1243,1254],within:[15,18,19,961,964,1083,1088,1170,1174],without:[40,41,43,961,1029,1031,1037,1158,1160,1269],wonder:1226,word:[15,16,17,961,964,1170,1174,1232,1233],work:[43,1268],worker:[887,896,897,1114],worker_class:[887,896,897,1114],worker_kwarg:1114,would:[43,839,840,1187,1192,1226,1269,1272],wrap:[15,40,41,42,43,423,425,459,464,468,471,472,474,961,973,1060,1074,1226],wrapper:43,write:[40,41,43,1226,1227,1272],written:[43,1226,1272],ws_new:[1060,1063,1065,1067,1068,1069],x1_i:[822,823,828,961,990,1093,1102],x2_i:[822,823,828,961,990,1093,1102],x_feat_dim:[1195,1206],x_i:[822,826,830],x_in:[1226,1268],x_inv:[1083,1085],x_max:[425,961,975],x_min:[425,961,975],x_sub:1114,xkk:1272,xkkm1:1272,xkm1km1:1272,xs0:1114,xs_t:1114,year:[1226,1272],yet:[1158,1167,1272],yield:[961,1057],you:[1226,1268,1269,1272],your:[1226,1268,1269,1272],your_awesome_project:1269,yourself:1226,zero:[40,41,77,202,382,499,623,815,842,843,844,961,979,1025,1027,1033,1034,1058,1059,1060,1062,1063,1067,1068,1195,1203,1226,1234,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1259,1260,1261,1262],zero_pad:[286,425,548,673,961],zeros_lik:[125,286,425,548,673,961],zip:1114,zk_e:1272},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":986,"function":[77,80,85,94,97,98,100,101,102,104,105,202,205,210,217,220,221,223,224,225,227,228,382,385,390,399,402,403,405,406,407,409,410,499,502,507,516,519,520,522,523,524,526,527,623,626,631,640,643,644,646,647,648,650,651,815,818,822,831,834,835,837,838,839,841,842],Ones:1239,Using:1269,abs:[287,549,674,962],aco:[762,1094],acosh:[763,1095],activ:[186,369,485,615,793,1187,1229],adam:1260,adam_step:1062,adam_upd:1063,algebra:[95,97,218,220,400,402,517,519,641,643,832,834],all:[106,229,411,528,652,843],all_equ:963,all_nested_indic:1159,ani:[107,230,412,529,653,844],api:[0,43,75,109,200,232,380,414,497,531,621,655,813],arang:[126,288,426,550,675,964],arg_nam:965,argmax:[127,427,551,676,966],argmin:[128,428,552,677,967],args_to_ivi:16,args_to_n:17,argsort:[103,226,408,525,649,840],arithmet:[1,110,233,415,532,656],arrai:[0,3,43,75,108,109,111,129,200,231,232,234,241,289,380,413,414,416,429,497,530,531,533,553,621,654,655,657,678,813,846,968],array_equ:[290,679,969],arrays_equ:970,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[764,1096],asinh:[765,1097],assert_supports_inplac:971,atan2:[767,1099],atan:[766,1098],atanh:[768,1100],attribut:[5,112,235,417,534,658],backend:[43,73],bilinear_resampl:[162,342,465,592,748,1077],binary_cross_entropi:1209,bitwis:[7,113,236,418,535,659],bitwise_and:[86,211,391,508,632,823],broadcast_to:[291,680,972],builder:51,builtin:[108,231,241,413,530,654,846],builtin_ab:[242,847],builtin_add:[243,848],builtin_and:[244,849],builtin_bool:[245,850],builtin_contain:[246,851],builtin_deepcopi:[247,852],builtin_dir:[248,853],builtin_eq:[249,854],builtin_float:[250,855],builtin_floordiv:[251,856],builtin_g:[252,857],builtin_getattr:[253,858],builtin_getattribut:[254,859],builtin_getitem:[255,860],builtin_gt:[256,861],builtin_int:[257,862],builtin_invert:[258,863],builtin_l:[259,864],builtin_lt:[260,537,661,865],builtin_mul:[261,866],builtin_n:[262,867],builtin_neg:[263,868],builtin_or:[264,869],builtin_po:[265,870],builtin_pow:[266,871],builtin_radd:[267,872],builtin_rand:[268,873],builtin_rfloordiv:[269,874],builtin_rmul:[270,875],builtin_ror:[271,876],builtin_rpow:[272,877],builtin_rsub:[273,878],builtin_rtruediv:[274,879],builtin_rxor:[275,880],builtin_setitem:[276,881],builtin_sub:[277,882],builtin_truediv:[278,883],builtin_xor:[279,884],cache_fn:973,cast:[130,292,430,554,681,941],ceil:[293,682,974],choleski:[752,1084],choose_random_framework:61,citat:1226,clear_framework_stack:62,clear_mem_on_dev:[667,903],clip:[294,683,975],clip_matrix_norm:976,clip_vector_norm:977,clone:1129,clone_arrai:1130,clone_it:1131,clone_nest:1132,clonedit:1116,cloneditem:1115,clonednest:1117,closest_valid_dtyp:942,code:1272,comparison:[9,114,237,419,536,660],compil:[295,431,684,885,886,1214],compile_graph:1215,concaten:[131,296,432,555,685,978],constant:[76,201,381,498,622,814],constant_pad:[297,556,686,979],contain:[40,41],container_typ:[687,980],content:1226,contribut:43,conv1d:[192,372,489,805,1196,1244],conv1d_transpos:[193,373,490,806,1197],conv1dtranspos:1245,conv2d:[194,374,491,617,807,1198,1246],conv2d_transpos:[195,375,492,808,1199],conv2dtranspos:1247,conv3d:[196,376,493,618,809,1200,1248],conv3d_transpos:[197,377,494,810,1201],conv3dtranspos:1249,convers:15,convert:[188,801,1232],convert_dtyp:943,copy_arrai:[688,981],copy_nest:1160,core:[117,240,422,540,664,845],cos:[87,392,509,633,824],cosh:[88,393,510,634,769,825,1101],cprint:1271,creation:[77,202,382,499,623,815],cross:[298,689,982],cross_entropi:1210,cumprod:[132,299,433,690,983],cumsum:[691,984],current_framework:63,current_framework_str:[692,985],data:[80,84,205,209,385,389,502,506,626,630,818,821],debug_mod:45,debugg:44,default_devic:904,default_dtyp:944,default_float_dtyp:945,default_int_dtyp:946,default_nod:1133,depthwise_conv2d:[198,378,495,619,811,1202],depthwiseconv2d:1250,design:43,dev:[120,282,543,668,905],dev_clon:906,dev_clone_arrai:907,dev_clone_it:908,dev_clone_nest:909,dev_dist:910,dev_dist_arrai:911,dev_dist_it:912,dev_dist_nest:913,dev_from_str:[121,283,544,669,914],dev_to_str:[122,284,545,670,915],dev_unifi:916,dev_unify_arrai:917,dev_unify_it:918,dev_unify_nest:919,dev_util:920,devclonedit:890,devcloneditem:889,devclonednest:891,devdistit:893,devdistitem:892,devdistnest:894,devic:[20,118,280,423,541,665,887],devmapp:896,devmappermultiproc:897,distribute_nest:1134,divid:1102,document:1226,dropout:[1203,1251],dtype:[133,300,434,557,693,937,947],dtype_bit:[134,301,435,558,694,948],dtype_from_str:[135,302,436,559,695,949],dtype_to_str:[136,303,437,560,696,950],ecosystem:52,einops_rearrang:987,einops_reduc:988,einops_repeat:989,einsum:[178,360,477,607,785,1178],elementwis:[85,210,390,507,631,822],equal:[561,697,990],erf:[473,770,1103],execute_with_gradi:[159,337,460,587,742,1064],exist:991,exp:[771,1104],expand_dim:[304,698,992],extens:[95,218,400,517,641,832],finfo:[82,207,387,504,628,819],firstlayersiren:1236,flip:[99,222,404,521,645,836,993],float_img_to_uint8_img:1078,floor:[305,699,994],floormod:[306,700,995],fomaml_step:1111,fourier_encod:996,framework:59,full:[137,307,438,562,701,997],func:72,gather:[138,308,439,563,702,998],gather_nd:[139,309,440,564,703,999],geglu:1230,gelu:[370,486,794,1188,1231],gener:[22,125,286,425,548,673,961],get_all_arrays_in_memori:1000,get_all_arrays_on_dev:921,get_framework:64,get_min_bas:1001,get_min_denomin:1002,get_num_dim:[704,1003],get_referrers_recurs:1004,global:1217,glorotuniform:1237,gpu_is_avail:[922,1135],gradient:[24,158,336,459,586,741,1060],gradient_descent_upd:1065,gradient_imag:[163,343,466,593,749,1079],graph:1220,gym:53,handler:59,has_nan:1005,helper:1222,ident:[140,310,441,565,705,1006],iinfo:[83,208,388,505,629,820],imag:[26,161,341,464,591,747,1076],index_nest:1161,indices_wher:[141,311,442,706,1007],initi:1234,inplac:[11,115,238,420,538,662],inplace_arrays_support:1008,inplace_decr:[142,312,443,566,707,1009],inplace_incr:[143,313,444,567,708,1010],inplace_upd:[144,314,445,568,709,1011],inplace_variables_support:1012,inv:[753,1085],invalid_dtyp:951,is_arrai:[145,315,446,569,710,1013],is_float_dtyp:952,is_int_dtyp:953,is_vari:[160,338,461,588,743,1066],isfinit:[89,212,394,511,635,826],isinf:[316,570,711,1014],isnan:[90,213,395,512,636,827],ivi:[43,50,51,52,53,54,55,56,57,58,812,1268,1269,1272],ivymodul:[189,802],jax:74,lamb:1261,lamb_upd:1067,lar:1262,lars_upd:1068,layer:[191,371,488,616,804,1195,1243],layer_norm:1213,layernorm:1258,leaky_relu:[795,1189],less:[91,214,396,513,637,828],linalg:[28,165,345,468,595,751,1083],linear:[95,97,218,220,400,402,517,519,641,643,832,834,1204,1253],linear_resampl:[146,317,447,571,712,1015],linspac:[147,318,448,572,713,1016],log:[772,1105,1223],log_global_inference_abs_tim:1218,log_global_inference_rel_tim:1219,logic:[30,168,350,471,599,758,1090],logical_and:[351,759,1091],logical_not:[92,215,397,514,638,829],logical_or:[352,760,1092],logspac:[148,319,449,573,714,1017],loss:1208,lstm:1252,lstm_updat:1205,maml_step:1112,manipul:[98,221,403,520,644,835],map:1162,map_nest_at_index:1163,map_nest_at_indic:1164,match_kwarg:1018,math:[32,169,353,472,600,761,1093],matmul:[320,574,715,1019],matrix_norm:[166,346,469,596,754,1086],maximum:[716,1020],mech:54,memori:55,meshgrid:[321,717,1021],meta:[34,1110],method:[94,217,399,516,640,831],minimum:[718,1022],model:56,modul:[1255,1256,1268],multi:1114,multi_head_attent:1206,multi_index_nest:1165,multidevcontain:42,multidevit:900,multidevitem:899,multidevnest:901,multiheadattent:1254,multinodeit:1120,multinodeitem:1119,multinodenest:1121,multinomi:[171,355,475,602,778,1171],multiprocess:[719,1023],mxnet:199,nativ:1268,nest:1158,nested_indices_wher:1166,nested_map:1167,network:1268,next:1226,node:[1114,1136],node_dist:1137,node_dist_arrai:1138,node_dist_it:1139,node_str:1140,node_to_str:1141,node_util:1142,nodedistit:1123,nodedistitem:1122,nodedistnest:1124,nodemapp:1126,nodemappermultiproc:1127,norm:[1212,1257],num_arrays_in_memori:1024,num_arrays_on_dev:923,num_cpu_cor:924,num_gpu:[123,925,1143],numpi:379,nutshel:1226,one_hot:[149,450,575,720,1025],ones:[78,203,383,500,624,816,1026],ones_lik:[150,322,451,576,721,1027],oper:[1,3,7,9,11,13,43,110,111,113,114,115,116,233,234,236,237,238,239,415,416,418,419,420,421,532,533,535,536,538,539,656,657,659,660,662,663],optim:[1259,1263],optimizer_upd:1069,overview:1226,param:1224,percent_used_mem_on_dev:926,percent_used_mem_on_nod:1144,pinv:[347,755,1087],portabl:1272,print_all_arrays_in_memori:1028,print_all_arrays_on_dev:927,profil:[119,281,424,542,666,902,1128],queue_timeout:1029,randint:[172,356,603,779,1172],random:[36,170,354,474,601,777,1170],random_crop:1080,random_norm:[173,357,604,780,1173],random_uniform:[174,358,605,781,1174],reduce_max:[179,361,478,608,786,1179],reduce_mean:[180,362,479,609,787,1180],reduce_min:[181,363,480,610,788,1181],reduce_prod:[182,364,481,611,789,1182],reduce_std:[365,1183],reduce_sum:[183,366,482,612,790,1184],reduce_var:[184,367,483,613,791,1185],reduct:[38,177,359,476,606,784,1177],reflect:[13,116,239,421,539,663],relu:[796,1190],repeat:[323,722,1030],reptile_step:1113,reshap:[723,1031],robot:57,round:[324,724,1032],run:1269,scaled_dot_product_attent:1207,scatter_flat:[151,325,452,577,725,1033],scatter_nd:[152,326,453,578,726,1034],search:[100,223,405,522,646,837],seed:[175,782,1175],sequenti:[1265,1266],set:[101,224,406,523,647,838],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:928,set_default_dtyp:954,set_default_float_dtyp:955,set_default_int_dtyp:956,set_default_nod:1145,set_exception_debug_mod:48,set_framework:65,set_min_bas:1035,set_min_denomin:1036,set_nest_at_index:1168,set_nest_at_indic:1169,set_queue_timeout:1037,set_split_factor:[929,1146],set_tmp_dir:1038,set_with_grad:1070,sgd:1264,shape:[727,1039],shape_to_tupl:1040,show_graph:1216,shuffl:[176,783,1176],sigmoid:[797,1191],signatur:[94,217,399,516,640,831],sin:[773,1106],sinh:[774,1107],siren:1240,softmax:[187,487,798,1192],softplu:[799,1193],sort:[102,225,407,524,648,839],sparse_cross_entropi:1211,split:[153,327,454,579,728,1041],split_factor:[930,1147],split_func_cal:[931,1148],sqrt:[93,216,398,515,639,830],squeez:[154,328,455,580,729,1042],stable_divid:1043,stable_pow:1044,stack:[329,730,1045],stack_imag:[164,344,467,594,750,1081],statist:[104,227,409,526,650,841],stop_gradi:[339,462,589,744,1071],str_to_nod:1149,submodul:43,supports_inplac:1046,svd:[348,597,756,1088],swapax:[581,731,1047],tan:[775,1108],tanh:[776,800,1109,1194],tensorflow:496,tile:[330,582,732,1048],tmp_dir:1049,to_dev:[124,285,546,671,932],to_ivi:18,to_ivy_modul:[190,803,1233],to_list:[733,1050],to_n:19,to_nod:1150,to_numpi:[734,1051],to_scalar:[735,1052],torch:620,total_mem_on_dev:933,total_mem_on_nod:1151,tpu_is_avail:[547,672,934,1152],train:1268,trainabl:1268,transpos:[155,331,456,736,1053],tree:1226,try_else_non:1054,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,205,209,385,389,502,506,626,630,818,821],uint8_img_to_float_img:1082,unifi:1153,unify_arrai:1154,unify_it:1155,unify_nest:1156,unset_debug_mod:49,unset_default_devic:935,unset_default_dtyp:957,unset_default_float_dtyp:958,unset_default_int_dtyp:959,unset_framework:71,unset_with_grad:1072,unstack:[156,332,457,583,737,1055],used_mem_on_dev:936,used_mem_on_nod:1157,util:[105,228,410,527,651,842],valid_dtyp:960,value_is_nan:1056,variabl:[340,463,590,745,1073],variable_data:[746,1074],vector_norm:[96,219,401,518,642,833],vector_to_skew_symmetric_matrix:[167,349,470,598,757,1089],verbos:1270,vision:58,where:[333,738,1057,1226],why:1272,with_grad:1075,wrapper:72,write:1269,zero:[79,204,384,501,625,817,1242],zero_pad:[334,584,739,1058],zeros_lik:[157,335,458,585,740,1059]}})