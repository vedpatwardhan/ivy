Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/15_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/15_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 129, 130, 131, 132, 136, 137, 139, 140, 141, 151, 152, 153, 249, 292, 295, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 665, 672, 710, 716, 750, 752, 754, 756, 787, 959, 961, 971, 995, 998, 1076, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 183, 187, 188, 193, 196, 201, 202, 207, 210, 213, 218, 223, 226, 231, 236, 241, 244, 249, 253, 254, 255, 260, 265, 270, 275, 276, 277, 278, 279, 284, 285, 290, 291, 292, 297, 298, 303, 308, 313, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 388, 393, 398, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 584, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 666, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 752, 757, 761, 762, 766, 771, 775, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 801, 802, 803, 804, 805, 806, 807, 812, 815, 818, 821, 824, 827, 830, 834, 837, 838, 841, 844, 847, 850, 853, 854, 857, 860, 863, 866, 869, 872, 875, 878, 879, 884, 889, 894, 895, 900, 904, 908, 912, 916, 920, 925, 929, 934, 935, 939, 943, 947, 951, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 983, 984, 985, 988, 989, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1006, 1011, 1016, 1021, 1022, 1027, 1032, 1033, 1037, 1041, 1045, 1049, 1053, 1057, 1061, 1065, 1066, 1071, 1076, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1076], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 70, 71, 72, 75, 76, 77, 78, 79, 116, 117, 124, 125, 126, 127, 129, 133, 134, 136, 137, 139, 141, 152, 153, 665, 717, 983, 984, 988, 1076, 1084, 1085, 1086, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113, 1120, 1121], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 129, 130, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124], "base": [0, 19, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 128, 130, 136, 152, 179, 210, 211, 212, 249, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 377, 483, 486, 538, 541, 543, 544, 545, 546, 547, 548, 551, 553, 554, 555, 556, 557, 605, 606, 608, 665, 700, 724, 733, 750, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1033, 1036, 1084, 1085, 1086, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "object": [0, 72, 75, 76, 77, 78, 79, 124, 138, 141, 179, 196, 199, 249, 285, 288, 327, 372, 750, 959, 962, 964, 966, 967, 968, 973, 974, 975, 976, 983, 994, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1110, 1111], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 72, 75, 76, 77, 78, 79, 119, 127, 131, 136, 138, 139, 140, 141, 249, 250, 251, 252, 327, 328, 335, 336, 337, 338, 339, 340, 341, 342, 750, 751, 983, 984, 988, 1076, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "choose_random_backend": 0, "exclud": [0, 2, 122, 136, 179, 180, 181, 983, 989, 991], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 281, 283, 285, 287, 288, 289, 292, 294, 295, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 326, 327, 336, 337, 345, 346, 369, 370, 371, 372, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 677, 678, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 704, 706, 707, 711, 717, 719, 722, 723, 724, 725, 726, 728, 732, 733, 739, 740, 742, 745, 746, 747, 750, 757, 758, 759, 760, 762, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 853, 854, 855, 856, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 965, 970, 971, 972, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1087, 1088, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 72, 77, 78, 119, 126], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 75, 76, 136, 138, 140, 327, 336, 351, 355, 359, 371, 665, 723, 1087, 1088, 1110, 1111], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 136, 138, 140, 327, 336, 351, 355, 359, 665, 716, 1087, 1088, 1110, 1111], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 326, 327, 336, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 728, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 777, 778, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 969, 970, 971, 972, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1081, 1087, 1088, 1098, 1107, 1108, 1114, 1118], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 79, 126, 130, 132, 136, 141, 152, 153, 249, 290, 291, 297, 326, 327, 336, 360, 361, 365, 367, 665, 699, 702, 707, 711, 718, 720, 731, 750, 788, 959, 960, 969, 970, 1076], "prioriti": [0, 4, 19, 75, 76, 133], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 134, 136, 138, 139, 176, 177, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 314, 317, 327, 336, 337, 351, 355, 359, 377, 378, 381, 393, 396, 398, 401, 403, 406, 453, 456, 488, 491, 493, 496, 583, 584, 595, 598, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 665, 671, 672, 676, 686, 693, 716, 723, 789, 792, 796, 799, 805, 806, 807, 810, 818, 820, 894, 929, 932, 959, 965, 977, 978, 981, 1000, 1006, 1010, 1032, 1037, 1040, 1057, 1060, 1065, 1066, 1069, 1079, 1081, 1087, 1088, 1110, 1111], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 32, 33, 34, 35, 75, 76, 118, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 178, 179, 213, 216, 231, 233, 235, 236, 238, 240, 249, 290, 291, 327, 346, 370, 377, 610, 613, 665, 674, 750, 757, 759, 762, 764, 771, 773, 779, 781, 806, 857, 859, 860, 862, 959, 965, 971, 1032, 1053, 1056, 1061, 1064, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "paramet": [0, 4, 5, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 121, 124, 138, 139, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 253, 254, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 317, 319, 320, 321, 322, 326, 327, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 724, 725, 727, 729, 730, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1081, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 179, 180, 181, 183, 184, 185, 188, 189, 191, 196, 199, 201, 202, 203, 205, 213, 216, 218, 219, 221, 226, 227, 229, 244, 246, 248, 249, 270, 271, 272, 273, 274, 314, 317, 327, 336, 337, 346, 361, 365, 370, 371, 377, 503, 506, 635, 638, 665, 686, 693, 694, 695, 696, 697, 698, 737, 750, 757, 759, 771, 773, 789, 796, 797, 798, 799, 800, 801, 804, 806, 818, 820, 857, 859, 869, 871, 894, 912, 915, 925, 928, 935, 938, 955, 956, 957, 958, 959, 961, 971, 972, 983, 984, 985, 986, 987, 988, 989, 991, 995, 999, 1000, 1001, 1005, 1011, 1015, 1032, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1082, 1087, 1088, 1098, 1106, 1109, 1114, 1118], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 164, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 270, 271, 272, 273, 274, 275, 279, 282, 285, 288, 292, 295, 297, 326, 327, 336, 337, 347, 352, 353, 354, 355, 356, 357, 358, 359, 361, 365, 367, 369, 370, 371, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 613, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 683, 684, 686, 693, 694, 695, 696, 697, 698, 699, 706, 710, 718, 719, 720, 722, 723, 739, 740, 742, 748, 750, 757, 759, 761, 762, 764, 766, 768, 770, 771, 773, 775, 777, 779, 781, 784, 786, 787, 789, 804, 806, 807, 809, 811, 812, 814, 818, 820, 834, 836, 854, 856, 857, 859, 869, 871, 872, 874, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 899, 900, 903, 912, 915, 920, 923, 929, 930, 931, 932, 933, 934, 939, 942, 959, 964, 965, 966, 967, 972, 973, 974, 975, 976, 978, 980, 982, 983, 984, 985, 986, 987, 989, 991, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1081, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 75, 76, 129, 130, 134, 138, 153, 665, 745, 1076], "infer": [0, 4, 34, 35, 118, 127, 131, 132, 136, 141, 176, 177, 179, 180, 181, 183, 184, 185, 188, 189, 191, 201, 202, 203, 205, 218, 219, 221, 226, 227, 229, 244, 246, 248, 377, 503, 506, 665, 703, 730, 894, 925, 928], "when": [0, 4, 14, 15, 18, 19, 20, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 249, 255, 258, 327, 377, 393, 396, 488, 491, 605, 608, 665, 676, 710, 733, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 959, 970, 995, 996, 997, 999, 1032, 1037, 1040, 1045, 1048, 1053, 1056, 1061, 1064, 1076, 1110, 1111], "global": [0, 4, 5, 6, 12, 56, 57, 72, 75, 76, 77, 78, 79, 102, 103, 126, 127, 131, 132, 136, 249, 276, 277, 278, 327, 336, 337, 369, 370, 371, 665, 700, 701, 721, 724, 725, 727, 732, 733, 750, 788, 977, 978, 979, 980, 981, 982, 1112, 1113], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 32, 33, 42, 43, 44, 45, 63, 75, 76, 88, 89, 90, 91, 109, 118, 119, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 327, 346, 356, 357, 368, 369, 370, 371, 377, 413, 416, 665, 666, 667, 668, 669, 670, 724, 725, 726, 727, 728, 729, 750, 757, 759, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 806, 812, 814, 834, 836, 838, 840, 847, 849, 854, 856, 959, 960, 969, 970, 971, 975, 976, 983, 993, 995, 996, 1001, 1005, 1006, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1053, 1056, 1061, 1064, 1098, 1107, 1114, 1115, 1116, 1117, 1118, 1119], "ret": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 121, 125, 136, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 253, 254, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 275, 279, 282, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 317, 326, 327, 336, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 730, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 969, 970, 971, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1081, 1087, 1088, 1114, 1118], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 166, 167, 168, 169, 170, 173, 175, 176, 177, 179, 201, 202, 205, 213, 216, 223, 224, 226, 229, 241, 243, 244, 248, 249, 255, 258, 270, 271, 272, 273, 274, 279, 282, 285, 288, 290, 291, 308, 311, 326, 327, 346, 347, 349, 360, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 418, 421, 423, 426, 428, 431, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 503, 506, 508, 511, 528, 531, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 673, 674, 682, 683, 690, 693, 694, 695, 696, 697, 698, 701, 702, 713, 726, 728, 730, 731, 737, 739, 740, 741, 742, 743, 744, 746, 747, 750, 752, 753, 754, 755, 756, 766, 767, 768, 769, 770, 788, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 827, 829, 838, 840, 844, 846, 857, 859, 863, 865, 866, 868, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 942, 943, 946, 959, 962, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1053, 1056, 1057, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 153, 170, 172, 174, 179, 180, 181, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 213, 216, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 270, 272, 274, 314, 317, 327, 346, 370, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 582, 585, 587, 588, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 670, 694, 696, 698, 710, 739, 740, 742, 750, 757, 759, 762, 764, 766, 768, 770, 771, 773, 775, 777, 779, 781, 788, 806, 807, 808, 809, 810, 811, 812, 814, 834, 836, 838, 840, 847, 849, 850, 852, 854, 856, 857, 859, 869, 871, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 899, 908, 911, 912, 915, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 955, 956, 957, 959, 971, 972, 978, 980, 982, 983, 988, 989, 991, 995, 996, 997, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "import": [0, 4, 15, 20, 70, 71, 116, 117, 119, 121, 122, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 327, 368, 369, 1076, 1082], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 42, 43, 75, 76, 88, 89, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 665, 739, 740, 741, 742, 743, 1032, 1033, 1036, 1076], "np": [0, 4, 120, 124, 129, 131, 132, 133, 138, 139, 141, 1076], "x": [0, 4, 12, 21, 23, 26, 27, 29, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 130, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 179, 183, 185, 186, 188, 191, 192, 196, 199, 200, 202, 205, 206, 213, 216, 218, 221, 222, 226, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 248, 249, 255, 258, 259, 265, 268, 269, 270, 271, 272, 273, 274, 279, 282, 283, 285, 288, 308, 311, 327, 346, 347, 348, 349, 352, 353, 361, 365, 370, 372, 373, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 426, 428, 431, 432, 438, 439, 440, 441, 442, 448, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 478, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 506, 508, 511, 513, 516, 517, 518, 521, 522, 523, 526, 527, 528, 531, 533, 536, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 557, 568, 571, 572, 583, 584, 590, 593, 594, 600, 603, 604, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 643, 644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 673, 674, 675, 677, 678, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 703, 705, 706, 708, 709, 710, 712, 713, 714, 715, 719, 730, 734, 737, 739, 740, 741, 742, 743, 744, 748, 749, 750, 761, 766, 767, 768, 769, 770, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 834, 836, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 857, 859, 860, 862, 863, 865, 866, 868, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 947, 950, 951, 954, 959, 960, 962, 965, 969, 970, 971, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1025, 1026, 1027, 1030, 1031, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1109], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 153, 154, 162, 164, 165, 166, 167, 168, 169, 170, 173, 175, 178, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 215, 216, 217, 218, 221, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 255, 258, 260, 262, 263, 264, 265, 268, 270, 272, 273, 274, 279, 282, 285, 288, 292, 295, 298, 301, 303, 306, 308, 311, 314, 317, 322, 327, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 361, 365, 367, 371, 372, 377, 378, 380, 381, 382, 383, 386, 387, 388, 391, 392, 393, 395, 396, 397, 398, 401, 402, 403, 405, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 593, 594, 595, 597, 598, 599, 600, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 638, 639, 640, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 673, 674, 675, 677, 678, 680, 682, 683, 684, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 703, 705, 706, 707, 708, 709, 710, 712, 713, 715, 718, 719, 720, 722, 723, 728, 730, 734, 737, 739, 740, 742, 743, 744, 747, 748, 749, 750, 752, 754, 755, 756, 757, 759, 762, 764, 766, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 922, 923, 924, 925, 928, 929, 931, 932, 933, 934, 935, 937, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 961, 962, 971, 972, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1079, 1081, 1098, 1106, 1109], "2": [0, 4, 18, 19, 21, 23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 122, 124, 127, 130, 135, 136, 138, 139, 140, 141, 153, 164, 166, 167, 168, 169, 175, 178, 179, 201, 202, 205, 213, 216, 223, 224, 226, 229, 244, 248, 249, 255, 258, 270, 271, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 346, 347, 349, 360, 361, 363, 365, 369, 372, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 405, 406, 407, 408, 411, 413, 416, 423, 426, 428, 431, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 461, 463, 466, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 503, 506, 508, 511, 528, 531, 533, 536, 553, 554, 555, 556, 557, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 673, 674, 677, 678, 680, 683, 690, 693, 694, 695, 696, 697, 698, 713, 730, 737, 750, 752, 753, 754, 755, 756, 766, 767, 768, 769, 770, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 819, 820, 827, 829, 830, 833, 834, 836, 838, 840, 844, 846, 847, 849, 850, 852, 857, 859, 863, 864, 865, 866, 868, 872, 873, 874, 878, 879, 880, 881, 882, 883, 884, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 946, 959, 962, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076], "0": [0, 4, 19, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 125, 136, 138, 139, 140, 141, 164, 166, 167, 168, 169, 170, 173, 175, 179, 180, 181, 193, 194, 195, 207, 208, 210, 211, 212, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 255, 258, 270, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 329, 332, 336, 339, 343, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 368, 369, 370, 371, 373, 375, 377, 378, 379, 381, 382, 383, 386, 388, 391, 393, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 411, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 508, 511, 533, 536, 538, 541, 543, 546, 553, 556, 583, 584, 585, 588, 590, 593, 595, 598, 605, 608, 610, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 664, 665, 666, 667, 668, 669, 670, 673, 674, 677, 678, 680, 682, 683, 684, 690, 693, 694, 695, 696, 697, 698, 704, 713, 719, 722, 723, 730, 737, 739, 740, 741, 742, 743, 744, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 819, 820, 827, 829, 857, 859, 863, 865, 866, 867, 868, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 919, 920, 921, 922, 923, 924, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 951, 953, 959, 962, 971, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121], "print": [0, 4, 5, 6, 12, 18, 23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 122, 124, 130, 136, 138, 139, 140, 164, 166, 167, 168, 169, 170, 173, 175, 179, 201, 202, 205, 213, 216, 223, 224, 226, 229, 241, 243, 244, 248, 249, 255, 258, 270, 271, 272, 273, 274, 279, 282, 290, 291, 308, 311, 326, 327, 347, 361, 362, 363, 364, 365, 367, 370, 373, 374, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 418, 421, 423, 426, 428, 431, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 483, 486, 488, 489, 490, 493, 494, 495, 496, 503, 506, 508, 511, 528, 531, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 673, 674, 682, 683, 690, 693, 694, 695, 696, 697, 698, 701, 720, 730, 737, 739, 740, 741, 742, 743, 744, 750, 752, 753, 755, 756, 766, 767, 768, 769, 770, 788, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 827, 829, 844, 846, 857, 859, 863, 865, 866, 868, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 908, 911, 912, 915, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 946, 959, 962, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1053, 1056, 1057, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 253, 254, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1081, 1084, 1085, 1086, 1114, 1117, 1119], "py": [0, 4, 5, 19, 119, 120, 121, 124, 125, 126, 127, 131, 132, 134, 136, 138, 140, 141, 983, 984, 988], "noqa": [0, 4, 5, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 393, 396, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 533, 536, 583, 584, 595, 598, 615, 618, 620, 623, 635, 638, 640, 643, 650, 654, 655, 659, 806, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 1032, 1037, 1040], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 152, 164, 165, 166, 169, 170, 172, 174, 175, 176, 177, 179, 180, 181, 196, 199, 210, 211, 231, 233, 235, 236, 238, 240, 249, 253, 254, 255, 258, 270, 272, 274, 275, 284, 290, 291, 297, 303, 306, 313, 322, 326, 327, 336, 337, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 673, 676, 677, 685, 686, 692, 694, 695, 696, 697, 698, 708, 709, 710, 712, 713, 714, 715, 717, 722, 723, 724, 725, 727, 732, 733, 736, 738, 739, 740, 742, 749, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 766, 768, 770, 771, 773, 775, 777, 779, 781, 784, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 931, 933, 934, 947, 950, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 995, 996, 997, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117, 1118], "set_backend": [0, 4, 5, 12, 126, 127, 128, 131, 249, 290, 291, 327, 368, 369, 665, 730, 1076], "ha": [0, 4, 5, 14, 15, 16, 19, 62, 63, 75, 76, 108, 109, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 136, 138, 140, 141, 152, 153, 179, 213, 216, 327, 346, 377, 378, 381, 585, 588, 605, 608, 750, 788, 806, 830, 833, 853, 854, 856, 857, 859, 866, 868, 894, 908, 911, 935, 938, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1032, 1041, 1044, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "over": [0, 4, 14, 16, 18, 68, 69, 70, 71, 75, 76, 114, 115, 116, 117, 121, 122, 124, 127, 133, 138, 153, 806, 834, 836, 863, 865, 869, 871, 872, 874, 977, 978, 981, 983, 989, 991, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1112, 1113], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 68, 69, 70, 71, 75, 76, 86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 218, 221, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 327, 372, 377, 378, 381, 393, 396, 398, 401, 403, 406, 453, 456, 473, 474, 475, 476, 477, 488, 491, 493, 496, 508, 511, 533, 536, 583, 584, 595, 596, 597, 598, 599, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 665, 666, 667, 668, 669, 670, 686, 687, 688, 689, 690, 693, 705, 712, 713, 714, 715, 732, 733, 750, 761, 789, 792, 796, 799, 803, 805, 806, 807, 810, 818, 820, 894, 929, 932, 955, 956, 957, 958, 959, 962, 965, 969, 976, 977, 978, 981, 983, 989, 991, 1000, 1006, 1010, 1032, 1037, 1040, 1065, 1066, 1069, 1075, 1076], "pass": [0, 4, 20, 70, 71, 72, 75, 76, 77, 78, 79, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 138, 153, 249, 275, 327, 336, 371, 377, 413, 416, 665, 676, 710, 750, 787, 955, 956, 957, 1087, 1088, 1110, 1111, 1114, 1118, 1120, 1121], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 44, 45, 90, 91, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 153, 750, 766, 767, 768, 769, 770, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076], "get_backend": [0, 126, 127], "specifi": [0, 5, 34, 35, 52, 53, 54, 55, 68, 69, 75, 76, 98, 99, 100, 101, 114, 115, 118, 120, 124, 125, 126, 131, 132, 133, 136, 139, 140, 141, 179, 180, 181, 187, 201, 207, 208, 210, 211, 223, 224, 231, 233, 235, 236, 238, 240, 241, 243, 249, 255, 258, 265, 268, 327, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 365, 367, 370, 371, 372, 377, 610, 613, 665, 671, 683, 693, 694, 697, 705, 748, 806, 818, 820, 834, 836, 863, 865, 866, 868, 869, 871, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 898, 900, 903, 904, 907, 912, 915, 929, 930, 931, 932, 933, 935, 938, 939, 942, 951, 954, 959, 964, 966, 967, 973, 974, 975, 976, 995, 996, 997, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1032, 1033, 1036, 1049, 1052, 1057, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "isn": [0, 5, 19, 139, 153], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 70, 71, 116, 117, 122, 124, 131, 136, 138, 139, 140, 141, 153, 665, 674, 789, 802, 803], "associ": [0, 5, 19, 124, 126, 128, 153, 377, 393, 396, 585, 588, 806, 838, 840, 847, 849, 875, 877], "option": [0, 5, 18, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 141, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 270, 272, 274, 275, 276, 277, 278, 297, 326, 327, 346, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 677, 678, 680, 683, 684, 685, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 706, 717, 719, 722, 723, 732, 733, 739, 740, 742, 750, 766, 768, 770, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 965, 970, 971, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 999, 1000, 1006, 1007, 1009, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "str": [0, 5, 29, 30, 31, 48, 49, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 131, 132, 134, 170, 172, 174, 176, 177, 179, 213, 216, 249, 253, 270, 272, 274, 275, 276, 277, 284, 285, 288, 292, 295, 297, 298, 301, 303, 306, 308, 311, 319, 320, 321, 326, 327, 343, 346, 347, 349, 352, 353, 354, 355, 371, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 685, 687, 688, 689, 694, 696, 698, 717, 722, 723, 739, 740, 742, 766, 768, 770, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 806, 807, 809, 811, 850, 852, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 955, 956, 957, 958, 959, 965, 978, 980, 985, 987, 1006, 1007, 1009, 1032, 1033, 1036, 1066, 1068, 1070, 1071, 1073, 1075], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 70, 71, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 152, 153, 750, 761, 1076, 1082], "want": [0, 5, 15, 17, 18, 19, 70, 71, 116, 117, 124, 139, 140, 141, 153], "retriev": [0, 5, 19, 665, 671], "i": [0, 5, 19, 21, 118, 124, 136, 139, 141, 179, 180, 181, 213, 216, 377, 378, 381, 413, 416, 433, 436, 443, 446, 453, 456, 493, 496, 498, 501, 513, 516, 583, 584, 590, 593, 605, 608, 610, 613, 665, 673, 674, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 796, 799, 806, 812, 814, 830, 833, 838, 840, 847, 849, 854, 856, 857, 859, 866, 868, 872, 874, 894, 939, 942, 959, 962, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064], "e": [0, 5, 15, 16, 17, 19, 21, 118, 124, 130, 139, 153, 178, 179, 213, 216, 249, 254, 314, 317, 327, 343, 377, 378, 381, 413, 416, 433, 436, 443, 446, 453, 456, 483, 486, 493, 496, 498, 501, 513, 516, 538, 541, 548, 551, 583, 584, 590, 593, 605, 608, 610, 613, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 806, 812, 814, 830, 833, 838, 840, 847, 849, 854, 856, 857, 859, 872, 874, 894, 939, 942, 959, 962, 976, 983, 988, 989, 991, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 62, 63, 75, 76, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 138, 139, 141, 153, 179, 180, 181, 213, 216, 249, 260, 263, 270, 273, 327, 356, 357, 358, 359, 371, 377, 393, 397, 438, 442, 583, 584, 665, 666, 668, 669, 670, 694, 698, 716, 719, 722, 723, 739, 740, 742, 806, 807, 811, 830, 833, 834, 836, 844, 846, 850, 852, 869, 871, 872, 874, 894, 895, 899, 908, 911, 912, 915, 929, 932, 933, 935, 938, 977, 978, 980, 981, 982, 985, 987, 995, 996, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1032, 1033, 1036, 1076], "default": [0, 5, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 270, 272, 274, 276, 277, 278, 279, 282, 327, 336, 337, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 677, 678, 680, 683, 684, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 715, 716, 717, 719, 721, 722, 723, 727, 730, 732, 733, 739, 740, 742, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 965, 969, 970, 971, 972, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "torch": [0, 5, 12, 19, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 176, 177, 249, 290, 291, 308, 311, 327, 368, 369, 665, 730, 894, 908, 911, 935, 938, 1076], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 120, 124, 125, 131, 132, 133, 136, 141, 153, 1076], "mxnet": [0, 5, 15, 20, 131, 132, 133, 136, 141, 1076], "either": [0, 5, 12, 18, 19, 21, 40, 41, 75, 76, 86, 87, 121, 122, 124, 126, 127, 130, 131, 132, 136, 138, 139, 153, 179, 196, 199, 377, 393, 396, 413, 416, 518, 519, 520, 521, 522, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 610, 613, 620, 623, 625, 628, 650, 654, 665, 686, 712, 716, 717, 806, 830, 833, 955, 956, 957, 958, 1032, 1049, 1052, 1057, 1060, 1098, 1109, 1110, 1111], "doesn": [0, 5, 18, 21, 122, 124, 131, 136, 153], "matter": [0, 5, 14, 122], "been": [0, 5, 19, 120, 121, 124, 126, 127, 130, 131, 132, 134, 136, 152, 153, 327, 346, 665, 687, 688, 689, 983, 984], "ivy_np": [0, 5, 124], "us": [0, 5, 12, 15, 16, 17, 19, 20, 54, 55, 56, 57, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 164, 166, 167, 168, 169, 170, 173, 175, 178, 249, 284, 285, 288, 327, 336, 337, 362, 366, 369, 370, 371, 372, 374, 376, 377, 398, 401, 423, 426, 438, 440, 448, 451, 463, 466, 508, 511, 533, 536, 590, 593, 595, 598, 615, 618, 635, 638, 665, 693, 700, 701, 716, 722, 723, 724, 725, 732, 733, 750, 752, 755, 757, 759, 771, 773, 775, 777, 789, 795, 801, 802, 804, 805, 806, 815, 817, 818, 820, 834, 836, 878, 879, 882, 894, 908, 911, 912, 915, 920, 923, 929, 930, 931, 932, 933, 943, 946, 955, 956, 957, 958, 959, 960, 962, 968, 969, 970, 972, 977, 978, 979, 980, 981, 982, 995, 996, 997, 998, 1000, 1001, 1005, 1032, 1033, 1036, 1065, 1066, 1069, 1076, 1098, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1116, 1117], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 120, 122, 124, 126, 129, 133, 140], "call": [0, 6, 12, 15, 21, 72, 77, 78, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 327, 371, 665, 721, 727, 745, 750, 761, 959, 960, 965, 969, 970, 1098, 1109, 1110, 1111, 1114, 1118], "nativ": [0, 6, 29, 31, 32, 33, 34, 35, 75, 76, 124, 125, 131, 133, 138, 139, 179, 218, 219, 221, 249, 253, 254, 275, 327, 343, 344, 345, 346, 347, 366, 373, 376, 665, 710, 712, 715, 738, 1087, 1088], "native_arrai": [0, 6, 12, 34, 35, 40, 41, 42, 43, 80, 81, 86, 87, 88, 89, 124, 164, 166, 167, 168, 169, 170, 173, 175, 179, 213, 216, 244, 248, 249, 270, 273, 279, 282, 285, 288, 308, 311, 327, 349, 365, 377, 378, 381, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 488, 491, 493, 496, 508, 511, 533, 536, 590, 593, 595, 598, 610, 611, 612, 613, 614, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 655, 659, 665, 666, 667, 668, 669, 670, 674, 682, 683, 690, 693, 694, 697, 737, 739, 740, 742, 743, 744, 750, 752, 755, 766, 769, 789, 792, 795, 796, 799, 805, 806, 812, 814, 815, 817, 818, 820, 863, 865, 878, 879, 882, 889, 892, 894, 895, 898, 908, 911, 912, 915, 920, 923, 934, 935, 938, 943, 946, 983, 984, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1010, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1069], "1": [0, 6, 12, 15, 16, 21, 23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 68, 69, 72, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 122, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 140, 141, 153, 164, 166, 167, 168, 169, 175, 179, 180, 181, 182, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 244, 248, 249, 255, 258, 270, 271, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 331, 334, 336, 341, 346, 347, 349, 351, 355, 359, 361, 364, 365, 372, 377, 378, 379, 380, 381, 383, 386, 388, 391, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 413, 416, 423, 426, 428, 431, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 483, 486, 488, 489, 491, 493, 494, 495, 496, 503, 506, 508, 511, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 583, 584, 590, 593, 595, 598, 605, 608, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 673, 674, 682, 683, 690, 693, 694, 695, 696, 697, 698, 713, 719, 722, 723, 730, 733, 737, 739, 740, 741, 742, 743, 744, 748, 750, 752, 753, 754, 755, 756, 766, 768, 769, 770, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 827, 829, 838, 840, 844, 846, 854, 856, 857, 859, 863, 865, 866, 868, 869, 870, 871, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 916, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 942, 943, 946, 959, 962, 971, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1040, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 326, 327, 343, 344, 345, 346, 347, 349, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 708, 709, 710, 712, 713, 714, 715, 719, 722, 723, 724, 725, 726, 728, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 777, 778, 779, 780, 781, 782, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 969, 970, 971, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109], "ndarrai": [0, 6, 34, 35, 120, 129, 131, 132, 133, 138, 179, 183, 184, 185, 218, 221, 665, 739, 743], "Or": [0, 6, 139], "jaxlib": [0, 6, 18, 120, 131, 132, 138], "xla_extens": [0, 6, 120, 131, 132, 138], "devicearrai": [0, 6, 138], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 130, 133, 134, 139, 140, 141, 170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 249, 255, 257, 258, 259, 260, 262, 264, 265, 267, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 285, 287, 289, 292, 294, 296, 298, 300, 301, 302, 303, 305, 307, 308, 310, 311, 312, 314, 316, 318, 326, 327, 346, 347, 358, 362, 363, 366, 371, 374, 376, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 426, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 598, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 667, 668, 669, 670, 673, 674, 678, 679, 683, 686, 690, 692, 694, 696, 698, 702, 703, 710, 712, 713, 715, 716, 726, 728, 730, 731, 739, 740, 742, 746, 747, 748, 750, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 788, 806, 807, 808, 809, 810, 811, 830, 832, 834, 835, 836, 857, 859, 872, 873, 874, 879, 881, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 934, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 956, 957, 958, 959, 960, 961, 965, 969, 970, 971, 972, 978, 980, 982, 983, 984, 989, 990, 992, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1087, 1088, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 127], "unset": [0, 12, 127, 136, 138], "adjust": [0, 12, 1032, 1053, 1056, 1061, 1064], "dict": [0, 12, 29, 30, 31, 32, 33, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 130, 134, 139, 140, 170, 172, 174, 270, 272, 274, 327, 336, 337, 346, 349, 352, 353, 354, 355, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 687, 688, 689, 694, 696, 698, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 959, 961, 962, 965, 968, 971, 972, 976, 978, 980, 985, 987, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075], "previous": [0, 12, 18, 21, 124, 126, 136, 665, 676], "otherwis": [0, 12, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 129, 130, 131, 132, 136, 138, 170, 172, 174, 179, 180, 181, 249, 255, 258, 270, 271, 272, 273, 274, 276, 277, 278, 298, 301, 308, 311, 327, 346, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 675, 694, 696, 698, 739, 740, 742, 745, 750, 766, 767, 768, 769, 770, 784, 806, 807, 808, 809, 810, 811, 815, 817, 869, 871, 872, 874, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 955, 956, 957, 959, 972, 978, 980, 982, 995, 996, 997, 999, 1006, 1007, 1009, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "implement": [0, 12, 20, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 249, 255, 258, 314, 317, 327, 372, 377, 378, 381, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 483, 486, 488, 491, 538, 541, 543, 546, 548, 551, 553, 556, 585, 588, 605, 608, 610, 613, 625, 628, 630, 633, 650, 654, 655, 659, 806, 821, 823, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1076], "wa": [0, 12, 15, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 122, 136, 138, 170, 172, 174, 270, 272, 274, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 694, 696, 698, 739, 740, 742, 745, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 959, 972, 978, 980, 982, 1006, 1007, 1009, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "last": [0, 12, 16, 19, 52, 53, 68, 69, 75, 76, 98, 99, 114, 115, 122, 124, 127, 134, 153, 164, 169, 327, 346, 750, 788, 789, 803, 806, 812, 814, 818, 820, 834, 836, 866, 868, 869, 871, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 912, 915, 929, 932, 934, 939, 942, 1021, 1022, 1025, 1027, 1030, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1108], "henc": [0, 12, 124, 130, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "here": [0, 12, 18, 19, 20, 119, 120, 122, 124, 125, 130, 136, 137, 138, 139, 140, 141, 152, 153], "tensor": [0, 12, 14, 75, 76, 119, 120, 125, 126, 127, 129, 131, 132, 133, 136, 138, 139, 140, 141, 153, 179, 207, 208, 210, 211, 249, 279, 282, 377, 423, 426, 583, 584, 665, 719, 722, 723, 789, 801, 803, 806, 863, 865, 894, 908, 911, 925, 928, 934, 983, 984, 995, 998, 1076, 1098, 1106, 1108], "howev": [0, 12, 15, 18, 20, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 138, 139, 140, 141, 153], "befor": [0, 12, 18, 19, 20, 75, 76, 121, 124, 129, 131, 132, 133, 136, 139, 153, 327, 371, 377, 660, 664, 789, 804, 805, 955, 956, 957, 959, 971, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1049, 1052, 1057, 1060], "becom": [0, 12, 14, 16, 19, 122, 130, 136, 141, 153, 894, 895, 898], "swap": [0, 12, 894, 943, 946], "python": [0, 12, 13, 14, 15, 18, 19, 21, 124, 134, 136, 138, 139, 153, 179, 180, 181, 327, 366, 376, 377, 610, 613, 1076, 1082], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 132, 135, 138, 141, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1124], "op": [0, 12, 119, 136, 153], "eagertensor": [0, 12], "def": [1, 20, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 250, 251, 252, 328, 335, 338, 751, 1076, 1090, 1093, 1096], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1081, 1082, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1124], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 31, 33, 75, 76, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 141, 249, 290, 291, 297, 326, 327, 362, 364, 374, 665, 707, 710, 711, 717, 738, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 787, 1076, 1082, 1087, 1088, 1114, 1115, 1116, 1117, 1118, 1119], "ml": [13, 15, 16, 17, 135, 136, 137, 139, 140, 141, 152, 1076, 1082], "explos": [13, 15, 1076], "A": [13, 14, 15, 16, 21, 34, 35, 68, 69, 72, 75, 76, 77, 78, 79, 100, 101, 114, 115, 118, 124, 126, 130, 131, 132, 136, 139, 153, 179, 193, 194, 218, 219, 221, 327, 336, 337, 371, 377, 600, 603, 665, 701, 737, 806, 844, 846, 853, 854, 856, 857, 859, 894, 895, 897, 899, 934, 939, 942, 959, 960, 962, 964, 966, 967, 968, 969, 970, 973, 974, 975, 976, 1032, 1033, 1036, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1120, 1121], "huge": [13, 15, 139, 1076], "number": [13, 14, 18, 23, 26, 27, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 100, 101, 108, 109, 114, 115, 122, 124, 130, 132, 133, 136, 139, 141, 176, 177, 178, 179, 180, 181, 183, 185, 193, 194, 207, 208, 210, 211, 213, 216, 218, 221, 249, 260, 263, 284, 285, 288, 292, 295, 298, 301, 303, 306, 308, 311, 314, 317, 327, 363, 364, 365, 377, 393, 396, 413, 416, 453, 456, 493, 496, 498, 501, 583, 585, 588, 605, 608, 610, 613, 615, 618, 620, 623, 660, 664, 665, 666, 669, 692, 701, 703, 718, 744, 749, 789, 804, 806, 818, 820, 821, 823, 838, 840, 853, 857, 859, 869, 871, 894, 895, 896, 897, 898, 899, 904, 907, 916, 919, 920, 923, 929, 930, 931, 932, 933, 934, 939, 942, 947, 950, 951, 954, 955, 956, 957, 958, 983, 984, 993, 995, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109], "tool": [13, 16, 19, 137, 141, 152, 153, 1076], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 285, 288, 327, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 687, 688, 689, 691, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 766, 767, 768, 769, 770, 784, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "explod": [13, 14, 1076], "onto": [13, 14, 327, 356, 357, 959, 965, 971, 1076], "scene": [13, 14, 118, 135, 137, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 1076], "b": [13, 16, 17, 23, 26, 27, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 122, 126, 127, 130, 135, 136, 137, 139, 140, 141, 151, 179, 244, 248, 249, 270, 272, 273, 274, 279, 282, 308, 311, 327, 349, 377, 378, 380, 381, 382, 393, 395, 396, 397, 398, 401, 403, 405, 406, 407, 423, 426, 438, 440, 441, 442, 448, 451, 453, 455, 456, 458, 460, 461, 462, 463, 466, 488, 490, 491, 493, 495, 496, 508, 511, 533, 536, 583, 584, 590, 593, 595, 598, 610, 612, 613, 614, 615, 618, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 638, 640, 643, 650, 651, 653, 654, 655, 656, 658, 659, 665, 666, 668, 669, 670, 673, 674, 682, 683, 690, 693, 694, 696, 697, 698, 739, 740, 742, 743, 744, 750, 752, 754, 755, 756, 766, 768, 769, 770, 789, 792, 795, 796, 798, 799, 800, 805, 806, 807, 809, 810, 811, 812, 814, 815, 817, 818, 820, 844, 846, 854, 856, 863, 865, 875, 877, 878, 879, 881, 882, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 898, 899, 908, 911, 912, 915, 920, 922, 923, 924, 929, 931, 932, 933, 935, 937, 938, 939, 942, 943, 946, 959, 962, 976, 977, 978, 980, 981, 982, 983, 985, 987, 988, 989, 991, 995, 997, 998, 999, 1000, 1006, 1007, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1075, 1076, 1082], "why": [13, 15, 19, 120, 130, 133, 138, 1076], "unifi": [13, 15, 75, 76, 129, 136, 153, 327, 356, 357, 358, 359, 371, 1076], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 50, 51, 72, 75, 76, 77, 78, 79, 86, 87, 96, 97, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 176, 177, 179, 213, 216, 231, 233, 235, 236, 238, 240, 249, 265, 268, 327, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 676, 710, 719, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 827, 829, 830, 833, 838, 840, 844, 846, 847, 849, 850, 852, 854, 856, 857, 859, 863, 865, 866, 868, 869, 871, 872, 874, 894, 925, 928, 983, 994, 995, 996, 997, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1076], "them": [13, 14, 15, 16, 124, 127, 129, 130, 136, 138, 139, 140, 153, 1076], "c": [13, 15, 16, 17, 44, 45, 86, 87, 90, 91, 104, 105, 118, 122, 126, 130, 135, 136, 137, 139, 153, 249, 285, 288, 377, 595, 598, 620, 622, 623, 665, 673, 674, 682, 744, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 795, 894, 939, 942, 959, 962, 976, 985, 987, 995, 998, 1032, 1033, 1036, 1053, 1056, 1061, 1064, 1076, 1082], "standard": [13, 56, 57, 102, 103, 118, 119, 120, 121, 123, 124, 129, 133, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 533, 536, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 806, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 977, 978, 979, 980, 981, 982, 983, 988, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1053, 1056, 1061, 1064, 1065, 1066, 1069, 1076, 1082, 1112, 1113], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 153, 327, 371, 665, 687, 806, 863, 865, 894, 929, 932, 995, 999, 1076], "collabor": [13, 14, 15, 1076], "consortium": [13, 15, 1076, 1082], "data": [13, 15, 23, 26, 27, 28, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 83, 86, 87, 90, 91, 96, 97, 100, 101, 108, 109, 114, 115, 118, 119, 120, 121, 126, 128, 130, 132, 133, 138, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 253, 254, 255, 258, 265, 268, 270, 271, 272, 273, 274, 275, 279, 282, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 322, 326, 327, 329, 330, 331, 332, 333, 334, 339, 340, 341, 343, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 673, 674, 712, 713, 715, 734, 750, 766, 767, 768, 769, 770, 787, 789, 802, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 856, 857, 859, 863, 865, 866, 868, 869, 871, 872, 874, 894, 908, 911, 912, 915, 916, 919, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 983, 994, 995, 996, 997, 998, 1007, 1008, 1009, 1021, 1022, 1025, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1082, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109], "api": [13, 14, 18, 19, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 139, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 533, 536, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 806, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069, 1076, 1082], "open": [14, 15, 16, 17, 18, 21, 104, 105, 121, 152, 179, 180, 181, 983, 985, 986, 987, 989, 991, 1076], "project": [14, 15, 16, 18, 19, 21, 119, 124, 127, 138, 140, 152, 153, 983, 984, 988], "grown": 14, "consider": [14, 120, 122], "recent": [14, 15, 18, 19, 124], "year": [14, 16, 153, 1076], "especi": [14, 18], "deep": [14, 17, 19, 20, 75, 76, 130, 135, 139, 1076], "learn": [14, 15, 18, 20, 118, 126, 135, 141, 152, 377, 503, 506, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 955, 956, 957, 958, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "can": [14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 82, 83, 104, 105, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 179, 183, 184, 185, 218, 221, 249, 270, 271, 272, 273, 274, 327, 369, 370, 371, 806, 827, 829, 894, 925, 928, 983, 985, 986, 987, 1076, 1082], "seen": [14, 15, 122, 124, 138, 139], "rapidli": 14, "increas": [14, 327, 351, 355, 359, 894, 904, 907, 951, 954, 959, 971], "github": [14, 19, 20, 121, 124], "repo": [14, 15, 16, 18, 19, 123, 136, 138, 139, 140, 141, 152, 1076, 1082], "contain": [14, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 40, 41, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 131, 133, 135, 136, 137, 140, 141, 153, 164, 167, 168, 170, 171, 173, 179, 180, 181, 183, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 218, 223, 224, 226, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 248, 249, 255, 260, 265, 270, 273, 279, 282, 285, 288, 292, 298, 301, 303, 308, 311, 314, 327, 348, 349, 352, 361, 365, 377, 378, 379, 381, 383, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 483, 484, 486, 488, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 669, 671, 674, 677, 678, 680, 682, 683, 690, 693, 694, 697, 702, 705, 714, 726, 737, 739, 743, 744, 746, 750, 752, 755, 757, 762, 766, 769, 771, 775, 779, 789, 792, 795, 796, 799, 805, 806, 807, 808, 810, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 878, 879, 880, 882, 884, 885, 887, 889, 890, 892, 894, 895, 896, 898, 900, 904, 908, 911, 912, 915, 916, 919, 920, 923, 925, 929, 932, 934, 935, 938, 939, 943, 946, 947, 951, 955, 956, 957, 958, 959, 972, 977, 978, 981, 983, 984, 985, 988, 989, 991, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1008, 1010, 1011, 1016, 1020, 1021, 1022, 1025, 1027, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1069, 1071, 1072, 1074, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1118, 1120, 1121], "term": [14, 19, 130, 789, 803, 1098, 1108], "time": [14, 15, 16, 18, 19, 20, 62, 63, 108, 109, 120, 124, 126, 130, 131, 136, 139, 141, 153, 750, 757, 759, 771, 773, 789, 803, 894, 947, 950, 955, 956, 957, 958, 995, 996, 997, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1098, 1109, 1110, 1111], "These": [14, 15, 16, 19, 120, 121, 122, 124, 125, 126, 130, 131, 133, 136, 137, 139, 140, 141, 153, 806, 821, 823, 1076, 1082], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 42, 43, 54, 55, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 100, 101, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 154, 162, 179, 180, 181, 327, 336, 337, 361, 365, 367, 371, 377, 458, 459, 460, 461, 462, 568, 571, 573, 576, 615, 618, 625, 626, 627, 628, 629, 650, 651, 652, 653, 654, 665, 666, 667, 668, 669, 670, 673, 674, 675, 699, 702, 706, 707, 711, 718, 720, 726, 734, 746, 750, 788, 789, 802, 806, 812, 814, 830, 833, 834, 836, 838, 840, 847, 849, 857, 859, 860, 862, 869, 871, 894, 895, 896, 897, 898, 899, 912, 915, 929, 930, 931, 932, 933, 959, 961, 965, 971, 983, 988, 989, 991, 995, 996, 997, 998, 1000, 1001, 1005, 1076, 1120, 1121], "written": [14, 18, 119, 120, 121, 124, 125, 129, 133, 136, 138, 141, 153], "mani": [14, 15, 16, 18, 19, 20, 75, 76, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 153, 894, 934], "differ": [14, 15, 16, 18, 19, 40, 41, 72, 75, 76, 77, 78, 79, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 153, 249, 285, 288, 327, 348, 349, 352, 353, 377, 393, 396, 585, 588, 645, 647, 649, 789, 802, 894, 939, 942, 1032, 1049, 1052, 1057, 1060, 1076], "while": [14, 15, 18, 19, 72, 75, 76, 77, 78, 79, 122, 124, 127, 133, 134, 140, 141, 153, 377, 568, 571, 573, 576, 1000, 1001, 1005, 1032, 1041, 1044], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 170, 171, 172, 174, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 270, 271, 272, 273, 274, 285, 288, 298, 301, 308, 311, 327, 351, 355, 359, 366, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 692, 693, 694, 695, 696, 698, 710, 721, 727, 739, 740, 741, 742, 750, 752, 753, 754, 756, 757, 759, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 787, 788, 789, 792, 796, 797, 798, 799, 800, 802, 805, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 834, 836, 853, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 908, 911, 912, 915, 920, 921, 922, 924, 925, 928, 929, 930, 931, 932, 933, 935, 936, 937, 939, 942, 959, 965, 971, 972, 977, 978, 979, 980, 981, 982, 985, 987, 995, 996, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1032, 1037, 1040, 1041, 1044, 1053, 1056, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1082, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "wonder": [14, 16, 138], "thing": [14, 15, 16, 18, 19, 20, 124, 127, 138, 139], "research": [14, 152], "develop": [14, 15, 16, 17, 18, 19, 20, 152, 153, 1076], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 170, 171, 172, 174, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 270, 271, 272, 273, 274, 298, 301, 308, 311, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 693, 694, 695, 696, 698, 710, 739, 740, 741, 742, 750, 752, 753, 754, 756, 757, 759, 766, 767, 768, 770, 789, 792, 796, 797, 798, 799, 800, 802, 805, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 908, 911, 912, 915, 920, 921, 922, 924, 929, 930, 931, 932, 933, 935, 936, 937, 955, 956, 957, 958, 959, 960, 961, 969, 970, 971, 977, 978, 979, 980, 981, 982, 985, 987, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1098, 1108], "consid": [14, 15, 75, 76, 119, 126, 137, 138, 139, 377, 568, 571, 573, 576, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "speed": [14, 124], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 40, 41, 72, 75, 76, 77, 78, 79, 90, 91, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 153, 164, 166, 167, 168, 169, 170, 173, 175, 327, 349, 372, 377, 448, 451, 610, 611, 640, 643, 750, 752, 754, 755, 756, 788, 789, 795, 796, 799, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1076, 1082], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 125, 136, 141, 151, 153, 327, 372, 377, 488, 491, 568, 571, 573, 576, 806, 821, 823, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1076], "outdat": 14, "month": 14, "rigor": [14, 124], "maintain": [14, 19, 1021, 1022, 1025, 1027, 1030], "against": [14, 75, 76, 124, 153, 249, 260, 263, 806, 830, 833, 834, 836, 838, 840, 847, 849, 995, 996], "newest": 14, "version": [14, 15, 16, 18, 121, 125, 131, 136, 138, 806, 821, 823, 1076], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 44, 45, 90, 91, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 179, 180, 181, 213, 216, 377, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 750, 766, 767, 768, 769, 770, 787, 806, 857, 859, 866, 868, 894, 895, 898, 939, 942, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1045, 1048, 1057, 1060, 1087, 1088], "softwar": [14, 15, 18, 19], "pipelin": [14, 129, 141], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 34, 35, 54, 55, 68, 69, 72, 75, 76, 77, 78, 100, 101, 114, 115, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 153, 179, 201, 202, 203, 205, 213, 216, 377, 413, 416, 483, 486, 548, 551, 585, 588, 605, 608, 665, 706, 710, 719, 750, 788, 806, 821, 823, 838, 840, 847, 849, 850, 852, 857, 859, 860, 862, 866, 868, 869, 871, 894, 895, 896, 897, 898, 899, 904, 907, 908, 911, 916, 919, 939, 942, 951, 954, 959, 960, 970, 983, 984, 995, 998, 1032, 1053, 1056, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 141], "signific": [14, 15, 153], "bottleneck": 14, "As": [14, 19, 70, 71, 116, 117, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 139, 140, 153, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 42, 43, 56, 57, 75, 76, 82, 83, 88, 89, 102, 103, 118, 119, 121, 122, 124, 128, 130, 131, 133, 135, 138, 141, 152, 179, 187, 196, 199, 201, 202, 205, 223, 224, 226, 229, 241, 243, 244, 248, 249, 322, 377, 418, 421, 548, 551, 600, 603, 665, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 722, 723, 724, 725, 732, 733, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 894, 908, 911, 925, 928, 939, 942, 959, 964, 975, 976, 977, 978, 979, 980, 981, 982, 1076, 1087, 1088, 1098, 1108, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119], "futur": [14, 16, 18, 19, 138, 153, 806, 821, 823], "avail": [14, 18, 19, 75, 76, 121, 125, 132, 153, 327, 346, 362, 363, 364, 374, 665, 688], "specif": [14, 20, 75, 76, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 152, 153, 249, 314, 317, 327, 369, 372, 377, 568, 571, 573, 576, 665, 687, 688, 689, 717, 806, 821, 823, 863, 865, 894, 939, 942, 955, 956, 957, 958, 983, 984, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1076, 1079, 1081, 1082, 1110, 1111], "quickli": [14, 16, 18, 19, 139, 140], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 124, 125, 127, 130, 133, 135, 153, 1098, 1109, 1110, 1111], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 70, 71, 116, 117, 122, 124, 125, 130, 134, 135, 138, 139, 140, 141, 153, 1076], "desir": [14, 36, 37, 75, 76, 82, 83, 125, 249, 255, 258, 270, 271, 272, 273, 274, 327, 372, 665, 706, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109], "provid": [14, 18, 19, 68, 69, 75, 76, 114, 115, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 140, 152, 153, 176, 177, 179, 213, 216, 249, 276, 277, 278, 297, 314, 317, 326, 327, 346, 665, 686, 719, 723, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 806, 869, 871, 894, 912, 915, 939, 942, 995, 996, 1032, 1053, 1056, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1114, 1115, 1116, 1117, 1118, 1119], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 68, 69, 70, 71, 75, 76, 88, 89, 100, 101, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 154, 162, 176, 177, 179, 180, 181, 231, 233, 235, 236, 238, 240, 327, 336, 361, 367, 665, 666, 669, 673, 674, 699, 720, 739, 740, 741, 742, 743, 789, 803, 806, 854, 856, 863, 865, 872, 874, 894, 912, 915, 929, 930, 931, 932, 933, 955, 956, 957, 958, 959, 960, 961, 970, 971, 972, 983, 984, 989, 991, 1065, 1070, 1076, 1079, 1081], "modern": [14, 15], "simpl": [14, 18, 19, 119, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 153, 665, 690], "scalabl": [14, 136], "manner": [14, 29, 32, 33, 75, 76, 119, 121, 124, 132, 139, 152, 153, 959, 971], "must": [14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 126, 129, 130, 131, 132, 136, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 327, 356, 357, 358, 359, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 687, 688, 689, 691, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1114, 1118], "determin": [14, 23, 26, 27, 40, 41, 50, 51, 68, 69, 72, 75, 76, 77, 78, 86, 87, 96, 97, 114, 115, 121, 126, 130, 131, 132, 249, 270, 273, 275, 284, 297, 298, 301, 303, 306, 308, 311, 326, 327, 362, 363, 364, 374, 377, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 483, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 502, 513, 516, 518, 521, 523, 526, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 578, 581, 585, 586, 587, 588, 589, 605, 606, 607, 608, 609, 610, 611, 613, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 669, 673, 674, 705, 707, 711, 712, 713, 714, 715, 734, 749, 750, 766, 769, 789, 804, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 827, 829, 830, 833, 838, 840, 844, 846, 847, 849, 853, 854, 856, 866, 868, 869, 871, 872, 874, 955, 956, 957, 958, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "exactli": [14, 16, 122, 130, 132, 1076, 1082], "common": [14, 20, 75, 76, 122, 126, 128, 130, 132, 134, 153], "ground": [14, 124], "li": 14, "between": [14, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 120, 122, 124, 126, 129, 130, 135, 137, 138, 139, 141, 152, 179, 180, 181, 249, 285, 288, 377, 413, 416, 605, 608, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 908, 911, 939, 942, 959, 965, 983, 985, 986, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076, 1114, 1116], "find": [14, 18, 19, 75, 76, 124, 136, 139, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 121, 122, 123, 124, 126, 127, 128, 133, 136, 153, 665, 686, 1114, 1118], "essenti": [14, 15, 20, 122, 126, 132], "order": [14, 18, 19, 21, 72, 75, 76, 77, 78, 79, 120, 121, 122, 125, 127, 129, 130, 131, 132, 138, 139, 141, 153, 377, 413, 416, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 806, 821, 823, 834, 836, 857, 859, 860, 862, 872, 874, 894, 912, 915, 955, 956, 957, 995, 998, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1120, 1121], "design": [14, 15, 118, 133, 136, 138, 153], "univers": 14, "abstract": [14, 130, 140, 153, 327, 342, 1114, 1118], "In": [14, 16, 18, 19, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 327, 366, 372, 373, 376, 377, 393, 396, 585, 588, 610, 613, 665, 671, 710, 894, 925, 928, 983, 989, 991, 1076], "search": [14, 18, 29, 32, 33, 61, 75, 76, 107, 119, 122, 124, 996, 997, 998, 999], "languag": [14, 16, 136], "first": [14, 15, 18, 19, 21, 23, 26, 27, 40, 41, 62, 63, 72, 77, 78, 86, 87, 108, 109, 120, 122, 124, 126, 129, 130, 136, 138, 139, 141, 176, 177, 179, 207, 208, 210, 211, 249, 313, 322, 327, 346, 358, 377, 393, 394, 395, 396, 397, 413, 414, 415, 417, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 473, 474, 476, 498, 501, 503, 504, 508, 509, 511, 528, 529, 531, 533, 534, 536, 558, 559, 561, 563, 564, 566, 573, 574, 576, 578, 579, 581, 585, 586, 588, 595, 596, 598, 605, 606, 608, 645, 646, 647, 648, 649, 665, 673, 750, 761, 806, 812, 814, 818, 820, 821, 823, 830, 833, 844, 846, 850, 852, 857, 859, 863, 865, 869, 871, 894, 900, 903, 929, 932, 939, 942, 943, 946, 955, 956, 957, 958, 959, 960, 969, 970, 983, 994, 995, 996, 997, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1098, 1109, 1110, 1111, 1114, 1118], "see": [14, 17, 18, 19, 20, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 86, 87, 114, 115, 120, 123, 126, 130, 132, 138, 139, 152, 153, 179, 180, 181, 196, 199, 207, 208, 210, 211, 249, 265, 268, 314, 317, 377, 393, 394, 395, 396, 397, 413, 414, 415, 417, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 468, 469, 470, 471, 472, 473, 474, 475, 477, 488, 491, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 528, 529, 530, 531, 532, 533, 534, 535, 537, 558, 559, 560, 561, 562, 563, 564, 565, 567, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 645, 646, 647, 648, 649, 806, 838, 840, 847, 849, 854, 856, 869, 871, 872, 874, 995, 997, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "clear": [14, 15, 16, 19, 20, 122, 131, 132, 136, 138, 327, 345], "front": [14, 135, 136, 139, 1076, 1082], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 136, 138, 140, 141, 1076], "littl": [14, 138], "deeper": [14, 19, 118, 135, 327, 351, 355, 359, 959, 970, 971], "follow": [14, 15, 18, 19, 20, 21, 75, 76, 119, 121, 122, 124, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 153, 249, 292, 295, 327, 371, 377, 610, 613, 665, 708, 709, 710, 732, 733, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 804, 805, 806, 850, 852, 872, 874, 959, 965, 971, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076, 1098, 1108, 1114, 1118], "same": [14, 16, 18, 19, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 75, 76, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 108, 109, 119, 120, 122, 124, 125, 126, 129, 130, 132, 133, 134, 136, 138, 140, 141, 179, 180, 181, 188, 189, 191, 202, 203, 205, 213, 216, 226, 227, 229, 231, 233, 235, 236, 238, 240, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 327, 336, 337, 371, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 393, 396, 398, 399, 408, 409, 428, 429, 430, 431, 432, 438, 439, 440, 442, 453, 454, 455, 456, 457, 493, 494, 495, 496, 497, 585, 588, 590, 591, 592, 594, 600, 601, 602, 604, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 660, 661, 662, 663, 664, 665, 691, 693, 694, 695, 696, 697, 698, 719, 722, 723, 750, 766, 767, 768, 769, 770, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 866, 868, 869, 871, 894, 900, 903, 912, 915, 916, 919, 929, 930, 931, 932, 933, 935, 938, 939, 942, 955, 956, 957, 959, 972, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1057, 1060, 1061, 1064, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "core": [14, 18, 20, 132, 136, 141, 327, 363, 1076], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 48, 49, 72, 75, 76, 77, 78, 94, 95, 121, 122, 124, 125, 126, 129, 130, 132, 133, 139, 140, 179, 207, 208, 210, 211, 249, 314, 317, 377, 393, 396, 443, 446, 448, 451, 508, 511, 590, 593, 595, 598, 610, 613, 640, 643, 665, 675, 687, 688, 689, 734, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802], "expos": [14, 136, 140, 665, 681], "almost": [14, 19, 130, 137, 139], "ident": [14, 16, 75, 76, 125, 126, 128, 130, 138, 139, 153, 327, 361, 959, 972, 1076], "uniqu": [14, 62, 63, 108, 109, 124, 126, 130, 153, 327, 336, 337, 955, 956, 957, 958, 959, 965, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020], "syntax": [14, 15, 134], "There": [14, 18, 19, 122, 125, 126, 129, 130, 131, 134, 136, 139, 153], "onli": [14, 17, 18, 19, 23, 26, 27, 75, 76, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 327, 367, 377, 568, 571, 573, 576, 806, 830, 833, 850, 852, 894, 912, 915, 959, 960, 961, 969, 970, 995, 996, 997, 1032, 1041, 1044, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 153, 154, 162, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 807, 808, 809, 811, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 959, 960, 970, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076], "wai": [14, 15, 18, 124, 127, 133, 138, 139, 140, 141, 153], "manipul": [14, 55, 101, 119, 141, 152, 895, 898, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 932, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954], "unsurprisingli": [14, 122], "fundament": [14, 130, 136], "consist": [14, 75, 76, 129, 131, 133, 327, 359, 806, 821, 823, 1032, 1033, 1036, 1110, 1111], "each": [14, 15, 16, 19, 20, 24, 25, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 152, 153, 164, 167, 168, 170, 171, 172, 173, 174, 179, 213, 216, 249, 260, 263, 327, 336, 337, 348, 349, 350, 351, 352, 353, 354, 358, 371, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 476, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 563, 566, 568, 570, 571, 572, 573, 576, 578, 581, 585, 588, 590, 591, 592, 593, 594, 595, 598, 600, 601, 602, 603, 604, 605, 608, 610, 611, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 821, 823, 830, 833, 838, 840, 841, 843, 847, 849, 854, 856, 857, 859, 894, 904, 907, 920, 923, 929, 930, 931, 932, 933, 934, 939, 942, 947, 950, 951, 954, 959, 965, 972, 983, 984, 995, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1032, 1033, 1036, 1076, 1082, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "veri": [14, 15, 18, 19, 119, 120, 122, 124, 126, 130, 132, 133, 137, 139, 140, 141, 153, 1076], "similar": [14, 119, 124, 130, 131, 132, 139, 153, 377, 610, 613, 789, 804, 1098, 1109], "convent": [14, 152, 806, 830, 833, 1032, 1033, 1036], "those": [14, 18, 19, 20, 54, 55, 75, 76, 100, 101, 124, 130, 136, 141, 179, 180, 181, 750, 787, 806, 850, 852, 857, 859, 894, 895, 896, 897, 898, 899], "introduc": [14, 130, 139, 894, 929, 932, 1000, 1001, 1005], "2006": 14, "layer": [14, 49, 56, 57, 95, 102, 103, 119, 121, 136, 137, 140, 790, 791, 792, 793, 794, 795, 796, 799, 801, 802, 803, 804, 805, 977, 978, 979, 980, 981, 982, 1076, 1089, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 453, 456, 488, 491, 493, 496, 583, 584, 595, 598, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 818, 820, 894, 929, 932, 977, 978, 981, 1000, 1006, 1010, 1032, 1037, 1040, 1065, 1066, 1069], "present": [14, 19, 75, 76, 120, 123, 130, 131, 132, 133, 136], "itself": [14, 18, 19, 120, 125, 130, 133, 140, 152, 153, 665, 671, 959, 971], "cut": 14, "cloth": 14, "adher": [14, 15, 121, 123, 136, 141], "semant": [14, 136, 141, 377, 610, 613], "round": [14, 15, 16, 18, 19, 20, 21, 40, 41, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 377, 393, 396, 453, 454, 455, 456, 457, 493, 494, 495, 496, 497, 498, 501, 585, 588, 619, 635, 638, 660, 661, 662, 663, 664, 1076], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152], "paint": [14, 136], "pictur": [14, 136], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 152, 153, 1076, 1082, 1098, 1109, 1110, 1111], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1076], "check": [14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 44, 45, 75, 76, 90, 91, 124, 130, 135, 136, 138, 139, 140, 141, 152, 249, 275, 290, 291, 297, 303, 306, 326, 327, 366, 376, 665, 675, 690, 702, 705, 712, 713, 714, 715, 726, 734, 746, 749, 750, 766, 767, 768, 769, 770, 806, 821, 823, 959, 960, 969, 970, 971, 1076], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 279, 281, 283, 327, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 679, 680, 682, 683, 684, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1106], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 1076], "faq": [14, 15, 16, 136, 138, 139, 140, 141, 152], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 327, 351, 355, 359, 959, 971], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1076], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 1076, 1082], "question": [14, 15, 16, 18, 19, 122, 124, 136, 138, 139, 140, 141, 152, 153, 1076], "With": [15, 16, 18, 23, 26, 27, 40, 41, 42, 43, 44, 45, 72, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 125, 136, 164, 166, 167, 168, 169, 170, 173, 175, 179, 213, 216, 244, 248, 249, 270, 273, 279, 282, 285, 288, 308, 311, 327, 349, 365, 377, 378, 381, 393, 396, 397, 398, 401, 403, 406, 423, 426, 438, 441, 442, 448, 451, 453, 456, 458, 459, 460, 461, 462, 463, 466, 488, 491, 493, 496, 508, 511, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 650, 654, 655, 659, 665, 666, 667, 668, 669, 670, 674, 682, 683, 690, 693, 694, 697, 698, 737, 739, 740, 741, 742, 743, 744, 750, 752, 753, 755, 766, 767, 768, 769, 770, 789, 792, 795, 796, 799, 805, 806, 807, 810, 811, 812, 814, 815, 817, 818, 820, 834, 836, 863, 865, 878, 879, 882, 883, 884, 888, 889, 892, 893, 894, 895, 898, 899, 908, 911, 912, 915, 920, 923, 929, 932, 933, 934, 935, 938, 943, 946, 959, 962, 976, 977, 978, 980, 981, 982, 983, 984, 985, 987, 988, 989, 991, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1069], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 75, 76, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 136, 139, 152, 153, 179, 180, 181, 665, 721, 727, 1000, 1011, 1015, 1076], "would": [15, 18, 19, 21, 118, 120, 121, 122, 124, 127, 128, 129, 130, 133, 135, 136, 138, 140, 141, 153, 164, 169, 327, 372, 1076], "entir": [15, 16, 19, 68, 69, 75, 76, 114, 115, 122, 123, 124, 129, 130, 133, 138, 139, 140, 141, 153, 327, 371, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1107], "forgiven": 15, "rais": [15, 19, 68, 69, 75, 76, 114, 115, 133, 134, 136, 138, 249, 265, 268, 377, 483, 486, 605, 608, 665, 675, 700, 710, 724, 733, 745, 750, 788, 806, 830, 833, 837, 869, 871, 894, 935, 938, 939, 942, 995, 998, 1032, 1037, 1040, 1045, 1048, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1110, 1111, 1114, 1118], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 70, 71, 75, 76, 86, 87, 90, 91, 100, 101, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 164, 167, 168, 170, 171, 173, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 270, 273, 285, 288, 298, 301, 308, 311, 314, 317, 327, 349, 353, 372, 377, 378, 379, 381, 383, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 476, 478, 479, 483, 484, 486, 488, 491, 493, 494, 496, 498, 499, 501, 503, 504, 506, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 623, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 643, 645, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 676, 677, 678, 680, 682, 691, 692, 693, 706, 710, 712, 713, 714, 715, 739, 743, 744, 745, 750, 766, 767, 768, 769, 770, 784, 786, 787, 788, 789, 792, 796, 799, 805, 806, 807, 808, 810, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 837, 838, 840, 841, 843, 847, 849, 850, 852, 853, 854, 856, 857, 859, 866, 868, 869, 871, 872, 874, 894, 895, 896, 898, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 959, 965, 977, 978, 981, 983, 985, 986, 987, 994, 995, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1087, 1088, 1110, 1111, 1114, 1115, 1116, 1118], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 125, 126, 131, 132, 133, 136, 138, 141, 153, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "other": [15, 18, 19, 23, 26, 27, 42, 43, 72, 75, 76, 77, 78, 88, 89, 119, 121, 122, 124, 125, 126, 129, 130, 133, 134, 136, 138, 140, 141, 151, 152, 153, 176, 177, 179, 180, 181, 377, 488, 491, 665, 666, 667, 668, 669, 670, 671, 750, 761, 983, 989, 991, 1000, 1011, 1015, 1032, 1053, 1056, 1061, 1064, 1076], "strong": [15, 153], "industri": 15, "back": [15, 129, 135, 136, 138, 153, 1076, 1082, 1110, 1111, 1114, 1118], "momentum": 15, "won": [15, 16, 19, 141], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 136, 140, 153, 665, 732, 733, 806, 821, 823, 894, 908, 911, 1120, 1121], "just": [15, 16, 18, 19, 121, 122, 124, 125, 126, 133, 136, 138, 139, 153, 1032, 1033, 1036, 1098, 1107], "make": [15, 16, 18, 19, 20, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 327], "problem": [15, 19, 129, 138], "even": [15, 16, 18, 19, 120, 121, 126, 131, 132, 138, 139, 140, 141, 153, 377, 605, 608, 615, 618], "wors": 15, "rather": [15, 44, 45, 75, 76, 90, 91, 119, 121, 124, 130, 141, 153, 179, 180, 181, 327, 371, 665, 712, 713, 715, 750, 766, 767, 768, 769, 770], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 126, 130], "feasibl": 15, "space": [15, 179, 180, 181, 207, 208, 210, 211, 665, 692, 750, 788], "case": [15, 18, 19, 20, 29, 32, 33, 72, 75, 76, 77, 78, 79, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 153, 179, 213, 216, 327, 366, 373, 376, 377, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 448, 451, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 665, 710, 722, 723, 806, 834, 836, 894, 925, 928, 959, 962, 968, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064, 1098, 1109, 1110, 1111, 1114, 1118], "unlik": [15, 122, 130, 327], "charger": 15, "charact": [15, 134], "encod": [15, 139, 665, 692], "instant": [15, 1076], "messag": [15, 19, 134, 136, 138, 1123, 1124], "much": [15, 19, 119, 129, 130, 133, 136, 138, 139], "doe": [15, 19, 21, 75, 76, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 136, 138, 139, 153, 377, 448, 451, 665, 710, 894, 934], "mandat": [15, 124, 133], "adopt": [15, 19, 129], "continu": [15, 16, 123, 124, 134, 153], "own": [15, 16, 18, 121, 124, 134, 136, 153], "signatur": [15, 119, 120, 121, 122, 124, 130, 131, 132, 133, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "replac": [15, 19, 21, 54, 55, 75, 76, 100, 101, 122, 124, 128, 130, 131, 132, 136, 138, 141, 153, 665, 722, 723, 894, 895, 896, 897, 898, 899, 983, 984], "your": [15, 16, 17, 18, 20, 21, 119, 121, 139, 140, 153, 1076], "10": [15, 18, 21, 40, 41, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 130, 136, 138, 139, 179, 201, 210, 211, 212, 327, 377, 423, 426, 428, 431, 463, 466, 488, 491, 508, 511, 533, 536, 543, 544, 545, 546, 547, 630, 631, 632, 633, 634, 635, 638, 665, 683, 693, 721, 727, 750, 771, 772, 773, 774, 789, 795, 806, 815, 817, 818, 820, 844, 846, 863, 865, 894, 912, 915, 934, 935, 937, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 995, 998, 1000, 1001, 1005, 1032, 1033, 1036, 1037, 1040, 1114, 1116], "100": [15, 16, 104, 105, 124, 139, 140, 141, 153, 377, 635, 638, 985, 987, 1076], "despit": [15, 130, 132], "distinct": [15, 121, 130, 133, 135, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076], "still": [15, 75, 76, 121, 124, 131, 138, 140, 153, 1076], "believ": [15, 19], "share": [15, 75, 76, 122, 124, 126, 127, 130, 136, 249, 322], "bring": [15, 124, 136, 137], "benefit": [15, 16, 18, 19, 129, 130, 133, 138, 139, 153], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 121, 122, 124, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 1076], "again": [15, 16, 19, 119, 122, 124, 130, 133, 139, 141, 153], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 139], "most": [15, 18, 19, 75, 76, 119, 120, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 153, 806, 821, 823], "technolog": 15, "sector": [15, 40, 41, 86, 87, 377, 388, 389, 390, 391, 392, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422], "full": [15, 16, 19, 23, 26, 27, 72, 77, 78, 120, 121, 124, 131, 136, 153, 179, 249, 285, 288, 377, 508, 511, 533, 536, 789, 795, 806, 850, 852, 854, 856, 857, 859], "success": 15, "reason": [15, 19, 119, 122, 126, 129, 130, 131, 133, 136, 138, 377, 610, 613], "build": [15, 17, 18, 126, 135, 137, 140, 141, 153, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1076, 1098, 1109, 1110, 1111], "custom": [15, 124, 140], "comput": [15, 16, 18, 23, 26, 27, 40, 41, 52, 53, 75, 76, 86, 87, 98, 99, 124, 125, 126, 130, 136, 139, 153, 327, 371, 377, 393, 396, 423, 426, 438, 441, 448, 451, 473, 476, 478, 479, 480, 481, 482, 503, 506, 508, 511, 528, 531, 533, 536, 563, 566, 568, 571, 573, 576, 578, 581, 585, 588, 590, 593, 595, 598, 665, 677, 678, 680, 683, 684, 750, 752, 755, 757, 759, 761, 762, 764, 771, 773, 775, 777, 779, 781, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 802, 804, 806, 807, 810, 812, 814, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 850, 852, 853, 854, 856, 857, 859, 869, 871, 872, 874, 878, 879, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 959, 965, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "thank": [15, 139], "interoper": 15, "compon": [15, 136, 750, 788], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 72, 75, 76, 77, 78, 79, 124, 127, 131, 132, 327, 789, 803, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1118], "pcie": 15, "interfac": [15, 141, 153], "motherboard": 15, "raid": 15, "storag": [15, 139], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 96, 97, 124, 126, 140, 141, 179, 183, 184, 185, 218, 221, 231, 233, 235, 236, 238, 240, 665, 671, 736, 738, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 838, 840, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 959, 961, 971], "factor": [15, 44, 45, 48, 49, 50, 51, 90, 91, 94, 95, 96, 97, 327, 336, 369, 370, 371, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 775, 777, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 806, 807, 808, 809, 810, 811, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1114, 1115, 1116, 1117], "sata": 15, "connect": [15, 18, 140, 141, 1098, 1108, 1109], "host": [15, 153], "bu": 15, "adapt": [15, 750, 775, 777, 1114, 1117], "devic": [15, 19, 23, 26, 27, 34, 35, 39, 42, 43, 75, 76, 80, 81, 85, 88, 89, 104, 105, 118, 119, 126, 128, 131, 138, 139, 153, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 665, 693, 694, 695, 696, 697, 698, 719, 722, 723, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1087, 1088, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "html": [15, 21, 121, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "enabl": [15, 18, 19, 72, 75, 76, 77, 78, 79, 124, 126, 129, 130, 133, 135, 136, 137, 139, 141, 153, 750, 788], "anyon": [15, 17, 153], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 75, 76, 130, 959, 960, 969, 970], "commun": [15, 17, 19, 20, 153, 1076, 1082], "network": [15, 126, 130, 136, 140, 152, 789, 802, 1076, 1084, 1098, 1110, 1111], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 121, 122, 124, 130, 131, 133, 136, 139, 152, 153, 665, 716, 737, 1032, 1037, 1040, 1045, 1048], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 178, 249, 285, 288, 377, 393, 396, 488, 491, 585, 588, 610, 613, 635, 638], "754": [15, 178, 249, 285, 288, 377, 393, 396, 488, 491, 585, 588, 610, 613, 635, 638], "allow": [15, 124, 125, 136, 153, 179, 207, 208, 210, 211, 665, 716, 1110, 1111], "calcul": [15, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 121, 377, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 468, 471, 483, 486, 488, 491, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 585, 588, 605, 608, 625, 628, 630, 633, 635, 638, 645, 649, 650, 654, 655, 659, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 121, 124, 125, 128, 130, 131, 136, 153, 249, 255, 258, 377, 378, 381, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 483, 486, 488, 491, 538, 541, 543, 546, 548, 551, 553, 556, 605, 608, 625, 628, 630, 633, 650, 654, 655, 659, 806, 821, 823, 850, 852, 854, 856, 857, 859, 995, 999, 1021, 1022, 1025, 1027, 1030], "did": [15, 20, 141], "aris": [15, 153], "until": [15, 19, 134, 153, 1076], "substanti": [15, 19, 124, 129], "innov": 15, "growth": 15, "usag": [15, 136, 327, 371], "relev": [15, 18, 20, 122, 130, 131, 139, 1114, 1115, 1116, 1117, 1118, 1119], "area": [15, 40, 41, 86, 87, 133, 151, 377, 388, 389, 390, 391, 392, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 1076], "necess": 15, "parti": [15, 153], "could": [15, 16, 18, 19, 122, 124, 130, 131, 133, 136, 138, 139, 140, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "easili": [15, 19, 139, 140, 141, 153, 1076], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "regard": [15, 130, 327], "effect": [15, 120, 121, 129, 130, 153, 179, 213, 216, 750, 779, 781, 1032, 1053, 1056, 1061, 1064], "2015": 15, "sinc": [15, 18, 19, 124, 153], "alongsid": 15, "machin": [15, 18, 126, 152, 249, 285, 288, 292, 295, 377, 503, 506, 806, 838, 840, 847, 849], "given": [15, 16, 18, 19, 20, 21, 42, 43, 52, 53, 54, 55, 75, 76, 88, 89, 98, 99, 100, 101, 104, 105, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 179, 180, 181, 187, 207, 208, 210, 211, 327, 360, 366, 368, 369, 370, 371, 373, 376, 665, 683, 684, 694, 695, 696, 697, 698, 722, 723, 728, 748, 750, 752, 755, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 790, 791, 792, 793, 794, 795, 796, 799, 806, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 898, 908, 911, 912, 915, 920, 923, 929, 930, 931, 932, 933, 934, 947, 950, 959, 966, 967, 983, 985, 986, 987, 988, 989, 991, 994, 1021, 1027, 1030, 1087, 1088], "frame": [15, 152], "less": [15, 19, 23, 26, 27, 40, 41, 75, 76, 86, 87, 120, 122, 130, 135, 136, 377, 383, 386, 388, 391, 398, 401, 413, 416, 453, 456, 532, 538, 541, 543, 546, 553, 556, 605, 608, 610, 613, 620, 623, 635, 638, 806, 838, 840, 847, 849, 872, 874, 983, 989, 991, 1032, 1061, 1064], "matur": [15, 153], "state": [15, 120, 121, 124, 135, 136, 137, 139, 152, 377, 585, 588, 665, 731, 746, 747, 789, 803, 1076, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "than": [15, 19, 23, 26, 27, 44, 45, 62, 63, 75, 76, 90, 91, 108, 109, 119, 122, 124, 130, 133, 136, 139, 140, 141, 153, 179, 180, 181, 249, 285, 288, 327, 371, 377, 383, 386, 388, 391, 398, 401, 413, 416, 433, 436, 443, 446, 453, 456, 493, 496, 498, 501, 538, 541, 543, 546, 553, 556, 583, 605, 608, 610, 613, 620, 623, 635, 638, 660, 664, 665, 712, 713, 715, 750, 766, 767, 768, 769, 770, 806, 812, 814, 830, 833, 838, 840, 847, 849, 872, 874, 894, 895, 898, 912, 915, 935, 938, 983, 989, 991, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1032, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "preced": [15, 140], "mention": [15, 18, 19, 120, 122, 126, 133], "aros": 15, "70": [15, 806, 844, 846, 1032, 1033, 1036], "80": [15, 806, 844, 846, 1032, 1033, 1036], "90": [15, 104, 105, 377, 448, 451, 615, 618, 806, 844, 846, 985, 987, 1032, 1033, 1036], "effort": [15, 17, 153], "stage": [15, 17, 19, 21, 118, 134, 1076], "complet": [15, 19, 20, 75, 76, 129, 130, 138, 139, 806, 850, 852], "natur": [15, 122, 129, 130, 152, 377, 483, 486, 538, 541, 548, 551, 806, 853], "like": [15, 18, 19, 21, 44, 45, 90, 91, 118, 119, 120, 121, 122, 124, 125, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 750, 766, 767, 768, 769, 770, 983, 989, 991, 1076], "certainli": 15, "mission": [15, 1076], "creat": [15, 17, 18, 19, 21, 34, 35, 42, 43, 75, 76, 88, 89, 104, 105, 124, 125, 131, 132, 133, 136, 137, 140, 151, 152, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 218, 219, 221, 223, 224, 226, 227, 229, 241, 243, 244, 246, 248, 327, 336, 337, 665, 693, 694, 695, 696, 697, 698, 719, 722, 723, 737, 750, 786, 983, 984, 985, 986, 987, 989, 991, 1076, 1082, 1087, 1088, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 124, 126, 130, 136, 141, 327, 336, 337, 366, 376], "ourselv": 15, "lead": [15, 16, 72, 75, 76, 77, 78, 79, 153, 806, 850, 852, 857, 859], "quansight": 15, "compani": 15, "made": [15, 19, 20, 130, 133, 136, 138], "organ": [15, 119, 126, 129, 130], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 136, 141], "sympi": 15, "rai": [15, 377, 413, 416], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 34, 35, 68, 69, 75, 76, 114, 115, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 152, 153, 179, 180, 181, 183, 184, 185, 218, 221, 665, 705, 749, 806, 872, 874, 959, 960, 983, 989, 991, 995, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1081, 1098, 1108, 1109, 1112, 1113], "member": [15, 19], "googl": [15, 1076], "octoml": 15, "einop": [15, 75, 76, 665, 687, 688, 689], "further": [15, 16, 19, 21, 122, 125, 129, 135, 139, 140, 1076], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 48, 49, 94, 95, 104, 105, 118, 130, 139, 665, 674, 682, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 806, 818, 820, 844, 846, 959, 962, 976, 985, 987, 1076, 1082], "shaw": 15, "co": [15, 40, 41, 86, 87, 136, 152, 377, 462, 665, 692, 1076], "intel": 15, "togeth": [15, 75, 76, 129, 130, 134, 140, 141, 153, 1120, 1121], "major": [15, 124, 125, 131, 132, 153, 995, 998], "involv": [15, 17, 21, 118, 131, 141, 249, 314, 317, 377, 393, 396, 585, 588, 1076, 1082], "anoth": [15, 18, 19, 75, 76, 124, 125, 126, 130, 131, 138, 141, 179, 196, 199, 249, 260, 263, 270, 273], "promis": 15, "sign": [15, 18, 40, 41, 86, 87, 137, 141, 179, 180, 181, 377, 378, 381, 393, 396, 413, 416, 443, 446, 585, 588, 610, 611, 612, 613, 614, 624, 806, 853, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1049, 1052, 1057, 1060], "pursuit": 15, "unif": [15, 17, 138, 1076, 1082], "clearli": [15, 20, 122, 124], "lot": [15, 16, 128, 138, 153], "thought": [15, 18, 19, 120], "care": [15, 19, 141], "attent": [15, 19, 129, 130, 789, 804, 805, 1098, 1109], "gone": [15, 135], "simplifi": [15, 136, 137, 138, 140], "compat": [15, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 86, 87, 114, 115, 120, 153, 249, 265, 268, 377, 393, 394, 395, 396, 397, 413, 414, 415, 416, 417, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 645, 646, 647, 648, 649, 806, 838, 840, 847, 849, 854, 856, 863, 865, 869, 871, 872, 874, 894, 925, 928, 995, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "excit": [15, 17, 118, 1076], "complianc": 15, "hope": [15, 153], "due": [15, 18, 23, 26, 27, 125, 130, 133, 377, 585, 588], "suit": [15, 18, 118, 123, 124, 139, 152], "some": [15, 16, 18, 19, 20, 75, 76, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 152, 153, 377, 488, 491, 750, 752, 755, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 787, 789, 801, 1076, 1098, 1106], "motiv": [15, 138], "great": [15, 16, 124, 136, 138], "convinc": 15, "celebr": 15, "encourag": [15, 152, 153, 1076, 1082], "foundat": 15, "point": [16, 19, 40, 41, 50, 51, 86, 87, 96, 97, 120, 121, 122, 124, 129, 133, 136, 138, 139, 152, 178, 179, 180, 181, 187, 193, 194, 201, 223, 224, 241, 243, 249, 255, 258, 285, 288, 303, 306, 314, 317, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 448, 451, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 496, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 585, 588, 605, 608, 610, 613, 615, 618, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 664, 806, 807, 808, 809, 810, 811, 815, 817, 821, 823, 824, 826, 827, 829, 838, 840, 847, 849, 850, 852, 854, 856, 857, 859, 872, 874, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "mai": [16, 18, 19, 23, 26, 27, 40, 41, 86, 87, 124, 125, 130, 138, 140, 179, 180, 181, 196, 199, 327, 372, 377, 473, 474, 475, 476, 477, 508, 511, 533, 536, 568, 571, 573, 576, 595, 596, 597, 599, 665, 686, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048], "ask": [16, 136, 138, 153, 1076], "perfectli": 16, "happi": [16, 18, 153], "abund": 16, "better": [16, 118, 125, 134, 135, 138, 139, 140], "ll": [16, 17, 19, 122, 130, 133, 139], "give": [16, 18, 19, 118, 120, 121, 122, 127, 138, 894, 925, 928], "two": [16, 34, 35, 50, 51, 72, 77, 78, 96, 97, 121, 122, 124, 125, 129, 130, 135, 139, 141, 179, 180, 181, 193, 194, 213, 216, 231, 233, 235, 236, 238, 240, 249, 313, 322, 377, 443, 446, 615, 618, 665, 673, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 866, 868, 869, 871, 894, 943, 946, 1000, 1001, 1005, 1006, 1010, 1011, 1015, 1016, 1020, 1076], "streamlin": 16, "workflow": [16, 19, 139, 151, 1076], "save": [16, 75, 76, 124, 134, 153, 665, 729, 1110, 1111], "week": [16, 19, 20, 1076], "let": [16, 121, 122, 124, 125, 130, 131, 132, 136, 138, 139, 140, 141, 1032, 1041, 1044, 1053, 1056, 1057, 1060, 1061, 1064, 1076], "sai": [16, 18, 128, 138], "deepmind": 16, "releas": [16, 18, 20, 1076], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 133, 139, 1032, 1053, 1056, 1061, 1064], "perceiverio": 16, "happen": [16, 18, 19, 124, 139], "slew": 16, "rush": 16, "f": [16, 21, 118, 124, 130, 134, 136, 139, 141, 377, 503, 506, 665, 707, 711, 959, 962, 976], "g": [16, 118, 130, 153, 249, 254, 314, 317, 327, 343, 959, 962, 983, 988, 989, 991, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1045, 1048, 1049, 1052, 1057, 1060], "inevit": 16, "deviat": [16, 56, 57, 102, 103, 124, 977, 978, 979, 980, 981, 982, 983, 988, 1032, 1053, 1056, 1112, 1113], "origin": [16, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 125, 127, 128, 131, 136, 138, 377, 413, 416, 806, 834, 836, 894, 925, 928, 929, 930, 931, 932, 933], "often": [16, 124, 126, 134, 153], "erron": 16, "train": [16, 44, 45, 90, 91, 126, 130, 132, 139, 140, 141, 151, 152, 153, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1076], "poor": 16, "converg": 16, "perform": [16, 68, 69, 75, 76, 114, 115, 119, 120, 122, 124, 126, 127, 129, 130, 132, 133, 136, 139, 153, 164, 169, 179, 207, 208, 210, 211, 327, 665, 683, 687, 688, 689, 708, 709, 710, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 801, 803, 806, 857, 859, 955, 956, 957, 958, 959, 966, 967, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "issu": [16, 17, 20, 124, 136, 138, 140, 153], "etc": [16, 18, 19, 20, 42, 43, 70, 71, 75, 76, 88, 89, 104, 105, 116, 117, 119, 120, 122, 124, 129, 130, 131, 136, 138, 139, 153, 179, 207, 208, 210, 211, 665, 693, 694, 695, 696, 697, 698, 719, 722, 723, 983, 984, 985, 986, 987, 989, 991, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "publish": [16, 153], "manag": [16, 17, 133, 153, 327], "get": [16, 17, 18, 20, 75, 76, 118, 124, 126, 131, 132, 133, 136, 137, 138, 139, 140, 249, 279, 282, 284, 285, 288, 292, 295, 327, 336, 337, 346, 347, 360, 361, 366, 370, 373, 376, 665, 672, 699, 700, 701, 702, 721, 731, 1076, 1082, 1098, 1107], "work": [16, 18, 19, 20, 118, 124, 125, 130, 131, 132, 135, 136, 137, 138, 140, 141, 1076, 1082], "repositori": [16, 18, 19, 21, 123, 134], "pull": [16, 17, 18, 21, 119, 153], "request": [16, 17, 119, 327, 363], "confus": [16, 133], "do": [16, 18, 19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 377, 610, 613, 665, 710, 750, 766, 767, 768, 769, 770, 787, 959, 960, 969, 970, 971], "don": [16, 18, 19, 20, 70, 71, 116, 117, 124, 131, 140, 153], "expect": [16, 124, 153, 665, 672, 1076], "codebas": [16, 17, 118, 119, 133, 135, 327, 369, 370, 1076], "total": [16, 17, 19, 72, 75, 76, 77, 78, 79, 122, 124, 132, 139, 140, 153, 327, 373, 995, 998, 1032, 1053, 1056, 1061, 1064], "hour": 16, "spent": 16, "spin": 16, "off": [16, 135, 806, 818, 820, 866, 868], "test": [16, 18, 20, 40, 41, 68, 69, 86, 87, 114, 115, 118, 122, 134, 153, 249, 298, 301, 308, 311, 377, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "error": [16, 18, 40, 41, 75, 76, 86, 87, 120, 122, 124, 129, 132, 134, 138, 153, 164, 165, 327, 377, 478, 479, 480, 481, 482, 1032, 1037, 1040, 1045, 1048, 1110, 1111, 1114, 1118], "iter": [16, 29, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 79, 88, 89, 116, 117, 130, 136, 139, 176, 177, 327, 349, 350, 352, 353, 354, 355, 358, 371, 665, 666, 667, 668, 669, 670, 894, 904, 907, 920, 923, 934, 947, 950, 951, 954, 959, 960, 961, 962, 965, 969, 970, 971, 976], "address": [16, 19, 20, 129, 136], "sake": 16, "singl": [16, 19, 75, 76, 119, 120, 122, 124, 126, 128, 130, 133, 136, 139, 140, 141, 153, 327, 336, 337, 356, 357, 358, 359, 665, 744, 749, 983, 988, 989, 991, 1000, 1001, 1005], "multipl": [16, 19, 56, 57, 68, 69, 75, 76, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 114, 115, 122, 126, 130, 153, 377, 393, 397, 438, 442, 583, 584, 585, 588, 665, 666, 668, 669, 670, 694, 698, 716, 750, 766, 768, 769, 770, 806, 807, 810, 811, 827, 829, 894, 895, 898, 899, 929, 932, 933, 934, 977, 978, 979, 980, 981, 982, 985, 987, 995, 996, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1108], "line": [16, 18, 122, 124, 129, 134, 137, 138, 139, 140, 151, 1076, 1082], "convert": [16, 29, 30, 31, 32, 33, 34, 35, 75, 76, 124, 129, 136, 153, 154, 162, 179, 183, 184, 185, 218, 221, 249, 253, 254, 327, 343, 344, 345, 346, 366, 373, 376, 665, 736, 738, 739, 743, 744, 806, 875, 877, 959, 961, 971, 972, 1088], "directli": [16, 19, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 153, 959, 971], "graph": [16, 23, 26, 27, 126, 130, 137, 153, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1110, 1111], "guarante": [16, 129, 153, 1000, 1001, 1005], "turn": [16, 122, 124, 130], "4": [16, 21, 23, 26, 27, 40, 41, 44, 45, 50, 51, 54, 55, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 166, 167, 169, 179, 202, 205, 213, 216, 226, 229, 244, 248, 249, 270, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 349, 360, 365, 369, 377, 378, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 405, 406, 407, 413, 416, 423, 426, 438, 439, 440, 441, 442, 448, 451, 453, 455, 456, 458, 461, 463, 466, 488, 490, 491, 493, 495, 496, 508, 511, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 622, 623, 625, 627, 628, 629, 630, 633, 635, 638, 640, 643, 650, 651, 653, 654, 655, 656, 658, 659, 665, 674, 683, 692, 693, 694, 696, 697, 698, 737, 750, 752, 754, 755, 756, 766, 767, 768, 769, 770, 789, 792, 793, 794, 796, 799, 803, 805, 806, 807, 808, 810, 812, 814, 815, 817, 818, 820, 827, 829, 838, 840, 844, 846, 863, 865, 866, 868, 878, 889, 892, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 922, 923, 924, 925, 928, 929, 931, 932, 933, 934, 935, 938, 943, 946, 959, 962, 976, 977, 978, 980, 981, 982, 983, 984, 985, 987, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1069, 1076, 1114, 1115, 1116, 1117, 1119], "step": [16, 18, 19, 21, 44, 45, 75, 76, 80, 81, 90, 91, 122, 127, 129, 130, 131, 132, 136, 139, 140, 141, 152, 179, 180, 181, 182, 207, 208, 210, 211, 327, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 771, 772, 773, 774, 775, 777, 779, 781, 955, 956, 957, 958, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "take": [16, 17, 18, 19, 121, 122, 124, 130, 131, 132, 136, 138, 140, 141, 153, 377, 448, 451, 1076, 1082], "few": [16, 19, 20, 124, 126, 130, 131, 132, 133, 134, 137, 138, 139, 140, 151, 1076, 1082], "second": [16, 18, 23, 26, 27, 40, 41, 44, 45, 62, 63, 72, 77, 78, 86, 87, 90, 91, 108, 109, 122, 124, 125, 133, 138, 249, 313, 322, 327, 358, 377, 393, 394, 395, 396, 397, 413, 414, 415, 417, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 473, 474, 476, 498, 501, 503, 504, 508, 509, 511, 528, 529, 531, 533, 534, 536, 558, 559, 561, 563, 564, 566, 573, 574, 576, 578, 579, 581, 585, 586, 588, 595, 596, 598, 605, 606, 608, 645, 646, 647, 648, 649, 665, 673, 721, 727, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 806, 812, 814, 818, 820, 821, 823, 830, 833, 844, 846, 850, 852, 857, 859, 863, 865, 869, 871, 894, 939, 942, 943, 946, 955, 957, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1114, 1115, 1116], "automat": [16, 18, 19, 118, 120, 126, 130, 135, 136, 137, 140, 141, 1076], "convers": [16, 30, 31, 32, 33, 75, 76, 135, 137, 141, 152, 153, 1076, 1082], "everyon": [16, 17, 19, 153], "regardless": [16, 17, 75, 76, 138, 141, 176, 177], "wouldn": 16, "nice": [16, 124], "write": [16, 19, 20, 21, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 126, 127, 133, 136, 138, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 327, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 684, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 999, 1000, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "onc": [16, 18, 19, 124, 130, 131, 132, 136, 139, 153, 327, 371, 806, 827, 829, 857, 859, 983, 984], "know": [16, 19, 124, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "among": [16, 75, 76, 124], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 126, 136], "understand": [16, 18, 19, 20, 21, 118, 120, 121, 122, 123, 125, 134, 135], "pattern": [16, 75, 76, 121, 131, 665, 687, 688, 689], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 123, 124, 125, 130, 136, 140, 153, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 327, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 806, 807, 808, 809, 811, 812, 814, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 920, 921, 922, 924, 925, 928, 929, 930, 931, 933, 935, 936, 937, 959, 961, 971, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1082], "now": [16, 18, 21, 75, 76, 119, 120, 124, 128, 130, 131, 134, 138, 139, 141, 152, 153, 179, 244, 248, 1098, 1109, 1110, 1111], "spend": 16, "torchvis": 16, "probabl": [16, 124, 789, 801, 983, 984, 1098, 1106], "sonnet": 16, "about": [16, 18, 19, 123, 124, 135, 136, 140, 141, 153, 249, 285, 288, 292, 295], "next": [16, 18, 19, 20, 21, 121, 122, 127, 128, 134, 138, 139, 249, 285, 288, 1076, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "everyth": [16, 19, 20, 124, 137, 153], "zero": [16, 23, 26, 27, 34, 35, 40, 41, 44, 45, 68, 69, 72, 75, 76, 77, 78, 86, 87, 90, 91, 114, 115, 120, 122, 129, 130, 131, 132, 136, 139, 140, 164, 166, 167, 179, 187, 193, 194, 213, 216, 231, 233, 235, 236, 238, 240, 244, 246, 248, 249, 255, 258, 377, 393, 396, 398, 401, 403, 406, 433, 436, 458, 459, 461, 463, 466, 488, 491, 493, 496, 568, 571, 573, 576, 583, 584, 585, 588, 590, 593, 595, 598, 605, 608, 610, 613, 615, 618, 625, 628, 630, 631, 632, 634, 635, 638, 640, 643, 650, 654, 655, 659, 665, 683, 719, 722, 723, 750, 752, 753, 754, 755, 756, 757, 759, 766, 769, 771, 773, 775, 777, 789, 801, 806, 807, 810, 815, 817, 830, 833, 838, 840, 847, 849, 869, 871, 872, 874, 894, 908, 911, 912, 915, 929, 932, 951, 954, 977, 978, 981, 983, 985, 986, 995, 996, 997, 998, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1114, 1115, 1116, 1117], "need": [16, 18, 19, 20, 21, 119, 121, 122, 123, 125, 126, 129, 130, 133, 136, 138, 139, 152, 153, 665, 677, 678, 680, 894, 895, 898, 908, 911], "said": 16, "high": [16, 20, 75, 76, 104, 105, 139, 983, 985, 986, 987, 989, 990, 991, 992], "level": [16, 17, 20, 126, 135, 136, 139, 140, 141, 153], "optim": [16, 133, 137, 139, 141, 152, 327, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 955, 956, 957, 958, 1076, 1115, 1116, 1117, 1119], "trainer": [16, 151, 153, 1076], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 141], "flax": [16, 141, 153], "trax": [16, 141], "objax": [16, 141], "idea": [16, 125, 134, 152], "fulli": [16, 120, 129, 130, 136, 137, 138, 139, 140, 141, 153, 1098, 1108, 1109], "offer": [16, 140], "strongli": [17, 18, 1076, 1082], "welcom": [17, 18, 19, 1076, 1082], "absolut": [17, 40, 41, 75, 76, 86, 87, 377, 378, 379, 380, 381, 382, 806, 853], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 130, 131, 133, 164, 165, 170, 172, 174, 176, 177, 249, 255, 258, 270, 272, 274, 279, 282, 297, 298, 301, 303, 306, 308, 311, 326, 327, 346, 347, 358, 362, 363, 366, 367, 371, 374, 376, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 526, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 667, 668, 669, 670, 673, 674, 683, 686, 690, 692, 694, 696, 698, 702, 703, 705, 707, 710, 711, 712, 713, 714, 715, 716, 726, 728, 730, 734, 739, 740, 742, 746, 748, 749, 750, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 788, 789, 801, 806, 807, 809, 811, 821, 823, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 955, 956, 957, 958, 959, 960, 961, 965, 969, 970, 971, 972, 978, 980, 982, 983, 984, 1006, 1007, 1009, 1065, 1066, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1087, 1088, 1098, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 75, 76, 80, 81, 118, 121, 122, 125, 131, 135, 136, 138, 139, 140, 152, 153, 179, 180, 181, 182, 207, 208, 209, 210, 211, 212, 327, 342], "aspect": [17, 139, 1076], "guid": [17, 18, 19, 134, 1076], "through": [17, 19, 20, 118, 122, 124, 125, 126, 127, 130, 134, 135, 136, 138, 139, 140, 141, 152, 377, 413, 416, 959, 962], "journei": [17, 1076, 1082], "inclusvi": 17, "big": [17, 153], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 135, 1076], "split": [17, 19, 23, 26, 27, 75, 76, 135, 136, 153, 327, 336, 352, 353, 354, 355, 369, 370, 371, 665, 716, 894, 1076], "section": [17, 19, 20, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "below": [17, 18, 20, 21, 34, 35, 118, 119, 122, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 152, 179, 231, 233, 235, 236, 238, 240, 377, 423, 426, 448, 451, 463, 466, 615, 618, 655, 659, 806, 815, 817, 818, 820, 866, 868, 894, 908, 911, 912, 915, 1000, 1001, 1005, 1021, 1022, 1025, 1076], "best": [17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 665, 716], "go": [17, 18, 19, 20, 118, 119, 122, 125, 130, 135, 139, 153, 959, 970], "finish": [17, 18, 118, 1076], "dive": [17, 19, 20, 130, 135, 138, 139, 153, 1076], "right": [17, 18, 19, 75, 76, 118, 122, 139, 377, 433, 436, 443, 446, 806, 857, 859], "environ": [17, 19, 21, 152], "basic": [17, 20, 21], "fork": [17, 18, 665, 717], "doc": [17, 20, 120, 121, 136, 139, 140, 1076], "document": [17, 19, 124, 125, 137, 139, 141], "local": [17, 18, 21, 126], "task": [17, 19, 152, 955, 956, 957, 958, 1076], "help": [17, 18, 122, 124, 125, 127, 129, 130, 138, 139, 140, 151, 665, 671, 1032, 1057, 1060, 1076], "video": [17, 19, 119, 120, 121, 122, 124, 125, 126, 127], "realli": [18, 130, 153], "contribut": [18, 19, 20, 136, 1082], "toward": [18, 54, 55, 100, 101, 136, 894, 929, 930, 931, 932, 933, 1076, 1082], "page": [18, 19, 137, 141, 151, 1076, 1082], "explain": [18, 19, 20, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 1076, 1082], "main": [18, 21, 34, 35, 128, 130, 179, 193, 194, 231, 233, 235, 236, 238, 240, 806, 818, 820, 866, 868], "prefer": [18, 125, 130], "mode": [18, 50, 51, 75, 76, 122, 130, 153, 176, 177, 327, 356, 357, 358, 359, 371, 377, 393, 396, 585, 588, 665, 702, 726, 728, 746, 747, 806, 850, 851, 852], "git": [18, 19, 124], "recurs": [18, 21, 29, 30, 31, 32, 33, 75, 76, 126, 130, 140, 153, 959, 960, 961, 969, 970, 971], "submodul": [18, 19, 20, 21, 123, 124, 126, 132, 135, 136, 140, 1076, 1112, 1113, 1120, 1121], "com": 18, "unifyai": [18, 21], "http": [18, 121, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 750, 752, 755, 757, 759, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "gh": 18, "your_fold": 18, "id": [18, 129, 130, 134, 327, 346, 1110, 1111], "cours": [18, 19, 122, 139, 153], "whatev": [18, 153], "integr": [18, 249, 255, 258], "familiar": [18, 20], "decid": [18, 75, 76, 125, 959, 970], "sure": [18, 20, 123, 124], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 152, 1076], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 140, 153], "miss": [18, 122, 124, 129, 130, 134, 1114, 1118], "add": [18, 19, 20, 23, 26, 27, 40, 41, 56, 57, 70, 71, 72, 75, 76, 77, 78, 86, 87, 88, 89, 102, 103, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 136, 138, 153, 377, 378, 381, 397, 583, 584, 666, 670, 750, 788, 977, 978, 979, 980, 981, 982, 1076, 1082, 1112, 1113], "explicit": [18, 21, 130, 131, 133, 136, 153], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 665, 692, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108], "pace": 18, "updat": [18, 19, 20, 21, 44, 45, 75, 76, 90, 91, 118, 120, 122, 123, 128, 129, 130, 131, 136, 138, 139, 141, 153, 327, 336, 665, 710, 722, 723, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 803, 955, 956, 957, 959, 966, 967, 975, 976, 1087, 1088, 1114, 1115, 1116, 1117, 1118, 1119], "suggest": [18, 19, 119, 124], "latest": [18, 20, 21, 121, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1098, 1107], "packag": [18, 21, 125, 134, 153], "ensur": [18, 19, 120, 124, 125, 129, 131, 134, 665, 710], "align": [18, 75, 76, 136, 138, 1076, 1082], "accord": [18, 21, 36, 37, 75, 76, 82, 83, 125, 126, 131, 249, 270, 271, 272, 273, 274, 285, 288, 377, 393, 396, 443, 446, 585, 588, 665, 693, 722, 723, 806, 869, 871, 894, 904, 907, 951, 954, 1032, 1053, 1056, 1061, 1064], "stabl": [18, 64, 65, 110, 111, 136, 153, 665, 700, 701, 724, 725, 732, 733, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031], "pypi": [18, 20, 153], "mayb": [18, 29, 32, 33, 136, 138], "person": [18, 19], "experi": [18, 137, 139, 153], "avoid": [18, 19, 124, 127, 128, 130, 134, 138, 327, 377, 488, 491], "pip": [18, 152, 1076], "instal": [18, 21, 134, 152, 1076], "abil": [18, 137, 153], "certain": [18, 75, 76, 124, 125, 131, 153, 179, 180, 181, 207, 208, 210, 211], "perhap": [18, 138, 139, 140, 153], "keep": [18, 19, 75, 76, 123, 124, 130, 137, 139, 141, 665, 748], "track": [18, 19, 327, 959, 971, 1110, 1111], "termin": [18, 19, 21, 72, 75, 76, 77, 78, 79, 130, 136, 139], "run": [18, 21, 44, 45, 90, 91, 120, 122, 123, 124, 127, 134, 136, 137, 138, 139, 140, 141, 152, 153, 327, 336, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 955, 956, 957, 958, 1098, 1109, 1110, 1111], "command": [18, 21, 1076], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 62, 63, 108, 109, 121, 124, 125, 131, 134, 136, 138, 139, 141, 176, 177, 665, 671, 806, 821, 823, 850, 852, 857, 859, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010], "3": [18, 21, 23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 166, 167, 168, 169, 178, 179, 202, 205, 213, 216, 226, 229, 241, 243, 244, 248, 249, 270, 271, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 346, 349, 365, 369, 372, 377, 378, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 423, 426, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 455, 456, 458, 459, 461, 463, 466, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 503, 506, 508, 511, 528, 531, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 653, 654, 655, 656, 658, 659, 665, 666, 667, 668, 673, 674, 683, 690, 693, 694, 695, 696, 697, 698, 730, 737, 744, 750, 752, 753, 754, 755, 756, 766, 769, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 827, 829, 838, 840, 844, 846, 857, 859, 863, 865, 866, 868, 875, 877, 878, 879, 881, 882, 883, 884, 886, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 922, 923, 924, 925, 928, 929, 931, 932, 933, 934, 935, 938, 943, 946, 959, 962, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1057, 1060, 1065, 1066, 1069, 1076], "8": [18, 21, 23, 26, 27, 40, 41, 52, 53, 54, 55, 72, 77, 78, 86, 87, 90, 91, 98, 99, 104, 105, 122, 124, 130, 135, 139, 164, 168, 179, 244, 248, 249, 285, 288, 327, 349, 360, 373, 377, 393, 396, 397, 403, 406, 407, 423, 426, 453, 456, 463, 466, 508, 511, 533, 536, 583, 584, 610, 611, 615, 618, 620, 621, 622, 623, 624, 635, 638, 640, 643, 655, 659, 665, 674, 693, 750, 752, 755, 766, 768, 769, 770, 789, 796, 799, 806, 812, 814, 815, 817, 818, 820, 844, 846, 863, 865, 878, 879, 880, 881, 882, 883, 884, 886, 888, 889, 890, 891, 893, 894, 895, 896, 898, 912, 915, 934, 983, 984, 985, 986, 987, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036, 1076, 1098, 1109], "activ": [18, 19, 21, 25, 70, 71, 74, 116, 117, 119, 140, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 1076, 1085, 1086], "setup": 18, "click": [18, 19, 121, 1076], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 141, 327, 372, 377, 568, 571, 573, 576, 995, 999, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048], "left": [18, 19, 75, 76, 122, 131, 377, 433, 436, 806, 821, 823, 834, 836, 857, 859, 995, 996, 1076], "panel": 18, "select": [18, 19, 124, 136, 138, 141, 153], "drop": [18, 153], "down": [18, 124, 138], "path": [18, 21], "manual": [18, 19, 124, 140, 959, 960, 969, 970], "builtin": [18, 21, 138, 140], "requir": [18, 21, 119, 120, 121, 122, 124, 128, 129, 131, 132, 138, 153, 176, 177, 377, 635, 638, 806, 821, 823, 894, 939, 942, 1087, 1088], "cmd": [18, 21], "directori": [18, 19, 21, 124, 125, 665, 729], "folder": [18, 19, 21, 119, 123, 124, 126], "file": [18, 19, 21, 75, 76, 119, 121, 124, 126, 127, 129, 130, 134, 136, 139, 665, 729, 1110, 1111], "abov": [18, 19, 21, 34, 35, 104, 105, 120, 121, 122, 124, 125, 126, 127, 129, 130, 133, 134, 138, 139, 140, 141, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 585, 588, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 821, 823, 866, 868, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 983, 985, 986, 987, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1049, 1052, 1053, 1056, 1057, 1060, 1065, 1066, 1069], "m": [18, 19, 21, 34, 35, 50, 51, 96, 97, 118, 136, 179, 213, 216, 231, 233, 235, 236, 238, 240, 665, 674, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 983, 988, 989, 991], "python3": [18, 21], "script": [18, 19, 21, 122, 136, 153], "bat": [18, 19, 21], "OR": [18, 19, 21, 68, 69, 114, 115, 377, 438, 441, 573, 576, 1065, 1071, 1072, 1073, 1074, 1075], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 72, 75, 76, 77, 78, 79, 121, 129, 130, 134, 327, 361], "os": 18, "note": [18, 19, 119, 121, 122, 124, 130, 131, 377, 610, 613, 806, 821, 823, 857, 859, 894, 939, 942, 1000, 1006, 1010, 1032, 1041, 1044], "tick": [18, 19], "abl": [18, 19, 75, 76, 126, 131, 133, 134, 138, 141], "To": [18, 122, 124, 126, 130, 134, 139, 140, 141, 1076], "ivy_test": [18, 19], "test_array_api": [18, 19, 123, 124], "cd": [18, 19, 21], "r": [18, 75, 76, 665, 674, 748, 806, 850, 852, 875, 877], "txt": 18, "visual": [18, 134, 153], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 135, 377, 488, 491], "conflict": [18, 19, 139], "addit": [18, 19, 56, 57, 75, 76, 102, 103, 119, 121, 124, 125, 130, 131, 138, 139, 141, 327, 372, 377, 393, 396, 665, 687, 688, 689, 977, 978, 979, 980, 981, 982, 1098, 1108], "yet": [18, 20, 130], "particular": [18, 19, 119, 122, 124, 131, 133, 377, 378, 381], "system": [18, 153, 806, 854, 856], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 125], "imag": [18, 21, 47, 48, 49, 93, 94, 95, 119, 136, 137, 139, 141, 152, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 1076], "profession": 18, "execut": [18, 21, 130, 133, 136, 138, 141, 153, 665, 745], "deploy": 18, "top": [18, 19, 124, 125, 139, 140, 1076], "press": [18, 139, 1076], "ok": 18, "correctli": [18, 75, 76, 120, 124, 130, 131, 134, 140, 153, 806, 834, 836, 995, 996], "caus": [18, 19, 122, 124, 130, 133, 134, 153], "earlier": [18, 19], "might": [18, 19, 119, 124, 128, 131, 136, 138, 139, 665, 686], "necessari": [18, 122, 127, 130, 133], "virtualis": 18, "detail": [18, 19, 20, 119, 120, 123, 124, 126, 127, 128, 130, 139, 140, 179, 196, 199, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 75, 76, 88, 89, 179, 213, 216, 665, 677, 678, 679, 680, 789, 801, 806, 834, 836, 872, 874, 1098, 1106], "keyr": 18, "fssl": 18, "download": [18, 124], "gpg": 18, "dearmor": 18, "o": [18, 118, 136, 665, 674], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 141, 153], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 56, 57, 70, 71, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 124, 125, 130, 131, 132, 134, 136, 139, 140, 141, 153, 170, 172, 174, 179, 180, 181, 183, 184, 185, 213, 214, 216, 218, 221, 249, 260, 261, 263, 270, 272, 274, 327, 336, 337, 346, 348, 349, 352, 353, 356, 357, 371, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 674, 694, 696, 698, 737, 739, 740, 742, 748, 750, 752, 754, 756, 766, 768, 770, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 806, 807, 809, 811, 863, 865, 879, 881, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 899, 900, 903, 912, 915, 929, 931, 933, 934, 939, 942, 959, 960, 961, 962, 965, 970, 971, 976, 977, 978, 979, 980, 981, 982, 985, 987, 995, 998, 1000, 1006, 1007, 1009, 1010, 1066, 1068, 1070, 1071, 1073, 1075, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "dev": [18, 23, 26, 27, 72, 75, 76, 77, 79, 126, 132, 136, 138, 140, 327, 336, 361], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 124, 130, 153], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 124, 134, 152, 327], "post": [18, 56, 57, 102, 103, 141, 977, 978, 979, 980, 981, 982, 1076, 1082], "It": [18, 19, 21, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 133, 136, 138, 139, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 327, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 687, 688, 689, 691, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 999, 1000, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 121, 122, 124, 126, 130, 133, 136, 138, 139, 153], "featur": [18, 119, 120, 139, 1076], "vm": 18, "azur": 18, "cloud": [18, 152], "mean": [18, 19, 66, 67, 75, 76, 112, 113, 116, 117, 118, 122, 124, 126, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 327, 356, 357, 358, 359, 371, 665, 688, 955, 956, 957, 958, 959, 965, 983, 988, 1000, 1001, 1005, 1032, 1076, 1089], "configur": [18, 19, 21, 75, 76, 131, 327, 370, 959, 972], "defin": [18, 20, 104, 105, 119, 120, 121, 124, 131, 138, 140, 153, 377, 585, 588, 610, 613, 665, 719, 806, 812, 814, 821, 823, 854, 856, 983, 985, 986, 987, 1032, 1037, 1040, 1041, 1044, 1045, 1048], "dockerfil": [18, 21], "longer": [18, 124, 131, 133], "worri": 18, "platform": 18, "agnost": [18, 120, 129, 136, 138, 141, 153, 1076], "usual": [18, 124, 125], "studio": 18, "favourit": 18, "extens": [18, 19, 121, 124, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 533, 536, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 806, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069], "theme": 18, "too": [18, 19, 134, 153, 377, 393, 396, 585, 588], "done": [18, 19, 122, 124, 134, 139], "unsupport": [18, 125, 134, 249, 291], "old": [18, 75, 76, 133], "slow": 18, "ipad": 18, "long": [18, 19, 122, 789, 803], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 130, 789, 804, 1076, 1098, 1109], "pane": [18, 19], "readi": [18, 20], "begin": [18, 959, 960, 970], "outlin": [18, 19, 20, 118, 121, 124, 126, 130, 133, 138], "green": [18, 19, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1123, 1124], "dropdown": 18, "tab": [18, 139, 1076], "master": [18, 19, 130], "vs": [18, 124], "view": [18, 19, 179, 196, 199, 789, 792, 796, 799], "log": [18, 19, 40, 41, 86, 87, 126, 130, 133, 136, 139, 179, 210, 211, 377, 542, 548, 551, 558, 561, 806, 853, 1076], "built": [18, 124, 137, 179, 180, 181, 327, 1098, 1109, 1110, 1111], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 40, 41, 104, 105, 122, 124, 249, 285, 288, 377, 423, 426, 610, 611, 613, 615, 618, 620, 621, 789, 792, 806, 818, 820, 844, 846, 863, 865, 894, 929, 932, 983, 985, 986, 987, 995, 998, 1000, 1001, 1005, 1032, 1033, 1036], "minut": 18, "launch": 18, "12": [18, 86, 87, 100, 101, 102, 103, 104, 105, 122, 124, 130, 377, 423, 426, 448, 451, 463, 466, 615, 618, 630, 632, 634, 665, 683, 701, 750, 752, 755, 806, 818, 820, 844, 846, 863, 865, 894, 912, 915, 929, 932, 935, 937, 977, 978, 980, 981, 982, 983, 985, 986, 987, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036], "output": [18, 24, 25, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 129, 130, 132, 133, 136, 138, 140, 141, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 327, 336, 337, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 676, 677, 678, 680, 683, 684, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 761, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 959, 972, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 999, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109], "That": [18, 19, 124, 138, 139, 140, 377, 610, 613], "alreadi": [18, 19, 75, 76, 120, 127, 130, 131, 138, 153, 327, 377, 453, 456, 493, 496, 585, 588, 615, 618, 660, 664, 806, 844, 846, 1076], "refer": [18, 19, 68, 69, 114, 115, 120, 124, 125, 126, 131, 153, 179, 193, 194, 377, 488, 491, 548, 551, 750, 752, 755, 757, 759, 806, 869, 871, 875, 877, 1032, 1053, 1056, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1108], "approach": [18, 19, 124, 126, 130, 138, 139, 153], "colour": 18, "applic": [18, 131, 132, 140, 789, 804, 805, 959, 965, 971], "good": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140], "chanc": 18, "vscode": 18, "show": [18, 19, 75, 76, 122, 124, 133, 152, 153, 1076], "explor": [18, 137, 141, 152], "troubleshoot": 18, "sometim": [18, 19, 124], "ever": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "64": [18, 48, 49, 94, 95, 124, 139, 140, 377, 635, 638, 640, 643, 789, 795, 796, 797, 798, 799, 800, 806, 844, 846, 1032, 1033, 1036, 1076, 1098, 1109], "bit": [18, 122, 124, 126, 130, 138, 249, 284, 285, 288, 292, 295, 377, 428, 431, 433, 436, 443, 446, 1032, 1049, 1052, 1057, 1060], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 62, 63, 108, 109, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 179, 180, 181, 249, 260, 263, 377, 488, 491, 806, 830, 833, 894, 912, 915, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1076], "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 121, 122, 124, 126, 129, 130, 132, 133, 138, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 568, 571, 573, 576, 583, 584, 595, 598, 610, 613, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1041, 1044, 1065, 1066, 1069, 1076], "fix": [18, 19], "fail": [18, 20, 123, 124, 134, 136, 138], "attempt": [18, 134, 153], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 126, 128, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 249, 270, 271, 272, 274, 314, 317, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 687, 688, 689, 694, 695, 696, 698, 739, 740, 741, 742, 750, 752, 753, 754, 756, 766, 767, 768, 770, 771, 773, 775, 777, 789, 796, 797, 798, 800, 802, 804, 805, 806, 807, 808, 809, 811, 838, 840, 847, 849, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 939, 942, 955, 956, 957, 959, 965, 968, 971, 972, 977, 978, 979, 980, 981, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1084, 1085, 1086, 1112, 1113], "proce": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "modifi": [18, 19, 121, 126, 131, 132, 134, 136], "properli": [18, 118], "enter": [18, 19, 120, 129, 131, 132, 327, 750, 788], "unsur": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "feel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 1076], "server": [19, 1076], "appropri": [19, 70, 71, 116, 117, 124, 128, 377, 393, 396, 585, 588, 995, 996], "context": [19, 122, 124, 130, 131, 132, 327, 665, 717, 789, 804, 1098, 1109], "suitabl": [19, 119, 130], "quick": [19, 118, 140], "alwai": [19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 124, 126, 127, 129, 130, 133, 134, 136, 138, 153, 249, 255, 258, 377, 393, 396, 585, 588, 665, 710, 750, 766, 767, 768, 769, 770, 784], "correct": [19, 20, 66, 67, 112, 113, 118, 120, 126, 130, 131, 132, 134, 249, 322, 894, 895, 898, 1032, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1064, 1076], "tendenc": 19, "gener": [19, 20, 21, 43, 44, 45, 70, 71, 75, 76, 89, 90, 91, 116, 117, 118, 119, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 176, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 610, 613, 625, 628, 635, 638, 640, 643, 666, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 743, 744, 745, 746, 747, 748, 749, 750, 766, 767, 768, 769, 770, 806, 818, 820, 894, 908, 911, 929, 932, 983, 984, 985, 986, 989, 991, 993, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1076, 1114, 1118], "land": 19, "end": [19, 130, 133, 135, 152, 153, 179, 180, 181, 377, 413, 416, 1076, 1082], "world": 19, "come": [19, 20, 124, 140, 151, 1076, 1082], "fly": 19, "hard": [19, 138], "receiv": [19, 124, 131, 132, 327, 336, 337, 665, 672, 716, 1098, 1108], "respons": [19, 21], "internship": 19, "comment": [19, 134], "trigger": 19, "unansw": 19, "label": [19, 52, 53, 98, 99, 136, 137, 141, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "respond": 19, "remov": [19, 20, 21, 75, 76, 121, 124, 126, 131, 133, 141, 806, 818, 820, 830, 833, 866, 868, 894, 935, 938, 955, 956, 957], "someon": [19, 153], "els": [19, 20, 119, 126, 127, 133, 136, 138, 140, 141, 153, 665, 675, 686, 690, 959, 969], "strive": [19, 124, 153], "repli": 19, "newli": [19, 124, 133, 176, 177, 249, 255, 258, 665, 676], "place": [19, 34, 35, 54, 55, 75, 76, 100, 101, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 134, 141, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 235, 236, 240, 241, 243, 244, 246, 248, 249, 270, 273, 298, 301, 308, 311, 327, 372, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 708, 709, 710, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 930, 931, 932, 933, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069, 1114, 1115, 1116, 1117, 1118, 1119], "bug": [19, 124], "serv": [19, 120, 124, 126, 129, 130, 135, 1076], "suspect": 19, "behaviour": [19, 120, 121, 124, 125, 129, 130, 133, 138], "observ": 19, "confid": 19, "noth": [19, 75, 76], "wrong": 19, "someth": [19, 119, 139, 140, 153], "bet": 19, "act": [19, 122, 125, 153], "placehold": [19, 120, 129, 134, 959, 971], "sub": [19, 20, 75, 76, 118, 124, 125, 130, 138, 139, 140, 327, 352, 353, 356, 357, 358, 359, 806, 818, 820, 894, 934, 955, 956, 957, 958, 1076], "mark": [19, 124], "ii": [19, 1032, 1033, 1036], "iii": 19, "titl": [19, 1076], "issue_numb": 19, "delet": [19, 21], "No": [19, 136], "wait": [19, 72, 75, 76, 77, 78, 79], "progress": [19, 130, 137, 141], "pr": 19, "soon": [19, 130, 151, 153, 1076, 1082], "partial": [19, 75, 76, 1110, 1111], "solut": [19, 124, 130, 806, 854, 856], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 34, 35, 42, 43, 88, 89, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 136, 138, 140, 179, 201, 202, 203, 205, 665, 666, 667, 668, 669, 670], "shape": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 131, 132, 133, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 223, 224, 225, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 242, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 266, 267, 268, 269, 327, 339, 367, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 687, 688, 689, 691, 694, 695, 696, 697, 698, 703, 706, 719, 722, 723, 728, 736, 738, 747, 750, 752, 754, 756, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 994, 995, 996, 998, 999, 1007, 1008, 1009, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1112, 1113], "move": [19, 75, 76, 119, 327, 372], "within": [19, 29, 32, 33, 124, 140, 153, 179, 180, 181, 983, 989, 991], "7": [19, 21, 23, 26, 27, 40, 41, 44, 45, 52, 53, 54, 55, 72, 77, 78, 86, 87, 90, 91, 98, 99, 102, 103, 104, 105, 122, 124, 126, 130, 133, 164, 166, 167, 249, 285, 288, 327, 349, 360, 377, 378, 381, 393, 394, 395, 396, 397, 403, 405, 423, 426, 428, 431, 438, 439, 440, 441, 442, 448, 451, 453, 456, 463, 466, 483, 486, 493, 496, 508, 511, 533, 536, 583, 584, 610, 613, 615, 618, 620, 621, 622, 623, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 665, 674, 683, 693, 750, 752, 753, 754, 755, 756, 757, 759, 766, 767, 769, 771, 773, 789, 795, 796, 799, 805, 806, 812, 814, 815, 817, 818, 820, 844, 846, 863, 865, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 908, 911, 912, 915, 934, 943, 946, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036], "dai": 19, "close": [19, 121, 377, 488, 491, 615, 618, 806, 857, 859], "likewis": [19, 120, 121, 126, 130, 131, 139], "freed": 19, "flag": [19, 44, 45, 75, 76, 90, 91, 131, 133, 138, 327, 346, 750, 766, 767, 768, 769, 770], "purpos": [19, 21, 120, 122, 124, 126, 128, 129, 130, 135, 138, 377, 488, 491, 1076], "remain": [19, 122, 153, 377, 393, 396, 585, 588, 610, 613, 894, 925, 928, 959, 965], "access": [19, 21, 75, 76, 125, 131], "short": [19, 140, 789, 803], "basi": [19, 123, 139], "situat": [19, 141], "alloc": [19, 34, 35, 153, 179, 231, 233, 235, 236, 238, 240, 249, 255, 258, 327], "upon": [19, 122, 124, 133, 153], "period": 19, "prevent": [19, 44, 45, 90, 91, 133, 134, 138, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1032, 1057, 1060, 1114, 1115, 1116], "unabl": 19, "obvious": 19, "never": [19, 124, 130], "reflect": [19, 129], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 138, 141], "becaus": [19, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 136, 140, 141, 153], "inact": 19, "limit": [19, 72, 75, 76, 77, 78, 79, 122, 124, 134, 136, 139, 141, 153, 249, 285, 288, 292, 295, 665, 677, 678, 680, 894, 895, 898], "me": 19, "unfairli": 19, "definit": [19, 50, 51, 96, 97, 126, 131, 138, 806, 807, 808, 809, 810, 811, 812, 814], "investig": 19, "Then": [19, 21, 125, 138, 153], "practic": 19, "separ": [19, 124, 129, 130, 134, 136, 138, 139], "branch": [19, 130, 153, 176, 177, 377, 413, 416], "simpli": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 125, 126, 129, 130, 132, 133, 136, 140, 141, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 807, 808, 809, 811, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075], "role": [19, 125, 137], "kept": [19, 72, 75, 76, 77, 78, 79, 133, 955, 956, 957], "date": 19, "upstream": [19, 123], "complic": [19, 136], "root": [19, 21, 40, 41, 86, 87, 139, 377, 635, 636, 637, 638, 639, 983, 984, 988], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1032, 1049, 1052, 1057, 1060], "clone": [19, 21, 75, 76, 327, 348, 349, 350, 351], "push": [19, 123, 134], "both": [19, 120, 121, 122, 124, 125, 126, 130, 132, 133, 136, 138, 139, 140, 141, 152, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 313, 377, 378, 381, 393, 396, 398, 401, 403, 406, 453, 456, 488, 491, 493, 496, 583, 584, 595, 598, 605, 608, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 665, 693, 750, 752, 755, 789, 792, 796, 799, 805, 806, 807, 810, 812, 814, 818, 820, 830, 833, 869, 871, 894, 929, 932, 977, 978, 981, 1000, 1006, 1010, 1032, 1037, 1040, 1065, 1066, 1069], "abort": 19, "tediou": 19, "resolut": [19, 249, 285, 288], "stash": 19, "reinstat": 19, "correspond": [19, 40, 41, 54, 55, 72, 75, 76, 77, 78, 86, 87, 100, 101, 120, 121, 122, 123, 124, 126, 129, 130, 131, 249, 260, 263, 377, 413, 414, 415, 416, 417, 605, 606, 608, 806, 812, 814, 821, 823, 854, 856, 894, 900, 903, 929, 930, 931, 932, 933, 983, 984, 995, 996, 997, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 121, 125, 130, 138], "atlassian": 19, "tutori": [19, 125], "wrote": 19, "piec": [19, 126, 128, 129, 136], "inform": [19, 124, 130, 134, 249, 285, 288, 292, 295, 665, 671, 750, 784], "tag": 19, "usu": 19, "describ": [19, 124, 137, 141, 1032, 1033, 1036, 1049, 1052, 1053, 1056, 1057, 1060], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1076], "eg": [19, 124], "16": [19, 50, 51, 86, 87, 104, 105, 122, 124, 139, 377, 650, 651, 653, 654, 789, 795, 796, 799, 806, 807, 808, 810, 818, 820, 844, 846, 985, 987, 995, 999, 1032, 1033, 1036], "5": [19, 21, 23, 26, 27, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 120, 122, 124, 127, 138, 139, 140, 164, 166, 167, 169, 179, 202, 205, 213, 216, 226, 229, 241, 243, 244, 248, 249, 270, 272, 273, 274, 279, 282, 285, 288, 308, 311, 327, 349, 365, 369, 377, 378, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 405, 406, 407, 418, 421, 423, 426, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 463, 466, 488, 489, 490, 491, 493, 494, 495, 496, 508, 511, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 625, 627, 628, 629, 635, 638, 640, 643, 650, 651, 653, 654, 655, 656, 658, 659, 665, 666, 667, 674, 683, 693, 694, 697, 698, 737, 750, 752, 754, 755, 756, 766, 769, 789, 792, 794, 795, 796, 799, 805, 806, 807, 808, 810, 812, 814, 815, 817, 818, 820, 827, 829, 844, 846, 863, 865, 866, 868, 878, 889, 892, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 922, 923, 924, 925, 928, 929, 931, 932, 933, 934, 935, 938, 943, 946, 959, 962, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 994, 995, 997, 998, 999, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1069, 1098, 1109], "past": 19, "l": [19, 50, 51, 96, 97, 118, 806, 807, 808, 809, 810, 811, 821, 823, 830, 833, 866, 868], "filepath": [19, 75, 76], "grep": 19, "v": [19, 136, 139, 140, 141, 789, 805, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1118, 1120, 1121], "commit_id": 19, "handi": [19, 124], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 122], "previou": [19, 120, 124, 125, 141, 153, 665, 746, 747, 750, 757, 759, 771, 773], "shown": [19, 70, 71, 75, 76, 116, 117, 120, 122, 124, 125, 134, 136, 138, 153, 377, 423, 426, 448, 451, 463, 466, 615, 618, 655, 659, 806, 815, 817, 894, 908, 911, 912, 915, 1000, 1001, 1005, 1021, 1022, 1025], "whenev": [19, 124, 138, 139], "think": [19, 122], "interact": [19, 124, 1076], "gain": [19, 135, 140, 1089], "quit": [19, 20, 121, 124, 126, 128, 129], "repeat": [19, 54, 55, 75, 76, 100, 101, 121, 122, 124, 127, 129, 130, 131, 134, 665, 689, 894, 924, 947, 950], "yourself": [19, 20, 124, 152], "simpler": [19, 138], "cannot": [19, 125, 127, 131, 141], "least": [19, 122, 124, 126, 129, 806, 830, 833], "final": [19, 121, 122, 126, 129, 131, 133, 134, 136, 138, 139, 179, 207, 208, 210, 211, 665, 692, 1098, 1109], "tickbox": 19, "lower": [19, 34, 35, 50, 51, 75, 76, 96, 97, 122, 124, 136, 153, 179, 193, 194, 231, 233, 235, 377, 583, 806, 807, 808, 809, 810, 811, 983, 989, 991], "corner": 19, "without": [19, 75, 76, 119, 120, 122, 125, 126, 129, 130, 132, 134, 136, 138, 139, 140, 152, 153, 665, 721, 727, 894, 925, 928, 959, 961, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "span": 19, "intent": [19, 133], "larg": [19, 139, 377, 393, 396, 585, 588], "discourag": 19, "philosophi": 19, "increment": [19, 665, 709], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1076], "wast": 19, "spot": [19, 126], "mistak": [19, 134], "propos": 19, "mountain": 19, "around": [19, 72, 75, 76, 77, 78, 79, 120, 126, 129, 138, 153], "advoc": [19, 153], "individu": [19, 20, 126], "per": [19, 48, 49, 94, 95, 124, 139, 327, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "style": [19, 995, 998], "ve": [19, 135, 138, 983, 984, 1076], "were": [19, 75, 76, 119, 124, 130, 134], "actual": [19, 118, 126, 133, 135, 138, 140, 153], "aim": [19, 135], "part": [19, 34, 35, 119, 123, 124, 126, 136, 137, 141, 152, 153, 179, 231, 233, 235, 236, 238, 240, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 1110, 1111], "subsect": 19, "session": [19, 1076], "block": [19, 124, 126, 134, 135, 137, 141, 153, 327, 750, 788, 1076], "smaller": [19, 54, 55, 100, 101, 136, 141, 894, 895, 898, 929, 930, 931, 932, 933, 1032, 1049, 1052, 1057, 1060], "edit": 19, "exact": [19, 75, 76, 136, 1000, 1001, 1005], "beauti": 19, "particularli": [19, 139, 153], "concern": [19, 118, 122, 130, 133, 135], "effici": [19, 120, 124, 126, 130, 133, 134, 136, 139, 153], "difficult": [19, 124, 153, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "undo": 19, "stress": 19, "frequenc": [19, 665, 692], "pycharm": 19, "pytest": [19, 124], "button": 19, "declar": 19, "insid": [19, 21, 119, 124, 130, 131], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 124], "test_funct": [19, 124], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 75, 76, 82, 83, 124, 249, 276, 277, 278, 319, 320, 321, 327, 340, 341, 665, 681, 685, 704, 750, 783], "q": [19, 153, 789, 805, 806, 821, 823, 850, 852], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "variou": [19, 120, 121, 128, 152], "valu": [19, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 56, 57, 62, 63, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 108, 109, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 141, 153, 179, 180, 181, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 249, 255, 258, 276, 277, 278, 327, 339, 370, 371, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 396, 398, 399, 400, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 417, 453, 456, 468, 469, 470, 472, 473, 476, 478, 481, 483, 485, 487, 488, 490, 492, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 578, 579, 583, 584, 585, 586, 587, 588, 589, 595, 598, 600, 603, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 618, 635, 636, 637, 639, 640, 641, 642, 644, 645, 647, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 681, 686, 692, 693, 694, 695, 696, 697, 698, 704, 707, 711, 721, 722, 723, 724, 725, 727, 749, 750, 752, 753, 754, 755, 756, 757, 759, 761, 771, 773, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 805, 806, 838, 840, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 872, 874, 894, 895, 896, 897, 898, 899, 904, 905, 906, 907, 920, 923, 925, 928, 951, 953, 954, 955, 956, 957, 959, 963, 964, 965, 966, 967, 972, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 993, 995, 996, 997, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118], "cpu": [19, 42, 43, 75, 76, 88, 89, 104, 105, 132, 153, 179, 207, 208, 210, 211, 244, 248, 327, 346, 347, 349, 360, 363, 366, 368, 369, 372, 373, 375, 376, 665, 693, 694, 695, 696, 697, 698, 719, 722, 723, 983, 984, 985, 986, 987, 988, 989, 991, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "gpu": [19, 104, 105, 132, 138, 153, 327, 346, 349, 360, 362, 364, 368, 369, 370, 373, 375, 985, 987], "combin": [19, 72, 75, 76, 77, 78, 79, 122, 124, 126, 129, 130, 141, 806, 812, 814], "wherebi": [20, 130, 959, 971], "broad": 20, "distribut": [20, 52, 53, 75, 76, 98, 99, 104, 105, 124, 132, 153, 327, 348, 352, 353, 354, 355, 789, 801, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 983, 984, 985, 986, 987, 988, 989, 991, 1098, 1106, 1110, 1111], "across": [20, 75, 76, 120, 122, 124, 126, 130, 131, 327, 336, 337, 348, 349, 351, 352, 353, 354, 355, 359, 369, 370, 665, 673, 674, 959, 965, 995, 997], "todo": 20, "commit": [20, 124], "NOT": [20, 377, 568, 571], "static": [20, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 126, 153, 170, 174, 176, 177, 270, 274, 377, 378, 382, 383, 387, 388, 392, 393, 397, 398, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 491, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 585, 589, 590, 594, 595, 599, 600, 604, 605, 609, 610, 614, 615, 619, 620, 624, 625, 629, 635, 639, 640, 644, 645, 646, 650, 651, 655, 656, 660, 661, 666, 670, 694, 698, 739, 740, 766, 770, 796, 800, 807, 811, 879, 883, 884, 888, 889, 893, 895, 899, 920, 924, 929, 933, 978, 982, 985, 987, 1006, 1007, 1066, 1070, 1071, 1075], "method": [20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 134, 136, 137, 140, 141, 153, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 183, 184, 188, 189, 196, 197, 199, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 248, 249, 270, 271, 272, 274, 279, 282, 285, 288, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 681, 682, 693, 694, 695, 696, 698, 722, 723, 737, 739, 740, 741, 742, 743, 744, 750, 752, 753, 754, 756, 766, 767, 768, 770, 771, 773, 775, 777, 788, 789, 795, 796, 797, 798, 800, 805, 806, 807, 808, 809, 811, 812, 814, 815, 817, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 908, 911, 912, 915, 920, 921, 922, 924, 929, 930, 931, 933, 934, 935, 936, 937, 943, 946, 959, 960, 970, 971, 972, 978, 979, 980, 982, 983, 985, 987, 988, 989, 991, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1098, 1109, 1110, 1111], "instanc": [20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 129, 131, 133, 139, 140, 141, 154, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 270, 271, 272, 273, 279, 282, 285, 288, 298, 301, 308, 311, 327, 336, 368, 377, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 503, 504, 505, 508, 509, 510, 511, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 586, 587, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 605, 606, 607, 610, 611, 612, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 642, 643, 645, 647, 648, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 682, 693, 694, 695, 696, 710, 728, 737, 739, 741, 742, 743, 744, 752, 753, 754, 756, 766, 767, 768, 789, 792, 795, 796, 797, 798, 799, 805, 806, 807, 808, 809, 810, 812, 814, 815, 817, 818, 820, 878, 879, 880, 881, 882, 884, 885, 886, 889, 890, 891, 894, 895, 896, 897, 908, 911, 912, 915, 920, 921, 922, 929, 930, 931, 932, 934, 935, 936, 937, 943, 946, 977, 978, 979, 980, 981, 983, 988, 989, 991, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1087, 1088], "revers": [20, 23, 26, 27, 72, 77, 78, 121, 122, 141, 153, 665, 686, 894, 912, 915], "resourc": 20, "content": [20, 21, 75, 76, 125, 133, 136, 139], "thei": [20, 75, 76, 118, 119, 122, 124, 126, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 153, 249, 313, 955, 956, 957, 983, 984, 1076, 1120, 1121], "hypothesi": 20, "cover": [20, 121, 122, 124, 126, 128, 135], "lambda": [20, 136, 139, 1114, 1117, 1119], "direct": [20, 125, 140, 141, 152, 1021, 1027, 1030], "bind": [20, 130], "special": [20, 23, 26, 27, 72, 77, 78, 119, 120, 121, 122, 129, 377, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 448, 451, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064], "aforement": 20, "categori": [20, 119, 125, 129, 130, 131, 135, 1076], "parent": [20, 138, 750, 788], "arraywithelementwis": [20, 23, 26, 27, 40, 129], "containerwithmanipul": [20, 72, 77, 78, 100], "hint": [20, 119, 120, 121, 126, 129, 133, 134, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069], "its": [20, 21, 54, 55, 100, 101, 121, 124, 125, 134, 141, 249, 260, 263, 327, 371, 665, 738, 806, 830, 833, 894, 908, 911, 925, 928, 929, 930, 931, 932, 933, 943, 946], "docstr": [20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 126, 130, 134, 170, 171, 172, 174, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 213, 216, 218, 219, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 270, 271, 272, 273, 274, 285, 288, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 806, 807, 808, 809, 811, 815, 817, 818, 820, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 908, 911, 912, 915, 920, 921, 922, 924, 929, 930, 931, 932, 933, 935, 936, 937, 978, 979, 980, 982, 985, 987, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075], "thorough": [20, 120, 121, 124], "transpil": [20, 125, 135, 137, 1076, 1082], "builder": [21, 151, 153, 1076], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 54, 55, 100, 101, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 806, 818, 820, 838, 840, 847, 849, 866, 868, 894, 912, 915, 929, 930, 931, 932, 933, 1021, 1022, 1025, 1027, 1030, 1076], "synchron": 21, "rest": [21, 137, 141], "remove_doc": 21, "_": [21, 40, 41, 86, 87, 121, 124, 130, 133, 138, 139, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 489, 490, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 750, 752, 755, 757, 759, 806, 818, 820, 875, 877, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1021, 1022, 1025, 1032, 1037, 1040], "indic": [21, 42, 43, 48, 49, 54, 55, 56, 57, 75, 76, 88, 89, 94, 95, 100, 101, 102, 103, 125, 134, 137, 141, 164, 169, 377, 620, 623, 665, 693, 694, 695, 696, 697, 698, 706, 719, 722, 723, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 806, 872, 874, 894, 929, 930, 931, 932, 933, 959, 960, 962, 964, 966, 967, 968, 970, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 995, 996, 997, 998, 1000, 1001, 1005, 1011, 1015, 1021, 1022, 1025, 1027, 1030, 1076, 1079, 1081, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1110, 1111], "privat": [21, 124, 1114, 1118], "fulfil": [21, 135, 1076], "autogenerated_sourc": 21, "format": [21, 75, 76, 118, 121, 131, 132, 136, 138, 139, 249, 279, 282, 327, 347, 1032, 1033, 1036, 1076], "png": [21, 139], "_imag": 21, "lastli": 21, "structur": [21, 72, 75, 76, 77, 78, 79, 119, 126, 129, 130, 139, 140, 665, 681, 959, 972], "rst": 21, "skip": [21, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 124, 170, 172, 174, 270, 272, 274, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 694, 696, 698, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 959, 972, 978, 980, 982, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075], "read": [21, 75, 76, 1076], "partial_sourc": 21, "conf": 21, "copi": [21, 34, 35, 36, 37, 42, 43, 75, 76, 80, 81, 82, 83, 88, 89, 121, 127, 131, 136, 138, 139, 152, 153, 179, 183, 184, 185, 186, 196, 199, 249, 255, 256, 257, 258, 259, 327, 372, 665, 682, 739, 740, 741, 742, 743, 744, 894, 925, 928, 959, 961, 1021, 1027, 1030], "create_rst_fil": 21, "filter": [21, 48, 49, 94, 95, 124, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "repres": [21, 40, 41, 86, 87, 124, 138, 179, 213, 216, 249, 284, 377, 388, 389, 390, 391, 392, 393, 396, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 463, 464, 465, 466, 467, 585, 588, 630, 631, 632, 633, 634, 655, 656, 657, 658, 659, 750, 788, 789, 802, 806, 853, 854, 856], "overal": [21, 121, 130, 131, 132, 141], "markup": 21, "6": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 86, 87, 88, 89, 98, 99, 102, 103, 104, 105, 122, 124, 127, 130, 138, 139, 140, 164, 166, 167, 169, 179, 202, 205, 244, 248, 249, 279, 282, 285, 288, 327, 349, 365, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 406, 423, 426, 428, 431, 438, 439, 440, 441, 442, 448, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 466, 488, 490, 493, 496, 508, 511, 533, 536, 583, 584, 590, 593, 610, 613, 615, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 635, 638, 640, 643, 650, 654, 655, 659, 665, 674, 683, 693, 694, 697, 698, 737, 750, 752, 753, 755, 789, 792, 795, 796, 799, 805, 806, 812, 814, 815, 817, 818, 820, 844, 846, 857, 859, 863, 865, 878, 879, 881, 882, 883, 884, 886, 888, 889, 891, 892, 893, 894, 895, 896, 898, 900, 903, 908, 911, 912, 915, 920, 923, 925, 928, 929, 932, 934, 935, 938, 943, 946, 959, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 995, 996, 999, 1000, 1001, 1005, 1006, 1010, 1032, 1033, 1036, 1037, 1040], "extract": [21, 119], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 153], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 75, 76, 124, 136, 139, 377, 433, 436, 806, 818, 820, 830, 833], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 86, 87, 90, 91, 104, 105, 122, 124, 139, 140, 249, 285, 288, 377, 393, 394, 395, 396, 397, 403, 406, 423, 426, 428, 431, 583, 584, 615, 618, 620, 623, 635, 638, 640, 643, 665, 693, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 766, 769, 771, 772, 773, 774, 789, 792, 795, 796, 799, 806, 812, 814, 815, 817, 818, 820, 844, 846, 857, 859, 863, 865, 894, 895, 896, 898, 912, 915, 929, 932, 934, 983, 984, 985, 986, 987, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036, 1114, 1115, 1116], "index": [21, 34, 35, 42, 43, 62, 63, 75, 76, 80, 81, 88, 89, 108, 109, 126, 130, 138, 178, 179, 193, 194, 213, 214, 215, 216, 217, 327, 368, 665, 671, 693, 694, 695, 696, 697, 698, 894, 939, 942, 959, 962, 963, 966, 967, 968, 973, 975, 995, 996, 997, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1079, 1081], "create_index_rst": 21, "14": [21, 86, 87, 102, 103, 104, 105, 122, 124, 130, 249, 285, 288, 377, 403, 406, 448, 451, 620, 624, 630, 632, 634, 750, 752, 755, 789, 805, 806, 818, 820, 844, 846, 978, 980, 982, 985, 987, 1000, 1001, 1005, 1032, 1033, 1036], "\u03c0": [21, 377, 383, 386, 398, 401, 408, 411, 413, 416], "namespac": [21, 119, 131, 136, 141], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 34], "arraywithdatatyp": [23, 26, 27, 36], "arraywithdevic": [23, 26, 27, 38, 138], "arraywithgener": [23, 26, 27, 42, 138], "arraywithgradi": [23, 26, 27, 44, 138], "arraywithimag": [23, 26, 27, 46, 138], "arraywithlay": [23, 26, 27, 48], "arraywithlinearalgebra": [23, 26, 27, 50], "arraywithloss": [23, 26, 27, 52], "arraywithmanipul": [23, 26, 27, 54], "arraywithnorm": [23, 26, 27, 56], "arraywithrandom": [23, 26, 27, 58, 138], "arraywithsearch": [23, 26, 27, 60], "arraywithset": [23, 26, 27, 62], "arraywithsort": [23, 26, 27, 64], "arraywithstatist": [23, 26, 27, 66], "arraywithutil": [23, 26, 27, 68], "properti": [23, 26, 27, 75, 76, 122, 124, 126, 130, 138, 139, 140, 327, 339, 1110, 1111, 1114, 1115, 1116, 1117, 1119], "__add__": [23, 26, 27, 72, 77, 78, 120, 121, 122, 129, 130, 138], "variant": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 122, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 807, 808, 809, 811, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075], "wrap": [23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 117, 118, 120, 121, 124, 126, 127, 129, 130, 131, 132, 133, 136, 138, 141, 153, 154, 162, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 676, 694, 695, 696, 698, 739, 740, 741, 742, 750, 752, 753, 754, 756, 766, 767, 768, 770, 787, 796, 797, 798, 800, 807, 808, 809, 811, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075], "minim": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 133, 136, 170, 171, 172, 174, 183, 184, 188, 189, 196, 197, 202, 203, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 270, 271, 272, 274, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 670, 694, 695, 696, 698, 739, 740, 741, 742, 752, 753, 754, 756, 766, 767, 768, 770, 796, 797, 798, 800, 807, 808, 809, 811, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 893, 895, 896, 897, 899, 920, 921, 922, 924, 929, 930, 931, 933, 935, 936, 937, 978, 979, 980, 982, 985, 987, 1006, 1007, 1008, 1009, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075], "self": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 129, 130, 136, 138, 139, 140, 141, 170, 171, 172, 174, 183, 184, 188, 189, 190, 196, 197, 198, 202, 203, 204, 213, 214, 215, 218, 219, 220, 226, 227, 228, 231, 233, 234, 236, 238, 239, 244, 246, 247, 255, 256, 257, 260, 261, 262, 265, 266, 267, 270, 271, 272, 279, 280, 281, 285, 286, 287, 292, 293, 294, 298, 299, 300, 303, 304, 305, 308, 309, 310, 314, 315, 316, 327, 378, 379, 380, 383, 384, 385, 388, 389, 390, 393, 394, 395, 398, 399, 400, 403, 404, 405, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 585, 586, 587, 590, 591, 592, 595, 596, 597, 600, 601, 602, 605, 606, 607, 610, 611, 612, 615, 616, 617, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 645, 647, 648, 650, 652, 653, 655, 657, 658, 660, 662, 663, 666, 667, 668, 678, 679, 694, 695, 696, 739, 740, 741, 742, 752, 753, 754, 757, 758, 762, 763, 766, 767, 768, 771, 772, 775, 776, 779, 780, 796, 797, 798, 807, 808, 809, 811, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 832, 834, 835, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 854, 855, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 879, 880, 881, 884, 885, 886, 889, 890, 891, 895, 896, 897, 900, 901, 902, 904, 905, 906, 908, 909, 910, 912, 913, 914, 916, 917, 918, 920, 921, 922, 925, 926, 927, 929, 930, 931, 935, 936, 937, 939, 940, 941, 943, 944, 945, 947, 948, 949, 951, 952, 953, 978, 979, 980, 989, 990, 1001, 1003, 1004, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1018, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1057, 1058, 1059, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1114, 1118], "input": [23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 154, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 288, 298, 301, 303, 306, 308, 311, 313, 314, 317, 322, 326, 327, 336, 337, 346, 347, 348, 349, 351, 352, 355, 359, 365, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 677, 678, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 702, 703, 705, 706, 708, 709, 710, 712, 713, 714, 715, 719, 722, 723, 726, 730, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 750, 752, 753, 754, 755, 756, 761, 766, 767, 768, 769, 770, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 962, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1112, 1113], "numer": [23, 26, 27, 40, 41, 72, 77, 78, 86, 87, 119, 140, 179, 213, 216, 249, 255, 258, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 453, 454, 455, 456, 457, 468, 471, 488, 491, 493, 494, 495, 496, 497, 498, 501, 513, 516, 518, 521, 523, 526, 528, 531, 568, 571, 573, 576, 585, 588, 590, 591, 592, 593, 594, 595, 598, 600, 601, 602, 604, 605, 608, 610, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 640, 643, 645, 646, 648, 649, 660, 664, 665, 700, 701, 724, 725, 732, 733, 806, 812, 814, 830, 833, 844, 846, 857, 859, 863, 865, 866, 868, 869, 871, 983, 994, 995, 996, 997, 1032, 1037, 1040, 1049, 1052, 1057, 1060, 1089], "broadcast": [23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 130, 131, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 260, 263, 265, 268, 327, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 687, 688, 689, 691, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 999, 1000, 1016, 1020, 1021, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "element": [23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 100, 101, 108, 109, 121, 124, 136, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 201, 202, 203, 205, 231, 233, 235, 236, 238, 240, 327, 350, 354, 358, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 673, 674, 677, 678, 680, 683, 684, 691, 706, 739, 740, 741, 742, 743, 744, 750, 788, 789, 801, 806, 812, 814, 821, 823, 830, 833, 850, 852, 857, 859, 894, 895, 896, 897, 898, 899, 912, 915, 920, 923, 929, 930, 931, 932, 933, 934, 935, 938, 959, 962, 983, 984, 995, 998, 999, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1069, 1071, 1074, 1098, 1106], "wise": [23, 26, 27, 40, 41, 72, 75, 76, 77, 78, 86, 87, 136, 141, 164, 165, 166, 167, 168, 169, 170, 173, 175, 377, 378, 381, 383, 386, 393, 394, 395, 396, 397, 398, 401, 408, 411, 413, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 645, 646, 647, 648, 649, 665, 691, 894, 895, 898], "sum": [23, 26, 27, 40, 41, 66, 67, 72, 75, 76, 77, 78, 86, 87, 112, 113, 126, 130, 131, 133, 136, 327, 356, 357, 358, 359, 371, 377, 393, 394, 395, 396, 397, 558, 561, 645, 646, 648, 665, 684, 688, 722, 723, 789, 805, 806, 857, 859, 866, 868, 872, 874, 1032, 1033, 1036, 1053, 1056], "promot": [23, 26, 27, 36, 37, 40, 41, 50, 51, 72, 77, 78, 82, 83, 86, 87, 96, 97, 121, 126, 131, 249, 255, 258, 270, 271, 272, 273, 274, 313, 314, 317, 322, 377, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 483, 484, 485, 486, 487, 488, 490, 491, 492, 498, 499, 500, 502, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 578, 581, 585, 586, 587, 588, 589, 605, 606, 607, 608, 609, 610, 611, 613, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 806, 807, 808, 809, 810, 811, 812, 814, 827, 829, 830, 833, 838, 840, 844, 846, 847, 849, 854, 856, 869, 871, 872, 874, 894, 939, 942, 1032, 1041, 1044], "y": [23, 26, 27, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 114, 115, 119, 122, 125, 127, 130, 136, 138, 164, 166, 167, 168, 169, 170, 173, 175, 179, 201, 202, 205, 213, 216, 223, 224, 226, 229, 244, 248, 249, 255, 258, 279, 282, 285, 288, 327, 347, 361, 365, 370, 377, 378, 379, 380, 381, 382, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 413, 414, 415, 416, 417, 423, 426, 428, 431, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 466, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 508, 511, 533, 536, 583, 584, 590, 593, 595, 598, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 640, 643, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 666, 667, 668, 669, 670, 673, 674, 682, 683, 690, 691, 693, 694, 695, 696, 697, 698, 730, 737, 739, 740, 741, 742, 743, 744, 750, 761, 789, 795, 796, 797, 798, 799, 800, 802, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 827, 829, 844, 846, 863, 865, 866, 868, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 908, 911, 912, 915, 920, 922, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 943, 946, 959, 962, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1006, 1007, 1008, 1009, 1010, 1021, 1022, 1025, 1032, 1033, 1036, 1037, 1040, 1053, 1056, 1057, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075], "z": [23, 26, 27, 40, 41, 42, 43, 52, 53, 72, 77, 78, 86, 87, 88, 89, 98, 99, 122, 127, 130, 136, 138, 327, 361, 377, 393, 394, 395, 396, 397, 423, 426, 438, 439, 440, 441, 442, 448, 451, 508, 511, 533, 536, 583, 584, 665, 673, 674, 693, 694, 695, 696, 698, 730, 806, 812, 814, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 898, 959, 962, 995, 996, 1032, 1033, 1036, 1037, 1040], "mix": [23, 26, 27, 40, 41, 42, 43, 72, 77, 78, 86, 87, 98, 99, 118, 122, 124, 136, 249, 314, 317, 327, 365, 377, 393, 396, 423, 426, 438, 441, 448, 451, 508, 511, 533, 536, 595, 598, 610, 611, 612, 613, 614, 665, 666, 667, 682, 690, 693, 694, 697, 737, 739, 743, 744, 789, 792, 795, 796, 799, 805, 806, 807, 810, 863, 865, 878, 879, 882, 883, 884, 888, 889, 892, 893, 894, 895, 898, 977, 978, 981, 995, 999, 1032, 1033, 1036, 1041, 1044], "__le__": [23, 26, 27], "equal": [23, 26, 27, 34, 35, 40, 41, 42, 43, 75, 76, 86, 87, 88, 89, 122, 130, 131, 179, 193, 194, 201, 202, 203, 205, 249, 255, 258, 377, 433, 436, 443, 446, 477, 513, 516, 518, 521, 605, 608, 615, 618, 665, 666, 667, 668, 669, 670, 673, 674, 806, 818, 820, 838, 840, 847, 849, 894, 895, 898, 904, 907, 934, 951, 954, 983, 989, 991, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1041, 1044, 1053, 1056, 1057, 1060, 1061, 1064], "result": [23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 121, 122, 124, 125, 129, 130, 131, 133, 139, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 197, 199, 201, 202, 203, 205, 207, 208, 210, 211, 223, 224, 226, 227, 229, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 249, 255, 258, 265, 268, 314, 317, 327, 336, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 677, 678, 680, 683, 684, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 706, 719, 722, 723, 750, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 959, 962, 972, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 999, 1000, 1001, 1005, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "bool": [23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 122, 130, 131, 133, 134, 141, 170, 172, 174, 176, 177, 179, 201, 249, 255, 258, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 297, 298, 299, 301, 303, 304, 306, 308, 309, 311, 326, 327, 346, 347, 362, 371, 374, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 437, 438, 440, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585, 587, 589, 590, 592, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 667, 668, 669, 670, 673, 674, 683, 686, 690, 692, 694, 696, 698, 702, 703, 705, 710, 712, 713, 714, 715, 730, 731, 739, 740, 742, 748, 749, 750, 766, 767, 768, 769, 770, 784, 788, 806, 807, 808, 809, 810, 811, 834, 836, 857, 859, 872, 874, 879, 881, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 899, 929, 931, 933, 934, 955, 956, 957, 958, 959, 960, 961, 965, 969, 970, 971, 978, 980, 983, 984, 995, 996, 997, 1006, 1007, 1009, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "true": [23, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 164, 165, 170, 172, 174, 176, 177, 179, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 249, 255, 256, 257, 258, 259, 260, 262, 264, 265, 267, 269, 270, 271, 272, 273, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 301, 302, 303, 305, 307, 308, 310, 311, 312, 314, 316, 318, 326, 327, 346, 363, 367, 368, 377, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 426, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 598, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 667, 668, 669, 670, 673, 674, 675, 676, 678, 679, 683, 690, 692, 694, 696, 698, 702, 705, 706, 713, 726, 728, 730, 731, 737, 739, 740, 742, 744, 746, 747, 749, 750, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 788, 789, 801, 806, 807, 808, 809, 810, 811, 830, 832, 834, 836, 857, 858, 859, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 934, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 956, 957, 958, 959, 960, 969, 970, 972, 978, 980, 982, 983, 984, 989, 990, 992, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1037, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119], "__radd__": [23, 26, 27, 72, 77, 78, 121, 122], "adam_upd": [23, 26, 27, 90, 91, 140, 750], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 45, 56, 57, 72, 75, 76, 77, 78, 90, 91, 102, 103, 120, 121, 124, 127, 130, 131, 133, 134, 139, 140, 141, 153, 665, 675, 708, 709, 710, 711, 712, 713, 715, 734, 750, 757, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 787, 789, 804, 806, 854, 856, 955, 956, 957, 958, 977, 978, 979, 980, 981, 982, 1076, 1087, 1088, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "arang": [23, 26, 27, 72, 77, 78, 131, 179, 207, 208, 210, 211, 1032, 1033, 1036, 1076], "arg_info": [23, 26, 27, 72, 77, 78, 665], "arg_nam": [23, 26, 27, 72, 77, 78, 665], "argmax": [23, 26, 27, 72, 77, 78, 995, 1076], "argmin": [23, 26, 27, 72, 77, 78, 995, 1076], "array_equ": [23, 26, 27, 72, 77, 78, 665], "arrays_equ": [23, 26, 27, 72, 75, 76, 77, 78, 665], "as_ivy_dev": [23, 26, 27, 72, 77, 78, 138, 327], "as_ivy_dtyp": [23, 26, 27, 72, 77, 78, 125, 249], "as_native_dev": [23, 26, 27, 72, 77, 78, 327], "as_native_dtyp": [23, 26, 27, 72, 77, 78, 249], "assert_supports_inplac": [23, 26, 27, 72, 77, 78, 665], "cache_fn": [23, 26, 27, 72, 77, 78, 126, 665], "clear_mem_on_dev": [23, 26, 27, 72, 77, 78, 327], "clip_matrix_norm": [23, 26, 27, 72, 77, 78, 665], "clip_vector_norm": [23, 26, 27, 88, 89, 665], "closest_valid_dtyp": [23, 26, 27, 72, 77, 78, 249], "container_typ": [23, 26, 27, 72, 77, 78, 665], "conv1d": [23, 26, 27, 72, 77, 78, 789, 1098], "conv1d_transpos": [23, 26, 27, 72, 77, 78, 789], "conv2d": [23, 26, 27, 72, 77, 78, 789, 1076, 1098], "conv2d_transpos": [23, 26, 27, 72, 77, 78, 789], "conv3d": [23, 26, 27, 72, 77, 78, 789, 1098], "conv3d_transpos": [23, 26, 27, 72, 77, 78, 789], "copy_arrai": [23, 26, 27, 72, 77, 78, 665], "cumprod": [23, 26, 27, 72, 77, 78, 141, 665], "cumsum": [23, 26, 27, 72, 77, 78, 665, 1076], "current_backend_str": [23, 26, 27, 72, 77, 78, 665], "default_devic": [23, 26, 27, 72, 77, 78, 132, 136, 327, 365, 368, 369, 375], "default_dtyp": [23, 26, 27, 72, 77, 78, 126, 131, 249], "default_float_dtyp": [23, 26, 27, 72, 77, 78, 131, 249], "default_int_dtyp": [23, 26, 27, 72, 77, 78, 131, 249], "dev_clon": [23, 26, 27, 75, 76, 327], "dev_clone_arrai": [23, 26, 27, 72, 77, 78, 327], "dev_clone_it": [23, 26, 27, 72, 77, 78, 327], "dev_clone_nest": [23, 26, 27, 72, 77, 78, 327], "dev_dist": [23, 26, 27, 75, 76, 327], "dev_dist_arrai": [23, 26, 27, 72, 77, 78, 327], "dev_dist_it": [23, 26, 27, 72, 77, 78, 327], "dev_dist_nest": [23, 26, 27, 72, 77, 78, 327], "dev_unifi": [23, 26, 27, 72, 77, 78, 327], "dev_unify_arrai": [23, 26, 27, 72, 77, 78, 327], "dev_unify_it": [23, 26, 27, 72, 77, 78, 327], "dev_unify_nest": [23, 26, 27, 72, 77, 78, 327], "dev_util": [23, 26, 27, 72, 77, 78, 132, 327], "dropout": [23, 26, 27, 72, 77, 78, 139, 789, 1098, 1109], "dtype": [23, 26, 27, 34, 35, 36, 37, 66, 67, 75, 76, 80, 81, 82, 83, 88, 89, 112, 113, 119, 122, 124, 125, 126, 131, 132, 134, 138, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 315, 317, 319, 320, 321, 326, 327, 367, 377, 443, 446, 665, 673, 674, 719, 739, 740, 742, 743, 789, 801, 894, 908, 911, 983, 989, 991, 995, 996, 997, 1021, 1027, 1030, 1032, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1065, 1066, 1069, 1076, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1120, 1121], "dtype_bit": [23, 26, 27, 72, 77, 78, 249], "einops_rearrang": [23, 26, 27, 75, 76, 665], "einops_reduc": [23, 26, 27, 75, 76, 665], "einops_repeat": [23, 26, 27, 75, 76, 665], "empti": [23, 26, 27, 72, 75, 76, 77, 78, 129, 131, 132, 179, 180, 181, 750, 788, 1032, 1053, 1056, 1057, 1060, 1065, 1066, 1069, 1071, 1074], "execute_with_gradi": [23, 26, 27, 72, 77, 78, 130, 139, 140, 141, 153, 750, 1076], "ey": [23, 26, 27, 72, 77, 78, 141, 179, 789, 792, 796, 799], "floormod": [23, 26, 27, 72, 77, 78, 665, 1076], "fourier_encod": [23, 26, 27, 72, 77, 78, 665], "function_supported_dtyp": [23, 26, 27, 72, 77, 78, 249], "function_unsupported_dtyp": [23, 26, 27, 72, 77, 78, 249], "gather": [23, 26, 27, 42, 43, 75, 76, 88, 89, 665, 694, 695, 696, 697, 698], "gelu": [23, 26, 27, 72, 77, 78, 164, 1084], "get_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 665], "get_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 132, 327], "get_min_bas": [23, 26, 27, 72, 77, 78, 665], "get_min_denomin": [23, 26, 27, 72, 77, 78, 665], "get_nestable_mod": [23, 26, 27, 72, 77, 78, 665, 726, 746], "get_num_dim": [23, 26, 27, 72, 77, 78, 665, 1076], "get_referrers_recurs": [23, 26, 27, 72, 77, 78, 665], "gpu_is_avail": [23, 26, 27, 72, 77, 78, 327], "gradient_descent_upd": [23, 26, 27, 90, 91, 750, 955, 956, 957, 958, 1076], "handle_nest": [23, 26, 27, 72, 77, 78, 126, 130, 154], "handle_out_argu": [23, 26, 27, 72, 77, 78, 120, 128, 131, 132, 133, 154], "has_nan": [23, 26, 27, 75, 76, 665], "indices_wher": [23, 26, 27, 72, 77, 78, 134, 665, 1076], "infer_devic": [23, 26, 27, 72, 77, 78, 120, 131, 132, 154], "infer_dtyp": [23, 26, 27, 72, 77, 78, 120, 131, 132, 154], "inplace_arrays_support": [23, 26, 27, 72, 77, 78, 665], "inplace_decr": [23, 26, 27, 72, 77, 78, 665], "inplace_incr": [23, 26, 27, 72, 77, 78, 665], "inplace_upd": [23, 26, 27, 75, 76, 133, 665, 1087, 1088], "inplace_variables_support": [23, 26, 27, 72, 77, 78, 665], "inputs_to_native_arrai": [23, 26, 27, 72, 77, 78, 129, 154], "invalid_dtyp": [23, 26, 27, 72, 77, 78, 131, 249], "is_arrai": [23, 26, 27, 125, 665], "is_ivy_arrai": [23, 26, 27, 133, 138, 665], "is_ivy_contain": [23, 26, 27, 72, 77, 78, 665], "is_native_arrai": [23, 26, 27, 138, 665], "is_vari": [23, 26, 27, 44, 45, 90, 91, 133, 750, 770], "boolean": [23, 26, 27, 40, 41, 42, 43, 44, 45, 75, 76, 86, 87, 88, 89, 90, 91, 124, 130, 179, 201, 249, 255, 258, 297, 326, 327, 362, 374, 377, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 665, 666, 667, 668, 669, 670, 673, 674, 705, 706, 707, 711, 712, 713, 714, 715, 726, 728, 734, 749, 750, 766, 767, 768, 769, 770, 788, 955, 956, 957, 959, 969, 1032, 1045, 1048], "trainabl": [23, 26, 27, 44, 45, 90, 91, 121, 137, 139, 140, 750, 766, 767, 768, 769, 770, 1087, 1088, 1110, 1111, 1120], "lamb_upd": [23, 26, 27, 90, 91, 750], "lars_upd": [23, 26, 27, 90, 91, 750], "leaky_relu": [23, 26, 27, 72, 77, 78, 124, 164, 1076], "linear": [23, 26, 27, 72, 77, 78, 121, 136, 139, 140, 141, 164, 165, 166, 167, 665, 692, 789, 801, 854, 856, 1076, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "linspac": [23, 26, 27, 72, 77, 78, 136, 179, 180, 181, 1076], "logspac": [23, 26, 27, 72, 77, 78, 136, 179], "lstm_updat": [23, 26, 27, 72, 77, 78, 136, 789], "mt": [23, 26, 27, 138], "match_kwarg": [23, 26, 27, 72, 77, 78, 665], "matrix_pow": [23, 26, 27, 72, 77, 78, 806], "maximum": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 122, 136, 139, 141, 327, 351, 355, 359, 371, 377, 665, 677, 678, 680, 692, 750, 771, 773, 894, 895, 896, 897, 898, 899, 959, 971, 995, 996, 1032, 1037, 1040, 1045, 1048, 1076], "minimum": [23, 26, 27, 54, 55, 75, 76, 100, 101, 136, 141, 327, 377, 378, 381, 665, 700, 701, 724, 725, 732, 733, 894, 895, 896, 897, 898, 899, 995, 997, 1032, 1037, 1040, 1045, 1048, 1076], "multi_head_attent": [23, 26, 27, 72, 77, 78, 130, 133, 789], "multinomi": [23, 26, 27, 72, 77, 78, 983], "multiprocess": [23, 26, 27, 72, 75, 76, 77, 78, 79, 139, 153, 327, 336, 665], "ndim": [23, 26, 27, 124, 138, 806, 850, 852, 857, 859], "dimens": [23, 26, 27, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 114, 115, 122, 124, 125, 136, 139, 164, 169, 179, 231, 233, 235, 236, 238, 240, 327, 358, 665, 687, 688, 689, 692, 703, 719, 748, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 869, 871, 872, 874, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 900, 903, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 955, 956, 957, 958, 983, 994, 995, 996, 997, 998, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109], "ax": [23, 26, 27, 50, 51, 54, 55, 68, 69, 75, 76, 100, 101, 114, 115, 119, 122, 124, 131, 138, 327, 371, 665, 683, 806, 834, 836, 854, 856, 863, 864, 865, 872, 874, 894, 904, 907, 912, 915, 916, 917, 918, 919, 929, 930, 931, 932, 933, 935, 938, 943, 946, 951, 954, 995, 996, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "nonzero": [23, 26, 27, 72, 77, 78, 377, 393, 396, 585, 588, 995], "num_arrays_in_memori": [23, 26, 27, 72, 77, 78, 665], "num_cpu_cor": [23, 26, 27, 72, 77, 78, 132, 327], "num_gpu": [23, 26, 27, 72, 77, 78, 124, 132, 327], "num_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 327], "one_hot": [23, 26, 27, 72, 77, 78, 141, 665, 1076], "ones": [23, 26, 27, 34, 35, 72, 75, 76, 77, 78, 124, 136, 138, 139, 179, 193, 194, 226, 227, 229, 244, 248, 377, 453, 456, 665, 719, 1076], "optimizer_upd": [23, 26, 27, 90, 91, 750], "outputs_to_ivy_arrai": [23, 26, 27, 72, 77, 78, 120, 129, 131, 132, 154], "percent_used_mem_on_dev": [23, 26, 27, 72, 77, 78, 327], "print_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 665], "print_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 327], "promote_typ": [23, 26, 27, 72, 77, 78, 249], "queue_timeout": [23, 26, 27, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 665], "randint": [23, 26, 27, 48, 49, 72, 77, 78, 94, 95, 104, 105, 796, 797, 798, 800, 983, 987, 1076], "random_norm": [23, 26, 27, 48, 49, 72, 77, 78, 94, 95, 124, 789, 792, 795, 796, 797, 798, 799, 800, 806, 857, 859, 983, 1000, 1001, 1005], "random_uniform": [23, 26, 27, 104, 105, 124, 132, 140, 983, 1076], "relu": [23, 26, 27, 70, 71, 72, 77, 78, 139, 140, 164, 165, 166, 1076], "scaled_dot_product_attent": [23, 26, 27, 72, 77, 78, 789], "scatter_flat": [23, 26, 27, 72, 77, 78, 665], "scatter_nd": [23, 26, 27, 72, 77, 78, 138, 665, 1076], "seed": [23, 26, 27, 72, 75, 76, 77, 78, 983, 1076], "set_default_devic": [23, 26, 27, 72, 77, 78, 132, 327, 375], "set_default_dtyp": [23, 26, 27, 72, 77, 78, 126, 131, 249], "set_default_float_dtyp": [23, 26, 27, 72, 77, 78, 131, 249], "set_default_int_dtyp": [23, 26, 27, 72, 77, 78, 131, 249], "set_min_bas": [23, 26, 27, 72, 77, 78, 665], "set_min_denomin": [23, 26, 27, 72, 77, 78, 665], "set_nestable_mod": [23, 26, 27, 72, 77, 78, 665, 702, 746], "set_queue_timeout": [23, 26, 27, 72, 77, 78, 665], "set_shape_array_mod": [23, 26, 27, 72, 77, 78, 665, 731, 747], "set_split_factor": [23, 26, 27, 72, 77, 78, 327], "set_tmp_dir": [23, 26, 27, 72, 77, 78, 665], "set_with_grad": [23, 26, 27, 72, 77, 78, 750, 788], "shape_array_mod": [23, 26, 27, 72, 77, 78, 665, 728, 747], "shuffl": [23, 26, 27, 75, 76, 983, 1076], "sigmoid": [23, 26, 27, 72, 77, 78, 136, 139, 140, 164, 1076], "size": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 124, 138, 139, 179, 207, 208, 210, 211, 327, 369, 370, 371, 665, 722, 730, 789, 805, 806, 818, 820, 834, 836, 844, 846, 850, 852, 857, 859, 869, 871, 894, 908, 911, 929, 930, 931, 932, 933, 934, 935, 938, 983, 984, 988, 989, 991, 995, 996, 998, 1065, 1066, 1069, 1071, 1074, 1098, 1099, 1100], "product": [23, 26, 27, 40, 41, 130, 377, 585, 586, 588, 665, 683, 789, 804, 805, 806, 812, 814, 830, 833, 844, 846, 863, 865, 869, 871, 1032, 1033, 1036, 1049, 1052, 1098, 1109], "unknown": [23, 26, 27], "model": [23, 26, 27, 139, 140, 1076], "slogdet": [23, 26, 27, 72, 77, 78, 806], "softmax": [23, 26, 27, 70, 71, 72, 77, 78, 164, 789, 804, 805, 1076], "split_factor": [23, 26, 27, 72, 77, 78, 327, 336, 369], "split_func_cal": [23, 26, 27, 72, 77, 78, 327], "stable_divid": [23, 26, 27, 72, 77, 78, 126, 665], "stable_pow": [23, 26, 27, 72, 77, 78, 665], "stop_gradi": [23, 26, 27, 72, 75, 76, 77, 78, 90, 91, 140, 327, 371, 750, 757, 758, 759, 760, 762, 763, 764, 765, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 955, 956, 957, 958, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "supports_inplac": [23, 26, 27, 72, 77, 78, 665], "tmp_dir": [23, 26, 27, 72, 77, 78, 665], "to_devic": [23, 26, 27, 75, 76, 327, 346], "to_ivy_shap": [23, 26, 27, 72, 77, 78, 665], "to_list": [23, 26, 27, 75, 76, 665, 1076], "to_native_arrays_and_back": [23, 26, 27, 72, 77, 78, 120, 128, 154], "to_native_shap": [23, 26, 27, 72, 77, 78, 665], "to_scalar": [23, 26, 27, 72, 77, 78, 665], "total_mem_on_dev": [23, 26, 27, 72, 77, 78, 132, 327], "tpu_is_avail": [23, 26, 27, 72, 77, 78, 327], "try_else_non": [23, 26, 27, 72, 77, 78, 665], "type_promote_arrai": [23, 26, 27, 72, 77, 78, 249], "unset_default_devic": [23, 26, 27, 72, 77, 78, 327], "unset_default_dtyp": [23, 26, 27, 72, 77, 78, 249], "unset_default_float_dtyp": [23, 26, 27, 72, 77, 78, 249], "unset_default_int_dtyp": [23, 26, 27, 72, 77, 78, 249], "unset_nestable_mod": [23, 26, 27, 72, 77, 78, 665], "unset_shape_array_mod": [23, 26, 27, 72, 77, 78, 665], "unset_with_grad": [23, 26, 27, 72, 77, 78, 750], "unstack": [23, 26, 27, 75, 76, 130, 136, 139, 665, 1076], "used_mem_on_dev": [23, 26, 27, 72, 77, 78, 327], "valid_dtyp": [23, 26, 27, 72, 77, 78, 249], "value_is_nan": [23, 26, 27, 72, 77, 78, 665], "variable_data": [23, 26, 27, 72, 77, 78, 750], "with_grad": [23, 26, 27, 72, 77, 78, 750, 783], "abc": [24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 138, 327, 336, 342, 665, 690, 959, 976, 1110, 1111, 1114, 1118], "softplu": [24, 25, 73, 74, 164, 174, 1076], "collect": [29, 75, 76, 124, 152, 164, 176, 327, 665, 750, 789, 878, 959, 972, 977, 983, 1084, 1098, 1112, 1114], "args_to_ivi": 29, "include_deriv": [29, 30, 31, 32, 33, 959, 961, 971], "keyword": [29, 30, 31, 72, 75, 76, 77, 78, 79, 119, 120, 124, 125, 131, 132, 133, 139, 179, 213, 216, 327, 336, 337, 351, 355, 359, 665, 672, 716, 959, 965, 1032, 1057, 1060, 1110, 1111], "nest": [29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 119, 124, 126, 129, 130, 138, 139, 140, 153, 327, 351, 355, 359, 665, 737, 750, 788, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "unchang": [29, 30, 31, 32, 33], "posit": [29, 30, 31, 40, 41, 50, 51, 54, 55, 86, 87, 96, 97, 100, 101, 120, 124, 125, 139, 152, 178, 179, 193, 194, 249, 285, 288, 327, 351, 355, 359, 377, 378, 381, 513, 516, 518, 519, 520, 521, 522, 585, 588, 604, 610, 613, 665, 692, 806, 807, 808, 809, 810, 811, 894, 908, 911, 929, 930, 931, 932, 933, 983, 993, 995, 998, 1065, 1066, 1069, 1071, 1074, 1087, 1088], "deriv": [29, 30, 31, 32, 33, 34, 35, 44, 45, 90, 91, 131, 132, 138, 140, 179, 188, 189, 191, 202, 203, 205, 226, 227, 229, 244, 246, 248, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 959, 961, 971, 1110, 1114, 1118, 1120], "tupl": [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 124, 125, 130, 131, 132, 134, 138, 139, 140, 153, 170, 172, 174, 179, 183, 184, 185, 218, 221, 249, 265, 268, 270, 272, 274, 290, 291, 322, 327, 346, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 692, 694, 696, 698, 739, 740, 742, 766, 768, 770, 789, 792, 795, 796, 797, 798, 799, 800, 803, 806, 807, 809, 811, 838, 840, 847, 849, 857, 858, 859, 863, 865, 872, 874, 879, 881, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 899, 900, 903, 904, 907, 912, 915, 916, 919, 929, 930, 931, 932, 933, 935, 938, 939, 942, 951, 954, 955, 956, 957, 958, 959, 961, 962, 964, 966, 967, 968, 970, 971, 973, 974, 975, 976, 978, 980, 982, 995, 998, 1000, 1006, 1007, 1009, 1010, 1011, 1015, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "kei": [29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 124, 130, 134, 139, 170, 172, 174, 270, 272, 274, 327, 339, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 671, 681, 694, 696, 698, 739, 740, 742, 766, 768, 770, 789, 804, 805, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 955, 956, 957, 959, 962, 968, 972, 978, 980, 982, 985, 987, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075, 1087, 1088, 1098, 1109, 1114, 1118], "word": [29, 30, 31, 130, 179, 180, 181, 983, 989, 991, 1087, 1088], "args_to_n": [29, 133, 138], "to_ivi": [29, 75, 76, 138, 959, 972], "leaf": [29, 32, 33, 75, 76, 126, 130, 139, 959, 960, 969, 970], "union": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 126, 129, 130, 131, 132, 133, 134, 136, 141, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 223, 224, 226, 227, 229, 231, 235, 236, 240, 241, 243, 244, 246, 248, 249, 253, 254, 255, 258, 260, 263, 265, 268, 270, 272, 274, 275, 276, 277, 278, 279, 282, 284, 285, 288, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 317, 319, 320, 321, 322, 326, 327, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 360, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 673, 674, 677, 678, 680, 683, 684, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 703, 705, 706, 708, 709, 710, 719, 722, 723, 730, 736, 737, 738, 739, 740, 742, 743, 744, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 766, 768, 769, 770, 771, 773, 775, 777, 779, 781, 784, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 806, 807, 809, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 970, 971, 976, 977, 978, 980, 981, 983, 984, 985, 986, 987, 988, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1007, 1009, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "nativearrai": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 119, 120, 122, 126, 129, 130, 133, 134, 136, 138, 141, 154, 162, 164, 165, 166, 167, 168, 169, 170, 173, 175, 179, 180, 181, 183, 185, 188, 191, 202, 205, 207, 208, 210, 211, 213, 216, 218, 219, 221, 226, 229, 231, 235, 236, 240, 244, 248, 249, 255, 258, 260, 263, 265, 268, 270, 273, 279, 282, 285, 288, 292, 295, 298, 301, 303, 306, 308, 311, 314, 317, 322, 327, 346, 347, 349, 365, 371, 372, 377, 378, 381, 382, 383, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 461, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 486, 487, 488, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 546, 547, 548, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 623, 624, 625, 628, 630, 633, 635, 638, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 654, 655, 659, 660, 661, 664, 665, 666, 667, 669, 673, 674, 677, 678, 680, 682, 683, 684, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 703, 705, 706, 708, 709, 710, 719, 722, 723, 730, 737, 739, 740, 743, 744, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 766, 769, 770, 771, 773, 775, 777, 779, 781, 784, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 806, 807, 810, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 925, 928, 929, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 959, 961, 962, 971, 976, 977, 978, 981, 983, 984, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1005, 1006, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1069, 1070, 1071, 1074, 1075], "travers": [29, 32, 33, 75, 76, 130, 136, 138, 959, 971], "lowest": [29, 32, 33, 75, 76, 104, 105, 126, 153, 959, 971, 983, 985, 986, 987], "leav": [29, 32, 33, 72, 75, 76, 77, 78, 120, 121, 122, 124, 126, 130, 131, 133, 139, 140, 894, 939, 942, 959, 960, 961, 969, 970, 971], "to_n": [29, 75, 76], "item": [29, 33, 70, 71, 75, 76, 131, 136, 138, 139, 141, 249, 276, 327, 336, 337, 339, 346, 348, 350, 352, 354, 358, 665, 681, 704, 732, 733, 959, 964, 965, 966, 967, 971, 975, 976, 1076, 1110, 1111], "asarrai": [34, 35, 72, 77, 78, 124, 133, 179, 789, 790, 1000, 1006, 1010], "nativedtyp": [34, 35, 119, 120, 131, 132, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 218, 219, 221, 223, 224, 226, 227, 229, 241, 243, 244, 246, 248, 249, 254, 255, 258, 277, 278, 279, 282, 313, 326, 1032, 1057, 1060], "datatyp": [34, 35, 75, 76, 82, 83, 179, 183, 184, 185, 218, 219, 221, 249, 275, 313], "nativedevic": [34, 35, 104, 105, 119, 120, 131, 132, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 218, 219, 221, 223, 224, 226, 227, 229, 241, 243, 244, 246, 248, 327, 344, 345, 346, 360, 366, 368, 369, 370, 372, 373, 376, 665, 719, 983, 984, 985, 986, 987, 988, 989, 991], "interpret": [34, 35, 179, 183, 184, 185, 218, 219, 221], "empty_lik": [34, 35, 80, 81, 179], "uniniti": [34, 35, 179, 187, 188, 189, 191], "from_dlpack": [34, 35, 80, 81, 179], "full_lik": [34, 35, 80, 81, 179], "fill_valu": [34, 35, 80, 81, 131, 179, 201, 202, 203, 204, 205, 206, 377, 508, 511, 533, 536], "float": [34, 35, 40, 41, 44, 45, 50, 51, 52, 53, 56, 57, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 120, 121, 124, 126, 130, 131, 133, 138, 140, 164, 166, 178, 179, 180, 181, 187, 193, 194, 201, 202, 203, 205, 207, 208, 210, 211, 223, 224, 241, 243, 249, 255, 258, 277, 285, 288, 303, 306, 314, 317, 327, 360, 366, 369, 370, 373, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 448, 451, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 476, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 496, 498, 501, 503, 506, 508, 511, 528, 531, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 664, 665, 677, 678, 680, 692, 700, 701, 724, 725, 732, 733, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 792, 796, 799, 805, 806, 807, 808, 809, 810, 811, 815, 817, 821, 823, 824, 826, 827, 829, 838, 840, 847, 849, 850, 852, 854, 856, 857, 859, 872, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 955, 956, 957, 958, 977, 978, 979, 980, 981, 983, 988, 989, 991, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "scalar": [34, 35, 131, 136, 141, 153, 179, 202, 203, 205, 665, 719, 744, 749, 806, 872, 874], "fill": [34, 35, 75, 76, 104, 105, 179, 187, 201, 202, 203, 205, 223, 224, 226, 227, 229, 241, 243, 244, 246, 248, 983, 985, 986, 987], "meshgrid": [34, 35, 80, 81, 179], "xy": [34, 35, 80, 81, 179, 213, 214, 215, 216, 217], "ones_lik": [34, 35, 80, 81, 141, 179, 1076], "tril": [34, 35, 80, 81, 179], "k": [34, 35, 80, 81, 118, 125, 136, 179, 193, 194, 195, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 665, 673, 789, 805, 806, 830, 833, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 983, 988, 989, 991, 995, 998], "n": [34, 35, 68, 69, 114, 115, 118, 124, 179, 213, 216, 231, 233, 235, 236, 238, 240, 665, 674, 789, 801, 806, 818, 820, 830, 833, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 857, 859, 860, 862, 866, 868, 869, 871, 872, 874, 875, 877, 894, 904, 907, 908, 911, 916, 919, 939, 942, 951, 954, 983, 988, 989, 991, 995, 998, 1032, 1041, 1044, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "whose": [34, 35, 40, 41, 50, 51, 54, 55, 62, 63, 86, 87, 96, 97, 100, 101, 108, 109, 121, 124, 179, 231, 233, 235, 236, 238, 240, 377, 388, 389, 390, 391, 392, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 605, 606, 608, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 665, 676, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 894, 912, 915, 929, 930, 931, 932, 933, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1032, 1033, 1036], "innermost": [34, 35, 50, 51, 96, 97, 179, 231, 233, 235, 236, 238, 240, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 838, 840, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868], "mxn": [34, 35, 179, 231, 233, 235, 236, 238, 240, 806, 818, 820, 838, 840, 841, 843, 847, 849, 850, 852, 860, 862, 866, 868], "matric": [34, 35, 50, 51, 96, 97, 152, 179, 213, 216, 231, 233, 235, 236, 238, 240, 789, 802, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 837, 838, 840, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868], "int": [34, 35, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 68, 69, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 122, 125, 126, 130, 131, 132, 133, 134, 141, 164, 169, 176, 177, 179, 193, 194, 201, 202, 205, 207, 208, 210, 211, 231, 233, 235, 236, 238, 240, 249, 265, 268, 278, 284, 285, 288, 292, 295, 308, 311, 327, 349, 352, 353, 354, 355, 363, 364, 365, 371, 372, 377, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 665, 671, 683, 684, 687, 688, 689, 692, 693, 703, 719, 722, 748, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 806, 807, 809, 811, 812, 814, 818, 820, 863, 865, 866, 868, 869, 871, 872, 874, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 900, 903, 904, 907, 908, 911, 912, 915, 916, 919, 920, 923, 929, 930, 931, 932, 933, 934, 935, 938, 939, 942, 943, 946, 947, 950, 951, 954, 955, 956, 957, 958, 959, 962, 971, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 993, 995, 996, 997, 1021, 1022, 1025, 1027, 1030, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "diagon": [34, 35, 50, 51, 72, 77, 78, 179, 193, 194, 231, 233, 235, 236, 238, 240, 806, 866, 868], "triangular": [34, 35, 50, 51, 96, 97, 179, 231, 233, 235, 236, 238, 240, 806, 807, 808, 809, 810, 811, 850, 852], "triu": [34, 35, 80, 81, 179], "upper": [34, 35, 50, 51, 75, 76, 96, 97, 124, 179, 193, 194, 236, 238, 240, 806, 807, 808, 809, 810, 811, 850, 852, 983, 989, 991], "zeros_lik": [34, 35, 80, 81, 125, 179, 789, 796, 799, 894, 895, 898, 1076], "creation": [35, 72, 75, 76, 77, 78, 79, 81, 119, 124, 131, 132, 136, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 218, 221, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248], "data_typ": [36, 37, 82, 83, 119, 124, 131, 249, 253, 254, 255, 258, 260, 263, 265, 268, 270, 273, 275, 276, 277, 278, 279, 282, 284, 285, 288, 290, 291, 292, 295, 297, 298, 301, 303, 306, 308, 311, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326], "astyp": [36, 37, 48, 49, 82, 83, 94, 95, 125, 131, 133, 249, 796, 797, 798, 800], "broadcast_arrai": [36, 37, 82, 83, 249], "broadcast_to": [36, 37, 82, 83, 131, 249], "can_cast": [36, 37, 82, 83, 126, 131, 249, 274, 285, 288], "cast": [36, 37, 82, 83, 125, 126, 131, 249, 255, 258, 270, 271, 272, 273, 274, 894, 900, 903, 1032, 1049, 1052, 1057, 1060, 1076], "occur": [36, 37, 62, 63, 82, 83, 108, 109, 249, 270, 271, 272, 273, 274, 995, 996, 997, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020], "rule": [36, 37, 50, 51, 82, 83, 96, 97, 122, 124, 126, 129, 130, 131, 134, 249, 255, 258, 270, 271, 272, 273, 274, 314, 317, 377, 418, 421, 443, 446, 468, 471, 585, 588, 610, 613, 806, 807, 808, 809, 810, 811, 812, 814, 844, 846, 854, 856], "float32": [36, 37, 48, 49, 82, 83, 88, 89, 94, 95, 122, 124, 131, 179, 244, 248, 249, 253, 254, 270, 271, 272, 274, 279, 282, 285, 288, 308, 311, 326, 665, 739, 740, 743, 796, 797, 798, 800], "float64": [36, 37, 124, 131, 249, 255, 258, 270, 271, 273, 285, 288, 308, 311, 326], "as_n": [36, 37, 82, 83, 131, 249, 276, 277, 278, 279, 280, 281, 282, 283, 327, 346, 347, 368], "finfo": [36, 37, 82, 83, 249], "iinfo": [36, 37, 82, 83, 134, 249], "is_bool_dtyp": [36, 37, 82, 83, 249], "is_float_dtyp": [36, 37, 82, 83, 249], "is_int_dtyp": [36, 37, 82, 83, 249, 665, 744], "result_typ": [36, 37, 82, 83, 131, 249], "arrays_and_dtyp": [36, 37, 82, 83, 249, 314, 315, 316, 317, 318], "ab": [40, 41, 86, 87, 124, 128, 377, 382, 605, 608, 806, 872, 874, 1076], "aco": [40, 41, 86, 87, 377, 387, 1076], "real": [40, 41, 86, 87, 377, 383, 384, 385, 387, 388, 389, 398, 399, 400, 402, 408, 409, 410, 412, 413, 414, 415, 417, 468, 469, 470, 472, 483, 485, 487, 488, 490, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 578, 579, 585, 586, 587, 589, 605, 606, 607, 609, 610, 611, 612, 614, 635, 636, 637, 639, 640, 641, 642, 644, 645, 647, 655, 656, 657, 658, 659, 660, 661, 662, 663], "invers": [40, 41, 86, 87, 138, 152, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 806, 827, 829, 847, 849], "cosin": [40, 41, 86, 87, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "acosh": [40, 41, 86, 87, 249, 290, 291, 377, 1076], "hyperbol": [40, 41, 86, 87, 164, 175, 377, 388, 389, 390, 391, 392, 403, 404, 405, 406, 407, 418, 419, 420, 421, 422, 463, 464, 465, 466, 467, 630, 631, 632, 633, 634, 655, 656, 657, 658, 659], "x2": [40, 41, 42, 43, 50, 51, 75, 76, 86, 87, 88, 89, 96, 97, 120, 122, 125, 179, 244, 248, 249, 322, 327, 365, 377, 393, 394, 395, 396, 397, 413, 414, 415, 416, 417, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 645, 646, 647, 648, 649, 665, 666, 667, 668, 669, 670, 789, 794, 806, 812, 813, 814, 830, 831, 832, 833, 844, 845, 846, 854, 855, 856, 863, 864, 865, 869, 870, 871, 995, 999], "asin": [40, 41, 86, 87, 377, 402, 1076], "sine": [40, 41, 86, 87, 377, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634], "asinh": [40, 41, 86, 87, 377, 407, 1076], "881": [40, 41, 86, 87, 164, 168, 377, 403, 404, 405, 406], "82": [40, 41, 403, 404], "atan": [40, 41, 86, 87, 377, 412, 1076], "tangent": [40, 41, 86, 87, 121, 164, 175, 377, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659], "atan2": [40, 41, 86, 87, 377, 417, 1076], "coordin": [40, 41, 86, 87, 179, 213, 216, 377, 413, 414, 415, 416, 417], "quotient": [40, 41, 86, 87, 377, 413, 414, 415, 416, 417], "atanh": [40, 41, 86, 87, 377, 422, 1076], "bitwise_and": [40, 41, 86, 87, 377, 427], "integ": [40, 41, 68, 69, 75, 76, 86, 87, 104, 105, 114, 115, 124, 130, 131, 138, 179, 180, 181, 201, 249, 292, 295, 308, 311, 314, 317, 377, 378, 381, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 493, 496, 498, 501, 578, 581, 605, 608, 610, 613, 615, 618, 660, 664, 806, 837, 869, 871, 872, 874, 894, 934, 983, 985, 986, 987, 993, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "bitwise_invert": [40, 41, 86, 87, 377, 432], "bitiwse_invert": [40, 41, 428, 429], "bitwise_left_shift": [40, 41, 86, 87, 377, 437], "bitwise_or": [40, 41, 86, 87, 377, 442], "bitwise_right_shift": [40, 41, 86, 87, 377, 447], "bitwise_xor": [40, 41, 86, 87, 377, 452], "ceil": [40, 41, 86, 87, 179, 180, 181, 377, 457, 1076], "express": [40, 41, 86, 87, 121, 134, 136, 141, 377, 383, 386, 398, 401, 408, 411, 413, 416, 458, 459, 460, 461, 462, 625, 626, 627, 628, 629, 650, 651, 652, 653, 654], "radian": [40, 41, 86, 87, 121, 377, 383, 386, 398, 401, 408, 411, 413, 416, 458, 459, 460, 461, 462, 625, 626, 627, 628, 629, 650, 651, 652, 653, 654], "54": [40, 41, 86, 87, 102, 103, 122, 377, 458, 459, 460, 461, 462, 463, 466, 635, 638, 789, 805, 806, 844, 846, 978, 980, 982, 983, 988, 1032, 1033, 1036], "416": [40, 41, 377, 458, 459, 461], "99": [40, 41, 377, 403, 406, 458, 459, 1032, 1033, 1036], "cosh": [40, 41, 86, 87, 377, 388, 392, 467, 1076], "angl": [40, 41, 86, 87, 152, 377, 413, 416, 463, 464, 465, 466, 467, 630, 631, 632, 633, 634, 655, 656, 657, 658, 659], "divid": [40, 41, 75, 76, 86, 87, 122, 129, 377, 472, 498, 501, 665, 732, 894, 934], "dividend": [40, 41, 86, 87, 377, 468, 469, 470, 471, 472, 498, 499, 500, 502, 610, 611, 613], "divisor": [40, 41, 44, 45, 86, 87, 90, 91, 377, 468, 469, 470, 471, 472, 498, 499, 500, 502, 503, 505, 507, 610, 611, 613, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1032, 1053, 1056, 1061, 1064, 1114, 1115, 1116], "erf": [40, 41, 86, 87, 377, 482], "exponenti": [40, 41, 86, 87, 377, 478, 479, 480, 481, 482, 483, 484, 486, 558, 561, 605, 606, 608], "gauss": [40, 41, 86, 87, 377, 478, 479, 480, 481, 482], "exp": [40, 41, 86, 87, 377, 487, 488, 491, 558, 561, 1076], "evalu": [40, 41, 75, 76, 86, 87, 130, 377, 483, 484, 485, 486, 487, 488, 490, 491, 492, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 568, 570, 572, 590, 591, 592, 593, 594, 600, 601, 602, 604, 620, 621, 622, 623, 624, 640, 643, 959, 960, 969, 970, 1065, 1066, 1069, 1071, 1074], "expm1": [40, 41, 86, 87, 377, 492], "244": [40, 41, 488, 489], "918": [40, 41, 488, 489], "48": [40, 41, 164, 166, 377, 488, 489, 635, 638, 750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "147": [40, 41, 164, 169, 377, 488, 489, 491], "floor": [40, 41, 86, 87, 377, 443, 446, 497, 665, 691, 1076], "floor_divid": [40, 41, 86, 87, 377, 502], "greater": [40, 41, 75, 76, 86, 87, 377, 383, 386, 398, 401, 413, 416, 433, 436, 443, 446, 493, 496, 498, 501, 507, 605, 608, 610, 613, 620, 623, 660, 664, 806, 812, 814, 894, 935, 938, 983, 989, 991], "greater_equ": [40, 41, 86, 87, 377, 512, 558, 560, 562], "isfinit": [40, 41, 86, 87, 124, 377, 517], "out_i": [40, 41, 86, 87, 377, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "self_i": [40, 41, 86, 87, 513, 514, 515, 518, 519, 520, 523, 524, 525], "finit": [40, 41, 86, 87, 377, 393, 396, 413, 416, 513, 514, 515, 516, 517, 585, 588, 605, 608, 610, 613], "isinf": [40, 41, 86, 87, 377, 522], "neg": [40, 41, 54, 55, 68, 69, 86, 87, 100, 101, 114, 115, 126, 130, 133, 164, 166, 179, 180, 181, 193, 194, 377, 513, 516, 518, 519, 520, 521, 522, 585, 588, 594, 605, 608, 610, 613, 806, 857, 859, 869, 871, 872, 874, 894, 912, 915, 929, 930, 931, 932, 933, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "infin": [40, 41, 86, 87, 121, 178, 249, 255, 258, 377, 378, 381, 388, 391, 393, 396, 403, 406, 408, 411, 413, 416, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 498, 501, 513, 516, 518, 519, 520, 521, 522, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 806, 872, 874, 1032, 1037, 1040, 1045, 1048, 1065, 1066, 1069, 1071, 1074], "isnan": [40, 41, 86, 87, 377, 527], "nan": [40, 41, 75, 76, 86, 87, 119, 121, 124, 178, 249, 255, 258, 377, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 513, 516, 523, 524, 525, 526, 527, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 665, 705, 749, 789, 805, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1069, 1071, 1074], "less_equ": [40, 41, 86, 87, 377, 537], "log10": [40, 41, 86, 87, 377, 547], "logarithm": [40, 41, 86, 87, 377, 483, 486, 538, 541, 543, 544, 545, 546, 547, 548, 551, 553, 554, 555, 556, 557, 558, 561, 806, 853], "log1p": [40, 41, 86, 87, 377, 552], "log2": [40, 41, 86, 87, 377, 557], "logaddexp": [40, 41, 86, 87, 377], "logical_and": [40, 41, 86, 87, 377, 567, 1076], "logical_not": [40, 41, 86, 87, 377, 572, 1076], "logical_or": [40, 41, 86, 87, 377, 577, 1076], "logical_xor": [40, 41, 86, 87, 377, 582], "multipli": [40, 41, 86, 87, 122, 127, 129, 377, 589, 665, 683], "not_equ": [40, 41, 86, 87, 377, 599], "pow": [40, 41, 86, 87, 377, 609], "expon": [40, 41, 377, 605, 606, 608, 665, 733], "remaind": [40, 41, 75, 76, 86, 87, 377, 614, 665, 691, 894, 934], "respect": [40, 41, 44, 45, 86, 87, 90, 91, 120, 122, 124, 129, 130, 131, 134, 179, 213, 216, 377, 378, 381, 393, 396, 413, 416, 423, 426, 433, 436, 438, 441, 443, 446, 448, 451, 468, 471, 473, 476, 498, 501, 503, 506, 508, 511, 528, 531, 533, 536, 558, 561, 563, 566, 573, 576, 578, 581, 585, 588, 595, 598, 610, 611, 612, 613, 614, 645, 649, 750, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 771, 773, 775, 777, 779, 781, 806, 850, 852, 955, 956, 957, 958], "x2_i": [40, 41, 86, 87, 377, 393, 396, 413, 416, 423, 426, 433, 436, 438, 441, 443, 446, 448, 451, 468, 471, 473, 476, 498, 501, 503, 506, 508, 511, 528, 531, 533, 536, 558, 561, 563, 566, 573, 576, 578, 581, 585, 588, 595, 598, 605, 608, 610, 611, 612, 613, 614, 645, 649], "x1": [40, 41, 42, 43, 86, 87, 88, 89, 120, 122, 125, 179, 244, 248, 249, 279, 282, 322, 327, 365, 377, 393, 396, 397, 413, 416, 417, 423, 426, 427, 433, 436, 437, 438, 441, 442, 443, 446, 447, 448, 451, 452, 468, 471, 472, 473, 475, 476, 477, 498, 500, 501, 502, 503, 506, 507, 508, 511, 512, 528, 531, 532, 533, 536, 537, 558, 561, 562, 563, 566, 567, 573, 576, 577, 578, 581, 582, 583, 584, 585, 588, 589, 595, 598, 599, 605, 608, 609, 610, 611, 612, 613, 614, 645, 646, 649, 665, 666, 667, 668, 669, 670, 673, 789, 794, 806, 812, 814, 830, 833, 844, 846, 854, 856, 863, 865, 869, 871, 995, 999], "11": [40, 41, 44, 45, 72, 77, 78, 86, 87, 100, 101, 104, 105, 122, 124, 130, 377, 393, 395, 396, 397, 423, 426, 488, 490, 610, 611, 613, 615, 618, 665, 683, 693, 752, 753, 806, 818, 820, 844, 846, 878, 889, 892, 894, 912, 915, 935, 937, 959, 976, 983, 985, 986, 987, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036], "18": [40, 41, 86, 87, 122, 130, 377, 448, 451, 610, 611, 630, 631, 632, 633, 634, 806, 818, 820, 844, 846, 1032, 1033, 1036], "94": [40, 41, 86, 87, 403, 407, 620, 621], "256": [40, 41, 620, 621, 789, 795], "0001": [40, 41, 620, 621, 1114, 1115, 1116], "36": [40, 41, 620, 621, 806, 844, 846, 1032, 1033, 1036], "67": [40, 41, 86, 87, 130, 377, 448, 451, 463, 466, 620, 621, 630, 632, 634], "45": [40, 41, 124, 620, 621, 750, 752, 755, 806, 844, 846, 894, 934, 977, 978, 981, 1032, 1033, 1036], "24": [40, 41, 102, 103, 377, 448, 451, 620, 621, 635, 638, 665, 683, 750, 752, 755, 806, 818, 820, 844, 846, 977, 978, 980, 981, 982, 1032, 1033, 1036], "678": [40, 41, 620, 621], "32": [40, 41, 44, 45, 124, 139, 164, 166, 377, 448, 451, 620, 621, 752, 753, 789, 792, 795, 796, 799, 806, 844, 846, 995, 999, 1032, 1033, 1036], "sin": [40, 41, 86, 87, 129, 136, 377, 629, 665, 692, 1076], "841": [40, 41, 86, 87, 377, 625, 626, 627, 628, 629], "909": [40, 41, 86, 87, 377, 625, 626, 627, 628, 629], "141": [40, 41, 86, 87, 377, 625, 626, 627, 628, 629], "sinh": [40, 41, 86, 87, 377, 634, 1076], "63": [40, 41, 44, 45, 86, 87, 96, 97, 377, 630, 631, 632, 633, 634, 635, 638, 752, 753, 806, 807, 809, 810, 811, 844, 846, 1032, 1033, 1036], "23": [40, 41, 86, 87, 377, 448, 451, 610, 613, 620, 623, 630, 631, 632, 633, 634, 789, 795, 806, 818, 820, 995, 999], "232": [40, 41, 86, 87, 377, 630, 631, 632, 633, 634], "51": [40, 41, 377, 448, 451, 630, 631, 633], "sqrt": [40, 41, 86, 87, 377, 639, 806, 872, 874], "squar": [40, 41, 50, 51, 86, 87, 96, 97, 124, 377, 635, 636, 637, 638, 639, 644, 789, 792, 806, 807, 808, 809, 810, 811, 815, 817, 821, 823, 824, 826, 827, 829, 837, 853, 854, 856, 857, 859], "subtract": [40, 41, 86, 87, 122, 129, 377, 646], "tan": [40, 41, 86, 87, 120, 121, 125, 126, 130, 133, 136, 377, 398, 401, 403, 406, 651, 806, 818, 820, 1000, 1001, 1005, 1021, 1022, 1025, 1076], "56": [40, 41, 86, 87, 122, 377, 635, 638, 650, 651, 652, 653, 654, 750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "19": [40, 41, 86, 87, 122, 377, 403, 405, 407, 448, 451, 650, 651, 652, 653, 654, 806, 818, 820], "tanh": [40, 41, 86, 87, 136, 164, 377, 656, 1076], "762": [40, 41, 86, 87, 164, 175, 377, 655, 657, 658, 659], "964": [40, 41, 86, 87, 164, 175, 377, 655, 657, 658, 659], "trunc": [40, 41, 86, 87, 377, 661], "elementwis": [41, 75, 76, 87, 119, 126, 136, 141, 378, 381, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 584, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 649, 650, 654, 655, 659, 660, 664], "all_equ": [42, 43, 88, 89, 665, 670], "equality_matrix": [42, 43, 88, 89, 665, 666, 667, 668, 669, 670], "compar": [42, 43, 75, 76, 88, 89, 124, 134, 139, 665, 666, 667, 668, 669, 670, 673, 674, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1021, 1022, 1025, 1027, 1030], "matrix": [42, 43, 50, 51, 75, 76, 88, 89, 96, 97, 179, 213, 216, 231, 235, 236, 240, 665, 666, 667, 668, 669, 670, 677, 789, 802, 806, 807, 808, 809, 810, 811, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 837, 838, 840, 841, 843, 847, 849, 850, 852, 854, 856, 857, 859, 860, 862, 866, 868, 875, 877, 1098, 1108], "gather_nd": [42, 43, 75, 76, 88, 89, 665, 698, 1076], "cuda": [42, 43, 75, 76, 88, 89, 104, 105, 136, 139, 153, 179, 207, 208, 210, 211, 327, 336, 343, 368, 369, 665, 693, 694, 695, 696, 697, 698, 719, 722, 723, 983, 984, 985, 986, 987, 989, 991, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1121], "to_numpi": [42, 43, 75, 76, 88, 89, 139, 665, 740, 1076], "adam_step": [44, 45, 90, 91, 750, 756], "mw": [44, 45, 90, 91, 140, 750, 752, 753, 754, 755, 756, 757, 759], "vw": [44, 45, 90, 91, 140, 750, 752, 753, 754, 755, 756, 757, 759], "beta1": [44, 45, 90, 91, 140, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 1114, 1115, 1116], "beta2": [44, 45, 90, 91, 140, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 1114, 1115, 1116], "999": [44, 45, 86, 87, 90, 91, 140, 377, 655, 656, 658, 659, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 1114, 1115, 1116], "epsilon": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 806, 838, 840, 847, 849, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 977, 978, 979, 980, 981, 982, 1112, 1113, 1114, 1115, 1116], "1e": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 141, 249, 285, 288, 665, 701, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 806, 857, 859, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 977, 978, 979, 980, 981, 982, 1076, 1114, 1115, 1116, 1117, 1119], "07": [44, 45, 52, 53, 90, 91, 98, 99, 140, 377, 620, 623, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1114, 1115, 1116], "cost": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 955, 956, 957, 958], "weight": [44, 45, 90, 91, 126, 130, 140, 141, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 789, 802, 803, 805, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1110, 1111, 1114, 1116, 1117], "ws": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "dc": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "dw": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "w": [44, 45, 48, 49, 75, 76, 90, 91, 94, 95, 136, 139, 140, 665, 674, 750, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 771, 773, 774, 775, 777, 778, 779, 781, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "averag": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 955, 956, 957], "moment": [44, 45, 90, 91, 127, 153, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1114, 1115, 1116], "forget": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1114, 1115, 1116], "dure": [44, 45, 75, 76, 90, 91, 126, 130, 131, 132, 133, 153, 176, 177, 327, 372, 665, 745, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 806, 830, 833, 955, 956, 957, 958, 1032, 1053, 1056, 1061, 1064, 1110, 1111, 1114, 1115, 1116, 1118], "adam": [44, 45, 90, 91, 139, 140, 141, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1076, 1114, 1116], "divis": [44, 45, 90, 91, 126, 377, 443, 446, 468, 471, 498, 501, 610, 613, 665, 691, 701, 725, 732, 733, 750, 752, 753, 754, 755, 756, 757, 759, 771, 773, 1114, 1115, 1116], "delta": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756], "dcdw": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 771, 772, 773, 774, 775, 776, 777, 778], "adam_step_delta": [44, 45, 90, 91, 750, 752, 753, 754, 755, 756], "639": [44, 45, 750, 752, 753, 755], "00121": [44, 45, 752, 753], "0102": [44, 45, 752, 753], "0397": [44, 45, 752, 753], "exclus": [44, 45, 75, 76, 90, 91, 124, 126, 130, 141, 179, 180, 181, 665, 683, 712, 713, 715, 750, 766, 767, 768, 769, 770, 983, 985, 986], "is_var": [44, 45, 90, 91, 750, 766, 767, 768, 769, 770], "gradient": [45, 75, 76, 91, 119, 130, 139, 140, 152, 153, 327, 371, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 766, 769, 771, 773, 775, 777, 779, 781, 783, 784, 785, 786, 787, 788, 955, 956, 957, 958, 1076, 1114, 1115, 1116, 1117, 1118, 1119], "depthwise_conv2d": [48, 49, 94, 95, 789, 800, 1076], "stride": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "pad": [48, 49, 94, 95, 665, 692, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 894, 904, 907, 951, 954, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "data_format": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "nhwc": [48, 49, 94, 95, 789, 792, 793, 796, 797, 798, 799, 800, 1098, 1101, 1102, 1105], "dilat": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "batch_siz": [48, 49, 94, 95, 139, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 983, 984], "h": [48, 49, 94, 95, 118, 130, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 959, 962], "convolut": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "fh": [48, 49, 94, 95, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800], "fw": [48, 49, 94, 95, 124, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "d_in": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "slide": [48, 49, 94, 95, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "valid": [48, 49, 68, 69, 94, 95, 114, 115, 124, 125, 131, 136, 249, 275, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 894, 939, 942, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "algorithm": [48, 49, 94, 95, 153, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "nchw": [48, 49, 94, 95, 789, 792, 793, 796, 797, 798, 799, 800, 1098, 1101, 1102, 1105], "255": [48, 49, 94, 95, 796, 797, 798, 800], "128": [48, 49, 94, 95, 789, 795, 796, 797, 798, 800, 806, 844, 846], "linear_algebra": [50, 51, 96, 97, 119, 138, 806, 807, 810, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 834, 836, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 874, 875, 877], "choleski": [50, 51, 96, 97, 806, 811], "symmetr": [50, 51, 96, 97, 130, 806, 807, 808, 809, 810, 811, 821, 823, 824, 826, 875, 877], "u": [50, 51, 96, 97, 806, 807, 808, 809, 810, 811, 857, 859], "625": [50, 51, 806, 807, 808, 810], "25": [50, 51, 52, 53, 102, 103, 130, 377, 630, 633, 635, 638, 640, 643, 806, 807, 808, 810, 818, 820, 827, 829, 878, 884, 885, 887, 977, 978, 980, 981, 982, 1032, 1033, 1036], "cross": [50, 51, 52, 53, 72, 77, 78, 98, 99, 806, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1076], "axi": [50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 75, 76, 80, 81, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 141, 152, 164, 169, 179, 207, 208, 209, 210, 211, 212, 327, 329, 332, 339, 352, 353, 354, 355, 356, 357, 358, 359, 371, 665, 683, 684, 693, 748, 806, 812, 813, 814, 818, 820, 869, 870, 871, 872, 873, 874, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 914, 915, 920, 921, 922, 923, 924, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 947, 950, 951, 954, 983, 994, 995, 996, 997, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "det": [50, 51, 72, 77, 78, 806], "offset": [50, 51, 56, 57, 102, 103, 806, 818, 819, 820, 866, 867, 868, 977, 978, 979, 980, 981, 982], "axis1": [50, 51, 54, 55, 100, 101, 806, 818, 819, 820, 894, 943, 944, 945, 946], "axis2": [50, 51, 806, 818, 819, 820], "eigh": [50, 51, 72, 77, 78, 806], "namedtupl": [50, 51, 62, 63, 108, 109, 806, 821, 822, 823, 850, 851, 852, 857, 859, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015], "eigvalsh": [50, 51, 72, 77, 78, 806], "inv": [50, 51, 72, 77, 78, 138, 806, 1076], "matmul": [50, 51, 96, 97, 119, 124, 127, 136, 806, 857, 859, 1076], "matrix_norm": [50, 51, 75, 76, 806], "ord": [50, 51, 75, 76, 806, 834, 835, 836, 872, 873, 874], "fro": [50, 51, 806, 834, 835, 836], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 112, 113, 114, 115, 134, 665, 748, 806, 834, 835, 836, 872, 873, 874, 995, 996, 997, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "matrix_rank": [50, 51, 72, 77, 78, 806], "rtol": [50, 51, 806, 838, 839, 840, 847, 848, 849], "matrix_transpos": [50, 51, 72, 77, 78, 138, 806], "outer": [50, 51, 72, 77, 78, 806, 955, 956, 957, 958], "pinv": [50, 51, 72, 77, 78, 806, 1076], "qr": [50, 51, 72, 77, 78, 806], "reduc": [50, 51, 68, 69, 75, 76, 114, 115, 138, 327, 371, 665, 688, 806, 850, 851, 852, 995, 996, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "solv": [50, 51, 72, 77, 78, 137, 152, 806], "svd": [50, 51, 72, 77, 78, 806, 1076], "full_matric": [50, 51, 806, 857, 858, 859], "svdval": [50, 51, 72, 77, 78, 806], "tensordot": [50, 51, 72, 77, 78, 806], "trace": [50, 51, 72, 75, 76, 77, 78, 136, 153, 665, 712, 713, 715, 806], "vecdot": [50, 51, 72, 77, 78, 806], "vector_norm": [50, 51, 75, 76, 806], "vector_to_skew_symmetric_matrix": [50, 51, 72, 77, 78, 806, 1076], "binary_cross_entropi": [52, 53, 98, 99, 878, 883], "pred": [52, 53, 98, 99, 126, 130, 133, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "predict": [52, 53, 98, 99, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "amount": [52, 53, 98, 99, 132, 327, 373, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "smooth": [52, 53, 98, 99, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "binari": [52, 53, 98, 99, 377, 423, 426, 438, 441, 448, 451, 578, 581, 878, 879, 880, 881, 882, 883], "entropi": [52, 53, 98, 99, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893], "357": [52, 53, 98, 99, 878, 879, 880, 881, 882, 883, 889, 890, 892, 893], "223": [52, 53, 98, 99, 878, 879, 880, 881, 882, 883, 889, 890, 891, 893], "cross_entropi": [52, 53, 98, 99, 126, 130, 133, 878, 888, 889, 892], "along": [52, 53, 54, 55, 68, 69, 75, 76, 98, 99, 100, 101, 114, 115, 119, 133, 179, 207, 208, 210, 211, 327, 352, 353, 354, 355, 356, 357, 358, 359, 371, 665, 683, 684, 693, 748, 806, 834, 836, 866, 868, 869, 871, 872, 874, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 900, 903, 912, 915, 920, 923, 929, 930, 931, 932, 933, 934, 939, 942, 947, 950, 955, 956, 957, 958, 983, 994, 995, 996, 997, 1021, 1022, 1025, 1027, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "3862944": [52, 53, 878, 884, 885, 887], "sparse_cross_entropi": [52, 53, 98, 99, 878, 893], "logit": [52, 53, 98, 99, 878, 889, 890, 891, 892, 893], "spars": [52, 53, 98, 99, 878, 889, 890, 891, 892, 893], "loss": [53, 99, 119, 126, 139, 140, 141, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1076], "clip": [54, 55, 75, 76, 100, 101, 126, 130, 133, 136, 139, 141, 377, 583, 584, 665, 677, 678, 680, 894, 899, 1076], "x_min": [54, 55, 75, 76, 100, 101, 136, 141, 894, 895, 896, 897, 898, 899], "x_max": [54, 55, 75, 76, 100, 101, 136, 141, 894, 895, 896, 897, 898, 899], "roll": [54, 55, 100, 101, 120, 130, 894, 895, 896, 933], "concat": [54, 55, 75, 76, 100, 101, 125, 327, 356, 357, 358, 359, 371, 665, 692, 894, 1076], "xs": [54, 55, 100, 101, 130, 327, 350, 354, 356, 357, 358, 665, 666, 669, 674, 750, 761, 894, 900, 901, 902, 903], "constant_pad": [54, 55, 100, 101, 894], "pad_width": [54, 55, 100, 101, 894, 904, 905, 906, 907, 951, 952, 953, 954], "expand_dim": [54, 55, 100, 101, 136, 139, 894, 1076], "flip": [54, 55, 100, 101, 138, 139, 141, 377, 428, 431, 894, 1076], "permute_dim": [54, 55, 100, 101, 894], "reshap": [54, 55, 75, 76, 100, 101, 124, 133, 136, 138, 141, 894, 1076], "shift": [54, 55, 100, 101, 120, 122, 377, 433, 436, 443, 446, 894, 929, 930, 931, 932, 933], "larger": [54, 55, 100, 101, 124, 136, 141, 249, 285, 288, 894, 895, 898, 929, 930, 931, 932, 933, 1032, 1053, 1056, 1061, 1064], "flatten": [54, 55, 62, 63, 75, 76, 100, 101, 108, 109, 665, 692, 806, 844, 846, 872, 874, 894, 920, 923, 929, 930, 931, 932, 933, 995, 996, 997, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1016, 1020], "restor": [54, 55, 100, 101, 894, 929, 930, 931, 932, 933], "squeez": [54, 55, 100, 101, 894, 1076], "stack": [54, 55, 75, 76, 100, 101, 136, 179, 231, 235, 236, 240, 806, 815, 817, 818, 820, 821, 823, 824, 826, 827, 829, 830, 833, 837, 838, 840, 841, 843, 847, 849, 850, 852, 857, 859, 860, 862, 866, 868, 894, 959, 960, 969, 970, 1076, 1098, 1107], "swapax": [54, 55, 100, 101, 894], "axis0": [54, 55, 100, 101, 894, 943, 944, 945, 946], "tile": [54, 55, 100, 101, 894, 1076], "rep": [54, 55, 100, 101, 894, 947, 948, 949, 950], "zero_pad": [54, 55, 100, 101, 894, 1076], "layer_norm": [56, 57, 102, 103, 977, 982], "normalized_idx": [56, 57, 102, 103, 977, 978, 979, 980, 981, 982], "05": [56, 57, 102, 103, 124, 327, 750, 752, 755, 977, 978, 979, 980, 981, 982], "scale": [56, 57, 102, 103, 125, 130, 327, 369, 370, 750, 775, 777, 789, 801, 804, 805, 977, 978, 979, 980, 981, 982, 1098, 1106, 1109, 1114, 1117], "new_std": [56, 57, 102, 103, 977, 978, 979, 980, 981, 982, 1112, 1113], "normal": [56, 57, 102, 103, 139, 894, 939, 942, 977, 978, 979, 980, 981, 982, 983, 988, 1112, 1113], "small": [56, 57, 102, 103, 122, 126, 136, 140, 153, 377, 585, 588, 806, 838, 840, 847, 849, 977, 978, 979, 980, 981, 982, 1112, 1113], "constant": [56, 57, 102, 103, 119, 126, 140, 141, 153, 327, 336, 337, 894, 904, 907, 959, 965, 977, 978, 979, 980, 981, 982, 1089, 1090, 1094, 1097, 1110, 1111, 1112, 1113], "denomin": [56, 57, 102, 103, 126, 153, 665, 691, 701, 725, 732, 733, 977, 978, 979, 980, 981, 982, 1112, 1113], "_min_bas": [56, 57, 102, 103, 665, 733, 977, 978, 979, 980, 981, 982, 1112, 1113], "learnabl": [56, 57, 102, 103, 141, 977, 978, 979, 980, 981, 982, 1112, 1113], "gamma": [56, 57, 102, 103, 977, 978, 979, 980, 981, 982], "beta": [56, 57, 102, 103, 977, 978, 979, 980, 981, 982], "after": [56, 57, 75, 76, 102, 103, 122, 124, 125, 130, 131, 135, 249, 322, 327, 377, 635, 638, 750, 757, 759, 761, 762, 764, 771, 773, 775, 777, 779, 781, 977, 978, 979, 980, 981, 982, 1114, 1115, 1116, 1117, 1118, 1119], "0976": [56, 57, 977, 978, 979, 981], "3452": [56, 57, 977, 978, 979, 981], "2740": [56, 57, 977, 978, 979, 981], "1047": [56, 57, 977, 978, 979, 981], "5886": [56, 57, 977, 978, 979, 981], "2732": [56, 57, 977, 978, 979, 981], "7696": [56, 57, 977, 978, 979, 981], "7024": [56, 57, 977, 978, 979, 981], "2518": [56, 57, 977, 978, 979, 981], "001": [56, 57, 139, 140, 249, 285, 288, 377, 620, 623, 750, 752, 755, 977, 978, 979, 981], "576": [56, 57, 977, 978, 979, 981], "292": [56, 57, 977, 978, 979, 981], "33": [56, 57, 86, 87, 403, 405, 806, 844, 846, 959, 976, 977, 978, 979, 981, 1032, 1033, 1036], "581": [56, 57, 750, 752, 755, 977, 978, 979, 981], "891": [56, 57, 164, 168, 977, 978, 979, 981], "01": [56, 57, 141, 377, 615, 618, 620, 623, 977, 978, 979, 981], "579": [56, 57, 977, 978, 979, 981], "931": [56, 57, 977, 978, 979, 981], "norm": [57, 75, 76, 103, 119, 665, 677, 678, 680, 806, 834, 836, 872, 874, 978, 979, 980, 981, 982, 1076, 1113, 1114, 1116], "random": [59, 75, 76, 105, 119, 132, 141, 152, 984, 985, 986, 988, 989, 991, 993, 994, 1076], "unique_al": [62, 63, 108, 109, 1000], "unique_count": [62, 63, 108, 109, 1000, 1007], "count": [62, 63, 68, 69, 108, 109, 114, 115, 122, 139, 327, 365, 806, 869, 871, 894, 912, 915, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "field": [62, 63, 108, 109, 152, 806, 821, 823, 850, 852, 857, 859, 1000, 1001, 1005, 1006, 1007, 1008, 1009, 1010], "uc": [62, 63, 1006, 1008], "unique_invers": [62, 63, 108, 109, 1000], "unique_valu": [62, 63, 108, 109, 1000], "argsort": [64, 65, 110, 111, 1021], "descend": [64, 65, 110, 111, 806, 857, 859, 860, 862, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031], "sort": [65, 72, 75, 76, 77, 78, 79, 111, 119, 806, 821, 823, 857, 859, 860, 862, 1022, 1025], "einsum": [66, 67, 112, 113, 1032], "equat": [66, 67, 112, 113, 806, 854, 856, 1032, 1033, 1034, 1035, 1036], "max": [66, 67, 75, 76, 112, 113, 249, 285, 288, 292, 295, 377, 583, 665, 677, 678, 680, 688, 722, 723, 806, 838, 840, 847, 849, 1032, 1114, 1116], "min": [66, 67, 75, 76, 112, 113, 249, 285, 288, 292, 295, 377, 584, 665, 688, 722, 723, 732, 806, 850, 852, 857, 859, 860, 862, 872, 874, 1032], "prod": [66, 67, 75, 76, 112, 113, 122, 131, 665, 688, 1032], "std": [66, 67, 112, 113, 122, 983, 988, 1000, 1001, 1005, 1032], "var": [66, 67, 112, 113, 116, 117, 122, 136, 955, 956, 957, 1032], "statist": [67, 113, 116, 117, 119, 124, 131, 1033, 1036, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064], "sequenc": [68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 124, 125, 131, 134, 152, 170, 172, 174, 176, 177, 270, 272, 274, 327, 336, 337, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 666, 668, 670, 674, 694, 696, 698, 716, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 894, 895, 897, 899, 929, 931, 933, 934, 939, 942, 978, 980, 982, 983, 985, 986, 987, 1006, 1007, 1009, 1032, 1037, 1040, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1098, 1107, 1112, 1113, 1120, 1121], "logic": [68, 69, 114, 115, 124, 128, 129, 131, 132, 138, 327, 363, 377, 563, 566, 568, 571, 573, 576, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "AND": [68, 69, 114, 115, 377, 423, 426, 563, 566, 1065, 1066, 1067, 1068, 1069, 1070], "reduct": [68, 69, 75, 76, 114, 115, 124, 131, 138, 665, 688, 722, 723, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076], "By": [68, 69, 114, 115, 122, 125, 126, 130, 133, 140, 141, 665, 683, 684, 806, 869, 871, 894, 920, 923, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "interv": [68, 69, 75, 76, 104, 105, 114, 115, 136, 141, 179, 180, 181, 207, 208, 210, 211, 806, 869, 871, 894, 895, 898, 939, 942, 983, 985, 986, 987, 989, 991, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "rank": [68, 69, 114, 115, 179, 213, 216, 665, 748, 806, 812, 814, 838, 840, 850, 852, 854, 856, 866, 868, 869, 871, 872, 874, 894, 904, 907, 908, 911, 939, 942, 951, 954, 995, 998, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "backward": [68, 69, 114, 115, 153, 377, 610, 613, 806, 869, 871, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "invalid": [68, 69, 114, 115, 125, 131, 134, 806, 869, 871, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "except": [68, 69, 75, 76, 114, 115, 121, 129, 133, 134, 138, 153, 249, 265, 268, 665, 675, 686, 710, 745, 806, 847, 849, 894, 900, 903, 939, 942, 995, 998, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "singleton": [68, 69, 114, 115, 806, 872, 874, 894, 935, 938, 995, 997, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "accordingli": [68, 69, 114, 115, 125, 134, 179, 213, 216, 377, 488, 491, 806, 872, 874, 995, 997, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "dimension": [68, 69, 75, 76, 114, 115, 179, 180, 181, 193, 194, 213, 216, 806, 812, 814, 815, 817, 830, 833, 838, 840, 844, 846, 847, 849, 869, 871, 872, 874, 894, 934, 995, 996, 997, 998, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], "non": [68, 69, 114, 115, 122, 130, 131, 136, 176, 177, 249, 255, 258, 297, 377, 568, 571, 573, 576, 789, 792, 806, 815, 817, 838, 840, 857, 859, 863, 865, 869, 871, 872, 874, 995, 996, 997, 998, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1110, 1111, 1114, 1118], "util": [69, 115, 119, 132, 327, 360, 1066, 1069, 1071, 1074], "add_ivy_array_instance_method": 70, "cl": [70, 71, 116, 117], "to_ignor": [70, 71, 116, 117, 959, 970], "loop": [70, 71, 116, 117, 127, 134, 153, 955, 956, 957, 958], "_wrap_funct": [70, 71, 116, 117, 126, 128], "toi": [70, 71, 116, 117], "arrayexampl": [70, 71], "hasattr": [70, 71, 116, 117, 138], "dict_in": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 139, 327, 336, 337, 665, 721, 727], "queue_load_s": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerwithactiv": [72, 73, 77, 78], "containerwithcr": [72, 77, 78, 80], "containerwithdatatyp": [72, 77, 78, 82], "containerwithdevic": [72, 77, 78, 84], "containerwithelementwis": [72, 77, 78, 86, 130], "containerwithgener": [72, 77, 78, 88], "containerwithgradi": [72, 77, 78, 90], "containerwithimag": [72, 77, 78, 92], "containerwithlay": [72, 77, 78, 94], "containerwithlinearalgebra": [72, 77, 78, 96], "containerwithloss": [72, 77, 78, 98], "containerwithnorm": [72, 77, 78, 102], "containerwithrandom": [72, 77, 78, 104], "containerwithsearch": [72, 77, 78, 106], "containerwithset": [72, 77, 78, 108], "containerwithsort": [72, 77, 78, 110], "containerwithstatist": [72, 77, 78, 112], "containerwithutil": [72, 77, 78, 114], "represent": [72, 75, 76, 77, 78, 79, 152, 178, 249, 253, 254, 285, 288, 292, 295, 327, 343, 344, 377, 378, 381, 393, 396, 423, 426, 438, 441, 448, 451, 578, 581, 585, 588, 665, 671, 737], "dictionari": [72, 75, 76, 77, 78, 79, 139, 153, 327, 370], "asynchron": [72, 75, 76, 77, 78, 79], "arriv": [72, 75, 76, 77, 78, 79], "timeout": [72, 75, 76, 77, 78, 79, 327, 336, 337, 665, 721, 727], "length": [72, 75, 76, 77, 78, 79, 124, 134, 139, 179, 180, 181, 213, 216, 806, 857, 859, 860, 862, 894, 925, 928], "whitespac": [72, 75, 76, 77, 78, 79], "indent": [72, 75, 76, 77, 78, 79, 139], "extra": [72, 75, 76, 77, 78, 79, 122, 125, 128, 129, 136, 750, 761], "newlin": [72, 75, 76, 77, 78, 79, 121], "handl": [72, 75, 76, 77, 78, 79, 118, 120, 124, 125, 126, 128, 130, 131, 132, 133, 140, 153, 176, 177, 327, 343, 344, 345, 346, 347, 361, 365, 366, 373, 376, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 1114, 1115, 1116, 1117, 1118, 1119], "color": [72, 75, 76, 77, 78, 79, 1123, 1124], "map": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 126, 130, 139, 152, 153, 170, 172, 174, 270, 272, 274, 327, 336, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 694, 696, 698, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 959, 966, 967, 971, 972, 978, 980, 982, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075, 1098, 1109], "termcolor": [72, 75, 76, 77, 78, 79], "rebuild": [72, 75, 76, 77, 78, 79], "constructor": [72, 75, 76, 77, 78, 79, 131, 132, 138, 665, 672, 1120, 1121], "param": [72, 75, 76, 77, 78, 79, 88, 89, 136, 141, 665, 671, 693, 694, 697, 698], "alphabet": [72, 75, 76, 77, 78, 79], "preserv": [72, 75, 76, 77, 78, 79, 124, 141, 153, 750, 784, 894, 912, 915], "key_chain": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 255, 257, 259, 260, 262, 264, 265, 267, 269, 270, 272, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 678, 679, 694, 696, 698, 739, 740, 742, 757, 758, 760, 762, 763, 765, 766, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 807, 809, 811, 830, 832, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 959, 972, 978, 980, 982, 985, 987, 989, 990, 992, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1022, 1024, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1073, 1075], "to_appli": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 255, 257, 259, 260, 262, 264, 265, 267, 269, 270, 272, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 678, 679, 694, 696, 698, 739, 740, 742, 757, 758, 760, 762, 763, 765, 766, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 807, 809, 811, 830, 832, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 959, 972, 978, 980, 982, 989, 990, 992, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1022, 1024, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1073, 1075], "prune_unappli": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 255, 257, 259, 260, 262, 264, 265, 267, 269, 270, 272, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 678, 679, 694, 696, 698, 739, 740, 742, 757, 758, 760, 762, 763, 765, 766, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 807, 809, 811, 830, 832, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 959, 972, 978, 980, 982, 989, 990, 992, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1022, 1024, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1073, 1075], "map_sequ": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 255, 257, 259, 260, 262, 264, 265, 267, 269, 270, 272, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 678, 679, 694, 696, 698, 739, 740, 742, 757, 758, 760, 762, 763, 765, 766, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 943, 945, 947, 949, 951, 953, 978, 980, 982, 989, 990, 992, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1022, 1024, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1073, 1075], "static_arg_info": [72, 77, 78], "static_arg_nam": [72, 77, 78], "static_argmax": [72, 77, 78], "static_argmin": [72, 77, 78], "static_arrai": [72, 77, 78], "static_array_equ": [72, 77, 78], "static_arrays_equ": [72, 77, 78], "static_as_ivy_dev": [72, 77, 78], "static_as_ivy_dtyp": [72, 77, 78], "static_as_native_dev": [72, 77, 78], "static_as_native_dtyp": [72, 77, 78], "static_assert_supports_inplac": [72, 77, 78], "static_cache_fn": [72, 77, 78], "static_clear_mem_on_dev": [72, 77, 78], "static_clip_matrix_norm": [72, 77, 78], "static_clip_vector_norm": [72, 77, 78], "static_closest_valid_dtyp": [72, 77, 78], "static_concat": [72, 77, 78], "static_constant_pad": [72, 77, 78], "static_container_typ": [72, 77, 78], "static_conv1d": [72, 77, 78], "static_conv1d_transpos": [72, 77, 78], "static_conv2d": [72, 77, 78], "static_conv2d_transpos": [72, 77, 78], "static_conv3d": [72, 77, 78], "static_conv3d_transpos": [72, 77, 78], "static_copy_arrai": [72, 77, 78], "static_cross": [72, 77, 78], "static_cumprod": [72, 77, 78], "static_cumsum": [72, 77, 78], "static_current_backend": [72, 77, 78], "static_current_backend_str": [72, 77, 78], "static_default": [72, 77, 78], "static_default_devic": [72, 77, 78], "static_default_dtyp": [72, 77, 78], "static_default_float_dtyp": [72, 77, 78], "static_default_int_dtyp": [72, 77, 78], "static_det": [72, 77, 78], "static_dev": [72, 77, 78], "static_dev_clon": [72, 77, 78], "static_dev_clone_arrai": [72, 77, 78], "static_dev_clone_it": [72, 77, 78], "static_dev_clone_nest": [72, 77, 78], "static_dev_dist": [72, 77, 78], "static_dev_dist_arrai": [72, 77, 78], "static_dev_dist_it": [72, 77, 78], "static_dev_dist_nest": [72, 77, 78], "static_dev_unifi": [72, 77, 78], "static_dev_unify_arrai": [72, 77, 78], "static_dev_unify_it": [72, 77, 78], "static_dev_unify_nest": [72, 77, 78], "static_dev_util": [72, 77, 78], "static_diagon": [72, 77, 78], "static_dropout": [72, 77, 78], "static_dtype_bit": [72, 77, 78], "static_eigh": [72, 77, 78], "static_eigvalsh": [72, 77, 78], "static_einops_rearrang": [72, 77, 78], "static_einops_reduc": [72, 77, 78], "static_einops_repeat": [72, 77, 78], "static_einsum": [72, 77, 78], "static_empti": [72, 77, 78], "static_execute_with_gradi": [72, 77, 78], "static_exist": [72, 77, 78], "static_expand_dim": [72, 77, 78], "static_flip": [72, 77, 78], "static_floormod": [72, 77, 78], "static_fourier_encod": [72, 77, 78], "static_ful": [72, 77, 78], "static_function_supported_dtyp": [72, 77, 78], "static_function_unsupported_dtyp": [72, 77, 78], "static_gath": [72, 77, 78], "static_gelu": [72, 77, 78], "static_get_all_arrays_in_memori": [72, 77, 78], "static_get_all_ivy_arrays_on_dev": [72, 77, 78], "static_get_min_bas": [72, 77, 78], "static_get_min_denomin": [72, 77, 78], "static_get_nestable_mod": [72, 77, 78], "static_get_num_dim": [72, 77, 78], "static_get_referrers_recurs": [72, 77, 78], "static_gpu_is_avail": [72, 77, 78], "static_handle_nest": [72, 77, 78], "static_handle_out_argu": [72, 77, 78], "static_has_nan": [72, 77, 78], "static_indices_wher": [72, 77, 78], "static_infer_devic": [72, 77, 78], "static_infer_dtyp": [72, 77, 78], "static_inplace_arrays_support": [72, 77, 78], "static_inplace_decr": [72, 77, 78], "static_inplace_incr": [72, 77, 78], "static_inplace_upd": [72, 77, 78], "static_inplace_variables_support": [72, 77, 78], "static_inputs_to_native_arrai": [72, 77, 78], "static_inv": [72, 77, 78], "static_invalid_dtyp": [72, 77, 78], "static_is_arrai": [72, 77, 78], "static_is_ivy_arrai": [72, 77, 78], "static_is_ivy_contain": [72, 77, 78], "static_is_native_arrai": [72, 77, 78], "static_leaky_relu": [72, 77, 78], "static_linear": [72, 77, 78], "static_lstm_upd": [72, 77, 78], "static_match_kwarg": [72, 77, 78], "static_matmul": [72, 77, 78], "static_matrix_norm": [72, 77, 78], "static_matrix_pow": [72, 77, 78], "static_matrix_rank": [72, 77, 78], "static_matrix_transpos": [72, 77, 78], "static_max": [72, 77, 78], "static_maximum": [72, 77, 78], "static_mean": [72, 77, 78], "static_min": [72, 77, 78], "static_minimum": [72, 77, 78], "static_multi_head_attent": [72, 77, 78], "static_multinomi": [72, 77, 78], "static_multiprocess": [72, 77, 78], "static_nonzero": [72, 77, 78], "static_num_arrays_in_memori": [72, 77, 78], "static_num_cpu_cor": [72, 77, 78], "static_num_gpu": [72, 77, 78], "static_num_ivy_arrays_on_dev": [72, 77, 78], "static_one_hot": [72, 77, 78], "static_out": [72, 77, 78], "static_outputs_to_ivy_arrai": [72, 77, 78], "static_percent_used_mem_on_dev": [72, 77, 78], "static_permute_dim": [72, 77, 78], "static_pinv": [72, 77, 78], "static_print_all_arrays_in_memori": [72, 77, 78], "static_print_all_ivy_arrays_on_dev": [72, 77, 78], "static_prod": [72, 77, 78], "static_promote_typ": [72, 77, 78], "static_qr": [72, 77, 78], "static_queue_timeout": [72, 77, 78], "static_random_norm": [72, 77, 78], "static_relu": [72, 77, 78], "static_reshap": [72, 77, 78], "static_scaled_dot_product_attent": [72, 77, 78], "static_scatter_flat": [72, 77, 78], "static_scatter_nd": [72, 77, 78], "static_se": [72, 77, 78], "static_set_default_devic": [72, 77, 78], "static_set_default_dtyp": [72, 77, 78], "static_set_default_float_dtyp": [72, 77, 78], "static_set_default_int_dtyp": [72, 77, 78], "static_set_min_bas": [72, 77, 78], "static_set_min_denomin": [72, 77, 78], "static_set_nestable_mod": [72, 77, 78], "static_set_queue_timeout": [72, 77, 78], "static_set_shape_array_mod": [72, 77, 78], "static_set_split_factor": [72, 77, 78], "static_set_tmp_dir": [72, 77, 78], "static_set_with_grad": [72, 77, 78], "static_shap": [72, 77, 78], "static_shape_array_mod": [72, 77, 78], "static_shuffl": [72, 77, 78], "static_sigmoid": [72, 77, 78], "static_slogdet": [72, 77, 78], "static_softmax": [72, 77, 78], "static_solv": [72, 77, 78], "static_split": [72, 77, 78], "static_split_factor": [72, 77, 78], "static_split_func_cal": [72, 77, 78], "static_squeez": [72, 77, 78], "static_stable_divid": [72, 77, 78], "static_stable_pow": [72, 77, 78], "static_stack": [72, 77, 78], "static_std": [72, 77, 78], "static_stop_gradi": [72, 77, 78], "static_sum": [72, 77, 78], "static_supports_inplac": [72, 77, 78], "static_svd": [72, 77, 78], "static_svdv": [72, 77, 78], "static_swapax": [72, 77, 78], "static_tensordot": [72, 77, 78], "static_til": [72, 77, 78], "static_tmp_dir": [72, 77, 78], "static_to_devic": [72, 77, 78], "static_to_ivy_shap": [72, 77, 78], "static_to_list": [72, 77, 78], "static_to_native_arrays_and_back": [72, 77, 78], "static_to_native_shap": [72, 77, 78], "static_to_scalar": [72, 77, 78], "static_total_mem_on_dev": [72, 77, 78], "static_tpu_is_avail": [72, 77, 78], "static_trac": [72, 77, 78], "static_try_else_non": [72, 77, 78], "static_type_promote_arrai": [72, 77, 78], "static_unset_default_devic": [72, 77, 78], "static_unset_default_dtyp": [72, 77, 78], "static_unset_default_float_dtyp": [72, 77, 78], "static_unset_default_int_dtyp": [72, 77, 78], "static_unset_nestable_mod": [72, 77, 78], "static_unset_shape_array_mod": [72, 77, 78], "static_unset_with_grad": [72, 77, 78], "static_unstack": [72, 77, 78], "static_used_mem_on_dev": [72, 77, 78], "static_valid_dtyp": [72, 77, 78], "static_value_is_nan": [72, 77, 78], "static_var": [72, 77, 78], "static_vari": [72, 77, 78], "static_variable_data": [72, 77, 78], "static_vecdot": [72, 77, 78], "static_vector_norm": [72, 77, 78], "static_vector_to_skew_symmetric_matrix": [72, 77, 78], "static_wher": [72, 77, 78], "static_with_grad": [72, 77, 78], "static_zero_pad": [72, 77, 78], "multidevcontain": [72, 75, 76, 77, 79], "at_dev": [72, 77, 79, 327, 340, 341], "containerbas": [73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 130], "chain": [73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 129, 130, 140, 141, 153, 170, 172, 174, 270, 272, 274, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 694, 696, 698, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 955, 956, 957, 959, 972, 978, 980, 982, 985, 987, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075, 1120, 1121], "prune": [73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 170, 172, 174, 270, 272, 274, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 694, 696, 698, 739, 740, 742, 766, 768, 770, 807, 809, 811, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 929, 931, 933, 959, 972, 973, 974, 978, 980, 982, 1006, 1007, 1009, 1066, 1068, 1070, 1071, 1073, 1075], "static_softplu": [73, 74, 170], "__getitem__": [75, 76, 130], "queri": [75, 76, 130, 131, 138, 327, 360, 370, 789, 804, 805, 1098, 1109], "slice": [75, 76, 665, 693, 694, 697, 959, 968], "__setitem__": [75, 76, 129, 130, 138], "val": [75, 76, 133, 138, 665, 708, 709, 710, 724, 725], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 179, 207, 208, 210, 211, 894, 934, 959, 972], "assert": [75, 76, 124, 134, 138, 139, 665, 675], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 130, 139], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 665, 703, 730], "as_bool": [75, 76], "as_on": [75, 76], "as_random_uniform": [75, 76], "low": [75, 76, 104, 105, 136, 983, 985, 986, 987, 989, 990, 991, 992], "uniform": [75, 76, 104, 105, 140, 983, 984, 985, 986, 987, 989, 991, 1089, 1091, 1092, 1095, 1096], "boundari": [75, 76, 983, 989, 991], "as_vari": [75, 76, 124], "as_zero": [75, 76], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "diff": [75, 76, 130, 139], "screen": [75, 76, 139], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 139], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 122, 124, 153, 179, 213, 216, 959, 970, 1114, 1118], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 139, 959, 972], "duplic": [75, 76, 121, 127, 128, 134, 138, 140], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 130], "contains_sub_contain": [75, 76], "match": [75, 76, 130, 249, 255, 258, 377, 610, 613, 665, 716], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 90, 91, 118, 120, 122, 128, 129, 138, 140, 665, 675, 707, 710, 711, 734, 750, 757, 758, 759, 760, 762, 763, 764, 765, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 1087, 1088, 1114, 1115, 1116, 1117, 1118, 1119], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 139], "intern": [75, 76, 121, 124, 129, 130, 132, 133, 327, 750, 787, 959, 960, 969, 970, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1120, 1121], "belong": [75, 76, 140], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 124, 137, 141, 176, 177], "detect": [75, 76, 120, 124, 130, 134, 139, 140, 959, 960, 970], "container0": [75, 76], "axes_length": [75, 76, 665, 687, 688, 689], "rearrang": [75, 76, 665, 687, 689], "One": [75, 76, 104, 105, 124, 131, 136, 138, 139, 665, 688, 894, 925, 928, 983, 985, 986, 987], "callabl": [75, 76, 124, 130, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 176, 177, 249, 290, 291, 327, 371, 665, 671, 676, 686, 688, 955, 956, 957, 958, 959, 965, 969, 970, 971], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 139, 1110, 1111], "__": [75, 76, 122, 139], "above_height": [75, 76, 139], "below_depth": [75, 76, 139], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 127, 131, 132, 134, 136, 139, 249, 253, 254, 279, 282, 297, 326, 327, 343, 344, 345, 346, 360, 366, 372, 373, 376, 665, 685], "from_disk_as_hdf5": [75, 76, 139], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 153], "disk": [75, 76, 139], "h5py": [75, 76], "hdf5": [75, 76, 139, 1110, 1111], "h5": [75, 76], "from_disk_as_json": [75, 76, 139], "json_filepath": [75, 76], "json": [75, 76, 139], "from_disk_as_pickl": [75, 76, 139], "pickle_filepath": [75, 76], "pickl": [75, 76, 130, 139], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 139], "flat": [75, 76, 665, 722, 894, 920, 923], "popul": [75, 76, 124, 131, 132, 136, 983, 984, 1032, 1053, 1056, 1061, 1064], "from_numpi": [75, 76, 139], "h5_file_s": [75, 76], "batch": [75, 76, 126, 130, 139, 327, 369, 370, 665, 692, 789, 802, 806, 872, 874, 955, 956, 957, 958, 977, 978, 981, 1112, 1113], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 127, 129], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 665, 705, 749], "leafwis": [75, 76], "well": [75, 76, 124, 125, 133, 140, 141, 152, 665, 705, 806, 854, 856], "inf": [75, 76, 124, 178, 377, 488, 491, 665, 705, 749, 806, 872, 874], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 894, 900, 903, 939, 942, 1076], "list_stack": [75, 76, 139], "dim": [75, 76, 125, 131, 665, 719, 1098, 1109], "func": [75, 76, 130, 176, 177, 327, 371, 665, 676, 750, 761, 959, 972], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "max_depth": [75, 76, 327, 331, 334, 341, 351, 355, 359, 665, 704, 959, 971], "multi_map": [75, 76, 130], "map_nest": [75, 76, 96, 97, 100, 101, 830, 832, 900, 902, 939, 941], "leftmost": [75, 76, 959, 972], "multi_map_in_static_method": [75, 76, 130], "fn_name": [75, 76], "num_arrai": [75, 76, 124], "overwrite_at_key_chain": [75, 76], "overwrit": [75, 76, 133, 136, 327, 371], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 140], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 138, 141, 327, 358, 789, 791, 793, 795, 806, 841, 843, 847, 849, 1076, 1098, 1100, 1102, 1104], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 136, 138, 139, 141], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 121, 125, 130, 131, 137, 138, 139, 140, 249, 285, 288, 290, 291, 292, 295, 327, 367], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 983, 993], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 139, 151, 1076], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 249, 285, 288, 292, 295, 377, 453, 456], "largest": [75, 76, 152, 249, 285, 288, 292, 295, 806, 857, 859], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 136, 894, 934], "with_remaind": [75, 76, 894, 934], "constitu": [75, 76, 141], "evenli": [75, 76, 179, 180, 181, 207, 208, 210, 211, 894, 934], "store": [75, 76, 121, 127, 129, 130, 136, 138, 139, 140, 179, 244, 248, 665, 692, 750, 787, 806, 866, 868, 894, 934, 1110, 1111], "preserve_typ": [75, 76, 750, 784], "stop": [75, 76, 80, 81, 136, 153, 179, 180, 181, 182, 207, 208, 209, 210, 211, 212, 327, 342, 371, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 784, 955, 956, 957, 958, 1114, 1115, 1116, 1117, 1118, 1119], "structural_diff": [75, 76], "target": [75, 76, 118, 135, 139, 140, 141, 327, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 1076], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 139], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 124, 665, 676], "to_disk_as_json": [75, 76, 139], "to_disk_as_pickl": [75, 76, 139], "to_flat_list": [75, 76], "to_iter": [75, 76, 130], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "to_multi_dev": [75, 76], "distributedarrai": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 121], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "arbitrari": [75, 76, 120, 124, 126, 130, 133, 140, 153, 179, 213, 216, 249, 260, 263, 314, 317, 327, 356, 357, 359], "concatten": [75, 76, 327, 356, 357, 358, 359, 371], "dim_siz": [75, 76, 327], "update_config": [75, 76], "global_norm": [75, 76, 88, 89, 678, 679], "vector": [75, 76, 152, 179, 213, 216, 665, 678, 680, 789, 802, 806, 812, 814, 821, 823, 830, 833, 844, 846, 857, 859, 860, 862, 869, 871, 872, 874, 875, 877, 1098, 1108], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 139], "with_print_ind": [75, 76, 139], "with_print_limit": [75, 76, 139], "with_print_line_spac": [75, 76], "static_arang": [80, 81, 180], "static_asarrai": [80, 81, 183], "static_empty_lik": [80, 81, 188], "static_ey": [80, 81, 193], "n_row": [80, 81, 179, 193, 194, 195], "n_col": [80, 81, 179, 193, 194, 195], "static_from_dlpack": [80, 81, 196], "static_full_lik": [80, 81, 202], "static_linspac": [80, 81, 207], "num": [80, 81, 136, 179, 207, 208, 209, 210, 211, 212], "endpoint": [80, 81, 179, 207, 208, 209, 210, 212], "static_logspac": [80, 81, 210], "static_meshgrid": [80, 81, 213], "static_native_arrai": [80, 81, 218], "static_on": [80, 81, 223], "static_ones_lik": [80, 81, 226], "static_tril": [80, 81, 231], "static_triu": [80, 81, 236], "static_zero": [80, 81, 241], "static_zeros_lik": [80, 81, 244], "int32": [82, 83, 88, 89, 124, 131, 179, 244, 248, 249, 270, 272, 273, 274, 279, 282, 308, 311, 665, 739, 740, 742, 743, 894, 908, 911, 1032, 1049, 1052, 1057, 1060], "int64": [82, 83, 124, 131, 249, 270, 272, 273, 274, 326, 377, 443, 446, 995, 996, 997, 1032, 1049, 1052, 1057, 1060], "static_astyp": [82, 83, 255], "static_broadcast_arrai": [82, 83, 260], "static_broadcast_to": [82, 83, 265], "static_can_cast": [82, 83, 270], "from_": [82, 83, 249, 270, 273, 274], "static_dtyp": [82, 83, 279], "static_finfo": [82, 83, 285], "static_iinfo": [82, 83, 292], "static_is_bool_dtyp": [82, 83, 298], "dtype_in": [82, 83, 249, 253, 254, 284, 297, 298, 301, 302, 303, 306, 307, 308, 311, 312, 326], "static_is_float_dtyp": [82, 83, 303], "static_is_int_dtyp": [82, 83, 308], "static_result_typ": [82, 83, 314], "02": [86, 87, 403, 405, 750, 752, 755], "21": [86, 87, 377, 403, 405, 448, 451, 665, 683, 806, 818, 820, 844, 846, 878, 889, 892, 1032, 1033, 1036], "61": [86, 87, 98, 99, 377, 403, 405, 640, 643, 789, 796, 799, 878, 879, 881, 882, 883, 889, 891, 893], "96": [86, 87, 377, 458, 460, 461, 462, 650, 654, 655, 656, 750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "thefunct": [86, 87, 478, 480, 488, 492, 493, 497], "649": [86, 87, 488, 490], "220": [86, 87, 488, 490], "959": [86, 87, 377, 488, 490, 625, 627, 628, 629], "53": [86, 87, 327, 373, 488, 490], "865": [86, 87, 488, 490], "metho": [86, 87, 508, 510, 553, 555], "757": [86, 87, 377, 625, 627, 628, 629], "279": [86, 87, 377, 625, 627, 628, 629], "76": [86, 87, 377, 463, 466, 630, 632, 634, 655, 656, 750, 752, 755, 806, 863, 865, 1032, 1033, 1036], "37": [86, 87, 104, 105, 377, 403, 406, 407, 630, 632, 634, 650, 654, 985, 987], "835": [86, 87, 630, 632, 634], "34": [86, 87, 377, 448, 451, 630, 632, 634, 635, 638], "98": [86, 87, 377, 448, 451, 630, 632, 634, 806, 844, 846, 995, 999, 1032, 1033, 1036], "347": [86, 87, 630, 632, 634], "721": [86, 87, 630, 632, 634], "static_ab": [86, 87, 378], "static_aco": [86, 87, 383], "static_acosh": [86, 87, 388], "static_add": [86, 87, 121, 122, 130, 393], "static_asin": [86, 87, 398], "static_asinh": [86, 87, 403], "97": [86, 87, 377, 403, 406, 407], "75": [86, 87, 377, 403, 406, 407, 806, 827, 829, 844, 846], "static_atan": [86, 87, 408], "static_atan2": [86, 87, 413], "static_atanh": [86, 87, 418], "static_bitwise_and": [86, 87, 423], "static_bitwise_invert": [86, 87, 428], "static_bitwise_left_shift": [86, 87, 433], "static_bitwise_or": [86, 87, 438], "static_bitwise_right_shift": [86, 87, 443], "static_bitwise_xor": [86, 87, 448], "static_ceil": [86, 87, 453], "static_co": [86, 87, 458], "static_cosh": [86, 87, 463], "static_divid": [86, 87, 130, 468], "static_equ": [86, 87, 473], "static_erf": [86, 87, 478], "static_exp": [86, 87, 483], "static_expm1": [86, 87, 377, 488, 491], "areal": [86, 87, 488, 492], "static_floor": [86, 87, 493], "static_floor_divid": [86, 87, 498], "static_great": [86, 87, 503], "static_greater_equ": [86, 87, 508], "static_isfinit": [86, 87, 513], "x_i": [86, 87, 121, 377, 378, 381, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 428, 431, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 513, 516, 517, 518, 521, 522, 523, 526, 527, 538, 541, 543, 546, 553, 556, 568, 571, 590, 593, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 650, 654, 655, 659, 660, 664, 1000, 1001, 1005, 1006, 1010, 1016, 1020, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064], "static_isinf": [86, 87, 518], "static_isnan": [86, 87, 523], "static_less": [86, 87, 528], "static_less_equ": [86, 87, 533], "static_log": [86, 87, 538], "static_log10": [86, 87, 543], "static_log1p": [86, 87, 548], "static_log2": [86, 87, 553], "static_logaddexp": [86, 87, 558], "static_logical_and": [86, 87, 563], "static_logical_not": [86, 87, 568], "static_logical_or": [86, 87, 573], "static_logical_xor": [86, 87, 578], "static_multipli": [86, 87, 130, 585], "static_neg": [86, 87, 590], "static_not_equ": [86, 87, 595], "static_posit": [86, 87, 600], "static_pow": [86, 87, 605], "static_remaind": [86, 87, 610], "static_round": [86, 87, 615], "thevfunct": [86, 87, 615, 619], "static_sign": [86, 87, 620], "static_sin": [86, 87, 625], "static_sinh": [86, 87, 630], "static_sqrt": [86, 87, 635], "static_squar": [86, 87, 640], "static_subtract": [86, 87, 130, 645], "static_tan": [86, 87, 122, 130, 650], "143": [86, 87, 122, 377, 650, 651, 653, 654], "38": [86, 87, 122, 249, 285, 288, 377, 650, 651, 653, 654], "static_tanh": [86, 87, 655], "995": [86, 87, 377, 655, 656, 658, 659], "9999": [86, 87, 655, 656], "static_trunc": [86, 87, 660], "static_all_equ": [88, 89, 666, 668], "max_norm": [88, 89, 665, 677, 678, 679, 680], "static_gather_nd": [88, 89, 694], "static_to_numpi": [88, 89, 739, 742], "lr": [90, 91, 139, 140, 750, 757, 758, 759, 760, 762, 763, 764, 765, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 1114, 1115, 1116, 1117, 1118, 1119], "mw_tm1": [90, 91, 750, 757, 758, 759, 760, 771, 772, 773, 774], "vw_tm1": [90, 91, 750, 757, 758, 759, 760, 771, 772, 773, 774], "max_trust_ratio": [90, 91, 750, 771, 772, 773, 774, 1114, 1116], "decay_lambda": [90, 91, 750, 771, 772, 773, 774, 775, 776, 777, 778, 1114, 1116, 1117], "effective_grad": [90, 91, 750, 779, 780, 781, 782], "static_adam_step": [90, 91, 752], "87": [90, 91, 104, 105, 750, 752, 755, 756, 985, 987], "976": [90, 91, 377, 655, 659, 750, 752, 755, 756], "static_adam_upd": [90, 91, 757], "static_gradient_descent_upd": [90, 91, 762], "static_is_vari": [90, 91, 766], "static_lamb_upd": [90, 91, 771], "static_lars_upd": [90, 91, 775], "static_optimizer_upd": [90, 91, 779], "inp": [94, 95, 789, 796, 798, 799, 800], "static_depthwise_conv2d": [94, 95, 796], "73": [96, 97, 124, 377, 635, 638, 806, 807, 809, 810, 811, 977, 978, 981], "577": [96, 97, 806, 807, 809, 810, 811], "41": [96, 97, 138, 377, 448, 451, 635, 638, 806, 807, 809, 810, 811, 1032, 1057, 1060], "707": [96, 97, 806, 807, 809, 810, 811], "static_choleski": [96, 97, 807], "static_rol": [96, 97, 100, 101, 122, 130, 807, 811, 895, 899, 929], "511": [98, 99, 878, 879, 881, 882, 883, 889, 891, 893], "5108256": [98, 99, 884, 886], "609438": [98, 99, 884, 886], "static_binary_cross_entropi": [98, 99, 879], "static_cross_entropi": [98, 99, 884], "20397282": [98, 99, 884, 888], "83258148": [98, 99, 884, 888], "60943794": [98, 99, 884, 888], "static_sparse_cross_entropi": [98, 99, 889], "static_clip": [100, 101, 895], "static_repeat": [100, 101, 920], "658": [102, 103, 977, 978, 980, 981, 982], "04": [102, 103, 249, 285, 288, 377, 488, 491, 789, 805, 977, 978, 980, 981, 982], "759": [102, 103, 977, 978, 980, 981, 982], "42": [102, 103, 104, 105, 141, 164, 170, 173, 750, 752, 755, 806, 844, 846, 978, 980, 982, 983, 985, 987, 993, 1032, 1033, 1036], "403": [102, 103, 978, 980, 982], "62": [102, 103, 104, 105, 377, 630, 633, 978, 980, 982, 985, 987], "static_layer_norm": [102, 103, 978], "static_randint": [104, 105, 985], "drawn": [104, 105, 124, 983, 984, 985, 986, 987, 988, 989, 991], "highest": [104, 105, 983, 985, 986, 987], "nativeshap": [104, 105, 179, 187, 201, 223, 224, 241, 243, 665, 723, 730, 736, 738, 789, 791, 793, 795, 894, 925, 928, 983, 985, 986, 987, 988, 989, 991], "half": [104, 105, 179, 180, 181, 983, 985, 986, 987, 989, 991], "20": [104, 105, 138, 377, 448, 451, 483, 486, 488, 491, 615, 618, 635, 638, 806, 818, 820, 844, 846, 863, 865, 983, 985, 986, 987, 995, 998, 999, 1032, 1033, 1036], "40": [104, 105, 377, 463, 466, 635, 638, 806, 844, 846, 985, 987, 1032, 1033, 1036], "52": [104, 105, 750, 752, 755, 806, 844, 846, 985, 987, 1000, 1001, 1005, 1032, 1033, 1036], "95": [104, 105, 377, 620, 623, 750, 752, 755, 985, 987], "13": [104, 105, 122, 124, 130, 327, 360, 377, 423, 426, 448, 451, 463, 466, 488, 491, 635, 638, 665, 683, 750, 752, 755, 789, 805, 806, 818, 820, 844, 846, 985, 987, 995, 999, 1000, 1001, 1005, 1032, 1033, 1036], "static_random_uniform": [104, 105, 989], "static_unique_al": [108, 109, 1001], "static_unique_count": [108, 109, 1006], "classivi": [108, 109, 894, 934, 1000, 1006, 1007, 1009, 1010], "static_unique_invers": [108, 109, 1011], "static_unique_valu": [108, 109, 1016], "static_argsort": [110, 111, 1022], "static_sort": [110, 111, 1027], "static_al": [114, 115, 1066], "static_ani": [114, 115, 1071], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 135, 153], "mainli": [118, 137, 139], "under": [118, 121, 122, 123, 124, 125, 126, 130, 135, 136, 139, 141], "hood": [118, 122, 124, 126, 130, 135, 136, 139, 141], "weed": [118, 135], "behind": [118, 124, 135, 137, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "tour": 118, "primari": [118, 124, 127, 133, 153], "composit": [118, 124, 127, 129, 130, 133, 136, 140, 141, 153], "nestabl": [118, 121, 122, 124, 133, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 453, 456, 488, 491, 493, 496, 583, 584, 595, 598, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 818, 820, 894, 929, 932, 977, 978, 981, 1000, 1006, 1010, 1032, 1037, 1040, 1065, 1066, 1069], "dynam": [118, 131, 132, 133, 136, 176, 177], "runtim": [118, 124, 327], "j": [118, 665, 673, 674, 806, 866, 868, 1032, 1033, 1036], "borrow": 118, "taken": [119, 134, 141, 806, 818, 820], "compil": [119, 130, 135, 137, 153, 1076, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "meta": [119, 129, 956, 957, 958], "overlap": 119, "sever": [119, 153, 806, 827, 829], "judgement": 119, "locat": [119, 124, 127, 132, 983, 984], "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 134, 138, 153, 1076], "anyth": [119, 124, 1076], "refactor": 119, "ongo": 119, "subfold": [119, 124], "via": [119, 130, 131, 132, 133, 136, 138, 139, 152, 959, 960, 969, 970], "file_nam": [119, 124], "my_func": [119, 122], "my": 119, "cooler": 119, "produc": [119, 124, 327, 336, 337, 789, 805], "something_cool": 119, "category_nam": [120, 121, 126, 131, 132], "backend_nam": [120, 121, 126, 127, 128, 131, 132], "adress": 120, "conveni": [120, 131, 132, 137, 139, 140], "revisit": [120, 141], "dedic": [120, 138, 140, 750, 787, 1087, 1088], "four": [120, 122, 126, 131, 139], "tf": [120, 125, 129, 131, 132, 133, 136, 141, 153, 1076], "jnp": [120, 131, 132, 133, 141, 1076], "jaxarrai": [120, 131, 132, 133], "wherea": [120, 122, 124, 126, 129, 131, 132, 141], "__sub__": [120, 122, 129, 130, 138], "__mul__": [120, 122, 129, 130, 138], "__div__": 120, "permit": [120, 124, 129], "dicat": 120, "addition": [120, 130, 133], "omit": [120, 133, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "wrapper": [120, 128, 129, 130, 131, 133, 138], "contrast": [120, 121], "futher": 120, "absenc": [120, 130], "pep": 120, "484": 120, "annot": [120, 134], "dictat": [120, 122, 129, 133], "brittl": 120, "intend": [120, 1032, 1057, 1060], "subset": [120, 121, 124, 136], "freeli": 120, "extend": [120, 121, 127], "consum": [120, 124, 130, 327], "inde": [120, 153], "flexibl": 120, "technic": [120, 130, 133, 153], "original_typ": 120, "cumbersom": 120, "readabl": [120, 129, 130, 138, 139], "account": 121, "instanti": 121, "firstli": [121, 122, 126, 129, 131, 133, 139], "templat": [121, 124, 1076], "spec": [121, 122], "api_specif": [121, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "array_api": 121, "preview": 121, "render": 121, "incorrectli": [121, 134], "onlin": [121, 1076], "approxim": [121, 164, 165, 377, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 483, 486, 488, 491, 538, 541, 543, 546, 548, 551, 553, 556, 605, 608, 625, 628, 630, 633, 650, 654, 655, 659, 806, 838, 840, 847, 849], "domain": [121, 377, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 483, 486, 488, 491, 538, 541, 543, 546, 553, 556, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659], "codomain": [121, 377, 383, 386, 388, 391, 398, 401, 403, 406, 408, 411, 413, 416, 458, 461, 463, 466, 483, 486, 488, 491, 538, 541, 543, 546, 553, 556, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659], "assum": [121, 124, 127, 131, 138, 139, 153, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 458, 461, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069], "operand": [121, 125, 377, 383, 386, 388, 391, 393, 396, 398, 401, 403, 406, 408, 411, 413, 416, 448, 451, 453, 456, 458, 461, 463, 466, 483, 486, 488, 491, 493, 496, 538, 541, 543, 546, 553, 556, 558, 561, 585, 588, 605, 608, 610, 613, 615, 618, 625, 628, 630, 633, 635, 638, 650, 654, 655, 659, 660, 664, 1032, 1033, 1036, 1037, 1040, 1045, 1048, 1057, 1060], "ref": [121, 377, 443, 446, 528, 531, 585, 588, 595, 598, 610, 613, 645, 649, 894, 939, 942], "But": [121, 130, 141], "needless": 121, "info": [121, 1076], "renam": 121, "conform": [121, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 533, 536, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 806, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069], "org": [121, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 285, 288, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 750, 752, 755, 757, 759, 806, 818, 820, 894, 908, 911, 929, 932, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "elementwise_funct": [121, 377, 378, 381, 398, 401, 403, 406, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 625, 628, 635, 638, 640, 643, 806, 818, 820, 894, 929, 932, 1000, 1001, 1005, 1021, 1022, 1025, 1032, 1037, 1040], "descript": [121, 124, 130, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 872, 874, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040, 1065, 1066, 1069], "simplic": [121, 140, 152, 179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 210, 211, 213, 216, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248, 249, 270, 273, 298, 301, 308, 311, 377, 378, 381, 393, 396, 398, 401, 403, 406, 423, 426, 448, 451, 453, 456, 463, 466, 488, 491, 493, 496, 583, 584, 595, 598, 615, 618, 620, 623, 625, 628, 635, 638, 640, 643, 650, 654, 655, 659, 665, 693, 789, 792, 796, 799, 805, 806, 807, 810, 815, 817, 818, 820, 894, 908, 911, 912, 915, 929, 932, 977, 978, 981, 1000, 1001, 1005, 1006, 1010, 1021, 1022, 1025, 1032, 1037, 1040], "judgment": 121, "beyond": [121, 894, 929, 932], "text": 121, "func_nam": [121, 122, 126], "pure": [121, 138, 141, 153], "themselv": [121, 126, 130, 131, 132, 140, 959, 960], "operator_nam": 121, "succinct": 121, "contstructor": 121, "though": [121, 126, 131, 139, 153], "forward": [121, 124, 141, 152, 153, 1110, 1111, 1114, 1118], "_forward": [121, 136, 139, 140, 1076], "former": 121, "explicitli": [121, 126, 127, 129, 130, 133, 136, 153, 806, 821, 823, 1098, 1107, 1109, 1110, 1111], "latter": [121, 127], "implicit": [121, 124, 130, 136], "docst": 121, "eight": 122, "static_": 122, "op_nam": 122, "__r": 122, "__truediv__": [122, 129, 130], "recap": [122, 130, 140], "independ": [122, 123, 128, 130, 136, 141, 806, 812, 814, 854, 856, 983, 984], "combinatorili": 122, "variat": [122, 124], "grid": [122, 124, 152, 179, 213, 216], "vari": [122, 124, 130, 138, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "simplest": [122, 124], "unus": [122, 133, 134, 176, 177], "excess": [122, 127, 138], "okai": [122, 136], "showcas": [122, 152], "demonstr": [122, 138], "replic": [122, 131], "meant": 122, "imaginari": 122, "some_flag": 122, "another_flag": 122, "jointli": 122, "three": [122, 124, 125, 130, 135, 179, 213, 216, 1076], "x0": [122, 665, 673], "procedur": 122, "sens": [122, 130, 138], "5574077": 122, "1850398": 122, "5463025": 122, "8422884": 122, "91601413": 122, "9647598": 122, "3738229": 122, "1597457": 122, "0963247": 122, "9955841": 122, "3278579": 122, "multi": [122, 130, 135, 153, 789, 804, 806, 812, 814, 1076, 1082, 1098, 1109], "seper": [122, 665, 692], "pars": [122, 153], "satisfi": [122, 806, 875, 877], "far": [122, 132, 137, 138, 959, 960, 970], "asid": [122, 152], "irrelev": [122, 131], "increasingli": 122, "complex": [122, 125, 139, 140, 141, 153, 806, 821, 823, 857, 859], "14254655": 122, "1578213": 122, "380515": 122, "17": [122, 130, 164, 166, 806, 818, 820, 983, 988], "trivial": 122, "exlud": 122, "unit": [123, 124, 153, 164, 165, 166, 167, 327], "thoroughli": 123, "ci": [123, 124, 153], "failur": 123, "On": [124, 125, 134, 137, 141], "fixtur": 124, "300": [124, 377, 615, 618], "hit": [124, 136], "action": 124, "eleg": 124, "intellig": 124, "sampl": [124, 789, 801, 983, 984, 988, 989, 991, 1032, 1053, 1056, 1061, 1064, 1098, 1106], "rang": [124, 139, 140, 141, 179, 180, 181, 207, 208, 210, 211, 1000, 1001, 1005, 1032, 1049, 1052, 1057, 1060, 1076], "cach": [124, 126, 327, 345, 665, 676], "unexplor": 124, "known": 124, "repeatedli": [124, 130, 959, 968], "upload": 124, "artifact": 124, "parametr": 124, "statement": [124, 134, 153], "plai": [124, 125, 141], "varieti": [124, 131, 132], "wide": 124, "valid_int_dtyp": 124, "int8": [124, 131, 249, 308, 311, 326], "int16": [124, 131, 249, 270, 273, 308, 311, 1032, 1049, 1052, 1057, 1060], "uint8": [124, 131, 249, 270, 273, 326], "uint16": [124, 131, 249, 291, 1032, 1049, 1052, 1057, 1060], "uint32": [124, 131, 249, 291, 1032, 1049, 1052, 1057, 1060], "uint64": [124, 131, 249, 291, 1032, 1049, 1052, 1057, 1060], "custom_strategi": 124, "st": 124, "sampled_from": 124, "min_siz": 124, "max_siz": 124, "wherein": 124, "referenc": 124, "print_hypothesis_exampl": 124, "searchstrategi": 124, "randomis": 124, "simplist": 124, "intricaci": 124, "briefli": [124, 126, 139], "bound": [124, 136], "mechan": [124, 151, 153, 1076], "power": [124, 138, 139, 140, 377, 443, 446, 483, 486, 605, 608, 665, 700, 724, 733, 806, 837, 1089], "math": [124, 133, 141, 1076], "inclus": [124, 133, 179, 180, 181, 983, 985, 986], "width": 124, "losslessli": 124, "mostli": 124, "one_of": 124, "datum": 124, "pipe": 124, "overload": 124, "shorthand": 124, "draw": [124, 983, 984, 988, 989, 991], "input_dtyp": 124, "reject": 124, "flatmap": 124, "suppos": 124, "dataobject": 124, "test_argsort": 124, "decor": [124, 126, 128, 130, 131, 132, 133], "initialis": [124, 327], "snippet": 124, "dtype_and_x": 124, "dtype_and_valu": 124, "valid_float_dtyp": 124, "list_of_length": 124, "num_positional_arg": 124, "instance_method": 124, "alpha": [124, 125, 164, 166], "test_leaky_relu": 124, "float16": [124, 125, 131, 249, 285, 288, 291, 326], "exhaust": 124, "num_posit": 124, "indirectli": 124, "advis": 124, "seri": [124, 125], "9433925": 124, "401298464324817e": 124, "574352379": 124, "99999": 124, "2250738585072014e": 124, "308": [124, 249, 285, 288], "103515625e": 124, "unpack": [124, 134, 665, 748], "seamlessli": 124, "edg": [124, 136, 141, 894, 895, 898, 904, 907, 951, 954, 1076], "encount": 124, "criterion": 124, "straight": [124, 138, 1076], "array_valu": 124, "valid_ax": 124, "hand": [124, 126, 134, 153], "craft": 124, "polici": [124, 152], "hoc": 124, "overview": [124, 135, 152], "array_dtyp": 124, "array_bool": 124, "na": 124, "test_concat": 124, "test_devic": 124, "array_shap": 124, "test_manipul": 124, "common_shap": 124, "test_lay": 124, "size_bound": 124, "precis": [124, 249, 285, 288, 377, 585, 588, 635, 638], "283405296074752": 124, "564049465049088": 124, "0417876997507982e": 124, "min_valu": 124, "max_valu": 124, "allow_inf": 124, "min_num_dim": 124, "wherev": 124, "reshape_shap": 124, "stand": 124, "alon": [124, 327, 366, 376], "fashion": 124, "some_sequ": 124, "06": [124, 249, 285, 288, 750, 752, 755], "allow_subnorm": 124, "exclude_min": 124, "960464477539063e": 124, "08": [124, 377, 403, 406, 488, 491, 789, 805], "coverag": 124, "allow_nan": 124, "Such": 124, "kind": [124, 153, 249, 285, 288, 292, 295, 377, 605, 608, 1032, 1049, 1052, 1057, 1060], "get_shap": 124, "allow_non": 124, "max_num_dim": 124, "min_dim_s": 124, "none_or_list_of_float": 124, "200": 124, "199": [124, 377, 403, 406], "99999999999997": 124, "000000000000002": 124, "125": 124, "43759670925832": 124, "get_mean_std": 124, "probabilist": 124, "811428143185347e": 124, "89": [124, 377, 448, 451, 806, 863, 865, 1032, 1057, 1060], "none_or_list_float": 124, "get_bound": 124, "arrays_valu": 124, "put": [124, 153], "36418": 124, "213": 124, "21716926": 124, "get_prob": 124, "unnorm": [124, 983, 984], "099609375": 124, "get_axi": 124, "number_positional_argu": 124, "mind": [124, 129, 130], "bodi": 124, "test_valu": 124, "enough": [124, 138, 139, 140], "autom": [124, 1076], "report": 124, "test_demo": 124, "falsifi": 124, "failing_test": 124, "traceback": 124, "123": [124, 665, 690], "assertionerror": [124, 750, 788], "shrink": 124, "prescrib": 124, "behavior": [124, 130, 136, 153, 377, 605, 608, 610, 613, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "identifi": 124, "closest": [124, 249, 275, 377, 453, 456, 493, 496, 498, 501, 615, 618, 660, 664], "checkout": 124, "scratch": 124, "databas": 124, "therebi": 124, "debug": [124, 130, 139], "event": [124, 1076], "test_gelu": 124, "test_fil": 124, "brief": 124, "phase": [124, 153], "reus": 124, "notabl": 124, "displai": [124, 130, 139], "verbos": [124, 136, 1076, 1124], "newer": 124, "max_exampl": 124, "impact": [124, 140], "deadlin": 124, "weird": 124, "verifi": [124, 131, 132, 138, 1076, 1082], "truth": [124, 377, 473, 476, 503, 506, 508, 511, 528, 531, 533, 536, 595, 598], "opt": [124, 127, 133, 138], "defer": [124, 126, 129, 130, 131, 132, 133], "suffic": [124, 128], "catch": [124, 665, 686], "systemat": 124, "safeguard": 124, "inabl": 124, "fact": [124, 139], "lax": [125, 153], "unsupported_dtyp": [125, 131], "bfloat16": [125, 131], "thu": [125, 377, 443, 446, 605, 608, 610, 613, 806, 821, 823], "categoris": 125, "notic": [125, 138], "mathematical_funct": 125, "arithmetic_oper": 125, "same_kind": 125, "subok": 125, "mathemat": [125, 178, 377, 393, 396, 413, 416, 488, 491, 585, 588, 806, 872, 874], "slightli": [125, 130, 136, 140], "recov": 125, "obtain": 125, "trigonometric_funct": 125, "pointwise_op": 125, "concaten": [125, 136, 139, 327, 356, 665, 692, 894, 900, 903, 1076], "manipulation_routin": 125, "joining_arrai": 125, "indexing_slicing_joining_mutating_op": 125, "cat": [125, 136, 141], "grasp": 125, "youtub": 125, "categor": [126, 132], "mutual": [126, 130], "constitut": [126, 136, 1032, 1053, 1056, 1061, 1064], "venn": 126, "diagram": 126, "light": [126, 153], "log_pr": [126, 130, 133], "array_arg": 126, "typic": 126, "whatsoev": [126, 130], "commonli": [126, 1032, 1053, 1056, 1061, 1064], "outsid": [126, 132, 134, 136, 138, 141, 894, 895, 898, 939, 942], "deal": [126, 153], "concurr": [126, 130], "modif": 126, "group": [126, 130], "get_all_arrays_on_dev": 126, "nested_map": [126, 959], "index_nest": [126, 959], "implicit_backend": 127, "unless": [127, 132, 133, 153, 377, 585, 588, 665, 719], "__dict__": [127, 136, 138], "ivy_original_dict": [127, 136], "unmodifi": [127, 131], "fallback": 127, "freedom": [127, 1032, 1053, 1056, 1061, 1064], "recommend": [127, 377, 568, 571, 573, 576, 610, 613, 1032, 1041, 1044], "achiev": [128, 134, 139, 141], "topic": [128, 138], "_data": [129, 138], "organiz": [129, 130], "inherit": [129, 130, 138], "bear": [129, 130, 131], "necessarili": [129, 130], "although": [129, 130], "underpin": [129, 130, 136], "programmat": [129, 130], "backup": [129, 130], "accident": [129, 130], "absent": [129, 130], "perk": [129, 130], "auto": [129, 130, 139], "throw": [129, 138], "imposs": 129, "coupl": [129, 130, 138, 140], "anywai": 129, "secondli": [129, 131], "easier": 129, "five": [130, 139], "decis": [130, 136, 138], "arbitrarili": [130, 139], "__repr__": 130, "control": [130, 131, 133, 138, 139, 152], "__getattr__": 130, "underli": [130, 377, 423, 426, 438, 441, 448, 451, 578, 581], "__setattr__": 130, "__contains__": 130, "__getstate__": 130, "__setstate__": 130, "unpickl": 130, "expand": [130, 665, 692, 894, 908, 911], "counterpart": 130, "irrespect": [130, 133, 138, 249, 255, 258], "presenc": [130, 133], "implicitli": 130, "intuit": [130, 139, 140], "chronolog": 130, "had": [130, 133], "sequenti": [130, 140], "flow": [130, 152], "implic": 130, "eager": [130, 153], "children": 130, "shallowest": 130, "deepest": 130, "22": [130, 377, 448, 451, 806, 818, 820, 844, 846, 959, 976, 995, 999, 1032, 1033, 1036], "retain_grad": [130, 750, 761], "dy": [130, 750, 761], "dx": [130, 750, 761], "autograd": [130, 153], "grad": [130, 139, 140, 141, 1076, 1114, 1118], "redund": 130, "num_head": [130, 789, 804, 1098, 1109], "mask": [130, 789, 804, 805], "to_q_fn": [130, 789, 804], "to_kv_fn": [130, 789, 804], "to_out_fn": [130, 133, 789, 804], "to_q_v": [130, 789, 804], "to_kv_v": [130, 789, 804], "to_out_v": [130, 789, 804], "measur": [130, 789, 804, 1098, 1109], "dot": [130, 789, 804, 805, 806, 863, 865, 869, 871, 1098, 1109], "all_dtyp": 131, "all_numeric_dtyp": 131, "all_int_dtyp": 131, "all_float_dtyp": 131, "fall": [131, 135, 1076, 1110, 1111, 1114, 1118], "thirdli": 131, "native_float32": [131, 249, 326], "importantli": [131, 138, 141, 152], "arguabl": [131, 132], "compound": 131, "overflow": [131, 377, 393, 396, 1032, 1057, 1060], "arr": [131, 132], "settabl": [131, 132], "mx": [131, 132, 133, 1076], "nd": [131, 132, 133, 136, 141, 1076], "deleg": 131, "shape_to_tupl": 131, "idx": [132, 138, 665, 671], "tpu": [132, 327, 349, 369, 374], "aliv": [132, 327, 361, 365, 367, 665, 699, 718, 720], "memori": [132, 133, 151, 153, 327, 345, 366, 371, 373, 376, 789, 803, 1076], "dual": 132, "thrown": [132, 153, 665, 710], "rare": [132, 153], "program": 133, "strictli": 133, "ration": 133, "speak": 133, "subtli": 133, "ensure_in_backend": [133, 665, 710], "x_nativ": 133, "val_n": 133, "assign": [133, 134, 138], "elif": 133, "unspecifi": [133, 377, 605, 608, 610, 613, 806, 821, 823, 894, 939, 942], "predominantli": [133, 152], "altern": [133, 139], "_wrap_fn": 133, "maxim": [133, 136], "inner": [133, 138, 806, 821, 823, 830, 833, 955, 956, 957, 958], "third": [133, 153, 806, 857, 859, 1000, 1001, 1005], "leverag": 133, "equival": [133, 139, 141, 179, 180, 181, 377, 443, 446, 568, 571, 573, 576, 610, 613, 806, 838, 840, 847, 849, 854, 856, 872, 874], "input_arrai": 133, "clean": [134, 136, 137, 139], "flake8": 134, "undefin": 134, "yield": [134, 995, 999], "handler": [134, 135, 137, 141, 1076], "liter": [134, 806, 872, 874], "carri": 134, "star": 134, "byte": 134, "notimpl": 134, "notimplementederror": 134, "unsuccess": 134, "exce": [134, 377, 584], "black": 134, "disobei": 134, "successfulli": 134, "comparison": 134, "sound": 135, "higher": [135, 136, 141, 153, 750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "fledg": [136, 137], "syntact": [136, 141], "clip_by_valu": [136, 141], "clamp": [136, 141], "fit": [136, 894, 920, 923], "construct": [136, 137, 140, 141, 894, 947, 950, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121], "power_seq": 136, "resid": [136, 140], "ml_framework": [136, 141, 179, 180, 181], "current_framework": [136, 141], "furthermor": 136, "framework_handl": 136, "face": 136, "cprint": [136, 1123], "framework_stack": 136, "_determine_framework_from_arg": 136, "valueerror": [136, 894, 935, 938], "get_framework": 136, "neither": [136, 377, 393, 396, 585, 588, 750, 788], "illustr": [136, 152], "un": [136, 249, 297], "nn": [136, 141, 179, 213, 216, 1076], "init_h": [136, 789, 803], "init_c": [136, 789, 803], "kernel": [136, 153, 789, 803], "recurrent_kernel": [136, 789, 803], "bia": [136, 140, 789, 802, 803, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108], "recurrent_bia": [136, 789, 803], "x_shape": 136, "batch_shap": [136, 138, 141, 665, 719, 789, 803, 804, 805, 806, 875, 877, 983, 984, 1098, 1107], "timestep": [136, 789, 803, 1098, 1107], "input_channel": [136, 140, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108], "x_flat": 136, "wi": 136, "wi_x": 136, "wii_x": 136, "wif_x": 136, "wig_x": 136, "wio_x": 136, "recurr": [136, 789, 803], "wh": 136, "lstm": [136, 789, 803, 1098], "ht": 136, "ct": 136, "hts_list": 136, "unrol": [136, 139, 789, 803], "wii_xt": 136, "wif_xt": 136, "wig_xt": 136, "wio_xt": 136, "zip": 136, "htm1": 136, "ctm1": 136, "wh_htm1": 136, "whi_htm1": 136, "whf_htm1": 136, "whg_htm1": 136, "who_htm1": 136, "ft": 136, "gt": 136, "ot": 136, "offici": 136, "reliabl": 136, "sacrific": 136, "hear": 136, "virtu": 136, "pure_ivi": 136, "reduce_mean": [136, 139, 140, 141, 1076], "reduce_sum": [136, 1076], "reduce_var": 136, "compile_graph": [136, 141], "pure_torch": 136, "backbon": [136, 139], "_layer": 136, "super": [136, 139, 140, 141], "random_unifrom": 136, "unclean": 136, "wx": 136, "temp": 136, "torchscript": 136, "fn": [136, 138, 154, 155, 156, 157, 158, 159, 160, 161, 162, 249, 290, 291, 327, 336, 337, 665, 671, 745, 959, 960, 965, 966, 967, 969, 970, 971, 1079, 1081], "example_input": [136, 176, 177], "static_argnum": [136, 176, 177], "static_argnam": [136, 176, 177], "jit": [136, 153], "frontend": 137, "primit": [137, 153], "hierarch": [137, 139, 140], "arraywithlinalg": 138, "arraywithlog": 138, "arraywithmath": 138, "arraywithmeta": 138, "arraywithreduct": 138, "_shape": 138, "_size": 138, "functool": 138, "mul": 138, "len": [138, 141, 179, 213, 216], "_dtype": 138, "_devic": 138, "_dev_str": 138, "_pre_repr": 138, "_post_repr": 138, "answer": [138, 153], "consol": 138, "typeerror": 138, "immut": 138, "behav": 138, "claim": 138, "truli": 138, "_native_wrapp": 138, "attributeerror": 138, "genuin": 138, "some_method": 138, "similarli": [138, 179, 213, 216], "rewritten": 138, "__pow__": 138, "strang": 138, "enforc": 138, "appear": [138, 894, 908, 911], "_wrap_method": 138, "func_wrapp": [138, 154, 155, 156, 157, 158, 159, 160, 161, 162], "__name__": 138, "non_wrapped_method": 138, "_method_wrap": 138, "native_arg": 138, "native_kwarg": 138, "inner_fn": 138, "whist": 138, "unwrap": 138, "transit": 138, "needlessli": 138, "randn": 138, "_unwrap_method": 138, "method_wrap": 138, "compartment": 138, "public": [138, 665, 681], "newshap": 138, "new_shap": 138, "tidi": 138, "shorter": 138, "crystal": 138, "ton": 139, "ado": [139, 140], "incred": [139, 153], "hash": 139, "soup": 139, "walk": [139, 140], "dct": 139, "cnt": 139, "combo": [139, 1076, 1082], "hold": [139, 665, 722, 723], "1000": [139, 377, 635, 638], "uda": 139, "3333": 139, "6667": 139, "178": 139, "new_weight": 139, "0600": 139, "3100": 139, "2400": 139, "6900": 139, "delimit": 139, "autocomplet": 139, "midwai": 139, "agent": 139, "total_spe": 139, "total_height": 139, "total_width": 139, "ag": 139, "tot": 139, "total_": 139, "total_h": 139, "dir": 139, "cnt0": 139, "cnt1": 139, "diff_0": 139, "diff_1": 139, "config0": 139, "config1": 139, "Not": [139, 140, 153, 178], "helper": 139, "decod": 139, "l0": 139, "l1": [139, 806, 872, 874], "depth": [139, 140, 141, 152, 327, 351, 355, 359, 665, 704, 719, 959, 971, 1110, 1111], "clearer": 139, "truncat": 139, "decoder__l0": 139, "decoder__l1": 139, "encoder__l0": 139, "encoder__l1": 139, "height": 139, "l0__b": 139, "l0__w": 139, "l1__b": 139, "l1__w": 139, "printabl": 139, "obviou": 139, "foresight": 139, "untidili": 139, "update_ag": 139, "normalize_img": 139, "img": 139, "img_max": 139, "reduce_max": [139, 1076], "img_min": 139, "reduce_min": [139, 1076], "img_rang": 139, "agent_posit": 139, "agent_veloc": 139, "agent_cam_front_rgb": 139, "agent_cam_front_depth": 139, "agent_cam_rear_rgb": 139, "agent_cam_rear_depth": 139, "agent_cam_lidar": 139, "cleaner": 139, "camera": 139, "front_rgb": 139, "front_depth": 139, "rear_rgb": 139, "rear_depth": 139, "lidar": 139, "rgb": 139, "rear": 139, "veloc": 139, "cam": 139, "cam_max": 139, "cam_min": 139, "cam_rang": 139, "Of": 139, "ideal": 139, "perman": 139, "afterward": 139, "thread": 139, "incorpor": 139, "pretti": 139, "straightforward": 139, "dataload": [139, 151, 1076], "_cnt": 139, "img_": 139, "_dataset_s": 139, "_batch_siz": 139, "_count": [139, 140], "__next__": 139, "filenam": 139, "img_fnam": 139, "fname": 139, "loaded_img": 139, "cv2": 139, "imread": 139, "loader": [139, 153], "batch_slic": 139, "mymodel": [139, 1076], "linear0": [139, 140, 1076], "linear1": [139, 140, 1076], "x_in": [139, 140, 141, 1076], "loss_fn": [139, 140, 141, 1076], "0145": 139, "grad_fn": 139, "addbackward0": 139, "_create_vari": 140, "output_channel": [140, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108], "with_bia": [140, 1098, 1108], "_input_channel": 140, "_output_channel": 140, "_w_shape": 140, "_b_shape": 140, "_with_bia": 140, "8979": 140, "3198": 140, "0196": 140, "3126": 140, "3717": 140, "9687": 140, "6958": 140, "5122": 140, "3902": 140, "8800": 140, "5613": 140, "1982": 140, "nightmar": 140, "overcom": 140, "fc": 140, "9563": 140, "v0": 140, "v1": 140, "6440": 140, "key0": 140, "1823": 140, "8075": 140, "linear3": 140, "v2": 140, "2346": 140, "counter": 140, "hidden": [140, 789, 803, 1098, 1107], "fed": [140, 327, 371], "1300": 140, "decoupl": 140, "scheme": 140, "weight_initi": [140, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108], "glorotuniform": [140, 1089, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108], "bias_initi": [140, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108], "_w_init": 140, "_b_init": 140, "create_vari": [140, 1089], "var_shap": [140, 1089], "fan_out": [140, 1089], "fan_in": [140, 1089], "fan_mod": [140, 1089], "fan_sum": 140, "slight": 140, "misnom": 140, "saw": 140, "vanilla": [140, 955, 957], "descent": [140, 750, 762, 764, 1114, 1119], "lar": [140, 750, 771, 773, 775, 777, 1114], "lamb": [140, 750, 771, 773, 1114], "compile_on_next_step": [140, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119], "_beta1": 140, "_beta2": 140, "_epsilon": 140, "_mw": 140, "_vw": 140, "_first_pass": 140, "_should_compil": 140, "_step": [140, 1114, 1118], "new_v": 140, "_lr": 140, "isinst": [140, 141, 665, 737], "_inplac": 140, "_stop_gradi": 140, "set_stat": [140, 1114, 1115, 1116, 1117, 1118, 1119], "pre": [141, 153, 327], "captur": 141, "sparse_funct": 141, "num_class": [141, 983, 984], "num_dim": 141, "new_axi": 141, "_linear": 141, "to_backend": 141, "jax_graph": 141, "to_ivy_modul": [141, 1087], "thinli": 141, "whilst": 141, "to_haiku_modul": 141, "hk": 141, "loss_fn_t": 141, "transform": [141, 152, 789, 801, 802], "without_apply_rng": 141, "rng": 141, "prngkei": 141, "init": 141, "update_rul": 141, "tree_multimap": 141, "vision": [151, 1076], "robot": [151, 1076], "focus": 152, "perfect": 152, "3d": [152, 1098, 1103, 1104], "differenti": 152, "demo": [152, 1076], "orient": 152, "pose": 152, "euler": [152, 178], "quaternion": 152, "rotat": 152, "ivy_mech": 152, "target_facing_rotation_matrix": 152, "polar_to_cartesian_coord": 152, "ordin": [152, 806, 854, 856], "warp": 152, "optic": 152, "voxel": 152, "ivy_vis": 152, "coords_to_voxel_grid": 152, "render_pixel_coord": 152, "neural": [152, 789, 1076, 1084, 1098], "radianc": 152, "nerf": 152, "trajectori": 152, "motion": 152, "plan": [152, 1076], "mobil": 152, "ivy_robot": 152, "sample_spline_path": 152, "rigidmobil": 152, "sample_bodi": 152, "drone": 152, "sample_link": 152, "openai": 152, "swimmer": 152, "cumul": [152, 665, 683, 684], "reward": 152, "supervis": 152, "reinforc": 152, "door": [152, 153], "intersect": 152, "cartpol": 152, "mountain_car": 152, "pendulum": 152, "reacher": 152, "condit": [152, 176, 177, 959, 969, 970, 995, 999], "learnt": 152, "ture": 152, "ntm": 152, "egospher": 152, "spatial": 152, "esm": 152, "ivy_memori": 152, "egocentr": 152, "room": 152, "inspir": 152, "doubt": 153, "grate": 153, "probe": 153, "undergo": 153, "remark": 153, "surpris": 153, "lock": 153, "contunu": 153, "minor": 153, "xla": 153, "buffer": 153, "gold": 153, "dex": 153, "scan": 153, "tricki": 153, "predictor": 153, "tight": 153, "driver": 153, "schedul": 153, "dispatch": 153, "Will": 153, "ast": 153, "dynamic": 153, "cond": 153, "jacobian": 153, "checkpoint": 153, "autodiff": 153, "shine": 153, "merci": 153, "superset": 153, "cluster": 153, "compet": 153, "paradigm": 153, "parallelis": [153, 327, 336, 337], "spmd": 153, "mixtur": [153, 750, 752, 755], "expert": 153, "sophist": 153, "depart": 153, "routin": 153, "hundr": 153, "thousand": 153, "deepli": [153, 959, 961], "broadli": 153, "heavili": 153, "supplementari": 153, "Is": 153, "reusabl": 153, "fanci": 153, "fusion": 153, "lose": 153, "vmap": 153, "pmap": 153, "overhead": 153, "ineffici": 153, "eventu": 153, "supplement": 153, "backdoor": 153, "callback": 153, "record": 153, "metric": 153, "somewhat": 153, "outsourc": 153, "inputs_to_ivy_arrai": 154, "gaussian": [164, 165], "leaki": [164, 165, 166], "rectifi": [164, 166, 167], "slope": [164, 166], "39": [164, 166, 377, 403, 406, 483, 486, 750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "85": [164, 166, 377, 448, 451], "88": [164, 166, 377, 448, 451, 806, 844, 846, 1032, 1033, 1036], "269": [164, 168], "731": [164, 168], "214": [164, 168], "978": [164, 168], "422": [164, 169], "155": [164, 169], "0768": [164, 169], "231": [164, 169], "693": [164, 169, 377, 403, 406, 878, 889, 892], "49": [164, 169, 377, 635, 638, 1032, 1033, 1036], "363": [164, 169], "3461": [164, 170, 173], "6491": [164, 170, 173], "535": [164, 170, 173], "55": [164, 175, 789, 795, 806, 844, 846, 1032, 1033, 1036], "501": [164, 175], "array_method": [170, 171, 183, 184, 188, 189, 196, 197, 202, 203, 213, 214, 218, 219, 226, 227, 231, 233, 236, 238, 244, 246, 255, 256, 260, 261, 265, 266, 270, 271, 279, 280, 285, 286, 292, 293, 298, 299, 303, 304, 308, 309, 314, 315, 378, 379, 383, 384, 388, 389, 393, 394, 398, 399, 403, 404, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 585, 586, 590, 591, 595, 596, 600, 601, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 647, 650, 652, 655, 657, 660, 662, 666, 667, 694, 695, 739, 741, 752, 753, 766, 767, 796, 797, 807, 808, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 834, 835, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 854, 855, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 876, 879, 880, 884, 885, 889, 890, 895, 896, 900, 901, 904, 905, 908, 909, 912, 913, 916, 917, 920, 921, 925, 926, 929, 930, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 978, 979, 1001, 1003, 1006, 1008, 1011, 1013, 1016, 1018, 1022, 1023, 1027, 1028, 1033, 1034, 1037, 1038, 1041, 1042, 1045, 1046, 1049, 1050, 1053, 1054, 1057, 1058, 1061, 1062, 1066, 1067, 1071, 1072], "container_method": [170, 172, 174, 180, 182, 183, 186, 188, 190, 192, 193, 195, 196, 198, 200, 202, 204, 206, 207, 209, 210, 212, 213, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 245, 247, 255, 257, 259, 260, 262, 264, 265, 267, 269, 270, 272, 274, 279, 281, 283, 285, 287, 289, 292, 294, 296, 298, 300, 302, 303, 305, 307, 308, 310, 312, 314, 316, 318, 378, 380, 382, 383, 385, 387, 388, 390, 392, 393, 395, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 585, 587, 589, 590, 592, 594, 595, 597, 599, 600, 602, 604, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 666, 668, 670, 678, 679, 694, 696, 698, 739, 740, 742, 752, 754, 756, 757, 758, 760, 762, 763, 765, 766, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 796, 798, 800, 807, 809, 811, 830, 832, 879, 881, 883, 884, 886, 888, 889, 891, 893, 895, 897, 899, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 978, 980, 982, 985, 987, 989, 990, 992, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1014, 1016, 1017, 1019, 1022, 1024, 1026, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1066, 1068, 1070, 1071, 1073, 1075], "faster": [176, 177], "invoc": [176, 177], "718281828459045": 178, "newaxi": 178, "alia": 178, "pi": 178, "141592653589793": 178, "chosen": [179, 180, 181, 377, 413, 416, 995, 999], "distanc": [179, 180, 181], "adjac": [179, 180, 181], "creation_funct": [179, 180, 181, 183, 185, 187, 188, 191, 193, 194, 196, 199, 201, 202, 205, 207, 208, 223, 224, 226, 229, 231, 235, 236, 240, 241, 243, 244, 248], "elsewher": [179, 193, 194, 995, 999], "row": [179, 193, 194, 806, 854, 856, 857, 859, 983, 984, 995, 998], "column": [179, 193, 194, 806, 821, 823, 850, 852, 854, 856, 857, 859], "__dlpack__": [179, 196, 199, 327, 372], "interchang": [179, 196, 199, 894, 943, 946], "cartesian": [179, 213, 216], "ij": [179, 213, 216, 1032, 1033, 1036], "ni": [179, 213, 216], "xi": [179, 213, 216], "n1": [179, 213, 216], "n2": [179, 213, 216], "n3": [179, 213, 216], "xv": [179, 213, 216], "yv": [179, 213, 216], "y1": [179, 244, 248], "y2": [179, 244, 248], "x3": [179, 244, 248, 327, 365], "y3": [179, 244, 248], "intdtyp": [179, 244, 248, 249, 278], "defaultdtyp": [249, 250], "defaultfloatdtyp": [249, 251], "float_dtyp": [249, 277, 320], "defaultintdtyp": [249, 252], "incompat": [249, 265, 268], "data_type_funct": [249, 270, 273, 285, 288], "floatdtyp": [249, 277], "int_dtyp": [249, 278, 321], "followng": [249, 285, 288], "occupi": [249, 285, 288, 292, 295, 665, 722, 723], "ep": [249, 285, 288, 806, 838, 840, 847, 849], "smallest_norm": [249, 285, 288], "4028235e": [249, 285, 288], "7976931348623157e": [249, 285, 288], "55040e": [249, 285, 288], "encapsul": [249, 292, 295], "type1": [249, 313], "type2": [249, 313], "ret1": [249, 322], "ret2": [249, 322], "native_bool": [249, 326], "native_float16": [249, 326], "native_float64": [249, 326], "native_int8": [249, 326], "native_int16": [249, 326], "native_int32": [249, 326], "native_int64": [249, 326], "native_uint8": [249, 326], "native_uint64": [249, 326], "noinspect": [250, 251, 252, 328, 751], "pyshadowingnam": [250, 251, 252, 328, 751], "defaultdevic": [327, 328], "__enter__": 327, "_dev": 327, "__exit__": 327, "exc_typ": 327, "exc_val": 327, "exc_tb": 327, "exit": 327, "devcloneditem": [327, 349], "multidevitem": [327, 329, 332], "devclonedit": 327, "multidevit": [327, 330, 333, 336, 337, 341], "devclonednest": 327, "multidevnest": [327, 331, 334], "devdistitem": 327, "devdistit": 327, "devdistnest": 327, "devmanag": [327, 335], "dev_mapp": 327, "da_dim_s": 327, "safety_factor": 327, "min_dev_dim_s": 327, "max_dev_dim_step_ratio": 327, "min_unit_dev_tune_step": 327, "min_sf_tune_step": 327, "starting_split_factor": 327, "max_split_factor_step_s": 327, "tune_dev_alloc": 327, "tune_dev_split": 327, "mapper": [327, 336, 337], "receivess": 327, "ratio": [327, 750, 771, 773, 1114, 1116], "safe": [327, 336], "oom": 327, "tune": 327, "da_tune_step": 327, "ds_tune_step": 327, "to_clon": 327, "to_distribut": 327, "multidevic": [327, 336], "parallel": [327, 336, 337], "mutlidevic": [327, 336], "repeated_config_check": 327, "tune_step": 327, "devmapp": [327, 337], "ret_fn": [327, 336, 337], "queue_class": [327, 336, 337], "worker_class": [327, 336, 337], "worker": [327, 336, 337], "used_dev": [327, 336], "sf": [327, 336], "devmappermultiproc": 327, "multidev": [327, 338, 339, 340, 359], "profil": 327, "save_dir": [327, 342], "deviceic": [327, 348], "spread": [327, 359], "93": [327, 360, 377, 635, 638], "57": [327, 360, 377, 398, 401, 403, 406, 448, 451, 463, 466], "84": [327, 360, 806, 844, 846, 1032, 1033, 1036], "139740789224448": [327, 361], "physic": [327, 363], "x4": [327, 365], "process_specif": [327, 366, 376], "percentag": [327, 366], "ram": [327, 366, 373, 376], "attr_onli": [327, 367], "chunk": [327, 369, 370, 371], "max_chunk_s": [327, 371], "chunk_siz": [327, 371], "input_ax": [327, 371], "output_ax": [327, 371], "feed": [327, 371], "fist": [327, 371], "stream": [327, 372], "caveat": [327, 372], "portabl": [327, 372, 1076], "gb": [327, 373, 376], "66700032": [327, 373], "589934592": [327, 373], "reset": [327, 375, 665, 746, 747], "magnitud": [377, 378, 381, 393, 396, 585, 588, 806, 857, 859, 860, 862], "princip": [377, 383, 386, 398, 401, 408, 411], "x1_i": [377, 393, 396, 413, 416, 423, 426, 433, 436, 438, 441, 443, 446, 448, 451, 468, 471, 473, 476, 498, 501, 503, 506, 508, 511, 528, 531, 533, 536, 558, 561, 563, 566, 573, 576, 578, 581, 585, 588, 595, 598, 605, 608, 610, 613, 645, 649], "nor": [377, 393, 396, 585, 588, 750, 788], "nearest": [377, 393, 396, 585, 588, 615, 618], "2019": [377, 393, 396, 488, 491, 585, 588], "commut": [377, 393, 396], "524": [377, 398, 401], "644": [377, 398, 401], "201": [377, 398, 401, 615, 618], "305": [377, 398, 401], "412": [377, 398, 401], "44": [377, 403, 406, 615, 618, 635, 638, 640, 643, 806, 844, 846, 995, 999, 1032, 1033, 1036], "809": [377, 403, 406], "569": [377, 403, 406], "733": [377, 403, 406], "68": [377, 403, 406, 977, 978, 981], "notat": [377, 413, 416, 1032, 1033, 1036], "denot": [377, 413, 416, 750, 788], "pair": [377, 413, 416, 789, 805, 806, 812, 814], "quadrant": [377, 413, 416], "3\u03c0": [377, 413, 416], "549": [377, 418, 421], "bitwis": [377, 423, 426, 438, 441, 448, 451, 578, 581], "invert": [377, 428, 431], "arithmet": [377, 443, 446, 1032, 1041, 1044], "propag": [377, 443, 446, 1032, 1037, 1040, 1041, 1044, 1045, 1048, 1053, 1056, 1057, 1060, 1061, 1064], "lh": [377, 443, 446], "rh": [377, 443, 446], "xor": [377, 448, 451, 578, 581], "78": [377, 448, 451, 620, 623, 806, 844, 846, 1032, 1033, 1036], "91": [377, 448, 451, 806, 844, 846, 1032, 1033, 1036], "66": [377, 448, 451, 806, 844, 846, 1032, 1033, 1036], "77": [377, 448, 451, 806, 844, 846, 1032, 1033, 1036], "79": [377, 448, 451], "26": [377, 448, 451, 630, 633, 750, 752, 755, 789, 796, 799, 806, 818, 820, 844, 846, 863, 865, 1032, 1033, 1036], "27": [377, 448, 451, 463, 466, 630, 633, 635, 638, 789, 805, 806, 844, 846, 1032, 1033, 1036], "74": [377, 448, 451], "59": [377, 448, 451], "654": [377, 458, 461], "122": [377, 463, 466], "368": [377, 463, 466], "670": [377, 463, 466], "202": [377, 463, 466, 615, 618], "548": [377, 463, 466, 630, 633], "1490": [377, 463, 466], "72": [377, 483, 486, 488, 491, 750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "accur": [377, 488, 491], "fdlibm": [377, 488, 491], "compliant": [377, 488, 491, 568, 571, 573, 576, 1032, 1037, 1040, 1041, 1044, 1045, 1048], "85e": [377, 488, 491], "632": [377, 488, 491], "20e": [377, 488, 491], "72e": [377, 488, 491], "00": [377, 488, 491], "22000": [377, 488, 491], "442000": [377, 488, 491], "greatest": [377, 493, 496, 498, 501], "threshold": [377, 583, 584], "y_i": [377, 590, 593], "versu": [377, 605, 608], "odd": [377, 605, 608], "modulu": [377, 610, 613], "primarili": [377, 610, 613], "5654": [377, 615, 618], "034": [377, 615, 618], "433": [377, 615, 618], "343": [377, 615, 618], "30": [377, 615, 618, 806, 844, 846, 1032, 1033, 1036, 1089, 1095], "81": [377, 615, 618, 640, 643, 1032, 1033, 1036], "527": [377, 615, 618], "301": [377, 615, 618], "124": [377, 620, 623], "46": [377, 620, 623], "932": [377, 625, 628], "746": [377, 625, 628], "443": [377, 625, 628], "657": [377, 625, 628], "253": [377, 630, 633], "indistinguish": [377, 635, 638], "infinit": [377, 635, 638], "83": [377, 635, 638], "32455532": [377, 635, 638], "89897949": [377, 635, 638], "50": [377, 635, 638, 806, 844, 846, 995, 998, 1032, 1033, 1036], "31": [377, 635, 638], "169": [377, 635, 638], "47": [377, 635, 638], "35": [377, 635, 638, 789, 805, 806, 812, 814, 995, 999, 1032, 1033, 1036], "09": [377, 640, 643, 789, 805], "546": [377, 650, 654], "842": [377, 650, 654], "916": [377, 650, 654, 878, 879, 882], "996": [377, 650, 654], "328": [377, 650, 654], "462": [377, 655, 659], "604": [377, 655, 659], "984": [377, 655, 659], "997": [377, 655, 659], "decim": [377, 660, 664], "inspect": [665, 671, 1080, 1081], "downscal": [665, 677, 678, 680], "60": [665, 683, 806, 844, 846, 1032, 1033, 1036], "default_v": [665, 686], "catch_except": [665, 686], "rev": [665, 686], "with_cal": [665, 686], "arrang": [665, 687], "mod": [665, 691], "max_freq": [665, 692], "num_band": [665, 692], "fourier": [665, 692], "band": [665, 692], "linearli": [665, 692, 806, 854, 856], "oppos": [665, 692], "geometr": [665, 692], "seen_set": [665, 704], "local_set": [665, 704], "decrement": [665, 708], "allow_dupl": [665, 716], "forkserv": [665, 717], "spawn": [665, 717], "hot": [665, 719], "scatter": [665, 719, 722, 723], "overrid": [665, 719], "tmp_dr": [665, 729], "temporari": [665, 729], "min_denomin": [665, 732], "stabil": [665, 732, 733, 1021, 1022, 1025, 1027, 1030], "_min_denomin": [665, 732], "min_bas": [665, 733], "100000023841858": [665, 737], "200000047683716": [665, 737], "299999952316284": [665, 737], "400000095367432": [665, 737], "599999904632568": [665, 737], "gradienttrack": [750, 751], "en": [750, 752, 755, 757, 759], "wikipedia": [750, 752, 755, 757, 759], "wiki": [750, 752, 755, 757, 759], "stochastic_gradient_desc": [750, 752, 755, 757, 759], "004": [750, 752, 755], "009": [750, 752, 755], "86": [750, 752, 755], "28": [750, 752, 755, 789, 792, 795, 796, 799, 806, 844, 846, 1032, 1033, 1036], "0125": [750, 752, 755], "601": [750, 752, 755], "025": [750, 752, 755], "992": [750, 752, 755], "209": [750, 752, 755, 1000, 1001, 1005], "271": [750, 752, 755], "0717": [750, 752, 755], "142": [750, 752, 755], "182": [750, 752, 755], "624": [750, 752, 755, 983, 989, 991], "744": [750, 752, 755], "626": [750, 752, 755], "65": [750, 752, 755, 806, 844, 846, 1032, 1033, 1036], "024": [750, 752, 755], "096": [750, 752, 755], "216": [750, 752, 755], "384": [750, 752, 755], "rate": [750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781, 955, 956, 957, 958, 1098, 1109, 1114, 1115, 1116, 1117, 1118, 1119], "ws_new": [750, 757, 759, 762, 764, 771, 773, 775, 777, 779, 781], "retain": [750, 761], "trust": [750, 771, 773, 1114, 1116], "decai": [750, 771, 773, 775, 777, 1114, 1116, 1117], "layerwis": [750, 775, 777, 1114, 1117], "with_grads_stack": [750, 788], "nwc": [789, 790, 791, 1098, 1099, 1100], "d_out": [789, 790, 791, 792, 793, 794, 795], "ncw": [789, 790, 791, 1098, 1099, 1100], "wio": [789, 790], "output_shap": [789, 791, 793, 795, 1098, 1100, 1102, 1104], "hwio": [789, 792], "unequ": [789, 792], "unsqueez": [789, 792, 796, 799], "ndhwc": [789, 794, 795, 1098, 1103, 1104], "volum": [789, 794], "fd": [789, 794, 795], "ncdhw": [789, 794, 795, 1098, 1103, 1104], "dhwio": [789, 794], "258": [789, 795], "depthwis": [789, 796, 799, 1098, 1105], "hwi": [789, 796, 799], "333": [789, 796, 799], "prob": [789, 801, 983, 984, 1098, 1106], "randomli": [789, 801, 1098, 1106], "bernoulli": [789, 801], "out_featur": [789, 801, 802], "incom": [789, 802], "outer_batch_shap": [789, 802], "inner_batch_shap": [789, 802], "in_featur": [789, 802], "cell": [789, 803, 1098, 1107], "num_queri": [789, 804, 805], "x_feat_dim": [789, 804], "num_kei": [789, 804, 805], "cont_feat_dim": [789, 804], "numhead": [789, 804], "feat_dim": [789, 804, 805], "out_feat_dim": [789, 804], "score": [789, 805], "03": [789, 805, 977, 978, 981], "decomposit": [806, 807, 810, 850, 852, 857, 859], "vif": [806, 812, 814], "92": [806, 815, 817], "293": [806, 815, 817], "46997": [806, 815, 817], "eigendecomposit": [806, 821, 823], "qlq\u1d40": [806, 821, 823], "orthogon": [806, 821, 823], "eig": [806, 821, 823], "eigenvalu": [806, 821, 823, 824, 826], "eigenvector": [806, 821, 823], "prepend": [806, 830, 833], "singular": [806, 838, 840, 847, 849, 857, 859, 860, 862], "toler": [806, 838, 840, 847, 849], "largest_singular_valu": [806, 838, 840, 847, 849], "array_lik": [806, 844, 846], "105": [806, 844, 846, 878, 879, 882], "112": [806, 844, 846, 1032, 1033, 1036], "104": [806, 844, 846, 1032, 1033, 1036], "120": [806, 844, 846], "moor": [806, 847, 849], "penros": [806, 847, 849], "pseudo": [806, 847, 849], "orthonorm": [806, 850, 852, 857, 859], "2d": [806, 853, 1098, 1101, 1102, 1105], "logdet": [806, 853], "coeffici": [806, 854, 856], "usvh": [806, 857, 859], "vh": [806, 857, 859], "hermitian": [806, 857, 859], "et": [806, 857, 859], "cetera": [806, 857, 859], "adjoint": [806, 857, 859], "reconstruct": [806, 857, 859, 1000, 1001, 1005, 1011, 1015], "reconstructed_x": [806, 857, 859], "contract": [806, 863, 865, 1032, 1033, 1036], "doubl": [806, 863, 865], "manhattan": [806, 872, 874], "l2": [806, 872, 874], "euclidean": [806, 872, 874], "mathbf": [806, 875, 877], "mathbb": [806, 875, 877], "skew": [806, 875, 877], "discret": [878, 884, 887], "35667497": [878, 884, 887], "793291": [878, 889, 892], "512926": [878, 889, 892], "before_1": [894, 904, 907, 951, 954], "after_1": [894, 904, 907, 951, 954], "before_n": [894, 904, 907, 951, 954], "after_n": [894, 904, 907, 951, 954], "insert": [894, 908, 911, 959, 964, 995, 996], "manipulation_funct": [894, 908, 911], "reorder": [894, 912, 915], "permut": [894, 916, 919, 943, 946], "repetit": [894, 920, 923, 947, 950], "famili": [894, 939, 942], "intxx": [894, 939, 942], "floatxx": [894, 939, 942], "fomaml_step": 955, "inner_cost_fn": [955, 956, 957], "outer_cost_fn": [955, 956, 957], "inner_grad_step": [955, 956, 957, 958], "inner_learning_r": [955, 956, 957, 958], "inner_optimization_step": [955, 956, 957, 958], "inner_batch_fn": [955, 956, 957], "outer_batch_fn": [955, 956, 957], "average_across_step": [955, 956, 957], "inner_v": [955, 956, 957], "keep_inner_v": [955, 956, 957], "outer_v": [955, 956, 957], "keep_outer_v": [955, 956, 957], "return_inner_v": [955, 956, 957, 958], "num_task": [955, 956, 957, 958], "maml": [955, 956, 957], "recev": [955, 956, 957], "0x7f6e713755e0": [955, 956, 957, 958], "maml_step": 955, "rece": [955, 957], "reptile_step": 955, "cost_fn": [955, 958], "reptil": [955, 958], "receivng": [955, 958], "all_nested_indic": 959, "include_nest": [959, 960], "_index": [959, 960, 970], "_base": [959, 960, 969, 970], "copy_nest": 959, "to_mut": [959, 961, 971], "mutabl": [959, 961, 971], "insert_into_nest_at_index": 959, "insert_into_nest_at_indic": 959, "map_nest_at_index": 959, "map_nest_at_indic": 959, "multi_index_nest": 959, "nested_ani": 959, "check_nest": [959, 969, 970], "conditon": [959, 969, 970], "nested_indices_wher": 959, "stop_after_n_found": [959, 970], "_depth": [959, 971], "_tuple_check_fn": [959, 971], "_list_check_fn": [959, 971], "_dict_check_fn": [959, 971], "nested_multi_map": 959, "nest0": [959, 972], "ivy_arrai": [959, 972], "funciton": [959, 972], "prune_nest_at_index": 959, "prune_nest_at_indic": 959, "set_nest_at_index": 959, "set_nest_at_indic": 959, "111": [959, 976], "xyz": [959, 976], "pqr": [959, 976], "mini": [977, 978, 981, 1112, 1113], "894": [977, 978, 981], "772": [977, 978, 981], "796": [977, 978, 981], "population_s": [983, 984], "num_sampl": [983, 984], "home": [983, 984, 988], "uniformli": [983, 985, 986, 989, 991], "parameter": [983, 988, 989, 991], "6444774682897879": [983, 988], "811": [983, 988], "508": [983, 988], "564": [983, 988], "7268672": [983, 988], "968": [983, 988], "175": [983, 988, 1000, 1001, 1005], "064": [983, 988], "40935726": [983, 988], "556": [983, 988], "26431865": [983, 989, 991], "475": [983, 989, 991], "878": [983, 989, 991], "861": [983, 989, 991], "89150229": [983, 989, 991], "89629126": [983, 989, 991], "94198485": [983, 989, 991], "91405606": [983, 989, 991], "72848724": [983, 989, 991], "7550739": [983, 989, 991], "00109": [983, 989, 991], "occurr": [995, 996, 997, 1000, 1001, 1005], "43": [995, 999], "x_j": [1000, 1001, 1005, 1006, 1010, 1016, 1020], "impli": [1000, 1001, 1005, 1006, 1010, 1016, 1020], "inverse_indic": [1000, 1001, 1005, 1011, 1015], "aggreg": [1000, 1001, 1005], "fourth": [1000, 1001, 1005], "607": [1000, 1001, 1005], "735": [1000, 1001, 1005], "667": [1000, 1001, 1005], "381": [1000, 1001, 1005], "857": [1000, 1001, 1005], "0396": [1000, 1001, 1005], "166": [1000, 1001, 1005], "58": [1000, 1001, 1005], "828": [1000, 1001, 1005], "144": [1000, 1001, 1005], "40501155": [1000, 1001, 1005], "77361575": [1000, 1001, 1005], "97776199": [1000, 1001, 1005], "36831157": [1000, 1001, 1005], "89148434": [1000, 1001, 1005], "9512272": [1000, 1001, 1005], "67542176": [1000, 1001, 1005], "41985657": [1000, 1001, 1005], "23478023": [1000, 1001, 1005], "1141": [1000, 1001, 1005], "8101": [1000, 1001, 1005], "9298": [1000, 1001, 1005], "8460": [1000, 1001, 1005], "2119": [1000, 1001, 1005], "3519": [1000, 1001, 1005], "6252": [1000, 1001, 1005], "4033": [1000, 1001, 1005], "7443": [1000, 1001, 1005], "2577": [1000, 1001, 1005], "3707": [1000, 1001, 1005], "0545": [1000, 1001, 1005], "3238": [1000, 1001, 1005], "5944": [1000, 1001, 1005], "0775": [1000, 1001, 1005], "4327": [1000, 1001, 1005], "176": [1000, 1001, 1005], "889": [1000, 1001, 1005], "763": [1000, 1001, 1005], "071": [1000, 1001, 1005], "262": [1000, 1001, 1005], "456": [1000, 1001, 1005], "114": [1000, 1001, 1005], "349": [1000, 1001, 1005], "615": [1000, 1001, 1005], "594": [1000, 1001, 1005], "335": [1000, 1001, 1005], "212": [1000, 1001, 1005], "457": [1000, 1001, 1005], "827": [1000, 1001, 1005], "set_funct": [1000, 1006, 1010], "ascend": [1021, 1022, 1025], "einstein": [1032, 1033, 1036], "summat": [1032, 1033, 1036], "seq": [1032, 1033, 1036], "jk": [1032, 1033, 1036], "ik": [1032, 1033, 1036], "126": [1032, 1033, 1036], "510": [1032, 1033, 1036], "108": [1032, 1033, 1036], "117": [1032, 1033, 1036], "sentinel": [1032, 1037, 1040, 1045, 1048], "unsign": [1032, 1049, 1052, 1057, 1060], "degre": [1032, 1053, 1056, 1061, 1064], "bessel": [1032, 1053, 1056, 1061, 1064], "8164966": [1032, 1053, 1056], "varianc": [1032, 1061, 1064], "unbias": [1032, 1061, 1064], "simplicit": [1065, 1066, 1069], "grow": 1076, "ai": 1076, "got": 1076, "colab": 1076, "sharp": 1076, "weekli": 1076, "immedi": 1076, "favorit": 1076, "jax_concat": 1076, "tf_concat": 1076, "np_concat": 1076, "mx_concat": 1076, "torch_concat": 1076, "prompt": 1076, "get_devic": 1076, "reduce_prod": 1076, "gradient_imag": 1076, "linalg": 1076, "bilinear_resampl": 1076, "stack_imag": 1076, "neural_net": 1076, "ecosystem": [1076, 1082], "popular": [1076, 1082], "acceler": 1076, "articl": 1076, "lenton2021ivi": 1076, "inter": 1076, "lenton": 1076, "daniel": 1076, "pardo": 1076, "fabio": 1076, "falck": 1076, "fabian": 1076, "jame": 1076, "stephen": 1076, "clark": 1076, "ronald": 1076, "journal": 1076, "arxiv": 1076, "preprint": 1076, "2102": 1076, "02886": 1076, "2021": 1076, "add_array_spec": 1079, "fn_array_spec": 1079, "geglu": 1084, "native_modul": [1087, 1088], "native_module_class": [1087, 1088], "firstlayersiren": 1089, "kaimingnorm": [1089, 1093], "negative_slop": 1089, "Ones": 1089, "siren": 1089, "w0": [1089, 1095], "filter_s": [1098, 1099, 1100], "1d": [1098, 1099, 1100], "conv1dtranspos": 1098, "filter_shap": [1098, 1101, 1102, 1103, 1104, 1105], "conv2dtranspos": 1098, "conv3dtranspos": 1098, "depthwiseconv2d": 1098, "num_channel": [1098, 1105], "bernoul": [1098, 1106], "num_lay": [1098, 1107], "return_sequ": [1098, 1107], "return_st": [1098, 1107], "get_initial_st": [1098, 1107], "dens": [1098, 1108], "multiheadattent": 1098, "query_dim": [1098, 1109], "head_dim": [1098, 1109], "dropout_r": [1098, 1109], "context_dim": [1098, 1109], "with_to_q_fn": [1098, 1109], "with_to_kv_fn": [1098, 1109], "with_to_out_fn": [1098, 1109], "build_mod": [1098, 1109, 1110, 1111], "on_init": [1098, 1109, 1110, 1111], "__call__": [1098, 1109, 1110, 1111], "store_var": [1110, 1111], "arg_stateful_idx": [1110, 1111], "kwarg_stateful_idx": [1110, 1111], "fallback_to_non_compil": [1110, 1111, 1114, 1118], "with_partial_v": [1110, 1111], "initialz": [1110, 1111], "from_cal": [1110, 1111], "check_submod_ret": [1110, 1111], "get_mod_kei": [1110, 1111], "top_mod": [1110, 1111], "mod_depth": [1110, 1111], "mod_height": [1110, 1111], "mod_with_top_mod_key_chain": [1110, 1111], "save_weight": [1110, 1111], "weights_path": [1110, 1111], "show_mod_in_top_mod": [1110, 1111], "upper_depth": [1110, 1111], "lower_depth": [1110, 1111], "show_structur": [1110, 1111], "show_v_in_top_v": [1110, 1111], "sub_mod": [1110, 1111], "show_v": [1110, 1111], "track_submod_call_ord": [1110, 1111], "track_submod_ret": [1110, 1111], "v_with_top_v_key_chain": [1110, 1111], "layernorm": 1112, "normalized_shap": [1112, 1113], "elementwise_affin": [1112, 1113], "trail": [1112, 1113], "affin": [1112, 1113], "init_on_first_step": [1114, 1118], "ignore_miss": [1114, 1118], "overriden": [1114, 1118], "sgd": 1114, "stochast": [1114, 1119], "sub_modul": [1120, 1121]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "softplus"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "dev"], [27, 2, 1, "", "dev_clone"], [27, 2, 1, "", "dev_clone_array"], [27, 2, 1, "", "dev_clone_iter"], [27, 2, 1, "", "dev_clone_nest"], [27, 2, 1, "", "dev_dist"], [27, 2, 1, "", "dev_dist_array"], [27, 2, 1, "", "dev_dist_iter"], [27, 2, 1, "", "dev_dist_nest"], [27, 2, 1, "", "dev_unify"], [27, 2, 1, "", "dev_unify_array"], [27, 2, 1, "", "dev_unify_iter"], [27, 2, 1, "", "dev_unify_nest"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "gelu"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "leaky_relu"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "random_uniform"], [27, 2, 1, "", "relu"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 2, 1, "", "sigmoid"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "softmax"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_device"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[379, 4, 1, "", "abs"], [384, 4, 1, "", "acos"], [389, 4, 1, "", "acosh"], [753, 4, 1, "", "adam_step"], [394, 4, 1, "", "add"], [1067, 4, 1, "", "all"], [667, 4, 1, "", "all_equal"], [1072, 4, 1, "", "any"], [1023, 4, 1, "", "argsort"], [184, 4, 1, "", "asarray"], [399, 4, 1, "", "asin"], [404, 4, 1, "", "asinh"], [256, 4, 1, "", "astype"], [409, 4, 1, "", "atan"], [414, 4, 1, "", "atan2"], [419, 4, 1, "", "atanh"], [880, 4, 1, "", "binary_cross_entropy"], [424, 4, 1, "", "bitwise_and"], [429, 4, 1, "", "bitwise_invert"], [434, 4, 1, "", "bitwise_left_shift"], [439, 4, 1, "", "bitwise_or"], [444, 4, 1, "", "bitwise_right_shift"], [449, 4, 1, "", "bitwise_xor"], [261, 4, 1, "", "broadcast_arrays"], [266, 4, 1, "", "broadcast_to"], [271, 4, 1, "", "can_cast"], [454, 4, 1, "", "ceil"], [808, 4, 1, "", "cholesky"], [896, 4, 1, "", "clip"], [901, 4, 1, "", "concat"], [905, 4, 1, "", "constant_pad"], [459, 4, 1, "", "cos"], [464, 4, 1, "", "cosh"], [813, 4, 1, "", "cross"], [885, 4, 1, "", "cross_entropy"], [797, 4, 1, "", "depthwise_conv2d"], [816, 4, 1, "", "det"], [819, 4, 1, "", "diagonal"], [469, 4, 1, "", "divide"], [280, 4, 1, "", "dtype"], [822, 4, 1, "", "eigh"], [825, 4, 1, "", "eigvalsh"], [1034, 4, 1, "", "einsum"], [189, 4, 1, "", "empty_like"], [474, 4, 1, "", "equal"], [479, 4, 1, "", "erf"], [484, 4, 1, "", "exp"], [909, 4, 1, "", "expand_dims"], [489, 4, 1, "", "expm1"], [286, 4, 1, "", "finfo"], [913, 4, 1, "", "flip"], [494, 4, 1, "", "floor"], [499, 4, 1, "", "floor_divide"], [197, 4, 1, "", "from_dlpack"], [203, 4, 1, "", "full_like"], [695, 4, 1, "", "gather_nd"], [504, 4, 1, "", "greater"], [509, 4, 1, "", "greater_equal"], [293, 4, 1, "", "iinfo"], [828, 4, 1, "", "inv"], [299, 4, 1, "", "is_bool_dtype"], [304, 4, 1, "", "is_float_dtype"], [309, 4, 1, "", "is_int_dtype"], [767, 4, 1, "", "is_variable"], [514, 4, 1, "", "isfinite"], [519, 4, 1, "", "isinf"], [524, 4, 1, "", "isnan"], [979, 4, 1, "", "layer_norm"], [529, 4, 1, "", "less"], [534, 4, 1, "", "less_equal"], [539, 4, 1, "", "log"], [544, 4, 1, "", "log10"], [549, 4, 1, "", "log1p"], [554, 4, 1, "", "log2"], [559, 4, 1, "", "logaddexp"], [564, 4, 1, "", "logical_and"], [569, 4, 1, "", "logical_not"], [574, 4, 1, "", "logical_or"], [579, 4, 1, "", "logical_xor"], [831, 4, 1, "", "matmul"], [835, 4, 1, "", "matrix_norm"], [839, 4, 1, "", "matrix_rank"], [842, 4, 1, "", "matrix_transpose"], [1038, 4, 1, "", "max"], [1042, 4, 1, "", "mean"], [214, 4, 1, "", "meshgrid"], [1046, 4, 1, "", "min"], [586, 4, 1, "", "multiply"], [219, 4, 1, "", "native_array"], [591, 4, 1, "", "negative"], [596, 4, 1, "", "not_equal"], [227, 4, 1, "", "ones_like"], [845, 4, 1, "", "outer"], [917, 4, 1, "", "permute_dims"], [848, 4, 1, "", "pinv"], [601, 4, 1, "", "positive"], [606, 4, 1, "", "pow"], [1050, 4, 1, "", "prod"], [851, 4, 1, "", "qr"], [611, 4, 1, "", "remainder"], [921, 4, 1, "", "repeat"], [926, 4, 1, "", "reshape"], [315, 4, 1, "", "result_type"], [930, 4, 1, "", "roll"], [616, 4, 1, "", "round"], [621, 4, 1, "", "sign"], [626, 4, 1, "", "sin"], [631, 4, 1, "", "sinh"], [171, 4, 1, "", "softplus"], [855, 4, 1, "", "solve"], [1028, 4, 1, "", "sort"], [890, 4, 1, "", "sparse_cross_entropy"], [636, 4, 1, "", "sqrt"], [641, 4, 1, "", "square"], [936, 4, 1, "", "squeeze"], [940, 4, 1, "", "stack"], [1054, 4, 1, "", "std"], [647, 4, 1, "", "subtract"], [1058, 4, 1, "", "sum"], [858, 4, 1, "", "svd"], [861, 4, 1, "", "svdvals"], [944, 4, 1, "", "swapaxes"], [652, 4, 1, "", "tan"], [657, 4, 1, "", "tanh"], [864, 4, 1, "", "tensordot"], [948, 4, 1, "", "tile"], [741, 4, 1, "", "to_numpy"], [867, 4, 1, "", "trace"], [233, 4, 1, "", "tril"], [238, 4, 1, "", "triu"], [662, 4, 1, "", "trunc"], [1003, 4, 1, "", "unique_all"], [1008, 4, 1, "", "unique_counts"], [1013, 4, 1, "", "unique_inverse"], [1018, 4, 1, "", "unique_values"], [1062, 4, 1, "", "var"], [870, 4, 1, "", "vecdot"], [873, 4, 1, "", "vector_norm"], [876, 4, 1, "", "vector_to_skew_symmetric_matrix"], [952, 4, 1, "", "zero_pad"], [246, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_ivy"], [31, 4, 1, "", "args_to_native"], [32, 4, 1, "", "to_ivy"], [33, 4, 1, "", "to_native"]], "ivy.array.creation": [[35, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 2, 1, "", "asarray"], [35, 2, 1, "", "empty_like"], [35, 2, 1, "", "from_dlpack"], [35, 2, 1, "", "full_like"], [35, 2, 1, "", "meshgrid"], [35, 2, 1, "", "native_array"], [35, 2, 1, "", "ones_like"], [35, 2, 1, "", "tril"], [35, 2, 1, "", "triu"], [35, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 2, 1, "", "astype"], [37, 2, 1, "", "broadcast_arrays"], [37, 2, 1, "", "broadcast_to"], [37, 2, 1, "", "can_cast"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "finfo"], [37, 2, 1, "", "iinfo"], [37, 2, 1, "", "is_bool_dtype"], [37, 2, 1, "", "is_float_dtype"], [37, 2, 1, "", "is_int_dtype"], [37, 2, 1, "", "result_type"]], "ivy.array.device": [[39, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[41, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 2, 1, "", "abs"], [41, 2, 1, "", "acos"], [41, 2, 1, "", "acosh"], [41, 2, 1, "", "add"], [41, 2, 1, "", "asin"], [41, 2, 1, "", "asinh"], [41, 2, 1, "", "atan"], [41, 2, 1, "", "atan2"], [41, 2, 1, "", "atanh"], [41, 2, 1, "", "bitwise_and"], [41, 2, 1, "", "bitwise_invert"], [41, 2, 1, "", "bitwise_left_shift"], [41, 2, 1, "", "bitwise_or"], [41, 2, 1, "", "bitwise_right_shift"], [41, 2, 1, "", "bitwise_xor"], [41, 2, 1, "", "ceil"], [41, 2, 1, "", "cos"], [41, 2, 1, "", "cosh"], [41, 2, 1, "", "divide"], [41, 2, 1, "", "equal"], [41, 2, 1, "", "erf"], [41, 2, 1, "", "exp"], [41, 2, 1, "", "expm1"], [41, 2, 1, "", "floor"], [41, 2, 1, "", "floor_divide"], [41, 2, 1, "", "greater"], [41, 2, 1, "", "greater_equal"], [41, 2, 1, "", "isfinite"], [41, 2, 1, "", "isinf"], [41, 2, 1, "", "isnan"], [41, 2, 1, "", "less"], [41, 2, 1, "", "less_equal"], [41, 2, 1, "", "log"], [41, 2, 1, "", "log10"], [41, 2, 1, "", "log1p"], [41, 2, 1, "", "log2"], [41, 2, 1, "", "logaddexp"], [41, 2, 1, "", "logical_and"], [41, 2, 1, "", "logical_not"], [41, 2, 1, "", "logical_or"], [41, 2, 1, "", "logical_xor"], [41, 2, 1, "", "multiply"], [41, 2, 1, "", "negative"], [41, 2, 1, "", "not_equal"], [41, 2, 1, "", "positive"], [41, 2, 1, "", "pow"], [41, 2, 1, "", "remainder"], [41, 2, 1, "", "round"], [41, 2, 1, "", "sign"], [41, 2, 1, "", "sin"], [41, 2, 1, "", "sinh"], [41, 2, 1, "", "sqrt"], [41, 2, 1, "", "square"], [41, 2, 1, "", "subtract"], [41, 2, 1, "", "tan"], [41, 2, 1, "", "tanh"], [41, 2, 1, "", "trunc"]], "ivy.array.general": [[43, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 2, 1, "", "all_equal"], [43, 2, 1, "", "gather_nd"], [43, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 2, 1, "", "adam_step"], [45, 2, 1, "", "is_variable"]], "ivy.array.image": [[47, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 2, 1, "", "cholesky"], [51, 2, 1, "", "cross"], [51, 2, 1, "", "det"], [51, 2, 1, "", "diagonal"], [51, 2, 1, "", "eigh"], [51, 2, 1, "", "eigvalsh"], [51, 2, 1, "", "inv"], [51, 2, 1, "", "matmul"], [51, 2, 1, "", "matrix_norm"], [51, 2, 1, "", "matrix_rank"], [51, 2, 1, "", "matrix_transpose"], [51, 2, 1, "", "outer"], [51, 2, 1, "", "pinv"], [51, 2, 1, "", "qr"], [51, 2, 1, "", "solve"], [51, 2, 1, "", "svd"], [51, 2, 1, "", "svdvals"], [51, 2, 1, "", "tensordot"], [51, 2, 1, "", "trace"], [51, 2, 1, "", "vecdot"], [51, 2, 1, "", "vector_norm"], [51, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "cross_entropy"], [53, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 2, 1, "", "clip"], [55, 2, 1, "", "concat"], [55, 2, 1, "", "constant_pad"], [55, 2, 1, "", "expand_dims"], [55, 2, 1, "", "flip"], [55, 2, 1, "", "permute_dims"], [55, 2, 1, "", "repeat"], [55, 2, 1, "", "reshape"], [55, 2, 1, "", "roll"], [55, 2, 1, "", "squeeze"], [55, 2, 1, "", "stack"], [55, 2, 1, "", "swapaxes"], [55, 2, 1, "", "tile"], [55, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 2, 1, "", "layer_norm"]], "ivy.array.random": [[59, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[61, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 2, 1, "", "unique_all"], [63, 2, 1, "", "unique_counts"], [63, 2, 1, "", "unique_inverse"], [63, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 2, 1, "", "argsort"], [65, 2, 1, "", "sort"]], "ivy.array.statistical": [[67, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 2, 1, "", "einsum"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "prod"], [67, 2, 1, "", "std"], [67, 2, 1, "", "sum"], [67, 2, 1, "", "var"]], "ivy.array.utility": [[69, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 2, 1, "", "all"], [69, 2, 1, "", "any"]], "ivy.array.wrapping": [[71, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [154, 0, 0, "-", "func_wrapper"], [1079, 0, 0, "-", "inspection"], [1083, 0, 0, "-", "stateful"], [1123, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 2, 1, "", "softplus"], [74, 2, 1, "", "static_softplus"]], "ivy.container.base": [[76, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__setitem__"], [76, 2, 1, "", "all_false"], [76, 2, 1, "", "all_key_chains"], [76, 2, 1, "", "all_true"], [76, 2, 1, "", "arrays_as_lists"], [76, 2, 1, "", "as_arrays"], [76, 2, 1, "", "as_bools"], [76, 2, 1, "", "as_ones"], [76, 2, 1, "", "as_random_uniform"], [76, 2, 1, "", "as_variables"], [76, 2, 1, "", "as_zeros"], [76, 2, 1, "", "assert_contains_sub_container"], [76, 2, 1, "", "assert_contains_sub_structure"], [76, 2, 1, "", "assert_identical"], [76, 2, 1, "", "assert_identical_structure"], [76, 2, 1, "", "at_key_chain"], [76, 2, 1, "", "at_key_chains"], [76, 2, 1, "", "at_keys"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "combine"], [76, 2, 1, "", "common_key_chains"], [76, 3, 1, "", "config"], [76, 2, 1, "", "contains_sub_container"], [76, 2, 1, "", "contains_sub_structure"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "create_if_absent"], [76, 2, 1, "", "cutoff_at_depth"], [76, 2, 1, "", "cutoff_at_height"], [76, 2, 1, "", "deep_copy"], [76, 3, 1, "", "dev"], [76, 2, 1, "", "dev_clone"], [76, 2, 1, "", "dev_dist"], [76, 3, 1, "", "dev_str"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "dtype"], [76, 2, 1, "", "einops_rearrange"], [76, 2, 1, "", "einops_reduce"], [76, 2, 1, "", "einops_repeat"], [76, 2, 1, "", "find_sub_container"], [76, 2, 1, "", "find_sub_structure"], [76, 2, 1, "", "flatten_key_chain"], [76, 2, 1, "", "flatten_key_chains"], [76, 2, 1, "", "format_key_chains"], [76, 2, 1, "", "from_disk_as_hdf5"], [76, 2, 1, "", "from_disk_as_json"], [76, 2, 1, "", "from_disk_as_pickled"], [76, 2, 1, "", "from_flat_list"], [76, 2, 1, "", "from_numpy"], [76, 2, 1, "", "gather"], [76, 2, 1, "", "gather_nd"], [76, 2, 1, "", "h5_file_size"], [76, 2, 1, "", "handle_inplace"], [76, 2, 1, "", "has_key"], [76, 2, 1, "", "has_key_chain"], [76, 2, 1, "", "has_nans"], [76, 2, 1, "", "identical"], [76, 2, 1, "", "identical_array_shapes"], [76, 2, 1, "", "identical_configs"], [76, 2, 1, "", "identical_structure"], [76, 2, 1, "", "if_exists"], [76, 2, 1, "", "inplace_update"], [76, 3, 1, "", "ivy"], [76, 2, 1, "", "key_chains_containing"], [76, 2, 1, "", "list_join"], [76, 2, 1, "", "list_stack"], [76, 2, 1, "", "map"], [76, 2, 1, "", "map_conts"], [76, 2, 1, "", "matrix_norm"], [76, 3, 1, "", "max_depth"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "multi_map"], [76, 2, 1, "", "multi_map_in_static_method"], [76, 2, 1, "", "num_arrays"], [76, 2, 1, "", "overwrite_at_key_chain"], [76, 2, 1, "", "overwrite_at_key_chains"], [76, 2, 1, "", "prune_empty"], [76, 2, 1, "", "prune_key_chain"], [76, 2, 1, "", "prune_key_chains"], [76, 2, 1, "", "prune_key_from_key_chains"], [76, 2, 1, "", "prune_keys"], [76, 2, 1, "", "prune_keys_from_key_chains"], [76, 2, 1, "", "reduce"], [76, 2, 1, "", "remove_key_length_limit"], [76, 2, 1, "", "remove_print_limit"], [76, 2, 1, "", "reshape_like"], [76, 2, 1, "", "restructure"], [76, 2, 1, "", "restructure_key_chains"], [76, 2, 1, "", "set_at_key_chain"], [76, 2, 1, "", "set_at_key_chains"], [76, 2, 1, "", "set_at_keys"], [76, 2, 1, "", "set_framework"], [76, 2, 1, "", "set_ivy_backend"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "shapes"], [76, 2, 1, "", "show"], [76, 2, 1, "", "show_sub_container"], [76, 2, 1, "", "shuffle"], [76, 2, 1, "", "shuffle_h5_file"], [76, 2, 1, "", "size_ordered_arrays"], [76, 2, 1, "", "slice_keys"], [76, 2, 1, "", "slice_via_key"], [76, 2, 1, "", "sort_by_key"], [76, 2, 1, "", "split"], [76, 2, 1, "", "stop_gradients"], [76, 2, 1, "", "structural_diff"], [76, 2, 1, "", "to_device"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_disk_as_hdf5"], [76, 2, 1, "", "to_disk_as_json"], [76, 2, 1, "", "to_disk_as_pickled"], [76, 2, 1, "", "to_flat_list"], [76, 2, 1, "", "to_iterator"], [76, 2, 1, "", "to_iterator_keys"], [76, 2, 1, "", "to_iterator_values"], [76, 2, 1, "", "to_ivy"], [76, 2, 1, "", "to_jsonable"], [76, 2, 1, "", "to_list"], [76, 2, 1, "", "to_multi_dev"], [76, 2, 1, "", "to_native"], [76, 2, 1, "", "to_numpy"], [76, 2, 1, "", "to_raw"], [76, 2, 1, "", "trim_key"], [76, 2, 1, "", "try_kc"], [76, 2, 1, "", "unify"], [76, 2, 1, "", "unstack"], [76, 2, 1, "", "update_config"], [76, 2, 1, "", "vector_norm"], [76, 2, 1, "", "with_default_key_color"], [76, 2, 1, "", "with_entries_as_lists"], [76, 2, 1, "", "with_ivy_backend"], [76, 2, 1, "", "with_key_length_limit"], [76, 2, 1, "", "with_print_indent"], [76, 2, 1, "", "with_print_limit"], [76, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 1, 1, "", "Container"], [79, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[78, 2, 1, "", "__add__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__radd__"], [78, 2, 1, "", "arange"], [78, 2, 1, "", "arg_info"], [78, 2, 1, "", "arg_names"], [78, 2, 1, "", "argmax"], [78, 2, 1, "", "argmin"], [78, 2, 1, "", "array"], [78, 2, 1, "", "array_equal"], [78, 2, 1, "", "arrays_equal"], [78, 2, 1, "", "as_ivy_dev"], [78, 2, 1, "", "as_ivy_dtype"], [78, 2, 1, "", "as_native_dev"], [78, 2, 1, "", "as_native_dtype"], [78, 2, 1, "", "asarray"], [78, 2, 1, "", "assert_supports_inplace"], [78, 2, 1, "", "cache_fn"], [78, 2, 1, "", "clear_mem_on_dev"], [78, 2, 1, "", "clip_matrix_norm"], [78, 2, 1, "", "closest_valid_dtype"], [78, 2, 1, "", "container_types"], [78, 2, 1, "", "conv1d"], [78, 2, 1, "", "conv1d_transpose"], [78, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv2d_transpose"], [78, 2, 1, "", "conv3d"], [78, 2, 1, "", "conv3d_transpose"], [78, 2, 1, "", "copy_array"], [78, 2, 1, "", "cross"], [78, 2, 1, "", "cumprod"], [78, 2, 1, "", "cumsum"], [78, 2, 1, "", "current_backend"], [78, 2, 1, "", "current_backend_str"], [78, 2, 1, "", "default"], [78, 2, 1, "", "default_device"], [78, 2, 1, "", "default_dtype"], [78, 2, 1, "", "default_float_dtype"], [78, 2, 1, "", "default_int_dtype"], [78, 2, 1, "", "det"], [78, 2, 1, "", "dev_clone_array"], [78, 2, 1, "", "dev_clone_iter"], [78, 2, 1, "", "dev_clone_nest"], [78, 2, 1, "", "dev_dist_array"], [78, 2, 1, "", "dev_dist_iter"], [78, 2, 1, "", "dev_dist_nest"], [78, 2, 1, "", "dev_unify"], [78, 2, 1, "", "dev_unify_array"], [78, 2, 1, "", "dev_unify_iter"], [78, 2, 1, "", "dev_unify_nest"], [78, 2, 1, "", "dev_util"], [78, 2, 1, "", "diagonal"], [78, 2, 1, "", "dropout"], [78, 2, 1, "", "dtype_bits"], [78, 2, 1, "", "eigh"], [78, 2, 1, "", "eigvalsh"], [78, 2, 1, "", "empty"], [78, 2, 1, "", "execute_with_gradients"], [78, 2, 1, "", "exists"], [78, 2, 1, "", "eye"], [78, 2, 1, "", "floormod"], [78, 2, 1, "", "fourier_encode"], [78, 2, 1, "", "full"], [78, 2, 1, "", "function_supported_dtypes"], [78, 2, 1, "", "function_unsupported_dtypes"], [78, 2, 1, "", "gelu"], [78, 2, 1, "", "get_all_arrays_in_memory"], [78, 2, 1, "", "get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "get_min_base"], [78, 2, 1, "", "get_min_denominator"], [78, 2, 1, "", "get_nestable_mode"], [78, 2, 1, "", "get_num_dims"], [78, 2, 1, "", "get_referrers_recursive"], [78, 2, 1, "", "gpu_is_available"], [78, 2, 1, "", "handle_nestable"], [78, 2, 1, "", "handle_out_argument"], [78, 2, 1, "", "indices_where"], [78, 2, 1, "", "infer_device"], [78, 2, 1, "", "infer_dtype"], [78, 2, 1, "", "inplace_arrays_supported"], [78, 2, 1, "", "inplace_decrement"], [78, 2, 1, "", "inplace_increment"], [78, 2, 1, "", "inplace_variables_supported"], [78, 2, 1, "", "inputs_to_native_arrays"], [78, 2, 1, "", "inv"], [78, 2, 1, "", "invalid_dtype"], [78, 2, 1, "", "is_ivy_container"], [78, 2, 1, "", "leaky_relu"], [78, 2, 1, "", "linear"], [78, 2, 1, "", "linspace"], [78, 2, 1, "", "logspace"], [78, 2, 1, "", "lstm_update"], [78, 2, 1, "", "match_kwargs"], [78, 2, 1, "", "matrix_power"], [78, 2, 1, "", "matrix_rank"], [78, 2, 1, "", "matrix_transpose"], [78, 2, 1, "", "multi_head_attention"], [78, 2, 1, "", "multinomial"], [78, 2, 1, "", "multiprocessing"], [78, 2, 1, "", "nonzero"], [78, 2, 1, "", "num_arrays_in_memory"], [78, 2, 1, "", "num_cpu_cores"], [78, 2, 1, "", "num_gpus"], [78, 2, 1, "", "num_ivy_arrays_on_dev"], [78, 2, 1, "", "one_hot"], [78, 2, 1, "", "ones"], [78, 2, 1, "", "outer"], [78, 2, 1, "", "outputs_to_ivy_arrays"], [78, 2, 1, "", "percent_used_mem_on_dev"], [78, 2, 1, "", "pinv"], [78, 2, 1, "", "print_all_arrays_in_memory"], [78, 2, 1, "", "print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "promote_types"], [78, 2, 1, "", "qr"], [78, 2, 1, "", "queue_timeout"], [78, 2, 1, "", "randint"], [78, 2, 1, "", "random_normal"], [78, 2, 1, "", "relu"], [78, 2, 1, "", "scaled_dot_product_attention"], [78, 2, 1, "", "scatter_flat"], [78, 2, 1, "", "scatter_nd"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "set_default_device"], [78, 2, 1, "", "set_default_dtype"], [78, 2, 1, "", "set_default_float_dtype"], [78, 2, 1, "", "set_default_int_dtype"], [78, 2, 1, "", "set_min_base"], [78, 2, 1, "", "set_min_denominator"], [78, 2, 1, "", "set_nestable_mode"], [78, 2, 1, "", "set_queue_timeout"], [78, 2, 1, "", "set_shape_array_mode"], [78, 2, 1, "", "set_split_factor"], [78, 2, 1, "", "set_tmp_dir"], [78, 2, 1, "", "set_with_grads"], [78, 2, 1, "", "shape_array_mode"], [78, 2, 1, "", "sigmoid"], [78, 2, 1, "", "slogdet"], [78, 2, 1, "", "softmax"], [78, 2, 1, "", "solve"], [78, 2, 1, "", "split_factor"], [78, 2, 1, "", "split_func_call"], [78, 2, 1, "", "stable_divide"], [78, 2, 1, "", "stable_pow"], [78, 2, 1, "", "static_arg_info"], [78, 2, 1, "", "static_arg_names"], [78, 2, 1, "", "static_argmax"], [78, 2, 1, "", "static_argmin"], [78, 2, 1, "", "static_array"], [78, 2, 1, "", "static_array_equal"], [78, 2, 1, "", "static_arrays_equal"], [78, 2, 1, "", "static_as_ivy_dev"], [78, 2, 1, "", "static_as_ivy_dtype"], [78, 2, 1, "", "static_as_native_dev"], [78, 2, 1, "", "static_as_native_dtype"], [78, 2, 1, "", "static_assert_supports_inplace"], [78, 2, 1, "", "static_cache_fn"], [78, 2, 1, "", "static_clear_mem_on_dev"], [78, 2, 1, "", "static_clip_matrix_norm"], [78, 2, 1, "", "static_clip_vector_norm"], [78, 2, 1, "", "static_closest_valid_dtype"], [78, 2, 1, "", "static_concat"], [78, 2, 1, "", "static_constant_pad"], [78, 2, 1, "", "static_container_types"], [78, 2, 1, "", "static_conv1d"], [78, 2, 1, "", "static_conv1d_transpose"], [78, 2, 1, "", "static_conv2d"], [78, 2, 1, "", "static_conv2d_transpose"], [78, 2, 1, "", "static_conv3d"], [78, 2, 1, "", "static_conv3d_transpose"], [78, 2, 1, "", "static_copy_array"], [78, 2, 1, "", "static_cross"], [78, 2, 1, "", "static_cumprod"], [78, 2, 1, "", "static_cumsum"], [78, 2, 1, "", "static_current_backend"], [78, 2, 1, "", "static_current_backend_str"], [78, 2, 1, "", "static_default"], [78, 2, 1, "", "static_default_device"], [78, 2, 1, "", "static_default_dtype"], [78, 2, 1, "", "static_default_float_dtype"], [78, 2, 1, "", "static_default_int_dtype"], [78, 2, 1, "", "static_det"], [78, 2, 1, "", "static_dev"], [78, 2, 1, "", "static_dev_clone"], [78, 2, 1, "", "static_dev_clone_array"], [78, 2, 1, "", "static_dev_clone_iter"], [78, 2, 1, "", "static_dev_clone_nest"], [78, 2, 1, "", "static_dev_dist"], [78, 2, 1, "", "static_dev_dist_array"], [78, 2, 1, "", "static_dev_dist_iter"], [78, 2, 1, "", "static_dev_dist_nest"], [78, 2, 1, "", "static_dev_unify"], [78, 2, 1, "", "static_dev_unify_array"], [78, 2, 1, "", "static_dev_unify_iter"], [78, 2, 1, "", "static_dev_unify_nest"], [78, 2, 1, "", "static_dev_util"], [78, 2, 1, "", "static_diagonal"], [78, 2, 1, "", "static_dropout"], [78, 2, 1, "", "static_dtype_bits"], [78, 2, 1, "", "static_eigh"], [78, 2, 1, "", "static_eigvalsh"], [78, 2, 1, "", "static_einops_rearrange"], [78, 2, 1, "", "static_einops_reduce"], [78, 2, 1, "", "static_einops_repeat"], [78, 2, 1, "", "static_einsum"], [78, 2, 1, "", "static_empty"], [78, 2, 1, "", "static_execute_with_gradients"], [78, 2, 1, "", "static_exists"], [78, 2, 1, "", "static_expand_dims"], [78, 2, 1, "", "static_flip"], [78, 2, 1, "", "static_floormod"], [78, 2, 1, "", "static_fourier_encode"], [78, 2, 1, "", "static_full"], [78, 2, 1, "", "static_function_supported_dtypes"], [78, 2, 1, "", "static_function_unsupported_dtypes"], [78, 2, 1, "", "static_gather"], [78, 2, 1, "", "static_gelu"], [78, 2, 1, "", "static_get_all_arrays_in_memory"], [78, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_get_min_base"], [78, 2, 1, "", "static_get_min_denominator"], [78, 2, 1, "", "static_get_nestable_mode"], [78, 2, 1, "", "static_get_num_dims"], [78, 2, 1, "", "static_get_referrers_recursive"], [78, 2, 1, "", "static_gpu_is_available"], [78, 2, 1, "", "static_handle_nestable"], [78, 2, 1, "", "static_handle_out_argument"], [78, 2, 1, "", "static_has_nans"], [78, 2, 1, "", "static_indices_where"], [78, 2, 1, "", "static_infer_device"], [78, 2, 1, "", "static_infer_dtype"], [78, 2, 1, "", "static_inplace_arrays_supported"], [78, 2, 1, "", "static_inplace_decrement"], [78, 2, 1, "", "static_inplace_increment"], [78, 2, 1, "", "static_inplace_update"], [78, 2, 1, "", "static_inplace_variables_supported"], [78, 2, 1, "", "static_inputs_to_native_arrays"], [78, 2, 1, "", "static_inv"], [78, 2, 1, "", "static_invalid_dtype"], [78, 2, 1, "", "static_is_array"], [78, 2, 1, "", "static_is_ivy_array"], [78, 2, 1, "", "static_is_ivy_container"], [78, 2, 1, "", "static_is_native_array"], [78, 2, 1, "", "static_leaky_relu"], [78, 2, 1, "", "static_linear"], [78, 2, 1, "", "static_lstm_update"], [78, 2, 1, "", "static_match_kwargs"], [78, 2, 1, "", "static_matmul"], [78, 2, 1, "", "static_matrix_norm"], [78, 2, 1, "", "static_matrix_power"], [78, 2, 1, "", "static_matrix_rank"], [78, 2, 1, "", "static_matrix_transpose"], [78, 2, 1, "", "static_max"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_mean"], [78, 2, 1, "", "static_min"], [78, 2, 1, "", "static_minimum"], [78, 2, 1, "", "static_multi_head_attention"], [78, 2, 1, "", "static_multinomial"], [78, 2, 1, "", "static_multiprocessing"], [78, 2, 1, "", "static_nonzero"], [78, 2, 1, "", "static_num_arrays_in_memory"], [78, 2, 1, "", "static_num_cpu_cores"], [78, 2, 1, "", "static_num_gpus"], [78, 2, 1, "", "static_num_ivy_arrays_on_dev"], [78, 2, 1, "", "static_one_hot"], [78, 2, 1, "", "static_outer"], [78, 2, 1, "", "static_outputs_to_ivy_arrays"], [78, 2, 1, "", "static_percent_used_mem_on_dev"], [78, 2, 1, "", "static_permute_dims"], [78, 2, 1, "", "static_pinv"], [78, 2, 1, "", "static_print_all_arrays_in_memory"], [78, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_prod"], [78, 2, 1, "", "static_promote_types"], [78, 2, 1, "", "static_qr"], [78, 2, 1, "", "static_queue_timeout"], [78, 2, 1, "", "static_random_normal"], [78, 2, 1, "", "static_relu"], [78, 2, 1, "", "static_reshape"], [78, 2, 1, "", "static_scaled_dot_product_attention"], [78, 2, 1, "", "static_scatter_flat"], [78, 2, 1, "", "static_scatter_nd"], [78, 2, 1, "", "static_seed"], [78, 2, 1, "", "static_set_default_device"], [78, 2, 1, "", "static_set_default_dtype"], [78, 2, 1, "", "static_set_default_float_dtype"], [78, 2, 1, "", "static_set_default_int_dtype"], [78, 2, 1, "", "static_set_min_base"], [78, 2, 1, "", "static_set_min_denominator"], [78, 2, 1, "", "static_set_nestable_mode"], [78, 2, 1, "", "static_set_queue_timeout"], [78, 2, 1, "", "static_set_shape_array_mode"], [78, 2, 1, "", "static_set_split_factor"], [78, 2, 1, "", "static_set_tmp_dir"], [78, 2, 1, "", "static_set_with_grads"], [78, 2, 1, "", "static_shape"], [78, 2, 1, "", "static_shape_array_mode"], [78, 2, 1, "", "static_shuffle"], [78, 2, 1, "", "static_sigmoid"], [78, 2, 1, "", "static_slogdet"], [78, 2, 1, "", "static_softmax"], [78, 2, 1, "", "static_solve"], [78, 2, 1, "", "static_split"], [78, 2, 1, "", "static_split_factor"], [78, 2, 1, "", "static_split_func_call"], [78, 2, 1, "", "static_squeeze"], [78, 2, 1, "", "static_stable_divide"], [78, 2, 1, "", "static_stable_pow"], [78, 2, 1, "", "static_stack"], [78, 2, 1, "", "static_std"], [78, 2, 1, "", "static_stop_gradient"], [78, 2, 1, "", "static_sum"], [78, 2, 1, "", "static_supports_inplace"], [78, 2, 1, "", "static_svd"], [78, 2, 1, "", "static_svdvals"], [78, 2, 1, "", "static_swapaxes"], [78, 2, 1, "", "static_tensordot"], [78, 2, 1, "", "static_tile"], [78, 2, 1, "", "static_tmp_dir"], [78, 2, 1, "", "static_to_device"], [78, 2, 1, "", "static_to_ivy_shape"], [78, 2, 1, "", "static_to_list"], [78, 2, 1, "", "static_to_native_arrays_and_back"], [78, 2, 1, "", "static_to_native_shape"], [78, 2, 1, "", "static_to_scalar"], [78, 2, 1, "", "static_total_mem_on_dev"], [78, 2, 1, "", "static_tpu_is_available"], [78, 2, 1, "", "static_trace"], [78, 2, 1, "", "static_try_else_none"], [78, 2, 1, "", "static_type_promote_arrays"], [78, 2, 1, "", "static_unset_default_device"], [78, 2, 1, "", "static_unset_default_dtype"], [78, 2, 1, "", "static_unset_default_float_dtype"], [78, 2, 1, "", "static_unset_default_int_dtype"], [78, 2, 1, "", "static_unset_nestable_mode"], [78, 2, 1, "", "static_unset_shape_array_mode"], [78, 2, 1, "", "static_unset_with_grads"], [78, 2, 1, "", "static_unstack"], [78, 2, 1, "", "static_used_mem_on_dev"], [78, 2, 1, "", "static_valid_dtype"], [78, 2, 1, "", "static_value_is_nan"], [78, 2, 1, "", "static_var"], [78, 2, 1, "", "static_variable"], [78, 2, 1, "", "static_variable_data"], [78, 2, 1, "", "static_vecdot"], [78, 2, 1, "", "static_vector_norm"], [78, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "static_where"], [78, 2, 1, "", "static_with_grads"], [78, 2, 1, "", "static_zero_pad"], [78, 2, 1, "", "stop_gradient"], [78, 2, 1, "", "supports_inplace"], [78, 2, 1, "", "svd"], [78, 2, 1, "", "svdvals"], [78, 2, 1, "", "tensordot"], [78, 2, 1, "", "tmp_dir"], [78, 2, 1, "", "to_ivy_shape"], [78, 2, 1, "", "to_native_arrays_and_back"], [78, 2, 1, "", "to_native_shape"], [78, 2, 1, "", "to_scalar"], [78, 2, 1, "", "total_mem_on_dev"], [78, 2, 1, "", "tpu_is_available"], [78, 2, 1, "", "trace"], [78, 2, 1, "", "try_else_none"], [78, 2, 1, "", "type_promote_arrays"], [78, 2, 1, "", "unset_default_device"], [78, 2, 1, "", "unset_default_dtype"], [78, 2, 1, "", "unset_default_float_dtype"], [78, 2, 1, "", "unset_default_int_dtype"], [78, 2, 1, "", "unset_nestable_mode"], [78, 2, 1, "", "unset_shape_array_mode"], [78, 2, 1, "", "unset_with_grads"], [78, 2, 1, "", "used_mem_on_dev"], [78, 2, 1, "", "valid_dtype"], [78, 2, 1, "", "value_is_nan"], [78, 2, 1, "", "variable"], [78, 2, 1, "", "variable_data"], [78, 2, 1, "", "vecdot"], [78, 2, 1, "", "vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "where"], [78, 2, 1, "", "with_grads"], [78, 2, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "at_dev"], [79, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[380, 4, 1, "", "abs"], [385, 4, 1, "", "acos"], [390, 4, 1, "", "acosh"], [754, 4, 1, "", "adam_step"], [758, 4, 1, "", "adam_update"], [395, 4, 1, "", "add"], [1068, 4, 1, "", "all"], [668, 4, 1, "", "all_equal"], [1073, 4, 1, "", "any"], [1024, 4, 1, "", "argsort"], [400, 4, 1, "", "asin"], [405, 4, 1, "", "asinh"], [257, 4, 1, "", "astype"], [410, 4, 1, "", "atan"], [415, 4, 1, "", "atan2"], [420, 4, 1, "", "atanh"], [881, 4, 1, "", "binary_cross_entropy"], [425, 4, 1, "", "bitwise_and"], [430, 4, 1, "", "bitwise_invert"], [435, 4, 1, "", "bitwise_left_shift"], [440, 4, 1, "", "bitwise_or"], [445, 4, 1, "", "bitwise_right_shift"], [450, 4, 1, "", "bitwise_xor"], [262, 4, 1, "", "broadcast_arrays"], [267, 4, 1, "", "broadcast_to"], [272, 4, 1, "", "can_cast"], [455, 4, 1, "", "ceil"], [809, 4, 1, "", "cholesky"], [897, 4, 1, "", "clip"], [679, 4, 1, "", "clip_vector_norm"], [902, 4, 1, "", "concat"], [906, 4, 1, "", "constant_pad"], [460, 4, 1, "", "cos"], [465, 4, 1, "", "cosh"], [886, 4, 1, "", "cross_entropy"], [798, 4, 1, "", "depthwise_conv2d"], [470, 4, 1, "", "divide"], [281, 4, 1, "", "dtype"], [1035, 4, 1, "", "einsum"], [190, 4, 1, "", "empty_like"], [475, 4, 1, "", "equal"], [480, 4, 1, "", "erf"], [485, 4, 1, "", "exp"], [910, 4, 1, "", "expand_dims"], [490, 4, 1, "", "expm1"], [287, 4, 1, "", "finfo"], [914, 4, 1, "", "flip"], [495, 4, 1, "", "floor"], [500, 4, 1, "", "floor_divide"], [198, 4, 1, "", "from_dlpack"], [204, 4, 1, "", "full_like"], [696, 4, 1, "", "gather_nd"], [763, 4, 1, "", "gradient_descent_update"], [505, 4, 1, "", "greater"], [510, 4, 1, "", "greater_equal"], [294, 4, 1, "", "iinfo"], [300, 4, 1, "", "is_bool_dtype"], [305, 4, 1, "", "is_float_dtype"], [310, 4, 1, "", "is_int_dtype"], [768, 4, 1, "", "is_variable"], [515, 4, 1, "", "isfinite"], [520, 4, 1, "", "isinf"], [525, 4, 1, "", "isnan"], [772, 4, 1, "", "lamb_update"], [776, 4, 1, "", "lars_update"], [980, 4, 1, "", "layer_norm"], [530, 4, 1, "", "less"], [535, 4, 1, "", "less_equal"], [540, 4, 1, "", "log"], [545, 4, 1, "", "log10"], [550, 4, 1, "", "log1p"], [555, 4, 1, "", "log2"], [560, 4, 1, "", "logaddexp"], [565, 4, 1, "", "logical_and"], [570, 4, 1, "", "logical_not"], [575, 4, 1, "", "logical_or"], [580, 4, 1, "", "logical_xor"], [832, 4, 1, "", "matmul"], [1039, 4, 1, "", "max"], [1043, 4, 1, "", "mean"], [215, 4, 1, "", "meshgrid"], [1047, 4, 1, "", "min"], [587, 4, 1, "", "multiply"], [220, 4, 1, "", "native_array"], [592, 4, 1, "", "negative"], [597, 4, 1, "", "not_equal"], [228, 4, 1, "", "ones_like"], [780, 4, 1, "", "optimizer_update"], [918, 4, 1, "", "permute_dims"], [602, 4, 1, "", "positive"], [607, 4, 1, "", "pow"], [1051, 4, 1, "", "prod"], [990, 4, 1, "", "random_uniform"], [612, 4, 1, "", "remainder"], [922, 4, 1, "", "repeat"], [927, 4, 1, "", "reshape"], [316, 4, 1, "", "result_type"], [931, 4, 1, "", "roll"], [617, 4, 1, "", "round"], [622, 4, 1, "", "sign"], [627, 4, 1, "", "sin"], [632, 4, 1, "", "sinh"], [172, 4, 1, "", "softplus"], [1029, 4, 1, "", "sort"], [891, 4, 1, "", "sparse_cross_entropy"], [637, 4, 1, "", "sqrt"], [642, 4, 1, "", "square"], [937, 4, 1, "", "squeeze"], [941, 4, 1, "", "stack"], [382, 4, 1, "", "static_abs"], [387, 4, 1, "", "static_acos"], [392, 4, 1, "", "static_acosh"], [756, 4, 1, "", "static_adam_step"], [760, 4, 1, "", "static_adam_update"], [397, 4, 1, "", "static_add"], [1070, 4, 1, "", "static_all"], [670, 4, 1, "", "static_all_equal"], [1075, 4, 1, "", "static_any"], [182, 4, 1, "", "static_arange"], [1026, 4, 1, "", "static_argsort"], [186, 4, 1, "", "static_asarray"], [402, 4, 1, "", "static_asin"], [407, 4, 1, "", "static_asinh"], [259, 4, 1, "", "static_astype"], [412, 4, 1, "", "static_atan"], [417, 4, 1, "", "static_atan2"], [422, 4, 1, "", "static_atanh"], [883, 4, 1, "", "static_binary_cross_entropy"], [427, 4, 1, "", "static_bitwise_and"], [432, 4, 1, "", "static_bitwise_invert"], [437, 4, 1, "", "static_bitwise_left_shift"], [442, 4, 1, "", "static_bitwise_or"], [447, 4, 1, "", "static_bitwise_right_shift"], [452, 4, 1, "", "static_bitwise_xor"], [264, 4, 1, "", "static_broadcast_arrays"], [269, 4, 1, "", "static_broadcast_to"], [274, 4, 1, "", "static_can_cast"], [457, 4, 1, "", "static_ceil"], [811, 4, 1, "", "static_cholesky"], [899, 4, 1, "", "static_clip"], [462, 4, 1, "", "static_cos"], [467, 4, 1, "", "static_cosh"], [888, 4, 1, "", "static_cross_entropy"], [800, 4, 1, "", "static_depthwise_conv2d"], [472, 4, 1, "", "static_divide"], [283, 4, 1, "", "static_dtype"], [192, 4, 1, "", "static_empty_like"], [477, 4, 1, "", "static_equal"], [482, 4, 1, "", "static_erf"], [487, 4, 1, "", "static_exp"], [492, 4, 1, "", "static_expm1"], [195, 4, 1, "", "static_eye"], [289, 4, 1, "", "static_finfo"], [497, 4, 1, "", "static_floor"], [502, 4, 1, "", "static_floor_divide"], [200, 4, 1, "", "static_from_dlpack"], [206, 4, 1, "", "static_full_like"], [698, 4, 1, "", "static_gather_nd"], [765, 4, 1, "", "static_gradient_descent_update"], [507, 4, 1, "", "static_greater"], [512, 4, 1, "", "static_greater_equal"], [296, 4, 1, "", "static_iinfo"], [302, 4, 1, "", "static_is_bool_dtype"], [307, 4, 1, "", "static_is_float_dtype"], [312, 4, 1, "", "static_is_int_dtype"], [770, 4, 1, "", "static_is_variable"], [517, 4, 1, "", "static_isfinite"], [522, 4, 1, "", "static_isinf"], [527, 4, 1, "", "static_isnan"], [774, 4, 1, "", "static_lamb_update"], [778, 4, 1, "", "static_lars_update"], [982, 4, 1, "", "static_layer_norm"], [532, 4, 1, "", "static_less"], [537, 4, 1, "", "static_less_equal"], [209, 4, 1, "", "static_linspace"], [542, 4, 1, "", "static_log"], [547, 4, 1, "", "static_log10"], [552, 4, 1, "", "static_log1p"], [557, 4, 1, "", "static_log2"], [562, 4, 1, "", "static_logaddexp"], [567, 4, 1, "", "static_logical_and"], [572, 4, 1, "", "static_logical_not"], [577, 4, 1, "", "static_logical_or"], [582, 4, 1, "", "static_logical_xor"], [212, 4, 1, "", "static_logspace"], [217, 4, 1, "", "static_meshgrid"], [589, 4, 1, "", "static_multiply"], [222, 4, 1, "", "static_native_array"], [594, 4, 1, "", "static_negative"], [599, 4, 1, "", "static_not_equal"], [225, 4, 1, "", "static_ones"], [230, 4, 1, "", "static_ones_like"], [782, 4, 1, "", "static_optimizer_update"], [604, 4, 1, "", "static_positive"], [609, 4, 1, "", "static_pow"], [987, 4, 1, "", "static_randint"], [992, 4, 1, "", "static_random_uniform"], [614, 4, 1, "", "static_remainder"], [924, 4, 1, "", "static_repeat"], [318, 4, 1, "", "static_result_type"], [933, 4, 1, "", "static_roll"], [619, 4, 1, "", "static_round"], [624, 4, 1, "", "static_sign"], [629, 4, 1, "", "static_sin"], [634, 4, 1, "", "static_sinh"], [174, 4, 1, "", "static_softplus"], [1031, 4, 1, "", "static_sort"], [893, 4, 1, "", "static_sparse_cross_entropy"], [639, 4, 1, "", "static_sqrt"], [644, 4, 1, "", "static_square"], [646, 4, 1, "", "static_subtract"], [651, 4, 1, "", "static_tan"], [656, 4, 1, "", "static_tanh"], [740, 4, 1, "", "static_to_numpy"], [232, 4, 1, "", "static_tril"], [237, 4, 1, "", "static_triu"], [661, 4, 1, "", "static_trunc"], [1002, 4, 1, "", "static_unique_all"], [1007, 4, 1, "", "static_unique_counts"], [1012, 4, 1, "", "static_unique_inverse"], [1017, 4, 1, "", "static_unique_values"], [242, 4, 1, "", "static_zeros"], [245, 4, 1, "", "static_zeros_like"], [1055, 4, 1, "", "std"], [648, 4, 1, "", "subtract"], [1059, 4, 1, "", "sum"], [945, 4, 1, "", "swapaxes"], [653, 4, 1, "", "tan"], [658, 4, 1, "", "tanh"], [949, 4, 1, "", "tile"], [742, 4, 1, "", "to_numpy"], [234, 4, 1, "", "tril"], [239, 4, 1, "", "triu"], [663, 4, 1, "", "trunc"], [1004, 4, 1, "", "unique_all"], [1009, 4, 1, "", "unique_counts"], [1014, 4, 1, "", "unique_inverse"], [1019, 4, 1, "", "unique_values"], [1063, 4, 1, "", "var"], [953, 4, 1, "", "zero_pad"], [247, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 2, 1, "", "cholesky"], [97, 2, 1, "", "matmul"], [97, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[99, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 2, 1, "", "binary_cross_entropy"], [99, 2, 1, "", "cross_entropy"], [99, 2, 1, "", "sparse_cross_entropy"], [99, 2, 1, "", "static_binary_cross_entropy"], [99, 2, 1, "", "static_cross_entropy"], [99, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 2, 1, "", "clip"], [101, 2, 1, "", "concat"], [101, 2, 1, "", "constant_pad"], [101, 2, 1, "", "expand_dims"], [101, 2, 1, "", "flip"], [101, 2, 1, "", "permute_dims"], [101, 2, 1, "", "repeat"], [101, 2, 1, "", "reshape"], [101, 2, 1, "", "roll"], [101, 2, 1, "", "squeeze"], [101, 2, 1, "", "stack"], [101, 2, 1, "", "static_clip"], [101, 2, 1, "", "static_repeat"], [101, 2, 1, "", "static_roll"], [101, 2, 1, "", "swapaxes"], [101, 2, 1, "", "tile"], [101, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 2, 1, "", "layer_norm"], [103, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 2, 1, "", "random_uniform"], [105, 2, 1, "", "static_randint"], [105, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 2, 1, "", "static_unique_all"], [109, 2, 1, "", "static_unique_counts"], [109, 2, 1, "", "static_unique_inverse"], [109, 2, 1, "", "static_unique_values"], [109, 2, 1, "", "unique_all"], [109, 2, 1, "", "unique_counts"], [109, 2, 1, "", "unique_inverse"], [109, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 2, 1, "", "argsort"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "static_argsort"], [111, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 2, 1, "", "einsum"], [113, 2, 1, "", "max"], [113, 2, 1, "", "mean"], [113, 2, 1, "", "min"], [113, 2, 1, "", "prod"], [113, 2, 1, "", "std"], [113, 2, 1, "", "sum"], [113, 2, 1, "", "var"]], "ivy.container.utility": [[115, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 2, 1, "", "all"], [115, 2, 1, "", "any"], [115, 2, 1, "", "static_all"], [115, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[155, 4, 1, "", "handle_nestable"], [156, 4, 1, "", "handle_out_argument"], [157, 4, 1, "", "infer_device"], [158, 4, 1, "", "infer_dtype"], [159, 4, 1, "", "inputs_to_ivy_arrays"], [160, 4, 1, "", "inputs_to_native_arrays"], [161, 4, 1, "", "outputs_to_ivy_arrays"], [162, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[164, 0, 0, "-", "activations"], [176, 0, 0, "-", "compilation"], [178, 0, 0, "-", "constants"], [179, 0, 0, "-", "creation"], [249, 0, 0, "-", "data_type"], [327, 0, 0, "-", "device"], [377, 0, 0, "-", "elementwise"], [665, 0, 0, "-", "general"], [750, 0, 0, "-", "gradients"], [789, 0, 0, "-", "layers"], [806, 0, 0, "-", "linear_algebra"], [878, 0, 0, "-", "losses"], [894, 0, 0, "-", "manipulation"], [955, 0, 0, "-", "meta"], [959, 0, 0, "-", "nest"], [977, 0, 0, "-", "norms"], [983, 0, 0, "-", "random"], [995, 0, 0, "-", "searching"], [1000, 0, 0, "-", "set"], [1021, 0, 0, "-", "sorting"], [1032, 0, 0, "-", "statistical"], [1065, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[165, 4, 1, "", "gelu"], [166, 4, 1, "", "leaky_relu"], [167, 4, 1, "", "relu"], [168, 4, 1, "", "sigmoid"], [169, 4, 1, "", "softmax"], [173, 4, 1, "", "softplus"], [175, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[177, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[178, 5, 1, "", "e"], [178, 5, 1, "", "inf"], [178, 5, 1, "", "nan"], [178, 5, 1, "", "newaxis"], [178, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[181, 4, 1, "", "arange"], [179, 4, 1, "", "array"], [185, 4, 1, "", "asarray"], [187, 4, 1, "", "empty"], [191, 4, 1, "", "empty_like"], [194, 4, 1, "", "eye"], [199, 4, 1, "", "from_dlpack"], [201, 4, 1, "", "full"], [205, 4, 1, "", "full_like"], [208, 4, 1, "", "linspace"], [211, 4, 1, "", "logspace"], [216, 4, 1, "", "meshgrid"], [221, 4, 1, "", "native_array"], [224, 4, 1, "", "ones"], [229, 4, 1, "", "ones_like"], [235, 4, 1, "", "tril"], [240, 4, 1, "", "triu"], [243, 4, 1, "", "zeros"], [248, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[249, 1, 1, "", "DefaultDtype"], [249, 1, 1, "", "DefaultFloatDtype"], [249, 1, 1, "", "DefaultIntDtype"], [253, 4, 1, "", "as_ivy_dtype"], [254, 4, 1, "", "as_native_dtype"], [258, 4, 1, "", "astype"], [263, 4, 1, "", "broadcast_arrays"], [268, 4, 1, "", "broadcast_to"], [273, 4, 1, "", "can_cast"], [275, 4, 1, "", "closest_valid_dtype"], [276, 4, 1, "", "default_dtype"], [277, 4, 1, "", "default_float_dtype"], [278, 4, 1, "", "default_int_dtype"], [282, 4, 1, "", "dtype"], [284, 4, 1, "", "dtype_bits"], [288, 4, 1, "", "finfo"], [290, 4, 1, "", "function_supported_dtypes"], [291, 4, 1, "", "function_unsupported_dtypes"], [295, 4, 1, "", "iinfo"], [297, 4, 1, "", "invalid_dtype"], [301, 4, 1, "", "is_bool_dtype"], [306, 4, 1, "", "is_float_dtype"], [311, 4, 1, "", "is_int_dtype"], [313, 4, 1, "", "promote_types"], [317, 4, 1, "", "result_type"], [319, 4, 1, "", "set_default_dtype"], [320, 4, 1, "", "set_default_float_dtype"], [321, 4, 1, "", "set_default_int_dtype"], [322, 4, 1, "", "type_promote_arrays"], [323, 4, 1, "", "unset_default_dtype"], [324, 4, 1, "", "unset_default_float_dtype"], [325, 4, 1, "", "unset_default_int_dtype"], [326, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[249, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[249, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[249, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[327, 1, 1, "", "DefaultDevice"], [329, 1, 1, "", "DevClonedItem"], [330, 1, 1, "", "DevClonedIter"], [331, 1, 1, "", "DevClonedNest"], [332, 1, 1, "", "DevDistItem"], [333, 1, 1, "", "DevDistIter"], [334, 1, 1, "", "DevDistNest"], [327, 1, 1, "", "DevManager"], [336, 1, 1, "", "DevMapper"], [337, 1, 1, "", "DevMapperMultiProc"], [327, 1, 1, "", "MultiDev"], [339, 1, 1, "", "MultiDevItem"], [340, 1, 1, "", "MultiDevIter"], [341, 1, 1, "", "MultiDevNest"], [342, 1, 1, "", "Profiler"], [343, 4, 1, "", "as_ivy_dev"], [344, 4, 1, "", "as_native_dev"], [345, 4, 1, "", "clear_mem_on_dev"], [346, 4, 1, "", "default_device"], [347, 4, 1, "", "dev"], [348, 4, 1, "", "dev_clone"], [349, 4, 1, "", "dev_clone_array"], [350, 4, 1, "", "dev_clone_iter"], [351, 4, 1, "", "dev_clone_nest"], [352, 4, 1, "", "dev_dist"], [353, 4, 1, "", "dev_dist_array"], [354, 4, 1, "", "dev_dist_iter"], [355, 4, 1, "", "dev_dist_nest"], [356, 4, 1, "", "dev_unify"], [357, 4, 1, "", "dev_unify_array"], [358, 4, 1, "", "dev_unify_iter"], [359, 4, 1, "", "dev_unify_nest"], [360, 4, 1, "", "dev_util"], [361, 4, 1, "", "get_all_ivy_arrays_on_dev"], [362, 4, 1, "", "gpu_is_available"], [363, 4, 1, "", "num_cpu_cores"], [364, 4, 1, "", "num_gpus"], [365, 4, 1, "", "num_ivy_arrays_on_dev"], [366, 4, 1, "", "percent_used_mem_on_dev"], [367, 4, 1, "", "print_all_ivy_arrays_on_dev"], [368, 4, 1, "", "set_default_device"], [369, 4, 1, "", "set_split_factor"], [370, 4, 1, "", "split_factor"], [371, 4, 1, "", "split_func_call"], [372, 4, 1, "", "to_device"], [373, 4, 1, "", "total_mem_on_dev"], [374, 4, 1, "", "tpu_is_available"], [375, 4, 1, "", "unset_default_device"], [376, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[327, 2, 1, "", "__enter__"], [327, 2, 1, "", "__exit__"], [327, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "da_tune_step"], [327, 3, 1, "", "dim_size"], [327, 2, 1, "", "ds_tune_step"], [327, 2, 1, "", "map"], [327, 2, 1, "", "repeated_config_check"], [327, 3, 1, "", "tune_step"], [327, 3, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[336, 2, 1, "", "__init__"], [336, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[337, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[327, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[339, 2, 1, "", "__init__"], [339, 2, 1, "", "items"], [339, 2, 1, "", "keys"], [339, 3, 1, "", "shape"], [339, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[340, 2, 1, "", "__init__"], [340, 2, 1, "", "at_dev"], [340, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[341, 2, 1, "", "__init__"], [341, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[342, 2, 1, "", "__init__"], [342, 2, 1, "", "start"], [342, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[381, 4, 1, "", "abs"], [386, 4, 1, "", "acos"], [391, 4, 1, "", "acosh"], [396, 4, 1, "", "add"], [401, 4, 1, "", "asin"], [406, 4, 1, "", "asinh"], [411, 4, 1, "", "atan"], [416, 4, 1, "", "atan2"], [421, 4, 1, "", "atanh"], [426, 4, 1, "", "bitwise_and"], [431, 4, 1, "", "bitwise_invert"], [436, 4, 1, "", "bitwise_left_shift"], [441, 4, 1, "", "bitwise_or"], [446, 4, 1, "", "bitwise_right_shift"], [451, 4, 1, "", "bitwise_xor"], [456, 4, 1, "", "ceil"], [461, 4, 1, "", "cos"], [466, 4, 1, "", "cosh"], [471, 4, 1, "", "divide"], [476, 4, 1, "", "equal"], [481, 4, 1, "", "erf"], [486, 4, 1, "", "exp"], [491, 4, 1, "", "expm1"], [496, 4, 1, "", "floor"], [501, 4, 1, "", "floor_divide"], [506, 4, 1, "", "greater"], [511, 4, 1, "", "greater_equal"], [516, 4, 1, "", "isfinite"], [521, 4, 1, "", "isinf"], [526, 4, 1, "", "isnan"], [531, 4, 1, "", "less"], [536, 4, 1, "", "less_equal"], [541, 4, 1, "", "log"], [546, 4, 1, "", "log10"], [551, 4, 1, "", "log1p"], [556, 4, 1, "", "log2"], [561, 4, 1, "", "logaddexp"], [566, 4, 1, "", "logical_and"], [571, 4, 1, "", "logical_not"], [576, 4, 1, "", "logical_or"], [581, 4, 1, "", "logical_xor"], [583, 4, 1, "", "maximum"], [584, 4, 1, "", "minimum"], [588, 4, 1, "", "multiply"], [593, 4, 1, "", "negative"], [598, 4, 1, "", "not_equal"], [603, 4, 1, "", "positive"], [608, 4, 1, "", "pow"], [613, 4, 1, "", "remainder"], [618, 4, 1, "", "round"], [623, 4, 1, "", "sign"], [628, 4, 1, "", "sin"], [633, 4, 1, "", "sinh"], [638, 4, 1, "", "sqrt"], [643, 4, 1, "", "square"], [649, 4, 1, "", "subtract"], [654, 4, 1, "", "tan"], [659, 4, 1, "", "tanh"], [664, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[669, 4, 1, "", "all_equal"], [671, 4, 1, "", "arg_info"], [672, 4, 1, "", "arg_names"], [673, 4, 1, "", "array_equal"], [674, 4, 1, "", "arrays_equal"], [675, 4, 1, "", "assert_supports_inplace"], [676, 4, 1, "", "cache_fn"], [677, 4, 1, "", "clip_matrix_norm"], [680, 4, 1, "", "clip_vector_norm"], [681, 4, 1, "", "container_types"], [682, 4, 1, "", "copy_array"], [683, 4, 1, "", "cumprod"], [684, 4, 1, "", "cumsum"], [685, 4, 1, "", "current_backend_str"], [686, 4, 1, "", "default"], [687, 4, 1, "", "einops_rearrange"], [688, 4, 1, "", "einops_reduce"], [689, 4, 1, "", "einops_repeat"], [690, 4, 1, "", "exists"], [691, 4, 1, "", "floormod"], [692, 4, 1, "", "fourier_encode"], [693, 4, 1, "", "gather"], [697, 4, 1, "", "gather_nd"], [699, 4, 1, "", "get_all_arrays_in_memory"], [700, 4, 1, "", "get_min_base"], [701, 4, 1, "", "get_min_denominator"], [702, 4, 1, "", "get_nestable_mode"], [703, 4, 1, "", "get_num_dims"], [704, 4, 1, "", "get_referrers_recursive"], [705, 4, 1, "", "has_nans"], [706, 4, 1, "", "indices_where"], [707, 4, 1, "", "inplace_arrays_supported"], [708, 4, 1, "", "inplace_decrement"], [709, 4, 1, "", "inplace_increment"], [710, 4, 1, "", "inplace_update"], [711, 4, 1, "", "inplace_variables_supported"], [712, 4, 1, "", "is_array"], [713, 4, 1, "", "is_ivy_array"], [714, 4, 1, "", "is_ivy_container"], [715, 4, 1, "", "is_native_array"], [716, 4, 1, "", "match_kwargs"], [717, 4, 1, "", "multiprocessing"], [718, 4, 1, "", "num_arrays_in_memory"], [719, 4, 1, "", "one_hot"], [720, 4, 1, "", "print_all_arrays_in_memory"], [721, 4, 1, "", "queue_timeout"], [722, 4, 1, "", "scatter_flat"], [723, 4, 1, "", "scatter_nd"], [724, 4, 1, "", "set_min_base"], [725, 4, 1, "", "set_min_denominator"], [726, 4, 1, "", "set_nestable_mode"], [727, 4, 1, "", "set_queue_timeout"], [728, 4, 1, "", "set_shape_array_mode"], [729, 4, 1, "", "set_tmp_dir"], [730, 4, 1, "", "shape"], [731, 4, 1, "", "shape_array_mode"], [732, 4, 1, "", "stable_divide"], [733, 4, 1, "", "stable_pow"], [734, 4, 1, "", "supports_inplace"], [735, 4, 1, "", "tmp_dir"], [736, 4, 1, "", "to_ivy_shape"], [737, 4, 1, "", "to_list"], [738, 4, 1, "", "to_native_shape"], [743, 4, 1, "", "to_numpy"], [744, 4, 1, "", "to_scalar"], [745, 4, 1, "", "try_else_none"], [746, 4, 1, "", "unset_nestable_mode"], [747, 4, 1, "", "unset_shape_array_mode"], [748, 4, 1, "", "unstack"], [749, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[750, 1, 1, "", "GradientTracking"], [755, 4, 1, "", "adam_step"], [759, 4, 1, "", "adam_update"], [761, 4, 1, "", "execute_with_gradients"], [764, 4, 1, "", "gradient_descent_update"], [769, 4, 1, "", "is_variable"], [773, 4, 1, "", "lamb_update"], [777, 4, 1, "", "lars_update"], [781, 4, 1, "", "optimizer_update"], [783, 4, 1, "", "set_with_grads"], [784, 4, 1, "", "stop_gradient"], [785, 4, 1, "", "unset_with_grads"], [786, 4, 1, "", "variable"], [787, 4, 1, "", "variable_data"], [788, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[750, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[790, 4, 1, "", "conv1d"], [791, 4, 1, "", "conv1d_transpose"], [792, 4, 1, "", "conv2d"], [793, 4, 1, "", "conv2d_transpose"], [794, 4, 1, "", "conv3d"], [795, 4, 1, "", "conv3d_transpose"], [799, 4, 1, "", "depthwise_conv2d"], [801, 4, 1, "", "dropout"], [802, 4, 1, "", "linear"], [803, 4, 1, "", "lstm_update"], [804, 4, 1, "", "multi_head_attention"], [805, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[810, 4, 1, "", "cholesky"], [814, 4, 1, "", "cross"], [817, 4, 1, "", "det"], [820, 4, 1, "", "diagonal"], [823, 4, 1, "", "eigh"], [826, 4, 1, "", "eigvalsh"], [829, 4, 1, "", "inv"], [833, 4, 1, "", "matmul"], [836, 4, 1, "", "matrix_norm"], [837, 4, 1, "", "matrix_power"], [840, 4, 1, "", "matrix_rank"], [843, 4, 1, "", "matrix_transpose"], [846, 4, 1, "", "outer"], [849, 4, 1, "", "pinv"], [852, 4, 1, "", "qr"], [853, 4, 1, "", "slogdet"], [856, 4, 1, "", "solve"], [859, 4, 1, "", "svd"], [862, 4, 1, "", "svdvals"], [865, 4, 1, "", "tensordot"], [868, 4, 1, "", "trace"], [871, 4, 1, "", "vecdot"], [874, 4, 1, "", "vector_norm"], [877, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[882, 4, 1, "", "binary_cross_entropy"], [887, 4, 1, "", "cross_entropy"], [892, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[898, 4, 1, "", "clip"], [903, 4, 1, "", "concat"], [907, 4, 1, "", "constant_pad"], [911, 4, 1, "", "expand_dims"], [915, 4, 1, "", "flip"], [919, 4, 1, "", "permute_dims"], [923, 4, 1, "", "repeat"], [928, 4, 1, "", "reshape"], [932, 4, 1, "", "roll"], [934, 4, 1, "", "split"], [938, 4, 1, "", "squeeze"], [942, 4, 1, "", "stack"], [946, 4, 1, "", "swapaxes"], [950, 4, 1, "", "tile"], [954, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[956, 4, 1, "", "fomaml_step"], [957, 4, 1, "", "maml_step"], [958, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[960, 4, 1, "", "all_nested_indices"], [961, 4, 1, "", "copy_nest"], [962, 4, 1, "", "index_nest"], [963, 4, 1, "", "insert_into_nest_at_index"], [964, 4, 1, "", "insert_into_nest_at_indices"], [965, 4, 1, "", "map"], [966, 4, 1, "", "map_nest_at_index"], [967, 4, 1, "", "map_nest_at_indices"], [968, 4, 1, "", "multi_index_nest"], [969, 4, 1, "", "nested_any"], [970, 4, 1, "", "nested_indices_where"], [971, 4, 1, "", "nested_map"], [972, 4, 1, "", "nested_multi_map"], [973, 4, 1, "", "prune_nest_at_index"], [974, 4, 1, "", "prune_nest_at_indices"], [975, 4, 1, "", "set_nest_at_index"], [976, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[981, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[984, 4, 1, "", "multinomial"], [986, 4, 1, "", "randint"], [988, 4, 1, "", "random_normal"], [991, 4, 1, "", "random_uniform"], [993, 4, 1, "", "seed"], [994, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[996, 4, 1, "", "argmax"], [997, 4, 1, "", "argmin"], [998, 4, 1, "", "nonzero"], [999, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1005, 4, 1, "", "unique_all"], [1010, 4, 1, "", "unique_counts"], [1015, 4, 1, "", "unique_inverse"], [1020, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1025, 4, 1, "", "argsort"], [1030, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1036, 4, 1, "", "einsum"], [1040, 4, 1, "", "max"], [1044, 4, 1, "", "mean"], [1048, 4, 1, "", "min"], [1052, 4, 1, "", "prod"], [1056, 4, 1, "", "std"], [1060, 4, 1, "", "sum"], [1064, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1069, 4, 1, "", "all"], [1074, 4, 1, "", "any"]], "ivy.inspection": [[1080, 4, 1, "", "add_array_specs"], [1081, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1084, 0, 0, "-", "activations"], [1087, 0, 0, "-", "converters"], [1089, 0, 0, "-", "initializers"], [1098, 0, 0, "-", "layers"], [1110, 0, 0, "-", "module"], [1112, 0, 0, "-", "norms"], [1114, 0, 0, "-", "optimizers"], [1120, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1085, 1, 1, "", "GEGLU"], [1086, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1085, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1086, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1088, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1089, 1, 1, "", "Constant"], [1091, 1, 1, "", "FirstLayerSiren"], [1092, 1, 1, "", "GlorotUniform"], [1089, 1, 1, "", "KaimingNormal"], [1094, 1, 1, "", "Ones"], [1095, 1, 1, "", "Siren"], [1089, 1, 1, "", "Uniform"], [1097, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1089, 2, 1, "", "__init__"], [1089, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1091, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1092, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1089, 2, 1, "", "__init__"], [1089, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1094, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1095, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1089, 2, 1, "", "__init__"], [1089, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1097, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1099, 1, 1, "", "Conv1D"], [1100, 1, 1, "", "Conv1DTranspose"], [1101, 1, 1, "", "Conv2D"], [1102, 1, 1, "", "Conv2DTranspose"], [1103, 1, 1, "", "Conv3D"], [1104, 1, 1, "", "Conv3DTranspose"], [1105, 1, 1, "", "DepthwiseConv2D"], [1106, 1, 1, "", "Dropout"], [1107, 1, 1, "", "LSTM"], [1108, 1, 1, "", "Linear"], [1109, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1099, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1100, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1101, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1102, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1103, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1104, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1105, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1106, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1107, 2, 1, "", "__init__"], [1107, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1108, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1109, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1111, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1111, 2, 1, "", "__init__"], [1111, 2, 1, "", "build"], [1111, 3, 1, "", "build_mode"], [1111, 3, 1, "", "built"], [1111, 2, 1, "", "check_submod_rets"], [1111, 2, 1, "", "get_mod_key"], [1111, 2, 1, "", "mod_depth"], [1111, 2, 1, "", "mod_height"], [1111, 2, 1, "", "mod_with_top_mod_key_chain"], [1111, 2, 1, "", "save_weights"], [1111, 2, 1, "", "show_mod_in_top_mod"], [1111, 2, 1, "", "show_structure"], [1111, 2, 1, "", "show_v_in_top_v"], [1111, 2, 1, "", "sub_mods"], [1111, 2, 1, "", "track_submod_call_order"], [1111, 2, 1, "", "track_submod_rets"], [1111, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1113, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1113, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1115, 1, 1, "", "Adam"], [1116, 1, 1, "", "LAMB"], [1117, 1, 1, "", "LARS"], [1118, 1, 1, "", "Optimizer"], [1119, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1115, 2, 1, "", "__init__"], [1115, 2, 1, "", "set_state"], [1115, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1116, 2, 1, "", "__init__"], [1116, 2, 1, "", "set_state"], [1116, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1117, 2, 1, "", "__init__"], [1117, 2, 1, "", "set_state"], [1117, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1118, 2, 1, "", "__init__"], [1118, 2, 1, "", "set_state"], [1118, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1119, 2, 1, "", "__init__"], [1119, 2, 1, "", "set_state"], [1119, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1121, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1121, 2, 1, "", "__init__"]], "ivy.verbosity": [[1124, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 119, 127, 136, 153], "handler": [0, 136], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1076], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 153], "competit": 15, "do": [15, 124], "work": [15, 21], "The": [15, 19, 138, 153], "arrai": [15, 23, 26, 120, 123, 129, 138, 171, 184, 189, 197, 203, 214, 219, 227, 233, 238, 246, 256, 261, 266, 271, 280, 286, 293, 299, 304, 309, 315, 379, 384, 389, 394, 399, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 586, 591, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 647, 652, 657, 662, 667, 695, 741, 753, 767, 797, 808, 813, 816, 819, 822, 825, 828, 831, 835, 839, 842, 845, 848, 851, 855, 858, 861, 864, 867, 870, 873, 876, 880, 885, 890, 896, 901, 905, 909, 913, 917, 921, 926, 930, 936, 940, 944, 948, 952, 979, 1003, 1008, 1013, 1018, 1023, 1028, 1034, 1038, 1042, 1046, 1050, 1054, 1058, 1062, 1067, 1072], "api": [15, 20, 119, 123, 130, 136, 138, 140, 141], "why": [16, 124], "unifi": [16, 138], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1076], "set": [18, 62, 108, 127, 1000], "up": 18, "clone": 18, "ivi": [18, 119, 122, 124, 125, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 171, 172, 173, 174, 181, 182, 184, 185, 186, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 203, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 280, 281, 282, 283, 286, 287, 288, 289, 293, 294, 295, 296, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 667, 668, 669, 670, 679, 680, 695, 696, 697, 698, 740, 741, 742, 743, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 776, 777, 778, 780, 781, 782, 797, 798, 799, 800, 808, 809, 810, 811, 813, 814, 816, 817, 819, 820, 822, 823, 825, 826, 828, 829, 831, 832, 833, 835, 836, 839, 840, 842, 843, 845, 846, 848, 849, 851, 852, 855, 856, 858, 859, 861, 862, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 880, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 896, 897, 898, 899, 901, 902, 903, 905, 906, 907, 909, 910, 911, 913, 914, 915, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 930, 931, 932, 933, 936, 937, 938, 940, 941, 942, 944, 945, 946, 948, 949, 950, 952, 953, 954, 979, 980, 981, 982, 986, 987, 990, 991, 992, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1038, 1039, 1040, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 139], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 134], "commit": [18, 19, 134], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 123, 124], "local": 19, "open": 20, "task": 20, "function": [20, 120, 124, 126, 128, 130, 131, 132, 136, 141, 153], "format": [20, 134], "frontend": [20, 125, 141], "build": [21, 136], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 153], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 36, 82, 124, 131, 139, 153, 249, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "class": [22, 138, 1083], "activ": [24, 73, 164, 1084], "arraywithactiv": 25, "convers": 29, "args_to_ivi": 30, "args_to_n": 31, "to_ivi": 32, "to_n": 33, "creation": [34, 80, 179], "arraywithcr": 35, "type": [36, 82, 126, 131, 153, 249], "arraywithdatatyp": 37, "devic": [38, 84, 120, 132, 327], "arraywithdevic": 39, "elementwis": [40, 86, 377], "arraywithelementwis": 41, "gener": [42, 88, 124, 665], "arraywithgener": 43, "gradient": [44, 90, 750], "arraywithgradi": 45, "imag": [46, 92], "arraywithimag": 47, "layer": [48, 94, 789, 1098], "arraywithlay": 49, "linear": [50, 96, 802, 806, 1108], "algebra": [50, 96, 806], "arraywithlinearalgebra": 51, "loss": [52, 98, 878], "arraywithloss": 53, "manipul": [54, 100, 894], "arraywithmanipul": 55, "norm": [56, 102, 977, 1112], "arraywithnorm": 57, "random": [58, 104, 983], "arraywithrandom": 59, "search": [60, 106, 995], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 110, 1021, 1027, 1028, 1029, 1030], "arraywithsort": 65, "statist": [66, 112, 1032], "arraywithstatist": 67, "util": [68, 114, 1065], "arraywithutil": 69, "wrap": [70, 116, 128], "add_ivy_array_instance_method": 71, "contain": [72, 77, 130, 139, 172, 174, 182, 186, 190, 192, 195, 198, 200, 204, 206, 209, 212, 215, 217, 220, 222, 225, 228, 230, 232, 234, 237, 239, 242, 245, 247, 257, 259, 262, 264, 267, 269, 272, 274, 281, 283, 287, 289, 294, 296, 300, 302, 305, 307, 310, 312, 316, 318, 380, 382, 385, 387, 390, 392, 395, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 587, 589, 592, 594, 597, 599, 602, 604, 607, 609, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 646, 648, 651, 653, 656, 658, 661, 663, 668, 670, 679, 696, 698, 740, 742, 754, 756, 758, 760, 763, 765, 768, 770, 772, 774, 776, 778, 780, 782, 798, 800, 809, 811, 832, 881, 883, 886, 888, 891, 893, 897, 899, 902, 906, 910, 914, 918, 922, 924, 927, 931, 933, 937, 941, 945, 949, 953, 980, 982, 987, 990, 992, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1024, 1026, 1029, 1031, 1035, 1039, 1043, 1047, 1051, 1055, 1059, 1063, 1068, 1070, 1073, 1075], "containerwithactiv": 74, "base": 75, "containerbas": 76, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": 119, "design": [119, 135, 1076], "argument": [120, 131, 132, 133], "exampl": [120, 122, 125, 134], "out": [120, 133], "dtype": [120, 279, 280, 281, 282], "number": 120, "oper": [120, 138, 153], "integ": 120, "sequenc": 120, "nestabl": [120, 126, 130], "docstr": [121, 122], "tan": [122, 650, 652, 653, 654], "roll": [122, 929, 930, 931, 932], "add": [122, 393, 394, 395, 396], "hypothesi": 124, "import": 124, "strategi": 124, "integr": 124, "we": 124, "need": 124, "helper": 124, "how": 124, "write": 124, "effect": 124, "bonu": 124, "extend": 124, "featur": 124, "self": 124, "consist": 124, "explicit": 124, "test_array_funct": 124, "introduct": 125, "primari": 126, "composit": 126, "mix": 126, "standalon": 126, "conveni": 126, "nativ": 129, "handl": 129, "instanc": [130, 138], "method": [130, 138, 139], "static": 130, "special": 130, "modul": [131, 132, 140, 1110, 1111], "other": [131, 132], "unsupport": 131, "inplac": 133, "updat": 133, "copi": 133, "lint": 134, "check": [134, 153], "hook": 134, "automat": 134, "reformat": 134, "befor": 134, "block": 136, "framework": [136, 137, 1083], "graph": [136, 141], "compil": [136, 141, 176, 177], "monkei": 138, "patch": 138, "construct": 139, "represent": 139, "recurs": 139, "built": 139, "ins": 139, "access": 139, "save": 139, "load": 139, "comparison": 139, "custom": [139, 153], "case": 139, "compartment": 139, "configur": 139, "network": [139, 141], "weight": 139, "state": [140, 153], "initi": [140, 1089], "optim": [140, 1114, 1118], "transpil": 141, "role": 141, "convert": [141, 1087], "model": [141, 148, 153], "builder": 143, "ecosystem": 144, "gym": [145, 152], "mech": 146, "memori": [147, 152], "robot": [149, 152], "vision": [150, 152], "extens": [151, 1076], "appli": 152, "librari": 152, "mechan": 152, "faq": 153, "maintain": 153, "version": 153, "dynam": 153, "size": 153, "shape": [153, 730, 1000, 1001, 1005, 1006, 1010, 1016, 1020], "control": 153, "flow": 153, "auto": 153, "differenti": 153, "replica": 153, "parallel": 153, "support": 153, "altern": 153, "structur": 153, "func": 154, "wrapper": 154, "handle_nest": 155, "handle_out_argu": 156, "infer_devic": 157, "infer_dtyp": 158, "inputs_to_ivy_arrai": 159, "inputs_to_native_arrai": 160, "outputs_to_ivy_arrai": 161, "to_native_arrays_and_back": 162, "gelu": [165, 1086], "leaky_relu": 166, "relu": 167, "sigmoid": 168, "softmax": 169, "softplu": [170, 171, 172, 173], "static_softplu": 174, "tanh": [175, 655, 657, 658, 659], "constant": 178, "note": [179, 196, 199], "arang": [180, 181], "static_arang": 182, "asarrai": [183, 184, 185], "static_asarrai": 186, "empti": 187, "empty_lik": [188, 189, 190, 191], "static_empty_lik": 192, "ey": [193, 194], "static_ey": 195, "from_dlpack": [196, 197, 198, 199], "static_from_dlpack": 200, "full": 201, "full_lik": [202, 203, 204, 205], "static_full_lik": 206, "linspac": [207, 208], "static_linspac": 209, "logspac": [210, 211], "static_logspac": 212, "meshgrid": [213, 214, 215, 216], "static_meshgrid": 217, "native_arrai": [218, 219, 220, 221], "static_native_arrai": 222, "ones": [223, 224], "static_on": 225, "ones_lik": [226, 227, 228, 229], "static_ones_lik": 230, "tril": [231, 233, 234, 235], "static_tril": 232, "triu": [236, 238, 239, 240], "static_triu": 237, "zero": [241, 243, 1097], "static_zero": 242, "zeros_lik": [244, 246, 247, 248], "static_zeros_lik": 245, "as_ivy_dtyp": 253, "as_native_dtyp": 254, "astyp": [255, 256, 257, 258], "static_astyp": 259, "broadcast_arrai": [260, 261, 262, 263], "static_broadcast_arrai": 264, "broadcast_to": [265, 266, 267, 268], "static_broadcast_to": 269, "can_cast": [270, 271, 272, 273], "static_can_cast": 274, "closest_valid_dtyp": 275, "default_dtyp": 276, "default_float_dtyp": 277, "default_int_dtyp": 278, "static_dtyp": 283, "dtype_bit": 284, "finfo": [285, 286, 287, 288], "static_finfo": 289, "function_supported_dtyp": 290, "function_unsupported_dtyp": 291, "iinfo": [292, 293, 294, 295], "static_iinfo": 296, "invalid_dtyp": 297, "is_bool_dtyp": [298, 299, 300, 301], "static_is_bool_dtyp": 302, "is_float_dtyp": [303, 304, 305, 306], "static_is_float_dtyp": 307, "is_int_dtyp": [308, 309, 310, 311], "static_is_int_dtyp": 312, "promote_typ": 313, "result_typ": [314, 315, 316, 317], "static_result_typ": 318, "set_default_dtyp": 319, "set_default_float_dtyp": 320, "set_default_int_dtyp": 321, "type_promote_arrai": 322, "unset_default_dtyp": 323, "unset_default_float_dtyp": 324, "unset_default_int_dtyp": 325, "valid_dtyp": 326, "devcloneditem": 329, "devclonedit": 330, "devclonednest": 331, "devdistitem": 332, "devdistit": 333, "devdistnest": 334, "devmapp": 336, "devmappermultiproc": 337, "multidevitem": 339, "multidevit": 340, "multidevnest": 341, "profil": 342, "as_ivy_dev": 343, "as_native_dev": 344, "clear_mem_on_dev": 345, "default_devic": 346, "dev": 347, "dev_clon": 348, "dev_clone_arrai": 349, "dev_clone_it": 350, "dev_clone_nest": 351, "dev_dist": 352, "dev_dist_arrai": 353, "dev_dist_it": 354, "dev_dist_nest": 355, "dev_unifi": 356, "dev_unify_arrai": 357, "dev_unify_it": 358, "dev_unify_nest": 359, "dev_util": 360, "get_all_ivy_arrays_on_dev": 361, "gpu_is_avail": 362, "num_cpu_cor": 363, "num_gpu": 364, "num_ivy_arrays_on_dev": 365, "percent_used_mem_on_dev": 366, "print_all_ivy_arrays_on_dev": 367, "set_default_devic": 368, "set_split_factor": 369, "split_factor": 370, "split_func_cal": 371, "to_devic": 372, "total_mem_on_dev": 373, "tpu_is_avail": 374, "unset_default_devic": 375, "used_mem_on_dev": 376, "ab": [378, 379, 380, 381], "static_ab": 382, "aco": [383, 384, 385, 386], "static_aco": 387, "acosh": [388, 389, 390, 391], "static_acosh": 392, "static_add": 397, "asin": [398, 399, 400, 401], "static_asin": 402, "asinh": [403, 404, 405, 406], "static_asinh": 407, "atan": [408, 409, 410, 411], "static_atan": 412, "atan2": [413, 414, 415, 416], "static_atan2": 417, "atanh": [418, 419, 420, 421], "static_atanh": 422, "bitwise_and": [423, 424, 425, 426], "static_bitwise_and": 427, "bitwise_invert": [428, 429, 430, 431], "static_bitwise_invert": 432, "bitwise_left_shift": [433, 434, 435, 436], "static_bitwise_left_shift": 437, "bitwise_or": [438, 439, 440, 441], "static_bitwise_or": 442, "bitwise_right_shift": [443, 444, 445, 446], "static_bitwise_right_shift": 447, "bitwise_xor": [448, 449, 450, 451], "static_bitwise_xor": 452, "ceil": [453, 454, 455, 456], "static_ceil": 457, "co": [458, 459, 460, 461], "static_co": 462, "cosh": [463, 464, 465, 466], "static_cosh": 467, "divid": [468, 469, 470, 471], "static_divid": 472, "equal": [473, 474, 475, 476], "static_equ": 477, "erf": [478, 479, 480, 481], "static_erf": 482, "exp": [483, 484, 485, 486], "static_exp": 487, "expm1": [488, 489, 490, 491], "static_expm1": 492, "floor": [493, 494, 495, 496], "static_floor": 497, "floor_divid": [498, 499, 500, 501], "static_floor_divid": 502, "greater": [503, 504, 505, 506], "static_great": 507, "greater_equ": [508, 509, 510, 511], "static_greater_equ": 512, "isfinit": [513, 514, 515, 516], "static_isfinit": 517, "isinf": [518, 519, 520, 521], "static_isinf": 522, "isnan": [523, 524, 525, 526], "static_isnan": 527, "less": [528, 529, 530, 531], "static_less": 532, "less_equ": [533, 534, 535, 536], "static_less_equ": 537, "log": [538, 539, 540, 541], "static_log": 542, "log10": [543, 544, 545, 546], "static_log10": 547, "log1p": [548, 549, 550, 551], "static_log1p": 552, "log2": [553, 554, 555, 556], "static_log2": 557, "logaddexp": [558, 559, 560, 561], "static_logaddexp": 562, "logical_and": [563, 564, 565, 566], "static_logical_and": 567, "logical_not": [568, 569, 570, 571], "static_logical_not": 572, "logical_or": [573, 574, 575, 576], "static_logical_or": 577, "logical_xor": [578, 579, 580, 581], "static_logical_xor": 582, "maximum": 583, "minimum": 584, "multipli": [585, 586, 587, 588], "static_multipli": 589, "neg": [590, 591, 592, 593], "static_neg": 594, "not_equ": [595, 596, 597, 598], "static_not_equ": 599, "posit": [600, 601, 602, 603], "static_posit": 604, "pow": [605, 606, 607, 608], "static_pow": 609, "remaind": [610, 611, 612, 613], "static_remaind": 614, "round": [615, 616, 617, 618], "static_round": 619, "sign": [620, 621, 622, 623], "static_sign": 624, "sin": [625, 626, 627, 628], "static_sin": 629, "sinh": [630, 631, 632, 633], "static_sinh": 634, "sqrt": [635, 636, 637, 638], "static_sqrt": 639, "squar": [640, 641, 642, 643], "static_squar": 644, "subtract": [645, 647, 648, 649], "static_subtract": 646, "static_tan": 651, "static_tanh": 656, "trunc": [660, 662, 663, 664], "static_trunc": 661, "all_equ": [666, 667, 668, 669], "static_all_equ": 670, "arg_info": 671, "arg_nam": 672, "array_equ": 673, "arrays_equ": 674, "assert_supports_inplac": 675, "cache_fn": 676, "clip_matrix_norm": 677, "clip_vector_norm": [678, 679, 680], "container_typ": 681, "copy_arrai": 682, "cumprod": 683, "cumsum": 684, "current_backend_str": 685, "default": 686, "einops_rearrang": 687, "einops_reduc": 688, "einops_repeat": 689, "exist": 690, "floormod": 691, "fourier_encod": 692, "gather": 693, "gather_nd": [694, 695, 696, 697], "static_gather_nd": 698, "get_all_arrays_in_memori": 699, "get_min_bas": 700, "get_min_denomin": 701, "get_nestable_mod": 702, "get_num_dim": 703, "get_referrers_recurs": 704, "has_nan": 705, "indices_wher": 706, "inplace_arrays_support": 707, "inplace_decr": 708, "inplace_incr": 709, "inplace_upd": 710, "inplace_variables_support": 711, "is_arrai": 712, "is_ivy_arrai": 713, "is_ivy_contain": 714, "is_native_arrai": 715, "match_kwarg": 716, "multiprocess": 717, "num_arrays_in_memori": 718, "one_hot": 719, "print_all_arrays_in_memori": 720, "queue_timeout": 721, "scatter_flat": 722, "scatter_nd": 723, "set_min_bas": 724, "set_min_denomin": 725, "set_nestable_mod": 726, "set_queue_timeout": 727, "set_shape_array_mod": 728, "set_tmp_dir": 729, "shape_array_mod": 731, "stable_divid": 732, "stable_pow": 733, "supports_inplac": 734, "tmp_dir": 735, "to_ivy_shap": 736, "to_list": 737, "to_native_shap": 738, "to_numpi": [739, 741, 742, 743], "static_to_numpi": 740, "to_scalar": 744, "try_else_non": 745, "unset_nestable_mod": 746, "unset_shape_array_mod": 747, "unstack": 748, "value_is_nan": 749, "adam_step": [752, 753, 754, 755], "static_adam_step": 756, "adam_upd": [757, 758, 759], "static_adam_upd": 760, "execute_with_gradi": 761, "gradient_descent_upd": [762, 763, 764], "static_gradient_descent_upd": 765, "is_vari": [766, 767, 768, 769], "static_is_vari": 770, "lamb_upd": [771, 772, 773], "static_lamb_upd": 774, "lars_upd": [775, 776, 777], "static_lars_upd": 778, "optimizer_upd": [779, 780, 781], "static_optimizer_upd": 782, "set_with_grad": 783, "stop_gradi": 784, "unset_with_grad": 785, "variabl": 786, "variable_data": 787, "with_grad": 788, "conv1d": [790, 1099], "conv1d_transpos": 791, "conv2d": [792, 1101], "conv2d_transpos": 793, "conv3d": [794, 1103], "conv3d_transpos": 795, "depthwise_conv2d": [796, 797, 798, 799], "static_depthwise_conv2d": 800, "dropout": [801, 1106], "lstm_updat": 803, "multi_head_attent": 804, "scaled_dot_product_attent": 805, "choleski": [807, 808, 809, 810], "static_choleski": 811, "cross": [812, 813, 814], "det": [815, 816, 817], "diagon": [818, 819, 820], "eigh": [821, 822, 823], "eigvalsh": [824, 825, 826], "inv": [827, 828, 829], "matmul": [830, 831, 832, 833], "matrix_norm": [834, 835, 836], "matrix_pow": 837, "matrix_rank": [838, 839, 840], "matrix_transpos": [841, 842, 843], "outer": [844, 845, 846], "pinv": [847, 848, 849], "qr": [850, 851, 852], "slogdet": 853, "solv": [854, 855, 856], "svd": [857, 858, 859], "svdval": [860, 861, 862], "tensordot": [863, 864, 865], "trace": [866, 867, 868], "vecdot": [869, 870, 871], "vector_norm": [872, 873, 874], "vector_to_skew_symmetric_matrix": [875, 876, 877], "binary_cross_entropi": [879, 880, 881, 882], "static_binary_cross_entropi": 883, "cross_entropi": [884, 885, 886, 887], "static_cross_entropi": 888, "sparse_cross_entropi": [889, 890, 891, 892], "static_sparse_cross_entropi": 893, "clip": [895, 896, 897, 898], "static_clip": 899, "concat": [900, 901, 902, 903], "constant_pad": [904, 905, 906, 907], "expand_dim": [908, 909, 910, 911], "flip": [912, 913, 914, 915], "permute_dim": [916, 917, 918, 919], "repeat": [920, 921, 922, 923], "static_repeat": 924, "reshap": [925, 926, 927, 928], "static_rol": 933, "split": 934, "squeez": [935, 936, 937, 938], "stack": [939, 940, 941, 942], "swapax": [943, 944, 945, 946], "tile": [947, 948, 949, 950], "zero_pad": [951, 952, 953, 954], "meta": 955, "fomaml_step": 956, "maml_step": 957, "reptile_step": 958, "nest": 959, "all_nested_indic": 960, "copy_nest": 961, "index_nest": 962, "insert_into_nest_at_index": 963, "insert_into_nest_at_indic": 964, "map": 965, "map_nest_at_index": 966, "map_nest_at_indic": 967, "multi_index_nest": 968, "nested_ani": 969, "nested_indices_wher": 970, "nested_map": 971, "nested_multi_map": 972, "prune_nest_at_index": 973, "prune_nest_at_indic": 974, "set_nest_at_index": 975, "set_nest_at_indic": 976, "layer_norm": [978, 979, 980, 981], "static_layer_norm": 982, "multinomi": 984, "randint": [985, 986], "static_randint": 987, "random_norm": 988, "random_uniform": [989, 990, 991], "static_random_uniform": 992, "seed": 993, "shuffl": 994, "argmax": 996, "argmin": 997, "nonzero": 998, "where": 999, "depend": [1000, 1001, 1005, 1006, 1010, 1016, 1020], "output": [1000, 1001, 1005, 1006, 1010, 1016, 1020], "unique_al": [1001, 1003, 1004, 1005], "static_unique_al": 1002, "unique_count": [1006, 1008, 1009, 1010], "static_unique_count": 1007, "unique_invers": [1011, 1013, 1014, 1015], "static_unique_invers": 1012, "unique_valu": [1016, 1018, 1019, 1020], "static_unique_valu": 1017, "argsort": [1022, 1023, 1024, 1025], "static_argsort": 1026, "static_sort": 1031, "einsum": [1033, 1034, 1035, 1036], "max": [1037, 1038, 1039, 1040], "mean": [1041, 1042, 1043, 1044], "min": [1045, 1046, 1047, 1048], "prod": [1049, 1050, 1051, 1052], "std": [1053, 1054, 1055, 1056], "sum": [1057, 1058, 1059, 1060], "var": [1061, 1062, 1063, 1064], "all": [1066, 1067, 1068, 1069], "static_al": 1070, "ani": [1071, 1072, 1073, 1074], "static_ani": 1075, "content": 1076, "overview": 1076, "quick": 1076, "start": 1076, "roadmap": [1076, 1082], "citat": 1076, "inspect": 1079, "add_array_spec": 1080, "fn_array_spec": 1081, "geglu": 1085, "to_ivy_modul": 1088, "firstlayersiren": 1091, "glorotuniform": 1092, "Ones": 1094, "siren": 1095, "conv1dtranspos": 1100, "conv2dtranspos": 1102, "conv3dtranspos": 1104, "depthwiseconv2d": 1105, "lstm": 1107, "multiheadattent": 1109, "layernorm": 1113, "adam": 1115, "lamb": 1116, "lar": 1117, "sgd": 1119, "sequenti": [1120, 1121], "verbos": 1123, "cprint": 1124}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})