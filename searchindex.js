Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/extra","array/extra/conversions","array/extra/conversions/args_to_ivy","array/extra/conversions/args_to_native","array/extra/conversions/to_ivy","array/extra/conversions/to_native","array/extra/device","array/extra/device/ArrayWithDevice","array/extra/general","array/extra/general/ArrayWithGeneral","array/extra/gradients","array/extra/gradients/ArrayWithGradients","array/extra/image","array/extra/image/ArrayWithImage","array/extra/linalg","array/extra/linalg/ArrayWithLinalg","array/extra/logic","array/extra/logic/ArrayWithLogic","array/extra/math","array/extra/math/ArrayWithMath","array/extra/meta","array/extra/meta/ArrayWithMeta","array/extra/random","array/extra/random/ArrayWithRandom","array/extra/reductions","array/extra/reductions/ArrayWithReductions","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","array/standard","array/standard/arithmetic_operators","array/standard/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/standard/array_operators","array/standard/array_operators/ArrayWithArrayAPIArrayOperators","array/standard/attributes","array/standard/attributes/ArrayWithArrayAPIAttributes","array/standard/bitwise_operators","array/standard/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/standard/comparison_operators","array/standard/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/standard/inplace_operators","array/standard/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/standard/reflected_operators","array/standard/reflected_operators/ArrayWithArrayAPIReflectedOperators","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional","functional/backends","functional/backends/jax","functional/backends/jax/extra","functional/backends/jax/extra/device","functional/backends/jax/extra/device/Profiler","functional/backends/jax/extra/device/dev","functional/backends/jax/extra/device/dev_from_str","functional/backends/jax/extra/device/dev_to_str","functional/backends/jax/extra/device/num_gpus","functional/backends/jax/extra/device/to_dev","functional/backends/jax/extra/general","functional/backends/jax/extra/general/arange","functional/backends/jax/extra/general/argmin","functional/backends/jax/extra/general/array","functional/backends/jax/extra/general/cast","functional/backends/jax/extra/general/concatenate","functional/backends/jax/extra/general/cumprod","functional/backends/jax/extra/general/dtype","functional/backends/jax/extra/general/dtype_bits","functional/backends/jax/extra/general/dtype_from_str","functional/backends/jax/extra/general/dtype_to_str","functional/backends/jax/extra/general/full","functional/backends/jax/extra/general/gather","functional/backends/jax/extra/general/gather_nd","functional/backends/jax/extra/general/identity","functional/backends/jax/extra/general/indices_where","functional/backends/jax/extra/general/inplace_decrement","functional/backends/jax/extra/general/inplace_increment","functional/backends/jax/extra/general/inplace_update","functional/backends/jax/extra/general/is_array","functional/backends/jax/extra/general/linear_resample","functional/backends/jax/extra/general/linspace","functional/backends/jax/extra/general/logspace","functional/backends/jax/extra/general/one_hot","functional/backends/jax/extra/general/scatter_flat","functional/backends/jax/extra/general/scatter_nd","functional/backends/jax/extra/general/split","functional/backends/jax/extra/general/squeeze","functional/backends/jax/extra/general/transpose","functional/backends/jax/extra/general/unstack","functional/backends/jax/extra/general/zeros_like","functional/backends/jax/extra/gradients","functional/backends/jax/extra/gradients/execute_with_gradients","functional/backends/jax/extra/gradients/is_variable","functional/backends/jax/extra/image","functional/backends/jax/extra/image/bilinear_resample","functional/backends/jax/extra/image/gradient_image","functional/backends/jax/extra/image/stack_images","functional/backends/jax/extra/linear_algebra","functional/backends/jax/extra/linear_algebra/matrix_norm","functional/backends/jax/extra/linear_algebra/qr","functional/backends/jax/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/extra/logic","functional/backends/jax/extra/math","functional/backends/jax/extra/random","functional/backends/jax/extra/random/multinomial","functional/backends/jax/extra/random/randint","functional/backends/jax/extra/random/random_normal","functional/backends/jax/extra/random/random_uniform","functional/backends/jax/extra/random/seed","functional/backends/jax/extra/random/shuffle","functional/backends/jax/extra/reductions","functional/backends/jax/extra/reductions/einsum","functional/backends/jax/extra/reductions/reduce_max","functional/backends/jax/extra/reductions/reduce_mean","functional/backends/jax/extra/reductions/reduce_min","functional/backends/jax/extra/reductions/reduce_prod","functional/backends/jax/extra/reductions/reduce_sum","functional/backends/jax/extra/reductions/reduce_var","functional/backends/jax/neural_net","functional/backends/jax/neural_net/activations","functional/backends/jax/neural_net/activations/softmax","functional/backends/jax/neural_net/converters","functional/backends/jax/neural_net/converters/IvyModule","functional/backends/jax/neural_net/converters/to_ivy_module","functional/backends/jax/neural_net/layers","functional/backends/jax/neural_net/layers/conv1d","functional/backends/jax/neural_net/layers/conv1d_transpose","functional/backends/jax/neural_net/layers/conv2d","functional/backends/jax/neural_net/layers/conv2d_transpose","functional/backends/jax/neural_net/layers/conv3d","functional/backends/jax/neural_net/layers/conv3d_transpose","functional/backends/jax/neural_net/layers/depthwise_conv2d","functional/backends/jax/standard","functional/backends/jax/standard/constants","functional/backends/jax/standard/creation_functions","functional/backends/jax/standard/creation_functions/empty","functional/backends/jax/standard/creation_functions/ones","functional/backends/jax/standard/creation_functions/ones_like","functional/backends/jax/standard/creation_functions/tril","functional/backends/jax/standard/creation_functions/zeros","functional/backends/jax/standard/data_type_functions","functional/backends/jax/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/standard/data_type_functions/finfo","functional/backends/jax/standard/data_type_functions/iinfo","functional/backends/jax/standard/data_types","functional/backends/jax/standard/elementwise_functions","functional/backends/jax/standard/elementwise_functions/acosh","functional/backends/jax/standard/elementwise_functions/asinh","functional/backends/jax/standard/elementwise_functions/bitwise_and","functional/backends/jax/standard/elementwise_functions/ceil","functional/backends/jax/standard/elementwise_functions/cos","functional/backends/jax/standard/elementwise_functions/cosh","functional/backends/jax/standard/elementwise_functions/equal","functional/backends/jax/standard/elementwise_functions/isfinite","functional/backends/jax/standard/elementwise_functions/isnan","functional/backends/jax/standard/elementwise_functions/less","functional/backends/jax/standard/elementwise_functions/less_equal","functional/backends/jax/standard/elementwise_functions/log10","functional/backends/jax/standard/elementwise_functions/log1p","functional/backends/jax/standard/elementwise_functions/log2","functional/backends/jax/standard/elementwise_functions/logical_not","functional/backends/jax/standard/elementwise_functions/logical_or","functional/backends/jax/standard/elementwise_functions/negative","functional/backends/jax/standard/elementwise_functions/sin","functional/backends/jax/standard/elementwise_functions/sinh","functional/backends/jax/standard/elementwise_functions/sqrt","functional/backends/jax/standard/elementwise_functions/tanh","functional/backends/jax/standard/function_and_method_signatures","functional/backends/jax/standard/linear_algebra","functional/backends/jax/standard/linear_algebra/diagonal","functional/backends/jax/standard/linear_algebra/matmul","functional/backends/jax/standard/linear_algebra/slogdet","functional/backends/jax/standard/linear_algebra/svd","functional/backends/jax/standard/linear_algebra/trace","functional/backends/jax/standard/linear_algebra/vector_norm","functional/backends/jax/standard/manipulation_functions","functional/backends/jax/standard/manipulation_functions/flip","functional/backends/jax/standard/searching_functions","functional/backends/jax/standard/searching_functions/argmax","functional/backends/jax/standard/set_functions","functional/backends/jax/standard/sorting_functions","functional/backends/jax/standard/sorting_functions/argsort","functional/backends/jax/standard/statistical_functions","functional/backends/jax/standard/statistical_functions/min","functional/backends/jax/standard/utility_functions","functional/backends/jax/standard/utility_functions/all","functional/backends/jax/standard/utility_functions/any","functional/backends/mxnet","functional/backends/mxnet/extra","functional/backends/mxnet/extra/device","functional/backends/mxnet/extra/device/Profiler","functional/backends/mxnet/extra/device/dev","functional/backends/mxnet/extra/device/dev_from_str","functional/backends/mxnet/extra/device/dev_to_str","functional/backends/mxnet/extra/device/to_dev","functional/backends/mxnet/extra/general","functional/backends/mxnet/extra/general/abs","functional/backends/mxnet/extra/general/arange","functional/backends/mxnet/extra/general/array","functional/backends/mxnet/extra/general/array_equal","functional/backends/mxnet/extra/general/broadcast_to","functional/backends/mxnet/extra/general/cast","functional/backends/mxnet/extra/general/clip","functional/backends/mxnet/extra/general/compile","functional/backends/mxnet/extra/general/concatenate","functional/backends/mxnet/extra/general/constant_pad","functional/backends/mxnet/extra/general/cross","functional/backends/mxnet/extra/general/cumprod","functional/backends/mxnet/extra/general/dtype","functional/backends/mxnet/extra/general/dtype_bits","functional/backends/mxnet/extra/general/dtype_from_str","functional/backends/mxnet/extra/general/dtype_to_str","functional/backends/mxnet/extra/general/expand_dims","functional/backends/mxnet/extra/general/floor","functional/backends/mxnet/extra/general/floormod","functional/backends/mxnet/extra/general/full","functional/backends/mxnet/extra/general/gather","functional/backends/mxnet/extra/general/gather_nd","functional/backends/mxnet/extra/general/identity","functional/backends/mxnet/extra/general/indices_where","functional/backends/mxnet/extra/general/inplace_decrement","functional/backends/mxnet/extra/general/inplace_increment","functional/backends/mxnet/extra/general/inplace_update","functional/backends/mxnet/extra/general/is_array","functional/backends/mxnet/extra/general/isinf","functional/backends/mxnet/extra/general/linear_resample","functional/backends/mxnet/extra/general/linspace","functional/backends/mxnet/extra/general/logspace","functional/backends/mxnet/extra/general/matmul","functional/backends/mxnet/extra/general/meshgrid","functional/backends/mxnet/extra/general/repeat","functional/backends/mxnet/extra/general/round","functional/backends/mxnet/extra/general/scatter_flat","functional/backends/mxnet/extra/general/scatter_nd","functional/backends/mxnet/extra/general/split","functional/backends/mxnet/extra/general/squeeze","functional/backends/mxnet/extra/general/stack","functional/backends/mxnet/extra/general/tile","functional/backends/mxnet/extra/general/transpose","functional/backends/mxnet/extra/general/unstack","functional/backends/mxnet/extra/general/where","functional/backends/mxnet/extra/general/zero_pad","functional/backends/mxnet/extra/general/zeros_like","functional/backends/mxnet/extra/gradients","functional/backends/mxnet/extra/gradients/execute_with_gradients","functional/backends/mxnet/extra/gradients/is_variable","functional/backends/mxnet/extra/gradients/stop_gradient","functional/backends/mxnet/extra/gradients/variable","functional/backends/mxnet/extra/image","functional/backends/mxnet/extra/image/bilinear_resample","functional/backends/mxnet/extra/image/gradient_image","functional/backends/mxnet/extra/image/stack_images","functional/backends/mxnet/extra/linear_algebra","functional/backends/mxnet/extra/linear_algebra/matrix_norm","functional/backends/mxnet/extra/linear_algebra/pinv","functional/backends/mxnet/extra/linear_algebra/qr","functional/backends/mxnet/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/extra/logic","functional/backends/mxnet/extra/logic/logical_and","functional/backends/mxnet/extra/logic/logical_or","functional/backends/mxnet/extra/math","functional/backends/mxnet/extra/random","functional/backends/mxnet/extra/random/multinomial","functional/backends/mxnet/extra/random/randint","functional/backends/mxnet/extra/random/random_normal","functional/backends/mxnet/extra/random/random_uniform","functional/backends/mxnet/extra/reductions","functional/backends/mxnet/extra/reductions/einsum","functional/backends/mxnet/extra/reductions/reduce_max","functional/backends/mxnet/extra/reductions/reduce_mean","functional/backends/mxnet/extra/reductions/reduce_min","functional/backends/mxnet/extra/reductions/reduce_prod","functional/backends/mxnet/extra/reductions/reduce_std","functional/backends/mxnet/extra/reductions/reduce_sum","functional/backends/mxnet/extra/reductions/reduce_var","functional/backends/mxnet/neural_net","functional/backends/mxnet/neural_net/activations","functional/backends/mxnet/neural_net/activations/gelu","functional/backends/mxnet/neural_net/layers","functional/backends/mxnet/neural_net/layers/conv1d","functional/backends/mxnet/neural_net/layers/conv1d_transpose","functional/backends/mxnet/neural_net/layers/conv2d","functional/backends/mxnet/neural_net/layers/conv2d_transpose","functional/backends/mxnet/neural_net/layers/conv3d","functional/backends/mxnet/neural_net/layers/conv3d_transpose","functional/backends/mxnet/neural_net/layers/depthwise_conv2d","functional/backends/mxnet/standard","functional/backends/mxnet/standard/constants","functional/backends/mxnet/standard/creation_functions","functional/backends/mxnet/standard/creation_functions/empty","functional/backends/mxnet/standard/creation_functions/ones","functional/backends/mxnet/standard/creation_functions/ones_like","functional/backends/mxnet/standard/creation_functions/tril","functional/backends/mxnet/standard/creation_functions/zeros","functional/backends/mxnet/standard/data_type_functions","functional/backends/mxnet/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/standard/data_type_functions/finfo","functional/backends/mxnet/standard/data_type_functions/iinfo","functional/backends/mxnet/standard/data_types","functional/backends/mxnet/standard/elementwise_functions","functional/backends/mxnet/standard/elementwise_functions/acosh","functional/backends/mxnet/standard/elementwise_functions/bitwise_and","functional/backends/mxnet/standard/elementwise_functions/ceil","functional/backends/mxnet/standard/elementwise_functions/isfinite","functional/backends/mxnet/standard/elementwise_functions/isnan","functional/backends/mxnet/standard/elementwise_functions/less","functional/backends/mxnet/standard/elementwise_functions/logical_not","functional/backends/mxnet/standard/elementwise_functions/negative","functional/backends/mxnet/standard/elementwise_functions/sin","functional/backends/mxnet/standard/elementwise_functions/sinh","functional/backends/mxnet/standard/elementwise_functions/sqrt","functional/backends/mxnet/standard/elementwise_functions/tanh","functional/backends/mxnet/standard/function_and_method_signatures","functional/backends/mxnet/standard/linear_algebra","functional/backends/mxnet/standard/linear_algebra/diagonal","functional/backends/mxnet/standard/linear_algebra/slogdet","functional/backends/mxnet/standard/linear_algebra/svd","functional/backends/mxnet/standard/linear_algebra/trace","functional/backends/mxnet/standard/linear_algebra/vector_norm","functional/backends/mxnet/standard/manipulation_functions","functional/backends/mxnet/standard/manipulation_functions/flip","functional/backends/mxnet/standard/searching_functions","functional/backends/mxnet/standard/searching_functions/argmax","functional/backends/mxnet/standard/set_functions","functional/backends/mxnet/standard/sorting_functions","functional/backends/mxnet/standard/sorting_functions/argsort","functional/backends/mxnet/standard/statistical_functions","functional/backends/mxnet/standard/utility_functions","functional/backends/mxnet/standard/utility_functions/all","functional/backends/mxnet/standard/utility_functions/any","functional/backends/numpy","functional/backends/numpy/extra","functional/backends/numpy/extra/device","functional/backends/numpy/extra/device/Profiler","functional/backends/numpy/extra/general","functional/backends/numpy/extra/general/arange","functional/backends/numpy/extra/general/argmin","functional/backends/numpy/extra/general/array","functional/backends/numpy/extra/general/cast","functional/backends/numpy/extra/general/compile","functional/backends/numpy/extra/general/concatenate","functional/backends/numpy/extra/general/cumprod","functional/backends/numpy/extra/general/dtype","functional/backends/numpy/extra/general/dtype_bits","functional/backends/numpy/extra/general/dtype_from_str","functional/backends/numpy/extra/general/dtype_to_str","functional/backends/numpy/extra/general/full","functional/backends/numpy/extra/general/gather","functional/backends/numpy/extra/general/gather_nd","functional/backends/numpy/extra/general/identity","functional/backends/numpy/extra/general/indices_where","functional/backends/numpy/extra/general/inplace_decrement","functional/backends/numpy/extra/general/inplace_increment","functional/backends/numpy/extra/general/inplace_update","functional/backends/numpy/extra/general/is_array","functional/backends/numpy/extra/general/linear_resample","functional/backends/numpy/extra/general/linspace","functional/backends/numpy/extra/general/logspace","functional/backends/numpy/extra/general/one_hot","functional/backends/numpy/extra/general/scatter_flat","functional/backends/numpy/extra/general/scatter_nd","functional/backends/numpy/extra/general/split","functional/backends/numpy/extra/general/squeeze","functional/backends/numpy/extra/general/transpose","functional/backends/numpy/extra/general/unstack","functional/backends/numpy/extra/general/zeros_like","functional/backends/numpy/extra/gradients","functional/backends/numpy/extra/gradients/execute_with_gradients","functional/backends/numpy/extra/gradients/is_variable","functional/backends/numpy/extra/gradients/stop_gradient","functional/backends/numpy/extra/gradients/variable","functional/backends/numpy/extra/image","functional/backends/numpy/extra/image/bilinear_resample","functional/backends/numpy/extra/image/gradient_image","functional/backends/numpy/extra/image/stack_images","functional/backends/numpy/extra/linear_algebra","functional/backends/numpy/extra/linear_algebra/matrix_norm","functional/backends/numpy/extra/linear_algebra/qr","functional/backends/numpy/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/extra/logic","functional/backends/numpy/extra/math","functional/backends/numpy/extra/math/erf","functional/backends/numpy/extra/random","functional/backends/numpy/extra/random/multinomial","functional/backends/numpy/extra/reductions","functional/backends/numpy/extra/reductions/einsum","functional/backends/numpy/extra/reductions/reduce_max","functional/backends/numpy/extra/reductions/reduce_mean","functional/backends/numpy/extra/reductions/reduce_min","functional/backends/numpy/extra/reductions/reduce_prod","functional/backends/numpy/extra/reductions/reduce_sum","functional/backends/numpy/extra/reductions/reduce_var","functional/backends/numpy/neural_net","functional/backends/numpy/neural_net/activations","functional/backends/numpy/neural_net/activations/gelu","functional/backends/numpy/neural_net/activations/softmax","functional/backends/numpy/neural_net/layers","functional/backends/numpy/neural_net/layers/conv1d","functional/backends/numpy/neural_net/layers/conv1d_transpose","functional/backends/numpy/neural_net/layers/conv2d","functional/backends/numpy/neural_net/layers/conv2d_transpose","functional/backends/numpy/neural_net/layers/conv3d","functional/backends/numpy/neural_net/layers/conv3d_transpose","functional/backends/numpy/neural_net/layers/depthwise_conv2d","functional/backends/numpy/standard","functional/backends/numpy/standard/constants","functional/backends/numpy/standard/creation_functions","functional/backends/numpy/standard/creation_functions/empty","functional/backends/numpy/standard/creation_functions/ones","functional/backends/numpy/standard/creation_functions/ones_like","functional/backends/numpy/standard/creation_functions/tril","functional/backends/numpy/standard/creation_functions/zeros","functional/backends/numpy/standard/data_type_functions","functional/backends/numpy/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/standard/data_type_functions/finfo","functional/backends/numpy/standard/data_type_functions/iinfo","functional/backends/numpy/standard/data_types","functional/backends/numpy/standard/elementwise_functions","functional/backends/numpy/standard/elementwise_functions/acosh","functional/backends/numpy/standard/elementwise_functions/asinh","functional/backends/numpy/standard/elementwise_functions/bitwise_and","functional/backends/numpy/standard/elementwise_functions/ceil","functional/backends/numpy/standard/elementwise_functions/cos","functional/backends/numpy/standard/elementwise_functions/cosh","functional/backends/numpy/standard/elementwise_functions/equal","functional/backends/numpy/standard/elementwise_functions/isfinite","functional/backends/numpy/standard/elementwise_functions/isnan","functional/backends/numpy/standard/elementwise_functions/less","functional/backends/numpy/standard/elementwise_functions/less_equal","functional/backends/numpy/standard/elementwise_functions/log10","functional/backends/numpy/standard/elementwise_functions/log1p","functional/backends/numpy/standard/elementwise_functions/log2","functional/backends/numpy/standard/elementwise_functions/logical_not","functional/backends/numpy/standard/elementwise_functions/logical_or","functional/backends/numpy/standard/elementwise_functions/negative","functional/backends/numpy/standard/elementwise_functions/sin","functional/backends/numpy/standard/elementwise_functions/sinh","functional/backends/numpy/standard/elementwise_functions/sqrt","functional/backends/numpy/standard/elementwise_functions/tanh","functional/backends/numpy/standard/function_and_method_signatures","functional/backends/numpy/standard/linear_algebra","functional/backends/numpy/standard/linear_algebra/diagonal","functional/backends/numpy/standard/linear_algebra/matmul","functional/backends/numpy/standard/linear_algebra/slogdet","functional/backends/numpy/standard/linear_algebra/svd","functional/backends/numpy/standard/linear_algebra/trace","functional/backends/numpy/standard/linear_algebra/vector_norm","functional/backends/numpy/standard/manipulation_functions","functional/backends/numpy/standard/manipulation_functions/flip","functional/backends/numpy/standard/searching_functions","functional/backends/numpy/standard/searching_functions/argmax","functional/backends/numpy/standard/set_functions","functional/backends/numpy/standard/sorting_functions","functional/backends/numpy/standard/sorting_functions/argsort","functional/backends/numpy/standard/statistical_functions","functional/backends/numpy/standard/statistical_functions/min","functional/backends/numpy/standard/utility_functions","functional/backends/numpy/standard/utility_functions/all","functional/backends/numpy/standard/utility_functions/any","functional/backends/tensorflow","functional/backends/tensorflow/extra","functional/backends/tensorflow/extra/device","functional/backends/tensorflow/extra/device/Profiler","functional/backends/tensorflow/extra/device/dev","functional/backends/tensorflow/extra/device/dev_from_str","functional/backends/tensorflow/extra/device/dev_to_str","functional/backends/tensorflow/extra/device/to_dev","functional/backends/tensorflow/extra/device/tpu_is_available","functional/backends/tensorflow/extra/general","functional/backends/tensorflow/extra/general/abs","functional/backends/tensorflow/extra/general/arange","functional/backends/tensorflow/extra/general/argmin","functional/backends/tensorflow/extra/general/array","functional/backends/tensorflow/extra/general/cast","functional/backends/tensorflow/extra/general/concatenate","functional/backends/tensorflow/extra/general/constant_pad","functional/backends/tensorflow/extra/general/dtype","functional/backends/tensorflow/extra/general/dtype_bits","functional/backends/tensorflow/extra/general/dtype_from_str","functional/backends/tensorflow/extra/general/dtype_to_str","functional/backends/tensorflow/extra/general/full","functional/backends/tensorflow/extra/general/gather","functional/backends/tensorflow/extra/general/gather_nd","functional/backends/tensorflow/extra/general/identity","functional/backends/tensorflow/extra/general/inplace_decrement","functional/backends/tensorflow/extra/general/inplace_increment","functional/backends/tensorflow/extra/general/inplace_update","functional/backends/tensorflow/extra/general/is_array","functional/backends/tensorflow/extra/general/isinf","functional/backends/tensorflow/extra/general/linear_resample","functional/backends/tensorflow/extra/general/linspace","functional/backends/tensorflow/extra/general/logspace","functional/backends/tensorflow/extra/general/one_hot","functional/backends/tensorflow/extra/general/scatter_flat","functional/backends/tensorflow/extra/general/scatter_nd","functional/backends/tensorflow/extra/general/split","functional/backends/tensorflow/extra/general/squeeze","functional/backends/tensorflow/extra/general/swapaxes","functional/backends/tensorflow/extra/general/tile","functional/backends/tensorflow/extra/general/unstack","functional/backends/tensorflow/extra/general/zero_pad","functional/backends/tensorflow/extra/general/zeros_like","functional/backends/tensorflow/extra/gradients","functional/backends/tensorflow/extra/gradients/execute_with_gradients","functional/backends/tensorflow/extra/gradients/is_variable","functional/backends/tensorflow/extra/gradients/stop_gradient","functional/backends/tensorflow/extra/gradients/variable","functional/backends/tensorflow/extra/image","functional/backends/tensorflow/extra/image/bilinear_resample","functional/backends/tensorflow/extra/image/gradient_image","functional/backends/tensorflow/extra/image/stack_images","functional/backends/tensorflow/extra/linear_algebra","functional/backends/tensorflow/extra/linear_algebra/matrix_norm","functional/backends/tensorflow/extra/linear_algebra/qr","functional/backends/tensorflow/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/extra/logic","functional/backends/tensorflow/extra/math","functional/backends/tensorflow/extra/random","functional/backends/tensorflow/extra/random/multinomial","functional/backends/tensorflow/extra/random/randint","functional/backends/tensorflow/extra/random/random_normal","functional/backends/tensorflow/extra/random/random_uniform","functional/backends/tensorflow/extra/reductions","functional/backends/tensorflow/extra/reductions/einsum","functional/backends/tensorflow/extra/reductions/reduce_max","functional/backends/tensorflow/extra/reductions/reduce_mean","functional/backends/tensorflow/extra/reductions/reduce_min","functional/backends/tensorflow/extra/reductions/reduce_prod","functional/backends/tensorflow/extra/reductions/reduce_sum","functional/backends/tensorflow/extra/reductions/reduce_var","functional/backends/tensorflow/neural_net","functional/backends/tensorflow/neural_net/activations","functional/backends/tensorflow/neural_net/layers","functional/backends/tensorflow/neural_net/layers/conv2d","functional/backends/tensorflow/neural_net/layers/conv3d","functional/backends/tensorflow/neural_net/layers/depthwise_conv2d","functional/backends/tensorflow/standard","functional/backends/tensorflow/standard/constants","functional/backends/tensorflow/standard/creation_functions","functional/backends/tensorflow/standard/creation_functions/empty","functional/backends/tensorflow/standard/creation_functions/ones","functional/backends/tensorflow/standard/creation_functions/ones_like","functional/backends/tensorflow/standard/creation_functions/tril","functional/backends/tensorflow/standard/creation_functions/zeros","functional/backends/tensorflow/standard/data_type_functions","functional/backends/tensorflow/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/standard/data_type_functions/finfo","functional/backends/tensorflow/standard/data_type_functions/iinfo","functional/backends/tensorflow/standard/data_types","functional/backends/tensorflow/standard/elementwise_functions","functional/backends/tensorflow/standard/elementwise_functions/acosh","functional/backends/tensorflow/standard/elementwise_functions/asinh","functional/backends/tensorflow/standard/elementwise_functions/bitwise_and","functional/backends/tensorflow/standard/elementwise_functions/ceil","functional/backends/tensorflow/standard/elementwise_functions/cos","functional/backends/tensorflow/standard/elementwise_functions/cosh","functional/backends/tensorflow/standard/elementwise_functions/equal","functional/backends/tensorflow/standard/elementwise_functions/isfinite","functional/backends/tensorflow/standard/elementwise_functions/isnan","functional/backends/tensorflow/standard/elementwise_functions/less","functional/backends/tensorflow/standard/elementwise_functions/less_equal","functional/backends/tensorflow/standard/elementwise_functions/log10","functional/backends/tensorflow/standard/elementwise_functions/log1p","functional/backends/tensorflow/standard/elementwise_functions/log2","functional/backends/tensorflow/standard/elementwise_functions/logical_not","functional/backends/tensorflow/standard/elementwise_functions/logical_or","functional/backends/tensorflow/standard/elementwise_functions/negative","functional/backends/tensorflow/standard/elementwise_functions/sin","functional/backends/tensorflow/standard/elementwise_functions/sinh","functional/backends/tensorflow/standard/elementwise_functions/sqrt","functional/backends/tensorflow/standard/elementwise_functions/tanh","functional/backends/tensorflow/standard/function_and_method_signatures","functional/backends/tensorflow/standard/linear_algebra","functional/backends/tensorflow/standard/linear_algebra/diagonal","functional/backends/tensorflow/standard/linear_algebra/matmul","functional/backends/tensorflow/standard/linear_algebra/slogdet","functional/backends/tensorflow/standard/linear_algebra/svd","functional/backends/tensorflow/standard/linear_algebra/trace","functional/backends/tensorflow/standard/linear_algebra/vector_norm","functional/backends/tensorflow/standard/manipulation_functions","functional/backends/tensorflow/standard/manipulation_functions/flip","functional/backends/tensorflow/standard/searching_functions","functional/backends/tensorflow/standard/searching_functions/argmax","functional/backends/tensorflow/standard/set_functions","functional/backends/tensorflow/standard/sorting_functions","functional/backends/tensorflow/standard/sorting_functions/argsort","functional/backends/tensorflow/standard/statistical_functions","functional/backends/tensorflow/standard/statistical_functions/min","functional/backends/tensorflow/standard/utility_functions","functional/backends/tensorflow/standard/utility_functions/all","functional/backends/tensorflow/standard/utility_functions/any","functional/backends/torch","functional/backends/torch/extra","functional/backends/torch/extra/device","functional/backends/torch/extra/device/Profiler","functional/backends/torch/extra/device/clear_mem_on_dev","functional/backends/torch/extra/device/dev","functional/backends/torch/extra/device/dev_from_str","functional/backends/torch/extra/device/dev_to_str","functional/backends/torch/extra/device/to_dev","functional/backends/torch/extra/device/tpu_is_available","functional/backends/torch/extra/general","functional/backends/torch/extra/general/abs","functional/backends/torch/extra/general/arange","functional/backends/torch/extra/general/argmin","functional/backends/torch/extra/general/array","functional/backends/torch/extra/general/array_equal","functional/backends/torch/extra/general/broadcast_to","functional/backends/torch/extra/general/cast","functional/backends/torch/extra/general/clip","functional/backends/torch/extra/general/compile","functional/backends/torch/extra/general/concatenate","functional/backends/torch/extra/general/constant_pad","functional/backends/torch/extra/general/container_types","functional/backends/torch/extra/general/copy_array","functional/backends/torch/extra/general/cross","functional/backends/torch/extra/general/cumprod","functional/backends/torch/extra/general/cumsum","functional/backends/torch/extra/general/current_framework_str","functional/backends/torch/extra/general/dtype","functional/backends/torch/extra/general/dtype_bits","functional/backends/torch/extra/general/dtype_from_str","functional/backends/torch/extra/general/dtype_to_str","functional/backends/torch/extra/general/expand_dims","functional/backends/torch/extra/general/floor","functional/backends/torch/extra/general/floormod","functional/backends/torch/extra/general/full","functional/backends/torch/extra/general/gather","functional/backends/torch/extra/general/gather_nd","functional/backends/torch/extra/general/get_num_dims","functional/backends/torch/extra/general/identity","functional/backends/torch/extra/general/indices_where","functional/backends/torch/extra/general/inplace_decrement","functional/backends/torch/extra/general/inplace_increment","functional/backends/torch/extra/general/inplace_update","functional/backends/torch/extra/general/is_array","functional/backends/torch/extra/general/isinf","functional/backends/torch/extra/general/linear_resample","functional/backends/torch/extra/general/linspace","functional/backends/torch/extra/general/logspace","functional/backends/torch/extra/general/maximum","functional/backends/torch/extra/general/meshgrid","functional/backends/torch/extra/general/minimum","functional/backends/torch/extra/general/multiprocessing","functional/backends/torch/extra/general/one_hot","functional/backends/torch/extra/general/repeat","functional/backends/torch/extra/general/reshape","functional/backends/torch/extra/general/round","functional/backends/torch/extra/general/scatter_flat","functional/backends/torch/extra/general/scatter_nd","functional/backends/torch/extra/general/shape","functional/backends/torch/extra/general/split","functional/backends/torch/extra/general/squeeze","functional/backends/torch/extra/general/stack","functional/backends/torch/extra/general/swapaxes","functional/backends/torch/extra/general/tile","functional/backends/torch/extra/general/to_list","functional/backends/torch/extra/general/to_numpy","functional/backends/torch/extra/general/to_scalar","functional/backends/torch/extra/general/transpose","functional/backends/torch/extra/general/unstack","functional/backends/torch/extra/general/where","functional/backends/torch/extra/general/zero_pad","functional/backends/torch/extra/general/zeros_like","functional/backends/torch/extra/gradients","functional/backends/torch/extra/gradients/execute_with_gradients","functional/backends/torch/extra/gradients/is_variable","functional/backends/torch/extra/gradients/stop_gradient","functional/backends/torch/extra/gradients/variable","functional/backends/torch/extra/gradients/variable_data","functional/backends/torch/extra/image","functional/backends/torch/extra/image/bilinear_resample","functional/backends/torch/extra/image/gradient_image","functional/backends/torch/extra/image/stack_images","functional/backends/torch/extra/linear_algebra","functional/backends/torch/extra/linear_algebra/cholesky","functional/backends/torch/extra/linear_algebra/inv","functional/backends/torch/extra/linear_algebra/matrix_norm","functional/backends/torch/extra/linear_algebra/pinv","functional/backends/torch/extra/linear_algebra/qr","functional/backends/torch/extra/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/extra/logic","functional/backends/torch/extra/logic/logical_and","functional/backends/torch/extra/logic/logical_or","functional/backends/torch/extra/math","functional/backends/torch/extra/math/acos","functional/backends/torch/extra/math/asin","functional/backends/torch/extra/math/atan","functional/backends/torch/extra/math/atan2","functional/backends/torch/extra/math/atanh","functional/backends/torch/extra/math/cosh","functional/backends/torch/extra/math/erf","functional/backends/torch/extra/math/exp","functional/backends/torch/extra/math/log","functional/backends/torch/extra/math/tan","functional/backends/torch/extra/random","functional/backends/torch/extra/random/multinomial","functional/backends/torch/extra/random/randint","functional/backends/torch/extra/random/random_normal","functional/backends/torch/extra/random/random_uniform","functional/backends/torch/extra/random/seed","functional/backends/torch/extra/random/shuffle","functional/backends/torch/extra/reductions","functional/backends/torch/extra/reductions/einsum","functional/backends/torch/extra/reductions/reduce_max","functional/backends/torch/extra/reductions/reduce_mean","functional/backends/torch/extra/reductions/reduce_min","functional/backends/torch/extra/reductions/reduce_prod","functional/backends/torch/extra/reductions/reduce_sum","functional/backends/torch/extra/reductions/reduce_var","functional/backends/torch/neural_net","functional/backends/torch/neural_net/activations","functional/backends/torch/neural_net/activations/gelu","functional/backends/torch/neural_net/activations/leaky_relu","functional/backends/torch/neural_net/activations/relu","functional/backends/torch/neural_net/activations/sigmoid","functional/backends/torch/neural_net/activations/softmax","functional/backends/torch/neural_net/activations/softplus","functional/backends/torch/neural_net/activations/tanh","functional/backends/torch/neural_net/converters","functional/backends/torch/neural_net/converters/IvyModule","functional/backends/torch/neural_net/converters/to_ivy_module","functional/backends/torch/neural_net/layers","functional/backends/torch/neural_net/layers/conv1d","functional/backends/torch/neural_net/layers/conv1d_transpose","functional/backends/torch/neural_net/layers/conv2d","functional/backends/torch/neural_net/layers/conv2d_transpose","functional/backends/torch/neural_net/layers/conv3d","functional/backends/torch/neural_net/layers/conv3d_transpose","functional/backends/torch/neural_net/layers/depthwise_conv2d","functional/backends/torch/standard","functional/backends/torch/standard/constants","functional/backends/torch/standard/creation_functions","functional/backends/torch/standard/creation_functions/empty","functional/backends/torch/standard/creation_functions/ones","functional/backends/torch/standard/creation_functions/ones_like","functional/backends/torch/standard/creation_functions/tril","functional/backends/torch/standard/creation_functions/zeros","functional/backends/torch/standard/data_type_functions","functional/backends/torch/standard/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/standard/data_type_functions/finfo","functional/backends/torch/standard/data_type_functions/iinfo","functional/backends/torch/standard/data_types","functional/backends/torch/standard/elementwise_functions","functional/backends/torch/standard/elementwise_functions/acosh","functional/backends/torch/standard/elementwise_functions/asinh","functional/backends/torch/standard/elementwise_functions/bitwise_and","functional/backends/torch/standard/elementwise_functions/ceil","functional/backends/torch/standard/elementwise_functions/cos","functional/backends/torch/standard/elementwise_functions/cosh","functional/backends/torch/standard/elementwise_functions/equal","functional/backends/torch/standard/elementwise_functions/isfinite","functional/backends/torch/standard/elementwise_functions/isnan","functional/backends/torch/standard/elementwise_functions/less","functional/backends/torch/standard/elementwise_functions/less_equal","functional/backends/torch/standard/elementwise_functions/log10","functional/backends/torch/standard/elementwise_functions/log1p","functional/backends/torch/standard/elementwise_functions/log2","functional/backends/torch/standard/elementwise_functions/logical_not","functional/backends/torch/standard/elementwise_functions/logical_or","functional/backends/torch/standard/elementwise_functions/negative","functional/backends/torch/standard/elementwise_functions/sin","functional/backends/torch/standard/elementwise_functions/sinh","functional/backends/torch/standard/elementwise_functions/sqrt","functional/backends/torch/standard/elementwise_functions/tanh","functional/backends/torch/standard/function_and_method_signatures","functional/backends/torch/standard/linear_algebra","functional/backends/torch/standard/linear_algebra/diagonal","functional/backends/torch/standard/linear_algebra/matmul","functional/backends/torch/standard/linear_algebra/slogdet","functional/backends/torch/standard/linear_algebra/svd","functional/backends/torch/standard/linear_algebra/trace","functional/backends/torch/standard/linear_algebra/vector_norm","functional/backends/torch/standard/manipulation_functions","functional/backends/torch/standard/manipulation_functions/flip","functional/backends/torch/standard/searching_functions","functional/backends/torch/standard/searching_functions/argmax","functional/backends/torch/standard/set_functions","functional/backends/torch/standard/sorting_functions","functional/backends/torch/standard/sorting_functions/argsort","functional/backends/torch/standard/statistical_functions","functional/backends/torch/standard/statistical_functions/min","functional/backends/torch/standard/utility_functions","functional/backends/torch/standard/utility_functions/all","functional/backends/torch/standard/utility_functions/any","functional/ivy","functional/ivy/extra","functional/ivy/extra/compilation","functional/ivy/extra/compilation/compile","functional/ivy/extra/device","functional/ivy/extra/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/device/DevClonedItem","functional/ivy/extra/device/DevClonedIter","functional/ivy/extra/device/DevClonedNest","functional/ivy/extra/device/DevDistItem","functional/ivy/extra/device/DevDistIter","functional/ivy/extra/device/DevDistNest","functional/ivy/extra/device/DevManager:\n\n    def __init__","functional/ivy/extra/device/DevMapper","functional/ivy/extra/device/DevMapperMultiProc","functional/ivy/extra/device/MultiDev:\n\n    def __init__","functional/ivy/extra/device/MultiDevItem","functional/ivy/extra/device/MultiDevIter","functional/ivy/extra/device/MultiDevNest","functional/ivy/extra/device/Profiler","functional/ivy/extra/device/clear_mem_on_dev","functional/ivy/extra/device/default_device","functional/ivy/extra/device/dev","functional/ivy/extra/device/dev_clone","functional/ivy/extra/device/dev_clone_array","functional/ivy/extra/device/dev_clone_iter","functional/ivy/extra/device/dev_clone_nest","functional/ivy/extra/device/dev_dist","functional/ivy/extra/device/dev_dist_array","functional/ivy/extra/device/dev_dist_iter","functional/ivy/extra/device/dev_dist_nest","functional/ivy/extra/device/dev_from_str","functional/ivy/extra/device/dev_to_str","functional/ivy/extra/device/dev_unify","functional/ivy/extra/device/dev_unify_array","functional/ivy/extra/device/dev_unify_iter","functional/ivy/extra/device/dev_unify_nest","functional/ivy/extra/device/dev_util","functional/ivy/extra/device/get_all_arrays_on_dev","functional/ivy/extra/device/gpu_is_available","functional/ivy/extra/device/num_arrays_on_dev","functional/ivy/extra/device/num_cpu_cores","functional/ivy/extra/device/num_gpus","functional/ivy/extra/device/percent_used_mem_on_dev","functional/ivy/extra/device/print_all_arrays_on_dev","functional/ivy/extra/device/set_default_device","functional/ivy/extra/device/set_split_factor","functional/ivy/extra/device/split_factor","functional/ivy/extra/device/split_func_call","functional/ivy/extra/device/to_dev","functional/ivy/extra/device/total_mem_on_dev","functional/ivy/extra/device/tpu_is_available","functional/ivy/extra/device/unset_default_device","functional/ivy/extra/device/used_mem_on_dev","functional/ivy/extra/dtype","functional/ivy/extra/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/dtype/cast","functional/ivy/extra/dtype/closest_valid_dtype","functional/ivy/extra/dtype/convert_dtype","functional/ivy/extra/dtype/default_dtype","functional/ivy/extra/dtype/default_float_dtype","functional/ivy/extra/dtype/default_int_dtype","functional/ivy/extra/dtype/dtype","functional/ivy/extra/dtype/dtype_bits","functional/ivy/extra/dtype/dtype_from_str","functional/ivy/extra/dtype/dtype_to_str","functional/ivy/extra/dtype/invalid_dtype","functional/ivy/extra/dtype/is_float_dtype","functional/ivy/extra/dtype/is_int_dtype","functional/ivy/extra/dtype/set_default_dtype","functional/ivy/extra/dtype/set_default_float_dtype","functional/ivy/extra/dtype/set_default_int_dtype","functional/ivy/extra/dtype/unset_default_dtype","functional/ivy/extra/dtype/unset_default_float_dtype","functional/ivy/extra/dtype/unset_default_int_dtype","functional/ivy/extra/dtype/valid_dtype","functional/ivy/extra/general","functional/ivy/extra/general/abs","functional/ivy/extra/general/all_equal","functional/ivy/extra/general/arange","functional/ivy/extra/general/arg_names","functional/ivy/extra/general/argmin","functional/ivy/extra/general/array","functional/ivy/extra/general/array_equal","functional/ivy/extra/general/arrays_equal","functional/ivy/extra/general/assert_supports_inplace","functional/ivy/extra/general/broadcast_to","functional/ivy/extra/general/cache_fn","functional/ivy/extra/general/clip","functional/ivy/extra/general/clip_matrix_norm","functional/ivy/extra/general/clip_vector_norm","functional/ivy/extra/general/concatenate","functional/ivy/extra/general/constant_pad","functional/ivy/extra/general/container_types","functional/ivy/extra/general/copy_array","functional/ivy/extra/general/cross","functional/ivy/extra/general/cumprod","functional/ivy/extra/general/cumsum","functional/ivy/extra/general/current_framework_str","functional/ivy/extra/general/default","functional/ivy/extra/general/einops_rearrange","functional/ivy/extra/general/einops_reduce","functional/ivy/extra/general/einops_repeat","functional/ivy/extra/general/equal","functional/ivy/extra/general/exists","functional/ivy/extra/general/expand_dims","functional/ivy/extra/general/floor","functional/ivy/extra/general/floormod","functional/ivy/extra/general/fourier_encode","functional/ivy/extra/general/full","functional/ivy/extra/general/gather","functional/ivy/extra/general/gather_nd","functional/ivy/extra/general/get_all_arrays_in_memory","functional/ivy/extra/general/get_min_base","functional/ivy/extra/general/get_min_denominator","functional/ivy/extra/general/get_num_dims","functional/ivy/extra/general/get_referrers_recursive","functional/ivy/extra/general/has_nans","functional/ivy/extra/general/identity","functional/ivy/extra/general/indices_where","functional/ivy/extra/general/inplace_arrays_supported","functional/ivy/extra/general/inplace_decrement","functional/ivy/extra/general/inplace_increment","functional/ivy/extra/general/inplace_update","functional/ivy/extra/general/inplace_variables_supported","functional/ivy/extra/general/is_array","functional/ivy/extra/general/isinf","functional/ivy/extra/general/linear_resample","functional/ivy/extra/general/linspace","functional/ivy/extra/general/logspace","functional/ivy/extra/general/match_kwargs","functional/ivy/extra/general/matmul","functional/ivy/extra/general/maximum","functional/ivy/extra/general/meshgrid","functional/ivy/extra/general/minimum","functional/ivy/extra/general/multiprocessing","functional/ivy/extra/general/num_arrays_in_memory","functional/ivy/extra/general/one_hot","functional/ivy/extra/general/ones","functional/ivy/extra/general/print_all_arrays_in_memory","functional/ivy/extra/general/queue_timeout","functional/ivy/extra/general/repeat","functional/ivy/extra/general/reshape","functional/ivy/extra/general/round","functional/ivy/extra/general/scatter_flat","functional/ivy/extra/general/scatter_nd","functional/ivy/extra/general/set_min_base","functional/ivy/extra/general/set_min_denominator","functional/ivy/extra/general/set_queue_timeout","functional/ivy/extra/general/set_tmp_dir","functional/ivy/extra/general/shape","functional/ivy/extra/general/shape_to_tuple","functional/ivy/extra/general/split","functional/ivy/extra/general/squeeze","functional/ivy/extra/general/stable_divide","functional/ivy/extra/general/stable_pow","functional/ivy/extra/general/stack","functional/ivy/extra/general/supports_inplace","functional/ivy/extra/general/swapaxes","functional/ivy/extra/general/tile","functional/ivy/extra/general/tmp_dir","functional/ivy/extra/general/to_list","functional/ivy/extra/general/to_numpy","functional/ivy/extra/general/to_scalar","functional/ivy/extra/general/transpose","functional/ivy/extra/general/try_else_none","functional/ivy/extra/general/unstack","functional/ivy/extra/general/value_is_nan","functional/ivy/extra/general/where","functional/ivy/extra/general/zero_pad","functional/ivy/extra/general/zeros_like","functional/ivy/extra/gradients","functional/ivy/extra/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/extra/gradients/adam_step","functional/ivy/extra/gradients/adam_update","functional/ivy/extra/gradients/execute_with_gradients","functional/ivy/extra/gradients/gradient_descent_update","functional/ivy/extra/gradients/is_variable","functional/ivy/extra/gradients/lamb_update","functional/ivy/extra/gradients/lars_update","functional/ivy/extra/gradients/optimizer_update","functional/ivy/extra/gradients/set_with_grads","functional/ivy/extra/gradients/stop_gradient","functional/ivy/extra/gradients/unset_with_grads","functional/ivy/extra/gradients/variable","functional/ivy/extra/gradients/variable_data","functional/ivy/extra/gradients/with_grads","functional/ivy/extra/image","functional/ivy/extra/image/bilinear_resample","functional/ivy/extra/image/float_img_to_uint8_img","functional/ivy/extra/image/gradient_image","functional/ivy/extra/image/random_crop","functional/ivy/extra/image/stack_images","functional/ivy/extra/image/uint8_img_to_float_img","functional/ivy/extra/linalg","functional/ivy/extra/linalg/cholesky","functional/ivy/extra/linalg/inv","functional/ivy/extra/linalg/matrix_norm","functional/ivy/extra/linalg/pinv","functional/ivy/extra/linalg/qr","functional/ivy/extra/linalg/vector_to_skew_symmetric_matrix","functional/ivy/extra/logic","functional/ivy/extra/logic/logical_and","functional/ivy/extra/logic/logical_or","functional/ivy/extra/math","functional/ivy/extra/math/acos","functional/ivy/extra/math/asin","functional/ivy/extra/math/atan","functional/ivy/extra/math/atan2","functional/ivy/extra/math/atanh","functional/ivy/extra/math/cosh","functional/ivy/extra/math/divide","functional/ivy/extra/math/erf","functional/ivy/extra/math/exp","functional/ivy/extra/math/log","functional/ivy/extra/math/tan","functional/ivy/extra/math/tanh","functional/ivy/extra/meta","functional/ivy/extra/meta/fomaml_step","functional/ivy/extra/meta/maml_step","functional/ivy/extra/meta/reptile_step","functional/ivy/extra/multi_node","functional/ivy/extra/multi_node/ClonedItem","functional/ivy/extra/multi_node/ClonedIter","functional/ivy/extra/multi_node/ClonedNest","functional/ivy/extra/multi_node/MultiNode:\n\n    def __init__","functional/ivy/extra/multi_node/MultiNodeItem","functional/ivy/extra/multi_node/MultiNodeIter","functional/ivy/extra/multi_node/MultiNodeNest","functional/ivy/extra/multi_node/NodeDistItem","functional/ivy/extra/multi_node/NodeDistIter","functional/ivy/extra/multi_node/NodeDistNest","functional/ivy/extra/multi_node/NodeManager:\n\n    def __init__","functional/ivy/extra/multi_node/NodeMapper","functional/ivy/extra/multi_node/NodeMapperMultiProc","functional/ivy/extra/multi_node/Profiler","functional/ivy/extra/multi_node/clone","functional/ivy/extra/multi_node/clone_array","functional/ivy/extra/multi_node/clone_iter","functional/ivy/extra/multi_node/clone_nest","functional/ivy/extra/multi_node/default_node","functional/ivy/extra/multi_node/distribute_nest","functional/ivy/extra/multi_node/gpu_is_available","functional/ivy/extra/multi_node/node","functional/ivy/extra/multi_node/node_dist","functional/ivy/extra/multi_node/node_dist_array","functional/ivy/extra/multi_node/node_dist_iter","functional/ivy/extra/multi_node/node_str","functional/ivy/extra/multi_node/node_to_str","functional/ivy/extra/multi_node/node_util","functional/ivy/extra/multi_node/num_gpus","functional/ivy/extra/multi_node/percent_used_mem_on_node","functional/ivy/extra/multi_node/set_default_node","functional/ivy/extra/multi_node/set_split_factor","functional/ivy/extra/multi_node/split_factor","functional/ivy/extra/multi_node/split_func_call","functional/ivy/extra/multi_node/str_to_node","functional/ivy/extra/multi_node/to_node","functional/ivy/extra/multi_node/total_mem_on_node","functional/ivy/extra/multi_node/tpu_is_available","functional/ivy/extra/multi_node/unify","functional/ivy/extra/multi_node/unify_array","functional/ivy/extra/multi_node/unify_iter","functional/ivy/extra/multi_node/unify_nest","functional/ivy/extra/multi_node/used_mem_on_node","functional/ivy/extra/nest","functional/ivy/extra/nest/all_nested_indices","functional/ivy/extra/nest/copy_nest","functional/ivy/extra/nest/index_nest","functional/ivy/extra/nest/map","functional/ivy/extra/nest/map_nest_at_index","functional/ivy/extra/nest/map_nest_at_indices","functional/ivy/extra/nest/multi_index_nest","functional/ivy/extra/nest/nested_indices_where","functional/ivy/extra/nest/nested_map","functional/ivy/extra/nest/set_nest_at_index","functional/ivy/extra/nest/set_nest_at_indices","functional/ivy/extra/random","functional/ivy/extra/random/multinomial","functional/ivy/extra/random/randint","functional/ivy/extra/random/random_normal","functional/ivy/extra/random/random_uniform","functional/ivy/extra/random/seed","functional/ivy/extra/random/shuffle","functional/ivy/extra/reductions","functional/ivy/extra/reductions/einsum","functional/ivy/extra/reductions/reduce_max","functional/ivy/extra/reductions/reduce_mean","functional/ivy/extra/reductions/reduce_min","functional/ivy/extra/reductions/reduce_prod","functional/ivy/extra/reductions/reduce_std","functional/ivy/extra/reductions/reduce_sum","functional/ivy/extra/reductions/reduce_var","functional/ivy/neural_net","functional/ivy/neural_net/activations","functional/ivy/neural_net/activations/gelu","functional/ivy/neural_net/activations/leaky_relu","functional/ivy/neural_net/activations/relu","functional/ivy/neural_net/activations/sigmoid","functional/ivy/neural_net/activations/softmax","functional/ivy/neural_net/activations/softplus","functional/ivy/neural_net/activations/tanh","functional/ivy/neural_net/layers","functional/ivy/neural_net/layers/conv1d","functional/ivy/neural_net/layers/conv1d_transpose","functional/ivy/neural_net/layers/conv2d","functional/ivy/neural_net/layers/conv2d_transpose","functional/ivy/neural_net/layers/conv3d","functional/ivy/neural_net/layers/conv3d_transpose","functional/ivy/neural_net/layers/depthwise_conv2d","functional/ivy/neural_net/layers/dropout","functional/ivy/neural_net/layers/linear","functional/ivy/neural_net/layers/lstm_update","functional/ivy/neural_net/layers/multi_head_attention","functional/ivy/neural_net/layers/scaled_dot_product_attention","functional/ivy/neural_net/losses","functional/ivy/neural_net/losses/binary_cross_entropy","functional/ivy/neural_net/losses/cross_entropy","functional/ivy/neural_net/losses/sparse_cross_entropy","functional/ivy/neural_net/norms","functional/ivy/neural_net/norms/layer_norm","functional/ivy/standard","functional/ivy/standard/constants","functional/ivy/standard/creation_functions","functional/ivy/standard/creation_functions/empty","functional/ivy/standard/creation_functions/ones","functional/ivy/standard/creation_functions/ones_like","functional/ivy/standard/creation_functions/tril","functional/ivy/standard/creation_functions/zeros","functional/ivy/standard/data_type_functions","functional/ivy/standard/data_type_functions/finfo","functional/ivy/standard/data_type_functions/iinfo","functional/ivy/standard/data_types","functional/ivy/standard/elementwise_functions","functional/ivy/standard/elementwise_functions/acosh","functional/ivy/standard/elementwise_functions/asinh","functional/ivy/standard/elementwise_functions/bitwise_and","functional/ivy/standard/elementwise_functions/ceil","functional/ivy/standard/elementwise_functions/cos","functional/ivy/standard/elementwise_functions/cosh","functional/ivy/standard/elementwise_functions/isfinite","functional/ivy/standard/elementwise_functions/isnan","functional/ivy/standard/elementwise_functions/less","functional/ivy/standard/elementwise_functions/less_equal","functional/ivy/standard/elementwise_functions/log10","functional/ivy/standard/elementwise_functions/log1p","functional/ivy/standard/elementwise_functions/log2","functional/ivy/standard/elementwise_functions/logical_not","functional/ivy/standard/elementwise_functions/logical_or","functional/ivy/standard/elementwise_functions/negative","functional/ivy/standard/elementwise_functions/sin","functional/ivy/standard/elementwise_functions/sinh","functional/ivy/standard/elementwise_functions/sqrt","functional/ivy/standard/elementwise_functions/tanh","functional/ivy/standard/function_and_method_signatures","functional/ivy/standard/linear_algebra","functional/ivy/standard/linear_algebra/diagonal","functional/ivy/standard/linear_algebra/matmul","functional/ivy/standard/linear_algebra/slodget","functional/ivy/standard/linear_algebra/svd","functional/ivy/standard/linear_algebra/trace","functional/ivy/standard/linear_algebra/vector_norm","functional/ivy/standard/manipulation_functions","functional/ivy/standard/manipulation_functions/flip","functional/ivy/standard/searching_functions","functional/ivy/standard/searching_functions/argmax","functional/ivy/standard/set_functions","functional/ivy/standard/sorting_functions","functional/ivy/standard/sorting_functions/argsort","functional/ivy/standard/statistical_functions","functional/ivy/standard/statistical_functions/min","functional/ivy/standard/utility_functions","functional/ivy/standard/utility_functions/all","functional/ivy/standard/utility_functions/any","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/extra.rst","array/extra/conversions.rst","array/extra/conversions/args_to_ivy.rst","array/extra/conversions/args_to_native.rst","array/extra/conversions/to_ivy.rst","array/extra/conversions/to_native.rst","array/extra/device.rst","array/extra/device/ArrayWithDevice.rst","array/extra/general.rst","array/extra/general/ArrayWithGeneral.rst","array/extra/gradients.rst","array/extra/gradients/ArrayWithGradients.rst","array/extra/image.rst","array/extra/image/ArrayWithImage.rst","array/extra/linalg.rst","array/extra/linalg/ArrayWithLinalg.rst","array/extra/logic.rst","array/extra/logic/ArrayWithLogic.rst","array/extra/math.rst","array/extra/math/ArrayWithMath.rst","array/extra/meta.rst","array/extra/meta/ArrayWithMeta.rst","array/extra/random.rst","array/extra/random/ArrayWithRandom.rst","array/extra/reductions.rst","array/extra/reductions/ArrayWithReductions.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","array/standard.rst","array/standard/arithmetic_operators.rst","array/standard/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/standard/array_operators.rst","array/standard/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/standard/attributes.rst","array/standard/attributes/ArrayWithArrayAPIAttributes.rst","array/standard/bitwise_operators.rst","array/standard/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/standard/comparison_operators.rst","array/standard/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/standard/inplace_operators.rst","array/standard/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/standard/reflected_operators.rst","array/standard/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/extra.rst","functional/backends/jax/extra/device.rst","functional/backends/jax/extra/device/Profiler.rst","functional/backends/jax/extra/device/dev.rst","functional/backends/jax/extra/device/dev_from_str.rst","functional/backends/jax/extra/device/dev_to_str.rst","functional/backends/jax/extra/device/num_gpus.rst","functional/backends/jax/extra/device/to_dev.rst","functional/backends/jax/extra/general.rst","functional/backends/jax/extra/general/arange.rst","functional/backends/jax/extra/general/argmin.rst","functional/backends/jax/extra/general/array.rst","functional/backends/jax/extra/general/cast.rst","functional/backends/jax/extra/general/concatenate.rst","functional/backends/jax/extra/general/cumprod.rst","functional/backends/jax/extra/general/dtype.rst","functional/backends/jax/extra/general/dtype_bits.rst","functional/backends/jax/extra/general/dtype_from_str.rst","functional/backends/jax/extra/general/dtype_to_str.rst","functional/backends/jax/extra/general/full.rst","functional/backends/jax/extra/general/gather.rst","functional/backends/jax/extra/general/gather_nd.rst","functional/backends/jax/extra/general/identity.rst","functional/backends/jax/extra/general/indices_where.rst","functional/backends/jax/extra/general/inplace_decrement.rst","functional/backends/jax/extra/general/inplace_increment.rst","functional/backends/jax/extra/general/inplace_update.rst","functional/backends/jax/extra/general/is_array.rst","functional/backends/jax/extra/general/linear_resample.rst","functional/backends/jax/extra/general/linspace.rst","functional/backends/jax/extra/general/logspace.rst","functional/backends/jax/extra/general/one_hot.rst","functional/backends/jax/extra/general/scatter_flat.rst","functional/backends/jax/extra/general/scatter_nd.rst","functional/backends/jax/extra/general/split.rst","functional/backends/jax/extra/general/squeeze.rst","functional/backends/jax/extra/general/transpose.rst","functional/backends/jax/extra/general/unstack.rst","functional/backends/jax/extra/general/zeros_like.rst","functional/backends/jax/extra/gradients.rst","functional/backends/jax/extra/gradients/execute_with_gradients.rst","functional/backends/jax/extra/gradients/is_variable.rst","functional/backends/jax/extra/image.rst","functional/backends/jax/extra/image/bilinear_resample.rst","functional/backends/jax/extra/image/gradient_image.rst","functional/backends/jax/extra/image/stack_images.rst","functional/backends/jax/extra/linear_algebra.rst","functional/backends/jax/extra/linear_algebra/matrix_norm.rst","functional/backends/jax/extra/linear_algebra/qr.rst","functional/backends/jax/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/extra/logic.rst","functional/backends/jax/extra/math.rst","functional/backends/jax/extra/random.rst","functional/backends/jax/extra/random/multinomial.rst","functional/backends/jax/extra/random/randint.rst","functional/backends/jax/extra/random/random_normal.rst","functional/backends/jax/extra/random/random_uniform.rst","functional/backends/jax/extra/random/seed.rst","functional/backends/jax/extra/random/shuffle.rst","functional/backends/jax/extra/reductions.rst","functional/backends/jax/extra/reductions/einsum.rst","functional/backends/jax/extra/reductions/reduce_max.rst","functional/backends/jax/extra/reductions/reduce_mean.rst","functional/backends/jax/extra/reductions/reduce_min.rst","functional/backends/jax/extra/reductions/reduce_prod.rst","functional/backends/jax/extra/reductions/reduce_sum.rst","functional/backends/jax/extra/reductions/reduce_var.rst","functional/backends/jax/neural_net.rst","functional/backends/jax/neural_net/activations.rst","functional/backends/jax/neural_net/activations/softmax.rst","functional/backends/jax/neural_net/converters.rst","functional/backends/jax/neural_net/converters/IvyModule.rst","functional/backends/jax/neural_net/converters/to_ivy_module.rst","functional/backends/jax/neural_net/layers.rst","functional/backends/jax/neural_net/layers/conv1d.rst","functional/backends/jax/neural_net/layers/conv1d_transpose.rst","functional/backends/jax/neural_net/layers/conv2d.rst","functional/backends/jax/neural_net/layers/conv2d_transpose.rst","functional/backends/jax/neural_net/layers/conv3d.rst","functional/backends/jax/neural_net/layers/conv3d_transpose.rst","functional/backends/jax/neural_net/layers/depthwise_conv2d.rst","functional/backends/jax/standard.rst","functional/backends/jax/standard/constants.rst","functional/backends/jax/standard/creation_functions.rst","functional/backends/jax/standard/creation_functions/empty.rst","functional/backends/jax/standard/creation_functions/ones.rst","functional/backends/jax/standard/creation_functions/ones_like.rst","functional/backends/jax/standard/creation_functions/tril.rst","functional/backends/jax/standard/creation_functions/zeros.rst","functional/backends/jax/standard/data_type_functions.rst","functional/backends/jax/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/standard/data_type_functions/finfo.rst","functional/backends/jax/standard/data_type_functions/iinfo.rst","functional/backends/jax/standard/data_types.rst","functional/backends/jax/standard/elementwise_functions.rst","functional/backends/jax/standard/elementwise_functions/acosh.rst","functional/backends/jax/standard/elementwise_functions/asinh.rst","functional/backends/jax/standard/elementwise_functions/bitwise_and.rst","functional/backends/jax/standard/elementwise_functions/ceil.rst","functional/backends/jax/standard/elementwise_functions/cos.rst","functional/backends/jax/standard/elementwise_functions/cosh.rst","functional/backends/jax/standard/elementwise_functions/equal.rst","functional/backends/jax/standard/elementwise_functions/isfinite.rst","functional/backends/jax/standard/elementwise_functions/isnan.rst","functional/backends/jax/standard/elementwise_functions/less.rst","functional/backends/jax/standard/elementwise_functions/less_equal.rst","functional/backends/jax/standard/elementwise_functions/log10.rst","functional/backends/jax/standard/elementwise_functions/log1p.rst","functional/backends/jax/standard/elementwise_functions/log2.rst","functional/backends/jax/standard/elementwise_functions/logical_not.rst","functional/backends/jax/standard/elementwise_functions/logical_or.rst","functional/backends/jax/standard/elementwise_functions/negative.rst","functional/backends/jax/standard/elementwise_functions/sin.rst","functional/backends/jax/standard/elementwise_functions/sinh.rst","functional/backends/jax/standard/elementwise_functions/sqrt.rst","functional/backends/jax/standard/elementwise_functions/tanh.rst","functional/backends/jax/standard/function_and_method_signatures.rst","functional/backends/jax/standard/linear_algebra.rst","functional/backends/jax/standard/linear_algebra/diagonal.rst","functional/backends/jax/standard/linear_algebra/matmul.rst","functional/backends/jax/standard/linear_algebra/slogdet.rst","functional/backends/jax/standard/linear_algebra/svd.rst","functional/backends/jax/standard/linear_algebra/trace.rst","functional/backends/jax/standard/linear_algebra/vector_norm.rst","functional/backends/jax/standard/manipulation_functions.rst","functional/backends/jax/standard/manipulation_functions/flip.rst","functional/backends/jax/standard/searching_functions.rst","functional/backends/jax/standard/searching_functions/argmax.rst","functional/backends/jax/standard/set_functions.rst","functional/backends/jax/standard/sorting_functions.rst","functional/backends/jax/standard/sorting_functions/argsort.rst","functional/backends/jax/standard/statistical_functions.rst","functional/backends/jax/standard/statistical_functions/min.rst","functional/backends/jax/standard/utility_functions.rst","functional/backends/jax/standard/utility_functions/all.rst","functional/backends/jax/standard/utility_functions/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/extra.rst","functional/backends/mxnet/extra/device.rst","functional/backends/mxnet/extra/device/Profiler.rst","functional/backends/mxnet/extra/device/dev.rst","functional/backends/mxnet/extra/device/dev_from_str.rst","functional/backends/mxnet/extra/device/dev_to_str.rst","functional/backends/mxnet/extra/device/to_dev.rst","functional/backends/mxnet/extra/general.rst","functional/backends/mxnet/extra/general/abs.rst","functional/backends/mxnet/extra/general/arange.rst","functional/backends/mxnet/extra/general/array.rst","functional/backends/mxnet/extra/general/array_equal.rst","functional/backends/mxnet/extra/general/broadcast_to.rst","functional/backends/mxnet/extra/general/cast.rst","functional/backends/mxnet/extra/general/clip.rst","functional/backends/mxnet/extra/general/compile.rst","functional/backends/mxnet/extra/general/concatenate.rst","functional/backends/mxnet/extra/general/constant_pad.rst","functional/backends/mxnet/extra/general/cross.rst","functional/backends/mxnet/extra/general/cumprod.rst","functional/backends/mxnet/extra/general/dtype.rst","functional/backends/mxnet/extra/general/dtype_bits.rst","functional/backends/mxnet/extra/general/dtype_from_str.rst","functional/backends/mxnet/extra/general/dtype_to_str.rst","functional/backends/mxnet/extra/general/expand_dims.rst","functional/backends/mxnet/extra/general/floor.rst","functional/backends/mxnet/extra/general/floormod.rst","functional/backends/mxnet/extra/general/full.rst","functional/backends/mxnet/extra/general/gather.rst","functional/backends/mxnet/extra/general/gather_nd.rst","functional/backends/mxnet/extra/general/identity.rst","functional/backends/mxnet/extra/general/indices_where.rst","functional/backends/mxnet/extra/general/inplace_decrement.rst","functional/backends/mxnet/extra/general/inplace_increment.rst","functional/backends/mxnet/extra/general/inplace_update.rst","functional/backends/mxnet/extra/general/is_array.rst","functional/backends/mxnet/extra/general/isinf.rst","functional/backends/mxnet/extra/general/linear_resample.rst","functional/backends/mxnet/extra/general/linspace.rst","functional/backends/mxnet/extra/general/logspace.rst","functional/backends/mxnet/extra/general/matmul.rst","functional/backends/mxnet/extra/general/meshgrid.rst","functional/backends/mxnet/extra/general/repeat.rst","functional/backends/mxnet/extra/general/round.rst","functional/backends/mxnet/extra/general/scatter_flat.rst","functional/backends/mxnet/extra/general/scatter_nd.rst","functional/backends/mxnet/extra/general/split.rst","functional/backends/mxnet/extra/general/squeeze.rst","functional/backends/mxnet/extra/general/stack.rst","functional/backends/mxnet/extra/general/tile.rst","functional/backends/mxnet/extra/general/transpose.rst","functional/backends/mxnet/extra/general/unstack.rst","functional/backends/mxnet/extra/general/where.rst","functional/backends/mxnet/extra/general/zero_pad.rst","functional/backends/mxnet/extra/general/zeros_like.rst","functional/backends/mxnet/extra/gradients.rst","functional/backends/mxnet/extra/gradients/execute_with_gradients.rst","functional/backends/mxnet/extra/gradients/is_variable.rst","functional/backends/mxnet/extra/gradients/stop_gradient.rst","functional/backends/mxnet/extra/gradients/variable.rst","functional/backends/mxnet/extra/image.rst","functional/backends/mxnet/extra/image/bilinear_resample.rst","functional/backends/mxnet/extra/image/gradient_image.rst","functional/backends/mxnet/extra/image/stack_images.rst","functional/backends/mxnet/extra/linear_algebra.rst","functional/backends/mxnet/extra/linear_algebra/matrix_norm.rst","functional/backends/mxnet/extra/linear_algebra/pinv.rst","functional/backends/mxnet/extra/linear_algebra/qr.rst","functional/backends/mxnet/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/extra/logic.rst","functional/backends/mxnet/extra/logic/logical_and.rst","functional/backends/mxnet/extra/logic/logical_or.rst","functional/backends/mxnet/extra/math.rst","functional/backends/mxnet/extra/random.rst","functional/backends/mxnet/extra/random/multinomial.rst","functional/backends/mxnet/extra/random/randint.rst","functional/backends/mxnet/extra/random/random_normal.rst","functional/backends/mxnet/extra/random/random_uniform.rst","functional/backends/mxnet/extra/reductions.rst","functional/backends/mxnet/extra/reductions/einsum.rst","functional/backends/mxnet/extra/reductions/reduce_max.rst","functional/backends/mxnet/extra/reductions/reduce_mean.rst","functional/backends/mxnet/extra/reductions/reduce_min.rst","functional/backends/mxnet/extra/reductions/reduce_prod.rst","functional/backends/mxnet/extra/reductions/reduce_std.rst","functional/backends/mxnet/extra/reductions/reduce_sum.rst","functional/backends/mxnet/extra/reductions/reduce_var.rst","functional/backends/mxnet/neural_net.rst","functional/backends/mxnet/neural_net/activations.rst","functional/backends/mxnet/neural_net/activations/gelu.rst","functional/backends/mxnet/neural_net/layers.rst","functional/backends/mxnet/neural_net/layers/conv1d.rst","functional/backends/mxnet/neural_net/layers/conv1d_transpose.rst","functional/backends/mxnet/neural_net/layers/conv2d.rst","functional/backends/mxnet/neural_net/layers/conv2d_transpose.rst","functional/backends/mxnet/neural_net/layers/conv3d.rst","functional/backends/mxnet/neural_net/layers/conv3d_transpose.rst","functional/backends/mxnet/neural_net/layers/depthwise_conv2d.rst","functional/backends/mxnet/standard.rst","functional/backends/mxnet/standard/constants.rst","functional/backends/mxnet/standard/creation_functions.rst","functional/backends/mxnet/standard/creation_functions/empty.rst","functional/backends/mxnet/standard/creation_functions/ones.rst","functional/backends/mxnet/standard/creation_functions/ones_like.rst","functional/backends/mxnet/standard/creation_functions/tril.rst","functional/backends/mxnet/standard/creation_functions/zeros.rst","functional/backends/mxnet/standard/data_type_functions.rst","functional/backends/mxnet/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/standard/data_type_functions/finfo.rst","functional/backends/mxnet/standard/data_type_functions/iinfo.rst","functional/backends/mxnet/standard/data_types.rst","functional/backends/mxnet/standard/elementwise_functions.rst","functional/backends/mxnet/standard/elementwise_functions/acosh.rst","functional/backends/mxnet/standard/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/standard/elementwise_functions/ceil.rst","functional/backends/mxnet/standard/elementwise_functions/isfinite.rst","functional/backends/mxnet/standard/elementwise_functions/isnan.rst","functional/backends/mxnet/standard/elementwise_functions/less.rst","functional/backends/mxnet/standard/elementwise_functions/logical_not.rst","functional/backends/mxnet/standard/elementwise_functions/negative.rst","functional/backends/mxnet/standard/elementwise_functions/sin.rst","functional/backends/mxnet/standard/elementwise_functions/sinh.rst","functional/backends/mxnet/standard/elementwise_functions/sqrt.rst","functional/backends/mxnet/standard/elementwise_functions/tanh.rst","functional/backends/mxnet/standard/function_and_method_signatures.rst","functional/backends/mxnet/standard/linear_algebra.rst","functional/backends/mxnet/standard/linear_algebra/diagonal.rst","functional/backends/mxnet/standard/linear_algebra/slogdet.rst","functional/backends/mxnet/standard/linear_algebra/svd.rst","functional/backends/mxnet/standard/linear_algebra/trace.rst","functional/backends/mxnet/standard/linear_algebra/vector_norm.rst","functional/backends/mxnet/standard/manipulation_functions.rst","functional/backends/mxnet/standard/manipulation_functions/flip.rst","functional/backends/mxnet/standard/searching_functions.rst","functional/backends/mxnet/standard/searching_functions/argmax.rst","functional/backends/mxnet/standard/set_functions.rst","functional/backends/mxnet/standard/sorting_functions.rst","functional/backends/mxnet/standard/sorting_functions/argsort.rst","functional/backends/mxnet/standard/statistical_functions.rst","functional/backends/mxnet/standard/utility_functions.rst","functional/backends/mxnet/standard/utility_functions/all.rst","functional/backends/mxnet/standard/utility_functions/any.rst","functional/backends/numpy.rst","functional/backends/numpy/extra.rst","functional/backends/numpy/extra/device.rst","functional/backends/numpy/extra/device/Profiler.rst","functional/backends/numpy/extra/general.rst","functional/backends/numpy/extra/general/arange.rst","functional/backends/numpy/extra/general/argmin.rst","functional/backends/numpy/extra/general/array.rst","functional/backends/numpy/extra/general/cast.rst","functional/backends/numpy/extra/general/compile.rst","functional/backends/numpy/extra/general/concatenate.rst","functional/backends/numpy/extra/general/cumprod.rst","functional/backends/numpy/extra/general/dtype.rst","functional/backends/numpy/extra/general/dtype_bits.rst","functional/backends/numpy/extra/general/dtype_from_str.rst","functional/backends/numpy/extra/general/dtype_to_str.rst","functional/backends/numpy/extra/general/full.rst","functional/backends/numpy/extra/general/gather.rst","functional/backends/numpy/extra/general/gather_nd.rst","functional/backends/numpy/extra/general/identity.rst","functional/backends/numpy/extra/general/indices_where.rst","functional/backends/numpy/extra/general/inplace_decrement.rst","functional/backends/numpy/extra/general/inplace_increment.rst","functional/backends/numpy/extra/general/inplace_update.rst","functional/backends/numpy/extra/general/is_array.rst","functional/backends/numpy/extra/general/linear_resample.rst","functional/backends/numpy/extra/general/linspace.rst","functional/backends/numpy/extra/general/logspace.rst","functional/backends/numpy/extra/general/one_hot.rst","functional/backends/numpy/extra/general/scatter_flat.rst","functional/backends/numpy/extra/general/scatter_nd.rst","functional/backends/numpy/extra/general/split.rst","functional/backends/numpy/extra/general/squeeze.rst","functional/backends/numpy/extra/general/transpose.rst","functional/backends/numpy/extra/general/unstack.rst","functional/backends/numpy/extra/general/zeros_like.rst","functional/backends/numpy/extra/gradients.rst","functional/backends/numpy/extra/gradients/execute_with_gradients.rst","functional/backends/numpy/extra/gradients/is_variable.rst","functional/backends/numpy/extra/gradients/stop_gradient.rst","functional/backends/numpy/extra/gradients/variable.rst","functional/backends/numpy/extra/image.rst","functional/backends/numpy/extra/image/bilinear_resample.rst","functional/backends/numpy/extra/image/gradient_image.rst","functional/backends/numpy/extra/image/stack_images.rst","functional/backends/numpy/extra/linear_algebra.rst","functional/backends/numpy/extra/linear_algebra/matrix_norm.rst","functional/backends/numpy/extra/linear_algebra/qr.rst","functional/backends/numpy/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/extra/logic.rst","functional/backends/numpy/extra/math.rst","functional/backends/numpy/extra/math/erf.rst","functional/backends/numpy/extra/random.rst","functional/backends/numpy/extra/random/multinomial.rst","functional/backends/numpy/extra/reductions.rst","functional/backends/numpy/extra/reductions/einsum.rst","functional/backends/numpy/extra/reductions/reduce_max.rst","functional/backends/numpy/extra/reductions/reduce_mean.rst","functional/backends/numpy/extra/reductions/reduce_min.rst","functional/backends/numpy/extra/reductions/reduce_prod.rst","functional/backends/numpy/extra/reductions/reduce_sum.rst","functional/backends/numpy/extra/reductions/reduce_var.rst","functional/backends/numpy/neural_net.rst","functional/backends/numpy/neural_net/activations.rst","functional/backends/numpy/neural_net/activations/gelu.rst","functional/backends/numpy/neural_net/activations/softmax.rst","functional/backends/numpy/neural_net/layers.rst","functional/backends/numpy/neural_net/layers/conv1d.rst","functional/backends/numpy/neural_net/layers/conv1d_transpose.rst","functional/backends/numpy/neural_net/layers/conv2d.rst","functional/backends/numpy/neural_net/layers/conv2d_transpose.rst","functional/backends/numpy/neural_net/layers/conv3d.rst","functional/backends/numpy/neural_net/layers/conv3d_transpose.rst","functional/backends/numpy/neural_net/layers/depthwise_conv2d.rst","functional/backends/numpy/standard.rst","functional/backends/numpy/standard/constants.rst","functional/backends/numpy/standard/creation_functions.rst","functional/backends/numpy/standard/creation_functions/empty.rst","functional/backends/numpy/standard/creation_functions/ones.rst","functional/backends/numpy/standard/creation_functions/ones_like.rst","functional/backends/numpy/standard/creation_functions/tril.rst","functional/backends/numpy/standard/creation_functions/zeros.rst","functional/backends/numpy/standard/data_type_functions.rst","functional/backends/numpy/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/standard/data_type_functions/finfo.rst","functional/backends/numpy/standard/data_type_functions/iinfo.rst","functional/backends/numpy/standard/data_types.rst","functional/backends/numpy/standard/elementwise_functions.rst","functional/backends/numpy/standard/elementwise_functions/acosh.rst","functional/backends/numpy/standard/elementwise_functions/asinh.rst","functional/backends/numpy/standard/elementwise_functions/bitwise_and.rst","functional/backends/numpy/standard/elementwise_functions/ceil.rst","functional/backends/numpy/standard/elementwise_functions/cos.rst","functional/backends/numpy/standard/elementwise_functions/cosh.rst","functional/backends/numpy/standard/elementwise_functions/equal.rst","functional/backends/numpy/standard/elementwise_functions/isfinite.rst","functional/backends/numpy/standard/elementwise_functions/isnan.rst","functional/backends/numpy/standard/elementwise_functions/less.rst","functional/backends/numpy/standard/elementwise_functions/less_equal.rst","functional/backends/numpy/standard/elementwise_functions/log10.rst","functional/backends/numpy/standard/elementwise_functions/log1p.rst","functional/backends/numpy/standard/elementwise_functions/log2.rst","functional/backends/numpy/standard/elementwise_functions/logical_not.rst","functional/backends/numpy/standard/elementwise_functions/logical_or.rst","functional/backends/numpy/standard/elementwise_functions/negative.rst","functional/backends/numpy/standard/elementwise_functions/sin.rst","functional/backends/numpy/standard/elementwise_functions/sinh.rst","functional/backends/numpy/standard/elementwise_functions/sqrt.rst","functional/backends/numpy/standard/elementwise_functions/tanh.rst","functional/backends/numpy/standard/function_and_method_signatures.rst","functional/backends/numpy/standard/linear_algebra.rst","functional/backends/numpy/standard/linear_algebra/diagonal.rst","functional/backends/numpy/standard/linear_algebra/matmul.rst","functional/backends/numpy/standard/linear_algebra/slogdet.rst","functional/backends/numpy/standard/linear_algebra/svd.rst","functional/backends/numpy/standard/linear_algebra/trace.rst","functional/backends/numpy/standard/linear_algebra/vector_norm.rst","functional/backends/numpy/standard/manipulation_functions.rst","functional/backends/numpy/standard/manipulation_functions/flip.rst","functional/backends/numpy/standard/searching_functions.rst","functional/backends/numpy/standard/searching_functions/argmax.rst","functional/backends/numpy/standard/set_functions.rst","functional/backends/numpy/standard/sorting_functions.rst","functional/backends/numpy/standard/sorting_functions/argsort.rst","functional/backends/numpy/standard/statistical_functions.rst","functional/backends/numpy/standard/statistical_functions/min.rst","functional/backends/numpy/standard/utility_functions.rst","functional/backends/numpy/standard/utility_functions/all.rst","functional/backends/numpy/standard/utility_functions/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/extra.rst","functional/backends/tensorflow/extra/device.rst","functional/backends/tensorflow/extra/device/Profiler.rst","functional/backends/tensorflow/extra/device/dev.rst","functional/backends/tensorflow/extra/device/dev_from_str.rst","functional/backends/tensorflow/extra/device/dev_to_str.rst","functional/backends/tensorflow/extra/device/to_dev.rst","functional/backends/tensorflow/extra/device/tpu_is_available.rst","functional/backends/tensorflow/extra/general.rst","functional/backends/tensorflow/extra/general/abs.rst","functional/backends/tensorflow/extra/general/arange.rst","functional/backends/tensorflow/extra/general/argmin.rst","functional/backends/tensorflow/extra/general/array.rst","functional/backends/tensorflow/extra/general/cast.rst","functional/backends/tensorflow/extra/general/concatenate.rst","functional/backends/tensorflow/extra/general/constant_pad.rst","functional/backends/tensorflow/extra/general/dtype.rst","functional/backends/tensorflow/extra/general/dtype_bits.rst","functional/backends/tensorflow/extra/general/dtype_from_str.rst","functional/backends/tensorflow/extra/general/dtype_to_str.rst","functional/backends/tensorflow/extra/general/full.rst","functional/backends/tensorflow/extra/general/gather.rst","functional/backends/tensorflow/extra/general/gather_nd.rst","functional/backends/tensorflow/extra/general/identity.rst","functional/backends/tensorflow/extra/general/inplace_decrement.rst","functional/backends/tensorflow/extra/general/inplace_increment.rst","functional/backends/tensorflow/extra/general/inplace_update.rst","functional/backends/tensorflow/extra/general/is_array.rst","functional/backends/tensorflow/extra/general/isinf.rst","functional/backends/tensorflow/extra/general/linear_resample.rst","functional/backends/tensorflow/extra/general/linspace.rst","functional/backends/tensorflow/extra/general/logspace.rst","functional/backends/tensorflow/extra/general/one_hot.rst","functional/backends/tensorflow/extra/general/scatter_flat.rst","functional/backends/tensorflow/extra/general/scatter_nd.rst","functional/backends/tensorflow/extra/general/split.rst","functional/backends/tensorflow/extra/general/squeeze.rst","functional/backends/tensorflow/extra/general/swapaxes.rst","functional/backends/tensorflow/extra/general/tile.rst","functional/backends/tensorflow/extra/general/unstack.rst","functional/backends/tensorflow/extra/general/zero_pad.rst","functional/backends/tensorflow/extra/general/zeros_like.rst","functional/backends/tensorflow/extra/gradients.rst","functional/backends/tensorflow/extra/gradients/execute_with_gradients.rst","functional/backends/tensorflow/extra/gradients/is_variable.rst","functional/backends/tensorflow/extra/gradients/stop_gradient.rst","functional/backends/tensorflow/extra/gradients/variable.rst","functional/backends/tensorflow/extra/image.rst","functional/backends/tensorflow/extra/image/bilinear_resample.rst","functional/backends/tensorflow/extra/image/gradient_image.rst","functional/backends/tensorflow/extra/image/stack_images.rst","functional/backends/tensorflow/extra/linear_algebra.rst","functional/backends/tensorflow/extra/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/extra/linear_algebra/qr.rst","functional/backends/tensorflow/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/extra/logic.rst","functional/backends/tensorflow/extra/math.rst","functional/backends/tensorflow/extra/random.rst","functional/backends/tensorflow/extra/random/multinomial.rst","functional/backends/tensorflow/extra/random/randint.rst","functional/backends/tensorflow/extra/random/random_normal.rst","functional/backends/tensorflow/extra/random/random_uniform.rst","functional/backends/tensorflow/extra/reductions.rst","functional/backends/tensorflow/extra/reductions/einsum.rst","functional/backends/tensorflow/extra/reductions/reduce_max.rst","functional/backends/tensorflow/extra/reductions/reduce_mean.rst","functional/backends/tensorflow/extra/reductions/reduce_min.rst","functional/backends/tensorflow/extra/reductions/reduce_prod.rst","functional/backends/tensorflow/extra/reductions/reduce_sum.rst","functional/backends/tensorflow/extra/reductions/reduce_var.rst","functional/backends/tensorflow/neural_net.rst","functional/backends/tensorflow/neural_net/activations.rst","functional/backends/tensorflow/neural_net/layers.rst","functional/backends/tensorflow/neural_net/layers/conv2d.rst","functional/backends/tensorflow/neural_net/layers/conv3d.rst","functional/backends/tensorflow/neural_net/layers/depthwise_conv2d.rst","functional/backends/tensorflow/standard.rst","functional/backends/tensorflow/standard/constants.rst","functional/backends/tensorflow/standard/creation_functions.rst","functional/backends/tensorflow/standard/creation_functions/empty.rst","functional/backends/tensorflow/standard/creation_functions/ones.rst","functional/backends/tensorflow/standard/creation_functions/ones_like.rst","functional/backends/tensorflow/standard/creation_functions/tril.rst","functional/backends/tensorflow/standard/creation_functions/zeros.rst","functional/backends/tensorflow/standard/data_type_functions.rst","functional/backends/tensorflow/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/standard/data_type_functions/finfo.rst","functional/backends/tensorflow/standard/data_type_functions/iinfo.rst","functional/backends/tensorflow/standard/data_types.rst","functional/backends/tensorflow/standard/elementwise_functions.rst","functional/backends/tensorflow/standard/elementwise_functions/acosh.rst","functional/backends/tensorflow/standard/elementwise_functions/asinh.rst","functional/backends/tensorflow/standard/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/standard/elementwise_functions/ceil.rst","functional/backends/tensorflow/standard/elementwise_functions/cos.rst","functional/backends/tensorflow/standard/elementwise_functions/cosh.rst","functional/backends/tensorflow/standard/elementwise_functions/equal.rst","functional/backends/tensorflow/standard/elementwise_functions/isfinite.rst","functional/backends/tensorflow/standard/elementwise_functions/isnan.rst","functional/backends/tensorflow/standard/elementwise_functions/less.rst","functional/backends/tensorflow/standard/elementwise_functions/less_equal.rst","functional/backends/tensorflow/standard/elementwise_functions/log10.rst","functional/backends/tensorflow/standard/elementwise_functions/log1p.rst","functional/backends/tensorflow/standard/elementwise_functions/log2.rst","functional/backends/tensorflow/standard/elementwise_functions/logical_not.rst","functional/backends/tensorflow/standard/elementwise_functions/logical_or.rst","functional/backends/tensorflow/standard/elementwise_functions/negative.rst","functional/backends/tensorflow/standard/elementwise_functions/sin.rst","functional/backends/tensorflow/standard/elementwise_functions/sinh.rst","functional/backends/tensorflow/standard/elementwise_functions/sqrt.rst","functional/backends/tensorflow/standard/elementwise_functions/tanh.rst","functional/backends/tensorflow/standard/function_and_method_signatures.rst","functional/backends/tensorflow/standard/linear_algebra.rst","functional/backends/tensorflow/standard/linear_algebra/diagonal.rst","functional/backends/tensorflow/standard/linear_algebra/matmul.rst","functional/backends/tensorflow/standard/linear_algebra/slogdet.rst","functional/backends/tensorflow/standard/linear_algebra/svd.rst","functional/backends/tensorflow/standard/linear_algebra/trace.rst","functional/backends/tensorflow/standard/linear_algebra/vector_norm.rst","functional/backends/tensorflow/standard/manipulation_functions.rst","functional/backends/tensorflow/standard/manipulation_functions/flip.rst","functional/backends/tensorflow/standard/searching_functions.rst","functional/backends/tensorflow/standard/searching_functions/argmax.rst","functional/backends/tensorflow/standard/set_functions.rst","functional/backends/tensorflow/standard/sorting_functions.rst","functional/backends/tensorflow/standard/sorting_functions/argsort.rst","functional/backends/tensorflow/standard/statistical_functions.rst","functional/backends/tensorflow/standard/statistical_functions/min.rst","functional/backends/tensorflow/standard/utility_functions.rst","functional/backends/tensorflow/standard/utility_functions/all.rst","functional/backends/tensorflow/standard/utility_functions/any.rst","functional/backends/torch.rst","functional/backends/torch/extra.rst","functional/backends/torch/extra/device.rst","functional/backends/torch/extra/device/Profiler.rst","functional/backends/torch/extra/device/clear_mem_on_dev.rst","functional/backends/torch/extra/device/dev.rst","functional/backends/torch/extra/device/dev_from_str.rst","functional/backends/torch/extra/device/dev_to_str.rst","functional/backends/torch/extra/device/to_dev.rst","functional/backends/torch/extra/device/tpu_is_available.rst","functional/backends/torch/extra/general.rst","functional/backends/torch/extra/general/abs.rst","functional/backends/torch/extra/general/arange.rst","functional/backends/torch/extra/general/argmin.rst","functional/backends/torch/extra/general/array.rst","functional/backends/torch/extra/general/array_equal.rst","functional/backends/torch/extra/general/broadcast_to.rst","functional/backends/torch/extra/general/cast.rst","functional/backends/torch/extra/general/clip.rst","functional/backends/torch/extra/general/compile.rst","functional/backends/torch/extra/general/concatenate.rst","functional/backends/torch/extra/general/constant_pad.rst","functional/backends/torch/extra/general/container_types.rst","functional/backends/torch/extra/general/copy_array.rst","functional/backends/torch/extra/general/cross.rst","functional/backends/torch/extra/general/cumprod.rst","functional/backends/torch/extra/general/cumsum.rst","functional/backends/torch/extra/general/current_framework_str.rst","functional/backends/torch/extra/general/dtype.rst","functional/backends/torch/extra/general/dtype_bits.rst","functional/backends/torch/extra/general/dtype_from_str.rst","functional/backends/torch/extra/general/dtype_to_str.rst","functional/backends/torch/extra/general/expand_dims.rst","functional/backends/torch/extra/general/floor.rst","functional/backends/torch/extra/general/floormod.rst","functional/backends/torch/extra/general/full.rst","functional/backends/torch/extra/general/gather.rst","functional/backends/torch/extra/general/gather_nd.rst","functional/backends/torch/extra/general/get_num_dims.rst","functional/backends/torch/extra/general/identity.rst","functional/backends/torch/extra/general/indices_where.rst","functional/backends/torch/extra/general/inplace_decrement.rst","functional/backends/torch/extra/general/inplace_increment.rst","functional/backends/torch/extra/general/inplace_update.rst","functional/backends/torch/extra/general/is_array.rst","functional/backends/torch/extra/general/isinf.rst","functional/backends/torch/extra/general/linear_resample.rst","functional/backends/torch/extra/general/linspace.rst","functional/backends/torch/extra/general/logspace.rst","functional/backends/torch/extra/general/maximum.rst","functional/backends/torch/extra/general/meshgrid.rst","functional/backends/torch/extra/general/minimum.rst","functional/backends/torch/extra/general/multiprocessing.rst","functional/backends/torch/extra/general/one_hot.rst","functional/backends/torch/extra/general/repeat.rst","functional/backends/torch/extra/general/reshape.rst","functional/backends/torch/extra/general/round.rst","functional/backends/torch/extra/general/scatter_flat.rst","functional/backends/torch/extra/general/scatter_nd.rst","functional/backends/torch/extra/general/shape.rst","functional/backends/torch/extra/general/split.rst","functional/backends/torch/extra/general/squeeze.rst","functional/backends/torch/extra/general/stack.rst","functional/backends/torch/extra/general/swapaxes.rst","functional/backends/torch/extra/general/tile.rst","functional/backends/torch/extra/general/to_list.rst","functional/backends/torch/extra/general/to_numpy.rst","functional/backends/torch/extra/general/to_scalar.rst","functional/backends/torch/extra/general/transpose.rst","functional/backends/torch/extra/general/unstack.rst","functional/backends/torch/extra/general/where.rst","functional/backends/torch/extra/general/zero_pad.rst","functional/backends/torch/extra/general/zeros_like.rst","functional/backends/torch/extra/gradients.rst","functional/backends/torch/extra/gradients/execute_with_gradients.rst","functional/backends/torch/extra/gradients/is_variable.rst","functional/backends/torch/extra/gradients/stop_gradient.rst","functional/backends/torch/extra/gradients/variable.rst","functional/backends/torch/extra/gradients/variable_data.rst","functional/backends/torch/extra/image.rst","functional/backends/torch/extra/image/bilinear_resample.rst","functional/backends/torch/extra/image/gradient_image.rst","functional/backends/torch/extra/image/stack_images.rst","functional/backends/torch/extra/linear_algebra.rst","functional/backends/torch/extra/linear_algebra/cholesky.rst","functional/backends/torch/extra/linear_algebra/inv.rst","functional/backends/torch/extra/linear_algebra/matrix_norm.rst","functional/backends/torch/extra/linear_algebra/pinv.rst","functional/backends/torch/extra/linear_algebra/qr.rst","functional/backends/torch/extra/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/extra/logic.rst","functional/backends/torch/extra/logic/logical_and.rst","functional/backends/torch/extra/logic/logical_or.rst","functional/backends/torch/extra/math.rst","functional/backends/torch/extra/math/acos.rst","functional/backends/torch/extra/math/asin.rst","functional/backends/torch/extra/math/atan.rst","functional/backends/torch/extra/math/atan2.rst","functional/backends/torch/extra/math/atanh.rst","functional/backends/torch/extra/math/cosh.rst","functional/backends/torch/extra/math/erf.rst","functional/backends/torch/extra/math/exp.rst","functional/backends/torch/extra/math/log.rst","functional/backends/torch/extra/math/tan.rst","functional/backends/torch/extra/random.rst","functional/backends/torch/extra/random/multinomial.rst","functional/backends/torch/extra/random/randint.rst","functional/backends/torch/extra/random/random_normal.rst","functional/backends/torch/extra/random/random_uniform.rst","functional/backends/torch/extra/random/seed.rst","functional/backends/torch/extra/random/shuffle.rst","functional/backends/torch/extra/reductions.rst","functional/backends/torch/extra/reductions/einsum.rst","functional/backends/torch/extra/reductions/reduce_max.rst","functional/backends/torch/extra/reductions/reduce_mean.rst","functional/backends/torch/extra/reductions/reduce_min.rst","functional/backends/torch/extra/reductions/reduce_prod.rst","functional/backends/torch/extra/reductions/reduce_sum.rst","functional/backends/torch/extra/reductions/reduce_var.rst","functional/backends/torch/neural_net.rst","functional/backends/torch/neural_net/activations.rst","functional/backends/torch/neural_net/activations/gelu.rst","functional/backends/torch/neural_net/activations/leaky_relu.rst","functional/backends/torch/neural_net/activations/relu.rst","functional/backends/torch/neural_net/activations/sigmoid.rst","functional/backends/torch/neural_net/activations/softmax.rst","functional/backends/torch/neural_net/activations/softplus.rst","functional/backends/torch/neural_net/activations/tanh.rst","functional/backends/torch/neural_net/converters.rst","functional/backends/torch/neural_net/converters/IvyModule.rst","functional/backends/torch/neural_net/converters/to_ivy_module.rst","functional/backends/torch/neural_net/layers.rst","functional/backends/torch/neural_net/layers/conv1d.rst","functional/backends/torch/neural_net/layers/conv1d_transpose.rst","functional/backends/torch/neural_net/layers/conv2d.rst","functional/backends/torch/neural_net/layers/conv2d_transpose.rst","functional/backends/torch/neural_net/layers/conv3d.rst","functional/backends/torch/neural_net/layers/conv3d_transpose.rst","functional/backends/torch/neural_net/layers/depthwise_conv2d.rst","functional/backends/torch/standard.rst","functional/backends/torch/standard/constants.rst","functional/backends/torch/standard/creation_functions.rst","functional/backends/torch/standard/creation_functions/empty.rst","functional/backends/torch/standard/creation_functions/ones.rst","functional/backends/torch/standard/creation_functions/ones_like.rst","functional/backends/torch/standard/creation_functions/tril.rst","functional/backends/torch/standard/creation_functions/zeros.rst","functional/backends/torch/standard/data_type_functions.rst","functional/backends/torch/standard/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/standard/data_type_functions/finfo.rst","functional/backends/torch/standard/data_type_functions/iinfo.rst","functional/backends/torch/standard/data_types.rst","functional/backends/torch/standard/elementwise_functions.rst","functional/backends/torch/standard/elementwise_functions/acosh.rst","functional/backends/torch/standard/elementwise_functions/asinh.rst","functional/backends/torch/standard/elementwise_functions/bitwise_and.rst","functional/backends/torch/standard/elementwise_functions/ceil.rst","functional/backends/torch/standard/elementwise_functions/cos.rst","functional/backends/torch/standard/elementwise_functions/cosh.rst","functional/backends/torch/standard/elementwise_functions/equal.rst","functional/backends/torch/standard/elementwise_functions/isfinite.rst","functional/backends/torch/standard/elementwise_functions/isnan.rst","functional/backends/torch/standard/elementwise_functions/less.rst","functional/backends/torch/standard/elementwise_functions/less_equal.rst","functional/backends/torch/standard/elementwise_functions/log10.rst","functional/backends/torch/standard/elementwise_functions/log1p.rst","functional/backends/torch/standard/elementwise_functions/log2.rst","functional/backends/torch/standard/elementwise_functions/logical_not.rst","functional/backends/torch/standard/elementwise_functions/logical_or.rst","functional/backends/torch/standard/elementwise_functions/negative.rst","functional/backends/torch/standard/elementwise_functions/sin.rst","functional/backends/torch/standard/elementwise_functions/sinh.rst","functional/backends/torch/standard/elementwise_functions/sqrt.rst","functional/backends/torch/standard/elementwise_functions/tanh.rst","functional/backends/torch/standard/function_and_method_signatures.rst","functional/backends/torch/standard/linear_algebra.rst","functional/backends/torch/standard/linear_algebra/diagonal.rst","functional/backends/torch/standard/linear_algebra/matmul.rst","functional/backends/torch/standard/linear_algebra/slogdet.rst","functional/backends/torch/standard/linear_algebra/svd.rst","functional/backends/torch/standard/linear_algebra/trace.rst","functional/backends/torch/standard/linear_algebra/vector_norm.rst","functional/backends/torch/standard/manipulation_functions.rst","functional/backends/torch/standard/manipulation_functions/flip.rst","functional/backends/torch/standard/searching_functions.rst","functional/backends/torch/standard/searching_functions/argmax.rst","functional/backends/torch/standard/set_functions.rst","functional/backends/torch/standard/sorting_functions.rst","functional/backends/torch/standard/sorting_functions/argsort.rst","functional/backends/torch/standard/statistical_functions.rst","functional/backends/torch/standard/statistical_functions/min.rst","functional/backends/torch/standard/utility_functions.rst","functional/backends/torch/standard/utility_functions/all.rst","functional/backends/torch/standard/utility_functions/any.rst","functional/ivy.rst","functional/ivy/extra.rst","functional/ivy/extra/compilation.rst","functional/ivy/extra/compilation/compile.rst","functional/ivy/extra/device.rst","functional/ivy/extra/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/device/DevClonedItem.rst","functional/ivy/extra/device/DevClonedIter.rst","functional/ivy/extra/device/DevClonedNest.rst","functional/ivy/extra/device/DevDistItem.rst","functional/ivy/extra/device/DevDistIter.rst","functional/ivy/extra/device/DevDistNest.rst","functional/ivy/extra/device/DevManager:\n\n    def __init__.rst","functional/ivy/extra/device/DevMapper.rst","functional/ivy/extra/device/DevMapperMultiProc.rst","functional/ivy/extra/device/MultiDev:\n\n    def __init__.rst","functional/ivy/extra/device/MultiDevItem.rst","functional/ivy/extra/device/MultiDevIter.rst","functional/ivy/extra/device/MultiDevNest.rst","functional/ivy/extra/device/Profiler.rst","functional/ivy/extra/device/clear_mem_on_dev.rst","functional/ivy/extra/device/default_device.rst","functional/ivy/extra/device/dev.rst","functional/ivy/extra/device/dev_clone.rst","functional/ivy/extra/device/dev_clone_array.rst","functional/ivy/extra/device/dev_clone_iter.rst","functional/ivy/extra/device/dev_clone_nest.rst","functional/ivy/extra/device/dev_dist.rst","functional/ivy/extra/device/dev_dist_array.rst","functional/ivy/extra/device/dev_dist_iter.rst","functional/ivy/extra/device/dev_dist_nest.rst","functional/ivy/extra/device/dev_from_str.rst","functional/ivy/extra/device/dev_to_str.rst","functional/ivy/extra/device/dev_unify.rst","functional/ivy/extra/device/dev_unify_array.rst","functional/ivy/extra/device/dev_unify_iter.rst","functional/ivy/extra/device/dev_unify_nest.rst","functional/ivy/extra/device/dev_util.rst","functional/ivy/extra/device/get_all_arrays_on_dev.rst","functional/ivy/extra/device/gpu_is_available.rst","functional/ivy/extra/device/num_arrays_on_dev.rst","functional/ivy/extra/device/num_cpu_cores.rst","functional/ivy/extra/device/num_gpus.rst","functional/ivy/extra/device/percent_used_mem_on_dev.rst","functional/ivy/extra/device/print_all_arrays_on_dev.rst","functional/ivy/extra/device/set_default_device.rst","functional/ivy/extra/device/set_split_factor.rst","functional/ivy/extra/device/split_factor.rst","functional/ivy/extra/device/split_func_call.rst","functional/ivy/extra/device/to_dev.rst","functional/ivy/extra/device/total_mem_on_dev.rst","functional/ivy/extra/device/tpu_is_available.rst","functional/ivy/extra/device/unset_default_device.rst","functional/ivy/extra/device/used_mem_on_dev.rst","functional/ivy/extra/dtype.rst","functional/ivy/extra/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/dtype/cast.rst","functional/ivy/extra/dtype/closest_valid_dtype.rst","functional/ivy/extra/dtype/convert_dtype.rst","functional/ivy/extra/dtype/default_dtype.rst","functional/ivy/extra/dtype/default_float_dtype.rst","functional/ivy/extra/dtype/default_int_dtype.rst","functional/ivy/extra/dtype/dtype.rst","functional/ivy/extra/dtype/dtype_bits.rst","functional/ivy/extra/dtype/dtype_from_str.rst","functional/ivy/extra/dtype/dtype_to_str.rst","functional/ivy/extra/dtype/invalid_dtype.rst","functional/ivy/extra/dtype/is_float_dtype.rst","functional/ivy/extra/dtype/is_int_dtype.rst","functional/ivy/extra/dtype/set_default_dtype.rst","functional/ivy/extra/dtype/set_default_float_dtype.rst","functional/ivy/extra/dtype/set_default_int_dtype.rst","functional/ivy/extra/dtype/unset_default_dtype.rst","functional/ivy/extra/dtype/unset_default_float_dtype.rst","functional/ivy/extra/dtype/unset_default_int_dtype.rst","functional/ivy/extra/dtype/valid_dtype.rst","functional/ivy/extra/general.rst","functional/ivy/extra/general/abs.rst","functional/ivy/extra/general/all_equal.rst","functional/ivy/extra/general/arange.rst","functional/ivy/extra/general/arg_names.rst","functional/ivy/extra/general/argmin.rst","functional/ivy/extra/general/array.rst","functional/ivy/extra/general/array_equal.rst","functional/ivy/extra/general/arrays_equal.rst","functional/ivy/extra/general/assert_supports_inplace.rst","functional/ivy/extra/general/broadcast_to.rst","functional/ivy/extra/general/cache_fn.rst","functional/ivy/extra/general/clip.rst","functional/ivy/extra/general/clip_matrix_norm.rst","functional/ivy/extra/general/clip_vector_norm.rst","functional/ivy/extra/general/concatenate.rst","functional/ivy/extra/general/constant_pad.rst","functional/ivy/extra/general/container_types.rst","functional/ivy/extra/general/copy_array.rst","functional/ivy/extra/general/cross.rst","functional/ivy/extra/general/cumprod.rst","functional/ivy/extra/general/cumsum.rst","functional/ivy/extra/general/current_framework_str.rst","functional/ivy/extra/general/default.rst","functional/ivy/extra/general/einops_rearrange.rst","functional/ivy/extra/general/einops_reduce.rst","functional/ivy/extra/general/einops_repeat.rst","functional/ivy/extra/general/equal.rst","functional/ivy/extra/general/exists.rst","functional/ivy/extra/general/expand_dims.rst","functional/ivy/extra/general/floor.rst","functional/ivy/extra/general/floormod.rst","functional/ivy/extra/general/fourier_encode.rst","functional/ivy/extra/general/full.rst","functional/ivy/extra/general/gather.rst","functional/ivy/extra/general/gather_nd.rst","functional/ivy/extra/general/get_all_arrays_in_memory.rst","functional/ivy/extra/general/get_min_base.rst","functional/ivy/extra/general/get_min_denominator.rst","functional/ivy/extra/general/get_num_dims.rst","functional/ivy/extra/general/get_referrers_recursive.rst","functional/ivy/extra/general/has_nans.rst","functional/ivy/extra/general/identity.rst","functional/ivy/extra/general/indices_where.rst","functional/ivy/extra/general/inplace_arrays_supported.rst","functional/ivy/extra/general/inplace_decrement.rst","functional/ivy/extra/general/inplace_increment.rst","functional/ivy/extra/general/inplace_update.rst","functional/ivy/extra/general/inplace_variables_supported.rst","functional/ivy/extra/general/is_array.rst","functional/ivy/extra/general/isinf.rst","functional/ivy/extra/general/linear_resample.rst","functional/ivy/extra/general/linspace.rst","functional/ivy/extra/general/logspace.rst","functional/ivy/extra/general/match_kwargs.rst","functional/ivy/extra/general/matmul.rst","functional/ivy/extra/general/maximum.rst","functional/ivy/extra/general/meshgrid.rst","functional/ivy/extra/general/minimum.rst","functional/ivy/extra/general/multiprocessing.rst","functional/ivy/extra/general/num_arrays_in_memory.rst","functional/ivy/extra/general/one_hot.rst","functional/ivy/extra/general/ones.rst","functional/ivy/extra/general/print_all_arrays_in_memory.rst","functional/ivy/extra/general/queue_timeout.rst","functional/ivy/extra/general/repeat.rst","functional/ivy/extra/general/reshape.rst","functional/ivy/extra/general/round.rst","functional/ivy/extra/general/scatter_flat.rst","functional/ivy/extra/general/scatter_nd.rst","functional/ivy/extra/general/set_min_base.rst","functional/ivy/extra/general/set_min_denominator.rst","functional/ivy/extra/general/set_queue_timeout.rst","functional/ivy/extra/general/set_tmp_dir.rst","functional/ivy/extra/general/shape.rst","functional/ivy/extra/general/shape_to_tuple.rst","functional/ivy/extra/general/split.rst","functional/ivy/extra/general/squeeze.rst","functional/ivy/extra/general/stable_divide.rst","functional/ivy/extra/general/stable_pow.rst","functional/ivy/extra/general/stack.rst","functional/ivy/extra/general/supports_inplace.rst","functional/ivy/extra/general/swapaxes.rst","functional/ivy/extra/general/tile.rst","functional/ivy/extra/general/tmp_dir.rst","functional/ivy/extra/general/to_list.rst","functional/ivy/extra/general/to_numpy.rst","functional/ivy/extra/general/to_scalar.rst","functional/ivy/extra/general/transpose.rst","functional/ivy/extra/general/try_else_none.rst","functional/ivy/extra/general/unstack.rst","functional/ivy/extra/general/value_is_nan.rst","functional/ivy/extra/general/where.rst","functional/ivy/extra/general/zero_pad.rst","functional/ivy/extra/general/zeros_like.rst","functional/ivy/extra/gradients.rst","functional/ivy/extra/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/extra/gradients/adam_step.rst","functional/ivy/extra/gradients/adam_update.rst","functional/ivy/extra/gradients/execute_with_gradients.rst","functional/ivy/extra/gradients/gradient_descent_update.rst","functional/ivy/extra/gradients/is_variable.rst","functional/ivy/extra/gradients/lamb_update.rst","functional/ivy/extra/gradients/lars_update.rst","functional/ivy/extra/gradients/optimizer_update.rst","functional/ivy/extra/gradients/set_with_grads.rst","functional/ivy/extra/gradients/stop_gradient.rst","functional/ivy/extra/gradients/unset_with_grads.rst","functional/ivy/extra/gradients/variable.rst","functional/ivy/extra/gradients/variable_data.rst","functional/ivy/extra/gradients/with_grads.rst","functional/ivy/extra/image.rst","functional/ivy/extra/image/bilinear_resample.rst","functional/ivy/extra/image/float_img_to_uint8_img.rst","functional/ivy/extra/image/gradient_image.rst","functional/ivy/extra/image/random_crop.rst","functional/ivy/extra/image/stack_images.rst","functional/ivy/extra/image/uint8_img_to_float_img.rst","functional/ivy/extra/linalg.rst","functional/ivy/extra/linalg/cholesky.rst","functional/ivy/extra/linalg/inv.rst","functional/ivy/extra/linalg/matrix_norm.rst","functional/ivy/extra/linalg/pinv.rst","functional/ivy/extra/linalg/qr.rst","functional/ivy/extra/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/extra/logic.rst","functional/ivy/extra/logic/logical_and.rst","functional/ivy/extra/logic/logical_or.rst","functional/ivy/extra/math.rst","functional/ivy/extra/math/acos.rst","functional/ivy/extra/math/asin.rst","functional/ivy/extra/math/atan.rst","functional/ivy/extra/math/atan2.rst","functional/ivy/extra/math/atanh.rst","functional/ivy/extra/math/cosh.rst","functional/ivy/extra/math/divide.rst","functional/ivy/extra/math/erf.rst","functional/ivy/extra/math/exp.rst","functional/ivy/extra/math/log.rst","functional/ivy/extra/math/tan.rst","functional/ivy/extra/math/tanh.rst","functional/ivy/extra/meta.rst","functional/ivy/extra/meta/fomaml_step.rst","functional/ivy/extra/meta/maml_step.rst","functional/ivy/extra/meta/reptile_step.rst","functional/ivy/extra/multi_node.rst","functional/ivy/extra/multi_node/ClonedItem.rst","functional/ivy/extra/multi_node/ClonedIter.rst","functional/ivy/extra/multi_node/ClonedNest.rst","functional/ivy/extra/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/extra/multi_node/MultiNodeItem.rst","functional/ivy/extra/multi_node/MultiNodeIter.rst","functional/ivy/extra/multi_node/MultiNodeNest.rst","functional/ivy/extra/multi_node/NodeDistItem.rst","functional/ivy/extra/multi_node/NodeDistIter.rst","functional/ivy/extra/multi_node/NodeDistNest.rst","functional/ivy/extra/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/extra/multi_node/NodeMapper.rst","functional/ivy/extra/multi_node/NodeMapperMultiProc.rst","functional/ivy/extra/multi_node/Profiler.rst","functional/ivy/extra/multi_node/clone.rst","functional/ivy/extra/multi_node/clone_array.rst","functional/ivy/extra/multi_node/clone_iter.rst","functional/ivy/extra/multi_node/clone_nest.rst","functional/ivy/extra/multi_node/default_node.rst","functional/ivy/extra/multi_node/distribute_nest.rst","functional/ivy/extra/multi_node/gpu_is_available.rst","functional/ivy/extra/multi_node/node.rst","functional/ivy/extra/multi_node/node_dist.rst","functional/ivy/extra/multi_node/node_dist_array.rst","functional/ivy/extra/multi_node/node_dist_iter.rst","functional/ivy/extra/multi_node/node_str.rst","functional/ivy/extra/multi_node/node_to_str.rst","functional/ivy/extra/multi_node/node_util.rst","functional/ivy/extra/multi_node/num_gpus.rst","functional/ivy/extra/multi_node/percent_used_mem_on_node.rst","functional/ivy/extra/multi_node/set_default_node.rst","functional/ivy/extra/multi_node/set_split_factor.rst","functional/ivy/extra/multi_node/split_factor.rst","functional/ivy/extra/multi_node/split_func_call.rst","functional/ivy/extra/multi_node/str_to_node.rst","functional/ivy/extra/multi_node/to_node.rst","functional/ivy/extra/multi_node/total_mem_on_node.rst","functional/ivy/extra/multi_node/tpu_is_available.rst","functional/ivy/extra/multi_node/unify.rst","functional/ivy/extra/multi_node/unify_array.rst","functional/ivy/extra/multi_node/unify_iter.rst","functional/ivy/extra/multi_node/unify_nest.rst","functional/ivy/extra/multi_node/used_mem_on_node.rst","functional/ivy/extra/nest.rst","functional/ivy/extra/nest/all_nested_indices.rst","functional/ivy/extra/nest/copy_nest.rst","functional/ivy/extra/nest/index_nest.rst","functional/ivy/extra/nest/map.rst","functional/ivy/extra/nest/map_nest_at_index.rst","functional/ivy/extra/nest/map_nest_at_indices.rst","functional/ivy/extra/nest/multi_index_nest.rst","functional/ivy/extra/nest/nested_indices_where.rst","functional/ivy/extra/nest/nested_map.rst","functional/ivy/extra/nest/set_nest_at_index.rst","functional/ivy/extra/nest/set_nest_at_indices.rst","functional/ivy/extra/random.rst","functional/ivy/extra/random/multinomial.rst","functional/ivy/extra/random/randint.rst","functional/ivy/extra/random/random_normal.rst","functional/ivy/extra/random/random_uniform.rst","functional/ivy/extra/random/seed.rst","functional/ivy/extra/random/shuffle.rst","functional/ivy/extra/reductions.rst","functional/ivy/extra/reductions/einsum.rst","functional/ivy/extra/reductions/reduce_max.rst","functional/ivy/extra/reductions/reduce_mean.rst","functional/ivy/extra/reductions/reduce_min.rst","functional/ivy/extra/reductions/reduce_prod.rst","functional/ivy/extra/reductions/reduce_std.rst","functional/ivy/extra/reductions/reduce_sum.rst","functional/ivy/extra/reductions/reduce_var.rst","functional/ivy/neural_net.rst","functional/ivy/neural_net/activations.rst","functional/ivy/neural_net/activations/gelu.rst","functional/ivy/neural_net/activations/leaky_relu.rst","functional/ivy/neural_net/activations/relu.rst","functional/ivy/neural_net/activations/sigmoid.rst","functional/ivy/neural_net/activations/softmax.rst","functional/ivy/neural_net/activations/softplus.rst","functional/ivy/neural_net/activations/tanh.rst","functional/ivy/neural_net/layers.rst","functional/ivy/neural_net/layers/conv1d.rst","functional/ivy/neural_net/layers/conv1d_transpose.rst","functional/ivy/neural_net/layers/conv2d.rst","functional/ivy/neural_net/layers/conv2d_transpose.rst","functional/ivy/neural_net/layers/conv3d.rst","functional/ivy/neural_net/layers/conv3d_transpose.rst","functional/ivy/neural_net/layers/depthwise_conv2d.rst","functional/ivy/neural_net/layers/dropout.rst","functional/ivy/neural_net/layers/linear.rst","functional/ivy/neural_net/layers/lstm_update.rst","functional/ivy/neural_net/layers/multi_head_attention.rst","functional/ivy/neural_net/layers/scaled_dot_product_attention.rst","functional/ivy/neural_net/losses.rst","functional/ivy/neural_net/losses/binary_cross_entropy.rst","functional/ivy/neural_net/losses/cross_entropy.rst","functional/ivy/neural_net/losses/sparse_cross_entropy.rst","functional/ivy/neural_net/norms.rst","functional/ivy/neural_net/norms/layer_norm.rst","functional/ivy/standard.rst","functional/ivy/standard/constants.rst","functional/ivy/standard/creation_functions.rst","functional/ivy/standard/creation_functions/empty.rst","functional/ivy/standard/creation_functions/ones.rst","functional/ivy/standard/creation_functions/ones_like.rst","functional/ivy/standard/creation_functions/tril.rst","functional/ivy/standard/creation_functions/zeros.rst","functional/ivy/standard/data_type_functions.rst","functional/ivy/standard/data_type_functions/finfo.rst","functional/ivy/standard/data_type_functions/iinfo.rst","functional/ivy/standard/data_types.rst","functional/ivy/standard/elementwise_functions.rst","functional/ivy/standard/elementwise_functions/acosh.rst","functional/ivy/standard/elementwise_functions/asinh.rst","functional/ivy/standard/elementwise_functions/bitwise_and.rst","functional/ivy/standard/elementwise_functions/ceil.rst","functional/ivy/standard/elementwise_functions/cos.rst","functional/ivy/standard/elementwise_functions/cosh.rst","functional/ivy/standard/elementwise_functions/isfinite.rst","functional/ivy/standard/elementwise_functions/isnan.rst","functional/ivy/standard/elementwise_functions/less.rst","functional/ivy/standard/elementwise_functions/less_equal.rst","functional/ivy/standard/elementwise_functions/log10.rst","functional/ivy/standard/elementwise_functions/log1p.rst","functional/ivy/standard/elementwise_functions/log2.rst","functional/ivy/standard/elementwise_functions/logical_not.rst","functional/ivy/standard/elementwise_functions/logical_or.rst","functional/ivy/standard/elementwise_functions/negative.rst","functional/ivy/standard/elementwise_functions/sin.rst","functional/ivy/standard/elementwise_functions/sinh.rst","functional/ivy/standard/elementwise_functions/sqrt.rst","functional/ivy/standard/elementwise_functions/tanh.rst","functional/ivy/standard/function_and_method_signatures.rst","functional/ivy/standard/linear_algebra.rst","functional/ivy/standard/linear_algebra/diagonal.rst","functional/ivy/standard/linear_algebra/matmul.rst","functional/ivy/standard/linear_algebra/slodget.rst","functional/ivy/standard/linear_algebra/svd.rst","functional/ivy/standard/linear_algebra/trace.rst","functional/ivy/standard/linear_algebra/vector_norm.rst","functional/ivy/standard/manipulation_functions.rst","functional/ivy/standard/manipulation_functions/flip.rst","functional/ivy/standard/searching_functions.rst","functional/ivy/standard/searching_functions/argmax.rst","functional/ivy/standard/set_functions.rst","functional/ivy/standard/sorting_functions.rst","functional/ivy/standard/sorting_functions/argsort.rst","functional/ivy/standard/statistical_functions.rst","functional/ivy/standard/statistical_functions/min.rst","functional/ivy/standard/utility_functions.rst","functional/ivy/standard/utility_functions/all.rst","functional/ivy/standard/utility_functions/any.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],extra:[22,0,0,"-"],general:[48,0,0,"-"],gradients:[50,0,0,"-"],image:[52,0,0,"-"],linalg:[54,0,0,"-"],logic:[56,0,0,"-"],math:[58,0,0,"-"],meta:[60,0,0,"-"],random:[62,0,0,"-"],reductions:[64,0,0,"-"],standard:[66,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.extra":{device:[28,0,0,"-"],general:[30,0,0,"-"],gradients:[32,0,0,"-"],image:[34,0,0,"-"],linalg:[36,0,0,"-"],logic:[38,0,0,"-"],math:[40,0,0,"-"],meta:[42,0,0,"-"],random:[44,0,0,"-"],reductions:[46,0,0,"-"]},"ivy.array.extra.device":{ArrayWithDevice:[29,1,1,""]},"ivy.array.extra.general":{ArrayWithGeneral:[31,1,1,""]},"ivy.array.extra.gradients":{ArrayWithGradients:[33,1,1,""]},"ivy.array.extra.image":{ArrayWithImage:[35,1,1,""]},"ivy.array.extra.linalg":{ArrayWithLinalg:[37,1,1,""]},"ivy.array.extra.logic":{ArrayWithLogic:[39,1,1,""]},"ivy.array.extra.math":{ArrayWithMath:[41,1,1,""]},"ivy.array.extra.meta":{ArrayWithMeta:[43,1,1,""]},"ivy.array.extra.random":{ArrayWithRandom:[45,1,1,""]},"ivy.array.extra.reductions":{ArrayWithReductions:[47,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[49,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[51,1,1,""]},"ivy.array.image":{ArrayWithImage:[53,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[55,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[57,1,1,""]},"ivy.array.math":{ArrayWithMath:[59,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[61,1,1,""]},"ivy.array.random":{ArrayWithRandom:[63,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[65,1,1,""]},"ivy.array.standard":{ArrayWithArrayAPI:[66,1,1,""],arithmetic_operators:[67,0,0,"-"],array_operators:[69,0,0,"-"],attributes:[71,0,0,"-"],bitwise_operators:[73,0,0,"-"],comparison_operators:[75,0,0,"-"],inplace_operators:[77,0,0,"-"],reflected_operators:[79,0,0,"-"]},"ivy.array.standard.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[68,1,1,""]},"ivy.array.standard.array_operators":{ArrayWithArrayAPIArrayOperators:[70,1,1,""]},"ivy.array.standard.attributes":{ArrayWithArrayAPIAttributes:[72,1,1,""]},"ivy.array.standard.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[74,1,1,""]},"ivy.array.standard.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[76,1,1,""]},"ivy.array.standard.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[78,1,1,""]},"ivy.array.standard.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[80,1,1,""]},"ivy.container":{Container:[82,1,1,""],MultiDevContainer:[83,1,1,""]},"ivy.container.Container":{__init__:[82,3,1,""],all_false:[82,3,1,""],all_key_chains:[82,3,1,""],all_true:[82,3,1,""],arrays_as_lists:[82,3,1,""],as_arrays:[82,3,1,""],as_bools:[82,3,1,""],as_ones:[82,3,1,""],as_random_uniform:[82,3,1,""],as_variables:[82,3,1,""],as_zeros:[82,3,1,""],assert_contains_sub_container:[82,3,1,""],assert_contains_sub_structure:[82,3,1,""],assert_identical:[82,3,1,""],assert_identical_structure:[82,3,1,""],at_key_chain:[82,3,1,""],at_key_chains:[82,3,1,""],at_keys:[82,3,1,""],clip:[82,3,1,""],clip_vector_norm:[82,3,1,""],combine:[82,3,1,""],common_key_chains:[82,3,1,""],concat:[82,3,1,""],config:[82,3,1,""],contains_sub_container:[82,3,1,""],contains_sub_structure:[82,3,1,""],copy:[82,3,1,""],create_if_absent:[82,3,1,""],cutoff_at_depth:[82,3,1,""],cutoff_at_height:[82,3,1,""],deep_copy:[82,3,1,""],dev:[82,3,1,""],dev_clone:[82,3,1,""],dev_dist:[82,3,1,""],dev_str:[82,3,1,""],diff:[82,3,1,""],dtype:[82,3,1,""],einops_rearrange:[82,3,1,""],einops_reduce:[82,3,1,""],einops_repeat:[82,3,1,""],einsum:[82,3,1,""],expand_dims:[82,3,1,""],find_sub_container:[82,3,1,""],find_sub_structure:[82,3,1,""],flatten_key_chain:[82,3,1,""],flatten_key_chains:[82,3,1,""],flip:[82,3,1,""],format_key_chains:[82,3,1,""],from_disk_as_hdf5:[82,3,1,""],from_disk_as_json:[82,3,1,""],from_disk_as_pickled:[82,3,1,""],from_flat_list:[82,3,1,""],from_numpy:[82,3,1,""],gather:[82,3,1,""],gather_nd:[82,3,1,""],h5_file_size:[82,3,1,""],has_key:[82,3,1,""],has_key_chain:[82,3,1,""],has_nans:[82,3,1,""],identical:[82,3,1,""],identical_array_shapes:[82,3,1,""],identical_configs:[82,3,1,""],identical_structure:[82,3,1,""],if_exists:[82,3,1,""],inplace_update:[82,3,1,""],ivy:[82,3,1,""],key_chains_containing:[82,3,1,""],list_join:[82,3,1,""],list_stack:[82,3,1,""],map:[82,3,1,""],map_conts:[82,3,1,""],matrix_norm:[82,3,1,""],max_depth:[82,3,1,""],maximum:[82,3,1,""],minimum:[82,3,1,""],multi_map:[82,3,1,""],num_arrays:[82,3,1,""],overwrite_at_key_chain:[82,3,1,""],overwrite_at_key_chains:[82,3,1,""],prune_empty:[82,3,1,""],prune_key_chain:[82,3,1,""],prune_key_chains:[82,3,1,""],prune_key_from_key_chains:[82,3,1,""],prune_keys:[82,3,1,""],prune_keys_from_key_chains:[82,3,1,""],reduce:[82,3,1,""],reduce_max:[82,3,1,""],reduce_mean:[82,3,1,""],reduce_min:[82,3,1,""],reduce_prod:[82,3,1,""],reduce_std:[82,3,1,""],reduce_sum:[82,3,1,""],reduce_var:[82,3,1,""],remove_key_length_limit:[82,3,1,""],remove_print_limit:[82,3,1,""],repeat:[82,3,1,""],reshape:[82,3,1,""],reshape_like:[82,3,1,""],restructure:[82,3,1,""],restructure_key_chains:[82,3,1,""],set_at_key_chain:[82,3,1,""],set_at_key_chains:[82,3,1,""],set_at_keys:[82,3,1,""],set_framework:[82,3,1,""],set_ivy_backend:[82,3,1,""],shape:[82,3,1,""],shapes:[82,3,1,""],show:[82,3,1,""],show_sub_container:[82,3,1,""],shuffle:[82,3,1,""],shuffle_h5_file:[82,3,1,""],size_ordered_arrays:[82,3,1,""],slice_keys:[82,3,1,""],slice_via_key:[82,3,1,""],sort_by_key:[82,3,1,""],split:[82,3,1,""],stack:[82,3,1,""],stop_gradients:[82,3,1,""],structural_diff:[82,3,1,""],swapaxes:[82,3,1,""],to_dev:[82,3,1,""],to_dict:[82,3,1,""],to_disk_as_hdf5:[82,3,1,""],to_disk_as_json:[82,3,1,""],to_disk_as_pickled:[82,3,1,""],to_flat_list:[82,3,1,""],to_iterator:[82,3,1,""],to_iterator_keys:[82,3,1,""],to_iterator_values:[82,3,1,""],to_ivy:[82,3,1,""],to_jsonable:[82,3,1,""],to_list:[82,3,1,""],to_multi_dev:[82,3,1,""],to_native:[82,3,1,""],to_numpy:[82,3,1,""],to_raw:[82,3,1,""],trim_key:[82,3,1,""],try_kc:[82,3,1,""],unify:[82,3,1,""],unstack:[82,3,1,""],update_config:[82,3,1,""],vector_norm:[82,3,1,""],with_default_key_color:[82,3,1,""],with_entries_as_lists:[82,3,1,""],with_ivy_backend:[82,3,1,""],with_key_length_limit:[82,3,1,""],with_print_indent:[82,3,1,""],with_print_limit:[82,3,1,""],with_print_line_spacing:[82,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[83,3,1,""],at_dev:[83,3,1,""],at_devs:[83,3,1,""]},"ivy.debugger":{debug_mode:[86,2,1,""],set_breakpoint_debug_mode:[87,2,1,""],set_debug_mode:[88,2,1,""],set_exception_debug_mode:[89,2,1,""],unset_debug_mode:[90,2,1,""]},"ivy.framework_handler":{ContextManager:[100,1,1,""],choose_random_framework:[102,2,1,""],clear_framework_stack:[103,2,1,""],current_framework:[104,2,1,""],get_framework:[105,2,1,""],set_framework:[106,2,1,""],try_import_ivy_jax:[107,2,1,""],try_import_ivy_mxnet:[108,2,1,""],try_import_ivy_numpy:[109,2,1,""],try_import_ivy_tf:[110,2,1,""],try_import_ivy_torch:[111,2,1,""],unset_framework:[112,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[100,3,1,""]},"ivy.functional":{backends:[115,0,0,"-"],ivy:[851,0,0,"-"]},"ivy.functional.backends.numpy.extra":{device:[398,0,0,"-"],general:[400,0,0,"-"],gradients:[432,0,0,"-"],image:[437,0,0,"-"],linear_algebra:[441,0,0,"-"],logic:[445,0,0,"-"],math:[446,0,0,"-"],random:[448,0,0,"-"]},"ivy.functional.backends.numpy.extra.device":{Profiler:[399,1,1,""],clear_mem_on_dev:[398,2,1,""],dev:[398,2,1,""],dev_from_str:[398,2,1,""],dev_to_str:[398,2,1,""],gpu_is_available:[398,2,1,""],num_gpus:[398,2,1,""],to_dev:[398,2,1,""],tpu_is_available:[398,2,1,""]},"ivy.functional.backends.numpy.extra.device.Profiler":{__init__:[399,3,1,""],start:[399,3,1,""],stop:[399,3,1,""]},"ivy.functional.backends.numpy.extra.general":{abs:[400,2,1,""],arange:[401,2,1,""],argmin:[402,2,1,""],array:[403,2,1,""],asarray:[400,2,1,""],astype:[400,2,1,""],cast:[404,2,1,""],clip:[400,2,1,""],compile:[405,2,1,""],concatenate:[406,2,1,""],constant_pad:[400,2,1,""],container_types:[400,2,1,""],copy_array:[400,2,1,""],cumprod:[407,2,1,""],current_framework_str:[400,2,1,""],dtype:[408,2,1,""],dtype_bits:[409,2,1,""],dtype_from_str:[410,2,1,""],dtype_to_str:[411,2,1,""],floor:[400,2,1,""],floormod:[400,2,1,""],full:[412,2,1,""],gather:[413,2,1,""],gather_nd:[414,2,1,""],get_num_dims:[400,2,1,""],identity:[415,2,1,""],indices_where:[416,2,1,""],inplace_arrays_supported:[400,2,1,""],inplace_decrement:[417,2,1,""],inplace_increment:[418,2,1,""],inplace_update:[419,2,1,""],inplace_variables_supported:[400,2,1,""],is_array:[420,2,1,""],linear_resample:[421,2,1,""],linspace:[422,2,1,""],logspace:[423,2,1,""],meshgrid:[400,2,1,""],multiprocessing:[400,2,1,""],one_hot:[424,2,1,""],round:[400,2,1,""],scatter_flat:[425,2,1,""],scatter_nd:[426,2,1,""],shape:[400,2,1,""],split:[427,2,1,""],squeeze:[428,2,1,""],to_list:[400,2,1,""],to_numpy:[400,2,1,""],to_scalar:[400,2,1,""],transpose:[429,2,1,""],unstack:[430,2,1,""],where:[400,2,1,""],zero_pad:[400,2,1,""],zeros_like:[431,2,1,""]},"ivy.functional.backends.numpy.extra.gradients":{execute_with_gradients:[433,2,1,""],is_variable:[434,2,1,""],stop_gradient:[435,2,1,""],variable:[436,2,1,""],variable_data:[432,2,1,""]},"ivy.functional.backends.numpy.extra.image":{bilinear_resample:[438,2,1,""],gradient_image:[439,2,1,""],stack_images:[440,2,1,""]},"ivy.functional.backends.numpy.extra.linear_algebra":{matrix_norm:[442,2,1,""],qr:[443,2,1,""],vector_to_skew_symmetric_matrix:[444,2,1,""]},"ivy.functional.backends.numpy.extra.math":{erf:[447,2,1,""]},"ivy.functional.backends.numpy.extra.random":{multinomial:[449,2,1,""],randint:[448,2,1,""],random_normal:[448,2,1,""],random_uniform:[448,2,1,""],seed:[448,2,1,""],shuffle:[448,2,1,""]},"ivy.functional.backends.numpy.standard":{constants:[471,0,0,"-"],creation_functions:[472,0,0,"-"],data_type_functions:[478,0,0,"-"],data_types:[482,0,0,"-"]},"ivy.functional.backends.numpy.standard.creation_functions":{empty:[473,2,1,""],ones:[474,2,1,""],ones_like:[475,2,1,""],tril:[476,2,1,""],zeros:[477,2,1,""]},"ivy.functional.backends.numpy.standard.data_type_functions":{Finfo:[478,1,1,""],finfo:[480,2,1,""],iinfo:[481,2,1,""]},"ivy.functional.backends.numpy.standard.data_type_functions.Finfo":{__init__:[478,3,1,""],bits:[478,3,1,""],eps:[478,3,1,""],max:[478,3,1,""],min:[478,3,1,""],smallest_normal:[478,3,1,""]},"ivy.functional.ivy.extra":{compilation:[853,0,0,"-"],device:[855,0,0,"-"],dtype:[905,0,0,"-"],general:[929,0,0,"-"],gradients:[1024,0,0,"-"],image:[1040,0,0,"-"],linalg:[1047,0,0,"-"],logic:[1054,0,0,"-"],math:[1057,0,0,"-"],meta:[1070,0,0,"-"],multi_node:[1074,0,0,"-"],nest:[1118,0,0,"-"],random:[1130,0,0,"-"],reductions:[1137,0,0,"-"]},"ivy.functional.ivy.extra.compilation":{compile:[854,2,1,""]},"ivy.functional.ivy.extra.device":{DefaultDevice:[855,1,1,""],DevClonedItem:[857,1,1,""],DevClonedIter:[858,1,1,""],DevClonedNest:[859,1,1,""],DevDistItem:[860,1,1,""],DevDistIter:[861,1,1,""],DevDistNest:[862,1,1,""],DevManager:[855,1,1,""],DevMapper:[864,1,1,""],DevMapperMultiProc:[865,1,1,""],MultiDev:[855,1,1,""],MultiDevItem:[867,1,1,""],MultiDevIter:[868,1,1,""],MultiDevNest:[869,1,1,""],Profiler:[870,1,1,""],clear_mem_on_dev:[871,2,1,""],default_device:[872,2,1,""],dev:[873,2,1,""],dev_clone:[874,2,1,""],dev_clone_array:[875,2,1,""],dev_clone_iter:[876,2,1,""],dev_clone_nest:[877,2,1,""],dev_dist:[878,2,1,""],dev_dist_array:[879,2,1,""],dev_dist_iter:[880,2,1,""],dev_dist_nest:[881,2,1,""],dev_from_str:[882,2,1,""],dev_to_str:[883,2,1,""],dev_unify:[884,2,1,""],dev_unify_array:[885,2,1,""],dev_unify_iter:[886,2,1,""],dev_unify_nest:[887,2,1,""],dev_util:[888,2,1,""],get_all_arrays_on_dev:[889,2,1,""],gpu_is_available:[890,2,1,""],num_arrays_on_dev:[891,2,1,""],num_cpu_cores:[892,2,1,""],num_gpus:[893,2,1,""],percent_used_mem_on_dev:[894,2,1,""],print_all_arrays_on_dev:[895,2,1,""],set_default_device:[896,2,1,""],set_split_factor:[897,2,1,""],split_factor:[898,2,1,""],split_func_call:[899,2,1,""],to_dev:[900,2,1,""],total_mem_on_dev:[901,2,1,""],tpu_is_available:[902,2,1,""],unset_default_device:[903,2,1,""],used_mem_on_dev:[904,2,1,""]},"ivy.functional.ivy.extra.device.DefaultDevice":{__init__:[855,3,1,""]},"ivy.functional.ivy.extra.device.DevManager":{__init__:[855,3,1,""],da_tune_step:[855,3,1,""],dim_size:[855,3,1,""],ds_tune_step:[855,3,1,""],map:[855,3,1,""],repeated_config_check:[855,3,1,""],tune_step:[855,3,1,""],tuned:[855,3,1,""]},"ivy.functional.ivy.extra.device.DevMapper":{__init__:[864,3,1,""],map:[864,3,1,""]},"ivy.functional.ivy.extra.device.DevMapperMultiProc":{__init__:[865,3,1,""]},"ivy.functional.ivy.extra.device.MultiDev":{__init__:[855,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevItem":{__init__:[867,3,1,""],items:[867,3,1,""],keys:[867,3,1,""],shape:[867,3,1,""],values:[867,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevIter":{__init__:[868,3,1,""],at_dev:[868,3,1,""],at_devs:[868,3,1,""]},"ivy.functional.ivy.extra.device.MultiDevNest":{__init__:[869,3,1,""],at_dev:[869,3,1,""]},"ivy.functional.ivy.extra.device.Profiler":{__init__:[870,3,1,""],start:[870,3,1,""],stop:[870,3,1,""]},"ivy.functional.ivy.extra.dtype":{DefaultDtype:[905,1,1,""],DefaultFloatDtype:[905,1,1,""],DefaultIntDtype:[905,1,1,""],astype:[905,2,1,""],cast:[909,2,1,""],closest_valid_dtype:[910,2,1,""],convert_dtype:[911,2,1,""],default_dtype:[912,2,1,""],default_float_dtype:[913,2,1,""],default_int_dtype:[914,2,1,""],dtype:[915,2,1,""],dtype_bits:[916,2,1,""],dtype_from_str:[917,2,1,""],dtype_to_str:[918,2,1,""],invalid_dtype:[919,2,1,""],is_float_dtype:[920,2,1,""],is_int_dtype:[921,2,1,""],set_default_dtype:[922,2,1,""],set_default_float_dtype:[923,2,1,""],set_default_int_dtype:[924,2,1,""],unset_default_dtype:[925,2,1,""],unset_default_float_dtype:[926,2,1,""],unset_default_int_dtype:[927,2,1,""],valid_dtype:[928,2,1,""]},"ivy.functional.ivy.extra.dtype.DefaultDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.extra.dtype.DefaultFloatDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.extra.dtype.DefaultIntDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.extra.general":{"default":[952,2,1,""],abs:[930,2,1,""],all_equal:[931,2,1,""],arange:[932,2,1,""],arg_names:[933,2,1,""],argmin:[934,2,1,""],array:[935,2,1,""],array_equal:[936,2,1,""],arrays_equal:[937,2,1,""],asarray:[929,2,1,""],assert_supports_inplace:[938,2,1,""],broadcast_to:[939,2,1,""],cache_fn:[940,2,1,""],clip:[941,2,1,""],clip_matrix_norm:[942,2,1,""],clip_vector_norm:[943,2,1,""],concatenate:[944,2,1,""],constant_pad:[945,2,1,""],container_types:[946,2,1,""],copy_array:[947,2,1,""],cross:[948,2,1,""],cumprod:[949,2,1,""],cumsum:[950,2,1,""],current_framework_str:[951,2,1,""],einops_rearrange:[953,2,1,""],einops_reduce:[954,2,1,""],einops_repeat:[955,2,1,""],equal:[956,2,1,""],exists:[957,2,1,""],expand_dims:[958,2,1,""],floor:[959,2,1,""],floormod:[960,2,1,""],fourier_encode:[961,2,1,""],full:[962,2,1,""],gather:[963,2,1,""],gather_nd:[964,2,1,""],get_all_arrays_in_memory:[965,2,1,""],get_min_base:[966,2,1,""],get_min_denominator:[967,2,1,""],get_num_dims:[968,2,1,""],get_referrers_recursive:[969,2,1,""],has_nans:[970,2,1,""],identity:[971,2,1,""],indices_where:[972,2,1,""],inplace_arrays_supported:[973,2,1,""],inplace_decrement:[974,2,1,""],inplace_increment:[975,2,1,""],inplace_update:[976,2,1,""],inplace_variables_supported:[977,2,1,""],is_array:[978,2,1,""],isinf:[979,2,1,""],linear_resample:[980,2,1,""],linspace:[981,2,1,""],logspace:[982,2,1,""],match_kwargs:[983,2,1,""],matmul:[984,2,1,""],maximum:[985,2,1,""],meshgrid:[986,2,1,""],minimum:[987,2,1,""],multiprocessing:[988,2,1,""],num_arrays_in_memory:[989,2,1,""],one_hot:[990,2,1,""],ones:[991,2,1,""],print_all_arrays_in_memory:[992,2,1,""],queue_timeout:[993,2,1,""],repeat:[994,2,1,""],reshape:[995,2,1,""],round:[996,2,1,""],scatter_flat:[997,2,1,""],scatter_nd:[998,2,1,""],set_min_base:[999,2,1,""],set_min_denominator:[1000,2,1,""],set_queue_timeout:[1001,2,1,""],set_tmp_dir:[1002,2,1,""],shape:[1003,2,1,""],shape_to_tuple:[1004,2,1,""],split:[1005,2,1,""],squeeze:[1006,2,1,""],stable_divide:[1007,2,1,""],stable_pow:[1008,2,1,""],stack:[1009,2,1,""],supports_inplace:[1010,2,1,""],swapaxes:[1011,2,1,""],tile:[1012,2,1,""],tmp_dir:[1013,2,1,""],to_list:[1014,2,1,""],to_numpy:[1015,2,1,""],to_scalar:[1016,2,1,""],transpose:[1017,2,1,""],try_else_none:[1018,2,1,""],unstack:[1019,2,1,""],value_is_nan:[1020,2,1,""],where:[1021,2,1,""],zero_pad:[1022,2,1,""],zeros_like:[1023,2,1,""]},"ivy.functional.ivy.extra.gradients":{GradientTracking:[1024,1,1,""],adam_step:[1026,2,1,""],adam_update:[1027,2,1,""],execute_with_gradients:[1028,2,1,""],gradient_descent_update:[1029,2,1,""],is_variable:[1030,2,1,""],lamb_update:[1031,2,1,""],lars_update:[1032,2,1,""],optimizer_update:[1033,2,1,""],set_with_grads:[1034,2,1,""],stop_gradient:[1035,2,1,""],unset_with_grads:[1036,2,1,""],variable:[1037,2,1,""],variable_data:[1038,2,1,""],with_grads:[1039,2,1,""]},"ivy.functional.ivy.extra.gradients.GradientTracking":{__init__:[1024,3,1,""]},"ivy.functional.ivy.extra.image":{bilinear_resample:[1041,2,1,""],float_img_to_uint8_img:[1042,2,1,""],gradient_image:[1043,2,1,""],random_crop:[1044,2,1,""],stack_images:[1045,2,1,""],uint8_img_to_float_img:[1046,2,1,""]},"ivy.functional.ivy.extra.linalg":{cholesky:[1048,2,1,""],inv:[1049,2,1,""],matrix_norm:[1050,2,1,""],pinv:[1051,2,1,""],qr:[1052,2,1,""],vector_to_skew_symmetric_matrix:[1053,2,1,""]},"ivy.functional.ivy.extra.logic":{logical_and:[1055,2,1,""],logical_or:[1056,2,1,""]},"ivy.functional.ivy.extra.math":{acos:[1058,2,1,""],asin:[1059,2,1,""],atan2:[1061,2,1,""],atan:[1060,2,1,""],atanh:[1062,2,1,""],cosh:[1063,2,1,""],divide:[1064,2,1,""],erf:[1065,2,1,""],exp:[1066,2,1,""],log:[1067,2,1,""],tan:[1068,2,1,""],tanh:[1069,2,1,""]},"ivy.functional.ivy.extra.meta":{fomaml_step:[1071,2,1,""],maml_step:[1072,2,1,""],reptile_step:[1073,2,1,""]},"ivy.functional.ivy.extra.multi_node":{split_factors:[1074,4,1,""]},"ivy.functional.ivy.extra.nest":{all_nested_indices:[1119,2,1,""],copy_nest:[1120,2,1,""],index_nest:[1121,2,1,""],map:[1122,2,1,""],map_nest_at_index:[1123,2,1,""],map_nest_at_indices:[1124,2,1,""],multi_index_nest:[1125,2,1,""],nested_indices_where:[1126,2,1,""],nested_map:[1127,2,1,""],set_nest_at_index:[1128,2,1,""],set_nest_at_indices:[1129,2,1,""]},"ivy.functional.ivy.extra.random":{multinomial:[1131,2,1,""],randint:[1132,2,1,""],random_normal:[1133,2,1,""],random_uniform:[1134,2,1,""],seed:[1135,2,1,""],shuffle:[1136,2,1,""]},"ivy.functional.ivy.extra.reductions":{einsum:[1138,2,1,""],reduce_max:[1139,2,1,""],reduce_mean:[1140,2,1,""],reduce_min:[1141,2,1,""],reduce_prod:[1142,2,1,""],reduce_std:[1143,2,1,""],reduce_sum:[1144,2,1,""],reduce_var:[1145,2,1,""]},"ivy.functional.ivy.neural_net":{activations:[1147,0,0,"-"],layers:[1155,0,0,"-"],losses:[1168,0,0,"-"],norms:[1172,0,0,"-"]},"ivy.functional.ivy.neural_net.activations":{gelu:[1148,2,1,""],leaky_relu:[1149,2,1,""],relu:[1150,2,1,""],sigmoid:[1151,2,1,""],softmax:[1152,2,1,""],softplus:[1153,2,1,""],tanh:[1154,2,1,""]},"ivy.functional.ivy.neural_net.layers":{conv1d:[1156,2,1,""],conv1d_transpose:[1157,2,1,""],conv2d:[1158,2,1,""],conv2d_transpose:[1159,2,1,""],conv3d:[1160,2,1,""],conv3d_transpose:[1161,2,1,""],depthwise_conv2d:[1162,2,1,""],dropout:[1163,2,1,""],linear:[1164,2,1,""],lstm_update:[1165,2,1,""],multi_head_attention:[1166,2,1,""],scaled_dot_product_attention:[1167,2,1,""]},"ivy.functional.ivy.neural_net.losses":{binary_cross_entropy:[1169,2,1,""],cross_entropy:[1170,2,1,""],sparse_cross_entropy:[1171,2,1,""]},"ivy.functional.ivy.neural_net.norms":{layer_norm:[1173,2,1,""]},"ivy.functional.ivy.standard":{constants:[1175,0,0,"-"],creation_functions:[1176,0,0,"-"],data_type_functions:[1182,0,0,"-"],data_types:[1185,0,0,"-"],elementwise_functions:[1186,0,0,"-"],function_and_method_signatures:[1207,0,0,"-"],linear_algebra:[1208,0,0,"-"],manipulation_functions:[1215,0,0,"-"],searching_functions:[1217,0,0,"-"],set_functions:[1219,0,0,"-"],sorting_functions:[1220,0,0,"-"],statistical_functions:[1222,0,0,"-"],utility_functions:[1224,0,0,"-"]},"ivy.functional.ivy.standard.constants":{e:[1175,4,1,""],nan:[1175,4,1,""],pi:[1175,4,1,""]},"ivy.functional.ivy.standard.creation_functions":{empty:[1177,2,1,""],ones:[1178,2,1,""],ones_like:[1179,2,1,""],tril:[1180,2,1,""],zeros:[1181,2,1,""]},"ivy.functional.ivy.standard.data_type_functions":{finfo:[1183,2,1,""],iinfo:[1184,2,1,""]},"ivy.functional.ivy.standard.elementwise_functions":{acosh:[1187,2,1,""],asinh:[1188,2,1,""],bitwise_and:[1189,2,1,""],ceil:[1190,2,1,""],cos:[1191,2,1,""],cosh:[1192,2,1,""],isfinite:[1193,2,1,""],isnan:[1194,2,1,""],less:[1195,2,1,""],less_equal:[1196,2,1,""],log10:[1197,2,1,""],log1p:[1198,2,1,""],log2:[1199,2,1,""],logical_not:[1200,2,1,""],logical_or:[1201,2,1,""],negative:[1202,2,1,""],sin:[1203,2,1,""],sinh:[1204,2,1,""],sqrt:[1205,2,1,""],tanh:[1206,2,1,""]},"ivy.functional.ivy.standard.linear_algebra":{diagonal:[1209,2,1,""],matmul:[1210,2,1,""],slodget:[1211,2,1,""],svd:[1212,2,1,""],trace:[1213,2,1,""],vector_norm:[1214,2,1,""]},"ivy.functional.ivy.standard.manipulation_functions":{flip:[1216,2,1,""]},"ivy.functional.ivy.standard.searching_functions":{argmax:[1218,2,1,""]},"ivy.functional.ivy.standard.sorting_functions":{argsort:[1221,2,1,""]},"ivy.functional.ivy.standard.statistical_functions":{min:[1223,2,1,""]},"ivy.functional.ivy.standard.utility_functions":{all:[1225,2,1,""],any:[1226,2,1,""]},"ivy.stateful":{activations:[1230,0,0,"-"],converters:[1233,0,0,"-"],initializers:[1235,0,0,"-"],layers:[1244,0,0,"-"],module:[1256,0,0,"-"],norms:[1258,0,0,"-"],optimizers:[1260,0,0,"-"],sequential:[1266,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1231,1,1,""],GELU:[1232,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1231,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1232,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1234,2,1,""]},"ivy.stateful.initializers":{Constant:[1235,1,1,""],FirstLayerSiren:[1237,1,1,""],GlorotUniform:[1238,1,1,""],KaimingNormal:[1235,1,1,""],Ones:[1240,1,1,""],Siren:[1241,1,1,""],Uniform:[1235,1,1,""],Zeros:[1243,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1235,3,1,""],create_variables:[1235,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1237,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1238,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1235,3,1,""],create_variables:[1235,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1240,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1241,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1235,3,1,""],create_variables:[1235,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1243,3,1,""]},"ivy.stateful.layers":{Conv1D:[1245,1,1,""],Conv1DTranspose:[1246,1,1,""],Conv2D:[1247,1,1,""],Conv2DTranspose:[1248,1,1,""],Conv3D:[1249,1,1,""],Conv3DTranspose:[1250,1,1,""],DepthwiseConv2D:[1251,1,1,""],Dropout:[1252,1,1,""],LSTM:[1253,1,1,""],Linear:[1254,1,1,""],MultiHeadAttention:[1255,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1245,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1246,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1247,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1248,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1249,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1250,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1251,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1252,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1253,3,1,""],get_initial_state:[1253,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1254,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1255,3,1,""]},"ivy.stateful.module":{Module:[1257,1,1,""]},"ivy.stateful.module.Module":{__init__:[1257,3,1,""],build:[1257,3,1,""],build_mode:[1257,3,1,""],built:[1257,3,1,""],check_submod_rets:[1257,3,1,""],get_mod_key:[1257,3,1,""],mod_depth:[1257,3,1,""],mod_height:[1257,3,1,""],mod_with_top_mod_key_chain:[1257,3,1,""],save_weights:[1257,3,1,""],show_mod_in_top_mod:[1257,3,1,""],show_structure:[1257,3,1,""],show_v_in_top_v:[1257,3,1,""],sub_mods:[1257,3,1,""],track_submod_call_order:[1257,3,1,""],track_submod_rets:[1257,3,1,""],v_with_top_v_key_chains:[1257,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1259,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1259,3,1,""]},"ivy.stateful.optimizers":{Adam:[1261,1,1,""],LAMB:[1262,1,1,""],LARS:[1263,1,1,""],Optimizer:[1264,1,1,""],SGD:[1265,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1261,3,1,""],set_state:[1261,3,1,""],state:[1261,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1262,3,1,""],set_state:[1262,3,1,""],state:[1262,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1263,3,1,""],set_state:[1263,3,1,""],state:[1263,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1264,3,1,""],set_state:[1264,3,1,""],step:[1264,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1265,3,1,""],set_state:[1265,3,1,""],state:[1265,3,1,""]},"ivy.stateful.sequential":{Sequential:[1267,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1267,3,1,""]},"ivy.verbosity":{cprint:[1272,2,1,""]},ivy:{"debugger":[85,0,0,"-"],container:[81,0,0,"-"],framework_handler:[100,0,0,"-"],func_wrapper:[113,0,0,"-"],verbosity:[1271,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1260,1261,1262],"02886":1227,"100":[1074,1227,1269],"141592653589793":1175,"2021":1227,"2102":1227,"360":[1057,1068],"718281828459045":1175,"754":[1175,1182,1183,1186,1205],"999":[1024,1026,1027,1031,1260,1261,1262],"abstract":[855,870,1227,1260,1264],"boolean":[81,82,855,890,902,905,919,928,929,931,936,937,970,972,973,977,978,979,1010,1020,1024,1030,1054,1055,1056,1070,1071,1072,1074,1186,1189,1200,1201],"break":84,"case":[15,18,19,81,82,83,84,855,894,901,904,929,932,995,997,998,1047,1050,1052,1074,1118,1121,1125,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205,1227,1244,1255,1256,1257,1260,1264,1273],"catch":[929,952],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,100,398,399,478,855,857,858,859,860,861,862,864,865,867,868,869,870,882,883,905,929,933,983,1024,1038,1074,1118,1120,1127,1168,1170,1171,1182,1184,1227,1230,1231,1232,1233,1234,1235,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1273],"default":[15,18,19,81,82,83,84,852,853,854,855,864,865,872,873,877,878,879,880,881,884,885,886,887,894,897,898,899,904,905,912,913,914,915,929,931,932,934,942,943,944,945,948,949,950,961,962,963,968,970,971,980,982,983,986,988,991,993,994,997,998,1001,1003,1005,1007,1008,1017,1019,1020,1024,1027,1029,1030,1031,1032,1033,1035,1039,1047,1050,1052,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1152,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1208,1209,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],"final":[81,82,84,929,961,981,982,1074,1244,1255,1270],"float":[81,82,83,855,864,865,888,894,897,901,904,905,913,920,929,932,942,943,945,961,962,966,967,982,999,1000,1001,1007,1008,1024,1026,1027,1029,1031,1032,1033,1040,1042,1046,1057,1064,1070,1071,1072,1073,1074,1130,1133,1134,1147,1149,1155,1163,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1181,1182,1183,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205,1206,1208,1214,1244,1252,1255,1258,1259,1260,1261,1262,1263,1264,1265],"function":[15,81,82,84,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,473,474,475,476,477,480,481,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1183,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1216,1218,1221,1223,1225,1226,1227,1230,1231,1232,1260,1263,1264,1265,1269,1270,1273],"import":[84,1227,1270,1273],"int":[81,82,83,84,448,472,473,474,476,477,853,854,855,877,878,879,880,881,884,885,886,887,892,893,899,905,914,916,921,929,934,939,944,945,949,950,953,954,955,958,961,962,963,968,971,980,981,982,990,991,994,995,997,998,1003,1004,1005,1006,1009,1011,1012,1017,1019,1022,1024,1026,1027,1031,1040,1044,1045,1047,1050,1070,1071,1072,1073,1074,1118,1127,1130,1131,1132,1134,1135,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1166,1168,1170,1171,1172,1173,1176,1177,1178,1180,1181,1182,1183,1184,1208,1209,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1258,1259],"long":[84,1155,1165],"new":[81,82,84,448,905,909,929,930,939,953,954,955,958,961,962,963,964,991,995,997,998,999,1000,1007,1008,1009,1024,1027,1029,1031,1032,1033,1040,1042,1044,1046,1057,1062,1063,1069,1074,1118,1128,1129,1130,1131,1172,1173,1176,1177,1178,1179,1181,1186,1198,1227,1233,1234,1244,1254,1258,1259,1260,1261,1262,1263,1264,1265,1270,1273],"public":[929,946],"return":[15,16,17,18,19,81,82,83,84,448,853,854,855,864,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,890,891,893,894,898,899,900,901,902,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,928,929,930,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,994,995,996,997,998,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1211,1212,1213,1214,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1233,1234,1244,1253,1254,1260,1264,1269,1270,1273],"short":[84,1155,1165,1227,1273],"static":[81,82,853,854],"super":1074,"true":[81,82,83,400,405,432,435,448,449,853,854,855,929,931,938,940,957,961,970,972,1020,1021,1024,1027,1029,1030,1031,1032,1033,1035,1047,1050,1070,1071,1072,1073,1074,1118,1119,1126,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1155,1163,1168,1169,1170,1171,1186,1193,1194,1200,1201,1208,1212,1214,1217,1218,1220,1221,1224,1225,1226,1244,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265],"try":[81,82,929,1018,1074],"var":[81,82,1070,1071,1072,1273],"while":[81,82,83,1074,1186,1200,1201],AND:[1054,1055,1186,1189,1224,1225],But:1273,For:[84,929,932,941,1009,1024,1030,1038,1047,1052,1057,1058,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205,1227,1233,1234,1270,1273],Its:[1057,1060],NOT:[1186,1200],Not:1175,One:[81,82,84,929,954,995,1130,1132,1273],Ones:[1227,1235],PRs:84,Such:[929,946],That:1270,The:[15,16,17,18,19,81,82,83,84,853,854,855,864,865,871,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,894,897,898,899,900,901,904,905,909,910,911,916,917,918,919,928,929,932,935,936,939,940,942,943,944,945,947,948,951,952,956,961,963,964,971,974,975,976,978,980,982,984,986,988,991,994,995,997,998,999,1000,1001,1004,1005,1006,1007,1008,1009,1012,1020,1023,1024,1026,1027,1029,1031,1032,1033,1035,1038,1040,1042,1044,1046,1047,1050,1052,1057,1058,1059,1060,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1176,1180,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226,1227,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1270,1273],There:[84,1227,1270],These:[84,1227],Use:84,Used:[1118,1119,1126,1256,1257],Using:[1227,1228,1273],With:[81,82,1047,1050,1137,1139,1140,1141,1142,1143,1144,1145,1217,1218,1227,1269,1273],__array__:[929,935],__call__:[1244,1255,1256,1257],__del__:1074,__dict__:[1074,1270],__enter__:1074,__exit__:1074,__getitem__:1074,__getstate__:1074,__init__:[81,82,83,84,100,101,207,361,398,399,478,479,611,805,855,856,863,864,865,866,867,868,869,870,905,906,907,908,1024,1025,1074,1078,1085,1227,1230,1231,1232,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1273],__iter__:1074,__len__:1074,__next__:1074,__repr__:1074,_assign_vari:1269,_axi:1074,_base:[1118,1119,1126],_compute_node_da_ratio:1074,_compute_node_strs_da:1074,_concat_unify_arrai:1074,_counter:1074,_cur_framework:[84,1074],_da_direct:1074,_da_directions_flip:1074,_da_step_tim:1074,_da_tim:1074,_da_tune_count:1074,_data:1074,_delta_da_dim_s:1074,_delta_sf:1074,_dict:1074,_dim_siz:1074,_first_da_tune_step:1074,_first_ns_tune_step:1074,_fn:1074,_forward:[1227,1269],_get_kalman_param:1273,_get_prior:1273,_get_some_model:1273,_index:[1118,1119,1126],_input_queu:1074,_length:1074,_max_depth:1074,_max_node_dim_step_ratio:1074,_max_node_dim_step_s:1074,_max_split_factor_step_s:1074,_mean_unify_arrai:1074,_min_bas:[929,1008,1172,1173,1258,1259],_min_denomin:[929,1007],_min_node_dim_s:1074,_min_sf_tune_step:1074,_min_unit_node_tune_step:1074,_model:1273,_node_mapp:1074,_node_percent_mem:1074,_node_str:1074,_node_str_da_ratio:1074,_node_strs_da:1074,_node_strs_kei:1074,_node_strs_n:1074,_node_util:1074,_ns_step_tim:1074,_ns_time:1074,_ns_tune_count:1074,_num_nod:1074,_num_work:1074,_observed_config:1074,_output_queu:1074,_paramet:1269,_percent_mem_inc_per_sf:1074,_percent_mem_inc_per_unit_da_dim:1074,_percent_util_inc_per_unit_da_dim:1074,_ret_fn:1074,_safety_factor:1074,_save_dir:1074,_shift_da_split:1074,_shift_n:1074,_slice:1074,_step:[1260,1264],_sum_unify_arrai:1074,_timeout:1074,_tune:1074,_tune_da:1074,_tune_n:1074,_tune_step:1074,_unit_da_tune_count:1074,_unroll_step:1273,_with_node_mappig:1074,_worker:1074,_worker_class:1074,_worker_fn:1074,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,855,864,870,1074,1256,1257,1260,1264],abil:1227,abl:[81,82],about:[1182,1183,1184],abov:[84,1130,1132,1176,1180,1208,1209],above_height:[81,82],abs:[261,400,534,667,852,929,1074,1208,1214],absolut:[81,82,929,930,1208,1211],abstractmethod:1074,accept:[15,84,1186,1200,1201,1227],access:[81,82,84,1270],accord:[81,82,929,945,963,997,998,1017,1022,1182,1183],accordingli:[1208,1214,1224,1225,1226],accur:[100,398,399,478,855,867,868,869,870,905,1024,1235,1237,1238,1240,1241,1243],aco:[750,852,1057],acosh:[211,365,483,615,809,1174,1186],across:[81,82,855,864,865,874,875,877,878,879,880,881,887,897,898,929,934,936,937,1074,1118,1122],act:84,activ:[1146,1148,1149,1150,1151,1152,1153,1154,1227,1231,1232],actual:1270,adam:[1024,1026,1027,1031,1227,1260,1262,1269],adam_step:[852,1024],adam_upd:[852,1024],adapt:[1024,1032,1260,1263],add:[81,82,84,1074,1168,1169,1170,1171,1172,1173,1227,1258,1259,1270],added:[84,929,1007,1008,1266,1267],adding:[84,929,939],addit:[81,82,84,929,953,954,955,1172,1173,1244,1254],addition:84,address:84,adher:84,adjac:[929,932],adopt:[84,929,946],affect:[929,932],affin:[1258,1259],after:[929,980,1024,1027,1028,1029,1031,1032,1033,1040,1041,1172,1173,1186,1205,1260,1261,1262,1263,1264,1265,1273],after_1:[929,945,1022],after_n:[929,945,1022],again:84,against:[81,82,1047,1050,1137,1139,1140,1141,1142,1143,1144,1145,1208,1210,1217,1218],agnost:[84,1227,1269,1270],aim:1273,algebra:[1047,1174],algorithm:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251,1273],align:[81,82,84,929,939],aliv:[855,889,891,895,929,965,989,992],all:[15,16,17,18,19,81,82,84,250,393,522,654,848,853,854,855,864,889,895,929,930,931,936,937,946,965,971,992,1006,1047,1052,1070,1071,1072,1073,1074,1118,1119,1120,1126,1127,1130,1131,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1165,1174,1176,1180,1208,1214,1215,1216,1224,1227,1270,1273],all_depth:[81,82],all_equ:[852,929],all_fals:[81,82],all_key_chain:[81,82],all_nested_indic:[852,1118],all_tru:[81,82],alloc:[84,855,1074,1176,1180],allow:[929,981,982,983,1256,1257],allow_dupl:[929,983],alon:[855,894,904,1074,1227],along:[81,82,84,448,855,878,879,880,881,884,885,886,887,899,929,944,949,950,963,980,981,982,994,1005,1009,1012,1019,1047,1050,1070,1071,1072,1073,1074,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1208,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226],alongsid:[1269,1270],alpha:[1147,1149],alphabet:[81,82,83],alphabetical_kei:[81,82,83],alreadi:[81,82,84,855,1074,1186,1190],also:[81,82,84,929,932,1024,1027,1070,1071,1072,1073,1118,1119,1120,1126,1127,1155,1164,1227,1244,1254,1269],altern:1269,alwai:[81,82,84,1024,1030,1035],among:[81,82],amount:[855,901,1074,1227],angl:[1057,1058,1061,1186,1192,1204,1206],ani:[15,16,17,18,19,81,82,84,250,393,522,654,848,853,854,855,857,860,864,865,867,876,877,880,881,886,929,931,932,935,952,953,954,955,956,957,970,978,983,1007,1008,1024,1028,1074,1118,1119,1122,1126,1127,1128,1129,1130,1134,1174,1186,1196,1224,1227,1233,1234,1256,1257,1269,1270,1273],anoth:[81,82,84,905,911,1227],another_backend:84,anyth:[84,1273],anywai:84,apart:84,api:[1227,1228],appear:[84,929,958],append:[81,82,1074,1208,1209,1210],appli:[15,18,19,81,82,929,953,954,955,1024,1031,1032,1054,1055,1056,1070,1071,1072,1118,1122,1125,1127,1147,1148,1149,1150,1151,1152,1153,1154,1155,1164,1166,1167,1172,1173,1208,1212,1227,1230,1231,1232,1258,1259],applic:[1118,1122,1127,1155,1166,1167,1227,1273],appropri:[1217,1218],approxim:[1147,1148,1186,1187,1188,1191,1192,1197,1198,1199,1203,1204,1206],arang:[125,261,400,448,534,667,852,929,981,982],arbitrari:[81,82,855,884,885,887,1074],arc:[1057,1061],arcco:[1057,1058],arctan:[1057,1060],area:[1186,1187,1188,1227],arg:[15,16,17,81,82,84,100,104,855,864,877,881,887,899,929,953,954,955,998,1074,1233,1234,1256,1257],arg_nam:[852,929],arg_stateful_idx:[1256,1257],argmax:[243,387,515,647,841,1174,1217],argmin:[125,400,534,667,852,929],args_clon:1074,args_dist:1074,args_to_ivi:[15,23,1227],args_to_n:[15,23,1227],args_uni:1074,argsort:[246,390,518,650,844,1174,1220],argument:[15,16,17,18,19,81,82,83,84,100,104,853,854,855,864,865,877,881,887,929,932,933,940,952,983,998,1057,1058,1074,1118,1122,1233,1234,1256,1257],aris:[1227,1273],arithmet:[1137,1140,1143,1145],arithmetic_oper:[0,1,2,66,67,68],around:[81,82,83],arr:448,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,125,261,400,448,534,667,852,855,873,874,875,878,879,880,881,884,885,886,887,889,891,895,899,900,905,909,915,920,921,929,930,931,932,934,936,937,938,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,962,963,964,965,968,970,971,972,973,974,975,976,978,979,980,981,982,984,985,986,987,989,990,991,992,994,995,996,997,998,1003,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1026,1027,1030,1031,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1118,1120,1127,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1244,1252,1253,1255,1260,1264,1269,1270],arrang:[929,953],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,84],array_api_methods_to_test:84,array_equ:[261,667,852,929],array_lik:[448,929,935],array_modul:84,array_oper:[0,3,4,66,69,70],arrays_as_list:[81,82],arrays_equ:[81,82,852,929],arraywitharrayapi:[0,66],arraywitharrayapiarithmeticoper:[0,1,66,67],arraywitharrayapiarrayoper:[0,3,66,69],arraywitharrayapiattribut:[0,5,66,71],arraywitharrayapibitwiseoper:[0,7,66,73],arraywitharrayapicomparisonoper:[0,9,66,75],arraywitharrayapiinplaceoper:[0,11,66,77],arraywitharrayapireflectedoper:[0,13,66,79],arraywithdevic:[20,28,1227],arraywithgener:[30,48,1227],arraywithgradi:[32,50,1227],arraywithimag:[34,52,1227],arraywithlinalg:[36,54,1227],arraywithlog:[38,56,1227],arraywithmath:[40,58,1227],arraywithmeta:[42,60,1227],arraywithrandom:[44,62,1227],arraywithreduct:[46,64,1227],arriv:[81,82,83],articl:1227,arxiv:1227,as_arrai:[81,82,929,968,1003],as_bool:[81,82],as_on:[81,82],as_random_uniform:[81,82],as_str:[398,400,408,855,873,905,912,913,914,915],as_tensor:400,as_vari:[81,82],as_zero:[81,82],asarrai:[400,929],ascend:[1220,1221],asin:[750,852,1057],asinh:[211,483,615,809,1174,1186],aspect:[1040,1045],assert:[81,82,929,938,1074],assert_contains_sub_contain:[81,82],assert_contains_sub_structur:[81,82],assert_ident:[81,82],assert_identical_structur:[81,82],assert_is_bool:[81,82],assert_supports_inplac:[852,929],associ:[84,1047,1053],assum:[1186,1191,1203,1270,1273],astyp:[400,905],asynchron:[81,82,83],at_dev:[81,83,855,868,869],at_kei:[81,82],at_key_chain:[81,82],at_nod:1074,atan2:[750,852,1057],atan:[750,852,1057],atanh:[750,852,1057],attent:[84,1155,1166,1167,1244,1255],attribut:[0,6,66,72,81,82,929,1023,1182,1183,1184],audienc:[1227,1270],author:1227,automat:84,avail:[81,82,84,855,890,892,893,902,929,954,1074],averag:[1024,1026,1027,1031,1070,1071,1072,1137,1140],average_across_step:[1070,1071,1072],avoid:[84,855,1074,1270],axes:[81,82,84,400,429,441,442,855,899,929,934,945,958,1011,1017,1022,1047,1050,1074,1137,1139,1140,1141,1142,1143,1144,1145,1208,1214,1215,1216,1217,1218,1222,1223,1224,1225,1226],axes_length:[81,82,929,953,954,955],axi:[81,82,400,402,406,407,413,421,422,423,427,428,430,855,857,860,867,878,879,880,881,884,885,886,887,899,929,934,944,945,948,949,950,958,963,980,981,982,994,1005,1006,1009,1011,1012,1019,1022,1074,1130,1136,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1168,1170,1171,1208,1209,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226],axis0:[81,82,929,1011],axis1:[81,82,929,1011,1208,1209],axis2:[1208,1209],back:[84,1256,1257,1260,1264],backend:[15,17,19,81,82,114,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,472,473,474,475,476,477,478,480,481,855,890,893,902,905,911,919,928,929,973,977,1024,1027,1029,1031,1032,1033,1038,1074,1227,1228,1233,1234,1260,1261,1262,1263,1264,1265,1269,1270,1273],backend_nam:84,background:[1227,1270],backprop:1273,backward:[1224,1225,1226,1269],band:[929,961],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,100,398,399,400,423,478,855,857,858,859,860,861,862,864,865,867,868,869,870,905,929,966,982,999,1008,1024,1074,1137,1138,1186,1197,1198,1199,1227,1230,1231,1232,1235,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1273],basi:84,batch:[81,82,855,897,898,929,961,971,1040,1044,1070,1071,1072,1073,1074,1155,1164,1172,1173,1208,1212,1214,1258,1259],batch_shap:[400,415,929,971,990,1040,1041,1042,1043,1044,1045,1046,1047,1053,1130,1131,1155,1165,1166,1167,1244,1253],batch_siz:[448,449,1074,1130,1131,1155,1156,1157,1158,1159,1160,1161,1162],bayesian:1273,becaus:[84,929,932],becom:[84,929,941,1057,1061,1273],been:[929,953,954,955,1130,1131],befor:[81,82,84,855,899,1070,1071,1072,1074,1118,1127,1137,1139,1140,1141,1142,1143,1144,1145,1155,1166,1167,1273],before_1:[929,945,1022],before_n:[929,945,1022],begin:[1118,1119,1126,1270],behaviour:[84,1273],behind:[1024,1027,1029,1031,1032,1033,1227],being:[81,82,84,929,932,993,1001,1074],believ:84,belong:[81,82],below:[84,1176,1180,1208,1209,1227,1270,1273],below_depth:[81,82],benefit:1227,bernoul:[1155,1163,1244,1252],best:[84,929,983,1227],beta1:[1024,1026,1027,1031,1260,1261,1262],beta2:[1024,1026,1027,1031,1260,1261,1262],beta:[1172,1173],between:[81,82,83,929,932,1047,1052,1118,1122,1130,1132,1168,1170,1171,1182,1183,1260,1262],bia:[1155,1164,1165,1244,1245,1246,1247,1248,1249,1250,1251,1254],bias_initi:[1244,1245,1246,1247,1248,1249,1250,1251,1254],bilinear:[1040,1041],bilinear_resampl:[159,314,437,573,736,852,1040],bilinearli:[1040,1041],binari:[1168,1169,1186,1189],binary_cross_entropi:[1146,1168],bit:[478,905,916,1040,1042,1046,1182,1183,1184,1227],bitwis:[1186,1189],bitwise_and:[211,365,483,615,809,1174,1186],bitwise_oper:[0,7,8,66,73,74],block:[1227,1270],bool:[15,18,19,81,82,83,84,853,854,855,873,886,890,894,899,902,904,905,915,929,931,936,937,949,952,956,957,961,968,970,978,983,1003,1005,1019,1020,1021,1024,1027,1028,1029,1030,1031,1032,1033,1035,1047,1050,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1155,1163,1186,1193,1194,1195,1196,1200,1201,1208,1212,1214,1217,1218,1220,1221,1222,1223,1224,1225,1226,1233,1234,1244,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265],both:[84,929,948,1208,1210],bottom:1227,boundari:[81,82,1130,1134],branch:[84,853,854],brittl:84,broadcast:[81,82,929,939,956,985,986,987,994,1047,1050,1057,1061,1064,1137,1139,1140,1141,1142,1143,1144,1145,1186,1189,1195,1196,1201,1208,1210,1214,1217,1218,1224,1225,1226],broadcast_to:[261,667,852,929],build:[1074,1227,1244,1255,1256,1257],build_mod:[1244,1255,1256,1257],builder:[84,1227],built:[855,929,932,1074,1244,1255,1256,1257],busi:84,bypass:1270,cach:[855,871,929,940],cache_fn:[852,929],calcul:[81,82,83,1057,1064,1186,1187,1188,1191,1192,1197,1198,1199,1203,1204,1205,1206],call:[84,855,899,929,993,1001,1018,1024,1028,1074,1118,1119,1122,1126,1244,1255,1256,1257,1260,1264,1270,1273],callabl:[81,82,853,854,855,864,865,899,929,940,952,954,983,1018,1070,1071,1072,1073,1074,1118,1122,1123,1124,1126,1127,1155,1166],can:[84,855,897,898,899,929,995,1040,1042,1074,1227,1269,1270,1273],cancel_join_thread:1074,cannot:84,captur:1227,cast:[81,82,125,261,400,534,667,852,905,929,944,1040,1042,1046],catch_except:[929,952],categori:84,caus:84,ceil:[211,365,483,615,809,929,932,1174,1186],cell:[1155,1165,1244,1253],certain:[81,82,929,932,981,982],chain:[81,82,1070,1071,1072,1266,1267],chang:[84,855,929,995,1074,1118,1120,1127,1227,1269],channel:[929,961,1040,1042,1043,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254],check:[15,16,17,18,19,81,82,84,855,894,904,905,910,919,928,929,938,957,970,978,1010,1020,1024,1030,1074,1118,1119,1126,1227,1270],check_nest:[1118,1126],check_shap:[81,82],check_submod_ret:[1256,1257],check_typ:[81,82],choic:[1227,1270],choleski:[740,852,1047],choos:[929,1021,1047,1052,1057,1061,1186,1200,1201,1227],choose_random_framework:100,chosen:[81,82,929,932,1021],chunk:[855,897,898,899,1074],chunk_siz:[855,899,1074],circl:[1057,1058,1059],clark:1227,clear:[84,855,871,1074],clear_framework_stack:100,clear_mem_on_dev:[398,659,852,855],click:1227,clip:[81,82,261,400,667,852,929,942,943,985,987,1227],clip_matrix_norm:[852,929],clip_max:[81,82],clip_min:[81,82],clip_vector_norm:[81,82,852,929],clipped_delta:1074,clone:[81,82,852,855,874,875,876,877,1074],clone_arrai:[852,1074],clone_it:[852,1074],clone_nest:[852,1074],clonedit:[852,1074],cloneditem:[852,1074],clonednest:[852,1074],close:[84,1040,1045,1057,1059,1074,1273],closest:[905,910,1186,1190],closest_valid_dtyp:[852,905],code:[81,82,83,84,448,1227,1228,1269,1270],codebas:[855,897,898,1074,1227,1270,1273],codomain:[1186,1187,1188,1191,1192,1197,1199,1203,1204,1205,1206],colab:1227,collect:[15,81,82,398,400,432,437,441,445,446,448,853,855,905,929,1024,1040,1047,1054,1057,1074,1118,1130,1137,1147,1155,1168,1172,1230,1244,1258,1260],color:[81,82,83,1271,1272],column:[929,971],combin:[81,82,83,1040,1045,1227,1273],combined_batch_s:1074,come:1270,command:1227,comment:84,commit:1273,common:[81,82,84,1057,1061],common_key_chain:[81,82],commun:[84,1227,1270],communuti:84,compar:[81,82,929,931,936,937,1220,1221],comparison_oper:[0,9,10,66,75,76],compat:[929,956,995,1057,1064,1186,1189,1195,1196,1201,1208,1214,1224,1225,1226,1227,1273],compil:[261,400,667,852,1256,1257,1260,1261,1262,1263,1264,1265],compile_on_next_step:[1256,1257,1260,1261,1262,1263,1264,1265],complet:[81,82,84,1047,1052,1074],complex:[1270,1273],compliant:[1186,1200,1201],compon:[929,948],composit:84,comput:[81,82,855,899,929,942,943,949,950,956,984,1024,1026,1027,1028,1029,1031,1032,1033,1035,1037,1040,1043,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1065,1066,1067,1068,1118,1122,1137,1138,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1164,1166,1168,1169,1170,1171,1186,1189,1195,1196,1200,1201,1202,1208,1210,1211,1213,1214,1222,1223],concat:[81,82,855,884,885,886,887,899,929,961,1074],concaten:[81,82,125,261,400,534,667,852,929,961,1074,1227],concatten:[81,82,855,884,885,886,887,899,1074],condit:[400,853,854,929,1021,1118,1126],conditon:[1118,1126],config:[81,82,1074],config_list:1074,configur:[81,82],conflict:84,conform:84,conjunct:1270,connect:[1244,1254,1255],consid:[81,82,1047,1052,1186,1200,1201,1269,1273],consist:[81,82,855,887,1074,1137,1138,1256,1257,1270],constant:[855,864,865,929,945,1074,1118,1122,1168,1169,1170,1171,1172,1173,1174,1235,1236,1240,1243,1256,1257,1258,1259,1270],constant_kwarg:1074,constant_pad:[261,400,534,667,852,929],constitu:[81,82],construct:[929,1012,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269],constructor:[81,82,83,929,933,1266,1267],consum:[855,1074],cont_feat_dim:[1155,1166],contaienr:[81,82],contain:[15,18,19,83,855,874,878,899,905,909,929,930,934,941,942,943,946,956,970,985,987,996,1007,1008,1024,1026,1027,1029,1031,1032,1033,1057,1064,1070,1071,1072,1073,1074,1130,1131,1137,1139,1140,1141,1143,1145,1176,1178,1180,1181,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1214,1217,1218,1222,1223,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],container0:[81,82],container_combine_method:[81,82,83],container_rightmost:[81,82],container_typ:[400,667,852,929],contains_sub_contain:[81,82],contains_sub_structur:[81,82],content:[81,82],context:[400,929,988,1155,1166,1244,1255],context_dim:[1244,1255],contextmanag:[100,101],continu:[84,1074,1270],contract:[81,82,1137,1138],contribut:[1227,1228],contributor:[84,1227],control:1227,conv1d:[190,344,462,788,1146,1155,1227,1244],conv1d_transpos:[190,344,462,788,1146,1155],conv1dtranspos:[1227,1244],conv2d:[190,344,462,598,788,1146,1155,1227,1244],conv2d_transpos:[190,344,462,788,1146,1155],conv2dtranspos:[1227,1244],conv3d:[190,344,462,598,788,1146,1155,1227,1244],conv3d_transpos:[190,344,462,788,1146,1155],conv3dtranspos:[1227,1244],convent:[81,82,1137,1138,1208,1210],conver:[855,871,882,894,901,904,1074],convers:[16,17,18,19,81,82,1074,1227],convert:[15,16,17,18,19,81,82,84,855,882,883,905,911,917,918,929,1004,1015,1016,1040,1042,1046,1047,1053,1074,1118,1120,1127,1227,1234],convert_dtyp:[852,905],convolut:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],cool:84,cooler:84,coordin:[929,986,1057,1058,1059,1061],copi:[81,82,84,448,929,947,1074,1118,1120],copy_arrai:[400,667,852,929],copy_nest:[852,1118],core:[855,892,1227],corner:84,correct:[84,1227,1270],correctli:[81,82,84,1047,1050,1057,1061,1137,1139,1140,1141,1142,1143,1144,1145,1217,1218],correspond:[81,82,929,944,1130,1131,1217,1218],cos:[211,483,615,809,929,961,1057,1058,1068,1174,1186,1270],cosh:[211,483,615,750,809,852,1057,1174,1186],cosin:[1057,1058,1063,1186,1187,1191,1192],cost:[1024,1026,1027,1029,1031,1032,1033,1070,1071,1072,1073],cost_fn:[1070,1073],could:1273,count:[81,82,1074,1137,1142,1144,1215,1216,1224,1225,1226],cours:84,cprint:1271,cpu:[81,82,84,855,892,894,900,901,904,929,932,935,963,964,971,981,982,990,991,997,998,1023,1074,1130,1131,1132,1133,1134,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1269,1270],creat:[81,82,855,864,865,929,932,935,962,963,964,971,981,982,990,991,997,998,1014,1023,1024,1037,1074,1130,1131,1132,1133,1134,1176,1177,1178,1179,1181,1227,1228,1233,1234,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1273],create_if_abs:[81,82],create_vari:1235,creation:[81,82,83,84,1174],creation_funct:[472,473,474,475,476,477,1176,1177,1178,1179,1180,1181],crop:[1040,1044],crop_siz:[1040,1044],cross:[261,667,852,929,1168,1169,1170,1171],cross_entropi:[1146,1168],cuda:[81,82,855,864,883,900,929,932,935,963,964,971,981,982,990,991,997,998,1023,1074,1130,1131,1132,1133,1134,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267],cumprod:[125,261,400,667,852,929],cumsum:[667,852,929],cumul:[929,949,950],current:[81,82,83,84,855,864,888,889,891,895,905,911,919,928,929,951,965,973,977,989,992,1074,1118,1119,1126,1227,1273],current_framework:100,current_framework_str:[400,667,852,929,1074],cutoff_at_depth:[81,82],cutoff_at_height:[81,82],d_in:[1155,1156,1157,1158,1159,1160,1161],d_out:[1155,1156,1157,1158,1159,1160,1161],da_can_termin:1074,da_dim_s:[855,1074],da_direct:1074,da_tune_step:[855,1074],dai:[84,1273],daniel:1227,data:[81,82,83,84,855,857,858,859,860,861,862,867,868,869,883,905,909,910,911,915,916,917,918,919,920,921,928,929,932,935,956,962,971,978,991,995,1006,1010,1023,1024,1030,1038,1057,1064,1074,1155,1164,1174,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1210,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226,1227],data_format:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],data_type_funct:[478,480,481,1182,1183,1184],dataset:[81,82],datatyp:[81,82,905,910,920,921],dcdw:[1024,1026,1027,1029,1031,1032],debug_mod:85,debug_mode_in:[85,88],debugg:[86,87,88,89,90],decai:[1024,1031,1032,1260,1262,1263],decay_lambda:[1024,1031,1032,1260,1262,1263],decid:[81,82,1273],decompos:[1047,1048,1052],decomposit:[1047,1048,1052,1208,1212],decrement:[929,974],dedic:[1024,1038,1233,1234],deep:[81,82,1227],deep_copi:[81,82],deeper:[855,877,881,887,1074,1118,1127,1227],deepli:[1118,1120],def:[84,101,207,361,479,611,805,856,863,866,906,907,908,1025,1074,1078,1085,1227,1236,1239,1242,1269,1270,1273],default_dev:84,default_devic:[852,855],default_dtyp:[84,852,905],default_float_dtyp:[852,905],default_int_dtyp:[852,905],default_key_color:[81,82,83],default_nod:[852,1074],default_rng:448,default_v:[929,952],defaultdevic:[855,856],defaultdtyp:[905,906],defaultfloatdtyp:[905,907],defaultintdtyp:[905,908],defin:[84,929,948,990,1023,1130,1132],definit:84,degre:[1057,1068],del:1074,delai:84,delet:84,delta:[1024,1026,1074],delta_dim_s:1074,delta_percent_mem:1074,delta_sf:1074,delta_util:1074,demo:1227,denomin:[929,960,967,1000,1007,1008,1172,1173,1258,1259],denot:84,dens:[1244,1254],depend:[929,1021,1186,1187,1188,1191,1192,1197,1198,1199,1203,1204,1206,1208,1212,1220,1221,1227],depth:[81,82,400,424,855,877,881,887,929,969,990,1074,1118,1127,1256,1257],depth_cutoff:[81,82],depthwis:[1155,1162,1244,1251],depthwise_conv2d:[190,344,462,598,788,1146,1155],depthwiseconv2d:[1227,1244],deriv:[1024,1026,1027,1029,1031,1032,1033,1118,1120,1127,1176,1179,1227,1256,1260,1264,1266],descend:[1208,1212,1220,1221],descent:[1024,1029,1260,1265],describ:[81,82,1137,1138],descript:[1208,1214],design:[1227,1228],desir:[81,82,855,900,905,909,929,932,935,971,972,991,1023,1040,1045,1074,1137,1139,1140,1141,1143,1145],desired_aspect_ratio:[437,440,1040,1045],desired_percent_increas:1074,detail:1273,detect:[81,82,1118,1119,1126],detect_key_diff:[81,82],detect_shape_diff:[81,82],detect_value_diff:[81,82],determin:[81,82,855,890,892,893,902,905,909,910,916,919,920,921,928,929,931,932,935,936,937,970,973,977,978,1010,1020,1024,1030,1057,1064,1070,1071,1072,1073,1074,1155,1166,1186,1187,1188,1189,1191,1192,1193,1194,1197,1199,1203,1204,1205,1208,1209,1210,1211,1214,1224,1225,1226],dev:[81,82,83,84,118,255,398,400,401,403,413,414,415,422,423,424,425,426,431,448,449,472,475,527,659,852,855,858,859,861,862,864,865,868,869,871,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,894,895,896,897,898,899,900,901,904,929,932,935,963,964,971,981,982,990,991,997,998,1023,1024,1039,1130,1131,1132,1133,1134,1176,1179,1233,1234,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267],dev_clon:[81,82,852,855],dev_clone_arrai:[852,855],dev_clone_it:[852,855],dev_clone_nest:[852,855],dev_dist:[81,82,852,855],dev_dist_arrai:[852,855],dev_dist_it:[852,855],dev_dist_nest:[852,855],dev_from_str:[84,118,255,398,527,659,852,855],dev_mapp:855,dev_str:[81,82],dev_to_str:[118,255,398,527,659,852,855],dev_unifi:[852,855],dev_unify_arrai:[852,855],dev_unify_it:[852,855],dev_unify_nest:[852,855],dev_util:[852,855],devclonedit:[852,855],devcloneditem:[852,855],devclonednest:[852,855],devdistit:[852,855],devdistitem:[852,855],devdistnest:[852,855],develop:[84,1227,1270,1273],deviat:[81,82,1130,1133,1137,1143,1172,1173,1258,1259],devic:[21,29,81,82,84,399,400,412,472,473,474,477,852,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,929,932,935,962,963,964,971,981,982,990,991,997,998,1023,1024,1039,1130,1131,1132,1133,1134,1176,1177,1178,1179,1180,1181,1227,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267],devmanag:[855,863],devmapp:[852,855,865],devmappermultiproc:[852,855],diag:[1208,1212],diagon:[234,379,506,638,832,929,971,1174,1176,1180,1208,1213],dict:[15,16,17,18,19,81,82,83,855,857,860,864,865,867,877,878,879,880,881,929,953,954,955,983,1070,1071,1072,1074,1118,1120,1121,1122,1125,1127,1233,1234],dict_in:[81,82,83],dictat:84,dictionari:[81,82,83],diff:[81,82],diff_kei:[81,82],differ:[81,82,83,84,855,874,875,878,879,1047,1052,1074,1155,1164,1182,1183,1227,1270,1273],differenti:[1227,1270],dilat:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],dim:[81,82,929,990,1040,1041,1045,1074,1208,1212,1244,1255],dim_siz:[81,82,855,1074],dimens:[81,82,83,855,886,929,939,944,948,953,954,955,958,961,968,980,990,994,995,1005,1006,1009,1017,1019,1040,1044,1047,1050,1070,1071,1072,1073,1074,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1165,1168,1170,1171,1176,1180,1208,1209,1210,1212,1214,1215,1216,1217,1218,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251,1254,1255],dimension:[81,82,448,929,1005,1006,1208,1210,1212,1214,1217,1218,1224,1225,1226],direct:1074,directli:[84,1118,1127,1270,1273],directori:[929,1002,1013],discord:84,discret:[1168,1170],discuss:84,disk:[81,82,1040,1042],distanc:[929,932],distribut:[81,82,855,874,878,879,880,881,1074,1130,1131,1132,1133,1134,1155,1163,1244,1252,1256,1257],distribute_nest:[852,1074],distributedarrai:[81,82],distrubt:[1168,1170],dive:[1227,1270],divid:[81,82,852,929,1005,1007,1057],dividend:[1057,1064],divis:[929,960,967,1000,1007,1008,1024,1026,1027,1031,1057,1064,1260,1261,1262],divisor:[1024,1026,1027,1031,1057,1064,1260,1261,1262],doc:1227,docstr:84,document:84,doe:[81,82,84,929,932,1005,1269],doesn:[1047,1052,1227],doing:84,domain:[1057,1058,1186,1187,1188,1191,1192,1197,1199,1203,1204,1205,1206],don:[84,1227],done:84,door:1273,dot:[1047,1049,1155,1166,1167,1244,1255],down:1269,downscal:[929,942,943],drag:[1227,1273],draw:[1130,1131,1133,1134],drawn:[1130,1131,1132,1133,1134],drop:[1227,1273],dropout:[1146,1155,1227,1244,1255],dropout_r:[1244,1255],ds_tune_step:855,dtype:[81,82,84,125,261,400,401,403,404,412,415,431,472,473,474,475,477,478,480,481,534,667,852,909,910,911,912,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,932,935,962,971,990,991,1023,1176,1177,1178,1179,1181,1182,1183,1184,1217,1218],dtype_bit:[125,261,400,534,667,852,905],dtype_from_str:[84,125,261,400,534,667,852,905],dtype_in:[400,409,410,411,905,911,916,917,918,919,920,921,928],dtype_to_str:[125,261,400,534,667,852,905],duplic:[81,82,84],dure:[81,82,84,853,854,929,1018,1024,1026,1027,1031,1070,1071,1072,1073,1208,1210,1256,1257,1260,1261,1262,1264],dynam:[84,400,405,853,854],each:[81,82,83,84,855,864,865,874,875,876,877,878,879,880,886,898,899,929,930,931,945,956,994,1005,1009,1012,1022,1024,1027,1029,1031,1032,1033,1040,1043,1057,1059,1064,1066,1067,1074,1118,1122,1130,1131,1137,1138,1155,1156,1157,1158,1159,1160,1161,1162,1163,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1212,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1270],eager:1270,easi:1273,easili:1227,econom:1273,ecosystem:1227,edg:[929,941,945,1022],effect:[1024,1033],effective_grad:[1024,1033],effici:1273,einop:[81,82,929,953,954,955],einops_rearrang:[81,82,852,929],einops_reduc:[81,82,852,929],einops_repeat:[81,82,852,929],einstein:[81,82,1137,1138],einsum:[81,82,176,332,450,588,768,852,1137],either:[81,82,84,929,952,983,986,988,1070,1071,1072,1073,1074,1186,1197,1199,1203,1208,1210,1244,1255,1256,1257,1270],eleg:1074,element:[81,82,448,855,876,880,886,905,909,929,930,932,934,936,937,941,942,943,949,950,956,959,960,971,972,985,987,994,996,1005,1016,1021,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1137,1138,1140,1142,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1163,1176,1180,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1215,1216,1222,1223,1224,1225,1226,1244,1252],elementwis:[81,82,1174],elementwise_affin:[1258,1259],elementwise_funct:[1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],elemtn:[1130,1131],elif:1074,els:[84,929,938,952,957,1074],elsewher:[929,1021],emphas:1227,empti:[81,82,200,354,472,604,798,1047,1052,1074,1174,1176,1224,1225,1226],enabl:[81,82,83,84,1227],encapsul:[1182,1184],encod:[929,961,1040,1042],end:[929,932,1227,1270],engag:84,ensur:84,entir:[81,82,855,899,1074,1224,1225,1226,1227,1244,1253],entri:[81,82,929,981,982,1005,1006],entropi:[1168,1169,1170,1171],enumer:1074,environ:1227,eps:[478,1182,1183],epsilon:[1024,1026,1027,1031,1168,1169,1170,1171,1172,1173,1258,1259,1260,1261,1262],equal:[81,82,211,483,615,809,852,929,931,936,937,945,1005,1022,1057,1068,1130,1134,1186,1193,1208,1209,1220,1221],equality_matrix:[929,931],equat:[81,82,1137,1138],equival:[929,932,1057,1068,1186,1200,1201,1208,1214],erf:[446,750,852,1057],error:[81,82,84,855,929,1006,1057,1065,1074,1147,1148,1256,1257,1260,1264],etc:[81,82,84,855,900,929,932,935,963,964,971,981,982,990,991,997,998,1023,1074,1130,1131,1132,1133,1134,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1273],euclidean:[1208,1214],euler:1175,evalu:[81,82,929,986,1118,1119,1126,1186,1197,1198,1199,1202,1224,1225,1226],even:[84,1273],evenli:[81,82,929,932,981,982,1005],everi:[84,929,931,1273],exact:[81,82],exampl:[84,853,854,929,941,1009,1047,1052,1227,1269,1270,1273],example_input:[400,405,853,854],exc_tb:1074,exc_typ:1074,exc_val:1074,exce:[929,987],except:[81,82,85,88,929,932,938,944,952,1018,1074,1224,1225,1226],excess_s:1074,excit:[1227,1270],exclud:[100,102,929,932,1130,1134],exclus:[81,82,400,407,420,432,434,929,949,978,1024,1030,1130,1132],execut:[84,929,1018,1270],execute_with_gradi:[156,309,432,568,730,852,1024,1227,1269],exist:[81,82,852,929,952,1074,1227,1260,1264,1273],exp:[750,852,1057],expand:[81,82,929,958,961],expand_dim:[81,82,261,667,852,929,1074],expect:[929,933],explain:[84,1270],explicitli:[84,1244,1253,1255,1256,1257,1270],expon:[929,1008],exponenti:[1057,1065,1066],expos:[929,935,946],express:[929,986,1186,1191,1203],exsit:[81,82],extend:84,extens:84,extra:[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,81,82,83,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1227],eye:[1047,1049],fabian:1227,fabio:1227,factor:[855,864,897,898,899,1024,1026,1027,1031,1032,1074,1155,1156,1157,1158,1159,1160,1161,1162,1208,1212,1244,1245,1246,1247,1248,1249,1250,1251,1260,1261,1262,1263],fail:84,falck:1227,fall:[1256,1257,1260,1264],fallback_to_non_compil:[1256,1257,1260,1264],fals:[15,18,19,81,82,83,100,107,108,109,110,111,398,400,407,408,420,427,430,432,433,434,441,442,855,873,886,894,899,904,905,912,913,914,915,929,931,949,952,957,961,968,978,983,1003,1005,1019,1021,1024,1027,1028,1029,1030,1031,1032,1033,1047,1050,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1137,1139,1140,1141,1142,1143,1144,1145,1186,1193,1194,1200,1201,1208,1214,1217,1218,1220,1221,1222,1223,1224,1225,1226,1233,1234,1256,1257,1260,1261,1262,1263,1264,1265],fan_in:1235,fan_mod:1235,fan_out:1235,far:[1118,1119,1126,1269],faster:[853,854],favourit:[1227,1269],feasibl:1273,feat_dim:[1155,1166,1167],fed:[855,899,1074],feed:[855,899,1074],few:84,field:1273,file:[81,82,84,929,1002,1013,1256,1257],filepath:[81,82],fill:[81,82,929,962,991,1130,1132,1176,1177,1178,1179,1181],fill_valu:[400,412,929,962],filter:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251,1273],filter_s:[1244,1245,1246],filter_shap:[1244,1247,1248,1249,1250,1251],find:[81,82,84,1273],find_sub_contain:[81,82],find_sub_structur:[81,82],finfo:[206,207,360,361,478,479,610,611,804,805,1174,1182],finish:[1227,1273],finit:[1186,1193],first:[81,82,84,448,853,854,855,886,929,936,944,948,956,981,982,1009,1011,1024,1028,1070,1071,1072,1073,1074,1118,1119,1126,1130,1136,1137,1142,1144,1186,1189,1195,1196,1201,1208,1209,1210,1212,1217,1218,1244,1255,1256,1257,1260,1264,1270,1273],firstlayersiren:[1227,1235],firstli:[1270,1273],fist:[855,899,1074],fit:[81,82,398,400,432,437,441,445,446,448,929,994,1040,1045],fix:84,fkt:1273,flag:[81,82,84,1024,1030],flat:[81,82,929,994,997],flat_list:[81,82],flatten:[81,82,929,961,994,1137,1139,1140,1141,1143,1145,1208,1214,1217,1218],flatten_key_chain:[81,82,1256,1257],flexibl:[1227,1270],flip:[81,82,241,385,513,645,839,1174,1215],float32:[84,400,415,905,909,917,918,929,932,935,971,991,1023],float_dtyp:[905,913,923],float_img_to_uint8_img:[852,1040],floor:[261,400,667,852,929,960,1074],floormod:[261,400,667,852,929],fluid:1273,folder:[84,1227],follow:[81,82,84,855,899,929,974,975,976,1007,1008,1024,1027,1029,1031,1032,1033,1074,1118,1122,1127,1155,1166,1167,1182,1184,1208,1214,1227,1244,1254,1260,1264],followng:[1182,1183],fomaml_step:[852,1070],forget:[1024,1026,1027,1031,1260,1261,1262],fork:[929,988,1227,1228],forkserv:[929,988,1074],form:[15,16,17,18,19,81,82,929,935,1024,1027,1029,1031,1032,1033,1118,1120,1127,1155,1176,1180,1208,1209],format:[81,82,84,855,873,905,909,911,915,929,932,935,971,991,1023,1074,1137,1138,1227,1269,1270],format_fn:[81,82],format_key_chain:[81,82],forward:[1256,1257,1260,1264,1269],found:[81,82,83],fourier:[929,961],fourier_encod:[852,929],framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,24,25,26,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,68,70,72,74,76,78,80,81,82,83,84,86,87,88,89,90,101,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,201,202,203,204,205,207,208,209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,240,242,244,247,249,251,252,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,324,325,328,329,330,331,333,334,335,336,337,338,339,340,343,345,346,347,348,349,350,351,355,356,357,358,359,361,362,363,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,383,384,386,388,391,394,395,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,438,439,440,442,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,473,474,475,476,477,479,480,481,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,507,508,509,510,511,512,514,516,519,521,523,524,528,529,530,531,532,533,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,605,606,607,608,609,611,612,613,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,639,640,641,642,643,644,646,648,651,653,655,656,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,731,732,733,734,735,737,738,739,741,742,743,744,745,746,748,749,751,752,753,754,755,756,757,758,759,760,762,763,764,765,766,767,769,770,771,772,773,774,775,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,799,800,801,802,803,805,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,833,834,835,836,837,838,840,842,845,847,849,850,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1173,1177,1178,1179,1180,1181,1183,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1211,1212,1213,1214,1216,1218,1221,1222,1223,1225,1226,1227,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1272,1273],framework_handl:[100,102,103,104,105,106,107,108,109,110,111,112],framework_str:1074,framewrk:[929,988],free:84,freed:84,freeli:84,frequenc:[929,961],from:[81,82,83,84,855,864,865,899,905,911,929,952,963,964,971,995,1006,1014,1021,1024,1027,1031,1040,1044,1047,1052,1070,1071,1072,1073,1074,1118,1120,1127,1130,1131,1132,1133,1134,1137,1142,1144,1155,1163,1166,1176,1179,1186,1205,1208,1209,1215,1216,1222,1223,1224,1225,1226,1227,1233,1234,1244,1252,1255,1260,1264,1269,1270],from_cal:[1256,1257],from_disk_as_hdf5:[81,82],from_disk_as_json:[81,82],from_disk_as_pickl:[81,82],from_flat_list:[81,82],from_numpi:[81,82],frustrat:84,full:[84,125,261,400,534,667,852,929,1047,1052,1182,1183,1227],full_matric:[1208,1212],fulli:[84,1227,1244,1254,1255,1269],func:[81,82,400,405,432,433,853,854,855,899,929,940,1024,1028,1074],further:[84,1273],furthermor:1273,futur:1273,gain:1235,gamma:[1172,1173],gather:[81,82,125,261,400,534,667,852,929,964],gather_nd:[81,82,125,261,400,534,667,852,929],gauss:[1057,1065],gaussian:[1147,1148],geglu:[1227,1230],gelu:[342,459,777,1146,1147,1227,1230],gener:[31,49,81,82,84,398,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,448,852,853,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1030,1130,1132,1134,1135,1227,1260,1264],geometr:[929,961],get:[81,82,84,855,864,865,873,888,889,894,898,901,904,905,915,916,929,933,965,966,967,993,1074,1182,1183,1184,1227,1244,1253,1273],get_all_arrays_in_memori:[852,929],get_all_arrays_on_dev:[852,855],get_framework:100,get_initial_st:[1244,1253],get_min_bas:[852,929],get_min_denomin:[852,929],get_mod_kei:[1256,1257],get_num_dim:[400,667,852,929],get_referrers_recurs:[852,929],getfullargspec:1074,gist:1227,give:[84,929,995,1270],given:[81,82,84,855,888,894,897,898,899,901,904,905,909,929,932,935,941,949,950,964,981,982,991,994,997,998,1005,1012,1017,1019,1023,1024,1026,1027,1029,1031,1032,1033,1047,1049,1053,1057,1058,1074,1118,1123,1124,1130,1133,1134,1136,1137,1140,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1176,1177,1215,1216,1233,1234,1273],global:[81,82,83,855,864,865,872,897,898,899,905,912,913,914,929,951,966,967,993,999,1000,1001,1007,1008,1024,1039,1074,1172,1173,1258,1259],global_framework:[100,104],global_norm:[81,82],glorotuniform:[1227,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254],good:84,googl:1227,got:[84,1227],gpu0:84,gpu2:84,gpu:[855,890,893,1074],gpu_is_avail:[398,852,855,1074],grad:[1227,1260,1264,1269],gradient:[33,51,81,82,433,434,435,436,852,855,899,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1070,1071,1072,1073,1227,1260,1261,1262,1263,1264,1265,1269,1273],gradient_descent_upd:[852,1024,1070,1071,1072,1073],gradient_imag:[159,314,437,573,736,852,1040],gradienttrack:[1024,1025],graph:[1024,1027,1029,1031,1032,1033,1256,1257],greater:[81,82,929,932,959,1006,1130,1134],green:[81,82,83,1271,1272],grid:[929,986],group:[1040,1045],guid:[84,1227,1228,1273],gym:1227,h5_file_s:[81,82],h5_obj_or_filepath:[81,82],h5py:[81,82],had:1273,half:[929,932,1074,1130,1134],hand:1227,handl:[81,82,83,84,853,854,855,871,873,882,883,894,901,904,1024,1027,1029,1031,1032,1033,1074,1260,1261,1262,1263,1264,1265],happen:84,has:[81,82,84,929,1009,1047,1052,1057,1060,1208,1210,1211],has_kei:[81,82],has_key_chain:[81,82],has_nan:[81,82,852,929],hasattr:1074,have:[81,82,84,929,944,948,953,954,955,956,962,1009,1024,1030,1038,1057,1064,1074,1176,1177,1178,1179,1180,1181,1182,1183,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1210,1212,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226,1227,1269,1270],haven:84,hdf5:[81,82,1256,1257],head:[1155,1166,1244,1255],head_dim:[1244,1255],height:[1040,1045],height_cutoff:[81,82],help:[84,100,398,399,478,855,867,868,869,870,905,1024,1227,1235,1237,1238,1240,1241,1243],here:[84,1227],hidden:[1155,1165,1244,1253],hierarch:[929,946],hierarchi:[81,82],high:[81,82,448,1130,1132,1134],higher:[1024,1027,1029,1031,1032,1033,1208,1212],highest:[1130,1132],highest_util:1074,highest_util_nod:1074,highli:1227,highlight:1273,hint:84,hkt:1273,hold:[905,909,929,932,935,997,998],host:1227,hot:[929,990],how:[1227,1244,1255,1256,1257,1270,1273],howev:[84,1270],http:1273,hyperbol:[1057,1062,1063,1069,1147,1154,1186,1187,1188,1192,1204,1206],hypothet:[84,1273],icon:1227,idea:1227,ident:[81,82,84,125,261,400,534,667,852,929],identical_array_shap:[81,82],identical_config:[81,82],identical_structur:[81,82],ieee:[1175,1182,1183,1186,1205],if_exist:[81,82],ignor:[81,82,1260,1264],ignore_key_error:[81,82],ignore_miss:[1260,1264],ignore_non:[81,82],iii:84,iinfo:[206,360,478,610,804,1174,1182],imag:[35,53,438,439,440,852,929,980,1041,1042,1043,1044,1045,1046,1155,1156,1157,1158,1159,1161,1162,1227,1273],image_dim:[1040,1044],imkkhk:1273,immedi:[1227,1270,1273],implement:[84,1186,1187,1188,1191,1192,1197,1198,1199,1203,1204,1206,1220,1221,1227,1270,1273],in_featur:[1155,1164],inadvert:84,includ:[81,82,84,929,932,970,1007,1008,1020,1118,1119,1130,1134,1208,1214,1224,1225,1226,1244,1254,1255,1258,1259,1269],include_deriv:[1118,1120,1127],include_empti:[81,82],include_inf:[81,82,929,970,1020],include_nest:[1118,1119],include_self:[81,82],inclus:[84,1130,1132],incom:[1155,1164],increas:[855,877,881,887,929,945,958,1022,1074,1118,1127],increasingli:1273,increment:[929,975,1074],inde:1227,indent:[81,82,83],independ:[1130,1131],index:[81,82,400,448,929,934,963,964,986,1006,1009,1118,1121,1123,1124,1125,1128,1217,1218,1220,1221],index_nest:[852,1118],indic:[81,82,400,413,414,424,425,426,929,934,963,964,972,990,997,998,1118,1119,1121,1123,1124,1125,1126,1128,1129,1130,1131,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1208,1214,1217,1218,1220,1221,1244,1245,1246,1247,1248,1249,1250,1251,1256,1257],indices_wher:[125,261,400,667,852,929],indistinguish:[1186,1205],inevit:1273,inf:[81,82,929,970,979,1020,1057,1060,1208,1214],infer:[853,854,929,968,971,995,1003,1040,1044,1047,1052,1176,1179,1222,1223,1270,1273],infin:[929,979,1186,1187,1188,1190,1191,1192,1193,1197,1199,1203,1204,1205,1206,1208,1214,1224,1225,1226],infinit:[1186,1205],inform:[1024,1035,1182,1183,1184],init_c:[1155,1165],init_h:[1155,1165],init_on_first_step:[1260,1264],initi:[81,82,83,84,100,398,399,478,855,867,868,869,870,905,1024,1074,1155,1165,1227,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1260,1264],initialz:[1256,1257],inner:[1070,1071,1072,1073,1208,1210],inner_batch_fn:[1070,1071,1072],inner_batch_shap:[1155,1164],inner_cost_fn:[1070,1071,1072],inner_grad_step:[1070,1071,1072,1073],inner_learning_r:[1070,1071,1072,1073],inner_optimization_step:[1070,1071,1072,1073],inner_v:[1070,1071,1072],innermost:[1176,1180,1208,1209],inp:1074,inplac:[81,82,929,938,973,977,1010,1024,1027,1029,1031,1032,1033,1233,1234,1260,1261,1262,1263,1264,1265],inplace_arrays_support:[400,852,929],inplace_decr:[125,261,400,534,667,852,929],inplace_incr:[125,261,400,534,667,852,929],inplace_oper:[0,11,12,66,77,78],inplace_upd:[81,82,125,261,400,534,667,852,929,1233,1234],inplace_variables_support:[400,852,929],input:[15,18,19,81,82,83,84,853,854,855,864,865,872,873,874,877,878,881,887,899,900,905,909,910,912,913,914,915,916,920,921,929,930,931,934,936,937,938,939,941,942,943,944,945,947,949,950,952,953,954,955,956,957,958,959,960,961,968,970,971,972,974,975,976,978,979,980,984,985,986,987,994,996,1003,1004,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1022,1024,1028,1030,1035,1039,1040,1041,1042,1043,1044,1046,1047,1050,1052,1054,1055,1056,1057,1060,1062,1063,1064,1068,1069,1070,1071,1072,1073,1074,1130,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1173,1176,1179,1180,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1212,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1258,1259,1270],input_ax:[855,899,1074],input_channel:[1244,1245,1246,1247,1248,1249,1250,1253,1254],input_queu:1074,inputs_split:1074,insert:[929,958,1217,1218],insid:84,inspect:1074,inspir:1273,instal:1227,instanc:[15,16,17,18,19,81,82,84,448,855,864,1074,1233,1234,1266,1267],instead:[81,82,84,448,1137,1139,1140,1141,1142,1143,1144,1145,1273],int32:84,int64:[905,909,929,932,935,971,991,1023],int_dtyp:[905,914,924],integ:[81,82,448,905,921,929,932,959,996,1005,1130,1132,1135,1182,1184,1186,1189,1190,1208,1214,1224,1225,1226],integr:1227,intend:84,inter:1227,interact:1227,interchang:[81,82,929,1011],interest:1227,interfac:[929,935,1270],intermedi:[81,82],intern:[81,82,855,1024,1038,1074,1118,1119,1126,1127,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1266,1267],interpol:[929,980],intersect:[1057,1058],interv:[81,82,929,932,941,981,982,1057,1059,1130,1134,1224,1225,1226],introduc:1273,inv:[740,852,1047,1273],invalid:[1224,1225,1226],invalid_dtyp:[852,905],invers:[1047,1049,1051,1057,1058,1059,1060,1062,1186,1187,1188,1273],invert:[1047,1049,1051],invest:1273,investig:84,invoc:[853,854],irrespect:1227,is_al:1074,is_arrai:[125,261,400,534,667,852,929,1074],is_float_dtyp:[852,905],is_int_dtyp:[852,905],is_mean:1074,is_sum:1074,is_vari:[156,309,432,568,730,852,1024],isfinit:[211,365,483,615,809,1174,1186],isinf:[261,534,667,852,929],isinst:1074,isnan:[211,365,483,615,809,1174,1186],isnumer:1074,issu:[1227,1228],issue_numb:84,item:[15,19,81,82,855,864,865,867,874,876,878,880,886,905,912,929,946,969,1007,1008,1074,1118,1122,1123,1124,1127,1128,1129,1227,1256,1257,1269],iter:[15,16,17,18,19,81,82,83,853,854,855,858,859,861,862,864,865,868,869,876,878,879,880,881,886,899,929,931,939,944,945,971,986,991,994,995,998,1003,1005,1009,1012,1017,1022,1074,1118,1119,1120,1122,1126,1127],iterbal:[855,876,880,886,1074],its:[448,855,899,929,971,995,1011,1017,1074,1208,1210,1227],itself:[1118,1127],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,100,102,103,104,105,106,107,108,109,110,111,112,114,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,472,473,474,475,476,477,478,480,481,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1271,1272],ivy_backend:[81,82],ivy_bay:1273,ivy_test:84,ivyfcmodel:1269,ivyh:[81,82,83],ivymodul:[187,785],jame:1227,jax:[84,1024,1030,1227,1273],jax_concat:1227,jnp:1227,join:[81,82,929,944,1009,1074],journal:1227,json:[81,82],json_filepath:[81,82],jsonabl:[81,82],just:[84,1227,1244,1253,1273],kaimingnorm:[1235,1239],kalman:1273,kalman_filt:1273,kalman_filter_step:1273,kalman_filter_upd:1273,keep:[81,82,855,900,929,1019,1074,1227,1228,1273],keep_inner_v:[1070,1071,1072],keep_non:[81,82],keep_orig:[81,82],keep_outer_v:[1070,1071,1072],keepdim:[81,82,400,430,441,442,929,1019,1047,1050,1137,1139,1140,1141,1142,1143,1144,1145,1208,1214,1217,1218,1222,1223,1224,1225,1226],kei:[15,16,17,81,82,83,84,855,867,929,946,1070,1071,1072,1074,1118,1121,1125,1155,1166,1167,1227,1233,1234,1244,1255,1260,1264],kept:[81,82,83,1070,1071,1072],kera:1273,kernel:[1155,1165],key1:[81,82],key2:[81,82],key3:[81,82],key_chain:[81,82],key_chains_contain:[81,82],key_length_limit:[81,82,83],key_slic:[81,82],keychain:[81,82],keychain_map:[81,82],keyword:[15,16,17,81,82,83,855,864,865,877,881,887,929,933,953,954,955,983,1074,1118,1122,1256,1257],keyword_color_dict:[81,82,83],kind:[1182,1183,1184,1273],kwarg:[15,16,17,81,82,83,100,104,855,864,877,881,887,929,983,1074,1233,1234,1256,1257],kwarg_stateful_idx:[1256,1257],kwargs_clon:1074,kwargs_dist:1074,kwargs_uni:1074,label:[84,1168,1169,1170,1171],lamb:[1024,1031,1227,1260],lamb_upd:[852,1024],lambda:[1074,1260,1263,1265,1269],lar:[1024,1031,1032,1227,1260],larger:[929,941,1182,1183],largest:[81,82,929,959,1182,1183,1184],lars_upd:[852,1024],last:[81,82,929,932,948,980,1005,1009,1047,1050,1137,1142,1144,1147,1152,1155,1165,1208,1209,1212,1215,1216,1220,1221,1224,1225,1226,1244,1254],later:[81,82,929,940],latest:[1244,1253],layer:[1024,1027,1029,1031,1033,1146,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1173,1227,1235,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1273],layer_norm:[1146,1172],layernorm:[1227,1258],layerwis:[1024,1032,1260,1263],lead:[81,82,83],leading_shap:[81,82],leaf:[15,18,19,81,82,1118,1119,1126],leaf_keys_onli:[81,82],leafwis:[81,82],leaki:[1147,1148,1149],leaky_relu:[777,1146,1147],learn:[1024,1027,1029,1031,1032,1033,1047,1052,1070,1071,1072,1073,1130,1136,1222,1223,1227,1260,1261,1262,1263,1264,1265,1270,1273],learnabl:[1172,1173,1258,1259],least:[84,1208,1210],leav:[15,18,19,81,82,1118,1119,1120,1126,1127],left:[81,82,84,1047,1050,1137,1139,1140,1141,1142,1143,1144,1145,1217,1218,1227],leftmost:[81,82],len:1074,length:[81,82,83,929,932,995,1006,1017],lenton2021ivi:1227,lenton:1227,less:[81,82,84,211,365,483,615,809,1074,1130,1134,1174,1186,1187,1190,1197,1199,1205,1208,1214],less_equ:[211,483,615,809,1174,1186],less_util_node_str:1074,let:[1270,1273],level:1227,librari:[1186,1200,1201,1227,1269,1273],lightweight:1227,like:[84,1024,1030,1130,1134,1227,1269,1270,1273],likewis:84,limit:[81,82,83,84,929,941,942,943,1182,1183,1184],linalg:[37,55,852,1048,1049,1050,1051,1052,1053,1227],line:84,linear0:[1227,1269],linear1:1227,linear2:1269,linear:[929,961,980,1047,1146,1147,1148,1149,1150,1155,1163,1174,1227,1244,1245,1246,1247,1248,1249,1250,1251,1269],linear_algebra:[441,442,443,444,1208,1209,1210,1211,1212,1213,1214],linear_resampl:[125,261,400,534,667,852,929],linearli:[929,961],link:[84,1227],linspac:[125,261,400,534,667,852,929,932],list:[15,18,19,81,82,472,473,474,477,855,864,865,874,875,877,878,879,881,884,885,899,929,932,935,937,986,1004,1005,1014,1019,1070,1071,1072,1074,1118,1119,1120,1122,1126,1127,1155,1156,1157,1158,1159,1160,1161,1162,1176,1177,1178,1181,1215,1216,1224,1225,1226,1227,1228,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251],list_join:[81,82,83],list_stack:[81,82],liter:[1208,1214],littl:1270,load:[81,82],loaded_kwarg:1074,loader:1227,local:84,local_set:[929,969],locat:[84,929,979,1130,1131],log10:[211,483,615,809,1174,1186],log1p:[211,483,615,809,1174,1186],log2:[211,483,615,809,1174,1186],log:[750,852,929,982,1057,1074,1168,1169,1170,1171,1186,1198,1208,1211],logarithm:[1057,1067,1186,1197,1198,1199,1208,1211],logdet:[1208,1211],logic:[39,57,852,1055,1056,1186,1200,1201,1224,1225,1226,1227],logical_and:[323,747,852,1054],logical_not:[211,365,483,615,809,1174,1186],logical_or:[211,323,483,615,747,809,852,1054,1174,1186],logit:[1168,1171],logspac:[125,261,400,534,667,852,929],look:[84,1270,1273],loop:[1070,1071,1072,1073],loss:[1146,1169,1170,1171,1227,1269],loss_fn:[1227,1269],lot:1270,low:[81,82,448,1130,1132,1134],lower:[81,82,84,929,985,1130,1134,1176,1180],lower_depth:[1256,1257],lowest:[15,18,19,81,82,1118,1127,1130,1132],lstm:[1155,1165,1227,1244],lstm_updat:[84,1146,1155],machin:[1047,1052,1130,1136,1182,1183,1184,1222,1223,1227,1270,1273],made:84,mai:[929,932,952,956,1186,1196,1200,1201,1220,1221,1227,1270,1273],main:[929,971,1176,1180,1208,1209,1227],mainli:1227,maintain:[84,1220,1221],make:[84,448,855,1074,1227,1270],maml:[1070,1071,1072],maml_step:[852,1070],manag:[855,1074],manhattan:[1208,1214],mani:[81,82,84,929,1005,1227],manipul:1174,manipulation_funct:[1215,1216],manner:[15,18,19,81,82,84,1118,1127],manual:[1118,1119,1126,1273],map:[81,82,83,852,855,864,929,979,1074,1118,1123,1124,1127,1244,1255,1269],map_cont:[81,82],map_nest_at_index:[852,1118],map_nest_at_indic:[852,1118],map_sequ:[81,82],mapper:[855,864,865,1074],mark:84,mask:[1155,1166,1167],master:84,match:[81,82,929,983],match_kwarg:[852,929],math:[41,59,447,852,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1227],mathbb:[1047,1053],mathbf:[1047,1053],mathemat:[1175,1208,1214],matmul:[84,234,261,506,638,832,852,929,1174,1208,1273],matplotlib:1270,matric:[1155,1164,1176,1180,1208,1209],matrix:[81,82,929,931,942,984,1047,1048,1049,1050,1051,1052,1053,1155,1164,1176,1180,1208,1209,1210,1244,1254],matrix_norm:[81,82,163,318,441,577,740,852,1047],matter:1227,max:[81,82,478,929,942,943,954,985,997,998,1074,1137,1139,1182,1183,1184,1260,1262],max_batch_s:[81,82],max_chunk_s:[855,899,1074],max_depth:[81,82,855,859,862,869,877,881,887,929,969,1074,1118,1127],max_dev_dim_step_ratio:855,max_freq:[929,961],max_length:[81,82],max_node_dim_step_ratio:1074,max_norm:[81,82,929,942,943],max_split_factor_step_s:[855,1074],max_trust_ratio:[1024,1031,1260,1262],maxim:[1227,1270,1273],maximis:1227,maximum:[81,82,83,667,852,855,877,881,887,899,929,941,942,943,961,1024,1031,1074,1118,1127,1137,1139,1217,1218],mayb:[15,18,19],mdi:1074,mean:[81,82,448,855,884,885,886,887,899,929,954,1070,1071,1072,1073,1074,1118,1122,1130,1133,1137,1140,1143,1145,1235,1269,1273],measur:[1155,1166,1244,1255],mech:1227,mechan:[1227,1273],medic:1273,member:84,memori:[855,871,894,899,901,904,1074,1155,1165,1227],mention:84,merg:84,merge_with_upstream:84,meshgrid:[261,400,667,852,929],messag:[1271,1272],meta:[43,61,852,1071,1072,1073,1227],method:[81,82,83,84,448,929,935,946,986,997,998,1024,1031,1032,1074,1118,1119,1126,1127,1174,1227,1244,1255,1256,1257,1270],might:[929,952,1273],min:[81,82,248,478,520,652,846,929,954,987,997,998,1007,1047,1052,1074,1137,1141,1174,1182,1183,1184,1208,1214,1222],min_bas:[929,1008],min_denomin:[929,1007],min_dev_dim_s:855,min_node_dim_s:1074,min_sf_tune_step:[855,1074],min_unit_dev_tune_step:855,min_unit_node_tune_step:1074,mind:1227,mini:[1172,1173,1258,1259],minimum:[81,82,667,852,855,905,909,929,932,934,935,941,966,967,999,1000,1007,1008,1074,1137,1141,1222,1223],miss:[1260,1264],ml_framework:[929,932,1047,1052],mod:[929,960],mod_depth:[1256,1257],mod_height:[1256,1257],mod_with_top_mod_key_chain:[1256,1257],mode:[81,82,441,443,853,854,855,884,885,886,887,899,1047,1052,1074,1208,1212,1270],model:[1227,1269],modul:[81,82,83,100,929,988,1074,1227,1228,1230,1231,1232,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1258,1259,1266,1267,1273],moment:[1024,1026,1027,1031,1260,1261,1262],more:[84,929,1009,1074,1208,1210,1215,1216,1227,1270,1273],more_util_node_str:1074,most:[81,82,1047,1052,1227,1273],move:[81,82,84,855,900,1074],much:[84,1227,1273],multi:[448,852,929,988,1155,1166,1244,1255],multi_head_attent:[1146,1155],multi_index_nest:[852,1118],multi_map:[81,82],multi_nod:1074,multidev:[855,866,867,868,887],multidevcontain:[81,82],multidevic:[855,864],multidevit:[852,855,858,861,864,865,869],multidevitem:[852,855,857,860],multidevnest:[852,855,859,862],multiheadattent:[1227,1244],multinod:[1074,1078],multinodecontain:1074,multinodeit:[852,1074],multinodeitem:[852,1074],multinodenest:[852,1074],multinomi:[169,327,448,583,761,852,1130],multipl:[81,82,929,983,1005,1047,1049,1137,1139,1140,1141,1142,1143,1145,1172,1173,1217,1218,1224,1225,1226,1244,1254,1270],multipli:[81,82,929,949,1137,1142],multiprocess:[81,82,83,400,667,852,855,864,929,1074],must:[81,82,83,84,855,884,885,886,887,899,929,932,944,946,948,956,985,987,998,1009,1057,1061,1064,1074,1130,1135,1176,1177,1178,1179,1180,1181,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1210,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1260,1264],mutabl:[1118,1120,1127],mutlidevic:[855,864],mutlinod:1074,mw_tm1:[1024,1027,1031],mx_concat:1227,mxn:[1176,1180,1208,1209],mxnet:[1227,1273],my_func:84,mymodel:1227,name:[84,853,854,1269],name_of_your_branch:84,name_of_your_pr_branch:84,namespac:[84,1270],nan:[81,82,84,929,970,1020,1175,1186,1187,1188,1190,1191,1192,1193,1194,1197,1199,1203,1204,1205,1224,1225,1226],nativ:[15,17,18,19,81,82,84,855,871,873,882,883,894,901,904,905,910,917,918,1074,1227,1228,1233,1234],native_modul:[1233,1234],native_module_class:[1233,1234],nativearrai:[15,18,19,84,855,873,899,900,905,909,915,920,921,929,930,931,932,934,935,936,937,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,963,964,968,970,971,972,979,980,981,982,984,985,986,987,990,991,994,995,996,997,998,1003,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1074,1118,1120,1127,1176,1179,1180,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226],natur:[1057,1067,1186,1198,1208,1211,1273],ncdhw:[1155,1160,1161,1244,1249,1250],nchw:[1155,1158,1159,1162,1244,1247,1248,1251],ncw:[1155,1156,1157,1244,1245,1246],ndarrai:[448,472,473,474,475,476,477,478,480,481,929,1015],ndhwc:[1155,1160,1161,1244,1249,1250],nearest:[929,996],need:[84,929,942,943,1155,1157,1159,1161,1227,1244,1246,1248,1250,1273],neg:[81,82,211,365,483,615,809,1137,1142,1144,1147,1149,1174,1186,1193,1208,1214,1215,1216,1224,1225,1226],negative_slop:1235,neither:1074,nest:[15,16,17,18,19,81,82,83,852,855,877,881,887,929,935,1014,1070,1071,1072,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1256,1257,1260,1261,1262,1263,1264,1265],nested_indices_wher:[852,1118],nested_map:[852,1074,1118],network:[1155,1164,1227,1228,1230,1244,1256,1257,1273],neural:[1155,1227,1230,1244,1269],neural_net:[1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173],never:84,new_node_percent_mem:1074,new_node_util:1074,new_node_utils_kei:1074,new_std:[1172,1173,1258,1259],newli:[84,853,854,929,939,940],newlin:[81,82,83],newshap:[929,939,995],next:[1074,1182,1183,1256,1257,1260,1261,1262,1263,1264,1265],nhwc:[1155,1158,1159,1162,1244,1247,1248,1251],node:[81,82,852,1118,1119,1126],node_clon:1074,node_dist:[852,1074],node_dist_arrai:[852,1074],node_dist_it:[852,1074],node_in:1074,node_mapp:1074,node_str:[852,1074],node_to_str:[852,1074],node_util:[852,1074],nodedistit:[852,1074],nodedistitem:[852,1074],nodedistnest:[852,1074],nodemanag:[1074,1085],nodemapp:[852,1074],nodemappermultiproc:[852,1074],noinspect:[856,906,907,908,1025,1074],non:[81,82,853,854,905,919,1186,1200,1201,1208,1214,1217,1218,1224,1225,1226,1256,1257,1260,1264,1270],none:[81,82,83,84,100,102,105,398,400,401,403,405,412,413,414,415,422,423,424,425,426,427,428,429,431,441,442,448,449,472,473,474,475,477,853,854,855,864,865,871,872,897,898,899,900,905,912,913,914,929,932,935,951,952,957,962,963,964,969,971,973,974,975,976,977,981,982,988,990,991,994,997,998,999,1000,1005,1006,1007,1008,1017,1018,1023,1024,1027,1029,1031,1032,1033,1039,1040,1044,1047,1050,1052,1070,1071,1072,1073,1074,1118,1119,1122,1126,1127,1130,1131,1132,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1157,1159,1161,1164,1165,1166,1167,1172,1173,1176,1177,1178,1179,1181,1182,1183,1184,1208,1214,1215,1216,1217,1218,1222,1223,1224,1225,1226,1233,1234,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],norm:[81,82,929,942,943,1047,1050,1146,1173,1208,1214,1227,1259,1260,1262],normal:[1130,1133,1172,1173,1258,1259],normalized_idx:[1172,1173],normalized_shap:[1258,1259],notat:[81,82,1137,1138],note:[84,1047,1052],noth:[81,82,1270],notimplementederror:1074,now:[81,82,84,855,900,929,930,1074,1227,1244,1255,1256,1257,1269,1270,1273],np_concat:1227,np_finfo:478,ns_tune_step:1074,num:[400,422,423,929,981,982],num_arrai:[81,82],num_arrays_in_memori:[852,929],num_arrays_on_dev:[852,855],num_band:[929,961],num_channel:[1244,1251],num_chunk:1074,num_chunks_floor:1074,num_class:[1130,1131],num_cpu_cor:[852,855],num_gpu:[118,398,852,855,1074],num_head:[1155,1166,1244,1255],num_kei:[1155,1166,1167],num_lay:[1244,1253],num_or_size_split:[81,82,400,427,929,1005],num_output:1074,num_queri:[1155,1166,1167],num_sampl:[400,421,448,449,929,980,1040,1041,1130,1131],num_task:[1070,1071,1072,1073],number:[81,82,83,853,854,855,891,892,893,905,916,920,921,929,932,941,945,958,961,968,971,980,981,982,985,989,994,1005,1012,1016,1020,1022,1070,1071,1072,1073,1074,1130,1131,1135,1137,1139,1140,1141,1143,1145,1155,1166,1175,1182,1183,1184,1186,1190,1208,1211,1212,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1270,1273],numer:[84,929,966,967,999,1000,1007,1008,1057,1064,1186,1190,1193,1194,1195,1200,1201,1202,1208,1210,1217,1218,1235],numhead:[1155,1166],numpi:[81,82,84,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,472,473,474,475,476,477,478,480,481,929,1015,1047,1052,1137,1138,1208,1212,1227,1269,1270,1273],nwc:[1155,1156,1157,1244,1245,1246],obj:[81,82],object:[81,82,83,100,478,855,905,909,929,932,935,1024,1118,1121,1123,1124,1125,1128,1129,1130,1136,1182,1183,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257],object_in:[400,403,929,935],observ:1074,obvious:84,occupi:[929,997,998,1182,1183,1184],occur:[1217,1218],occurr:[1217,1218],off:[929,932,1208,1209],offer:1227,offset:[1172,1173,1208,1209,1213],often:1270,old:[81,82],on_init:[1244,1255,1256,1257],onc:[84,855,899,1074,1130,1131,1227],one:[81,82,84,855,884,885,886,887,899,905,911,929,971,983,990,997,998,1006,1009,1047,1050,1074,1137,1138,1139,1140,1141,1142,1143,1144,1145,1208,1210,1214,1215,1216,1217,1218,1227,1270,1273],one_hot:[125,400,534,667,852,929],onearrai:[929,958],ones:[81,82,200,354,472,604,798,852,929,971,990,1174,1176,1179,1227],ones_lik:[200,354,472,604,798,1174,1176],ongo:84,onli:[81,82,84,448,855,1047,1052,1074,1118,1119,1120,1126,1186,1200,1201,1208,1210,1215,1216,1217,1218,1260,1261,1262,1263,1264,1265,1269,1270],onlin:[84,1227],onto:[855,884,885,900,1074,1118,1122,1127],oom:[855,1074],open:[929,932,1130,1134,1227,1273],opencv:1270,oper:[81,82,84,929,938,953,954,955,981,982,1010,1024,1027,1029,1031,1032,1033,1054,1055,1056,1155,1156,1157,1158,1159,1160,1161,1162,1164],operand:[81,82,1137,1138,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205],oppos:[929,961],optim:[855,1024,1027,1029,1031,1032,1033,1070,1071,1072,1073,1074,1227,1261,1262,1263,1265,1269,1273],optimizer_upd:[852,1024],option:[15,18,19,81,82,83,84,472,473,474,475,477,853,854,855,864,865,873,877,878,879,880,881,884,885,886,887,894,897,898,899,900,904,905,910,915,919,928,929,931,932,934,935,942,943,944,949,951,952,961,962,963,964,968,970,971,978,980,981,982,983,986,988,990,991,994,997,998,1001,1003,1005,1006,1007,1008,1009,1017,1019,1020,1023,1024,1027,1029,1030,1031,1032,1033,1035,1040,1044,1047,1050,1052,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1152,1155,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1181,1208,1214,1215,1216,1217,1218,1222,1223,1224,1225,1226,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1270],ord:[1208,1212,1214],order:[81,82,83,84,1024,1027,1029,1031,1032,1033,1047,1050,1070,1071,1072,1208,1214,1215,1216,1220,1221,1266,1267],ordered_node_util_kei:1074,org:1273,organ:84,origin:[81,82,83,929,995,1023,1047,1050],other:[81,82,84,853,854,929,931,932,971,1024,1028,1130,1134,1227,1269,1270,1273],otherwis:[15,16,17,18,19,81,82,855,872,905,912,913,914,929,938,1017,1018,1021,1024,1030,1035,1039,1070,1071,1072,1074,1137,1139,1140,1141,1143,1145,1186,1193,1194,1208,1214,1217,1218,1224,1225,1226],our:[84,1227,1273],out:[84,448,929,932,1057,1060,1155,1163,1165,1176,1178,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226,1227,1244,1252],out_feat_dim:[1155,1166],out_featur:[1155,1163,1164],out_i:[1186,1193,1194],outdat:1273,outer:[1070,1071,1072,1073],outer_batch_fn:[1070,1071,1072],outer_batch_shap:[1155,1164],outer_cost_fn:[1070,1071,1072],outer_v:[1070,1071,1072],outlin:1270,output:[81,82,84,855,864,865,899,929,932,940,962,971,994,1012,1024,1028,1057,1061,1074,1130,1132,1133,1134,1155,1157,1159,1161,1163,1165,1166,1167,1176,1177,1178,1179,1181,1215,1216,1227,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255],output_ax:[855,899,1074],output_axi:1074,output_channel:[1244,1245,1246,1247,1248,1249,1250,1253,1254],output_queu:1074,output_shap:[1155,1157,1159,1161,1244,1246,1248,1250],outsid:[929,941],over:[81,82,1047,1050,1130,1134,1137,1139,1140,1141,1143,1145,1172,1173,1208,1214,1224,1225,1226,1258,1259],overal:1270,overflow:[929,932],overhead:1270,overrid:[929,990,1023],overriden:[1260,1264],overwrit:[81,82,855,899,1074],overwrite_at_key_chain:[81,82],own:[1227,1270,1273],packag:[84,1270],pad:[929,945,961,1022,1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],pad_width:[400,929,945,1022],page:1227,pair:[1155,1167],parallel:[855,864,865,1074],parallelis:[855,864,865,1074],param:[81,82,83,400,413,414,855,899,929,930,963,964,990,991,1074,1176,1177,1179,1222,1223,1256,1257,1269],paramet:[15,16,17,18,19,81,82,83,84,853,854,855,864,865,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,894,897,898,899,900,901,904,905,909,910,911,915,916,917,918,919,920,921,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,952,953,954,955,956,957,958,959,960,961,962,963,964,968,970,971,972,974,975,976,978,979,980,981,982,983,984,985,986,987,988,991,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1179,1186,1196,1202,1206,1208,1209,1212,1222,1223,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269],parameter:[1130,1133,1134],pardo:1227,pars:[929,946],part:[1024,1027,1029,1031,1032,1033,1057,1060,1176,1180,1227,1256,1257,1270],partial:[81,82,84,1256,1257],particl:1273,particular:[84,1273],pass:[81,82,83,84,855,864,899,905,910,929,940,1024,1038,1070,1071,1072,1074,1233,1234,1256,1257,1260,1264,1266,1267],pattern:[81,82,929,953,954,955],peopl:84,per:[855,1074,1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],percent_used_mem_on_dev:[852,855],percent_used_mem_on_nod:[852,1074],percentag:[855,894,1074],perf_count:1074,perform:[81,82,84,855,929,934,949,953,954,955,974,975,976,980,981,982,1024,1027,1029,1031,1032,1033,1040,1041,1070,1071,1072,1073,1074,1118,1123,1124,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1163,1165,1224,1225,1226],period:84,permissable_step:1074,permit:84,permut:[448,929,1011,1017],perpendicular:[929,948],person:[84,1227],physci:1273,pickl:[81,82,1074],pickle_filepath:[81,82],pinv:[318,740,852,1047],pip:1227,pipelin:1269,pkk:1273,pkkm1:1273,pkm1km1:1273,place:[81,82,84,855,900,929,958,962,974,975,976,1074,1176,1177,1178,1179,1181,1260,1261,1262,1263,1264,1265],placehold:[84,1118,1127],pleas:[84,448,1047,1052],point:[84,905,920,929,932,1057,1064,1175,1176,1177,1178,1181,1182,1183,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205,1206,1208,1214],popul:[81,82,1130,1131],popular:1273,population_s:[448,449,1130,1131],portabl:[1227,1228],posit:[15,16,17,855,877,881,887,929,930,932,958,961,1074,1130,1135,1182,1183,1186,1193,1224,1225,1226,1233,1234],possibi:[81,82],possibl:[84,929,983,1014,1040,1045,1273],post:[1172,1173],post_shap:[81,82],power:[929,966,999,1008,1235],practic:1227,pre:[855,1074,1227],pre_shap:[81,82],precis:[1182,1183,1186,1205],pred:[1168,1169,1170,1171],predict:[1168,1169,1170,1171,1273],prepend:[1208,1210],preprint:1227,present:[81,82],preserv:[81,82,83,1024,1035,1215,1216],preserve_typ:[81,82,432,435,1024,1035],press:1227,prevent:[84,1024,1026,1027,1031,1074,1260,1261,1262],prevet:84,previou:[1024,1027,1031],previous:[929,940],prime:1227,print:[81,82,83,855,895,929,992,1227,1269],print_all_arrays_in_memori:[852,929],print_all_arrays_on_dev:[852,855],print_ind:[81,82,83],print_limit:[81,82,83],print_line_spac:[81,82,83],prioriti:[81,82,84,100,104],privat:[1260,1264],prob:[448,449,1130,1131,1155,1163,1244,1252],probabl:[1130,1131,1155,1163,1244,1252],problem:[84,1273],process:[84,855,864,865,894,904,929,988,1074],process_specif:[855,894,904,1074],prod:[81,82,929,954],produc:[855,864,865,1074],product:[81,82,929,948,949,984,1137,1138,1155,1166,1167,1208,1210,1244,1255],profil:[118,255,398,527,659,852,855,1074],progress:84,project:[1227,1269,1270,1273],promot:[1057,1064,1186,1187,1188,1189,1191,1192,1197,1199,1203,1204,1205,1208,1210,1214],prompt:1227,properti:[81,82,478,855,867,1074,1256,1257,1260,1261,1262,1263,1265],provid:[81,82,84,853,854,855,872,905,912,913,914,919,928,929,952,990,998,1023,1024,1027,1029,1031,1032,1033,1039,1074,1215,1216,1217,1218,1224,1225,1226,1227,1244,1253,1260,1261,1262,1263,1264,1265,1270],prune:[81,82],prune_empti:[81,82],prune_kei:[81,82],prune_key_chain:[81,82],prune_key_from_key_chain:[81,82],prune_keys_from_key_chain:[81,82],prune_unappli:[81,82],pseudo:[1047,1051],pull:[1227,1228],pure:[81,82,1227,1273],purpos:[84,1273],put:1074,pybroadexcept:1074,pyprotectedmemb:1074,pyshadowingnam:[856,906,907,908,1025,1074],python:[81,82,855,894,904,929,932,1074,1227],pytorch:[1024,1027,1029,1031,1032,1033,1047,1052,1227,1260,1261,1262,1263,1264,1265,1269,1270,1273],pyunresolvedrefer:1074,quadrant:[1057,1061],qualiti:84,queri:[81,82,855,888,898,1074,1155,1166,1167,1244,1255],query_dim:[1244,1255],query_kei:[81,82],queue:[81,82,83,855,864,865,929,993,1001,1074],queue_class:[855,864,865,1074],queue_load_s:[81,82,83],queue_timeout:[81,82,83,852,929,1074],quick:[448,1227],quickli:[84,1269],radian:[1057,1058,1059,1061,1068,1186,1191,1203],rai:[1057,1058],rais:[81,82,929,938,966,999,1006,1008,1018,1074,1224,1225,1226,1256,1257,1260,1264],ram:[855,894,901,904,1074],randint:[169,327,448,583,761,852,1130],random:[45,63,81,82,449,852,1131,1132,1133,1134,1135,1136,1227],random_crop:[852,1040],random_norm:[169,327,448,583,761,852,1130],random_uniform:[169,327,448,583,761,852,1130],randomli:[448,1040,1044,1155,1163,1244,1252],rang:[448,929,932,981,982,1057,1061,1074,1227,1269,1273],rank:[929,945,1019,1022,1208,1214,1224,1225,1226],rate:[1024,1027,1029,1031,1032,1033,1070,1071,1072,1073,1244,1255,1260,1261,1262,1263,1264,1265],rather:[81,82,84,855,899,929,932,978,1024,1030,1074],ratio:[855,1024,1031,1040,1045,1074,1260,1262],raw:[81,82,1047,1052],raw_delta:1074,reach:[84,855,877,881,887,1074,1118,1127],read:[81,82],readi:[1074,1269],real:[1057,1058,1060],realiti:1270,rearrang:[81,82,929,953,955],rebuild:[81,82,83],rebuild_child_contain:[81,82,83],rece:[1070,1072],receiv:[84,855,864,865,929,933,983,1074,1244,1254],receivess:[855,1074],receivng:[1070,1073],recev:[1070,1071,1072],recognit:1273,recommend:[1186,1200,1201,1227],rectifi:[1147,1149,1150],recurr:[1155,1165],recurrent_bia:[1155,1165],recurrent_kernel:[1155,1165],recurs:[81,82,1118,1119,1120,1126,1127],reduc:[81,82,855,899,929,954,1047,1052,1074,1137,1139,1140,1141,1142,1143,1144,1145,1217,1218,1224,1225,1226],reduce_max:[81,82,176,332,450,588,768,852,1137],reduce_mean:[81,82,176,332,450,588,768,852,1137,1227,1269],reduce_min:[81,82,176,332,450,588,768,852,1137],reduce_prod:[81,82,176,332,450,588,768,852,1137],reduce_std:[81,82,332,852,1137],reduce_sum:[81,82,176,332,450,588,768,852,1074,1137],reduce_var:[81,82,176,332,450,588,768,852,1137],reduct:[47,65,81,82,400,425,426,852,929,954,997,998,1138,1139,1140,1141,1142,1143,1144,1145,1224,1225,1226,1227],refactor:84,refer:[84,1024,1026,1027,1047,1053,1186,1198,1224,1225,1226,1244,1254,1273],reflect:84,reflected_oper:[0,13,14,66,79,80],regard:[855,1074],regardless:[81,82,853,854],register_paramet:1269,reimplement:1273,rel:[1024,1027,1029,1031,1032,1033,1208,1209,1215,1216,1220,1221],rel_slice_obj:1074,relat:84,relev:[1260,1261,1262,1263,1264,1265],relu:[777,1146,1147,1148,1149,1227,1269],remain:[84,929,995,1118,1122],remaind:[81,82,929,960,1005],remov:[81,82,84,929,1006,1070,1071,1072,1208,1209,1210],remove_key_length_limit:[81,82],remove_print_limit:[81,82],reorder:[81,82,1215,1216],rep:[929,1012],repeat:[81,82,84,261,667,852,929,955,1012,1074,1270],repeated_config_check:[855,1074],repeatedli:[1118,1125],repetit:[81,82,929,994,1012],replac:[81,82,84,448,449,929,941,997,998,1130,1131],repo:[84,1227],repositori:84,repres:[84,905,911,916,1155,1164,1186,1187,1188,1192,1204,1206,1208,1211],represent:[81,82,83,84,855,882,883,905,911,917,918,929,1004,1014,1074,1175,1182,1183,1184,1186,1189],reptil:[1070,1073],reptile_step:[852,1070],request:[1227,1228],requir:[84,853,854,905,909,929,932,935,1186,1205,1233,1234],resampl:[929,980],reserv:84,reshap:[81,82,448,667,852,929],reshape_lik:[81,82],respect:[929,956,1024,1026,1027,1028,1029,1031,1032,1033,1047,1052,1057,1064,1070,1071,1072,1073,1186,1189,1195,1196,1201],respond:84,respons:[84,1074],restor:[81,82],restructur:[81,82],restructure_key_chain:[81,82],result:[81,82,83,855,864,929,932,956,997,998,1009,1047,1050,1054,1055,1056,1057,1064,1074,1137,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1214,1217,1218,1224,1225,1226,1227],ret:1074,ret_dict:1074,ret_fn:[855,864,865,1074],retain:[1024,1028],retain_grad:[432,433,1024,1028],retreiv:1074,retrn:[929,1004],return_cont:[81,82],return_dict:[81,82],return_inner_v:[1070,1071,1072,1073],return_sequ:[1244,1253],return_st:[1244,1253],rev:[929,952],revers:[81,82,929,952,1017,1215,1216],review:84,right:[81,82,84],rk_e:1273,robot:1227,ronald:1227,root:[84,1186,1205],round:[261,400,667,852,929,932,1074,1186,1190,1205],row:[929,971,1130,1131],rule:[929,932,1057,1064],run:[84,855,864,1024,1026,1027,1031,1070,1071,1072,1073,1074,1227,1228,1244,1255,1256,1257],safe:[855,864,1074],safety_factor:[855,1074],same:[15,16,17,81,82,84,855,864,865,899,900,905,909,929,930,944,959,960,963,964,990,996,997,998,1009,1023,1024,1030,1035,1057,1060,1070,1071,1072,1074,1137,1138,1155,1156,1157,1158,1159,1160,1161,1162,1176,1179,1180,1186,1190,1208,1209,1212,1215,1216,1220,1221,1227,1244,1245,1246,1247,1248,1249,1250,1251,1269,1273],same_arrai:[81,82],sampl:[929,980,1040,1041,1130,1131,1133,1134,1155,1163,1227,1244,1252],satisfi:[929,935,1047,1049,1053],save:[81,82,929,1002,1013,1040,1042,1256,1257],save_dir:[398,399,855,870,1074],save_weight:[1256,1257],scalar:[929,941,990,1016,1020,1208,1214],scale:[855,897,898,1024,1032,1074,1155,1163,1166,1167,1172,1173,1244,1252,1255,1260,1263],scaled_dot_product_attent:[1146,1155],scatter:[929,990,997,998],scatter_flat:[125,261,400,534,667,852,929],scatter_nd:[125,261,400,534,667,852,929],scene:[1024,1027,1029,1031,1032,1033],schemat:1227,screen:[81,82],script:84,search:[15,18,19,81,82,1174,1218],searching_funct:[1217,1218],second:[81,82,855,886,929,936,948,956,993,1001,1011,1024,1026,1027,1031,1070,1072,1074,1186,1189,1195,1196,1201,1208,1209,1210,1260,1261,1262],secondli:1273,sector:[1186,1187,1188],see:[100,398,399,448,478,855,867,868,869,870,905,929,932,981,982,1024,1057,1064,1186,1189,1195,1201,1208,1214,1224,1225,1226,1227,1235,1237,1238,1240,1241,1243],seed:[81,82,169,448,761,852,1130],seed_valu:[81,82,448,1130,1135],seem:1227,seen_set:[929,969],select:[929,935,1006,1270,1273],self:[81,82,100,398,399,478,855,867,868,869,870,905,1024,1074,1227,1235,1237,1238,1240,1241,1243,1260,1264,1269,1273],sent:1074,seper:[84,929,961],seq:[81,82,83,1137,1138,1256,1257],sequenc:[15,16,17,81,82,83,84,448,853,854,855,864,865,874,875,876,877,878,879,880,881,884,885,899,905,909,929,932,935,937,939,944,945,971,983,986,991,994,995,998,1005,1009,1012,1017,1022,1024,1028,1040,1044,1045,1047,1050,1074,1118,1129,1130,1132,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1253,1256,1257,1258,1259,1260,1264,1266,1267],sequenti:1227,seri:84,set:[15,18,19,81,82,855,884,885,897,898,899,929,931,951,971,999,1000,1001,1002,1024,1027,1029,1030,1031,1032,1033,1047,1050,1074,1118,1119,1126,1128,1129,1130,1131,1135,1137,1139,1140,1141,1142,1143,1144,1145,1174,1217,1218,1220,1221,1227,1244,1253,1260,1261,1262,1263,1264,1265,1270,1273],set_at_kei:[81,82],set_at_key_chain:[81,82],set_breakpoint_debug_mod:85,set_debug_mod:85,set_default_devic:[852,855],set_default_dtyp:[852,905],set_default_float_dtyp:[852,905],set_default_int_dtyp:[852,905],set_default_nod:[852,1074],set_exception_debug_mod:85,set_framework:[81,82,84,100,1074,1227,1269,1270,1273],set_ivy_backend:[81,82],set_min_bas:[852,929],set_min_denomin:[852,929],set_nest_at_index:[852,1118],set_nest_at_indic:[852,1118],set_queue_timeout:[852,929],set_split_factor:[852,855,1074],set_stat:[1260,1261,1262,1263,1264,1265],set_tmp_dir:[852,929],set_with_grad:[852,1024],setter:1074,sever:1273,sgd:[1227,1260],shape0:1074,shape:[81,82,84,400,412,426,448,472,473,474,477,667,852,855,867,905,909,929,930,939,944,945,958,959,960,962,964,968,971,990,991,994,995,996,997,998,1004,1006,1009,1022,1023,1040,1044,1047,1049,1052,1057,1060,1061,1074,1130,1132,1133,1134,1137,1138,1155,1157,1159,1161,1176,1177,1178,1179,1180,1181,1208,1209,1210,1215,1216,1217,1218,1220,1221,1244,1246,1247,1248,1249,1250,1251,1258,1259],shape_slic:[81,82],shape_to_tupl:[852,929],share:[81,82,1227,1270],shift:1074,should:[81,82,83,84,448,853,854,855,929,939,940,946,990,995,1024,1027,1029,1031,1032,1033,1057,1064,1074,1137,1138,1176,1180,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1210,1214,1217,1218,1227],show:[81,82,1227,1273],show_mod_in_top_mod:[1256,1257],show_structur:[1256,1257],show_sub_contain:[81,82],show_v:[1256,1257],show_v_in_top_v:[1256,1257],shown:[81,82],shp:1074,shuffl:[81,82,169,448,761,852,1130],shuffle_h5_fil:[81,82],side:84,sigmoid:[777,1146,1147,1227,1269],sign:[1208,1211],signatur:[84,100,398,399,400,432,437,441,445,446,448,478,855,867,868,869,870,905,1024,1174,1235,1237,1238,1240,1241,1243],signific:1273,similar:[84,1155,1166,1244,1255],similarli:[1047,1052],simpl:[84,929,957,1227,1270,1273],simpler:84,simplest:1270,simpli:[81,82,84,1227,1270,1273],simultan:1227,sin:[211,365,483,615,809,929,961,1057,1068,1174,1186,1270],sinco:1270,sine:[1057,1059,1186,1188,1203,1204],singl:[81,82,853,854,855,864,865,884,885,886,887,929,1006,1016,1020,1040,1045,1074,1130,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1227,1270,1273],singleton:[1208,1214,1224,1225,1226],singular:[1208,1212],sinh:[211,365,483,615,809,1174,1186],siren:[1227,1235],situat:84,size:[81,82,83,400,425,855,878,879,880,881,897,898,899,929,932,939,981,982,997,1005,1040,1044,1047,1050,1074,1130,1131,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1208,1209,1212,1217,1218,1224,1225,1226,1244,1245,1246],size_ordered_arrai:[81,82],skew:[1047,1053],skinv:1273,skip:[81,82],slice:[81,82,929,963,964,1074,1118,1125],slice_kei:[81,82],slice_obj:[81,82,1074],slice_via_kei:[81,82],slide:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],slodget:[1174,1208],slogdet:[234,379,506,638,832],slope:[1147,1149],small:[1168,1169,1170,1171,1172,1173,1227,1258,1259,1270],smaller:[929,941],smallest:[81,82,929,934,1182,1183,1184,1186,1190],smallest_norm:[478,1182,1183],softmax:[185,459,777,1146,1147,1155,1166,1167],softplu:[777,1146,1147],solut:84,solv:1273,some:[81,82,84,929,932,1024,1026,1027,1029,1031,1032,1033,1038,1155,1163,1227,1244,1252,1270,1273],some_backend:84,some_namespac:84,someth:[84,1273],something_cool:84,sometim:84,somewher:[81,82],soon:84,sort:[81,82,83,1074,1174,1208,1212,1221],sort_by_kei:[81,82],sorting_funct:[1220,1221],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,100,102,103,104,105,106,107,108,109,110,111,112,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,472,473,474,475,476,477,478,480,481,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1230,1231,1232,1233,1234,1235,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1271,1272,1273],space:[929,932,961,981,982],spars:[1168,1171],sparse_cross_entropi:[1146,1168],spawn:[929,988],special:[84,1186,1187,1188,1190,1191,1192,1197,1199,1203,1204,1205],specif:[81,82,84,855,897,929,946,953,954,955,988,1070,1071,1072,1073,1074,1130,1136,1186,1200,1201,1227,1256,1257,1269,1270],specifc:[1130,1131],specifi:[81,82,855,874,875,876,877,878,879,880,881,884,885,889,891,895,898,899,900,905,909,911,929,932,934,935,941,944,945,962,963,964,970,981,982,1009,1019,1022,1047,1050,1074,1118,1123,1124,1128,1129,1137,1138,1139,1140,1141,1142,1143,1144,1145,1176,1177,1178,1180,1181,1208,1209,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226],sphinx:84,split:[81,82,125,261,400,534,667,852,855,864,878,879,880,881,897,898,899,929,983,1074],split_arg:1074,split_factor:[852,855,864,1074],split_func_cal:[852,855,1074],split_siz:1074,spread:[855,887,1074],sqrt:[211,365,483,615,809,1174,1186,1208,1214],squar:[929,971,1047,1049,1186,1205,1208,1211],squeez:[125,261,400,534,667,852,929],stabil:[929,1007,1008,1220,1221],stabl:[929,966,967,999,1000,1007,1008,1220,1221],stable_divid:[852,929],stable_pow:[852,929],stack:[81,82,261,667,852,929,1040,1045,1118,1119,1126,1176,1180,1208,1209,1210,1244,1253],stack_imag:[159,314,437,573,736,852,1040],stacked_dim_s:1074,stage:84,standard:[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,472,473,474,475,476,477,478,480,481,1130,1133,1137,1143,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1258,1259],start:[81,82,84,398,399,400,401,422,423,448,855,870,929,932,981,982,1074,1227,1270],starting_index:[81,82],starting_split_factor:[855,1074],state:[1074,1155,1165,1227,1230,1231,1232,1233,1234,1235,1237,1238,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269],statement:1270,static_argnam:[400,405,853,854],static_argnum:[400,405,853,854],statist:1174,statistical_funct:[1222,1223],std:[448,1130,1133],step:[81,82,400,401,855,929,932,981,982,1024,1026,1027,1029,1031,1032,1033,1070,1071,1072,1073,1074,1227,1260,1261,1262,1263,1264,1265,1269,1273],stephen:1227,stick:1227,still:[81,82,84],stochast:[1260,1265],stop:[81,82,398,399,400,401,422,423,855,870,899,929,932,981,982,1024,1027,1029,1031,1032,1033,1035,1070,1071,1072,1073,1074,1260,1261,1262,1263,1264,1265],stop_gradi:[81,82,309,432,568,730,852,855,899,1024,1027,1029,1031,1032,1033,1070,1071,1072,1073,1074,1260,1261,1262,1263,1264,1265],stopiter:1074,store:[81,82,929,961,1005,1024,1038,1256,1257],store_var:[1256,1257],str:[15,16,17,81,82,83,84,472,473,474,475,477,478,480,481,853,854,855,864,865,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,899,905,910,911,916,917,918,919,920,921,928,929,935,951,953,954,955,986,988,991,997,998,1047,1050,1052,1070,1071,1072,1073,1074,1118,1122,1137,1138,1176,1179,1182,1183,1184,1233,1234,1244,1255,1256,1257],str_to_nod:[852,1074],straight:1270,strength:[1227,1273],stride:[1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],string:[81,82,84,855,871,873,882,883,888,894,900,901,904,905,909,915,917,918,919,928,929,932,935,951,971,991,1023,1074,1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251,1256,1257],structur:[81,82,83,84,929,946],structural_diff:[81,82],style:84,sub:[81,82,84,855,878,879,884,885,886,887,929,1005,1070,1071,1072,1073,1074,1208,1209],sub_cont:[81,82],sub_cont_or_keychain:[81,82],sub_cont_to_find:[81,82],sub_item:1074,sub_mod:[1256,1257],sub_modul:[1266,1267],sub_str:[81,82],sub_struc_to_find:[81,82],submodul:[1227,1228,1258,1259,1266,1267],subsequ:84,subset:84,substr:[81,82],suffici:[1047,1052],suggest:1227,suitabl:[1040,1045],sum:[81,82,400,425,426,855,884,885,886,887,899,929,950,954,997,998,1074,1137,1138,1144,1208,1213,1214],summat:[81,82,1137,1138],support:[2,4,6,8,10,12,14,16,17,18,19,21,24,25,26,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,68,70,72,74,76,78,80,81,82,83,86,87,88,89,90,101,102,103,104,105,106,107,108,109,110,111,112,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,161,162,164,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,201,202,203,204,205,207,208,209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,240,242,244,247,249,251,252,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,324,325,328,329,330,331,333,334,335,336,337,338,339,340,343,345,346,347,348,349,350,351,355,356,357,358,359,361,362,363,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,383,384,386,388,391,394,395,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,438,439,440,442,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,473,474,475,476,477,479,480,481,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,507,508,509,510,511,512,514,516,519,521,523,524,528,529,530,531,532,533,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,569,570,571,572,574,575,576,578,579,580,584,585,586,587,589,590,591,592,593,594,595,599,600,601,605,606,607,608,609,611,612,613,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,639,640,641,642,643,644,646,648,651,653,655,656,660,661,662,663,664,665,666,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,731,732,733,734,735,737,738,739,741,742,743,744,745,746,748,749,751,752,753,754,755,756,757,758,759,760,762,763,764,765,766,767,769,770,771,772,773,774,775,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,799,800,801,802,803,805,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,833,834,835,836,837,838,840,842,845,847,849,850,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1173,1177,1178,1179,1180,1181,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1216,1218,1221,1223,1225,1226,1227,1231,1232,1234,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1272,1273],supports_inplac:[852,929],suppos:1273,sure:84,svd:[234,379,506,638,832,1174,1208],swap:[81,82,929,1011],swapax:[81,82,534,667,852,929,1273],symmetr:[1047,1053],syntax:[398,400,432,437,441,445,446,448],tab:1227,take:[84,929,980],taken:[84,1137,1139,1140,1141,1143,1145,1208,1209],tan:[750,852,1057,1060],tangent:[1057,1060,1061,1062,1068,1069,1147,1154,1186,1206],tanh:[211,365,483,615,777,809,852,1057,1146,1147,1174,1186],target:[81,82,855,871,874,875,876,877,878,879,880,881,884,885,886,887,900,1074,1227],target_dict:[81,82],task:[84,1070,1071,1072,1073],team:[84,1273],templat:1227,temporari:[929,1002,1013],tensor:[81,82,84,400,425,426,855,873,905,915,929,932,934,939,981,982,985,987,990,991,995,997,998,1005,1023,1074,1130,1131,1132,1155,1163,1165,1227,1244,1252,1254,1260,1261,1262,1263,1264,1265,1269,1270],tensorflow:[84,1047,1052,1155,1157,1159,1161,1227,1244,1246,1248,1250,1270,1273],term:[81,82,84,1155,1165,1227,1244,1254],termcolor:[81,82,83],termin:[81,82,83,1074],test:[84,905,920,921,1186,1193,1194,1224,1225,1226],test_array_api:84,tf_concat:1227,than:[81,82,84,855,899,929,932,941,959,978,985,1006,1009,1024,1030,1074,1130,1134,1182,1183,1186,1187,1190,1197,1199,1205,1208,1210,1214,1215,1216,1227,1270],thei:[81,82,1057,1061,1070,1071,1072,1130,1131,1227,1266,1267,1270],them:[1227,1273],themselv:[1118,1119],therefor:84,thi:[81,82,83,84,855,877,881,887,894,899,904,929,932,961,993,995,1001,1024,1027,1029,1030,1031,1032,1033,1038,1047,1050,1074,1118,1122,1127,1137,1139,1140,1141,1142,1143,1144,1145,1155,1164,1186,1200,1201,1208,1211,1213,1217,1218,1227,1256,1257,1260,1261,1262,1263,1264,1265,1269,1270,1273],thing:[84,1227],those:[81,82,84,929,941,1024,1038,1074,1208,1212],though:84,thought:84,threshold:[929,985,987],through:[81,82,84],tick:84,tickbox:84,tile:[261,534,667,852,929],time:[84,929,1012,1024,1027,1031,1070,1071,1072,1073,1074,1130,1131,1155,1165,1217,1218,1244,1255,1256,1257,1273],timeout:[81,82,83,855,864,865,929,993,1001,1074],timestep:[1155,1165,1244,1253],titl:[84,1227],tmp_dir:[852,929],tmp_dr:[929,1002],to_appli:[81,82],to_clon:[855,1074],to_dev:[81,82,118,255,398,527,659,852,855],to_dict:[81,82],to_disk_as_hdf5:[81,82],to_disk_as_json:[81,82],to_disk_as_pickl:[81,82],to_distribut:[855,1074],to_flat_list:[81,82],to_iter:[81,82],to_iterator_kei:[81,82],to_iterator_valu:[81,82],to_ivi:[15,23,81,82,1227],to_ivy_modul:[187,785,1227,1233],to_json:[81,82],to_kv_fn:[1155,1166],to_kv_v:[1155,1166],to_list:[81,82,400,667,852,929],to_multi_dev:[81,82],to_mut:[1118,1120,1127],to_n:[15,23,81,82,1227],to_nod:[852,1074],to_numpi:[81,82,400,667,852,929,1227,1269],to_out_fn:[1155,1166],to_out_v:[1155,1166],to_q_fn:[1155,1166],to_q_v:[1155,1166],to_raw:[81,82],to_scalar:[400,667,852,929],todo:[1074,1227,1228],togeth:[81,82,1266,1267],tool:[1227,1270],top_mod:[1256,1257],topic:1273,torch:[84,853,854,1227,1269,1270,1273],torch_concat:1227,torchfcmodel:1269,total:[81,82,83,855,901,1074],total_mem_on_dev:[852,855],total_mem_on_nod:[852,1074],tpu:[855,902,1074],tpu_is_avail:[398,527,659,852,855,1074],trace:[81,82,234,379,506,638,832,929,978,1174,1208],track:[84,855,1074,1118,1127,1256,1257],track_submod_call_ord:[1256,1257],track_submod_ret:[1256,1257],trail:[1258,1259],train:[1024,1026,1027,1031,1227,1228],trainabl:[1024,1030,1227,1228,1233,1234,1256,1257,1266],trainer:1227,tran:1273,transform:[1155,1163,1164],transpos:[81,82,125,261,400,667,852,855,886,929,1074,1155,1157,1159,1161,1244,1246,1248,1250],travers:[15,18,19,81,82,1118,1127],treat:[81,82,853,854],tri:[81,82],triangular:[1176,1180],trigonometr:[1057,1058,1060],tril:[200,354,472,604,798,1174,1176],trim_kei:[81,82],trust:[1024,1031,1260,1262],truth:[929,956,1054,1055,1056,1186,1195,1196],try_else_non:[852,929],try_import_ivy_jax:100,try_import_ivy_mxnet:100,try_import_ivy_numpi:100,try_import_ivy_tf:100,try_import_ivy_torch:100,try_kc:[81,82],tune:[855,1074],tune_dev_alloc:855,tune_dev_split:855,tune_node_alloc:1074,tune_node_split:1074,tune_step:[855,1074],tupl:[15,16,17,18,19,81,82,84,472,473,474,477,853,854,929,945,961,962,1004,1022,1074,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1137,1139,1140,1141,1142,1143,1144,1145,1176,1177,1178,1181,1208,1212,1214,1215,1216,1222,1223,1224,1225,1226],tutori:84,two:[81,82,929,932,936,948,984,1011,1047,1050,1176,1180,1208,1209,1210,1211,1212,1213],type:[15,18,81,82,83,84,100,398,399,480,481,855,867,868,869,870,882,883,887,899,905,909,910,911,915,916,917,918,919,920,921,928,929,930,932,935,944,946,956,959,960,962,971,978,990,991,996,1010,1020,1023,1024,1030,1035,1057,1064,1074,1174,1176,1177,1178,1179,1180,1181,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1203,1204,1205,1206,1208,1209,1210,1214,1215,1216,1217,1218,1220,1221,1224,1225,1226,1227,1235,1237,1238,1240,1241,1243,1256,1257,1270],types_to_iteratively_nest:[81,82,83],uint8:[1040,1042,1046],uint8_img_to_float_img:[852,1040],unabl:84,unchang:[15,16,17,18,19],uncom:84,underli:[1186,1189],underwai:84,unecessari:84,unfairli:84,unif:1074,unifi:[81,82,852,855,884,885,886,887,899,1074,1227],uniform:[81,82,1130,1131,1133,1134,1235,1237,1238,1241,1242],uniformli:[1130,1132,1134],unify_arrai:[852,1074],unify_it:[852,1074],unify_nest:[852,1074],uniniti:[1176,1177],union:[15,18,19,81,82,84,472,473,474,475,477,478,480,481,853,854,855,873,878,879,880,881,899,900,905,909,910,911,915,916,917,918,919,920,921,928,929,930,931,932,934,935,936,937,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,962,963,964,968,970,971,972,979,980,981,982,984,985,986,987,990,991,994,995,996,997,998,1003,1004,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1074,1118,1119,1120,1126,1127,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226],uniqu:[855,864,865,1070,1071,1072,1073,1074,1118,1122],unique_kwarg:1074,unit:[84,855,1057,1058,1059,1074,1147,1148,1149,1150],unitari:[1208,1212],unless:[929,990,1023],unlik:[855,1074],unnorm:[1130,1131],unpack:[929,1019],unrol:[1155,1165],unset:1270,unset_debug_mod:85,unset_default_devic:[852,855],unset_default_dtyp:[852,905],unset_default_float_dtyp:[852,905],unset_default_int_dtyp:[852,905],unset_framework:[100,1270],unset_with_grad:[852,1024],unstack:[81,82,125,261,400,534,667,852,929],until:84,unus:[853,854],updat:[81,82,400,425,426,855,864,929,976,997,998,1024,1026,1027,1029,1031,1032,1033,1070,1071,1072,1074,1118,1123,1124,1128,1129,1155,1165,1227,1228,1233,1234,1260,1261,1262,1263,1264,1265,1270,1273],update_backend:[81,82],update_config:[81,82],upon:84,upper:[81,82,1130,1134],upper_depth:[1256,1257],upstream:84,usabl:[1227,1273],usag:[855,899,1074],use:[81,82,83,84,448,855,864,865,890,902,929,994,1007,1008,1047,1052,1074,1155,1166,1172,1173,1227,1258,1259,1270,1273],used:[81,82,84,448,855,864,894,897,898,904,905,916,929,966,967,983,997,998,999,1000,1023,1024,1031,1032,1047,1050,1070,1071,1072,1073,1074,1118,1127,1208,1209,1244,1255,1260,1262,1263,1269,1270],used_dev:[855,864],used_mem_on_dev:[852,855],used_mem_on_nod:[852,1074],used_node_str:1074,used_node_strs_dict:1074,useful:[81,82,855,899,1074,1155,1164,1227,1270],user:[1227,1244,1255,1256,1257,1270,1273],uses:1227,using:[81,82,84,1024,1026,1027,1118,1121,1125,1137,1138,1155,1163,1167,1227,1244,1252,1269,1270,1273],util:[855,888,1074,1174],utility_funct:[1224,1225,1226],v_with_top_v_key_chain:[1256,1257],val:[81,82,400,417,418,419,929,974,975,976,999,1000],valid:[905,910,929,1007,1008,1155,1156,1157,1158,1159,1160,1161,1162,1224,1225,1226,1244,1245,1246,1247,1248,1249,1250,1251],valid_dtyp:[852,905],valu:[81,82,400,855,867,898,899,929,930,932,934,941,942,943,945,946,952,956,961,962,963,964,979,981,982,985,987,993,994,995,996,997,998,999,1000,1001,1017,1020,1021,1022,1024,1028,1031,1040,1046,1054,1055,1056,1057,1065,1066,1067,1070,1071,1072,1074,1118,1122,1123,1124,1128,1129,1130,1133,1134,1137,1139,1141,1155,1166,1167,1172,1173,1186,1190,1195,1196,1208,1211,1212,1213,1214,1217,1218,1220,1221,1222,1223,1244,1255,1258,1259,1260,1262],value_is_nan:[852,929],vanilla:[1070,1072],var_shap:1235,variabl:[15,16,17,18,19,81,82,309,432,568,730,852,929,938,974,975,976,977,978,1010,1024,1027,1028,1029,1030,1031,1032,1033,1035,1038,1070,1071,1072,1073,1155,1166,1172,1173,1233,1234,1235,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],variable_data:[432,730,852,1024],varianc:[81,82,1137,1145,1273],varieti:1270,variou:[84,1227],vector:[81,82,441,444,929,943,948,1047,1053,1155,1164,1208,1210,1212,1214,1244,1254],vector_norm:[81,82,234,379,506,638,832,1174,1208],vector_to_skew_symmetric_matrix:[163,318,441,577,740,852,1047],verbos:1272,veri:[84,1227],verifi:84,via:[1118,1119,1126,1270],view:[1040,1045],vision:1227,visual:1270,volum:[1155,1160],vw_tm1:[1024,1027,1031],wai:[1270,1273],wait:[81,82,83,84],want:[84,1227,1270,1273],warn:[100,107,108,109,110,111],warp:[437,438,1040,1041],watch:1269,websit:84,weight:[1024,1026,1027,1029,1031,1032,1033,1155,1164,1165,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1260,1262,1263],weight_initi:[1244,1245,1246,1247,1248,1249,1250,1251,1253,1254],weights_path:[1256,1257],well:[81,82,929,970],were:[81,82,1074],what:[84,1227],when:[81,82,83,84,855,929,940,1008,1021,1074,1208,1212,1217,1218,1227,1256,1257,1270,1273],where:[81,82,84,261,400,667,852,929,932,939,941,945,958,972,979,990,1022,1118,1119,1126,1130,1131,1186,1198,1208,1212,1224,1225,1226],wherea:84,wherebi:[1118,1127],whether:[15,18,19,81,82,83,853,854,855,873,886,890,894,899,902,904,905,915,919,920,921,928,929,931,936,937,949,952,957,961,968,970,973,977,978,983,1003,1010,1019,1020,1024,1027,1028,1029,1030,1031,1032,1033,1035,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1147,1148,1155,1163,1186,1194,1224,1225,1226,1227,1233,1234,1244,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265],which:[81,82,83,84,448,853,854,855,864,865,873,878,879,880,881,884,885,886,887,889,891,895,897,898,899,905,910,915,919,928,929,932,935,944,946,948,949,950,952,962,963,964,965,971,972,980,981,982,989,990,991,992,994,997,998,1005,1009,1019,1021,1023,1024,1027,1028,1029,1031,1032,1033,1035,1037,1038,1040,1042,1047,1050,1057,1061,1074,1118,1122,1123,1124,1128,1129,1130,1131,1132,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1166,1167,1176,1177,1178,1179,1180,1181,1182,1183,1184,1208,1209,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1233,1234,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1269,1270],whilst:84,whitespac:[81,82,83],who:84,whose:[929,935,940,1137,1138,1139,1140,1141,1143,1145,1176,1180,1186,1187,1188,1191,1192,1203,1204,1206,1208,1209,1215,1216],why:[1227,1228],width:[1040,1045],wiki:1273,wikipedia:1273,window:[1040,1045,1155,1156,1157,1158,1159,1160,1161,1162,1244,1245,1246,1247,1248,1249,1250,1251],wise:[81,82,929,941,956,959,960,985,987,996,1024,1027,1029,1031,1033,1054,1055,1056,1057,1058,1059,1060,1061,1064,1065,1066,1067,1068,1147,1148,1149,1150,1151,1152,1153,1154,1186,1189,1195,1196,1200,1201],wish:1270,with_bia:[1244,1254],with_cal:[929,952],with_default_key_color:[81,82],with_entries_as_list:[81,82],with_grad:[852,1024,1034],with_ivy_backend:[81,82],with_key_length_limit:[81,82],with_node_map:1074,with_partial_v:[1256,1257],with_print_ind:[81,82],with_print_limit:[81,82],with_print_line_spac:[81,82],with_remaind:[81,82,400,427,929,1005,1074],with_to_kv_fn:[1244,1255],with_to_out_fn:[1244,1255],with_to_q_fn:[1244,1255],within:[15,18,19,84,929,932,1130,1134,1208,1212],without:[81,82,84,929,993,995,1001,1118,1120,1270],wonder:1227,word:[15,16,17,929,932,1130,1134,1233,1234],work:[84,1269],worker:[855,864,865,1074],worker_class:[855,864,865,1074],worker_kwarg:1074,would:[84,1147,1152,1227,1270,1273],wrap:[15,81,82,83,84,398,400,432,437,441,445,446,448,929,940,1024,1038,1227],write:[81,82,84,1227,1228,1273],written:[84,1227,1273],ws_new:[1024,1027,1029,1031,1032,1033],x1_i:[929,956,1057,1064,1186,1189,1195,1196,1201],x2_i:[929,956,1057,1064,1186,1189,1195,1196,1201],x_feat_dim:[1155,1166],x_i:[1186,1187,1188,1190,1191,1192,1193,1194,1197,1199,1200,1203,1204,1205,1206],x_in:[1227,1269],x_inv:[1047,1049],x_max:[400,929,941],x_min:[400,929,941],x_sub:1074,xkk:1273,xkkm1:1273,xkm1km1:1273,xs0:1074,xs_t:1074,year:[1227,1273],yet:[1118,1127,1273],yield:[929,1021],you:[84,1227,1269,1270,1273],your:[1227,1228,1269,1270,1273],your_awesome_project:1270,yourself:[84,1227],yourslef:84,youtub:84,zero:[81,82,200,354,472,604,798,929,945,990,997,998,1022,1023,1024,1026,1027,1031,1032,1155,1163,1174,1176,1177,1180,1186,1200,1201,1208,1210,1214,1217,1218,1224,1225,1226,1227,1235,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1260,1261,1262,1263],zero_pad:[261,400,534,667,852,929],zeros_lik:[125,261,400,534,667,852,929],zip:1074,zk_e:1273},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","Extra","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Standard","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Functional","Backends","Jax","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Mxnet","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Neural net","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Numpy","Extra","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Tensorflow","Extra","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Torch","Extra","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Neural net","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Ivy","Extra","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Neural Net","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Standard","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","trace","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":952,"function":[114,200,206,211,233,241,243,245,246,248,250,354,360,365,378,385,387,389,390,392,393,472,478,483,505,513,515,517,518,520,522,604,610,615,637,645,647,649,650,652,654,798,804,809,831,839,841,843,844,846,848,1176,1182,1186,1207,1215,1217,1219,1220,1222,1224],Ones:1240,Using:1270,abs:[262,535,668,930],aco:[751,1058],acosh:[212,366,484,616,810,1187],activ:[185,342,459,597,777,1147,1230],adam:1261,adam_step:1026,adam_upd:1027,algebra:[163,234,318,379,441,506,577,638,740,832,1208],all:[251,394,523,655,849,1225],all_equ:931,all_nested_indic:1119,ani:[252,395,524,656,850,1226],api:[0,84],arang:[126,263,401,536,669,932],arg_nam:933,argmax:[244,388,516,648,842,1218],argmin:[127,402,537,670,934],args_to_ivi:[16,24],args_to_n:[17,25],argsort:[247,391,519,651,845,1221],arithmet:[1,67],arrai:[0,3,69,84,128,264,403,538,671,935],array_equ:[265,672,936],arrays_equ:937,arraywitharrayapiarithmeticoper:[2,68],arraywitharrayapiarrayoper:[4,70],arraywitharrayapiattribut:[6,72],arraywitharrayapibitwiseoper:[8,74],arraywitharrayapicomparisonoper:[10,76],arraywitharrayapiinplaceoper:[12,78],arraywitharrayapireflectedoper:[14,80],arraywithdevic:[21,29],arraywithgener:[31,49],arraywithgradi:[33,51],arraywithimag:[35,53],arraywithlinalg:[37,55],arraywithlog:[39,57],arraywithmath:[41,59],arraywithmeta:[43,61],arraywithrandom:[45,63],arraywithreduct:[47,65],asin:[752,1059],asinh:[213,485,617,811,1188],assert_supports_inplac:938,atan2:[754,1061],atan:[753,1060],atanh:[755,1062],attribut:[5,71],backend:[84,115],bilinear_resampl:[160,315,438,574,737,1041],binary_cross_entropi:1169,bitwis:[7,73],bitwise_and:[214,367,486,618,812,1189],broadcast_to:[266,673,939],builder:92,cache_fn:940,cast:[129,267,404,539,674,909],ceil:[215,368,487,619,813,1190],choleski:[741,1048],choose_random_framework:102,citat:1227,clear_framework_stack:103,clear_mem_on_dev:[661,871],clip:[268,675,941],clip_matrix_norm:942,clip_vector_norm:943,clone:1089,clone_arrai:1090,clone_it:1091,clone_nest:1092,clonedit:1076,cloneditem:1075,clonednest:1077,closest_valid_dtyp:910,code:1273,comparison:[9,75],compil:[269,405,676,853,854],concaten:[130,270,406,540,677,944],constant:[199,353,471,603,797,1175],constant_pad:[271,541,678,945],contain:[81,82],container_typ:[679,946],content:1227,contribut:84,conv1d:[191,345,463,789,1156,1245],conv1d_transpos:[192,346,464,790,1157],conv1dtranspos:1246,conv2d:[193,347,465,599,791,1158,1247],conv2d_transpos:[194,348,466,792,1159],conv2dtranspos:1248,conv3d:[195,349,467,600,793,1160,1249],conv3d_transpos:[196,350,468,794,1161],conv3dtranspos:1250,convers:[15,23],convert:[187,785,1233],convert_dtyp:911,copy_arrai:[680,947],copy_nest:1120,cos:[216,488,620,814,1191],cosh:[217,489,621,756,815,1063,1192],cprint:1272,creat:84,creation:[200,354,472,604,798,1176],cross:[272,681,948],cross_entropi:1170,cumprod:[131,273,407,682,949],cumsum:[683,950],current_framework:104,current_framework_str:[684,951],data:[206,210,360,364,478,482,610,614,804,808,1182,1185],debug_mod:86,debugg:85,default_devic:872,default_dtyp:912,default_float_dtyp:913,default_int_dtyp:914,default_nod:1093,depthwise_conv2d:[197,351,469,601,795,1162],depthwiseconv2d:1251,design:84,dev:[120,257,529,662,873],dev_clon:874,dev_clone_arrai:875,dev_clone_it:876,dev_clone_nest:877,dev_dist:878,dev_dist_arrai:879,dev_dist_it:880,dev_dist_nest:881,dev_from_str:[121,258,530,663,882],dev_to_str:[122,259,531,664,883],dev_unifi:884,dev_unify_arrai:885,dev_unify_it:886,dev_unify_nest:887,dev_util:888,devclonedit:858,devcloneditem:857,devclonednest:859,devdistit:861,devdistitem:860,devdistnest:862,devic:[20,28,118,255,398,527,659,855],devmapp:864,devmappermultiproc:865,diagon:[235,380,507,639,833,1209],distribute_nest:1094,divid:1064,document:1227,dropout:[1163,1252],dtype:[132,274,408,542,685,905,915],dtype_bit:[133,275,409,543,686,916],dtype_from_str:[134,276,410,544,687,917],dtype_to_str:[135,277,411,545,688,918],ecosystem:93,einops_rearrang:953,einops_reduc:954,einops_repeat:955,einsum:[177,333,451,589,769,1138],elementwis:[211,365,483,615,809,1186],empti:[201,355,473,605,799,1177],equal:[218,490,622,816,956],erf:[447,757,1065],execute_with_gradi:[157,310,433,569,731,1028],exist:957,exp:[758,1066],expand_dim:[278,689,958],extra:[22,117,254,397,526,658,852],finfo:[208,362,480,612,806,1183],firstlayersiren:1237,flip:[242,386,514,646,840,1216],float_img_to_uint8_img:1042,floor:[279,690,959],floormod:[280,691,960],fomaml_step:1071,fork:84,fourier_encod:961,framework:100,full:[136,281,412,546,692,962],func:113,gather:[137,282,413,547,693,963],gather_nd:[138,283,414,548,694,964],geglu:1231,gelu:[343,460,778,1148,1232],gener:[30,48,125,261,400,534,667,929],get_all_arrays_in_memori:965,get_all_arrays_on_dev:889,get_framework:105,get_min_bas:966,get_min_denomin:967,get_num_dim:[695,968],get_referrers_recurs:969,glorotuniform:1238,gpu_is_avail:[890,1095],gradient:[32,50,156,309,432,568,730,1024],gradient_descent_upd:1029,gradient_imag:[161,316,439,575,738,1043],gym:94,handler:100,has_nan:970,ident:[139,284,415,549,696,971],iinfo:[209,363,481,613,807,1184],imag:[34,52,159,314,437,573,736,1040],index_nest:1121,indices_wher:[140,285,416,697,972],initi:1235,inplac:[11,77],inplace_arrays_support:973,inplace_decr:[141,286,417,550,698,974],inplace_incr:[142,287,418,551,699,975],inplace_upd:[143,288,419,552,700,976],inplace_variables_support:977,inv:[742,1049],invalid_dtyp:919,is_arrai:[144,289,420,553,701,978],is_float_dtyp:920,is_int_dtyp:921,is_vari:[158,311,434,570,732,1030],isfinit:[219,369,491,623,817,1193],isinf:[290,554,702,979],isnan:[220,370,492,624,818,1194],issu:84,ivi:[84,91,92,93,94,95,96,97,98,99,851,1269,1270,1273],ivymodul:[188,786],jax:116,keep:84,lamb:1262,lamb_upd:1031,lar:1263,lars_upd:1032,layer:[190,344,462,598,788,1155,1244],layer_norm:1173,layernorm:1259,leaky_relu:[779,1149],less:[221,371,493,625,819,1195],less_equ:[222,494,626,820,1196],linalg:[36,54,1047],linear:[163,234,318,379,441,506,577,638,740,832,1164,1208,1254],linear_resampl:[145,291,421,555,703,980],linspac:[146,292,422,556,704,981],list:84,log10:[223,495,627,821,1197],log1p:[224,496,628,822,1198],log2:[225,497,629,823,1199],log:[759,1067],logic:[38,56,167,323,445,581,747,1054],logical_and:[324,748,1055],logical_not:[226,372,498,630,824,1200],logical_or:[227,325,499,631,749,825,1056,1201],logspac:[147,293,423,557,705,982],loss:1168,lstm:1253,lstm_updat:1165,maml_step:1072,manipul:[241,385,513,645,839,1215],map:1122,map_nest_at_index:1123,map_nest_at_indic:1124,match_kwarg:983,math:[40,58,168,326,446,582,750,1057],matmul:[236,294,508,640,834,984,1210],matrix_norm:[164,319,442,578,743,1050],maximum:[706,985],mech:95,memori:96,meshgrid:[295,707,986],meta:[42,60,1070],method:[233,378,505,637,831,1207],min:[249,521,653,847,1223],minimum:[708,987],model:97,modul:[1256,1257,1269],multi:1074,multi_head_attent:1166,multi_index_nest:1125,multidevcontain:83,multidevit:868,multidevitem:867,multidevnest:869,multiheadattent:1255,multinodeit:1080,multinodeitem:1079,multinodenest:1081,multinomi:[170,328,449,584,762,1131],multiprocess:[709,988],mxnet:253,nativ:1269,neg:[228,373,500,632,826,1202],nest:1118,nested_indices_wher:1126,nested_map:1127,net:[184,341,458,596,776,1146],network:1269,neural:[184,341,458,596,776,1146],next:1227,node:[1074,1096],node_dist:1097,node_dist_arrai:1098,node_dist_it:1099,node_str:1100,node_to_str:1101,node_util:1102,nodedistit:1083,nodedistitem:1082,nodedistnest:1084,nodemapp:1086,nodemappermultiproc:1087,norm:[1172,1258],num_arrays_in_memori:989,num_arrays_on_dev:891,num_cpu_cor:892,num_gpu:[123,893,1103],numpi:396,nutshel:1227,one_hot:[148,424,558,710,990],ones:[202,356,474,606,800,991,1178],ones_lik:[203,357,475,607,801,1179],oper:[1,3,7,9,11,13,67,69,73,75,77,79],optim:[1260,1264],optimizer_upd:1033,overview:1227,percent_used_mem_on_dev:894,percent_used_mem_on_nod:1104,pinv:[320,744,1051],portabl:1273,print_all_arrays_in_memori:992,print_all_arrays_on_dev:895,profil:[119,256,399,528,660,870,1088],pull:84,queue_timeout:993,randint:[171,329,585,763,1132],random:[44,62,169,327,448,583,761,1130],random_crop:1044,random_norm:[172,330,586,764,1133],random_uniform:[173,331,587,765,1134],reduce_max:[178,334,452,590,770,1139],reduce_mean:[179,335,453,591,771,1140],reduce_min:[180,336,454,592,772,1141],reduce_prod:[181,337,455,593,773,1142],reduce_std:[338,1143],reduce_sum:[182,339,456,594,774,1144],reduce_var:[183,340,457,595,775,1145],reduct:[46,64,176,332,450,588,768,1137],reflect:[13,79],relu:[780,1150],repeat:[296,711,994],reptile_step:1073,request:84,reshap:[712,995],robot:98,round:[297,713,996],run:1270,scaled_dot_product_attent:1167,scatter_flat:[149,298,425,559,714,997],scatter_nd:[150,299,426,560,715,998],search:[243,387,515,647,841,1217],seed:[174,766,1135],sequenti:[1266,1267],set:[245,389,517,649,843,1219],set_breakpoint_debug_mod:87,set_debug_mod:88,set_default_devic:896,set_default_dtyp:922,set_default_float_dtyp:923,set_default_int_dtyp:924,set_default_nod:1105,set_exception_debug_mod:89,set_framework:106,set_min_bas:999,set_min_denomin:1000,set_nest_at_index:1128,set_nest_at_indic:1129,set_queue_timeout:1001,set_split_factor:[897,1106],set_tmp_dir:1002,set_with_grad:1034,sgd:1265,shape:[716,1003],shape_to_tupl:1004,shuffl:[175,767,1136],sigmoid:[781,1151],signatur:[233,378,505,637,831,1207],sin:[229,374,501,633,827,1203],sinh:[230,375,502,634,828,1204],siren:1241,slodget:1211,slogdet:[237,381,509,641,835],softmax:[186,461,782,1152],softplu:[783,1153],sort:[246,390,518,650,844,1220],sparse_cross_entropi:1171,split:[151,300,427,561,717,1005],split_factor:[898,1107],split_func_cal:[899,1108],sqrt:[231,376,503,635,829,1205],squeez:[152,301,428,562,718,1006],stable_divid:1007,stable_pow:1008,stack:[302,719,1009],stack_imag:[162,317,440,576,739,1045],standard:[66,84,198,352,470,602,796,1174],statist:[248,392,520,652,846,1222],stop_gradi:[312,435,571,733,1035],str_to_nod:1109,submodul:84,supports_inplac:1010,svd:[238,382,510,642,836,1212],swapax:[563,720,1011],tan:[760,1068],tanh:[232,377,504,636,784,830,1069,1154,1206],tensorflow:525,tile:[303,564,721,1012],tmp_dir:1013,to_dev:[124,260,532,665,900],to_ivi:[18,26],to_ivy_modul:[189,787,1234],to_list:[722,1014],to_n:[19,27],to_nod:1110,to_numpi:[723,1015],to_scalar:[724,1016],todo:84,torch:657,total_mem_on_dev:901,total_mem_on_nod:1111,tpu_is_avail:[533,666,902,1112],trace:[239,383,511,643,837,1213],train:1269,trainabl:1269,transpos:[153,304,429,725,1017],tree:1227,tril:[204,358,476,608,802,1180],try_else_non:1018,try_import_ivy_jax:107,try_import_ivy_mxnet:108,try_import_ivy_numpi:109,try_import_ivy_tf:110,try_import_ivy_torch:111,type:[206,210,360,364,478,482,610,614,804,808,1182,1185],uint8_img_to_float_img:1046,unifi:1113,unify_arrai:1114,unify_it:1115,unify_nest:1116,unset_debug_mod:90,unset_default_devic:903,unset_default_dtyp:925,unset_default_float_dtyp:926,unset_default_int_dtyp:927,unset_framework:112,unset_with_grad:1036,unstack:[154,305,430,565,726,1019],updat:84,used_mem_on_dev:904,used_mem_on_nod:1117,util:[250,393,522,654,848,1224],valid_dtyp:928,value_is_nan:1020,variabl:[313,436,572,734,1037],variable_data:[735,1038],vector_norm:[240,384,512,644,838,1214],vector_to_skew_symmetric_matrix:[166,322,444,580,746,1053],verbos:1271,vision:99,where:[306,727,1021,1227],why:1273,with_grad:1039,wrapper:113,write:1270,your:84,zero:[205,359,477,609,803,1181,1243],zero_pad:[307,566,728,1022],zeros_lik:[155,308,431,567,729,1023]}})