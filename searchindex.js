Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[836,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[389,0,0,"-"],creation_functions:[390,0,0,"-"],data_type_functions:[394,0,0,"-"],data_types:[398,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[391,2,1,""],tril:[392,2,1,""],zeros:[393,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[394,1,1,""],finfo:[396,2,1,""],iinfo:[397,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[394,3,1,""],bits:[394,3,1,""],eps:[394,3,1,""],max:[394,3,1,""],min:[394,3,1,""],smallest_normal:[394,3,1,""]},"ivy.functional.backends.numpy.core":{device:[436,0,0,"-"],general:[438,0,0,"-"],gradients:[472,0,0,"-"],image:[477,0,0,"-"],linear_algebra:[481,0,0,"-"],logic:[485,0,0,"-"],math:[486,0,0,"-"],random:[488,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[437,1,1,""],clear_mem_on_dev:[436,2,1,""],dev:[436,2,1,""],dev_from_str:[436,2,1,""],dev_to_str:[436,2,1,""],gpu_is_available:[436,2,1,""],num_gpus:[436,2,1,""],to_dev:[436,2,1,""],tpu_is_available:[436,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[437,3,1,""],start:[437,3,1,""],stop:[437,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[438,2,1,""],arange:[439,2,1,""],argmax:[440,2,1,""],argmin:[441,2,1,""],array:[442,2,1,""],asarray:[438,2,1,""],astype:[438,2,1,""],cast:[443,2,1,""],clip:[438,2,1,""],compile:[444,2,1,""],concatenate:[445,2,1,""],constant_pad:[438,2,1,""],container_types:[438,2,1,""],copy_array:[438,2,1,""],cumprod:[446,2,1,""],current_framework_str:[438,2,1,""],dtype:[447,2,1,""],dtype_bits:[448,2,1,""],dtype_from_str:[449,2,1,""],dtype_to_str:[450,2,1,""],equal:[438,2,1,""],floor:[438,2,1,""],floormod:[438,2,1,""],full:[451,2,1,""],gather:[452,2,1,""],gather_nd:[453,2,1,""],get_num_dims:[438,2,1,""],identity:[454,2,1,""],indices_where:[455,2,1,""],inplace_arrays_supported:[438,2,1,""],inplace_decrement:[456,2,1,""],inplace_increment:[457,2,1,""],inplace_update:[458,2,1,""],inplace_variables_supported:[438,2,1,""],is_array:[459,2,1,""],linear_resample:[460,2,1,""],linspace:[461,2,1,""],logspace:[462,2,1,""],matmul:[438,2,1,""],meshgrid:[438,2,1,""],multiprocessing:[438,2,1,""],one_hot:[463,2,1,""],ones_like:[464,2,1,""],round:[438,2,1,""],scatter_flat:[465,2,1,""],scatter_nd:[466,2,1,""],shape:[438,2,1,""],split:[467,2,1,""],squeeze:[468,2,1,""],to_list:[438,2,1,""],to_numpy:[438,2,1,""],to_scalar:[438,2,1,""],transpose:[469,2,1,""],unstack:[470,2,1,""],where:[438,2,1,""],zero_pad:[438,2,1,""],zeros_like:[471,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[473,2,1,""],is_variable:[474,2,1,""],stop_gradient:[475,2,1,""],variable:[476,2,1,""],variable_data:[472,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[478,2,1,""],gradient_image:[479,2,1,""],stack_images:[480,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[482,2,1,""],qr:[483,2,1,""],vector_to_skew_symmetric_matrix:[484,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[487,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[489,2,1,""],randint:[488,2,1,""],random_normal:[488,2,1,""],random_uniform:[488,2,1,""],seed:[488,2,1,""],shuffle:[488,2,1,""]},"ivy.functional.ivy":{array_api:[837,0,0,"-"],core:[874,0,0,"-"],nn:[1213,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[838,0,0,"-"],creation_functions:[839,0,0,"-"],data_type_functions:[843,0,0,"-"],data_types:[846,0,0,"-"],elementwise_functions:[847,0,0,"-"],function_and_method_signatures:[860,0,0,"-"],linear_algebra:[861,0,0,"-"],manipulation_functions:[864,0,0,"-"],searching_functions:[866,0,0,"-"],set_functions:[867,0,0,"-"],sorting_functions:[868,0,0,"-"],statistical_functions:[870,0,0,"-"],utility_functions:[871,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[838,4,1,""],nan:[838,4,1,""],pi:[838,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[840,2,1,""],tril:[841,2,1,""],zeros:[842,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[844,2,1,""],iinfo:[845,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[848,2,1,""],bitwise_and:[849,2,1,""],ceil:[850,2,1,""],cos:[851,2,1,""],cosh:[852,2,1,""],isfinite:[853,2,1,""],isnan:[854,2,1,""],less:[855,2,1,""],log1p:[856,2,1,""],log2:[857,2,1,""],logical_not:[858,2,1,""],sqrt:[859,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[862,2,1,""],vector_norm:[863,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[865,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[869,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[872,2,1,""],any:[873,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[875,0,0,"-"],compilation:[914,0,0,"-"],device:[916,0,0,"-"],dtype:[966,0,0,"-"],general:[990,0,0,"-"],gradients:[1087,0,0,"-"],image:[1103,0,0,"-"],linalg:[1110,0,0,"-"],logic:[1118,0,0,"-"],math:[1121,0,0,"-"],meta:[1137,0,0,"-"],multi_node:[1141,0,0,"-"],nest:[1185,0,0,"-"],random:[1197,0,0,"-"],reductions:[1204,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[876,2,1,""],builtin_add:[877,2,1,""],builtin_and:[878,2,1,""],builtin_bool:[879,2,1,""],builtin_contains:[880,2,1,""],builtin_deepcopy:[881,2,1,""],builtin_dir:[882,2,1,""],builtin_eq:[883,2,1,""],builtin_float:[884,2,1,""],builtin_floordiv:[885,2,1,""],builtin_ge:[886,2,1,""],builtin_getattr:[887,2,1,""],builtin_getattribute:[888,2,1,""],builtin_getitem:[889,2,1,""],builtin_gt:[890,2,1,""],builtin_int:[891,2,1,""],builtin_invert:[892,2,1,""],builtin_le:[893,2,1,""],builtin_lt:[894,2,1,""],builtin_mul:[895,2,1,""],builtin_ne:[896,2,1,""],builtin_neg:[897,2,1,""],builtin_or:[898,2,1,""],builtin_pos:[899,2,1,""],builtin_pow:[900,2,1,""],builtin_radd:[901,2,1,""],builtin_rand:[902,2,1,""],builtin_rfloordiv:[903,2,1,""],builtin_rmul:[904,2,1,""],builtin_ror:[905,2,1,""],builtin_rpow:[906,2,1,""],builtin_rsub:[907,2,1,""],builtin_rtruediv:[908,2,1,""],builtin_rxor:[909,2,1,""],builtin_setitem:[910,2,1,""],builtin_sub:[911,2,1,""],builtin_truediv:[912,2,1,""],builtin_xor:[913,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[915,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[916,1,1,""],DevClonedItem:[918,1,1,""],DevClonedIter:[919,1,1,""],DevClonedNest:[920,1,1,""],DevDistItem:[921,1,1,""],DevDistIter:[922,1,1,""],DevDistNest:[923,1,1,""],DevManager:[916,1,1,""],DevMapper:[925,1,1,""],DevMapperMultiProc:[926,1,1,""],MultiDev:[916,1,1,""],MultiDevItem:[928,1,1,""],MultiDevIter:[929,1,1,""],MultiDevNest:[930,1,1,""],Profiler:[931,1,1,""],clear_mem_on_dev:[932,2,1,""],default_device:[933,2,1,""],dev:[934,2,1,""],dev_clone:[935,2,1,""],dev_clone_array:[936,2,1,""],dev_clone_iter:[937,2,1,""],dev_clone_nest:[938,2,1,""],dev_dist:[939,2,1,""],dev_dist_array:[940,2,1,""],dev_dist_iter:[941,2,1,""],dev_dist_nest:[942,2,1,""],dev_from_str:[943,2,1,""],dev_to_str:[944,2,1,""],dev_unify:[945,2,1,""],dev_unify_array:[946,2,1,""],dev_unify_iter:[947,2,1,""],dev_unify_nest:[948,2,1,""],dev_util:[949,2,1,""],get_all_arrays_on_dev:[950,2,1,""],gpu_is_available:[951,2,1,""],num_arrays_on_dev:[952,2,1,""],num_cpu_cores:[953,2,1,""],num_gpus:[954,2,1,""],percent_used_mem_on_dev:[955,2,1,""],print_all_arrays_on_dev:[956,2,1,""],set_default_device:[957,2,1,""],set_split_factor:[958,2,1,""],split_factor:[959,2,1,""],split_func_call:[960,2,1,""],to_dev:[961,2,1,""],total_mem_on_dev:[962,2,1,""],tpu_is_available:[963,2,1,""],unset_default_device:[964,2,1,""],used_mem_on_dev:[965,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[916,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[916,3,1,""],da_tune_step:[916,3,1,""],dim_size:[916,3,1,""],ds_tune_step:[916,3,1,""],map:[916,3,1,""],repeated_config_check:[916,3,1,""],tune_step:[916,3,1,""],tuned:[916,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[925,3,1,""],map:[925,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[926,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[916,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[928,3,1,""],items:[928,3,1,""],keys:[928,3,1,""],shape:[928,3,1,""],values:[928,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[929,3,1,""],at_dev:[929,3,1,""],at_devs:[929,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[930,3,1,""],at_dev:[930,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[931,3,1,""],start:[931,3,1,""],stop:[931,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[966,1,1,""],DefaultFloatDtype:[966,1,1,""],DefaultIntDtype:[966,1,1,""],astype:[966,2,1,""],cast:[970,2,1,""],closest_valid_dtype:[971,2,1,""],convert_dtype:[972,2,1,""],default_dtype:[973,2,1,""],default_float_dtype:[974,2,1,""],default_int_dtype:[975,2,1,""],dtype:[976,2,1,""],dtype_bits:[977,2,1,""],dtype_from_str:[978,2,1,""],dtype_to_str:[979,2,1,""],invalid_dtype:[980,2,1,""],is_float_dtype:[981,2,1,""],is_int_dtype:[982,2,1,""],set_default_dtype:[983,2,1,""],set_default_float_dtype:[984,2,1,""],set_default_int_dtype:[985,2,1,""],unset_default_dtype:[986,2,1,""],unset_default_float_dtype:[987,2,1,""],unset_default_int_dtype:[988,2,1,""],valid_dtype:[989,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[966,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[966,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[966,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1014,2,1,""],abs:[991,2,1,""],all_equal:[992,2,1,""],arange:[993,2,1,""],arg_names:[994,2,1,""],argmax:[995,2,1,""],argmin:[996,2,1,""],array:[997,2,1,""],array_equal:[998,2,1,""],arrays_equal:[999,2,1,""],asarray:[990,2,1,""],assert_supports_inplace:[1000,2,1,""],broadcast_to:[1001,2,1,""],cache_fn:[1002,2,1,""],clip:[1003,2,1,""],clip_matrix_norm:[1004,2,1,""],clip_vector_norm:[1005,2,1,""],concatenate:[1006,2,1,""],constant_pad:[1007,2,1,""],container_types:[1008,2,1,""],copy_array:[1009,2,1,""],cross:[1010,2,1,""],cumprod:[1011,2,1,""],cumsum:[1012,2,1,""],current_framework_str:[1013,2,1,""],einops_rearrange:[1015,2,1,""],einops_reduce:[1016,2,1,""],einops_repeat:[1017,2,1,""],equal:[1018,2,1,""],exists:[1019,2,1,""],expand_dims:[1020,2,1,""],floor:[1021,2,1,""],floormod:[1022,2,1,""],fourier_encode:[1023,2,1,""],full:[1024,2,1,""],gather:[1025,2,1,""],gather_nd:[1026,2,1,""],get_all_arrays_in_memory:[1027,2,1,""],get_min_base:[1028,2,1,""],get_min_denominator:[1029,2,1,""],get_num_dims:[1030,2,1,""],get_referrers_recursive:[1031,2,1,""],has_nans:[1032,2,1,""],identity:[1033,2,1,""],indices_where:[1034,2,1,""],inplace_arrays_supported:[1035,2,1,""],inplace_decrement:[1036,2,1,""],inplace_increment:[1037,2,1,""],inplace_update:[1038,2,1,""],inplace_variables_supported:[1039,2,1,""],is_array:[1040,2,1,""],isinf:[1041,2,1,""],linear_resample:[1042,2,1,""],linspace:[1043,2,1,""],logspace:[1044,2,1,""],match_kwargs:[1045,2,1,""],matmul:[1046,2,1,""],maximum:[1047,2,1,""],meshgrid:[1048,2,1,""],minimum:[1049,2,1,""],multiprocessing:[1050,2,1,""],num_arrays_in_memory:[1051,2,1,""],one_hot:[1052,2,1,""],ones:[1053,2,1,""],ones_like:[1054,2,1,""],print_all_arrays_in_memory:[1055,2,1,""],queue_timeout:[1056,2,1,""],repeat:[1057,2,1,""],reshape:[1058,2,1,""],round:[1059,2,1,""],scatter_flat:[1060,2,1,""],scatter_nd:[1061,2,1,""],set_min_base:[1062,2,1,""],set_min_denominator:[1063,2,1,""],set_queue_timeout:[1064,2,1,""],set_tmp_dir:[1065,2,1,""],shape:[1066,2,1,""],shape_to_tuple:[1067,2,1,""],split:[1068,2,1,""],squeeze:[1069,2,1,""],stable_divide:[1070,2,1,""],stable_pow:[1071,2,1,""],stack:[1072,2,1,""],supports_inplace:[1073,2,1,""],swapaxes:[1074,2,1,""],tile:[1075,2,1,""],tmp_dir:[1076,2,1,""],to_list:[1077,2,1,""],to_numpy:[1078,2,1,""],to_scalar:[1079,2,1,""],transpose:[1080,2,1,""],try_else_none:[1081,2,1,""],unstack:[1082,2,1,""],value_is_nan:[1083,2,1,""],where:[1084,2,1,""],zero_pad:[1085,2,1,""],zeros_like:[1086,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1087,1,1,""],adam_step:[1089,2,1,""],adam_update:[1090,2,1,""],execute_with_gradients:[1091,2,1,""],gradient_descent_update:[1092,2,1,""],is_variable:[1093,2,1,""],lamb_update:[1094,2,1,""],lars_update:[1095,2,1,""],optimizer_update:[1096,2,1,""],set_with_grads:[1097,2,1,""],stop_gradient:[1098,2,1,""],unset_with_grads:[1099,2,1,""],variable:[1100,2,1,""],variable_data:[1101,2,1,""],with_grads:[1102,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1087,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1104,2,1,""],float_img_to_uint8_img:[1105,2,1,""],gradient_image:[1106,2,1,""],random_crop:[1107,2,1,""],stack_images:[1108,2,1,""],uint8_img_to_float_img:[1109,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1111,2,1,""],inv:[1112,2,1,""],matrix_norm:[1113,2,1,""],pinv:[1114,2,1,""],qr:[1115,2,1,""],svd:[1116,2,1,""],vector_to_skew_symmetric_matrix:[1117,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1119,2,1,""],logical_or:[1120,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1122,2,1,""],acosh:[1123,2,1,""],asin:[1124,2,1,""],atan2:[1126,2,1,""],atan:[1125,2,1,""],atanh:[1127,2,1,""],cosh:[1128,2,1,""],divide:[1129,2,1,""],erf:[1130,2,1,""],exp:[1131,2,1,""],log:[1132,2,1,""],sin:[1133,2,1,""],sinh:[1134,2,1,""],tan:[1135,2,1,""],tanh:[1136,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1138,2,1,""],maml_step:[1139,2,1,""],reptile_step:[1140,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1141,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1186,2,1,""],copy_nest:[1187,2,1,""],index_nest:[1188,2,1,""],map:[1189,2,1,""],map_nest_at_index:[1190,2,1,""],map_nest_at_indices:[1191,2,1,""],multi_index_nest:[1192,2,1,""],nested_indices_where:[1193,2,1,""],nested_map:[1194,2,1,""],set_nest_at_index:[1195,2,1,""],set_nest_at_indices:[1196,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1198,2,1,""],randint:[1199,2,1,""],random_normal:[1200,2,1,""],random_uniform:[1201,2,1,""],seed:[1202,2,1,""],shuffle:[1203,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1205,2,1,""],reduce_max:[1206,2,1,""],reduce_mean:[1207,2,1,""],reduce_min:[1208,2,1,""],reduce_prod:[1209,2,1,""],reduce_std:[1210,2,1,""],reduce_sum:[1211,2,1,""],reduce_var:[1212,2,1,""]},"ivy.functional.ivy.nn":{activations:[1214,0,0,"-"],layers:[1222,0,0,"-"],losses:[1235,0,0,"-"],norms:[1239,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1215,2,1,""],leaky_relu:[1216,2,1,""],relu:[1217,2,1,""],sigmoid:[1218,2,1,""],softmax:[1219,2,1,""],softplus:[1220,2,1,""],tanh:[1221,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1223,2,1,""],conv1d_transpose:[1224,2,1,""],conv2d:[1225,2,1,""],conv2d_transpose:[1226,2,1,""],conv3d:[1227,2,1,""],conv3d_transpose:[1228,2,1,""],depthwise_conv2d:[1229,2,1,""],dropout:[1230,2,1,""],linear:[1231,2,1,""],lstm_update:[1232,2,1,""],multi_head_attention:[1233,2,1,""],scaled_dot_product_attention:[1234,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1236,2,1,""],cross_entropy:[1237,2,1,""],sparse_cross_entropy:[1238,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1240,2,1,""]},"ivy.stateful":{activations:[1244,0,0,"-"],converters:[1247,0,0,"-"],initializers:[1249,0,0,"-"],layers:[1258,0,0,"-"],module:[1270,0,0,"-"],norms:[1272,0,0,"-"],optimizers:[1274,0,0,"-"],sequential:[1280,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1245,1,1,""],GELU:[1246,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1245,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1246,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1248,2,1,""]},"ivy.stateful.initializers":{Constant:[1249,1,1,""],FirstLayerSiren:[1251,1,1,""],GlorotUniform:[1252,1,1,""],KaimingNormal:[1249,1,1,""],Ones:[1254,1,1,""],Siren:[1255,1,1,""],Uniform:[1249,1,1,""],Zeros:[1257,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1251,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1252,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1249,3,1,""],create_variables:[1249,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1257,3,1,""]},"ivy.stateful.layers":{Conv1D:[1259,1,1,""],Conv1DTranspose:[1260,1,1,""],Conv2D:[1261,1,1,""],Conv2DTranspose:[1262,1,1,""],Conv3D:[1263,1,1,""],Conv3DTranspose:[1264,1,1,""],DepthwiseConv2D:[1265,1,1,""],Dropout:[1266,1,1,""],LSTM:[1267,1,1,""],Linear:[1268,1,1,""],MultiHeadAttention:[1269,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1259,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1266,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1267,3,1,""],get_initial_state:[1267,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1268,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1269,3,1,""]},"ivy.stateful.module":{Module:[1271,1,1,""]},"ivy.stateful.module.Module":{__init__:[1271,3,1,""],build:[1271,3,1,""],build_mode:[1271,3,1,""],built:[1271,3,1,""],check_submod_rets:[1271,3,1,""],get_mod_key:[1271,3,1,""],mod_depth:[1271,3,1,""],mod_height:[1271,3,1,""],mod_with_top_mod_key_chain:[1271,3,1,""],save_weights:[1271,3,1,""],show_mod_in_top_mod:[1271,3,1,""],show_structure:[1271,3,1,""],show_v_in_top_v:[1271,3,1,""],sub_mods:[1271,3,1,""],track_submod_call_order:[1271,3,1,""],track_submod_rets:[1271,3,1,""],v_with_top_v_key_chains:[1271,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1273,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1273,3,1,""]},"ivy.stateful.optimizers":{Adam:[1275,1,1,""],LAMB:[1276,1,1,""],LARS:[1277,1,1,""],Optimizer:[1278,1,1,""],SGD:[1279,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1275,3,1,""],set_state:[1275,3,1,""],state:[1275,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1276,3,1,""],set_state:[1276,3,1,""],state:[1276,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],step:[1278,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.sequential":{Sequential:[1281,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1281,3,1,""]},"ivy.verbosity":{cprint:[1286,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1285,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1274,1275,1276],"02886":1241,"100":[1141,1241,1283],"141592653589793":838,"2021":1241,"2102":1241,"360":[1121,1133,1135],"718281828459045":838,"754":[838,843,844,847,859],"999":[1087,1089,1090,1094,1274,1275,1276],"abstract":[916,931,1241,1274,1278],"boolean":[40,41,847,849,858,916,951,963,966,980,989,990,992,998,999,1032,1034,1035,1039,1040,1041,1073,1083,1087,1093,1118,1119,1120,1137,1138,1139,1141],"break":43,"case":[15,18,19,40,41,42,43,847,848,850,851,852,857,859,916,955,962,965,990,993,1058,1060,1061,1110,1113,1115,1141,1185,1188,1192,1241,1258,1269,1270,1271,1274,1278,1287],"catch":[990,1014],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,394,436,437,843,845,916,918,919,920,921,922,923,925,926,928,929,930,931,943,944,966,990,994,1045,1087,1101,1141,1185,1187,1194,1235,1237,1238,1241,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],"default":[15,18,19,40,41,42,43,839,840,841,842,861,862,863,864,865,868,869,871,872,873,914,915,916,925,926,933,934,938,939,940,941,942,945,946,947,948,955,958,959,960,965,966,973,974,975,976,990,992,993,995,996,1004,1005,1006,1007,1010,1011,1012,1023,1024,1025,1030,1032,1033,1042,1044,1045,1048,1050,1053,1056,1057,1060,1061,1064,1066,1068,1070,1071,1080,1082,1083,1087,1090,1092,1093,1094,1095,1096,1098,1102,1110,1113,1115,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1197,1198,1200,1201,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],"final":[40,41,43,990,1023,1043,1044,1141,1258,1269,1284],"float":[40,41,42,43,838,839,840,842,843,844,847,848,850,851,852,857,859,861,863,875,894,900,916,925,926,949,955,958,962,965,966,974,981,990,993,1004,1005,1007,1023,1024,1028,1029,1044,1062,1063,1064,1070,1071,1087,1089,1090,1092,1094,1095,1096,1103,1105,1109,1121,1129,1137,1138,1139,1140,1141,1197,1200,1201,1214,1216,1222,1230,1233,1234,1235,1236,1237,1238,1239,1240,1258,1266,1269,1272,1273,1274,1275,1276,1277,1278,1279],"function":[15,40,41,43,391,392,393,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,838,840,841,842,844,845,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,865,869,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,918,919,920,921,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1274,1277,1278,1279,1283,1284,1287],"import":[43,1241,1284,1287],"int":[40,41,42,43,390,391,392,393,488,839,840,841,842,843,844,845,861,862,863,864,865,868,869,871,872,873,875,894,900,914,915,916,938,939,940,941,942,945,946,947,948,953,954,960,966,975,977,982,990,995,996,1001,1006,1007,1011,1012,1015,1016,1017,1020,1023,1024,1025,1030,1033,1042,1043,1044,1052,1053,1057,1058,1060,1061,1066,1067,1068,1069,1072,1074,1075,1080,1082,1085,1087,1089,1090,1094,1103,1107,1108,1110,1113,1137,1138,1139,1140,1141,1185,1194,1197,1198,1199,1201,1202,1204,1206,1207,1208,1209,1210,1211,1212,1214,1219,1222,1223,1224,1225,1226,1227,1228,1229,1233,1235,1237,1238,1239,1240,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1272,1273],"long":[43,1222,1232],"new":[40,41,43,488,839,840,842,847,856,966,970,990,991,1001,1015,1016,1017,1020,1023,1024,1025,1026,1053,1058,1060,1061,1062,1063,1070,1071,1072,1087,1090,1092,1094,1095,1096,1103,1105,1107,1109,1121,1123,1127,1128,1134,1136,1141,1185,1195,1196,1197,1198,1239,1240,1241,1247,1248,1258,1268,1272,1273,1274,1275,1276,1277,1278,1279,1284,1287],"public":[990,1008],"return":[15,16,17,18,19,40,41,42,43,488,839,840,841,842,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,868,869,871,872,873,875,894,900,914,915,916,925,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,951,952,954,955,959,960,961,962,963,965,966,970,971,972,973,974,975,976,977,978,979,980,981,982,989,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1057,1058,1059,1060,1061,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1247,1248,1258,1267,1268,1274,1278,1283,1284,1287],"short":[43,1222,1232,1241,1287],"static":[40,41,914,915],"super":1141,"true":[40,41,42,438,444,472,475,488,489,847,853,854,858,861,863,868,869,871,872,873,914,915,916,990,992,1000,1002,1019,1023,1032,1034,1083,1084,1087,1090,1092,1093,1094,1095,1096,1098,1110,1113,1137,1138,1139,1140,1141,1185,1186,1193,1197,1198,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1222,1230,1235,1236,1237,1238,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],"try":[40,41,990,1081,1141],"var":[40,41,1137,1138,1139,1287],"while":[40,41,42,847,858,1141],AND:[847,849,871,872,1118,1119],But:1287,For:[43,847,848,850,851,852,857,859,990,993,1003,1072,1087,1093,1101,1110,1115,1121,1122,1241,1247,1248,1284,1287],Its:[1121,1125],NOT:[847,858],Not:838,One:[40,41,43,990,1016,1058,1197,1199,1287],Ones:[1241,1249],PRs:43,Such:[990,1008],That:1284,The:[15,16,17,18,19,40,41,42,43,839,841,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,900,914,915,916,925,926,932,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,955,958,959,960,961,962,965,966,970,971,972,977,978,979,980,989,990,993,997,998,1001,1002,1004,1005,1006,1007,1009,1010,1013,1014,1018,1023,1025,1026,1033,1036,1037,1038,1040,1042,1044,1046,1048,1050,1053,1054,1057,1058,1060,1061,1062,1063,1064,1067,1068,1069,1070,1071,1072,1075,1083,1086,1087,1089,1090,1092,1094,1095,1096,1098,1101,1103,1105,1107,1109,1110,1113,1115,1116,1121,1122,1124,1125,1129,1130,1131,1132,1133,1135,1137,1138,1139,1140,1141,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1284,1287],There:[43,1241,1284],These:[43,1241],Use:43,Used:[1185,1186,1193,1270,1271],Using:[1241,1242,1287],With:[40,41,1110,1113,1204,1206,1207,1208,1209,1210,1211,1212,1241,1283,1287],__array__:[990,997],__call__:[1258,1269,1270,1271],__del__:1141,__dict__:[1141,1284],__enter__:1141,__exit__:1141,__getitem__:1141,__getstate__:1141,__init__:[40,41,42,43,59,60,82,213,394,395,436,437,518,648,916,917,924,925,926,927,928,929,930,931,966,967,968,969,1087,1088,1141,1145,1152,1241,1244,1245,1246,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],__iter__:1141,__len__:1141,__next__:1141,__pow__:43,__repr__:1141,_assign_vari:1283,_axi:1141,_base:[1185,1186,1193],_compute_node_da_ratio:1141,_compute_node_strs_da:1141,_concat_unify_arrai:1141,_counter:1141,_cur_framework:[43,1141],_da_direct:1141,_da_directions_flip:1141,_da_step_tim:1141,_da_tim:1141,_da_tune_count:1141,_data:1141,_delta_da_dim_s:1141,_delta_sf:1141,_dict:1141,_dim_siz:1141,_first_da_tune_step:1141,_first_ns_tune_step:1141,_fn:1141,_forward:[1241,1283],_get_kalman_param:1287,_get_prior:1287,_get_some_model:1287,_handle_flat_arrays_in_out:43,_index:[1185,1186,1193],_input_queu:1141,_length:1141,_max_depth:1141,_max_node_dim_step_ratio:1141,_max_node_dim_step_s:1141,_max_split_factor_step_s:1141,_mean_unify_arrai:1141,_min_bas:[990,1071,1239,1240,1272,1273],_min_denomin:[990,1070],_min_node_dim_s:1141,_min_sf_tune_step:1141,_min_unit_node_tune_step:1141,_model:1287,_native_wrapp:43,_node_mapp:1141,_node_percent_mem:1141,_node_str:1141,_node_str_da_ratio:1141,_node_strs_da:1141,_node_strs_kei:1141,_node_strs_n:1141,_node_util:1141,_ns_step_tim:1141,_ns_time:1141,_ns_tune_count:1141,_num_nod:1141,_num_work:1141,_observed_config:1141,_output_queu:1141,_paramet:1283,_percent_mem_inc_per_sf:1141,_percent_mem_inc_per_unit_da_dim:1141,_percent_util_inc_per_unit_da_dim:1141,_ret_fn:1141,_safety_factor:1141,_save_dir:1141,_shift_da_split:1141,_shift_n:1141,_slice:1141,_step:[1274,1278],_sum_unify_arrai:1141,_timeout:1141,_tune:1141,_tune_da:1141,_tune_n:1141,_tune_step:1141,_unit_da_tune_count:1141,_unroll_step:1287,_with_node_mappig:1141,_worker:1141,_worker_class:1141,_worker_fn:1141,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,916,925,931,1141,1270,1271,1274,1278],abil:1241,abl:[40,41],about:[843,844,845],abov:[43,839,841,861,862,1197,1199],above_height:[40,41],abs:[294,438,567,698,861,863,990,1141],absolut:[40,41,990,991],abstractmethod:1141,accept:[15,43,847,858,1241],access:[40,41,43,1284],accord:[40,41,843,844,990,1007,1025,1060,1061,1080,1085],accordingli:[861,863,871,872,873],accur:[59,394,436,437,916,928,929,930,931,966,1087,1249,1251,1252,1254,1255,1257],aco:[786,1121],acosh:[786,1121],across:[40,41,916,925,926,935,936,938,939,940,941,942,948,958,959,990,995,996,998,999,1141,1185,1189],act:43,activ:[1215,1216,1217,1218,1219,1220,1221,1241,1245,1246],actual:1284,adam:[1087,1089,1090,1094,1241,1274,1276,1283],adam_step:1087,adam_upd:1087,adapt:[1087,1095,1274,1277],add:[40,41,43,1141,1235,1236,1237,1238,1239,1240,1241,1272,1273,1284],added:[43,990,1070,1071,1280,1281],adding:[43,990,1001],addit:[40,41,43,990,1015,1016,1017,1239,1240,1258,1268],addition:43,address:43,adher:43,adjac:[990,993],adopt:[43,990,1008],affect:[990,993],affin:[1272,1273],after:[847,859,990,1042,1087,1090,1091,1092,1094,1095,1096,1103,1104,1239,1240,1274,1275,1276,1277,1278,1279,1287],after_1:[990,1007,1085],after_n:[990,1007,1085],again:43,against:[40,41,1110,1113,1204,1206,1207,1208,1209,1210,1211,1212],agnost:[43,1241,1283,1284],aim:1287,algebra:1110,algorithm:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265,1287],align:[40,41,43,990,1001],aliv:[916,950,952,956,990,1027,1051,1055],all:[15,16,17,18,19,40,41,43,110,236,423,546,676,839,841,861,863,864,865,871,914,915,916,925,950,956,990,991,992,998,999,1008,1027,1033,1055,1069,1110,1115,1137,1138,1139,1140,1141,1185,1186,1187,1193,1194,1197,1198,1201,1204,1206,1207,1208,1209,1210,1211,1212,1222,1232,1241,1284,1287],all_depth:[40,41],all_equ:990,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1185,all_tru:[40,41],alloc:[43,839,841,916,1141],allow:[990,1043,1044,1045,1270,1271],allow_dupl:[990,1045],alon:[916,955,965,1141,1241],along:[40,41,43,488,861,863,864,865,868,869,871,872,873,916,939,940,941,942,945,946,947,948,960,990,1006,1011,1012,1025,1042,1043,1044,1057,1068,1072,1075,1082,1110,1113,1137,1138,1139,1140,1141,1197,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212],alongsid:[1283,1284],alpha:[1214,1216],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,847,850,916,1141],also:[40,41,43,990,993,1087,1090,1137,1138,1139,1140,1185,1186,1187,1193,1194,1222,1231,1241,1258,1268,1283],altern:1283,alwai:[40,41,43,1087,1093,1098],among:[40,41],amount:[916,962,1141,1241],angl:[847,852,1121,1122,1126],ani:[15,16,17,18,19,40,41,43,110,236,423,546,676,871,914,915,916,918,921,925,926,928,937,938,941,942,947,990,992,993,997,1014,1015,1016,1017,1018,1019,1032,1040,1045,1070,1071,1087,1091,1141,1185,1186,1189,1193,1194,1195,1196,1197,1201,1241,1247,1248,1270,1271,1283,1284,1287],anoth:[40,41,43,966,972,1241],another_backend:43,anyth:[43,1287],anywai:43,apart:43,api:[1241,1242],appear:[43,990,1020],append:[40,41,861,862,1141],appli:[15,18,19,40,41,990,1015,1016,1017,1087,1094,1095,1110,1116,1118,1119,1120,1137,1138,1139,1185,1189,1192,1194,1214,1215,1216,1217,1218,1219,1220,1221,1222,1231,1233,1234,1239,1240,1241,1244,1245,1246,1272,1273],applic:[1185,1189,1194,1222,1233,1234,1241,1287],approxim:[43,847,848,851,852,856,857,875,900,1214,1215],arang:[130,294,438,488,567,698,990,1043,1044],arbitrari:[40,41,916,945,946,948,1141],arc:[1121,1126],arcco:[1121,1122],arctan:[1121,1125],area:[847,848,1241],arg:[15,16,17,40,41,43,59,63,916,925,938,942,948,960,990,1015,1016,1017,1061,1141,1247,1248,1270,1271],arg_nam:990,arg_stateful_idx:[1270,1271],argmax:[130,438,567,698,990],argmin:[130,438,567,698,990],args_clon:1141,args_dist:1141,args_to_ivi:[15,1241],args_to_n:[15,1241],args_uni:1141,argsort:[107,233,420,543,673,868],argument:[15,16,17,18,19,40,41,42,43,59,63,914,915,916,925,926,938,942,948,990,993,994,1002,1014,1045,1061,1121,1122,1141,1185,1189,1247,1248,1270,1271],aris:[1241,1287],arithmet:[43,1204,1207,1210,1212],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:488,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,294,438,488,567,698,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873,894,900,916,934,935,936,939,940,941,942,945,946,947,948,950,952,956,960,961,966,970,976,981,982,990,991,992,993,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1030,1032,1033,1034,1035,1036,1037,1038,1040,1041,1042,1043,1044,1046,1047,1048,1049,1051,1052,1053,1054,1055,1057,1058,1059,1060,1061,1066,1068,1069,1072,1073,1074,1075,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1089,1090,1093,1094,1098,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1141,1185,1187,1194,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1258,1266,1267,1269,1274,1278,1283,1284],arrang:[990,1015],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,390,391,392,393,394,396,397,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873],array_api_methods_to_test:43,array_builtin:[43,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913],array_equ:[294,698,990],array_lik:[488,990,997],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,990],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1241],arraywithgener:[22,1241],arraywithgradi:[24,1241],arraywithimag:[26,1241],arraywithlinalg:[28,1241],arraywithlog:[30,1241],arraywithmath:[32,1241],arraywithmeta:[34,1241],arraywithrandom:[36,1241],arraywithreduct:[38,1241],arriv:[40,41,42],articl:1241,arxiv:1241,as_arrai:[40,41,990,1030,1066],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[436,438,447,916,934,966,973,974,975,976],as_tensor:438,as_vari:[40,41],as_zero:[40,41],asarrai:[438,990],ascend:[868,869],asin:[786,1121],asinh:[86,399,522,652,847],aspect:[1103,1108],assert:[40,41,990,1000,1141],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:990,associ:[43,1110,1117],assum:[847,851,1284,1287],astyp:[438,966],asynchron:[40,41,42],at_dev:[40,42,916,929,930],at_kei:[40,41],at_key_chain:[40,41],at_nod:1141,atan2:[786,1121],atan:[786,1121],atanh:[786,1121],attent:[43,1222,1233,1234,1258,1269],attribut:[0,6,40,41,843,844,845,990,1054,1086],audienc:[1241,1284],author:1241,automat:43,avail:[40,41,43,916,951,953,954,963,990,1016,1141],averag:[1087,1089,1090,1094,1137,1138,1139,1204,1207],average_across_step:[1137,1138,1139],avoid:[43,916,1141,1284],axes:[40,41,43,438,469,481,482,861,863,864,865,871,872,873,916,960,990,995,996,1007,1020,1074,1080,1085,1110,1113,1141,1204,1206,1207,1208,1209,1210,1211,1212],axes_length:[40,41,990,1015,1016,1017],axi:[40,41,438,440,441,445,446,452,460,461,462,467,468,470,861,862,863,864,865,868,869,871,872,873,916,918,921,928,939,940,941,942,945,946,947,948,960,990,995,996,1006,1007,1010,1011,1012,1020,1025,1042,1043,1044,1057,1068,1069,1072,1074,1075,1082,1085,1141,1197,1203,1204,1206,1207,1208,1209,1210,1211,1212,1214,1219,1235,1237,1238],axis0:[40,41,990,1074],axis1:[40,41,861,862,990,1074],axis2:[861,862],back:[43,1270,1271,1274,1278],backend:[15,17,19,40,41,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,916,951,954,963,966,972,980,989,990,1035,1039,1087,1090,1092,1094,1095,1096,1101,1141,1241,1242,1247,1248,1274,1275,1276,1277,1278,1279,1283,1284,1287],backend_nam:43,background:[1241,1284],backprop:1287,backward:[871,872,873,1283],band:[990,1023],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,394,436,437,438,462,847,856,857,875,900,916,918,919,920,921,922,923,925,926,928,929,930,931,966,990,1028,1044,1062,1071,1087,1141,1204,1205,1241,1244,1245,1246,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1287],basi:43,batch:[40,41,861,863,916,958,959,990,1023,1033,1103,1107,1110,1116,1137,1138,1139,1140,1141,1222,1231,1239,1240,1272,1273],batch_shap:[438,454,990,1033,1052,1103,1104,1105,1106,1107,1108,1109,1110,1117,1197,1198,1222,1232,1233,1234,1258,1267],batch_siz:[488,489,1141,1197,1198,1222,1223,1224,1225,1226,1227,1228,1229],bayesian:1287,becaus:[43,990,993],becom:[43,990,1003,1121,1126,1287],been:[990,1015,1016,1017,1197,1198],befor:[40,41,43,916,960,1137,1138,1139,1141,1185,1194,1204,1206,1207,1208,1209,1210,1211,1212,1222,1233,1234,1287],before_1:[990,1007,1085],before_n:[990,1007,1085],begin:[1185,1186,1193,1284],behaviour:[43,1287],behind:[1087,1090,1092,1094,1095,1096,1241],being:[40,41,43,990,993,1056,1064,1141],believ:43,belong:[40,41],below:[43,839,841,861,862,1241,1284,1287],below_depth:[40,41],benefit:1241,bernoul:[1222,1230,1258,1266],best:[43,990,1045,1241],beta1:[1087,1089,1090,1094,1274,1275,1276],beta2:[1087,1089,1090,1094,1274,1275,1276],beta:[1239,1240],between:[40,41,42,843,844,990,993,1110,1115,1185,1189,1197,1199,1235,1237,1238,1274,1276],bia:[1222,1231,1232,1258,1259,1260,1261,1262,1263,1264,1265,1268],bias_initi:[1258,1259,1260,1261,1262,1263,1264,1265,1268],bilinear:[1103,1104],bilinear_resampl:[166,348,477,610,771,1103],bilinearli:[1103,1104],binari:[847,849,1235,1236],binary_cross_entropi:1235,bit:[394,843,844,845,966,977,1103,1105,1109,1241],bitwis:[847,849],bitwise_and:[86,217,399,522,652,847],bitwise_oper:[0,7,8],block:[1241,1284],bool:[15,18,19,40,41,42,43,847,853,854,855,858,861,863,868,869,871,872,873,875,894,914,915,916,934,947,951,955,960,963,965,966,976,990,992,998,999,1011,1014,1018,1019,1023,1030,1032,1040,1045,1066,1068,1082,1083,1084,1087,1090,1091,1092,1093,1094,1095,1096,1098,1110,1113,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1197,1198,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1222,1230,1247,1248,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],both:[43,990,1010],bottom:1241,boundari:[40,41,1197,1201],branch:[43,914,915],brittl:43,broadcast:[40,41,43,847,849,855,861,863,871,872,873,875,894,900,990,1001,1018,1047,1048,1049,1057,1110,1113,1121,1126,1129,1204,1206,1207,1208,1209,1210,1211,1212],broadcast_to:[294,698,990],build:[1141,1241,1258,1269,1270,1271],build_mod:[1258,1269,1270,1271],builder:[43,1241],built:[916,990,993,1141,1258,1269,1270,1271],builtin:43,builtin_ab:[249,875],builtin_add:[249,875],builtin_and:[249,875],builtin_bool:[249,875],builtin_contain:[249,875],builtin_deepcopi:[249,875],builtin_dir:[249,875],builtin_eq:[249,875],builtin_float:[249,875],builtin_floordiv:[249,875],builtin_g:[249,875],builtin_getattr:[249,875],builtin_getattribut:[249,875],builtin_getitem:[249,875],builtin_gt:[249,875],builtin_int:[249,875],builtin_invert:[249,875],builtin_l:[249,875],builtin_lt:[249,555,685,875],builtin_mul:[249,875],builtin_n:[249,875],builtin_neg:[249,875],builtin_or:[249,875],builtin_po:[249,875],builtin_pow:[43,249,875],builtin_radd:[249,875],builtin_rand:[249,875],builtin_rfloordiv:[249,875],builtin_rmul:[249,875],builtin_ror:[249,875],builtin_rpow:[249,875],builtin_rsub:[249,875],builtin_rtruediv:[249,875],builtin_rxor:[249,875],builtin_setitem:[249,875],builtin_some_op:43,builtin_sub:[249,875],builtin_truediv:[249,875],builtin_xor:[249,875],busi:43,bypass:1284,cach:[916,932,990,1002],cache_fn:990,calcul:[40,41,42,43,847,848,851,852,856,857,859,875,900,1121,1129],call:[43,916,960,990,1056,1064,1081,1087,1091,1141,1185,1186,1189,1193,1258,1269,1270,1271,1274,1278,1284,1287],callabl:[40,41,914,915,916,925,926,960,990,1002,1014,1016,1045,1081,1137,1138,1139,1140,1141,1185,1189,1190,1191,1193,1194,1222,1233],can:[43,916,958,959,960,990,1058,1103,1105,1141,1241,1283,1284,1287],cancel_join_thread:1141,cannot:43,captur:1241,cast:[40,41,130,294,438,567,698,966,990,1006,1103,1105,1109],catch_except:[990,1014],categori:43,caus:43,ceil:[86,217,399,522,652,847,990,993],cell:[1222,1232,1258,1267],certain:[40,41,990,993,1043,1044],chain:[40,41,1137,1138,1139,1280,1281],chang:[43,916,990,1058,1141,1185,1187,1194,1241,1283],channel:[990,1023,1103,1105,1106,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],check:[15,16,17,18,19,40,41,43,916,955,965,966,971,980,989,990,1000,1019,1032,1040,1073,1083,1087,1093,1141,1185,1186,1193,1241,1284],check_nest:[1185,1193],check_shap:[40,41],check_submod_ret:[1270,1271],check_typ:[40,41],choic:[1241,1284],choleski:[775,1110],choos:[847,858,990,1084,1110,1115,1121,1126,1241],choose_random_framework:59,chosen:[40,41,990,993,1084],chunk:[916,958,959,960,1141],chunk_siz:[916,960,1141],circl:[1121,1122,1124],clark:1241,clear:[43,916,932,1141],clear_framework_stack:59,clear_mem_on_dev:[436,690,916],click:1241,clip:[40,41,294,438,698,990,1004,1005,1047,1049,1241],clip_matrix_norm:990,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,990],clipped_delta:1141,clone:[40,41,916,935,936,937,938,1141],clone_arrai:1141,clone_it:1141,clone_nest:1141,clonedit:1141,cloneditem:1141,clonednest:1141,close:[43,1103,1108,1121,1124,1141,1287],closest:[847,850,966,971],closest_valid_dtyp:966,code:[40,41,42,43,488,1241,1242,1283,1284],codebas:[916,958,959,1141,1241,1284,1287],codomain:[847,848,851,852,857,859],colab:1241,collect:[15,40,41,436,438,472,477,481,485,486,488,875,914,916,966,990,1087,1103,1110,1118,1121,1141,1185,1197,1204,1214,1222,1235,1239,1244,1258,1272,1274],color:[40,41,42,1285,1286],column:[990,1033],combin:[40,41,42,1103,1108,1241,1287],combined_batch_s:1141,come:1284,command:1241,comment:43,commit:1287,common:[40,41,43,1121,1126],common_key_chain:[40,41],commun:[43,1241,1284],communuti:43,compar:[40,41,868,869,990,992,998,999],comparison_oper:[0,9,10],compat:[43,847,849,855,861,863,871,872,873,875,894,900,990,1018,1058,1121,1129,1241,1287],compil:[294,438,698,1270,1271,1274,1275,1276,1277,1278,1279],compile_on_next_step:[1270,1271,1274,1275,1276,1277,1278,1279],complet:[40,41,43,1110,1115,1141],complex:[1284,1287],compliant:[847,858],compon:[990,1010],composit:43,comput:[40,41,847,849,855,858,861,863,875,894,916,960,990,1004,1005,1011,1012,1018,1046,1087,1089,1090,1091,1092,1094,1095,1096,1098,1100,1103,1106,1110,1111,1112,1113,1114,1115,1118,1119,1120,1121,1122,1124,1125,1126,1130,1131,1132,1133,1135,1185,1189,1204,1205,1206,1207,1208,1209,1210,1211,1212,1222,1223,1224,1225,1226,1227,1228,1229,1231,1233,1235,1236,1237,1238],concat:[40,41,916,945,946,947,948,960,990,1023,1141],concaten:[40,41,130,294,438,567,698,990,1023,1141,1241],concatten:[40,41,916,945,946,947,948,960,1141],condit:[438,914,915,990,1084,1185,1193],conditon:[1185,1193],config:[40,41,1141],config_list:1141,configur:[40,41],conflict:43,conform:43,conjunct:1284,connect:[1258,1268,1269],consid:[40,41,847,858,1110,1115,1283,1287],consist:[40,41,916,948,1141,1204,1205,1270,1271,1284],constant:[916,925,926,990,1007,1141,1185,1189,1235,1236,1237,1238,1239,1240,1249,1250,1254,1257,1270,1271,1272,1273,1284],constant_kwarg:1141,constant_pad:[294,438,567,698,990],constitu:[40,41],construct:[990,1075,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],constructor:[40,41,42,990,994,1280,1281],consum:[916,1141],cont_feat_dim:[1222,1233],contaienr:[40,41],contain:[15,18,19,42,43,839,840,841,842,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,871,872,873,875,894,900,916,935,939,960,966,970,990,991,995,996,1003,1004,1005,1008,1018,1032,1047,1049,1059,1070,1071,1087,1089,1090,1092,1094,1095,1096,1121,1129,1137,1138,1139,1140,1141,1197,1198,1204,1206,1207,1208,1210,1212,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[438,698,990],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[438,990,1050,1222,1233,1258,1269],context_dim:[1258,1269],contextmanag:[59,60],continu:[43,1141,1284],contract:[40,41,1204,1205],contribut:[1241,1242],contributor:[43,1241],control:1241,conv1d:[197,379,502,828,1222,1241,1258],conv1d_transpos:[197,379,502,828,1222],conv1dtranspos:[1241,1258],conv2d:[197,379,502,636,828,1222,1241,1258],conv2d_transpos:[197,379,502,828,1222],conv2dtranspos:[1241,1258],conv3d:[197,379,502,636,828,1222,1241,1258],conv3d_transpos:[197,379,502,828,1222],conv3dtranspos:[1241,1258],convent:[40,41,1204,1205],conver:[916,932,943,955,962,965,1141],convers:[16,17,18,19,40,41,1141,1241],convert:[15,16,17,18,19,40,41,43,916,943,944,966,972,978,979,990,1067,1078,1079,1103,1105,1109,1110,1117,1141,1185,1187,1194,1241,1248],convert_dtyp:966,convolut:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],cool:43,cooler:43,coordin:[990,1048,1121,1122,1124,1126],copi:[40,41,43,488,990,1009,1141,1185,1187],copy_arrai:[438,698,990],copy_nest:1185,core:[436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,918,919,920,921,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1241],corner:43,correct:[43,1241,1284],correctli:[40,41,43,1110,1113,1121,1126,1204,1206,1207,1208,1209,1210,1211,1212],correspond:[40,41,43,875,900,990,1006,1197,1198],cos:[86,399,522,652,847,990,1023,1121,1122,1135,1284],cosh:[86,399,522,652,786,847,1121],cosin:[847,851,852,1121,1122,1123,1128],cost:[1087,1089,1090,1092,1094,1095,1096,1137,1138,1139,1140],cost_fn:[1137,1140],could:1287,count:[40,41,864,865,871,872,873,1141,1204,1209,1211],cours:43,cprint:1285,cpu:[40,41,43,916,953,955,961,962,965,990,993,997,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1086,1141,1197,1198,1199,1200,1201,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1283,1284],creat:[40,41,839,840,842,916,925,926,990,993,997,1024,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1077,1086,1087,1100,1141,1197,1198,1199,1200,1201,1241,1242,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1287],create_if_abs:[40,41],create_vari:1249,creation:[40,41,42,43],creation_funct:[390,391,392,393,839,840,841,842],crop:[1103,1107],crop_siz:[1103,1107],cross:[294,698,990,1235,1236,1237,1238],cross_entropi:1235,cuda:[40,41,916,925,944,961,990,993,997,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1086,1141,1197,1198,1199,1200,1201,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],cumprod:[130,294,438,698,990],cumsum:[698,990],cumul:[990,1011,1012],current:[40,41,42,43,916,925,949,950,952,956,966,972,980,989,990,1013,1027,1035,1039,1051,1055,1141,1185,1186,1193,1241,1287],current_framework:59,current_framework_str:[438,698,990,1141],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1222,1223,1224,1225,1226,1227,1228],d_out:[1222,1223,1224,1225,1226,1227,1228],da_can_termin:1141,da_dim_s:[916,1141],da_direct:1141,da_tune_step:[916,1141],dai:1287,daniel:1241,data:[40,41,42,43,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,900,916,918,919,920,921,922,923,928,929,930,944,966,970,971,972,976,977,978,979,980,981,982,989,990,993,997,1018,1024,1033,1040,1053,1054,1058,1069,1073,1086,1087,1093,1101,1121,1129,1141,1222,1231,1241],data_format:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],data_type_funct:[394,396,397,843,844,845],dataset:[40,41],datatyp:[40,41,966,971,981,982],dcdw:[1087,1089,1090,1092,1094,1095],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1087,1094,1095,1274,1276,1277],decay_lambda:[1087,1094,1095,1274,1276,1277],decid:[40,41,1287],decompos:[1110,1111,1115],decomposit:[1110,1111,1115,1116],decor:43,decrement:[990,1036],dedic:[1087,1101,1247,1248],deep:[40,41,1241],deep_copi:[40,41],deeper:[916,938,942,948,1141,1185,1194,1241],deepli:[1185,1187],def:[43,60,82,213,395,518,648,917,924,927,967,968,969,1088,1141,1145,1152,1241,1250,1253,1256,1283,1284,1287],default_dev:43,default_devic:916,default_dtyp:[43,966],default_float_dtyp:966,default_int_dtyp:966,default_key_color:[40,41,42],default_nod:1141,default_rng:488,default_v:[990,1014],defaultdevic:[916,917],defaultdtyp:[966,967],defaultfloatdtyp:[966,968],defaultintdtyp:[966,969],defer:43,defin:[43,990,1010,1052,1054,1086,1197,1199],definit:43,degre:[1121,1133,1135],del:1141,delai:43,delet:43,delta:[1087,1089,1141],delta_dim_s:1141,delta_percent_mem:1141,delta_sf:1141,delta_util:1141,demo:1241,denomin:[990,1022,1029,1063,1070,1071,1239,1240,1272,1273],denot:43,dens:[1258,1268],depend:[43,847,848,851,852,856,857,868,869,875,900,990,1084,1110,1116,1241],depth:[40,41,438,463,916,938,942,948,990,1031,1052,1141,1185,1194,1270,1271],depth_cutoff:[40,41],depthwis:[1222,1229,1258,1265],depthwise_conv2d:[197,379,502,636,828,1222],depthwiseconv2d:[1241,1258],deriv:[1087,1089,1090,1092,1094,1095,1096,1185,1187,1194,1241,1270,1274,1278,1280],descend:[868,869,1110,1116],descent:[1087,1092,1274,1279],describ:[40,41,1204,1205],descript:[861,863],design:[1241,1242],desir:[40,41,916,961,966,970,990,993,997,1033,1034,1053,1054,1086,1103,1108,1141,1204,1206,1207,1208,1210,1212],desired_aspect_ratio:[477,480,1103,1108],desired_percent_increas:1141,detail:1287,detect:[40,41,1185,1186,1193],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,847,848,849,851,852,853,854,857,859,861,862,863,871,872,873,875,900,916,951,953,954,963,966,970,971,977,980,981,982,989,990,992,993,997,998,999,1032,1035,1039,1040,1073,1083,1087,1093,1121,1129,1137,1138,1139,1140,1141,1222,1233],dev:[40,41,42,43,123,288,436,438,439,442,452,453,454,461,462,463,464,465,466,471,488,489,560,690,916,919,920,922,923,925,926,929,930,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,955,956,957,958,959,960,961,962,965,990,993,997,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1086,1087,1102,1197,1198,1199,1200,1201,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],dev_clon:[40,41,916],dev_clone_arrai:916,dev_clone_it:916,dev_clone_nest:916,dev_dist:[40,41,916],dev_dist_arrai:916,dev_dist_it:916,dev_dist_nest:916,dev_from_str:[43,123,288,436,560,690,916],dev_mapp:916,dev_str:[40,41],dev_to_str:[123,288,436,560,690,916],dev_unifi:916,dev_unify_arrai:916,dev_unify_it:916,dev_unify_nest:916,dev_util:916,devclonedit:916,devcloneditem:916,devclonednest:916,devdistit:916,devdistitem:916,devdistnest:916,develop:[43,1241,1284,1287],deviat:[40,41,1197,1200,1204,1210,1239,1240,1272,1273],devic:[21,40,41,43,390,391,393,437,438,451,839,840,841,842,918,919,920,921,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,990,993,997,1024,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1086,1087,1102,1197,1198,1199,1200,1201,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281],devmanag:[916,924],devmapp:[916,926],devmappermultiproc:916,diag:[1110,1116],diagon:[100,226,413,536,666,839,841,861,990,1033],dict:[15,16,17,18,19,40,41,42,916,918,921,925,926,928,938,939,940,941,942,990,1015,1016,1017,1045,1137,1138,1139,1141,1185,1187,1188,1189,1192,1194,1247,1248],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,843,844,916,935,936,939,940,1110,1115,1141,1222,1231,1241,1284,1287],differenti:[1241,1284],dilat:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],dim:[40,41,43,990,1052,1103,1104,1108,1110,1116,1141,1258,1269],dim_siz:[40,41,916,1141],dimens:[40,41,42,839,841,861,862,863,864,865,871,872,873,916,947,990,1001,1006,1010,1015,1016,1017,1020,1023,1030,1042,1052,1057,1058,1068,1069,1072,1080,1082,1103,1107,1110,1113,1116,1137,1138,1139,1140,1141,1197,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1219,1222,1223,1224,1225,1226,1227,1228,1229,1232,1235,1237,1238,1258,1259,1260,1261,1262,1263,1264,1265,1268,1269],dimension:[40,41,488,861,863,871,872,873,990,1068,1069,1110,1116],direct:1141,directli:[43,1185,1194,1284,1287],directori:[990,1065,1076],discord:43,discret:[1235,1237],discuss:43,disk:[40,41,1103,1105],distanc:[990,993],distribut:[40,41,916,935,939,940,941,942,1141,1197,1198,1199,1200,1201,1222,1230,1258,1266,1270,1271],distribute_nest:1141,distributedarrai:[40,41],distrubt:[1235,1237],dive:[1241,1284],divid:[40,41,990,1068,1070,1121],dividend:[1121,1129],divis:[990,1022,1029,1063,1070,1071,1087,1089,1090,1094,1121,1129,1274,1275,1276],divisor:[1087,1089,1090,1094,1121,1129,1274,1275,1276],doc:1241,docstr:43,document:43,doe:[40,41,43,990,993,1068,1283],doesn:[1110,1115,1241],doing:43,domain:[847,848,851,852,857,859,1121,1122],don:[43,1241],done:43,door:1287,dot:[1110,1112,1222,1233,1234,1258,1269],down:1283,downscal:[990,1004,1005],drag:[1241,1287],draw:[1197,1198,1200,1201],drawn:[1197,1198,1199,1200,1201],drop:[1241,1287],dropout:[1222,1241,1258,1269],dropout_r:[1258,1269],ds_tune_step:916,dtype:[40,41,43,130,294,390,391,393,394,396,397,438,439,442,443,451,454,464,471,567,698,839,840,842,843,844,845,970,971,972,973,974,975,977,978,979,980,981,982,983,984,985,986,987,988,989,990,993,997,1024,1033,1052,1053,1054,1086],dtype_bit:[130,294,438,567,698,966],dtype_from_str:[43,130,294,438,567,698,966],dtype_in:[438,448,449,450,966,972,977,978,979,980,981,982,989],dtype_to_str:[130,294,438,567,698,966],duplic:[40,41,43],dure:[40,41,43,914,915,990,1081,1087,1089,1090,1094,1137,1138,1139,1140,1270,1271,1274,1275,1276,1278],dynam:[43,438,444,914,915],each:[40,41,42,43,847,848,849,850,851,852,853,854,855,856,857,858,859,875,894,900,916,925,926,935,936,937,938,939,940,941,947,959,960,990,991,992,1007,1018,1057,1068,1072,1075,1085,1087,1090,1092,1094,1095,1096,1103,1106,1110,1116,1121,1124,1129,1131,1132,1141,1185,1189,1197,1198,1204,1205,1222,1223,1224,1225,1226,1227,1228,1229,1230,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284],eager:1284,easi:1287,easili:1241,econom:1287,ecosystem:1241,edg:[990,1003,1007,1085],effect:[1087,1096],effective_grad:[1087,1096],effici:1287,einop:[40,41,990,1015,1016,1017],einops_rearrang:[40,41,990],einops_reduc:[40,41,990],einops_repeat:[40,41,990],einstein:[40,41,1204,1205],einsum:[40,41,183,367,490,626,808,1204],either:[40,41,43,847,857,990,1014,1045,1048,1050,1137,1138,1139,1140,1141,1258,1269,1270,1271,1284],eleg:1141,element:[40,41,43,488,839,841,847,848,849,850,851,852,853,854,855,856,857,858,859,864,865,871,872,873,875,894,900,916,937,941,947,966,970,990,991,993,995,996,998,999,1003,1004,1005,1011,1012,1018,1021,1022,1033,1034,1047,1049,1057,1059,1068,1079,1084,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1141,1204,1205,1207,1209,1211,1214,1215,1216,1217,1218,1219,1220,1221,1222,1230,1258,1266],elementwis:[40,41],elementwise_affin:[1272,1273],elementwise_funct:[847,848,849,850,851,852,853,854,855,856,857,858,859],elemtn:[1197,1198],elif:1141,els:[43,990,1000,1014,1019,1141],elsewher:[990,1084],emphas:1241,empti:[40,41,871,872,873,1110,1115,1141],enabl:[40,41,42,43,1241],encapsul:[843,845],encod:[990,1023,1103,1105],end:[990,993,1241,1284],engag:43,ensur:43,entir:[40,41,871,872,873,916,960,1141,1241,1258,1267],entri:[40,41,990,1043,1044,1068,1069],entropi:[1235,1236,1237,1238],enumer:1141,environ:1241,eps:[394,843,844],epsilon:[1087,1089,1090,1094,1235,1236,1237,1238,1239,1240,1272,1273,1274,1275,1276],equal:[40,41,438,567,698,847,853,861,862,868,869,990,992,998,999,1007,1068,1085,1121,1133,1135,1197,1201],equality_matrix:[990,992],equat:[40,41,1204,1205],equival:[847,858,861,863,990,993,1121,1135],erf:[486,786,1121],error:[40,41,43,916,990,1069,1121,1130,1141,1214,1215,1270,1271,1274,1278],essenti:43,etc:[40,41,43,916,961,990,993,997,1025,1026,1033,1043,1044,1052,1053,1054,1060,1061,1086,1141,1197,1198,1199,1200,1201,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1287],euclidean:[861,863],euler:838,evalu:[40,41,847,856,857,871,872,873,990,1048,1185,1186,1193],even:[43,1287],evenli:[40,41,990,993,1043,1044,1068],everi:[43,990,992,1287],exact:[40,41],exampl:[43,914,915,990,1003,1072,1110,1115,1241,1283,1284,1287],example_input:[438,444,914,915],exc_tb:1141,exc_typ:1141,exc_val:1141,exce:[990,1049],except:[40,41,44,47,871,872,873,990,993,1000,1006,1014,1081,1141],excess_s:1141,excit:[1241,1284],exclud:[59,61,990,993,1197,1201],exclus:[40,41,438,446,459,472,474,990,1011,1040,1087,1093,1197,1199],execut:[43,990,1081,1284],execute_with_gradi:[163,343,472,605,765,1087,1241,1283],exist:[40,41,990,1014,1141,1241,1274,1278,1287],exp:[786,1121],expand:[40,41,990,1020,1023],expand_dim:[40,41,294,698,990,1141],expect:[990,994],explain:[43,1284],explicitli:[43,1258,1267,1269,1270,1271,1284],expon:[43,875,900,990,1071],exponenti:[43,875,900,1121,1130,1131],expos:[990,997,1008],express:[847,851,990,1048],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1087,1091],eye:[1110,1112],fabian:1241,fabio:1241,factor:[916,925,958,959,960,1087,1089,1090,1094,1095,1110,1116,1141,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265,1274,1275,1276,1277],fail:43,falck:1241,fall:[1270,1271,1274,1278],fallback_to_non_compil:[1270,1271,1274,1278],fals:[15,18,19,40,41,42,59,66,67,68,69,70,436,438,446,447,459,467,470,472,473,474,481,482,847,853,854,858,861,863,868,869,871,872,873,916,934,947,955,960,965,966,973,974,975,976,990,992,1011,1014,1019,1023,1030,1040,1045,1066,1068,1082,1084,1087,1090,1091,1092,1093,1094,1095,1096,1110,1113,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1204,1206,1207,1208,1209,1210,1211,1212,1247,1248,1270,1271,1274,1275,1276,1277,1278,1279],fan_in:1249,fan_mod:1249,fan_out:1249,far:[1185,1186,1193,1283],faster:[914,915],favourit:[1241,1283],feasibl:1287,feat_dim:[1222,1233,1234],fed:[916,960,1141],feed:[916,960,1141],few:43,field:1287,file:[40,41,43,990,1065,1076,1270,1271],filepath:[40,41],fill:[40,41,839,840,842,990,1024,1053,1197,1199],fill_valu:[438,451,990,1024],filter:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265,1287],filter_s:[1258,1259,1260],filter_shap:[1258,1261,1262,1263,1264,1265],find:[40,41,43,1287],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,394,395,517,518,647,648,843],finish:[1241,1287],finit:[847,853],first:[40,41,43,488,847,849,855,861,862,914,915,916,947,990,998,1006,1010,1018,1043,1044,1072,1074,1087,1091,1110,1116,1137,1138,1139,1140,1141,1185,1186,1193,1197,1203,1204,1209,1211,1258,1269,1270,1271,1274,1278,1284,1287],firstlayersiren:[1241,1249],firstli:[1284,1287],fist:[916,960,1141],fit:[40,41,436,438,472,477,481,485,486,488,990,1057,1103,1108],fix:43,fkt:1287,flag:[40,41,43,1087,1093],flat:[40,41,43,990,1057,1060],flat_list:[40,41],flatten:[40,41,861,863,990,1023,1057,1204,1206,1207,1208,1210,1212],flatten_key_chain:[40,41,1270,1271],flexibl:[1241,1284],flip:[40,41,103,229,416,539,669,864],float32:[43,438,454,966,970,978,979,990,993,997,1033,1053,1054,1086],float_dtyp:[966,974,984],float_img_to_uint8_img:1103,floor:[294,438,698,990,1022,1141],floormod:[294,438,698,990],fluid:1287,folder:[43,1241],follow:[40,41,43,843,845,861,863,916,960,990,1036,1037,1038,1070,1071,1087,1090,1092,1094,1095,1096,1141,1185,1189,1194,1222,1233,1234,1241,1258,1268,1274,1278],followng:[843,844],fomaml_step:1137,forget:[1087,1089,1090,1094,1274,1275,1276],fork:[990,1050,1241,1242],forkserv:[990,1050,1141],form:[15,16,17,18,19,40,41,839,841,861,862,990,997,1087,1090,1092,1094,1095,1096,1185,1187,1194,1222],format:[40,41,43,916,934,966,970,972,976,990,993,997,1033,1053,1054,1086,1141,1204,1205,1241,1283,1284],format_fn:[40,41],format_key_chain:[40,41],forward:[1270,1271,1274,1278,1283],found:[40,41,42],fourier:[990,1023],fourier_encod:990,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,395,396,397,400,401,402,403,404,405,406,407,408,409,410,411,414,415,417,421,424,425,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,476,478,479,480,482,483,484,487,489,491,492,493,494,495,496,497,500,501,503,504,505,506,507,508,509,514,515,516,518,519,520,523,524,525,526,527,528,529,530,531,532,533,534,537,538,540,544,547,548,556,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,607,608,609,611,612,613,615,616,617,618,622,623,624,625,627,628,629,630,631,632,633,637,638,639,644,645,646,648,649,650,653,654,655,656,657,658,659,660,661,662,663,664,667,668,670,674,677,678,686,691,692,693,694,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,766,767,768,769,770,772,773,774,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,794,795,796,797,798,799,800,802,803,804,805,806,807,809,810,811,812,813,814,815,818,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,840,841,842,844,845,848,849,850,851,852,853,854,855,856,857,858,859,862,863,865,869,872,873,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1240,1241,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1286,1287],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1141,framewrk:[990,1050],free:43,freed:43,freeli:43,frequenc:[990,1023],from:[40,41,42,43,847,859,861,862,864,865,871,872,873,916,925,926,960,966,972,990,1014,1025,1026,1033,1058,1069,1077,1084,1087,1090,1094,1103,1107,1110,1115,1137,1138,1139,1140,1141,1185,1187,1194,1197,1198,1199,1200,1201,1204,1209,1211,1222,1230,1233,1241,1247,1248,1258,1266,1269,1274,1278,1283,1284],from_cal:[1270,1271],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,294,438,567,698,843,844,990,1110,1115,1241],full_matric:[1110,1116],fulli:[43,1241,1258,1268,1269,1283],func:[40,41,438,444,472,473,914,915,916,960,990,1002,1087,1091,1141],further:[43,1287],furthermor:1287,futur:1287,gain:1249,gamma:[1239,1240],gather:[40,41,130,294,438,567,698,990,1026],gather_nd:[40,41,130,294,438,567,698,990],gauss:[1121,1130],gaussian:[1214,1215],geglu:[1241,1244],gelu:[377,499,817,1214,1241,1244],gener:[23,40,41,43,436,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,488,914,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1093,1197,1199,1201,1202,1241,1274,1278],geometr:[990,1023],get:[40,41,43,843,844,845,916,925,926,934,949,950,955,959,962,965,966,976,977,990,994,1027,1028,1029,1056,1141,1241,1258,1267,1287],get_all_arrays_in_memori:990,get_all_arrays_on_dev:916,get_framework:59,get_initial_st:[1258,1267],get_min_bas:990,get_min_denomin:990,get_mod_kei:[1270,1271],get_num_dim:[438,698,990],get_referrers_recurs:990,getfullargspec:1141,gist:1241,give:[43,990,1058,1284],given:[40,41,43,864,865,916,949,955,958,959,960,962,965,966,970,990,993,997,1003,1011,1012,1026,1043,1044,1053,1054,1057,1060,1061,1068,1075,1080,1082,1086,1087,1089,1090,1092,1094,1095,1096,1110,1112,1117,1121,1122,1141,1185,1190,1191,1197,1200,1201,1203,1204,1207,1209,1210,1211,1212,1222,1223,1224,1225,1226,1227,1228,1229,1247,1248,1287],global:[40,41,42,916,925,926,933,958,959,960,966,973,974,975,990,1013,1028,1029,1056,1062,1063,1064,1070,1071,1087,1102,1141,1239,1240,1272,1273],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1241,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],good:43,googl:1241,got:[43,1241],gpu0:43,gpu2:43,gpu:[916,951,954,1141],gpu_is_avail:[436,916,1141],grad:[1241,1274,1278,1283],gradient:[25,40,41,473,474,475,476,916,960,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1106,1137,1138,1139,1140,1241,1274,1275,1276,1277,1278,1279,1283,1287],gradient_descent_upd:[1087,1137,1138,1139,1140],gradient_imag:[166,348,477,610,771,1103],gradienttrack:[1087,1088],graph:[1087,1090,1092,1094,1095,1096,1270,1271],greater:[40,41,990,993,1021,1069,1197,1201],green:[40,41,42,1285,1286],grid:[990,1048],group:[1103,1108],guid:[43,1241,1242,1287],gym:1241,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1287,half:[990,993,1141,1197,1201],hand:1241,handl:[40,41,42,43,914,915,916,932,934,943,944,955,962,965,1087,1090,1092,1094,1095,1096,1141,1274,1275,1276,1277,1278,1279],happen:43,has:[40,41,43,990,1072,1110,1115,1121,1125],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,990],hasattr:1141,have:[40,41,43,839,840,841,842,843,844,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,900,990,1006,1010,1015,1016,1017,1018,1024,1072,1087,1093,1101,1110,1116,1121,1129,1141,1241,1283,1284],haven:43,hdf5:[40,41,1270,1271],head:[1222,1233,1258,1269],head_dim:[1258,1269],height:[1103,1108],height_cutoff:[40,41],help:[43,59,394,436,437,916,928,929,930,931,966,1087,1241,1249,1251,1252,1254,1255,1257],here:[43,1241],hidden:[1222,1232,1258,1267],hierarch:[990,1008],hierarchi:[40,41],high:[40,41,488,1197,1199,1201],higher:[1087,1090,1092,1094,1095,1096,1110,1116],highest:[1197,1199],highest_util:1141,highest_util_nod:1141,highli:1241,highlight:1287,hint:43,hkt:1287,hold:[966,970,990,993,997,1060,1061],host:1241,hot:[990,1052],hour:43,how:[1241,1258,1269,1270,1271,1284,1287],howev:[43,1284],http:1287,hyperbol:[847,848,852,1121,1123,1127,1128,1134,1136,1214,1221],hypothet:[43,1287],icon:1241,idea:1241,ident:[40,41,43,130,294,438,567,698,990],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[838,843,844,847,859],if_exist:[40,41],ignor:[40,41,1274,1278],ignore_key_error:[40,41],ignore_miss:[1274,1278],ignore_non:[40,41],iii:43,iinfo:[81,212,394,517,647,843],imag:[27,478,479,480,990,1042,1104,1105,1106,1107,1108,1109,1222,1223,1224,1225,1226,1228,1229,1241,1287],image_dim:[1103,1107],imkkhk:1287,immedi:[1241,1284,1287],implement:[43,847,848,851,852,856,857,868,869,875,900,1241,1284,1287],in_featur:[1222,1231],inadvert:43,includ:[40,41,43,861,863,871,872,873,990,993,1032,1070,1071,1083,1185,1186,1197,1201,1258,1268,1269,1272,1273,1283],include_deriv:[1185,1187,1194],include_empti:[40,41],include_inf:[40,41,990,1032,1083],include_nest:[1185,1186],include_self:[40,41],inclus:[43,1197,1199],incom:[1222,1231],increas:[916,938,942,948,990,1007,1020,1085,1141,1185,1194],increasingli:1287,increment:[990,1037,1141],inde:1241,indent:[40,41,42],independ:[1197,1198],index:[40,41,438,488,868,869,990,995,996,1025,1026,1048,1069,1072,1185,1188,1190,1191,1192,1195],index_nest:1185,indic:[40,41,438,452,453,463,465,466,861,863,868,869,990,995,996,1025,1026,1034,1052,1060,1061,1185,1186,1188,1190,1191,1192,1193,1195,1196,1197,1198,1214,1219,1222,1223,1224,1225,1226,1227,1228,1229,1239,1240,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271],indices_wher:[130,294,438,698,990],indistinguish:[847,859],inevit:1287,inf:[40,41,861,863,990,1032,1041,1083,1121,1125],infer:[914,915,990,1030,1033,1058,1066,1103,1107,1110,1115,1284,1287],infin:[847,848,850,851,852,853,857,859,861,863,871,872,873,990,1041],infinit:[847,859],inform:[843,844,845,1087,1098],init_c:[1222,1232],init_h:[1222,1232],init_on_first_step:[1274,1278],initi:[40,41,42,43,59,394,436,437,916,928,929,930,931,966,1087,1141,1222,1232,1241,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1274,1278],initialz:[1270,1271],inner:[1137,1138,1139,1140],inner_batch_fn:[1137,1138,1139],inner_batch_shap:[1222,1231],inner_cost_fn:[1137,1138,1139],inner_grad_step:[1137,1138,1139,1140],inner_learning_r:[1137,1138,1139,1140],inner_optimization_step:[1137,1138,1139,1140],inner_v:[1137,1138,1139],innermost:[839,841,861,862],inp:1141,inplac:[40,41,990,1000,1035,1039,1073,1087,1090,1092,1094,1095,1096,1247,1248,1274,1275,1276,1277,1278,1279],inplace_arrays_support:[438,990],inplace_decr:[130,294,438,567,698,990],inplace_incr:[130,294,438,567,698,990],inplace_oper:[0,11,12],inplace_upd:[40,41,130,294,438,567,698,990,1247,1248],inplace_variables_support:[438,990],input:[15,18,19,40,41,42,43,839,841,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873,914,915,916,925,926,933,934,935,938,939,942,948,960,961,966,970,971,973,974,975,976,977,981,982,990,991,992,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1009,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1030,1032,1033,1034,1036,1037,1038,1040,1041,1042,1046,1047,1048,1049,1057,1059,1066,1067,1069,1072,1073,1074,1075,1077,1078,1079,1080,1082,1083,1085,1087,1091,1093,1098,1102,1103,1104,1105,1106,1107,1109,1110,1113,1115,1116,1118,1119,1120,1121,1123,1125,1127,1128,1129,1133,1134,1135,1136,1137,1138,1139,1140,1141,1197,1198,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1239,1240,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273,1284],input_ax:[916,960,1141],input_channel:[1258,1259,1260,1261,1262,1263,1264,1267,1268],input_queu:1141,inputs_split:1141,insert:[990,1020],insid:43,inspect:1141,inspir:1287,instal:1241,instanc:[15,16,17,18,19,40,41,43,488,875,894,900,916,925,1141,1247,1248,1280,1281],instead:[40,41,43,488,1204,1206,1207,1208,1209,1210,1211,1212,1287],int32:43,int64:[966,970,990,993,997,1033,1053,1054,1086],int_dtyp:[966,975,985],integ:[40,41,488,843,845,847,849,850,861,863,871,872,873,966,982,990,993,1021,1059,1068,1197,1199,1202],integr:1241,intend:43,inter:1241,interact:1241,interchang:[40,41,990,1074],interest:1241,interfac:[990,997,1284],intermedi:[40,41],intern:[40,41,916,1087,1101,1141,1185,1186,1193,1194,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1280,1281],interpol:[990,1042],intersect:[1121,1122],interv:[40,41,871,872,873,990,993,1003,1043,1044,1121,1124,1197,1201],introduc:1287,inv:[775,1110,1287],invalid:[871,872,873],invalid_dtyp:966,invers:[847,848,1110,1112,1114,1121,1122,1123,1124,1125,1127,1287],invert:[1110,1112,1114],invest:1287,investig:43,invoc:[914,915],irrespect:1241,is_al:1141,is_arrai:[130,294,438,567,698,990,1141],is_float_dtyp:966,is_int_dtyp:966,is_mean:1141,is_sum:1141,is_vari:[163,343,472,605,765,1087],isfinit:[86,217,399,522,652,847],isinf:[294,567,698,990],isinst:1141,isnan:[86,217,399,522,652,847],isnumer:1141,issu:[1241,1242],issue_numb:43,item:[15,19,40,41,875,887,888,916,925,926,928,935,937,939,941,947,966,973,990,1008,1031,1070,1071,1141,1185,1189,1190,1191,1194,1195,1196,1241,1270,1271,1283],iter:[15,16,17,18,19,40,41,42,914,915,916,919,920,922,923,925,926,929,930,937,939,940,941,942,947,960,990,992,1001,1006,1007,1033,1048,1053,1057,1058,1061,1066,1068,1072,1075,1080,1085,1141,1185,1186,1187,1189,1193,1194],iterbal:[916,937,941,947,1141],its:[488,916,960,990,1033,1058,1074,1080,1141,1241],itself:[43,1185,1194],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,918,919,920,921,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1285,1286],ivy_backend:[40,41],ivy_bay:1287,ivy_test:43,ivyfcmodel:1283,ivyh:[40,41,42],ivymodul:[194,825],jame:1241,jax:[43,1087,1093,1241,1287],jax_concat:1241,jnp:1241,join:[40,41,990,1006,1072,1141],journal:1241,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1241,1258,1267,1287],kaimingnorm:[1249,1253],kalman:1287,kalman_filt:1287,kalman_filter_step:1287,kalman_filter_upd:1287,keep:[40,41,916,961,990,1082,1141,1241,1242,1287],keep_inner_v:[1137,1138,1139],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1137,1138,1139],keepdim:[40,41,438,470,481,482,861,863,871,872,873,990,1082,1110,1113,1204,1206,1207,1208,1209,1210,1211,1212],kei:[15,16,17,40,41,42,43,875,880,916,928,990,1008,1137,1138,1139,1141,1185,1188,1192,1222,1233,1234,1241,1247,1248,1258,1269,1274,1278],kept:[40,41,42,1137,1138,1139],kera:1287,kernel:[1222,1232],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,916,925,926,938,942,948,990,994,1015,1016,1017,1045,1141,1185,1189,1270,1271],keyword_color_dict:[40,41,42],kind:[843,844,845,1287],kwarg:[15,16,17,40,41,42,59,63,916,925,938,942,948,990,1045,1141,1247,1248,1270,1271],kwarg_stateful_idx:[1270,1271],kwargs_clon:1141,kwargs_dist:1141,kwargs_uni:1141,label:[43,1235,1236,1237,1238],lamb:[1087,1094,1241,1274],lamb_upd:1087,lambda:[1141,1274,1277,1279,1283],lar:[1087,1094,1095,1241,1274],larger:[843,844,990,1003],largest:[40,41,843,844,845,990,995,1021],lars_upd:1087,last:[40,41,861,862,864,865,868,869,871,872,873,990,993,1010,1042,1068,1072,1110,1113,1116,1204,1209,1211,1214,1219,1222,1232,1258,1268],later:[40,41,990,1002],latest:[1258,1267],layer:[1087,1090,1092,1094,1096,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1239,1240,1241,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1287],layer_norm:1239,layernorm:[1241,1272],layerwis:[1087,1095,1274,1277],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1185,1186,1193],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1214,1215,1216],leaky_relu:[817,1214],learn:[1087,1090,1092,1094,1095,1096,1110,1115,1137,1138,1139,1140,1197,1203,1241,1274,1275,1276,1277,1278,1279,1284,1287],learnabl:[1239,1240,1272,1273],least:43,leav:[15,18,19,40,41,1185,1186,1187,1193,1194],left:[40,41,43,1110,1113,1204,1206,1207,1208,1209,1210,1211,1212,1241],leftmost:[40,41],len:1141,length:[40,41,42,990,993,1058,1069,1080],lenton2021ivi:1241,lenton:1241,less:[40,41,43,86,217,399,522,652,847,850,857,859,861,863,1141,1197,1201],less_util_node_str:1141,let:[1284,1287],level:1241,librari:[847,858,1241,1283,1287],lightweight:1241,like:[43,1087,1093,1197,1201,1241,1283,1284,1287],likewis:43,limit:[40,41,42,43,843,844,845,990,1003,1004,1005],linalg:[29,1111,1112,1113,1114,1115,1116,1117,1241],line:43,linear0:[1241,1283],linear1:1241,linear2:1283,linear:[990,1023,1042,1110,1214,1215,1216,1217,1222,1230,1241,1258,1259,1260,1261,1262,1263,1264,1265,1283],linear_algebra:[481,482,483,484,861,862,863],linear_resampl:[130,294,438,567,698,990],linearli:[990,1023],link:[43,1241],linspac:[130,294,438,567,698,990,993],list:[15,18,19,40,41,390,391,393,839,840,842,864,865,871,872,873,916,925,926,935,936,938,939,940,942,945,946,960,990,993,997,999,1048,1067,1068,1077,1082,1137,1138,1139,1141,1185,1186,1187,1189,1193,1194,1222,1223,1224,1225,1226,1227,1228,1229,1241,1242,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265],list_join:[40,41,42],list_stack:[40,41],liter:[861,863],littl:1284,load:[40,41],loaded_kwarg:1141,loader:1241,local:43,local_set:[990,1031],locat:[43,990,1041,1197,1198],log1p:[86,399,522,652,847],log2:[86,399,522,652,847],log:[786,847,856,990,1044,1121,1141,1235,1236,1237,1238],logarithm:[847,856,857,1121,1132],logic:[31,847,858,871,872,873,1119,1120,1241],logical_and:[358,783,1118],logical_not:[86,217,399,522,652,847],logical_or:[358,783,1118],logit:[1235,1238],logspac:[130,294,438,567,698,990],look:[43,1284,1287],loop:[1137,1138,1139,1140],loss:[1236,1237,1238,1241,1283],loss_fn:[1241,1283],lot:1284,low:[40,41,488,1197,1199,1201],lower:[40,41,43,839,841,990,1047,1197,1201],lower_depth:[1270,1271],lowest:[15,18,19,40,41,1185,1194,1197,1199],lstm:[1222,1232,1241,1258],lstm_updat:[43,1222],machin:[843,844,845,1110,1115,1197,1203,1241,1284,1287],made:43,mai:[847,858,868,869,990,993,1014,1018,1241,1284,1287],main:[839,841,861,862,990,1033,1241],mainli:1241,maintain:[43,868,869],make:[43,488,916,1141,1241,1284],maml:[1137,1138,1139],maml_step:1137,manag:[916,1141],manhattan:[861,863],mani:[40,41,43,990,1068,1241],manipulation_funct:[864,865],manner:[15,18,19,40,41,43,1185,1194],manual:[1185,1186,1193,1287],map:[40,41,42,916,925,990,1041,1141,1185,1190,1191,1194,1258,1269,1283],map_cont:[40,41],map_nest_at_index:1185,map_nest_at_indic:1185,map_sequ:[40,41],mapper:[916,925,926,1141],mark:43,mask:[1222,1233,1234],master:43,match:[40,41,990,1045],match_kwarg:990,math:[33,487,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1141,1241],mathbb:[1110,1117],mathbf:[1110,1117],mathemat:[838,861,863],matmul:[43,294,438,567,698,990,1287],matplotlib:1284,matric:[839,841,861,862,1222,1231],matrix:[40,41,839,841,861,862,990,992,1004,1046,1110,1111,1112,1113,1114,1115,1117,1222,1231,1258,1268],matrix_norm:[40,41,170,352,481,614,775,1110],matter:1241,max:[40,41,394,843,844,845,990,1004,1005,1016,1047,1060,1061,1141,1204,1206,1274,1276],max_batch_s:[40,41],max_chunk_s:[916,960,1141],max_depth:[40,41,916,920,923,930,938,942,948,990,1031,1141,1185,1194],max_dev_dim_step_ratio:916,max_freq:[990,1023],max_length:[40,41],max_node_dim_step_ratio:1141,max_norm:[40,41,990,1004,1005],max_split_factor_step_s:[916,1141],max_trust_ratio:[1087,1094,1274,1276],maxim:[1241,1284,1287],maximis:1241,maximum:[40,41,42,698,916,938,942,948,960,990,995,1003,1004,1005,1023,1087,1094,1141,1185,1194,1204,1206],mayb:[15,18,19],mdi:1141,mean:[40,41,488,916,945,946,947,948,960,990,1016,1137,1138,1139,1140,1141,1185,1189,1197,1200,1204,1207,1210,1212,1249,1283,1287],measur:[1222,1233,1258,1269],mech:1241,mechan:[1241,1287],medic:1287,member:43,memori:[916,932,955,960,962,965,1141,1222,1232,1241],mention:43,merg:43,merge_with_upstream:43,meshgrid:[294,438,698,990],messag:[1285,1286],meta:[35,1138,1139,1140,1241],method:[40,41,42,43,488,990,997,1008,1048,1060,1061,1087,1094,1095,1141,1185,1186,1193,1194,1241,1258,1269,1270,1271,1284],might:[990,1014,1287],min:[40,41,394,843,844,845,861,863,990,1016,1049,1060,1061,1070,1110,1115,1141,1204,1208],min_bas:[990,1071],min_denomin:[990,1070],min_dev_dim_s:916,min_node_dim_s:1141,min_sf_tune_step:[916,1141],min_unit_dev_tune_step:916,min_unit_node_tune_step:1141,mind:1241,mini:[1239,1240,1272,1273],minimum:[40,41,698,916,966,970,990,993,996,997,1003,1028,1029,1062,1063,1070,1071,1141,1204,1208],miss:[1274,1278],ml_framework:[990,993,1110,1115],mod:[990,1022],mod_depth:[1270,1271],mod_height:[1270,1271],mod_with_top_mod_key_chain:[1270,1271],mode:[40,41,481,483,914,915,916,945,946,947,948,960,1110,1115,1116,1141,1284],model:[1241,1283],modul:[40,41,42,59,990,1050,1141,1241,1242,1244,1245,1246,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273,1280,1281,1287],moment:[1087,1089,1090,1094,1274,1275,1276],more:[43,864,865,990,1072,1141,1241,1284,1287],more_util_node_str:1141,most:[40,41,43,1110,1115,1241,1287],move:[40,41,43,916,961,1141],much:[43,1241,1287],multi:[488,990,1050,1222,1233,1258,1269],multi_head_attent:1222,multi_index_nest:1185,multi_map:[40,41],multi_nod:1141,multidev:[916,927,928,929,948],multidevcontain:[40,41],multidevic:[916,925],multidevit:[916,919,922,925,926,930],multidevitem:[916,918,921],multidevnest:[916,920,923],multiheadattent:[1241,1258],multinod:[1141,1145],multinodecontain:1141,multinodeit:1141,multinodeitem:1141,multinodenest:1141,multinomi:[176,362,488,621,801,1197],multipl:[40,41,871,872,873,990,1045,1068,1110,1112,1204,1206,1207,1208,1209,1210,1212,1239,1240,1258,1268,1284],multipli:[40,41,990,1011,1204,1209],multiprocess:[40,41,42,438,698,916,925,990,1141],must:[40,41,42,43,839,840,841,842,847,848,849,850,851,852,853,855,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,900,916,945,946,947,948,960,990,993,1006,1008,1010,1018,1047,1049,1061,1072,1121,1126,1129,1141,1197,1202,1274,1278],mutabl:[1185,1187,1194],mutlidevic:[916,925],mutlinod:1141,mw_tm1:[1087,1090,1094],mx_concat:1241,mxn:[839,841,861,862],mxnet:[43,1241,1287],my_func:43,mymodel:1241,name:[43,914,915,1283],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1284],nan:[40,41,43,838,847,848,850,851,852,853,854,857,859,871,872,873,990,1032,1083],nativ:[15,17,18,19,40,41,43,916,932,934,943,944,955,962,965,966,971,978,979,1141,1241,1242,1247,1248],native_modul:[1247,1248],native_module_class:[1247,1248],nativearrai:[15,18,19,43,839,841,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,863,864,865,868,869,871,872,873,875,894,900,916,934,960,961,966,970,976,981,982,990,991,992,993,995,996,997,998,999,1001,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1025,1026,1030,1032,1033,1034,1041,1042,1043,1044,1046,1047,1048,1049,1052,1053,1054,1057,1058,1059,1060,1061,1066,1068,1069,1072,1074,1075,1077,1078,1079,1080,1082,1083,1084,1085,1086,1141,1185,1187,1194],natur:[847,856,1121,1132,1287],ncdhw:[1222,1227,1228,1258,1263,1264],nchw:[1222,1225,1226,1229,1258,1261,1262,1265],ncw:[1222,1223,1224,1258,1259,1260],ndarrai:[43,390,391,392,393,394,396,397,488,990,1078],ndhwc:[1222,1227,1228,1258,1263,1264],nearest:[990,1059],need:[43,990,1004,1005,1222,1224,1226,1228,1241,1258,1260,1262,1264,1287],neg:[40,41,847,853,861,863,864,865,871,872,873,1204,1209,1211,1214,1216],negative_slop:1249,neither:1141,nest:[15,16,17,18,19,40,41,42,916,938,942,948,990,997,1077,1137,1138,1139,1141,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1270,1271,1274,1275,1276,1277,1278,1279],nested_indices_wher:1185,nested_map:[1141,1185],network:[1222,1231,1241,1242,1244,1258,1270,1271,1287],neural:[1222,1241,1244,1258,1283],never:43,new_node_percent_mem:1141,new_node_util:1141,new_node_utils_kei:1141,new_std:[1239,1240,1272,1273],newli:[43,914,915,990,1001,1002],newlin:[40,41,42],newshap:[990,1001,1058],next:[843,844,1141,1270,1271,1274,1275,1276,1277,1278,1279],nhwc:[1222,1225,1226,1229,1258,1261,1262,1265],node:[40,41,1185,1186,1193],node_clon:1141,node_dist:1141,node_dist_arrai:1141,node_dist_it:1141,node_in:1141,node_mapp:1141,node_str:1141,node_to_str:1141,node_util:1141,nodedistit:1141,nodedistitem:1141,nodedistnest:1141,nodemanag:[1141,1152],nodemapp:1141,nodemappermultiproc:1141,noinspect:[43,917,967,968,969,1088,1141],non:[40,41,847,858,861,863,871,872,873,914,915,966,980,1270,1271,1274,1278,1284],none:[40,41,42,43,59,61,64,390,391,393,436,438,439,442,444,451,452,453,454,461,462,463,464,465,466,467,468,469,471,481,482,488,489,839,840,842,843,844,845,861,863,864,865,871,872,873,914,915,916,925,926,932,933,958,959,960,961,966,973,974,975,990,993,997,1013,1014,1019,1024,1025,1026,1031,1033,1035,1036,1037,1038,1039,1043,1044,1050,1052,1053,1054,1057,1060,1061,1062,1063,1068,1069,1070,1071,1080,1081,1086,1087,1090,1092,1094,1095,1096,1102,1103,1107,1110,1113,1115,1137,1138,1139,1140,1141,1185,1186,1189,1193,1194,1197,1198,1199,1200,1201,1204,1206,1207,1208,1209,1210,1211,1212,1222,1224,1226,1228,1231,1232,1233,1234,1239,1240,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],norm:[40,41,861,863,990,1004,1005,1110,1113,1240,1241,1273,1274,1276],normal:[1197,1200,1239,1240,1272,1273],normalized_idx:[1239,1240],normalized_shap:[1272,1273],notat:[40,41,1204,1205],note:[43,1110,1115],noth:[40,41,1284],notimplementederror:1141,now:[40,41,43,916,961,990,991,1141,1241,1258,1269,1270,1271,1283,1284,1287],np_concat:1241,np_finfo:394,ns_tune_step:1141,num:[438,461,462,990,1043,1044],num_arrai:[40,41],num_arrays_in_memori:990,num_arrays_on_dev:916,num_band:[990,1023],num_channel:[1258,1265],num_chunk:1141,num_chunks_floor:1141,num_class:[1197,1198],num_cpu_cor:916,num_gpu:[123,436,916,1141],num_head:[1222,1233,1258,1269],num_kei:[1222,1233,1234],num_lay:[1258,1267],num_or_size_split:[40,41,438,467,990,1068],num_output:1141,num_queri:[1222,1233,1234],num_sampl:[438,460,488,489,990,1042,1103,1104,1197,1198],num_task:[1137,1138,1139,1140],number:[40,41,42,838,843,844,845,847,850,871,872,873,914,915,916,952,953,954,966,977,981,982,990,993,1003,1007,1020,1023,1030,1033,1042,1043,1044,1047,1051,1057,1068,1075,1079,1083,1085,1110,1116,1137,1138,1139,1140,1141,1197,1198,1202,1204,1206,1207,1208,1210,1212,1222,1233,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1284,1287],numer:[43,847,850,853,854,855,858,875,894,900,990,1028,1029,1062,1063,1070,1071,1121,1129,1249],numhead:[1222,1233],numpi:[40,41,43,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,990,1078,1110,1115,1116,1204,1205,1241,1283,1284,1287],nwc:[1222,1223,1224,1258,1259,1260],obj:[40,41],object:[40,41,42,59,394,843,844,916,966,970,990,993,997,1087,1185,1188,1190,1191,1192,1195,1196,1197,1203,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271],object_in:[438,442,990,997],observ:1141,obvious:43,occupi:[843,844,845,990,1060,1061],off:[861,862,990,993],offer:1241,offset:[861,862,1239,1240],often:1284,old:[40,41],on_init:[1258,1269,1270,1271],onc:[43,916,960,1141,1197,1198,1241],one:[40,41,43,861,863,864,865,916,945,946,947,948,960,966,972,990,1033,1045,1052,1060,1061,1069,1072,1110,1113,1141,1204,1205,1206,1207,1208,1209,1210,1211,1212,1241,1284,1287],one_hot:[130,438,567,698,990],onearrai:[990,1020],ones:[40,41,77,208,390,513,643,839,990,1033,1052,1054,1241],ones_lik:[130,294,438,567,698,990],ongo:43,onli:[40,41,43,488,847,858,864,865,916,1110,1115,1141,1185,1186,1187,1193,1274,1275,1276,1277,1278,1279,1283,1284],onlin:[43,1241],onto:[916,945,946,961,1141,1185,1189,1194],oom:[916,1141],open:[990,993,1197,1201,1241,1287],opencv:1284,oper:[40,41,990,1000,1015,1016,1017,1043,1044,1073,1087,1090,1092,1094,1095,1096,1118,1119,1120,1222,1223,1224,1225,1226,1227,1228,1229,1231,1241,1242],operand:[40,41,847,848,850,851,852,857,859,1204,1205],oppos:[990,1023],optim:[916,1087,1090,1092,1094,1095,1096,1137,1138,1139,1140,1141,1241,1275,1276,1277,1279,1283,1287],optimizer_upd:1087,option:[15,18,19,40,41,42,43,390,391,393,839,840,842,861,863,864,865,871,872,873,914,915,916,925,926,934,938,939,940,941,942,945,946,947,948,955,958,959,960,961,965,966,971,976,980,989,990,992,993,995,996,997,1004,1005,1006,1011,1013,1014,1023,1024,1025,1026,1030,1032,1033,1040,1042,1043,1044,1045,1048,1050,1052,1053,1054,1057,1060,1061,1064,1066,1068,1069,1070,1071,1072,1080,1082,1083,1086,1087,1090,1092,1093,1094,1095,1096,1098,1103,1107,1110,1113,1115,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1197,1198,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1219,1222,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284],ord:[861,863,1110,1116],order:[40,41,42,43,861,863,864,865,868,869,1087,1090,1092,1094,1095,1096,1110,1113,1137,1138,1139,1280,1281],ordered_node_util_kei:1141,org:1287,organ:43,origin:[40,41,42,990,1054,1058,1086,1110,1113],other:[40,41,43,875,877,878,883,885,886,890,892,893,894,895,896,898,900,901,902,903,904,905,907,908,909,911,912,913,914,915,990,992,993,1033,1087,1091,1197,1201,1241,1283,1284,1287],other_i:[43,875,894,900],otherwis:[15,16,17,18,19,40,41,847,853,854,861,863,871,872,873,916,933,966,973,974,975,990,1000,1080,1081,1084,1087,1093,1098,1102,1137,1138,1139,1141,1204,1206,1207,1208,1210,1212],our:[43,1241,1287],out:[43,488,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,990,993,1121,1125,1222,1230,1232,1241,1258,1266],out_feat_dim:[1222,1233],out_featur:[1222,1230,1231],out_i:[847,853,854],outdat:1287,outer:[1137,1138,1139,1140],outer_batch_fn:[1137,1138,1139],outer_batch_shap:[1222,1231],outer_cost_fn:[1137,1138,1139],outer_v:[1137,1138,1139],outlin:1284,output:[40,41,43,839,840,842,864,865,916,925,926,960,990,993,1002,1024,1033,1057,1075,1087,1091,1121,1126,1141,1197,1199,1200,1201,1222,1224,1226,1228,1230,1232,1233,1234,1241,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269],output_ax:[916,960,1141],output_axi:1141,output_channel:[1258,1259,1260,1261,1262,1263,1264,1267,1268],output_queu:1141,output_shap:[1222,1224,1226,1228,1258,1260,1262,1264],outsid:[990,1003],over:[40,41,861,863,871,872,873,1110,1113,1197,1201,1204,1206,1207,1208,1210,1212,1239,1240,1272,1273],overal:1284,overflow:[990,993],overhead:1284,overrid:[990,1052,1054,1086],overriden:[1274,1278],overwrit:[40,41,916,960,1141],overwrite_at_key_chain:[40,41],own:[1241,1284,1287],packag:[43,1284],pad:[990,1007,1023,1085,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],pad_width:[438,990,1007,1085],page:1241,pair:[1222,1234],parallel:[916,925,926,1141],parallelis:[916,925,926,1141],param:[40,41,42,438,452,453,916,960,990,991,1025,1026,1052,1053,1141,1270,1271,1283],paramet:[15,16,17,18,19,40,41,42,43,861,862,875,894,900,914,915,916,925,926,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,955,958,959,960,961,962,965,966,970,971,972,976,977,978,979,980,981,982,989,990,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1036,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1053,1054,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1098,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],parameter:[1197,1200,1201],pardo:1241,pars:[990,1008],part:[839,841,1087,1090,1092,1094,1095,1096,1121,1125,1241,1270,1271,1284],partial:[40,41,43,1270,1271],particl:1287,particular:[43,1287],pass:[40,41,42,43,916,925,960,966,971,990,1002,1087,1101,1137,1138,1139,1141,1247,1248,1270,1271,1274,1278,1280,1281],pattern:[40,41,990,1015,1016,1017],peopl:43,per:[916,1141,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],percent_used_mem_on_dev:916,percent_used_mem_on_nod:1141,percentag:[916,955,1141],perf_count:1141,perform:[40,41,43,871,872,873,916,990,995,996,1011,1015,1016,1017,1036,1037,1038,1042,1043,1044,1087,1090,1092,1094,1095,1096,1103,1104,1137,1138,1139,1140,1141,1185,1190,1191,1204,1206,1207,1208,1209,1210,1211,1212,1214,1219,1222,1230,1232],period:43,permissable_step:1141,permit:43,permut:[488,990,1074,1080],perpendicular:[990,1010],person:[43,1241],physci:1287,pickl:[40,41,1141],pickle_filepath:[40,41],pinv:[352,775,1110],pip:1241,pipelin:1283,pkk:1287,pkkm1:1287,pkm1km1:1287,place:[40,41,43,839,840,842,916,961,990,1020,1024,1036,1037,1038,1141,1274,1275,1276,1277,1278,1279],placehold:[43,1185,1194],pleas:[43,488,1110,1115],point:[43,838,839,840,842,843,844,847,848,850,851,852,857,859,861,863,966,981,990,993,1121,1129],popul:[40,41,1197,1198],popular:1287,population_s:[488,489,1197,1198],portabl:[1241,1242],posit:[15,16,17,843,844,847,853,871,872,873,916,938,942,948,990,991,993,1020,1023,1141,1197,1202,1247,1248],possibi:[40,41],possibl:[43,990,1045,1077,1103,1108,1287],post:[1239,1240],post_shap:[40,41],power:[43,875,900,906,990,1028,1062,1071,1249],practic:1241,pre:[916,1141,1241],pre_shap:[40,41],precis:[843,844,847,859],pred:[1235,1236,1237,1238],predict:[1235,1236,1237,1238,1287],preprint:1241,present:[40,41],preserv:[40,41,42,864,865,1087,1098],preserve_typ:[40,41,472,475,1087,1098],press:1241,prevent:[43,1087,1089,1090,1094,1141,1274,1275,1276],prevet:43,previou:[1087,1090,1094],previous:[990,1002],prime:1241,print:[40,41,42,916,956,990,1055,1241,1283],print_all_arrays_in_memori:990,print_all_arrays_on_dev:916,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1274,1278],prob:[488,489,1197,1198,1222,1230,1258,1266],probabl:[1197,1198,1222,1230,1258,1266],problem:[43,1287],process:[43,916,925,926,955,965,990,1050,1141],process_specif:[916,955,965,1141],prod:[40,41,990,1016],produc:[916,925,926,1141],product:[40,41,990,1010,1011,1046,1204,1205,1222,1233,1234,1258,1269],profil:[123,288,436,560,690,916,1141],progress:43,project:[1241,1283,1284,1287],promot:[43,847,848,849,851,852,857,859,861,863,875,900,1121,1129],prompt:1241,properli:43,properti:[40,41,394,916,928,1141,1270,1271,1274,1275,1276,1277,1279],provid:[40,41,43,864,865,871,872,873,914,915,916,933,966,973,974,975,980,989,990,1014,1052,1054,1061,1086,1087,1090,1092,1094,1095,1096,1102,1141,1241,1258,1267,1274,1275,1276,1277,1278,1279,1284],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1110,1114],pull:[1241,1242],pure:[40,41,1241,1287],purpos:[43,1287],put:1141,pybroadexcept:1141,pyprotectedmemb:1141,pyshadowingbuiltin:43,pyshadowingnam:[917,967,968,969,1088,1141],python:[40,41,916,955,965,990,993,1141,1241],pytorch:[1087,1090,1092,1094,1095,1096,1110,1115,1241,1274,1275,1276,1277,1278,1279,1283,1284,1287],pyunresolvedrefer:1141,quadrant:[1121,1126],qualiti:43,queri:[40,41,875,889,910,916,949,959,1141,1222,1233,1234,1258,1269],query_dim:[1258,1269],query_kei:[40,41],queue:[40,41,42,916,925,926,990,1056,1064,1141],queue_class:[916,925,926,1141],queue_load_s:[40,41,42],queue_timeout:[40,41,42,990,1141],quick:[488,1241],quickli:[43,1283],radian:[847,851,1121,1122,1124,1126,1133,1135],rai:[1121,1122],rais:[40,41,43,871,872,873,875,900,990,1000,1028,1062,1069,1071,1081,1141,1270,1271,1274,1278],ram:[916,955,962,965,1141],randint:[176,362,488,621,801,1197],random:[37,40,41,489,1198,1199,1200,1201,1202,1203,1241],random_crop:1103,random_norm:[176,362,488,621,801,1197],random_uniform:[176,362,488,621,801,1197],randomli:[488,1103,1107,1222,1230,1258,1266],rang:[488,990,993,1043,1044,1121,1126,1141,1241,1283,1287],rank:[861,863,871,872,873,990,1007,1082,1085],rate:[1087,1090,1092,1094,1095,1096,1137,1138,1139,1140,1258,1269,1274,1275,1276,1277,1278,1279],rather:[40,41,43,916,960,990,993,1040,1087,1093,1141],ratio:[916,1087,1094,1103,1108,1141,1274,1276],raw:[40,41,1110,1115],raw_delta:1141,reach:[43,916,938,942,948,1141,1185,1194],read:[40,41],readi:[1141,1283],real:[1121,1122,1125],realiti:1284,rearrang:[40,41,990,1015,1017],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1137,1139],receiv:[43,916,925,926,990,994,1045,1141,1258,1268],receivess:[916,1141],receivng:[1137,1140],recev:[1137,1138,1139],recognit:1287,recommend:[847,858,1241],rectifi:[1214,1216,1217],recurr:[1222,1232],recurrent_bia:[1222,1232],recurrent_kernel:[1222,1232],recurs:[40,41,1185,1186,1187,1193,1194],redefin:43,reduc:[40,41,871,872,873,916,960,990,1016,1110,1115,1141,1204,1206,1207,1208,1209,1210,1211,1212],reduce_max:[40,41,183,367,490,626,808,1204],reduce_mean:[40,41,183,367,490,626,808,1204,1241,1283],reduce_min:[40,41,183,367,490,626,808,1204],reduce_prod:[40,41,183,367,490,626,808,1204],reduce_std:[40,41,367,1204],reduce_sum:[40,41,183,367,490,626,808,1141,1204],reduce_var:[40,41,183,367,490,626,808,1204],reduct:[39,40,41,438,465,466,871,872,873,990,1016,1060,1061,1205,1206,1207,1208,1209,1210,1211,1212,1241],refactor:43,refer:[43,847,856,871,872,873,1087,1089,1090,1110,1117,1258,1268,1287],reflect:43,reflected_oper:[0,13,14],regard:[916,1141],regardless:[40,41,914,915],register_paramet:1283,reimplement:1287,rel:[861,862,864,865,868,869,1087,1090,1092,1094,1095,1096],rel_slice_obj:1141,relat:43,relev:[1274,1275,1276,1277,1278,1279],relu:[817,1214,1215,1216,1241,1283],remain:[43,990,1058,1185,1189],remaind:[40,41,990,1022,1068],remov:[40,41,43,861,862,990,1069,1137,1138,1139],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,864,865],rep:[990,1075],repeat:[40,41,43,294,698,990,1017,1075,1141,1284],repeated_config_check:[916,1141],repeatedli:[1185,1192],repetit:[40,41,990,1057,1075],replac:[40,41,43,488,489,990,1003,1060,1061,1197,1198],repo:[43,1241],repositori:43,repres:[43,847,848,852,966,972,977,1222,1231],represent:[40,41,42,43,838,843,844,845,847,849,916,943,944,966,972,978,979,990,1067,1077,1141],reptil:[1137,1140],reptile_step:1137,request:[1241,1242],requir:[43,847,859,914,915,966,970,990,993,997,1247,1248],resampl:[990,1042],reserv:43,reshap:[40,41,43,488,698,990],reshape_lik:[40,41],respect:[847,849,855,875,894,990,1018,1087,1089,1090,1091,1092,1094,1095,1096,1110,1115,1121,1129,1137,1138,1139,1140],respond:43,respons:[43,1141],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,871,872,873,875,894,900,916,925,990,993,1018,1060,1061,1072,1110,1113,1118,1119,1120,1121,1129,1141,1204,1206,1207,1208,1209,1210,1211,1212,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1241],ret:1141,ret_dict:1141,ret_fn:[916,925,926,1141],retain:[1087,1091],retain_grad:[472,473,1087,1091],retreiv:1141,retrn:[990,1067],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1137,1138,1139,1140],return_sequ:[1258,1267],return_st:[1258,1267],rev:[990,1014],revers:[40,41,864,865,990,1014,1080],review:43,right:[40,41,43],rk_e:1287,robot:1241,ronald:1241,root:[43,847,859],round:[294,438,698,847,850,859,990,993,1141],row:[990,1033,1197,1198],rule:[43,875,900,990,993,1121,1129],run:[43,916,925,1087,1089,1090,1094,1137,1138,1139,1140,1141,1241,1242,1258,1269,1270,1271],safe:[916,925,1141],safety_factor:[916,1141],same:[15,16,17,40,41,43,839,841,847,850,861,862,864,865,868,869,916,925,926,960,961,966,970,990,991,1006,1021,1022,1025,1026,1052,1054,1059,1060,1061,1072,1086,1087,1093,1098,1110,1116,1121,1125,1137,1138,1139,1141,1204,1205,1222,1223,1224,1225,1226,1227,1228,1229,1241,1258,1259,1260,1261,1262,1263,1264,1265,1283,1287],same_arrai:[40,41],sampl:[990,1042,1103,1104,1197,1198,1200,1201,1222,1230,1241,1258,1266],satisfi:[990,997,1110,1112,1117],save:[40,41,990,1065,1076,1103,1105,1270,1271],save_dir:[436,437,916,931,1141],save_weight:[1270,1271],scalar:[861,863,990,1003,1052,1079,1083],scale:[916,958,959,1087,1095,1141,1222,1230,1233,1234,1239,1240,1258,1266,1269,1274,1277],scaled_dot_product_attent:1222,scatter:[990,1052,1060,1061],scatter_flat:[130,294,438,567,698,990],scatter_nd:[130,294,438,567,698,990],scene:[1087,1090,1092,1094,1095,1096],schemat:1241,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,847,849,855,861,862,916,947,990,998,1010,1018,1056,1064,1074,1087,1089,1090,1094,1137,1139,1141,1274,1275,1276],secondli:1287,sector:[847,848],see:[43,59,394,436,437,488,847,849,855,861,863,871,872,873,875,894,900,916,928,929,930,931,966,990,993,1043,1044,1087,1121,1129,1241,1249,1251,1252,1254,1255,1257],seed:[40,41,176,488,801,1197],seed_valu:[40,41,488,1197,1202],seem:1241,seen_set:[990,1031],select:[990,997,1069,1284,1287],self:[40,41,43,59,394,436,437,875,894,900,916,928,929,930,931,966,1087,1141,1241,1249,1251,1252,1254,1255,1257,1274,1278,1283,1287],self_i:[875,894],sent:1141,seper:[43,990,1023],seq:[40,41,42,1204,1205,1270,1271],sequenc:[15,16,17,40,41,42,43,488,914,915,916,925,926,935,936,937,938,939,940,941,942,945,946,960,966,970,990,993,997,999,1001,1006,1007,1033,1045,1048,1053,1057,1058,1061,1068,1072,1075,1080,1085,1087,1091,1103,1107,1108,1110,1113,1141,1185,1196,1197,1199,1201,1204,1206,1207,1208,1209,1210,1211,1212,1222,1223,1224,1225,1226,1227,1228,1229,1239,1240,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1270,1271,1272,1273,1274,1278,1280,1281],sequenti:1241,seri:43,set:[15,18,19,40,41,868,869,916,945,946,958,959,960,990,992,1013,1033,1062,1063,1064,1065,1087,1090,1092,1093,1094,1095,1096,1110,1113,1141,1185,1186,1193,1195,1196,1197,1198,1202,1204,1206,1207,1208,1209,1210,1211,1212,1241,1258,1267,1274,1275,1276,1277,1278,1279,1284,1287],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:916,set_default_dtyp:966,set_default_float_dtyp:966,set_default_int_dtyp:966,set_default_nod:1141,set_exception_debug_mod:44,set_framework:[40,41,43,59,1141,1241,1283,1284,1287],set_ivy_backend:[40,41],set_min_bas:990,set_min_denomin:990,set_nest_at_index:1185,set_nest_at_indic:1185,set_queue_timeout:990,set_split_factor:[916,1141],set_stat:[1274,1275,1276,1277,1278,1279],set_tmp_dir:990,set_with_grad:1087,setter:1141,sever:1287,sgd:[1241,1274],shape0:1141,shape:[40,41,43,390,391,393,438,451,466,488,698,839,840,841,842,861,862,864,865,868,869,916,928,966,970,990,991,1001,1006,1007,1020,1021,1022,1024,1026,1030,1033,1052,1053,1054,1057,1058,1059,1060,1061,1067,1069,1072,1085,1086,1103,1107,1110,1112,1115,1121,1125,1126,1141,1197,1199,1200,1201,1204,1205,1222,1224,1226,1228,1258,1260,1261,1262,1263,1264,1265,1272,1273],shape_slic:[40,41],shape_to_tupl:990,share:[40,41,1241,1284],shift:1141,should:[40,41,42,43,488,839,841,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,875,894,900,914,915,916,990,1001,1002,1008,1052,1058,1087,1090,1092,1094,1095,1096,1121,1129,1141,1204,1205,1241],show:[40,41,1241,1287],show_mod_in_top_mod:[1270,1271],show_structur:[1270,1271],show_sub_contain:[40,41],show_v:[1270,1271],show_v_in_top_v:[1270,1271],shown:[40,41],shp:1141,shuffl:[40,41,176,488,801,1197],shuffle_h5_fil:[40,41],side:43,sigmoid:[817,1214,1241,1283],signatur:[43,59,394,436,437,438,472,477,481,485,486,488,916,928,929,930,931,966,1087,1249,1251,1252,1254,1255,1257],signific:1287,similar:[43,1222,1233,1258,1269],similarli:[1110,1115],simpl:[43,990,1019,1241,1284,1287],simpler:43,simplest:1284,simpli:[40,41,43,1241,1284,1287],simultan:1241,sin:[786,990,1023,1121,1135,1284],sinco:1284,sine:[847,848,1121,1124,1133,1134],singl:[40,41,914,915,916,925,926,945,946,947,948,990,1069,1079,1083,1103,1108,1141,1197,1200,1201,1204,1206,1207,1208,1209,1210,1211,1212,1241,1284,1287],singleton:[861,863,871,872,873],singular:[1110,1116],sinh:[786,1121],siren:[1241,1249],situat:43,size:[40,41,42,438,465,861,862,871,872,873,916,939,940,941,942,958,959,960,990,993,1001,1043,1044,1060,1068,1103,1107,1110,1113,1116,1141,1197,1198,1200,1201,1204,1206,1207,1208,1209,1210,1211,1212,1258,1259,1260],size_ordered_arrai:[40,41],skew:[1110,1117],skinv:1287,skip:[40,41],slice:[40,41,990,1025,1026,1141,1185,1192],slice_kei:[40,41],slice_obj:[40,41,1141],slice_via_kei:[40,41],slide:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],slope:[1214,1216],small:[1235,1236,1237,1238,1239,1240,1241,1272,1273,1284],smaller:[990,1003],smallest:[40,41,843,844,845,847,850,990,996],smallest_norm:[394,843,844],softmax:[192,499,817,1214,1222,1233,1234],softplu:[817,1214],solut:43,solv:1287,some:[40,41,43,990,993,1087,1089,1090,1092,1094,1095,1096,1101,1222,1230,1241,1258,1266,1284,1287],some_backend:43,some_namespac:43,someth:[43,1287],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,869,1110,1116,1141],sort_by_kei:[40,41],sorting_funct:[868,869],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,864,865,868,869,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,918,919,920,921,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1285,1286,1287],space:[990,993,1023,1043,1044],spars:[1235,1238],sparse_cross_entropi:1235,spawn:[990,1050],special:[43,847,848,850,851,852,857,859],specif:[40,41,43,847,858,916,958,990,1008,1015,1016,1017,1050,1137,1138,1139,1140,1141,1197,1203,1241,1270,1271,1283,1284],specifc:[1197,1198],specifi:[40,41,43,839,840,841,842,861,862,863,864,865,868,869,871,872,873,916,935,936,937,938,939,940,941,942,945,946,950,952,956,959,960,961,966,970,972,990,993,995,996,997,1003,1006,1007,1024,1025,1026,1032,1043,1044,1072,1082,1085,1110,1113,1141,1185,1190,1191,1195,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212],sphinx:43,split:[40,41,130,294,438,567,698,916,925,939,940,941,942,958,959,960,990,1045,1141],split_arg:1141,split_factor:[916,925,1141],split_func_cal:[916,1141],split_siz:1141,spread:[916,948,1141],sqrt:[86,217,399,522,652,847,861,863],squar:[847,859,990,1033,1110,1112],squeez:[130,294,438,567,698,990],stabil:[868,869,990,1070,1071],stabl:[868,869,990,1028,1029,1062,1063,1070,1071],stable_divid:990,stable_pow:990,stack:[40,41,294,698,839,841,861,862,990,1103,1108,1185,1186,1193,1258,1267],stack_imag:[166,348,477,610,771,1103],stacked_dim_s:1141,stage:43,standard:[40,41,843,844,1197,1200,1204,1210,1239,1240,1241,1242,1272,1273],start:[40,41,43,436,437,438,439,461,462,488,916,931,990,993,1043,1044,1141,1241,1284],starting_index:[40,41],starting_split_factor:[916,1141],state:[1141,1222,1232,1241,1244,1245,1246,1247,1248,1249,1251,1252,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283],statement:1284,static_argnam:[438,444,914,915],static_argnum:[438,444,914,915],std:[488,1197,1200],step:[40,41,438,439,916,990,993,1043,1044,1087,1089,1090,1092,1094,1095,1096,1137,1138,1139,1140,1141,1241,1274,1275,1276,1277,1278,1279,1283,1287],stephen:1241,stick:1241,still:[40,41,43],stochast:[1274,1279],stop:[40,41,436,437,438,439,461,462,916,931,960,990,993,1043,1044,1087,1090,1092,1094,1095,1096,1098,1137,1138,1139,1140,1141,1274,1275,1276,1277,1278,1279],stop_gradi:[40,41,343,472,605,765,916,960,1087,1090,1092,1094,1095,1096,1137,1138,1139,1140,1141,1274,1275,1276,1277,1278,1279],stopiter:1141,store:[40,41,990,1023,1068,1087,1101,1270,1271],store_var:[1270,1271],str:[15,16,17,40,41,42,43,390,391,393,394,396,397,843,844,845,914,915,916,925,926,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,960,966,971,972,977,978,979,980,981,982,989,990,997,1013,1015,1016,1017,1048,1050,1053,1060,1061,1110,1113,1115,1137,1138,1139,1140,1141,1185,1189,1204,1205,1247,1248,1258,1269,1270,1271],str_to_nod:1141,straight:1284,strength:[1241,1287],stride:[1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],string:[40,41,43,916,932,934,943,944,949,955,961,962,965,966,970,976,978,979,980,989,990,993,997,1013,1033,1053,1054,1086,1141,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271],structur:[40,41,42,43,990,1008],structural_diff:[40,41],style:43,sub:[40,41,43,861,862,916,939,940,945,946,947,948,990,1068,1137,1138,1139,1140,1141],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1141,sub_mod:[1270,1271],sub_modul:[1280,1281],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1241,1242,1272,1273,1280,1281],subsequ:43,subset:43,substr:[40,41],suffici:[1110,1115],suggest:1241,suitabl:[1103,1108],sum:[40,41,438,465,466,861,863,916,945,946,947,948,960,990,1012,1016,1060,1061,1141,1204,1205,1211],summat:[40,41,1204,1205],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,395,396,397,400,401,402,403,404,405,406,407,408,409,410,411,414,415,417,421,424,425,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,476,478,479,480,482,483,484,487,489,491,492,493,494,495,496,497,500,501,503,504,505,506,507,508,509,514,515,516,518,519,520,523,524,525,526,527,528,529,530,531,532,533,534,537,538,540,544,547,548,556,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,606,607,608,609,611,612,613,615,616,617,618,622,623,624,625,627,628,629,630,631,632,633,637,638,639,644,645,646,648,649,650,653,654,655,656,657,658,659,660,661,662,663,664,667,668,670,674,677,678,686,691,692,693,694,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,766,767,768,769,770,772,773,774,776,777,778,779,780,781,782,784,785,787,788,789,790,791,792,793,794,795,796,797,798,799,800,802,803,804,805,806,807,809,810,811,812,813,814,815,818,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,840,841,842,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,862,863,865,869,872,873,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1240,1241,1245,1246,1248,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1286,1287],supports_inplac:990,suppos:1287,sure:43,svd:[352,614,775,1110],swap:[40,41,990,1074],swapax:[40,41,567,698,990,1287],symmetr:[1110,1117],syntax:[436,438,472,477,481,485,486,488],tab:1241,take:[43,990,1042],taken:[43,861,862,1204,1206,1207,1208,1210,1212],tan:[786,1121,1125],tangent:[1121,1125,1126,1127,1135,1136,1214,1221],tanh:[786,817,1121,1214],target:[40,41,916,932,935,936,937,938,939,940,941,942,945,946,947,948,961,1141,1241],target_dict:[40,41],task:[43,1137,1138,1139,1140],team:[43,1287],templat:1241,temporari:[990,1065,1076],tensor:[40,41,43,438,465,466,916,934,966,976,990,993,995,996,1001,1043,1044,1047,1049,1052,1053,1054,1058,1060,1061,1068,1086,1141,1197,1198,1199,1222,1230,1232,1241,1258,1266,1268,1274,1275,1276,1277,1278,1279,1283,1284],tensorflow:[43,1110,1115,1222,1224,1226,1228,1241,1258,1260,1262,1264,1284,1287],term:[40,41,43,1222,1232,1241,1258,1268],termcolor:[40,41,42],termin:[40,41,42,1141],test:[43,847,853,854,871,872,873,966,981,982],test_array_api:43,tf_concat:1241,than:[40,41,43,843,844,847,850,857,859,861,863,864,865,916,960,990,993,1003,1021,1040,1047,1069,1072,1087,1093,1141,1197,1201,1241,1284],thei:[40,41,43,1121,1126,1137,1138,1139,1197,1198,1241,1280,1281,1284],them:[1241,1287],themselv:[1185,1186],therefor:43,thi:[40,41,42,43,847,858,916,938,942,948,955,960,965,990,993,1023,1056,1058,1064,1087,1090,1092,1093,1094,1095,1096,1101,1110,1113,1141,1185,1189,1194,1204,1206,1207,1208,1209,1210,1211,1212,1222,1231,1241,1270,1271,1274,1275,1276,1277,1278,1279,1283,1284,1287],thing:[43,1241],those:[40,41,43,990,1003,1087,1101,1110,1116,1141],though:43,thought:43,threshold:[990,1047,1049],through:[40,41,43],tick:43,tickbox:43,tile:[294,567,698,990],time:[43,990,1075,1087,1090,1094,1137,1138,1139,1140,1141,1197,1198,1222,1232,1258,1269,1270,1271,1287],timeout:[40,41,42,916,925,926,990,1056,1064,1141],timestep:[1222,1232,1258,1267],titl:[43,1241],tmp_dir:990,tmp_dr:[990,1065],to_appli:[40,41],to_clon:[916,1141],to_dev:[40,41,123,288,436,560,690,916],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[916,1141],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1241],to_ivy_modul:[194,825,1241,1247],to_json:[40,41],to_kv_fn:[1222,1233],to_kv_v:[1222,1233],to_list:[40,41,438,698,990],to_multi_dev:[40,41],to_mut:[1185,1187,1194],to_n:[15,40,41,1241],to_nod:1141,to_numpi:[40,41,438,698,990,1241,1283],to_out_fn:[1222,1233],to_out_v:[1222,1233],to_q_fn:[1222,1233],to_q_v:[1222,1233],to_raw:[40,41],to_scalar:[438,698,990],todo:[1141,1241,1242],togeth:[40,41,1280,1281],tool:[1241,1284],top_mod:[1270,1271],topic:1287,torch:[43,914,915,1241,1283,1284,1287],torch_concat:1241,torchfcmodel:1283,total:[40,41,42,916,962,1141],total_mem_on_dev:916,total_mem_on_nod:1141,tpu:[916,963,1141],tpu_is_avail:[436,560,690,916,1141],tpye:[966,977],trace:[40,41,990,1040],track:[43,916,1141,1185,1194,1270,1271],track_submod_call_ord:[1270,1271],track_submod_ret:[1270,1271],trail:[1272,1273],train:[1087,1089,1090,1094,1241,1242],trainabl:[1087,1093,1241,1242,1247,1248,1270,1271,1280],trainer:1241,tran:1287,transform:[1222,1230,1231],transpos:[40,41,130,294,438,698,916,947,990,1141,1222,1224,1226,1228,1258,1260,1262,1264],travers:[15,18,19,40,41,1185,1194],treat:[40,41,914,915],tri:[40,41],triangular:[839,841],trigonometr:[1121,1122,1125,1133],tril:[77,208,390,513,643,839],trim_kei:[40,41],trust:[1087,1094,1274,1276],truth:[847,855,875,894,990,1018,1118,1119,1120],try_else_non:990,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[916,1141],tune_dev_alloc:916,tune_dev_split:916,tune_node_alloc:1141,tune_node_split:1141,tune_step:[916,1141],tupl:[15,16,17,18,19,40,41,43,390,391,393,839,840,842,861,863,864,865,871,872,873,914,915,990,1007,1023,1024,1067,1085,1141,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1199,1204,1206,1207,1208,1209,1210,1211,1212],tutori:43,two:[40,41,839,841,861,862,990,993,998,1010,1046,1074,1110,1113,1116],type:[15,18,40,41,42,43,59,396,397,436,437,839,840,841,842,844,845,847,848,849,850,851,852,853,854,855,857,858,859,861,862,863,864,865,868,869,871,872,873,875,894,900,916,928,929,930,931,943,944,948,960,966,970,971,972,976,977,978,979,980,981,982,989,990,991,993,997,1006,1008,1018,1021,1022,1024,1033,1040,1052,1053,1054,1059,1073,1083,1086,1087,1093,1098,1121,1129,1141,1241,1249,1251,1252,1254,1255,1257,1270,1271,1284],types_to_iteratively_nest:[40,41,42],uint8:[1103,1105,1109],uint8_img_to_float_img:1103,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[847,849],underwai:43,unecessari:43,unfairli:43,unif:1141,unifi:[40,41,916,945,946,947,948,960,1141,1241],uniform:[40,41,1197,1198,1200,1201,1249,1251,1252,1255,1256],uniformli:[1197,1199,1201],unify_arrai:1141,unify_it:1141,unify_nest:1141,union:[15,18,19,40,41,43,390,391,393,394,396,397,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,856,857,858,859,861,863,864,865,868,869,871,872,873,875,894,900,914,915,916,934,939,940,941,942,960,961,966,970,971,972,976,977,978,979,980,981,982,989,990,991,992,993,995,996,997,998,999,1001,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1041,1042,1043,1044,1046,1047,1048,1049,1052,1053,1054,1057,1058,1059,1060,1061,1066,1067,1068,1069,1072,1074,1075,1077,1078,1079,1080,1082,1083,1084,1085,1086,1141,1185,1186,1187,1193,1194],uniqu:[916,925,926,1137,1138,1139,1140,1141,1185,1189],unique_kwarg:1141,unit:[43,916,1121,1122,1124,1141,1214,1215,1216,1217],unitari:[1110,1116],unless:[990,1052,1054,1086],unlik:[916,1141],unnorm:[1197,1198],unpack:[990,1082],unrol:[1222,1232],unset:1284,unset_debug_mod:44,unset_default_devic:916,unset_default_dtyp:966,unset_default_float_dtyp:966,unset_default_int_dtyp:966,unset_framework:[59,1284],unset_with_grad:1087,unstack:[40,41,130,294,438,567,698,990],until:43,unus:[914,915],updat:[40,41,438,465,466,916,925,990,1038,1060,1061,1087,1089,1090,1092,1094,1095,1096,1137,1138,1139,1141,1185,1190,1191,1195,1196,1222,1232,1241,1242,1247,1248,1274,1275,1276,1277,1278,1279,1284,1287],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1197,1201],upper_depth:[1270,1271],upstream:43,usabl:[1241,1287],usag:[916,960,1141],use:[40,41,42,43,488,916,925,926,951,963,990,1057,1070,1071,1110,1115,1141,1222,1233,1239,1240,1241,1272,1273,1284,1287],used:[40,41,43,488,861,862,916,925,955,958,959,965,966,977,990,1028,1029,1045,1054,1060,1061,1062,1063,1086,1087,1094,1095,1110,1113,1137,1138,1139,1140,1141,1185,1194,1258,1269,1274,1276,1277,1283,1284],used_dev:[916,925],used_mem_on_dev:916,used_mem_on_nod:1141,used_node_str:1141,used_node_strs_dict:1141,useful:[40,41,916,960,1141,1222,1231,1241,1284],user:[1241,1258,1269,1270,1271,1284,1287],uses:1241,using:[40,41,43,1087,1089,1090,1185,1188,1192,1204,1205,1222,1230,1234,1241,1258,1266,1283,1284,1287],util:[916,949,1141],utility_funct:[871,872,873],v_with_top_v_key_chain:[1270,1271],val:[40,41,438,456,457,458,875,910,990,1036,1037,1038,1062,1063],valid:[871,872,873,966,971,990,1070,1071,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],valid_dtyp:966,valu:[40,41,438,847,850,855,861,863,868,869,875,894,916,928,959,960,990,991,993,995,996,1003,1004,1005,1007,1008,1014,1018,1023,1024,1025,1026,1041,1043,1044,1047,1049,1056,1057,1058,1059,1060,1061,1062,1063,1064,1080,1083,1084,1085,1087,1091,1094,1103,1109,1110,1116,1118,1119,1120,1121,1130,1131,1132,1137,1138,1139,1141,1185,1189,1190,1191,1195,1196,1197,1200,1201,1204,1206,1208,1222,1233,1234,1239,1240,1258,1269,1272,1273,1274,1276],value_is_nan:990,vanilla:[1137,1139],var_shap:1249,variabl:[15,16,17,18,19,40,41,343,472,605,765,990,1000,1036,1037,1038,1039,1040,1073,1087,1090,1091,1092,1093,1094,1095,1096,1098,1101,1137,1138,1139,1140,1222,1233,1239,1240,1247,1248,1249,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],variable_data:[472,765,1087],varianc:[40,41,1204,1212,1287],varieti:1284,variou:[43,1241],vector:[40,41,481,484,861,863,990,1005,1010,1110,1116,1117,1222,1231,1258,1268],vector_norm:[40,41,100,226,413,536,666,861],vector_to_skew_symmetric_matrix:[170,352,481,614,775,1110],verbos:1286,veri:[43,1241],verifi:43,version:43,via:[1185,1186,1193,1284],view:[1103,1108],vision:1241,visual:1284,volum:[1222,1227],vw_tm1:[1087,1090,1094],wai:[1284,1287],wait:[40,41,42,43],want:[43,1241,1284,1287],warn:[59,66,67,68,69,70],warp:[477,478,1103,1104],watch:1283,websit:43,weight:[1087,1089,1090,1092,1094,1095,1096,1222,1231,1232,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1274,1276,1277],weight_initi:[1258,1259,1260,1261,1262,1263,1264,1265,1267,1268],weights_path:[1270,1271],well:[40,41,990,1032],were:[40,41,1141],what:[43,1241],when:[40,41,42,43,916,990,1002,1071,1084,1110,1116,1141,1241,1270,1271,1284,1287],where:[40,41,43,294,438,698,847,856,871,872,873,875,900,990,993,1001,1003,1007,1020,1034,1041,1052,1085,1110,1116,1185,1186,1193,1197,1198],wherea:43,wherebi:[1185,1194],whether:[15,18,19,40,41,42,847,854,871,872,873,914,915,916,934,947,951,955,960,963,965,966,976,980,981,982,989,990,992,998,999,1011,1014,1019,1023,1030,1032,1035,1039,1040,1045,1066,1073,1082,1083,1087,1090,1091,1092,1093,1094,1095,1096,1098,1137,1138,1139,1140,1141,1185,1186,1187,1189,1193,1194,1197,1198,1214,1215,1222,1230,1241,1247,1248,1258,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279],which:[40,41,42,43,488,839,840,841,842,843,844,845,861,862,863,864,865,868,869,871,872,873,914,915,916,925,926,934,939,940,941,942,945,946,947,948,950,952,956,958,959,960,966,971,976,980,989,990,993,997,1006,1008,1010,1011,1012,1014,1024,1025,1026,1027,1033,1034,1042,1043,1044,1051,1052,1053,1054,1055,1057,1060,1061,1068,1072,1082,1084,1086,1087,1090,1091,1092,1094,1095,1096,1098,1100,1101,1103,1105,1110,1113,1121,1126,1141,1185,1189,1190,1191,1195,1196,1197,1198,1199,1200,1201,1204,1206,1207,1208,1209,1210,1211,1212,1214,1219,1222,1233,1234,1241,1247,1248,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1283,1284],whilst:43,whitespac:[40,41,42],who:43,whose:[43,839,841,847,848,851,852,861,862,864,865,875,900,990,997,1002,1204,1205,1206,1207,1208,1210,1212],why:[1241,1242],width:[1103,1108],wiki:1287,wikipedia:1287,window:[1103,1108,1222,1223,1224,1225,1226,1227,1228,1229,1258,1259,1260,1261,1262,1263,1264,1265],wise:[40,41,43,847,849,855,858,875,894,900,990,1003,1018,1021,1022,1047,1049,1059,1087,1090,1092,1094,1096,1118,1119,1120,1121,1122,1124,1125,1126,1129,1130,1131,1132,1133,1135,1214,1215,1216,1217,1218,1219,1220,1221],wish:1284,with_bia:[1258,1268],with_cal:[990,1014],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1087,1097],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1141,with_partial_v:[1270,1271],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,438,467,990,1068,1141],with_to_kv_fn:[1258,1269],with_to_out_fn:[1258,1269],with_to_q_fn:[1258,1269],within:[15,18,19,43,990,993,1110,1116,1197,1201],without:[40,41,43,990,1056,1058,1064,1185,1187,1284],wonder:1241,word:[15,16,17,990,993,1197,1201,1247,1248],work:[43,1283],worker:[916,925,926,1141],worker_class:[916,925,926,1141],worker_kwarg:1141,would:[43,1214,1219,1241,1284,1287],wrap:[15,40,41,42,43,436,438,472,477,481,485,486,488,990,1002,1087,1101,1241],wrapper:43,write:[40,41,43,1241,1242,1287],written:[43,1241,1287],ws_new:[1087,1090,1092,1094,1095,1096],x1_i:[847,849,855,990,1018,1121,1129],x2_i:[847,849,855,990,1018,1121,1129],x_feat_dim:[1222,1233],x_i:[847,848,850,851,852,853,854,857,858,859],x_in:[1241,1283],x_inv:[1110,1112],x_max:[438,990,1003],x_min:[438,990,1003],x_sub:1141,xkk:1287,xkkm1:1287,xkm1km1:1287,xs0:1141,xs_t:1141,year:[1241,1287],yet:[1185,1194,1287],yield:[990,1084],you:[43,1241,1283,1284,1287],your:[1241,1242,1283,1284,1287],your_awesome_project:1284,yourself:[43,1241],yourslef:43,youtub:43,zero:[40,41,77,208,390,513,643,839,841,847,858,861,863,871,872,873,990,1007,1052,1054,1060,1061,1085,1086,1087,1089,1090,1094,1095,1222,1230,1241,1249,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1274,1275,1276,1277],zero_pad:[294,438,567,698,990],zeros_lik:[130,294,438,567,698,990],zip:1141,zk_e:1287},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1014,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,229,231,232,233,235,236,390,394,399,412,416,418,419,420,422,423,513,517,522,535,539,541,542,543,545,546,643,647,652,665,669,671,672,673,675,676,839,843,847,860,864,866,867,868,870,871],Ones:1254,Using:1284,abs:[295,568,699,991],aco:[787,1122],acosh:[788,1123],activ:[192,377,499,635,817,1214,1244],adam:1275,adam_step:1089,adam_upd:1090,algebra:[100,170,226,352,413,481,536,614,666,775,861],all:[111,237,424,547,677,872],all_equ:992,all_nested_indic:1186,ani:[112,238,425,548,678,873],api:[0,43,75,114,206,240,388,427,511,550,641,680,837],arang:[131,296,439,569,700,993],arg_nam:994,argmax:[132,440,570,701,995],argmin:[133,441,571,702,996],args_to_ivi:16,args_to_n:17,argsort:[108,234,421,544,674,869],arithmet:[1,115,241,428,551,681],arrai:[0,3,43,75,113,114,116,134,206,239,240,242,249,297,388,426,427,429,442,511,549,550,552,572,641,679,680,682,703,837,875,997],array_equ:[298,704,998],arrays_equ:999,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[789,1124],asinh:[87,400,523,653,848],assert_supports_inplac:1000,atan2:[791,1126],atan:[790,1125],atanh:[792,1127],attribut:[5,117,243,430,553,683],backend:[43,73],bilinear_resampl:[167,349,478,611,772,1104],binary_cross_entropi:1236,bitwis:[7,118,244,431,554,684],bitwise_and:[88,218,401,524,654,849],broadcast_to:[299,705,1001],builder:51,builtin:[113,239,249,426,549,679,875],builtin_ab:[250,876],builtin_add:[251,877],builtin_and:[252,878],builtin_bool:[253,879],builtin_contain:[254,880],builtin_deepcopi:[255,881],builtin_dir:[256,882],builtin_eq:[257,883],builtin_float:[258,884],builtin_floordiv:[259,885],builtin_g:[260,886],builtin_getattr:[261,887],builtin_getattribut:[262,888],builtin_getitem:[263,889],builtin_gt:[264,890],builtin_int:[265,891],builtin_invert:[266,892],builtin_l:[267,893],builtin_lt:[268,556,686,894],builtin_mul:[269,895],builtin_n:[270,896],builtin_neg:[271,897],builtin_or:[272,898],builtin_po:[273,899],builtin_pow:[274,900],builtin_radd:[275,901],builtin_rand:[276,902],builtin_rfloordiv:[277,903],builtin_rmul:[278,904],builtin_ror:[279,905],builtin_rpow:[280,906],builtin_rsub:[281,907],builtin_rtruediv:[282,908],builtin_rxor:[283,909],builtin_setitem:[284,910],builtin_sub:[285,911],builtin_truediv:[286,912],builtin_xor:[287,913],cache_fn:1002,cast:[135,300,443,573,706,970],ceil:[89,219,402,525,655,850],choleski:[776,1111],choose_random_framework:61,citat:1241,clear_framework_stack:62,clear_mem_on_dev:[692,932],clip:[301,707,1003],clip_matrix_norm:1004,clip_vector_norm:1005,clone:1156,clone_arrai:1157,clone_it:1158,clone_nest:1159,clonedit:1143,cloneditem:1142,clonednest:1144,closest_valid_dtyp:971,code:1287,comparison:[9,119,245,432,555,685],compil:[302,444,708,914,915],concaten:[136,303,445,574,709,1006],constant:[76,207,389,512,642,838],constant_pad:[304,575,710,1007],contain:[40,41],container_typ:[711,1008],content:1241,contribut:43,conv1d:[198,380,503,829,1223,1259],conv1d_transpos:[199,381,504,830,1224],conv1dtranspos:1260,conv2d:[200,382,505,637,831,1225,1261],conv2d_transpos:[201,383,506,832,1226],conv2dtranspos:1262,conv3d:[202,384,507,638,833,1227,1263],conv3d_transpos:[203,385,508,834,1228],conv3dtranspos:1264,convers:15,convert:[194,825,1247],convert_dtyp:972,copy_arrai:[712,1009],copy_nest:1187,core:[122,248,435,559,689,874],cos:[90,403,526,656,851],cosh:[91,404,527,657,793,852,1128],cprint:1286,creat:43,creation:[77,208,390,513,643,839],cross:[305,713,1010],cross_entropi:1237,cumprod:[137,306,446,714,1011],cumsum:[715,1012],current_framework:63,current_framework_str:[716,1013],data:[81,85,212,216,394,398,517,521,647,651,843,846],debug_mod:45,debugg:44,default_devic:933,default_dtyp:973,default_float_dtyp:974,default_int_dtyp:975,default_nod:1160,depthwise_conv2d:[204,386,509,639,835,1229],depthwiseconv2d:1265,design:43,dev:[125,290,562,693,934],dev_clon:935,dev_clone_arrai:936,dev_clone_it:937,dev_clone_nest:938,dev_dist:939,dev_dist_arrai:940,dev_dist_it:941,dev_dist_nest:942,dev_from_str:[126,291,563,694,943],dev_to_str:[127,292,564,695,944],dev_unifi:945,dev_unify_arrai:946,dev_unify_it:947,dev_unify_nest:948,dev_util:949,devclonedit:919,devcloneditem:918,devclonednest:920,devdistit:922,devdistitem:921,devdistnest:923,devic:[20,123,288,436,560,690,916],devmapp:925,devmappermultiproc:926,diagon:[101,227,414,537,667,862],distribute_nest:1161,divid:1129,document:1241,dropout:[1230,1266],dtype:[138,307,447,576,717,966,976],dtype_bit:[139,308,448,577,718,977],dtype_from_str:[140,309,449,578,719,978],dtype_to_str:[141,310,450,579,720,979],ecosystem:52,einops_rearrang:1015,einops_reduc:1016,einops_repeat:1017,einsum:[184,368,491,627,809,1205],elementwis:[86,217,399,522,652,847],equal:[580,721,1018],erf:[487,794,1130],execute_with_gradi:[164,344,473,606,766,1091],exist:1019,exp:[795,1131],expand_dim:[311,722,1020],finfo:[83,214,396,519,649,844],firstlayersiren:1251,flip:[104,230,417,540,670,865],float_img_to_uint8_img:1105,floor:[312,723,1021],floormod:[313,724,1022],fomaml_step:1138,fork:43,fourier_encod:1023,framework:59,full:[142,314,451,581,725,1024],func:72,gather:[143,315,452,582,726,1025],gather_nd:[144,316,453,583,727,1026],geglu:1245,gelu:[378,500,818,1215,1246],gener:[22,130,294,438,567,698,990],get_all_arrays_in_memori:1027,get_all_arrays_on_dev:950,get_framework:64,get_min_bas:1028,get_min_denomin:1029,get_num_dim:[728,1030],get_referrers_recurs:1031,glorotuniform:1252,gpu_is_avail:[951,1162],gradient:[24,163,343,472,605,765,1087],gradient_descent_upd:1092,gradient_imag:[168,350,479,612,773,1106],gym:53,handler:59,has_nan:1032,ident:[145,317,454,584,729,1033],iinfo:[84,215,397,520,650,845],imag:[26,166,348,477,610,771,1103],index_nest:1188,indices_wher:[146,318,455,730,1034],initi:1249,inplac:[11,120,246,433,557,687],inplace_arrays_support:1035,inplace_decr:[147,319,456,585,731,1036],inplace_incr:[148,320,457,586,732,1037],inplace_upd:[149,321,458,587,733,1038],inplace_variables_support:1039,inv:[777,1112],invalid_dtyp:980,is_arrai:[150,322,459,588,734,1040],is_float_dtyp:981,is_int_dtyp:982,is_vari:[165,345,474,607,767,1093],isfinit:[92,220,405,528,658,853],isinf:[323,589,735,1041],isnan:[93,221,406,529,659,854],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,836,1283,1284,1287],ivymodul:[195,826],jax:74,keep:43,lamb:1276,lamb_upd:1094,lar:1277,lars_upd:1095,layer:[197,379,502,636,828,1222,1258],layer_norm:1240,layernorm:1273,leaky_relu:[819,1216],less:[94,222,407,530,660,855],linalg:[28,1110],linear:[100,170,226,352,413,481,536,614,666,775,861,1231,1268],linear_resampl:[151,324,460,590,736,1042],linspac:[152,325,461,591,737,1043],list:43,log1p:[95,408,531,661,856],log2:[96,409,532,662,857],log:[796,1132],logic:[30,174,358,485,619,783,1118],logical_and:[359,784,1119],logical_not:[97,223,410,533,663,858],logical_or:[360,785,1120],logspac:[153,326,462,592,738,1044],loss:1235,lstm:1267,lstm_updat:1232,maml_step:1139,manipul:[103,229,416,539,669,864],map:1189,map_nest_at_index:1190,map_nest_at_indic:1191,match_kwarg:1045,math:[32,175,361,486,620,786,1121],matmul:[327,593,739,1046],matrix_norm:[171,353,482,615,778,1113],maximum:[740,1047],mech:54,memori:55,meshgrid:[328,741,1048],meta:[34,1137],method:[99,225,412,535,665,860],minimum:[742,1049],model:56,modul:[1270,1271,1283],multi:1141,multi_head_attent:1233,multi_index_nest:1192,multidevcontain:42,multidevit:929,multidevitem:928,multidevnest:930,multiheadattent:1269,multinodeit:1147,multinodeitem:1146,multinodenest:1148,multinomi:[177,363,489,622,802,1198],multiprocess:[743,1050],mxnet:205,nativ:1283,nest:1185,nested_indices_wher:1193,nested_map:1194,network:1283,next:1241,node:[1141,1163],node_dist:1164,node_dist_arrai:1165,node_dist_it:1166,node_str:1167,node_to_str:1168,node_util:1169,nodedistit:1150,nodedistitem:1149,nodedistnest:1151,nodemapp:1153,nodemappermultiproc:1154,norm:[1239,1272],num_arrays_in_memori:1051,num_arrays_on_dev:952,num_cpu_cor:953,num_gpu:[128,954,1170],numpi:387,nutshel:1241,one_hot:[154,463,594,744,1052],ones:[78,209,391,514,644,840,1053],ones_lik:[155,329,464,595,745,1054],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,241,242,244,245,246,247,428,429,431,432,433,434,551,552,554,555,557,558,681,682,684,685,687,688],optim:[1274,1278],optimizer_upd:1096,overview:1241,percent_used_mem_on_dev:955,percent_used_mem_on_nod:1171,pinv:[354,779,1114],portabl:1287,print_all_arrays_in_memori:1055,print_all_arrays_on_dev:956,profil:[124,289,437,561,691,931,1155],pull:43,queue_timeout:1056,randint:[178,364,623,803,1199],random:[36,176,362,488,621,801,1197],random_crop:1107,random_norm:[179,365,624,804,1200],random_uniform:[180,366,625,805,1201],reduce_max:[185,369,492,628,810,1206],reduce_mean:[186,370,493,629,811,1207],reduce_min:[187,371,494,630,812,1208],reduce_prod:[188,372,495,631,813,1209],reduce_std:[373,1210],reduce_sum:[189,374,496,632,814,1211],reduce_var:[190,375,497,633,815,1212],reduct:[38,183,367,490,626,808,1204],reflect:[13,121,247,434,558,688],relu:[820,1217],repeat:[330,746,1057],reptile_step:1140,request:43,reshap:[747,1058],robot:57,round:[331,748,1059],run:1284,scaled_dot_product_attent:1234,scatter_flat:[156,332,465,596,749,1060],scatter_nd:[157,333,466,597,750,1061],search:[105,231,418,541,671,866],seed:[181,806,1202],sequenti:[1280,1281],set:[106,232,419,542,672,867],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:957,set_default_dtyp:983,set_default_float_dtyp:984,set_default_int_dtyp:985,set_default_nod:1172,set_exception_debug_mod:48,set_framework:65,set_min_bas:1062,set_min_denomin:1063,set_nest_at_index:1195,set_nest_at_indic:1196,set_queue_timeout:1064,set_split_factor:[958,1173],set_tmp_dir:1065,set_with_grad:1097,sgd:1279,shape:[751,1066],shape_to_tupl:1067,shuffl:[182,807,1203],sigmoid:[821,1218],signatur:[99,225,412,535,665,860],sin:[797,1133],sinh:[798,1134],siren:1255,softmax:[193,501,822,1219],softplu:[823,1220],sort:[107,233,420,543,673,868],sparse_cross_entropi:1238,split:[158,334,467,598,752,1068],split_factor:[959,1174],split_func_cal:[960,1175],sqrt:[98,224,411,534,664,859],squeez:[159,335,468,599,753,1069],stable_divid:1070,stable_pow:1071,stack:[336,754,1072],stack_imag:[169,351,480,613,774,1108],standard:43,statist:[109,235,422,545,675,870],stop_gradi:[346,475,608,768,1098],str_to_nod:1176,submodul:43,supports_inplac:1073,svd:[356,617,781,1116],swapax:[600,755,1074],tan:[799,1135],tanh:[800,824,1136,1221],tensorflow:510,tile:[337,601,756,1075],tmp_dir:1076,to_dev:[129,293,565,696,961],to_ivi:18,to_ivy_modul:[196,827,1248],to_list:[757,1077],to_n:19,to_nod:1177,to_numpi:[758,1078],to_scalar:[759,1079],todo:43,torch:640,total_mem_on_dev:962,total_mem_on_nod:1178,tpu_is_avail:[566,697,963,1179],train:1283,trainabl:1283,transpos:[160,338,469,760,1080],tree:1241,tril:[79,210,392,515,645,841],try_else_non:1081,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,394,398,517,521,647,651,843,846],uint8_img_to_float_img:1109,unifi:1180,unify_arrai:1181,unify_it:1182,unify_nest:1183,unset_debug_mod:49,unset_default_devic:964,unset_default_dtyp:986,unset_default_float_dtyp:987,unset_default_int_dtyp:988,unset_framework:71,unset_with_grad:1099,unstack:[161,339,470,602,761,1082],updat:43,used_mem_on_dev:965,used_mem_on_nod:1184,util:[110,236,423,546,676,871],valid_dtyp:989,value_is_nan:1083,variabl:[347,476,609,769,1100],variable_data:[770,1101],vector_norm:[102,228,415,538,668,863],vector_to_skew_symmetric_matrix:[173,357,484,618,782,1117],verbos:1285,vision:58,where:[340,762,1084,1241],why:1287,with_grad:1102,wrapper:72,write:1284,your:43,zero:[80,211,393,516,646,842,1257],zero_pad:[341,603,763,1085],zeros_lik:[162,342,471,604,764,1086]}})